<Type Name="Attribute" FullName="System.Attribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="113c5694a86ac36b83791f7fd8f60d0e7a627a7b" />
    <Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/27/2018" />
    <Meta Name="ms.locfileid" Value="50176483" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Attribute : System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Attribute extends System.Object implements class System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Attribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Attribute&#xA;Implements _Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class Attribute abstract : System::Runtime::InteropServices::_Attribute" />
  <TypeSignature Language="F#" Value="type Attribute = class&#xA;    interface _Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Attribute</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Attribute))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="47a31-101">カスタム属性の基本クラスを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="47a31-101">Represents the base class for custom attributes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-102"><xref:System.Attribute>クラスが定義済みのシステム情報またはユーザー定義のカスタム情報をターゲット要素を関連付けます。</span><span class="sxs-lookup"><span data-stu-id="47a31-102">The <xref:System.Attribute> class associates predefined system information or user-defined custom information with a target element.</span></span> <span data-ttu-id="47a31-103">ターゲット要素には、アセンブリ、クラス、コンス トラクター、デリゲート、列挙型、イベント、フィールド、インターフェイス、メソッド、ポータブル実行可能ファイルのモジュール、パラメーター、プロパティ、戻り値、構造体、または別の属性ができます。</span><span class="sxs-lookup"><span data-stu-id="47a31-103">A target element can be an assembly, class, constructor, delegate, enum, event, field, interface, method, portable executable file module, parameter, property, return value, struct, or another attribute.</span></span>  
  
 <span data-ttu-id="47a31-104">属性によって提供される情報は、メタデータとも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="47a31-104">Information provided by an attribute is also known as metadata.</span></span> <span data-ttu-id="47a31-105">メタデータは、プログラムが、データを処理する方法を制御するアプリケーションが実行時に検査できるまたは外部のツールを制御して、実行時の前にする方法、アプリケーション自体が処理または維持します。</span><span class="sxs-lookup"><span data-stu-id="47a31-105">Metadata can be examined at run time by your application to control how your program processes data, or before run time by external tools to control how your application itself is processed or maintained.</span></span> <span data-ttu-id="47a31-106">など、.NET Framework は、事前に定義および実行時の動作を制御する属性の型を使用し、一部のプログラミング言語では、属性の型を使用して、直接ではなく .NET Framework の共通型システムでサポートされる言語機能を表します。</span><span class="sxs-lookup"><span data-stu-id="47a31-106">For example, the .NET Framework predefines and uses attribute types to control run-time behavior, and some programming languages use attribute types to represent language features not directly supported by the .NET Framework common type system.</span></span>  
  
 <span data-ttu-id="47a31-107">すべての属性の型がから直接的または間接的に派生、<xref:System.Attribute>クラス。</span><span class="sxs-lookup"><span data-stu-id="47a31-107">All attribute types derive directly or indirectly from the <xref:System.Attribute> class.</span></span> <span data-ttu-id="47a31-108">すべてのターゲット要素に属性を適用できます。複数の属性は、同じターゲット要素に適用できます。属性は、ターゲット要素から派生する要素によって継承されることができます。</span><span class="sxs-lookup"><span data-stu-id="47a31-108">Attributes can be applied to any target element; multiple attributes can be applied to the same target element; and attributes can be inherited by an element derived from a target element.</span></span> <span data-ttu-id="47a31-109">使用して、<xref:System.AttributeTargets>クラス属性を適用する対象の要素を指定します。</span><span class="sxs-lookup"><span data-stu-id="47a31-109">Use the <xref:System.AttributeTargets> class to specify the target element to which the attribute is applied.</span></span>  
  
 <span data-ttu-id="47a31-110"><xref:System.Attribute>クラスを取得し、カスタム属性をテストする便利なメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="47a31-110">The <xref:System.Attribute> class provides convenient methods to retrieve and test custom attributes.</span></span> <span data-ttu-id="47a31-111">属性の使用方法の詳細については、次を参照してください。[属性の適用](~/docs/standard/attributes/applying-attributes.md)と[属性](~/docs/standard/attributes/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-111">For more information about using attributes, see [Applying Attributes](~/docs/standard/attributes/applying-attributes.md) and [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-112">次のコード例は、の使用を示して<xref:System.Attribute>します。</span><span class="sxs-lookup"><span data-stu-id="47a31-112">The following code example demonstrates the usage of <xref:System.Attribute>.</span></span>  
  
 [!code-cpp[AnimalAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/AnimalAttributes/CPP/customattribute.cpp#1)]
 [!code-csharp[AnimalAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/AnimalAttributes/CS/customattribute.cs#1)]
 [!code-vb[AnimalAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AnimalAttributes/VB/customattribute.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="47a31-113">この型はスレッド セーフです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="47a31-113">This type is thread safe.</span>
      </span>
    </threadsafe>
    <related type="Article" href="http://msdn.microsoft.com/library/dd7604eb-9fa3-4b60-b2dd-b47739fa3148">
      <span data-ttu-id="47a31-114">属性の適用</span>
      <span class="sxs-lookup">
        <span data-stu-id="47a31-114">Applying Attributes</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/attributes/index.md">
      <span data-ttu-id="47a31-115">属性を使用したメタデータの拡張</span>
      <span class="sxs-lookup">
        <span data-stu-id="47a31-115">Extending Metadata Using Attributes</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Attribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Attribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47a31-116">
            <see cref="T:System.Attribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-116">Initializes a new instance of the <see cref="T:System.Attribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-117">このコンス トラクターはクラスの派生クラスによってのみ呼び出す<xref:System.Attribute>します。</span><span class="sxs-lookup"><span data-stu-id="47a31-117">This constructor is only called by classes that derive from <xref:System.Attribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-118">次のコード例は、カスタム パラメーターの定義を示しています。<xref:System.Attribute>クラスのコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-118">The following code example shows the definition of a custom parameter <xref:System.Attribute> class with its constructor.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#2)]
 [!code-csharp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#2)]
 [!code-vb[System.Attribute.GetCustomAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="attribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="47a31-119">このインスタンスまたは <see langword="null" /> と比較する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-119">An <see cref="T:System.Object" /> to compare with this instance or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-120">このインスタンスが、指定されたオブジェクトと等価であるかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-120">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-121">
            <paramref name="obj" /> であり、このインスタンスが同じ型で、フィールド値が同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-121">
              <see langword="true" /> if <paramref name="obj" /> and this instance are of the same type and have identical field values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="47a31-122"><xref:System.Attribute.Equals%2A>メソッドでは、リフレクションを使用して、現在のインスタンスのフィールド情報を取得し、`obj`引数。</span><span class="sxs-lookup"><span data-stu-id="47a31-122">The <xref:System.Attribute.Equals%2A> method uses reflection to retrieve field information for the current instance and the `obj` argument.</span></span> <span data-ttu-id="47a31-123">フィールドの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="47a31-123">It then compares field values.</span></span> 

<span data-ttu-id="47a31-124">派生した独自のクラスを実装するときに<xref:System.Attribute>、オーバーライドすることができます、<xref:System.Attribute.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="47a31-124">When implementing your own class derived from <xref:System.Attribute>, you can override the <xref:System.Attribute.Equals%2A> method.</span></span> <span data-ttu-id="47a31-125">リフレクションを使用しているために、これを実行することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="47a31-125">Because it uses reflection, we recommend that you do so.</span></span> <span data-ttu-id="47a31-126">ただし、オーバーライドでは、参照の等価性 (2 つの引数は、同じオブジェクト インスタンスを表します) または値の等価性 (2 つの引数が同じ型と同じであるフィールドの値を持つ) の標準的なテストを実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="47a31-126">However, your override should perform a standard test for reference equality (the two arguments represent the same object instance) or value equality (the two arguments are of the same type and have identical field values).</span></span> <span data-ttu-id="47a31-127">オーバーライドする 2 つの属性オブジェクトが等しいかどうかを決定するカスタムの比較を実行する場合、<xref:System.Attribute.Match%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="47a31-127">If you want to perform a custom comparison to determine whether two attributes objects are equal, you can override the <xref:System.Attribute.Match%2A> method.</span></span>   

## Examples  
 <span data-ttu-id="47a31-128">次の例は、2 つのカスタム パラメーターを定義します。<xref:System.Attribute>クラス、し、各クラスのいくつかのオブジェクトを作成し、使用して、<xref:System.Attribute.Equals%2A>メソッドを、それらを比較します。</span><span class="sxs-lookup"><span data-stu-id="47a31-128">The following example defines two custom parameter <xref:System.Attribute> classes, then creates several objects of each class and uses the <xref:System.Attribute.Equals%2A> method to compare them.</span></span>  
  
 [!code-cpp[System.Attribute.Equals](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.Equals/CPP/equals.cpp)]
 [!code-csharp[System.Attribute.Equals](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.Equals/CS/equals.cs)]
 [!code-vb[System.Attribute.Equals](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.Equals/VB/equals.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47a31-129">アセンブリ、モジュール、型のメンバー、またはメソッド パラメーターに適用された指定した型のカスタム属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-129">Retrieves a custom attribute of a specified type applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Assembly, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-130">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-130">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-131">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-131">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-132">指定したアセンブリに適用されたカスタム属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-132">Retrieves a custom attribute applied to a specified assembly.</span>
          </span>
          <span data-ttu-id="47a31-133">各パラメーターは、対象のアセンブリと検索対象のカスタム属性の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-133">Parameters specify the assembly and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-134">
            <paramref name="attributeType" /> に適用される <paramref name="element" /> 型の単一のカスタム属性への参照。該当する属性がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-134">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-135">使用して、<xref:System.Attribute.GetCustomAttributes%2A>メソッドが返され、1 つ以上の値を期待する場合または<xref:System.Reflection.AmbiguousMatchException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="47a31-135">Use the <xref:System.Attribute.GetCustomAttributes%2A> method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47a31-136">以降、.NET Framework version 2.0 としたこれらのこのメソッドは、セキュリティ属性に対して属性が、新しいメタデータ形式で格納されている場合を返します。</span><span class="sxs-lookup"><span data-stu-id="47a31-136">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="47a31-137">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-137">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-138">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-138">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-139">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-139">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-140">次のコード例の使用を示しています、<xref:System.Attribute.GetCustomAttribute%2A>メソッドを<xref:System.Reflection.Assembly>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-140">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-141">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-141">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-142">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-142">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="47a31-143">要求された属性が複数見つかりました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-143">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As MemberInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-144">クラスのコンストラクター メンバー、イベント メンバー、フィールド メンバー、メソッド メンバー、またはプロパティ メンバーを記述する <see cref="T:System.Reflection.MemberInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-144">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-145">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-145">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-146">型のメンバーに適用されたカスタム属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-146">Retrieves a custom attribute applied to a member of a type.</span>
          </span>
          <span data-ttu-id="47a31-147">各パラメーターは、対象のメンバーと検索対象のカスタム属性の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-147">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-148">
            <paramref name="attributeType" /> に適用される <paramref name="element" /> 型の単一のカスタム属性への参照。該当する属性がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-148">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-149">戻り値のセクションで説明した同じ方法で、一致が決定<xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="47a31-149">A match is determined in the same way described in the Return Value section of <xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47a31-150">以降、.NET Framework version 2.0 では、このメソッドを返しますセキュリティ属性を型、メソッド、およびコンス トラクターの属性が、新しいメタデータ形式で格納されている場合。</span><span class="sxs-lookup"><span data-stu-id="47a31-150">Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="47a31-151">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-151">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-152">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-152">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-153">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-153">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-154">次のコード例の使用を示しています、<xref:System.Attribute.GetCustomAttribute%2A>メソッドを<xref:System.Reflection.MemberInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-154">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-155">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-155">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-156">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-156">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47a31-157">
            <paramref name="element" />がコンストラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-157">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="47a31-158">要求された属性が複数見つかりました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-158">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="47a31-159">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-159">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Module, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-160">移植可能な実行可能 (PE) ファイルを記述する <see cref="T:System.Reflection.Module" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-160">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-161">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-161">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-162">モジュールに適用されたカスタム属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-162">Retrieves a custom attribute applied to a module.</span>
          </span>
          <span data-ttu-id="47a31-163">各パラメーターは、対象のモジュールと検索対象のカスタム属性の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-163">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-164">
            <paramref name="attributeType" /> に適用される <paramref name="element" /> 型の単一のカスタム属性への参照。該当する属性がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-164">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47a31-165">次のコード例の使用を示しています、<xref:System.Attribute.GetCustomAttribute%2A>メソッドを<xref:System.Reflection.Module>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-165">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-166">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-166">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-167">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-167">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="47a31-168">要求された属性が複数見つかりました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-168">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As ParameterInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-169">クラスのメンバーのパラメーターを記述する <see cref="T:System.Reflection.ParameterInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-169">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-170">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-170">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-171">メソッド パラメーターに適用されたカスタム属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-171">Retrieves a custom attribute applied to a method parameter.</span>
          </span>
          <span data-ttu-id="47a31-172">各パラメーターは、対象のメソッド パラメーターと検索対象のカスタム属性の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-172">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-173">
            <paramref name="attributeType" /> に適用される <paramref name="element" /> 型の単一のカスタム属性への参照。該当する属性がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-173">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-174">場合`element`派生型のメソッド内のパラメーターを表す、戻り値には、同じパラメーターでオーバーライドされる基本メソッドに適用される継承可能なカスタム属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="47a31-174">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-175">次のコード例は、カスタム パラメーターを定義します。<xref:System.Attribute>クラスと派生クラスと派生クラスの基本のメソッドにカスタム属性を適用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-175">The following code example defines a custom parameter <xref:System.Attribute> class and applies the custom attribute to a method in a derived class and the base of the derived class.</span></span> <span data-ttu-id="47a31-176">使用例を示します、<xref:System.Attribute.GetCustomAttribute%2A>属性を返します。</span><span class="sxs-lookup"><span data-stu-id="47a31-176">The example shows the use of the <xref:System.Attribute.GetCustomAttribute%2A> method to return the attributes.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#1)]
 [!code-csharp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#1)]
 [!code-vb[System.Attribute.GetCustomAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-177">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-177">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-178">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-178">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="47a31-179">要求された属性が複数見つかりました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-179">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="47a31-180">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-180">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Assembly, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-181">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-181">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-182">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-182">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-183">このパラメーターは無視され、このメソッドの動作には影響しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-183">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-184">アセンブリに適用されたカスタム属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-184">Retrieves a custom attribute applied to an assembly.</span>
          </span>
          <span data-ttu-id="47a31-185">各パラメーターは、対象のアセンブリ、検索対象のカスタム属性の型、および無視する検索オプションを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-185">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-186">
            <paramref name="attributeType" /> に適用される <paramref name="element" /> 型の単一のカスタム属性への参照。該当する属性がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-186">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="47a31-187">以降、.NET Framework version 2.0 としたこれらのこのメソッドは、セキュリティ属性に対して属性が、新しいメタデータ形式で格納されている場合を返します。</span><span class="sxs-lookup"><span data-stu-id="47a31-187">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="47a31-188">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-188">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-189">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-189">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-190">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-190">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-191">次のコード例の使用を示しています、<xref:System.Attribute.GetCustomAttribute%2A>メソッドを<xref:System.Reflection.Assembly>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-191">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-192">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-192">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-193">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-193">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="47a31-194">要求された属性が複数見つかりました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-194">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As MemberInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-195">クラスのコンストラクター メンバー、イベント メンバー、フィールド メンバー、メソッド メンバー、またはプロパティ メンバーを記述する <see cref="T:System.Reflection.MemberInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-195">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-196">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-196">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-197">
            <see langword="true" /> の場合は、<c>element</c> の先祖のカスタム属性も検索することを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-197">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-198">型のメンバーに適用されたカスタム属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-198">Retrieves a custom attribute applied to a member of a type.</span>
          </span>
          <span data-ttu-id="47a31-199">各パラメーターは、対象のメンバー、検索対象のカスタム属性の型、およびそのメンバーの先祖を検索するかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-199">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-200">
            <paramref name="attributeType" /> に適用される <paramref name="element" /> 型の単一のカスタム属性への参照。該当する属性がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-200">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="47a31-201">以降、.NET Framework version 2.0 では、このメソッドを返しますセキュリティ属性を型、メソッド、およびコンス トラクターの属性が、新しいメタデータ形式で格納されている場合。</span><span class="sxs-lookup"><span data-stu-id="47a31-201">Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="47a31-202">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-202">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-203">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-203">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-204">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-204">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-205">次のコード例の使用を示しています、<xref:System.Attribute.GetCustomAttribute%2A>メソッドを<xref:System.Reflection.MemberInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-205">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-206">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-206">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-207">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-207">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47a31-208">
            <paramref name="element" />がコンストラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-208">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="47a31-209">要求された属性が複数見つかりました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-209">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="47a31-210">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-210">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Module, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-211">移植可能な実行可能 (PE) ファイルを記述する <see cref="T:System.Reflection.Module" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-211">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-212">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-212">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-213">このパラメーターは無視され、このメソッドの動作には影響しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-213">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-214">モジュールに適用されたカスタム属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-214">Retrieves a custom attribute applied to a module.</span>
          </span>
          <span data-ttu-id="47a31-215">各パラメーターは、対象のモジュール、検索対象のカスタム属性の型、および無視する検索オプションを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-215">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-216">
            <paramref name="attributeType" /> に適用される <paramref name="element" /> 型の単一のカスタム属性への参照。該当する属性がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-216">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47a31-217">次のコード例の使用を示しています、<xref:System.Attribute.GetCustomAttribute%2A>メソッドを<xref:System.Reflection.Module>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-217">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-218">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-218">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-219">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-219">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="47a31-220">要求された属性が複数見つかりました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-220">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type * bool -&gt; Attribute" Usage="System.Attribute.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-221">クラスのメンバーのパラメーターを記述する <see cref="T:System.Reflection.ParameterInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-221">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-222">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-222">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-223">
            <see langword="true" /> の場合は、<c>element</c> の先祖のカスタム属性も検索することを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-223">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-224">メソッド パラメーターに適用されたカスタム属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-224">Retrieves a custom attribute applied to a method parameter.</span>
          </span>
          <span data-ttu-id="47a31-225">各パラメーターは、対象のメソッド パラメーター、検索対象のカスタム属性の型、およびそのメソッド パラメーターの先祖を検索するかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-225">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-226">
            <paramref name="attributeType" /> に適用される <paramref name="element" /> 型の単一のカスタム属性への参照。該当する属性がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-226">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-227">場合`element`派生型のメソッド内のパラメーターを表す、戻り値には、同じパラメーターでオーバーライドされる基本メソッドに適用される継承可能なカスタム属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="47a31-227">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-228">次のコード例は、カスタム パラメーターを定義します。<xref:System.Attribute>クラスと派生クラスと派生クラスの基本のメソッドにカスタム属性を適用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-228">The following code example defines a custom parameter <xref:System.Attribute> class and applies the custom attribute to a method in a derived class and the base of the derived class.</span></span> <span data-ttu-id="47a31-229">使用例を示します、<xref:System.Attribute.GetCustomAttribute%2A>属性を返します。</span><span class="sxs-lookup"><span data-stu-id="47a31-229">The example shows the use of the <xref:System.Attribute.GetCustomAttribute%2A> method to return the attributes.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrprminh.cpp#3)]
 [!code-csharp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrprminh.cs#3)]
 [!code-vb[System.Attribute.GetCustomAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrprminh.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-230">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-230">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-231">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-231">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="47a31-232">要求された属性が複数見つかりました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-232">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="47a31-233">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-233">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47a31-234">アセンブリ、モジュール、型のメンバー、またはメソッド パラメーターに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-234">Retrieves an array of the custom attributes applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-235">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-235">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-236">アセンブリに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-236">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="47a31-237">パラメーターは対象のアセンブリを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-237">A parameter specifies the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-238">
            <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-238">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="47a31-239">以降、.NET Framework version 2.0 としたこれらのこのメソッドは、セキュリティ属性に対して属性が、新しいメタデータ形式で格納されている場合を返します。</span><span class="sxs-lookup"><span data-stu-id="47a31-239">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="47a31-240">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-240">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-241">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-241">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-242">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-242">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-243">次の例では、現在のアセンブリ内のカスタム属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="47a31-243">The following example retrieves the custom attributes found in the current assembly.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-244">
            <paramref name="element" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-244">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As MemberInfo) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-245">クラスのコンストラクター メンバー、イベント メンバー、フィールド メンバー、メソッド メンバー、またはプロパティ メンバーを記述する <see cref="T:System.Reflection.MemberInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-245">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-246">型のメンバーに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-246">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="47a31-247">パラメーターでメンバーを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-247">A parameter specifies the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-248">
            <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-248">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-249">戻り値の先祖のカスタム属性を含む`element`します。</span><span class="sxs-lookup"><span data-stu-id="47a31-249">The return value contains the custom attributes for ancestors of `element`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47a31-250">以降、.NET Framework version 2.0 では、このメソッドを返しますセキュリティ属性をメソッド、コンス トラクター、および種類の属性が、新しいメタデータ形式で格納されている場合。</span><span class="sxs-lookup"><span data-stu-id="47a31-250">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="47a31-251">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-251">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-252">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-252">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-253">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-253">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-254">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttribute%2A>を受け入れて、<xref:System.Reflection.MemberInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-254">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttribute%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-255">
            <paramref name="element" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-255">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47a31-256">
            <paramref name="element" />がコンストラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-256">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="47a31-257">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-257">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-258">移植可能な実行可能 (PE) ファイルを記述する <see cref="T:System.Reflection.Module" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-258">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-259">モジュールに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-259">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="47a31-260">パラメーターは、対象のモジュールを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-260">A parameter specifies the module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-261">
            <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-261">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47a31-262">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttributes%2A>を受け入れて、<xref:System.Reflection.Module>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-262">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-263">
            <paramref name="element" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-263">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-264">クラスのメンバーのパラメーターを記述する <see cref="T:System.Reflection.ParameterInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-264">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-265">メソッド パラメーターに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-265">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="47a31-266">パラメーターは、対象のメソッド パラメーターを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-266">A parameter specifies the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-267">
            <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-267">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-268">場合`element`派生型のメソッド内のパラメーターを表す、戻り値には、同じパラメーターでオーバーライドされる基本メソッドに適用される継承可能なカスタム属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="47a31-268">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-269">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttributes%2A>を受け入れて、<xref:System.Reflection.ParameterInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-269">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-270">
            <paramref name="element" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-270">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="47a31-271">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-271">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-272">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-272">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-273">このパラメーターは無視され、このメソッドの動作には影響しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-273">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-274">アセンブリに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-274">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="47a31-275">各パラメーターは、対象のアセンブリと無視する検索オプションを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-275">Parameters specify the assembly, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-276">
            <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-276">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="47a31-277">以降、.NET Framework version 2.0 としたこれらのこのメソッドは、セキュリティ属性に対して属性が、新しいメタデータ形式で格納されている場合を返します。</span><span class="sxs-lookup"><span data-stu-id="47a31-277">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="47a31-278">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-278">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-279">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-279">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-280">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-280">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-281">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttributes%2A>を受け入れて、<xref:System.Reflection.Assembly>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-281">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-282">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-282">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-283">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-283">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-284">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-284">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-285">アセンブリに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-285">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="47a31-286">各パラメーターは、対象のアセンブリと検索対象のカスタム属性の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-286">Parameters specify the assembly, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-287">
            <paramref name="attributeType" /> に適用された <paramref name="element" /> 型のカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。該当するカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-287">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="47a31-288">以降、.NET Framework version 2.0 としたこれらのこのメソッドは、セキュリティ属性に対して属性が、新しいメタデータ形式で格納されている場合を返します。</span><span class="sxs-lookup"><span data-stu-id="47a31-288">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="47a31-289">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-289">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-290">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-290">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-291">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-291">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-292">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttributes%2A>を受け入れて、<xref:System.Reflection.Assembly>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-292">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-293">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-293">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-294">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-294">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As MemberInfo, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-295">クラスのコンストラクター メンバー、イベント メンバー、フィールド メンバー、メソッド メンバー、またはプロパティ メンバーを記述する <see cref="T:System.Reflection.MemberInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-295">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-296">
            <see langword="true" /> の場合は、<c>element</c> の先祖のカスタム属性も検索することを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-296">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-297">型のメンバーに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-297">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="47a31-298">各パラメーターは、対象のメンバー、検索対象のカスタム属性の型、およびそのメンバーの先祖を検索するかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-298">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-299">
            <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-299">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-300">戻り値の先祖のカスタム属性を含む`element`場合`inherit`は`true`します。</span><span class="sxs-lookup"><span data-stu-id="47a31-300">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47a31-301">以降、.NET Framework version 2.0 では、このメソッドを返しますセキュリティ属性をメソッド、コンス トラクター、および種類の属性が、新しいメタデータ形式で格納されている場合。</span><span class="sxs-lookup"><span data-stu-id="47a31-301">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="47a31-302">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-302">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-303">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-303">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-304">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-304">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-305">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttributes%2A>を受け入れて、<xref:System.Reflection.MemberInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-305">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-306">
            <paramref name="element" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-306">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47a31-307">
            <paramref name="element" />がコンストラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-307">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="47a31-308">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-308">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-309">クラスのコンストラクター メンバー、イベント メンバー、フィールド メンバー、メソッド メンバー、またはプロパティ メンバーを記述する <see cref="T:System.Reflection.MemberInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-309">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="47a31-310">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-310">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-311">型のメンバーに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-311">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="47a31-312">各パラメーターは、対象のメンバーと検索対象のカスタム属性の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-312">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-313">
            <paramref name="type" /> に適用された <paramref name="element" /> 型のカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。該当するカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-313">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="type" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-314">戻り値の先祖のカスタム属性を含む`element`します。</span><span class="sxs-lookup"><span data-stu-id="47a31-314">The return value contains the custom attributes for ancestors of `element`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47a31-315">以降、.NET Framework version 2.0 では、このメソッドを返しますセキュリティ属性をメソッド、コンス トラクター、および種類の属性が、新しいメタデータ形式で格納されている場合。</span><span class="sxs-lookup"><span data-stu-id="47a31-315">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="47a31-316">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-316">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-317">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-317">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-318">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-318">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-319">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttribute%2A>を受け入れて、<xref:System.Reflection.MemberInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-319">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttribute%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-320">
            <paramref name="element" /> または <paramref name="type" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-320">
              <paramref name="element" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-321">
            <paramref name="type" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-321">
              <paramref name="type" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47a31-322">
            <paramref name="element" />がコンストラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-322">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="47a31-323">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-323">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-324">移植可能な実行可能 (PE) ファイルを記述する <see cref="T:System.Reflection.Module" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-324">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-325">このパラメーターは無視され、このメソッドの動作には影響しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-325">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-326">モジュールに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-326">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="47a31-327">各パラメーターは、対象のモジュールと無視する検索オプションを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-327">Parameters specify the module, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-328">
            <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-328">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-329">戻り値の先祖のカスタム属性を含む`element`場合`inherit`は`true`します。</span><span class="sxs-lookup"><span data-stu-id="47a31-329">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-330">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttributes%2A>を受け入れて、<xref:System.Reflection.Module>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-330">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-331">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-331">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-332">移植可能な実行可能 (PE) ファイルを記述する <see cref="T:System.Reflection.Module" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-332">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-333">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-333">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-334">モジュールに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-334">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="47a31-335">各パラメーターは、対象のモジュールと検索対象のカスタム属性の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-335">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-336">
            <paramref name="attributeType" /> に適用された <paramref name="element" /> 型のカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。該当するカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-336">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47a31-337">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttributes%2A>を受け入れて、<xref:System.Reflection.Module>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-337">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-338">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-338">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-339">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-339">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-340">クラスのメンバーのパラメーターを記述する <see cref="T:System.Reflection.ParameterInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-340">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-341">
            <see langword="true" /> の場合は、<c>element</c> の先祖のカスタム属性も検索することを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-341">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-342">メソッド パラメーターに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-342">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="47a31-343">各パラメーターは、対象のメソッド パラメーターと、メソッド パラメーターの先祖を検索するかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-343">Parameters specify the method parameter, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-344">
            <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-344">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-345">場合`element`派生型のメソッド内のパラメーターを表す、戻り値には、同じパラメーターでオーバーライドされる基本メソッドに適用される継承可能なカスタム属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="47a31-345">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-346">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttributes%2A>を受け入れて、<xref:System.Reflection.ParameterInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-346">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-347">
            <paramref name="element" /> の <see cref="P:System.Reflection.ParameterInfo.Member" /> プロパティが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-347">The <see cref="P:System.Reflection.ParameterInfo.Member" /> property of <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-348">
            <paramref name="element" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-348">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="47a31-349">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-349">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-350">クラスのメンバーのパラメーターを記述する <see cref="T:System.Reflection.ParameterInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-350">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-351">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-351">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-352">メソッド パラメーターに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-352">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="47a31-353">各パラメーターは、対象のメソッド パラメーターと検索対象のカスタム属性の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-353">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-354">
            <paramref name="attributeType" /> に適用された <paramref name="element" /> 型のカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。該当するカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-354">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-355">場合`element`派生型のメソッド内のパラメーターを表す、戻り値には、同じパラメーターでオーバーライドされる基本メソッドに適用される継承可能なカスタム属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="47a31-355">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-356">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttributes%2A>を受け入れて、<xref:System.Reflection.ParameterInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-356">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-357">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-357">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-358">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-358">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="47a31-359">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-359">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-360">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-360">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-361">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-361">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-362">このパラメーターは無視され、このメソッドの動作には影響しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-362">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-363">アセンブリに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-363">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="47a31-364">各パラメーターは、対象のアセンブリ、検索対象のカスタム属性の型、および無視する検索オプションを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-364">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-365">
            <paramref name="attributeType" /> に適用された <paramref name="element" /> 型のカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。該当するカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-365">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="47a31-366">以降、.NET Framework version 2.0 としたこれらのこのメソッドは、セキュリティ属性に対して属性が、新しいメタデータ形式で格納されている場合を返します。</span><span class="sxs-lookup"><span data-stu-id="47a31-366">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="47a31-367">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-367">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-368">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-368">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-369">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-369">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-370">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttributes%2A>を受け入れて、<xref:System.Reflection.Assembly>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-370">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-371">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-371">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-372">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-372">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ type, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, type, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-373">クラスのコンストラクター メンバー、イベント メンバー、フィールド メンバー、メソッド メンバー、またはプロパティ メンバーを記述する <see cref="T:System.Reflection.MemberInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-373">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="47a31-374">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-374">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-375">
            <see langword="true" /> の場合は、<c>element</c> の先祖のカスタム属性も検索することを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-375">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-376">型のメンバーに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-376">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="47a31-377">各パラメーターは、対象のメンバー、検索対象のカスタム属性の型、およびそのメンバーの先祖を検索するかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-377">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-378">
            <paramref name="type" /> に適用された <paramref name="element" /> 型のカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。該当するカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-378">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="type" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-379">戻り値の先祖のカスタム属性を含む`element`場合`inherit`は`true`します。</span><span class="sxs-lookup"><span data-stu-id="47a31-379">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47a31-380">以降、.NET Framework version 2.0 では、このメソッドを返しますセキュリティ属性をメソッド、コンス トラクター、および種類の属性が、新しいメタデータ形式で格納されている場合。</span><span class="sxs-lookup"><span data-stu-id="47a31-380">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="47a31-381">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-381">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-382">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-382">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-383">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-383">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-384">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttributes%2A>を受け入れて、<xref:System.Reflection.MemberInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-384">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-385">
            <paramref name="element" /> または <paramref name="type" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-385">
              <paramref name="element" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-386">
            <paramref name="type" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-386">
              <paramref name="type" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47a31-387">
            <paramref name="element" />がコンストラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-387">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="47a31-388">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-388">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-389">移植可能な実行可能 (PE) ファイルを記述する <see cref="T:System.Reflection.Module" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-389">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-390">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-390">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-391">このパラメーターは無視され、このメソッドの動作には影響しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-391">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-392">モジュールに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-392">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="47a31-393">各パラメーターは、対象のモジュール、検索対象のカスタム属性の型、および無視する検索オプションを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-393">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-394">
            <paramref name="attributeType" /> に適用された <paramref name="element" /> 型のカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。該当するカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-394">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-395">戻り値の先祖のカスタム属性を含む`element`場合`inherit`は`true`します。</span><span class="sxs-lookup"><span data-stu-id="47a31-395">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-396">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttributes%2A>を受け入れて、<xref:System.Reflection.Module>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-396">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-397">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-397">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-398">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-398">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type * bool -&gt; Attribute[]" Usage="System.Attribute.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-399">クラスのメンバーのパラメーターを記述する <see cref="T:System.Reflection.ParameterInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-399">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-400">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-400">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-401">
            <see langword="true" /> の場合は、<c>element</c> の先祖のカスタム属性も検索することを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-401">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-402">メソッド パラメーターに適用されたカスタム属性の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-402">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="47a31-403">各パラメーターは、対象のメソッド パラメーター、検索対象のカスタム属性の型、およびそのメソッド パラメーターの先祖を検索するかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-403">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-404">
            <paramref name="attributeType" /> に適用された <paramref name="element" /> 型のカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。該当するカスタム属性が存在しない場合は空の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-404">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-405">場合`element`派生型のメソッド内のパラメーターを表す、戻り値には、同じパラメーターでオーバーライドされる基本メソッドに適用される継承可能なカスタム属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="47a31-405">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-406">次のコード例は、の使用を示します<xref:System.Attribute.GetCustomAttributes%2A>を受け入れて、<xref:System.Reflection.ParameterInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-406">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-407">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-407">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-408">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-408">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="47a31-409">カスタム属性の型を読み込むことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-409">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="attribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47a31-410">このインスタンスのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-410">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-411">32 ビット符号付き整数ハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-411">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47a31-412">次のコード例は、の使用を示しています。<xref:System.Attribute.GetHashCode%2A>のコンテキストで<xref:System.Attribute>します。</span><span class="sxs-lookup"><span data-stu-id="47a31-412">The following code example illustrates the use of <xref:System.Attribute.GetHashCode%2A> in the context of <xref:System.Attribute>.</span></span>  
  
 [!code-csharp[GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetHashCode/CS/hashcode.cs#1)]
 [!code-vb[GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetHashCode/VB/hashcode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="abstract member IsDefaultAttribute : unit -&gt; bool&#xA;override this.IsDefaultAttribute : unit -&gt; bool" Usage="attribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47a31-413">派生クラスでオーバーライドされるとき、このインスタンスの値が派生クラスの既定値であるかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-413">When overridden in a derived class, indicates whether the value of this instance is the default value for the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-414">このインスタンスがクラスの既定の属性である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-414">
              <see langword="true" /> if this instance is the default attribute for the class; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-415">このクラスの既定の実装を返します`false`とをそのクラスを使用する派生クラスで実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="47a31-415">The default implementation of this class returns `false`, and must be implemented in the derived class to be useful to that class.</span></span>  
  
 <span data-ttu-id="47a31-416">派生クラスの比較では、このメソッドの実装を標準の既定値には、このインスタンスの値はこのインスタンスの値が標準の値と等しいかどうかを示すブール値を返します。</span><span class="sxs-lookup"><span data-stu-id="47a31-416">The implementation of this method in a derived class compares the value of this instance to a standard default value, then returns a Boolean value that indicates whether the value of this instance is equal to the standard value.</span></span> <span data-ttu-id="47a31-417">標準の値は通常実装では、定数としてコード化されたか、実装によって使用されるフィールドにプログラムで格納されています。</span><span class="sxs-lookup"><span data-stu-id="47a31-417">The standard value is typically coded as a constant in the implementation, or stored programmatically in a field used by the implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-418"><xref:System.Attribute.IsDefaultAttribute%2A> の使用方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="47a31-418">The following code example illustrates the use of <xref:System.Attribute.IsDefaultAttribute%2A>.</span></span>  
  
 [!code-cpp[IsDefaultAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefaultAttribute/CPP/defattr.cpp#1)]
 [!code-csharp[IsDefaultAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefaultAttribute/CS/defattr.cs#1)]
 [!code-vb[IsDefaultAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefaultAttribute/VB/defattr.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDefined">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47a31-419">指定した型のカスタム属性が、アセンブリ、モジュール、型のメンバー、またはメソッド パラメーターに適用されているかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-419">Determines whether any custom attributes of a specified type are applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Assembly, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Assembly * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-420">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-420">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-421">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-421">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-422">カスタム属性がアセンブリに適用されているかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-422">Determines whether any custom attributes are applied to an assembly.</span>
          </span>
          <span data-ttu-id="47a31-423">各パラメーターは、対象のアセンブリと検索対象のカスタム属性の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-423">Parameters specify the assembly, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-424">
            <paramref name="attributeType" /> 型のカスタム属性が <paramref name="element" /> に適用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-424">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="47a31-425">以降、.NET Framework version 2.0 では、このメソッドを返します`true`アセンブリに、新しいメタデータ形式で格納されているセキュリティ属性がある場合。</span><span class="sxs-lookup"><span data-stu-id="47a31-425">Starting with the .NET Framework version 2.0, this method returns `true` if the assembly has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="47a31-426">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-426">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-427">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-427">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-428">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-428">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-429">次のコード例は、の使用を示します<xref:System.Attribute.IsDefined%2A>を受け入れて、<xref:System.Reflection.Assembly>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-429">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-430">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-430">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-431">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-431">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As MemberInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-432">クラスのコンストラクター メンバー、イベント メンバー、フィールド メンバー、メソッド メンバー、型メンバー、またはプロパティ メンバーを記述する <see cref="T:System.Reflection.MemberInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-432">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, type, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-433">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-433">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-434">カスタム属性が型のメンバーに適用されているかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-434">Determines whether any custom attributes are applied to a member of a type.</span>
          </span>
          <span data-ttu-id="47a31-435">各パラメーターは、対象のメンバーと検索対象のカスタム属性の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-435">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-436">
            <paramref name="attributeType" /> 型のカスタム属性が <paramref name="element" /> に適用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-436">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-437">先祖`element`カスタム属性が検索されます。</span><span class="sxs-lookup"><span data-stu-id="47a31-437">The ancestors of `element` are searched for custom attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47a31-438">以降、.NET Framework version 2.0 では、このメソッドを返します`true`かどうか、型、メソッド、またはコンス トラクターは、新しいメタデータ形式で格納されているセキュリティ属性。</span><span class="sxs-lookup"><span data-stu-id="47a31-438">Starting with the .NET Framework version 2.0, this method returns `true` if a type, method, or constructor has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="47a31-439">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-439">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-440">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-440">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-441">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-441">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-442">次のコード例は、の使用を示します<xref:System.Attribute.IsDefined%2A>、取得、<xref:System.Reflection.MemberInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-442">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-443">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-443">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-444">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-444">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47a31-445">
            <paramref name="element" />がコンストラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-445">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Module, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Module * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-446">移植可能な実行可能 (PE) ファイルを記述する <see cref="T:System.Reflection.Module" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-446">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-447">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-447">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-448">指定した型のカスタム属性がモジュールに適用されているかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-448">Determines whether any custom attributes of a specified type are applied to a module.</span>
          </span>
          <span data-ttu-id="47a31-449">各パラメーターは、対象のモジュールと検索対象のカスタム属性の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-449">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-450">
            <paramref name="attributeType" /> 型のカスタム属性が <paramref name="element" /> に適用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-450">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-451">先祖`element`のカスタム属性は検索されません。</span><span class="sxs-lookup"><span data-stu-id="47a31-451">The ancestors of `element` are not searched for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-452">次のコード例は、の使用を示します<xref:System.Attribute.IsDefined%2A>、取得、<xref:System.Reflection.Module>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-452">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-453">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-453">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-454">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-454">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As ParameterInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-455">クラスのメンバーのパラメーターを記述する <see cref="T:System.Reflection.ParameterInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-455">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-456">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-456">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-457">カスタム属性がメソッド パラメーターに適用されているかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-457">Determines whether any custom attributes are applied to a method parameter.</span>
          </span>
          <span data-ttu-id="47a31-458">各パラメーターは、対象のメソッド パラメーターと検索対象のカスタム属性の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-458">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-459">
            <paramref name="attributeType" /> 型のカスタム属性が <paramref name="element" /> に適用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-459">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-460">先祖`element`カスタム属性が検索されます。</span><span class="sxs-lookup"><span data-stu-id="47a31-460">The ancestors of `element` are searched for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-461">次のコード例は、の使用を示します<xref:System.Attribute.IsDefined%2A>、取得、<xref:System.Reflection.ParameterInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-461">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-462">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-462">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-463">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-463">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Assembly, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Assembly * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-464">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-464">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-465">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-465">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-466">このパラメーターは無視され、このメソッドの動作には影響しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-466">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-467">カスタム属性がアセンブリに適用されているかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-467">Determines whether any custom attributes are applied to an assembly.</span>
          </span>
          <span data-ttu-id="47a31-468">各パラメーターは、対象のアセンブリ、検索対象のカスタム属性の型、および無視する検索オプションを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-468">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-469">
            <paramref name="attributeType" /> 型のカスタム属性が <paramref name="element" /> に適用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-469">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="47a31-470">以降、.NET Framework version 2.0 では、このメソッドを返します`true`アセンブリに、新しいメタデータ形式で格納されているセキュリティ属性がある場合。</span><span class="sxs-lookup"><span data-stu-id="47a31-470">Starting with the .NET Framework version 2.0, this method returns `true` if the assembly has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="47a31-471">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-471">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-472">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-472">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-473">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-473">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-474">次のコード例は、の使用を示します<xref:System.Attribute.IsDefined%2A>を受け入れて、<xref:System.Reflection.Assembly>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-474">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-475">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-475">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-476">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-476">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As MemberInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-477">クラスのコンストラクター メンバー、イベント メンバー、フィールド メンバー、メソッド メンバー、型メンバー、またはプロパティ メンバーを記述する <see cref="T:System.Reflection.MemberInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-477">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, type, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-478">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-478">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-479">
            <see langword="true" /> の場合は、<c>element</c> の先祖のカスタム属性も検索することを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-479">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-480">カスタム属性が型のメンバーに適用されているかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-480">Determines whether any custom attributes are applied to a member of a type.</span>
          </span>
          <span data-ttu-id="47a31-481">各パラメーターは、対象のメンバー、検索対象のカスタム属性の型、およびそのメンバーの先祖を検索するかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-481">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-482">
            <paramref name="attributeType" /> 型のカスタム属性が <paramref name="element" /> に適用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-482">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="47a31-483">以降、.NET Framework version 2.0 では、このメソッドを返します`true`かどうか、型、メソッド、またはコンス トラクターは、新しいメタデータ形式で格納されているセキュリティ属性。</span><span class="sxs-lookup"><span data-stu-id="47a31-483">Starting with the .NET Framework version 2.0, this method returns `true` if a type, method, or constructor has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="47a31-484">バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-484">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="47a31-485">動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="47a31-485">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="47a31-486">参照してください[宣言セキュリティ属性を出力](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。</span><span class="sxs-lookup"><span data-stu-id="47a31-486">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-487">次のコード例は、の使用を示します<xref:System.Attribute.IsDefined%2A>、取得、<xref:System.Reflection.MemberInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-487">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-488">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-488">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-489">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-489">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47a31-490">
            <paramref name="element" />がコンストラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-490">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Module, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Module * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-491">移植可能な実行可能 (PE) ファイルを記述する <see cref="T:System.Reflection.Module" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-491">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-492">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-492">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-493">このパラメーターは無視され、このメソッドの動作には影響しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-493">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-494">カスタム属性がモジュールに適用されているかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-494">Determines whether any custom attributes are applied to a module.</span>
          </span>
          <span data-ttu-id="47a31-495">各パラメーターは、対象のモジュール、検索対象のカスタム属性の型、および無視する検索オプションを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-495">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-496">
            <paramref name="attributeType" /> 型のカスタム属性が <paramref name="element" /> に適用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-496">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-497">このメソッドは無視、`inherit`パラメーターの先祖を検索しません`element`のカスタム属性。</span><span class="sxs-lookup"><span data-stu-id="47a31-497">This method ignores the `inherit` parameter and does not search the ancestors of `element` for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-498">次のコード例は、の使用を示します<xref:System.Attribute.IsDefined%2A>、取得、<xref:System.Reflection.Module>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-498">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-499">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-499">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-500">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-500">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type * bool -&gt; bool" Usage="System.Attribute.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="47a31-501">クラスのメンバーのパラメーターを記述する <see cref="T:System.Reflection.ParameterInfo" /> クラスから派生したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-501">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="47a31-502">検索対象とするカスタム属性の型または基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-502">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="47a31-503">
            <see langword="true" /> の場合は、<c>element</c> の先祖のカスタム属性も検索することを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-503">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-504">カスタム属性がメソッド パラメーターに適用されているかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-504">Determines whether any custom attributes are applied to a method parameter.</span>
          </span>
          <span data-ttu-id="47a31-505">各パラメーターは、対象のメソッド パラメーター、検索対象のカスタム属性の型、およびそのメソッド パラメーターの先祖を検索するかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-505">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-506">
            <paramref name="attributeType" /> 型のカスタム属性が <paramref name="element" /> に適用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-506">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47a31-507">次のコード例は、の使用を示します<xref:System.Attribute.IsDefined%2A>、取得、<xref:System.Reflection.ParameterInfo>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="47a31-507">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47a31-508">
            <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-508">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47a31-509">
            <paramref name="attributeType" /> は <see cref="T:System.Attribute" /> から派生していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-509">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="47a31-510">
            <paramref name="element" /> がメソッド、コンストラクター、型のいずれでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-510">
              <paramref name="element" /> is not a method, constructor, or type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public virtual bool Match (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Match(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Match (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Match(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Match : obj -&gt; bool&#xA;override this.Match : obj -&gt; bool" Usage="attribute.Match obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="47a31-511">
            <see cref="T:System.Object" /> のこのインスタンスと比較する <see cref="T:System.Attribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-511">An <see cref="T:System.Object" /> to compare with this instance of <see cref="T:System.Attribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-512">派生クラス内でオーバーライドされたときに、指定したオブジェクトとこのインスタンスが等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-512">When overridden in a derived class, returns a value that indicates whether this instance equals a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47a31-513">このインスタンスと <paramref name="obj" /> が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-513">
              <see langword="true" /> if this instance equals <paramref name="obj" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-514">このメソッドは、1 つの場合を判断します。<xref:System.Attribute>別に等しい。</span><span class="sxs-lookup"><span data-stu-id="47a31-514">This method determines if one <xref:System.Attribute> equals another.</span></span> <span data-ttu-id="47a31-515">既定の実装は、同じ<xref:System.Attribute.Equals%2A>、2 つの属性が同じ型と、フィールドの値が同じであるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="47a31-515">Its default implementation is the same as <xref:System.Attribute.Equals%2A>, which determines whether two attributes are of the same type and have the same field values.</span></span>

 <span data-ttu-id="47a31-516">一般に、<xref:System.Attribute.Equals%2A>参照または値が等しいかどうかの標準的なテストを実行するメソッドが対象としています。</span><span class="sxs-lookup"><span data-stu-id="47a31-516">In general, the <xref:System.Attribute.Equals%2A> method is intended to perform a standard test for reference or value equality.</span></span> <span data-ttu-id="47a31-517">オーバーライドすることができます、<xref:System.Attribute.Match%2A>等しいかどうかに基づいているいくつかの条件以外の 2 つの属性のインスタンスにカスタムの比較を実行するときに、メソッドが同じ型と identifical 値があります。</span><span class="sxs-lookup"><span data-stu-id="47a31-517">You can override the <xref:System.Attribute.Match%2A> method when you want to perform a custom comparison for equality that is based on some criteria other than that two attribute instances are of the same type and have identifical values.</span></span> <span data-ttu-id="47a31-518">たとえば、オーバーライドすることができます、<xref:System.Attribute.Match%2A>メソッドを次のシナリオでの属性を比較します。</span><span class="sxs-lookup"><span data-stu-id="47a31-518">For example, you can override the <xref:System.Attribute.Match%2A> method to compare attributes in the following scenarios:</span></span>

 - <span data-ttu-id="47a31-519">属性には、ビット フィールドが含まれていて、特定のビットが設定されている場合に 2 つの属性インスタンスが等しくを検討してください。</span><span class="sxs-lookup"><span data-stu-id="47a31-519">An attribute includes a bit field, and you consider two attribute instances equal if a particular bit is set.</span></span> <span data-ttu-id="47a31-520">たとえば、`NumericDisplay`属性には、どのような数値の形式 (バイナリ、8 進数、10 進数と 16 進数) など、クライアントのサポートを示すビット フィールドが含まれます。</span><span class="sxs-lookup"><span data-stu-id="47a31-520">For example, a `NumericDisplay` attribute might include a bit field that indicates what numeric formats (such as binary, octal, decimal, and hexadecimal) a client supports.</span></span> <span data-ttu-id="47a31-521">オーバーライドされた<xref:System.Attribute.Match%2A>メソッドは、2 つのインスタンスは、同じ数値書式指定をサポートしている場合と同じ検討します。</span><span class="sxs-lookup"><span data-stu-id="47a31-521">The overridden <xref:System.Attribute.Match%2A> method might consider two instances equal if they support the same numeric format.</span></span>

 - <span data-ttu-id="47a31-522">属性には、同じ種類情報にはが含まれている複数のフィールドが含まれています。 または、値ができる任意の順序で配列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="47a31-522">An attribute includes multiple fields that contain the same kind of information, or it contains an array in which values can be in any order.</span></span> <span data-ttu-id="47a31-523">たとえば、`Author`属性には、作成者名の複数のフィールドが含まれます。</span><span class="sxs-lookup"><span data-stu-id="47a31-523">For example, an `Author` attribute might include multiple fields for author names.</span></span> <span data-ttu-id="47a31-524">オーバーライドされた<xref:System.Attribute.Match%2A>メソッドは、2 つのインスタンスは、各フィールドが、対応するフィールドと等しいかどうかに関係なく、同じ作成者がある場合と同じ検討します。</span><span class="sxs-lookup"><span data-stu-id="47a31-524">The overridden <xref:System.Attribute.Match%2A> method might consider two instances equal if they have the same authors regardless of whether each field is equal to the corresponding field.</span></span>    
 
 
## <a name="example"></a><span data-ttu-id="47a31-525">例</span><span class="sxs-lookup"><span data-stu-id="47a31-525">Example</span></span>  
 <span data-ttu-id="47a31-526">使用例を次に示します<xref:System.Attribute.Match%2A>属性値のカスタムの比較メソッドを作成します。</span><span class="sxs-lookup"><span data-stu-id="47a31-526">The following example illustrates the use of <xref:System.Attribute.Match%2A> to create a custom comparison method for attribute values.</span></span> <span data-ttu-id="47a31-527">場合を定義、`AuthorsAttribute`内部的に格納している、`List<String>`著者の名を格納します。</span><span class="sxs-lookup"><span data-stu-id="47a31-527">If defines an `AuthorsAttribute` that internally contains a `List<String>` that stores authors' names.</span></span> <span data-ttu-id="47a31-528">これは、上書き、名前が一覧で任意の順序で発生することがあるため、<xref:System.Attribute.Match%2A>リスト内の位置に関係なく、作成者名を比較するメソッド。</span><span class="sxs-lookup"><span data-stu-id="47a31-528">Because the names can occur in any order in the list, it overrides the <xref:System.Attribute.Match%2A> method to compare author names regardless of their position in the list.</span></span> <span data-ttu-id="47a31-529">注、<xref:System.Attribute.Equals%2A>値の等価性テストを実行するメソッドには、異なる結果を返します、<xref:System.Attribute.Match%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="47a31-529">Note the <xref:System.Attribute.Equals%2A> method, which performs a test for value equality, returns different results from the <xref:System.Attribute.Match%2A> method.</span></span>   
  
 [!code-csharp[Match#1](~/samples/snippets/csharp/VS_Snippets_CLR/Match/CS/match.cs)]
 [!code-vb[Match#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Match/VB/match.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Attribute.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Attribute.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Attribute::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="47a31-530">将来使用するために予約されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-530">Reserved for future use.</span>
          </span>
          <span data-ttu-id="47a31-531">IID_NULL にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-531">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="47a31-532">マッピング対象として渡される名前の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-532">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="47a31-533">マッピングされる名前のカウント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-533">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="47a31-534">名前を解釈するロケール コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-534">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="47a31-535">名前に対応する ID を受け取る、呼び出し元割り当て済み配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-535">Caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-536">一連の名前を対応する一連のディスパッチ識別子に割り当てます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-536">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-537">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="47a31-537">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="47a31-538">詳細については`IDispatch::GetIDsOfNames`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="47a31-538">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="47a31-539">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-539">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Attribute.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Attribute::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="47a31-540">返される型情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-540">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="47a31-541">型情報のロケール ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-541">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="47a31-542">要求された型情報オブジェクトへのポインターを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-542">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-543">オブジェクトの型情報を取得します。この情報はインターフェイスの型情報の取得に使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-543">Retrieves the type information for an object, which can be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-544">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="47a31-544">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="47a31-545">詳細については`IDispatch::GetTypeInfo`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="47a31-545">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="47a31-546">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-546">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Attribute.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Attribute::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="47a31-547">オブジェクトにより提供される型タイプ情報インターフェイスの数を受け取る場所を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-547">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-548">オブジェクトが提供する型情報インターフェイスの数 (0 または 1) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-548">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-549">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="47a31-549">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="47a31-550">詳細については`IDispatch::GetTypeInfoCount`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="47a31-550">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="47a31-551">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-551">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.Invoke">
      <MemberSignature Language="C#" Value="void _Attribute.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Attribute.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Attribute::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="47a31-552">メンバーを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-552">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="47a31-553">将来使用するために予約されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-553">Reserved for future use.</span>
          </span>
          <span data-ttu-id="47a31-554">IID_NULL にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-554">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="47a31-555">引数を解釈する対象のロケール コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-555">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="47a31-556">呼び出しのコンテキストを記述するフラグ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-556">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="47a31-557">引数の配列、名前付き引数の DISPID の配列、配列内の要素数のカウントを格納している構造体へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-557">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="47a31-558">結果が格納される場所へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-558">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="47a31-559">例外情報を格納する構造体へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-559">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="47a31-560">エラーが存在する最初の引数のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-560">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47a31-561">オブジェクトによって公開されたプロパティおよびメソッドへのアクセスを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-561">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-562">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出さないでいます。</span><span class="sxs-lookup"><span data-stu-id="47a31-562">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="47a31-563">詳細については`IDispatch::Invoke`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="47a31-563">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="47a31-564">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-564">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public virtual object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.Attribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeId : obj" Usage="System.Attribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47a31-565">派生クラスで実装されると、この <see cref="T:System.Attribute" /> の一意の識別子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-565">When implemented in a derived class, gets a unique identifier for this <see cref="T:System.Attribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47a31-566">この属性の一意の識別子である <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47a31-566">An <see cref="T:System.Object" /> that is a unique identifier for the attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47a31-567">この識別子が単には、実装された、<xref:System.Type>属性の。</span><span class="sxs-lookup"><span data-stu-id="47a31-567">As implemented, this identifier is merely the <xref:System.Type> of the attribute.</span></span> <span data-ttu-id="47a31-568">ただし、同じ型の 2 つの属性を識別するために一意識別子を使用することが目的です。</span><span class="sxs-lookup"><span data-stu-id="47a31-568">However, it is intended that the unique identifier be used to identify two attributes of the same type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47a31-569">次のコード例の実装、<xref:System.Attribute.TypeId%2A>パラメーターのカスタム プロパティ<xref:System.Attribute>クラスし、その使用例を示します。</span><span class="sxs-lookup"><span data-stu-id="47a31-569">The following code example implements the <xref:System.Attribute.TypeId%2A> property in a custom parameter <xref:System.Attribute> class and shows its use.</span></span>  
  
 [!code-cpp[System.Attribute.TypeId#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.TypeId/CPP/typeid.cpp#1)]
 [!code-csharp[System.Attribute.TypeId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.TypeId/CS/typeid.cs#1)]
 [!code-vb[System.Attribute.TypeId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.TypeId/VB/typeid.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>