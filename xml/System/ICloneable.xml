<Type Name="ICloneable" FullName="System.ICloneable">
  <TypeSignature Language="C#" Value="public interface ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ICloneable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICloneable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fce87-101">クローン作成をサポートします。クローン作成とは、既存のインスタンスと同じ値で、クラスの新しいインスタンスを作成することです。</span><span class="sxs-lookup"><span data-stu-id="fce87-101">Supports cloning, which creates a new instance of a class with the same value as an existing instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce87-102"><xref:System.ICloneable>インターフェイスでは、既存のオブジェクトのコピーを作成するカスタマイズされた実装を提供することができます。</span><span class="sxs-lookup"><span data-stu-id="fce87-102">The <xref:System.ICloneable> interface enables you to provide a customized implementation that creates a copy of an existing object.</span></span> <span data-ttu-id="fce87-103"><xref:System.ICloneable>インターフェイスには、1 つのメンバーが含まれています、<xref:System.ICloneable.Clone%2A>メソッドによって提供されるもの以外の複製のサポートを提供することが想定される<xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="fce87-103">The <xref:System.ICloneable> interface contains one member, the <xref:System.ICloneable.Clone%2A> method, which is intended to provide cloning support beyond that supplied by <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="fce87-104">複製は、深さと例については、シャロー コピーではなくの詳細については、次を参照してください。、<xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="fce87-104">For more information about cloning, deep versus shallow copies, and examples, see the <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="fce87-105"><see cref="T:System.ICloneable" />インターフェイス単純にする必要がありますの実装、<see cref="M:System.ICloneable.Clone" />メソッドは、現在のオブジェクト インスタンスのコピーを返します。</span><span class="sxs-lookup"><span data-stu-id="fce87-105">The <see cref="T:System.ICloneable" /> interface simply requires that your implementation of the <see cref="M:System.ICloneable.Clone" /> method return a copy of the current object instance.</span></span> <span data-ttu-id="fce87-106">ディープ コピー、シャロー コピーでは、またはその間に何か、複製操作を実行するかどうかを指定するわけではありません。</span><span class="sxs-lookup"><span data-stu-id="fce87-106">It does not specify whether the cloning operation performs a deep copy, a shallow copy, or something in between.</span></span> <span data-ttu-id="fce87-107">また、新しいインスタンスにコピーする元のインスタンスのすべてのプロパティ値は必要。</span><span class="sxs-lookup"><span data-stu-id="fce87-107">Nor does it require all property values of the original instance to be copied to the new instance.</span></span> <span data-ttu-id="fce87-108">たとえば、<see cref="M:System.Globalization.NumberFormatInfo.Clone" />メソッドを除くすべてのプロパティの簡易コピーを実行、<see cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />プロパティ以外の場合は、常にこのプロパティの値を設定<see langword="false" />複製されたオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="fce87-108">For example, the <see cref="M:System.Globalization.NumberFormatInfo.Clone" /> method performs a shallow copy of all properties except the <see cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" /> property; it always sets this property value to <see langword="false" /> in the cloned object.</span></span> <span data-ttu-id="fce87-109">の呼び出し元<see cref="M:System.ICloneable.Clone" />、予測可能なを実行するメソッドに依存できない操作を複製するには、ことをお勧め<see cref="T:System.ICloneable" />パブリック Api では実装されません。</span><span class="sxs-lookup"><span data-stu-id="fce87-109">Because callers of <see cref="M:System.ICloneable.Clone" /> cannot depend on the method performing a predictable cloning operation, we recommend that <see cref="T:System.ICloneable" /> not be implemented in public APIs.</span></span></para>
    </block>
    <altmember cref="M:System.Object.MemberwiseClone" />
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ICloneable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fce87-110">現在のインスタンスのコピーである新しいオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="fce87-110">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="fce87-111">このインスタンスのコピーである新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fce87-111">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce87-112">結果として得られるクローンとして、または元のインスタンスとの互換性は、同じ型でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="fce87-112">The resulting clone must be of the same type as, or compatible with, the original instance.</span></span>  
  
 <span data-ttu-id="fce87-113">実装<xref:System.ICloneable.Clone%2A>ディープ コピーまたは簡易コピーを実行できます。</span><span class="sxs-lookup"><span data-stu-id="fce87-113">An implementation of <xref:System.ICloneable.Clone%2A> can perform either a deep copy or a shallow copy.</span></span> <span data-ttu-id="fce87-114">ディープ コピーではすべてのオブジェクトが重複しています。シャロー コピーでは、最上位レベルのオブジェクトのみが重複しています.、下位レベルの参照を含む</span><span class="sxs-lookup"><span data-stu-id="fce87-114">In a deep copy, all objects are duplicated; in a shallow copy, only the top-level objects are duplicated and the lower levels contain references.</span></span> <span data-ttu-id="fce87-115">の呼び出し元<xref:System.ICloneable.Clone%2A>、予測可能なを実行するメソッドに依存できない操作を複製するには、ことをお勧め<xref:System.ICloneable>パブリック Api では実装されません。</span><span class="sxs-lookup"><span data-stu-id="fce87-115">Because callers of <xref:System.ICloneable.Clone%2A> cannot depend on the method performing a predictable cloning operation, we recommend that <xref:System.ICloneable> not be implemented in public APIs.</span></span>  
  
 <span data-ttu-id="fce87-116">参照してください<xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType>詳細については複製で、深層と例については、シャロー コピーではなくです。</span><span class="sxs-lookup"><span data-stu-id="fce87-116">See <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> for more information on cloning, deep versus shallow copies, and examples.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
  </Members>
</Type>