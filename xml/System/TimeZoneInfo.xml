<Type Name="TimeZoneInfo" FullName="System.TimeZoneInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="802ab07f33d5b8b8cc91d0793023ecfb60419c17" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57963539" /></Metadata><TypeSignature Language="C#" Value="public sealed class TimeZoneInfo : IEquatable&lt;TimeZoneInfo&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit TimeZoneInfo extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TimeZoneInfo&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeZoneInfo sealed : IEquatable&lt;TimeZoneInfo ^&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo = class&#xA;    interface IEquatable&lt;TimeZoneInfo&gt;&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="765be-101">世界中のいずれかのタイム ゾーンを表します。</span><span class="sxs-lookup"><span data-stu-id="765be-101">Represents any time zone in the world.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-102">タイム ゾーンは、同じ時刻が使用されている地域です。</span><span class="sxs-lookup"><span data-stu-id="765be-102">A time zone is a geographical region in which the same time is used.</span></span>  
  
 <span data-ttu-id="765be-103"><xref:System.TimeZoneInfo>クラスにはより大幅に強化、<xref:System.TimeZone>クラスで、限られた機能だけを提供します。</span><span class="sxs-lookup"><span data-stu-id="765be-103">The <xref:System.TimeZoneInfo> class offers significant enhancements over the <xref:System.TimeZone> class, which provides only limited functionality.</span></span>  
  
 <span data-ttu-id="765be-104"><xref:System.TimeZone>クラスは、ローカル タイム ゾーンのみを認識し、世界協定時刻 (UTC) と現地時刻の間での時刻を変換することができます。</span><span class="sxs-lookup"><span data-stu-id="765be-104">The <xref:System.TimeZone> class recognizes only the local time zone, and can convert times between Coordinated Universal Time (UTC) and local time.</span></span> <span data-ttu-id="765be-105">A<xref:System.TimeZoneInfo>オブジェクトは、任意のタイム ゾーンとのメソッドを表すことができます、<xref:System.TimeZoneInfo>を対応する他の任意のタイム ゾーンの時刻に 1 つのタイム ゾーンの時刻を変換するクラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="765be-105">A <xref:System.TimeZoneInfo> object can represent any time zone, and methods of the <xref:System.TimeZoneInfo> class can be used to convert the time in one time zone to the corresponding time in any other time zone.</span></span> <span data-ttu-id="765be-106">メンバー、<xref:System.TimeZoneInfo>クラスは、次の操作をサポートします。</span><span class="sxs-lookup"><span data-stu-id="765be-106">The members of the <xref:System.TimeZoneInfo> class support the following operations:</span></span>  
  
-   <span data-ttu-id="765be-107">オペレーティング システムによって既に定義されているタイム ゾーンを取得しています。</span><span class="sxs-lookup"><span data-stu-id="765be-107">Retrieving a time zone that is already defined by the operating system.</span></span>  
  
-   <span data-ttu-id="765be-108">システムで使用できるタイム ゾーンを列挙しています。</span><span class="sxs-lookup"><span data-stu-id="765be-108">Enumerating the time zones that are available on a system.</span></span>  
  
-   <span data-ttu-id="765be-109">別のタイム ゾーン間で時刻の変換。</span><span class="sxs-lookup"><span data-stu-id="765be-109">Converting times between different time zones.</span></span>  
  
-   <span data-ttu-id="765be-110">オペレーティング システムによって既に定義されていない新しいタイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-110">Creating a new time zone that is not already defined by the operating system.</span></span>  
  
-   <span data-ttu-id="765be-111">後で取得のタイム ゾーンのシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="765be-111">Serializing a time zone for later retrieval.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="765be-112">インスタンス、<xref:System.TimeZoneInfo>クラスは不変です。</span><span class="sxs-lookup"><span data-stu-id="765be-112">An instance of the <xref:System.TimeZoneInfo> class is immutable.</span></span> <span data-ttu-id="765be-113">オブジェクトがインスタンス化されると、その値は変更できません。</span><span class="sxs-lookup"><span data-stu-id="765be-113">Once an object has been instantiated, its values cannot be modified.</span></span>  
  
 <span data-ttu-id="765be-114">インスタンス化することはできません、<xref:System.TimeZoneInfo>オブジェクトを使用して、`new`キーワード。</span><span class="sxs-lookup"><span data-stu-id="765be-114">You cannot instantiate a <xref:System.TimeZoneInfo> object using the `new` keyword.</span></span> <span data-ttu-id="765be-115">代わりに、いずれかの静的メンバーを呼び出す必要があります、<xref:System.TimeZoneInfo>クラスは、次の表に示すようにします。</span><span class="sxs-lookup"><span data-stu-id="765be-115">Instead, you must call one of the static members of the <xref:System.TimeZoneInfo> class shown in the following table.</span></span>  
  
|<span data-ttu-id="765be-116">静的メンバーの名前</span><span class="sxs-lookup"><span data-stu-id="765be-116">Static member name</span></span>|<span data-ttu-id="765be-117">説明</span><span class="sxs-lookup"><span data-stu-id="765be-117">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="765be-118"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="765be-118"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method</span></span>|<span data-ttu-id="765be-119">アプリケーションによって提供されるデータからカスタムのタイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-119">Creates a custom time zone from application-supplied data.</span></span>|  
|<span data-ttu-id="765be-120"><xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="765be-120"><xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method</span></span>|<span data-ttu-id="765be-121">その識別子に基づくタイム ゾーンをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="765be-121">Instantiates a time zone based on its identifier.</span></span>|  
|<span data-ttu-id="765be-122"><xref:System.TimeZoneInfo.FromSerializedString%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="765be-122"><xref:System.TimeZoneInfo.FromSerializedString%2A> method</span></span>|<span data-ttu-id="765be-123">以前にシリアル化を再作成する文字列値を逆シリアル化<xref:System.TimeZoneInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-123">Deserializes a string value to re-create a previously serialized <xref:System.TimeZoneInfo> object.</span></span>|  
|<span data-ttu-id="765be-124"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="765be-124"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method</span></span>|<span data-ttu-id="765be-125">列挙型を返します<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>の<xref:System.TimeZoneInfo>ローカル システムで利用できるすべてのタイム ゾーンを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-125">Returns an enumerable <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.TimeZoneInfo> objects that represents all time zones that are available on the local system.</span></span>|  
|<span data-ttu-id="765be-126"><xref:System.TimeZoneInfo.Local%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="765be-126"><xref:System.TimeZoneInfo.Local%2A> property</span></span>|<span data-ttu-id="765be-127">インスタンスを作成、<xref:System.TimeZoneInfo>ローカル タイム ゾーンを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-127">Instantiates a <xref:System.TimeZoneInfo> object that represents the local time zone.</span></span>|  
|<span data-ttu-id="765be-128"><xref:System.TimeZoneInfo.Utc%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="765be-128"><xref:System.TimeZoneInfo.Utc%2A> property</span></span>|<span data-ttu-id="765be-129">インスタンスを作成、 <xref:System.TimeZoneInfo> UTC ゾーンを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-129">Instantiates a <xref:System.TimeZoneInfo> object that represents the UTC zone.</span></span>|  
  
 <span data-ttu-id="765be-130">使用することができます、 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> Windows システムまたはタイム ゾーンのクラスによって、ローカルのシステム レジストリで定義されていないタイム ゾーンを作成する方法、 [ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)Linux または macOS でします。</span><span class="sxs-lookup"><span data-stu-id="765be-130">You can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to create a time zone that is not defined in the local system registry on Windows systems or by the time zone classes in the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux or macOS.</span></span> <span data-ttu-id="765be-131">使用してできます、<xref:System.TimeZoneInfo.ToSerializedString%2A>プロパティをアプリケーションにアクセスできるいくつかの形式で格納できる文字列としてタイム ゾーン オブジェクトの情報を保存します。</span><span class="sxs-lookup"><span data-stu-id="765be-131">You can then use the <xref:System.TimeZoneInfo.ToSerializedString%2A> property to save the time zone object's information as a string, which can be stored in some form that is accessible to the application.</span></span> <span data-ttu-id="765be-132">使用することができます、<xref:System.TimeZoneInfo.FromSerializedString%2A>にシリアル化された文字列に変換するメソッドが戻る、<xref:System.TimeZoneInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-132">You can use the <xref:System.TimeZoneInfo.FromSerializedString%2A> method to convert a serialized string back to a <xref:System.TimeZoneInfo> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseUtcOffset">
      <MemberSignature Language="C#" Value="public TimeSpan BaseUtcOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan BaseUtcOffset" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.BaseUtcOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUtcOffset As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan BaseUtcOffset { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUtcOffset : TimeSpan" Usage="System.TimeZoneInfo.BaseUtcOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="765be-133">現在のタイム ゾーンの標準時と世界協定時刻 (UTC) との差を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-133">Gets the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).</span></span></summary>
        <value><span data-ttu-id="765be-134">現在のタイム ゾーンの標準時と世界協定時刻 (UTC) との時差を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-134">An object that indicates the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-135">によって返される時間間隔、<xref:System.TimeZoneInfo.BaseUtcOffset%2A>プロパティの (14 時間の世界協定時刻 (UTC) の前であるタイム ゾーン) の 14 時間の範囲は-14 時間 (UTC の背後にある 14 時間をあるタイム ゾーン) のです。</span><span class="sxs-lookup"><span data-stu-id="765be-135">The time span returned by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property can range from 14 hours (for a time zone that is 14 hours ahead of Coordinated Universal Time (UTC)) to -14 hours (for a time zone that is 14 hours behind UTC).</span></span> <span data-ttu-id="765be-136">UTC タイム ゾーンが正のオフセットがあります。utc はタイム ゾーンでは、負のオフセットがあります。</span><span class="sxs-lookup"><span data-stu-id="765be-136">Time zones that are ahead of UTC have a positive offset; time zones that are behind UTC have a negative offset.</span></span>  
  
 <span data-ttu-id="765be-137"><xref:System.TimeZoneInfo.BaseUtcOffset%2A>値は分単位の整数として表されます。</span><span class="sxs-lookup"><span data-stu-id="765be-137">The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> value is represented as a whole number of minutes.</span></span> <span data-ttu-id="765be-138">分数を小数部を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="765be-138">It cannot include a fractional number of minutes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="765be-139"><xref:System.TimeZoneInfo.BaseUtcOffset%2A>のプロパティである、<xref:System.TimeZoneInfo>オブジェクトではなく、<xref:System.TimeZoneInfo.AdjustmentRule>オブジェクト、<xref:System.TimeZoneInfo>クラスは、すべてのタイム ゾーンの調整に UTC から単一のオフセットを適用します。</span><span class="sxs-lookup"><span data-stu-id="765be-139">Because <xref:System.TimeZoneInfo.BaseUtcOffset%2A> is a property of the <xref:System.TimeZoneInfo> object rather than the <xref:System.TimeZoneInfo.AdjustmentRule> object, the <xref:System.TimeZoneInfo> class applies a single offset from UTC to all of a time zone's adjustments.</span></span> <span data-ttu-id="765be-140">タイム ゾーンを UTC からのオフセットが変更を反映するために使用して新しいタイム ゾーンを作成する必要があります、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-140">To reflect a time zone that has modified its offset from UTC, you must create a new time zone using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span>  
  
 <span data-ttu-id="765be-141"><xref:System.TimeZoneInfo.BaseUtcOffset%2A>プロパティとは異なります、<xref:System.TimeZoneInfo.GetUtcOffset%2A>メソッドは、次の方法で。</span><span class="sxs-lookup"><span data-stu-id="765be-141">The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property differs from the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method in the following ways:</span></span>  
  
-   <span data-ttu-id="765be-142"><xref:System.TimeZoneInfo.BaseUtcOffset%2A>プロパティは、UTC とタイム ゾーンの標準時刻の差を返します、<xref:System.TimeZoneInfo.GetUtcOffset%2A>メソッドは、時間で UTC と、特定の時点のタイム ゾーンの時刻の差を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-142">The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property returns the difference between UTC and the time zone's standard time; the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method returns the difference between UTC and the time zone's time at a particular point in time.</span></span>  
  
-   <span data-ttu-id="765be-143"><xref:System.TimeZoneInfo.GetUtcOffset%2A>メソッドに反映されます。 タイム ゾーンに調整ルールのアプリケーション、<xref:System.TimeZoneInfo.BaseUtcOffset%2A>プロパティはありません。</span><span class="sxs-lookup"><span data-stu-id="765be-143">The <xref:System.TimeZoneInfo.GetUtcOffset%2A> method reflects the application of any adjustment rules to the time zone; the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property does not.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-144">次の例では、<xref:System.TimeZoneInfo.BaseUtcOffset%2A>現地時刻と世界協定時刻 (UTC) 間の差を表示するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="765be-144">The following example uses the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property to display the difference between the local time and Coordinated Universal Time (UTC).</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#1)]
 [!code-vb[System.TimeZone2.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.TimeZoneInfo.GetUtcOffset" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedData">
      <MemberSignature Language="C#" Value="public static void ClearCachedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCachedData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ClearCachedData" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCachedData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearCachedData();" />
      <MemberSignature Language="F#" Value="static member ClearCachedData : unit -&gt; unit" Usage="System.TimeZoneInfo.ClearCachedData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="765be-145">キャッシュされたタイム ゾーン データをクリアします。</span><span class="sxs-lookup"><span data-stu-id="765be-145">Clears cached time zone data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-146">キャッシュされたタイム ゾーン データには、ローカル タイム ゾーンと世界協定時刻 (UTC) ゾーンのデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="765be-146">Cached time zone data includes data on the local time zone and the Coordinated Universal Time (UTC) zone.</span></span>  
  
 <span data-ttu-id="765be-147">呼び出すことができます、`ClearCachedData`のタイム ゾーン情報またはローカル システムのタイム ゾーンに変更されたという事実を反映するように、アプリケーションのキャッシュにメモリを減らすための方法を占めています。</span><span class="sxs-lookup"><span data-stu-id="765be-147">You might call the `ClearCachedData` method to reduce the memory devoted to the application's cache of time zone information or to reflect the fact that the local system's time zone has changed.</span></span>  
  
 <span data-ttu-id="765be-148">ローカル、UTC タイム ゾーンへの参照を格納することは推奨されません。</span><span class="sxs-lookup"><span data-stu-id="765be-148">Storing references to the local and UTC time zones is not recommended.</span></span> <span data-ttu-id="765be-149">呼び出した後、`ClearCachedData`メソッドでは、これらのオブジェクト変数は未定義になります<xref:System.TimeZoneInfo>オブジェクトへの参照できなくなった<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>または<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="765be-149">After the call to the `ClearCachedData` method, these object variables will be undefined <xref:System.TimeZoneInfo> objects that are no longer references to <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="765be-150">たとえば、次のコードでは、2 番目の呼び出しで、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType>メソッドがスローされます、<xref:System.ArgumentException>ため、`local`変数と等しいと見なされなく<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="765be-150">For example, in the following code, the second call to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method throws an <xref:System.ArgumentException> because the `local` variable is no longer considered equal to <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.TimeZone2.BestPractices#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/cs/System.TimeZone2.BestPractices.cs#1)]
 [!code-vb[System.TimeZone2.BestPractices#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/vb/System.TimeZone2.BestPractices.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTime">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="765be-151">時刻を特定のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-151">Converts a time to the time in a particular time zone.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="765be-152">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="765be-152">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTime">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTime (DateTime dateTime, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTime(valuetype System.DateTime dateTime, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTime(DateTime dateTime, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTime : DateTime * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTime (dateTime, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="765be-153">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-153">The date and time to convert.</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="765be-154"><paramref name="dateTime" /> の変換先タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-154">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="765be-155">時刻を特定のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-155">Converts a time to the time in a particular time zone.</span></span></summary>
        <returns><span data-ttu-id="765be-156">変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-156">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-157">変換を実行するときに、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29>メソッドには、任意で有効の調整規則が適用されます、`destinationTimeZone`タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-157">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="765be-158">このオーバー ロード、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29>メソッドの値からソース タイム ゾーンの決定、`dateTime`パラメーターの<xref:System.DateTime.Kind%2A>プロパティとして、次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="765be-158">This overload of the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows.</span></span>  
  
|<span data-ttu-id="765be-159">Kind プロパティ値</span><span class="sxs-lookup"><span data-stu-id="765be-159">Kind property value</span></span>|<span data-ttu-id="765be-160">ソースのタイム ゾーン</span><span class="sxs-lookup"><span data-stu-id="765be-160">Source time zone</span></span>|<span data-ttu-id="765be-161">メソッドの動作</span><span class="sxs-lookup"><span data-stu-id="765be-161">Method behavior</span></span>|  
|-------------------------|----------------------|---------------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Local%2A>|<span data-ttu-id="765be-162">時間を現地時刻に変換します`destinationTimeZone`します。</span><span class="sxs-lookup"><span data-stu-id="765be-162">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Utc%2A>|<span data-ttu-id="765be-163">時刻を世界協定時刻 (UTC) に変換します`destinationTimeZone`します。</span><span class="sxs-lookup"><span data-stu-id="765be-163">Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="765be-164">あると見なされます<xref:System.TimeZoneInfo.Local%2A>します。</span><span class="sxs-lookup"><span data-stu-id="765be-164">Assumed to be <xref:System.TimeZoneInfo.Local%2A>.</span></span>|<span data-ttu-id="765be-165">時間を現地時刻に変換します`destinationTimeZone`します。</span><span class="sxs-lookup"><span data-stu-id="765be-165">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
  
 <span data-ttu-id="765be-166"><xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値は次の表に示すように設定されています。</span><span class="sxs-lookup"><span data-stu-id="765be-166">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.</span></span>  
  
|<span data-ttu-id="765be-167">条件</span><span class="sxs-lookup"><span data-stu-id="765be-167">Condition</span></span>|<span data-ttu-id="765be-168">Kind プロパティ値が返されました</span><span class="sxs-lookup"><span data-stu-id="765be-168">Returned Kind property value</span></span>|  
|---------------|----------------------------------|  
|<span data-ttu-id="765be-169">`destinationTimeZone` が <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="765be-169">The `destinationTimeZone` is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="765be-170">`destinationTimeZone` が <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="765be-170">The `destinationTimeZone` is <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|  
|<span data-ttu-id="765be-171">すべての他の日付と時刻の値と変換先タイム ゾーンで。</span><span class="sxs-lookup"><span data-stu-id="765be-171">All other date and time values and destination time zones.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|  
  
 <span data-ttu-id="765be-172">場合の値、`dateTime`パラメーターは、あいまいな現地時刻、その標準時刻として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="765be-172">If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time.</span></span> <span data-ttu-id="765be-173">場合、`dateTime`パラメーターが無効なローカル時刻で、このメソッドは、<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="765be-173">If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="765be-174">場合の変換`dateTime`結果の日付と時刻の値よりも前<xref:System.DateTime.MinValue?displayProperty=nameWithType>かそれより遅い<xref:System.DateTime.MaxValue?displayProperty=nameWithType>、このメソッドが戻る<xref:System.DateTime.MinValue?displayProperty=nameWithType>または<xref:System.DateTime.MaxValue?displayProperty=nameWithType>、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="765be-174">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="765be-175">呼び出して、UTC との間を変換することも、<xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A>と<xref:System.TimeZoneInfo.ConvertTimeToUtc%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-175">You can also convert to or from UTC by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-176">次の例では、米国およびカナダ東部標準時ゾーンでの時刻に日付と時刻の値の配列を変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-176">The following example converts an array of date and time values to times in the Eastern Time zone of the U.S. and Canada.</span></span> <span data-ttu-id="765be-177">ソースのタイム ゾーンに依存していることを示しています、<xref:System.DateTime.Kind%2A?displayProperty=nameWithType>ソースのプロパティ<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="765be-177">It shows that the source time zone depends on the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property of the source <xref:System.DateTime> value.</span></span> <span data-ttu-id="765be-178">これも示します、<xref:System.TimeZoneInfo.ConvertTime%2A>メソッドはタイム ゾーンの調整がソースと宛先の両方のタイム ゾーンで午前 2 時に発生するためのアカウントにタイム ゾーンの調整を受け取ります</span><span class="sxs-lookup"><span data-stu-id="765be-178">It also illustrates that the <xref:System.TimeZoneInfo.ConvertTime%2A> method takes time zone adjustments into account, because a time zone adjustment occurs in both the source and destination time zones at 2:00 A.M.</span></span> <span data-ttu-id="765be-179">2010 年 11 月 7 日。</span><span class="sxs-lookup"><span data-stu-id="765be-179">on November 7, 2010.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.ConvertTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.converttime/cs/converttime1.cs#1)]
 [!code-vb[System.TimeZoneInfo.ConvertTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.converttime/vb/converttime1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-180"><paramref name="dateTime" /> パラメーターの値が無効な時刻を表しています。</span><span class="sxs-lookup"><span data-stu-id="765be-180">The value of the <paramref name="dateTime" /> parameter represents an invalid time.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-181"><paramref name="destinationTimeZone" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-181">The value of the <paramref name="destinationTimeZone" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="765be-182">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="765be-182">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTime">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ConvertTime (DateTimeOffset dateTimeOffset, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ConvertTime(valuetype System.DateTimeOffset dateTimeOffset, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ConvertTime(DateTimeOffset dateTimeOffset, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTime : DateTimeOffset * TimeZoneInfo -&gt; DateTimeOffset" Usage="System.TimeZoneInfo.ConvertTime (dateTimeOffset, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="765be-183">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-183">The date and time to convert.</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="765be-184"><paramref name="dateTime" /> の変換先タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-184">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="765be-185">時刻を特定のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-185">Converts a time to the time in a particular time zone.</span></span></summary>
        <returns><span data-ttu-id="765be-186">変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-186">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-187">変換を実行するときに、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29>メソッドには、任意で有効の調整規則が適用されます、`destinationTimeZone`タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-187">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="765be-188">このオーバー ロードの他のオーバー ロード、<xref:System.TimeZoneInfo.ConvertTime%2A>メソッドをそのまま使用して、<xref:System.DateTimeOffset>最初のパラメーターとして値。</span><span class="sxs-lookup"><span data-stu-id="765be-188">This overload differs from the other overloads of the <xref:System.TimeZoneInfo.ConvertTime%2A> method by accepting a <xref:System.DateTimeOffset> value as its first parameter.</span></span> <span data-ttu-id="765be-189">特定のタイム ゾーンの日時としてではなく、世界協定時刻 (UTC) からのオフセットとして、日付と時刻を識別します。</span><span class="sxs-lookup"><span data-stu-id="765be-189">This identifies the date and time as an offset from Coordinated Universal Time (UTC) rather than as the date and time in a particular time zone.</span></span> <span data-ttu-id="765be-190">結果として、`dateTimeOffset`パラメーターは、あいまいな時刻または無効な時刻を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="765be-190">As a result, the `dateTimeOffset` parameter cannot represent either an ambiguous time or an invalid time.</span></span>  
  
 <span data-ttu-id="765be-191">変換で、`dateTimeOffset`変換先のタイム ゾーンで有効な任意の調整規則は考慮の時刻に変換先タイム ゾーンで、このメソッドの値。</span><span class="sxs-lookup"><span data-stu-id="765be-191">In converting the `dateTimeOffset` value to the time in the destination time zone, this method takes into account any adjustment rules in effect in the destination time zone.</span></span>  
  
 <span data-ttu-id="765be-192">場合の変換`dateTimeOffset`結果の日付と時刻の値よりも前<xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>かそれより遅い<xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>、このメソッドが戻る<xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>または<xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="765be-192">If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-193">次の例の配列を変換します<xref:System.DateTimeOffset>の米国およびカナダ東部標準時ゾーンの時刻値。</span><span class="sxs-lookup"><span data-stu-id="765be-193">The following example converts an array of <xref:System.DateTimeOffset> values to times in the Eastern Time zone of the U.S. and Canada.</span></span> <span data-ttu-id="765be-194">示しています、<xref:System.TimeZoneInfo.ConvertTime%2A>メソッドはタイム ゾーンの調整がソースと宛先の両方のタイム ゾーンで午前 2 時に発生するためのアカウントにタイム ゾーンの調整を受け取ります</span><span class="sxs-lookup"><span data-stu-id="765be-194">It illustrates that the <xref:System.TimeZoneInfo.ConvertTime%2A> method takes time zone adjustments into account, because a time zone adjustment occurs in both the source and destination time zones at 2:00 A.M.</span></span> <span data-ttu-id="765be-195">2010 年 11 月 7 日。</span><span class="sxs-lookup"><span data-stu-id="765be-195">on November 7, 2010.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.ConvertTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.converttime/cs/converttime2.cs#2)]
 [!code-vb[System.TimeZoneInfo.ConvertTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.converttime/vb/converttime2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-196"><paramref name="destinationTimeZone" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-196">The value of the <paramref name="destinationTimeZone" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="765be-197">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="765be-197">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTime">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTime (DateTime dateTime, TimeZoneInfo sourceTimeZone, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTime(valuetype System.DateTime dateTime, class System.TimeZoneInfo sourceTimeZone, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTime(DateTime dateTime, TimeZoneInfo ^ sourceTimeZone, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTime : DateTime * TimeZoneInfo * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTime (dateTime, sourceTimeZone, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="765be-198">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-198">The date and time to convert.</span></span></param>
        <param name="sourceTimeZone"><span data-ttu-id="765be-199"><paramref name="dateTime" /> のタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-199">The time zone of <paramref name="dateTime" />.</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="765be-200"><paramref name="dateTime" /> の変換先タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-200">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="765be-201">あるタイム ゾーンの時刻を別のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-201">Converts a time from one time zone to another.</span></span></summary>
        <returns><span data-ttu-id="765be-202">変換元タイム ゾーンでの <paramref name="dateTime" /> パラメーターに対応する、変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-202">The date and time in the destination time zone that corresponds to the <paramref name="dateTime" /> parameter in the source time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-203">変換を実行するときに、<xref:System.TimeZoneInfo.ConvertTime%2A>メソッドには、任意で有効の調整規則が適用されます、`destinationTimeZone`タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-203">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="765be-204">値、<xref:System.DateTime.Kind%2A>のプロパティ、`dateTime`パラメーターに対応する必要があります、`sourceTimeZone`パラメーターとして、次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="765be-204">The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZone` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="765be-205">DateTime.Kind 値</span><span class="sxs-lookup"><span data-stu-id="765be-205">DateTime.Kind value</span></span>|<span data-ttu-id="765be-206">sourceTimeZone 値</span><span class="sxs-lookup"><span data-stu-id="765be-206">sourceTimeZone value</span></span>|<span data-ttu-id="765be-207">メソッドの動作</span><span class="sxs-lookup"><span data-stu-id="765be-207">Method behavior</span></span>|  
|-------------------------|--------------------------|---------------------|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="765be-208">等しい<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="765be-208">Equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="765be-209">変換`dateTime`変換先タイム ゾーンの時刻にします。</span><span class="sxs-lookup"><span data-stu-id="765be-209">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="765be-210">等しくない<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="765be-210">Does not equal <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="765be-211">スローされます、<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="765be-211">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="765be-212">等しい<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="765be-212">Equals <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="765be-213">変換`dateTime`変換先タイム ゾーンの時刻にします。</span><span class="sxs-lookup"><span data-stu-id="765be-213">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="765be-214">等しくない<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="765be-214">Does not equal <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="765be-215">スローされます、<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="765be-215">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="765be-216">任意です。</span><span class="sxs-lookup"><span data-stu-id="765be-216">Any.</span></span>|<span data-ttu-id="765be-217">変換`dateTime`変換先タイム ゾーンの時刻にします。</span><span class="sxs-lookup"><span data-stu-id="765be-217">Converts `dateTime` to the destination time zone's time.</span></span>|  
  
 <span data-ttu-id="765be-218">呼び出すことによって、世界協定時刻 (UTC) からまたはを変換することも、<xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A>と<xref:System.TimeZoneInfo.ConvertTimeToUtc%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-218">You can also convert to or from Coordinated Universal Time (UTC) by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.</span></span>  
  
 <span data-ttu-id="765be-219"><xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値は次の表に示すように設定されています。</span><span class="sxs-lookup"><span data-stu-id="765be-219">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.</span></span>  
  
|<span data-ttu-id="765be-220">条件</span><span class="sxs-lookup"><span data-stu-id="765be-220">Condition</span></span>|<span data-ttu-id="765be-221">Kind プロパティ値が返されました</span><span class="sxs-lookup"><span data-stu-id="765be-221">Returned Kind property value</span></span>|  
|---------------|----------------------------------|  
|<span data-ttu-id="765be-222">`destinationTimeZone` 引数が <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="765be-222">The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="765be-223">`destinationTimeZone` 引数が <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="765be-223">The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|  
|<span data-ttu-id="765be-224">すべての他の日付と時刻の値、ソースのタイム ゾーン、および変換先タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-224">All other date and time values, source time zones, and destination time zones.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|  
  
 <span data-ttu-id="765be-225">場合の値、`dateTime`パラメーターは、ソースのタイム ゾーンであいまいな時刻、その標準時刻として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="765be-225">If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time.</span></span> <span data-ttu-id="765be-226">場合、`dateTime`パラメーターが無効な時刻ソース タイム ゾーンで、このメソッドをスローする<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="765be-226">If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="765be-227">場合の変換`dateTime`結果の日付と時刻の値よりも前<xref:System.DateTime.MinValue?displayProperty=nameWithType>かそれより遅い<xref:System.DateTime.MaxValue?displayProperty=nameWithType>、このメソッドが戻る<xref:System.DateTime.MinValue?displayProperty=nameWithType>または<xref:System.DateTime.MaxValue?displayProperty=nameWithType>、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="765be-227">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="765be-228"><xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29>メソッドがスローされます、<xref:System.ArgumentException>例外場合、<xref:System.DateTime.Kind%2A?displayProperty=nameWithType>のプロパティ、`dateTime`引数が<xref:System.DateTimeKind.Local?displayProperty=nameWithType>が、`sourceTimeZone`引数がない<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="765be-228">The <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> method throws an <xref:System.ArgumentException> exception if the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property of the `dateTime` argument is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> but the `sourceTimeZone` argument is not <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="765be-229">参照の等価性と値の等価性テストではなく、メソッドがテスト ソースのタイム ゾーンは、ローカル タイム ゾーンまたは universal のタイム ゾーンが、かどうかを判断する、<xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-229">To determine whether the source time zone is the local time zone or the universal time zone, the method tests for reference equality instead of testing for value equality with the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> method.</span></span> <span data-ttu-id="765be-230">なお<xref:System.TimeZoneInfo>ローカル タイム ゾーンを表すし、は、呼び出すことによって取得されるオブジェクト、<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>メソッドの参照の等価性がない<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="765be-230">Note that <xref:System.TimeZoneInfo> objects that represent the local time zone and that are retrieved by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="765be-231">さらに、<xref:System.TimeZoneInfo>ローカル パスまたは universal のタイム ゾーンを表すし、によって返されるコレクションを反復することで取得するオブジェクト、<xref:System.TimeZoneInfo.GetSystemTimeZones%2A>メソッドの参照の等価性がない<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>または<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="765be-231">Furthermore, <xref:System.TimeZoneInfo> objects that represent the local or universal time zone and that are retrieved by iterating the collection returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="765be-232">代わりに、呼び出すことができます、<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-232">As an alternative, you can call the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-233">次の例では、使用、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29>ハワイ標準時を現地時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-233">The following example illustrates the use of the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> method to convert from Hawaiian Standard Time to local time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Concepts#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Concepts/CS/TimeZone2Concepts.cs#9)]
 [!code-vb[System.TimeZone2.Concepts#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Concepts/VB/TimeZone2Concepts.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-234"><paramref name="dateTime" /> パラメーターの <see cref="P:System.DateTime.Kind" /> プロパティが <see cref="F:System.DateTimeKind.Local" /> ですが、<paramref name="sourceTimeZone" /> パラメーターが <see cref="F:System.DateTimeKind.Local" /> と等しくありません。</span><span class="sxs-lookup"><span data-stu-id="765be-234">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> parameter is <see cref="F:System.DateTimeKind.Local" />, but the <paramref name="sourceTimeZone" /> parameter does not equal <see cref="F:System.DateTimeKind.Local" />.</span></span>  
  
<span data-ttu-id="765be-235">または</span><span class="sxs-lookup"><span data-stu-id="765be-235">-or-</span></span> 
<span data-ttu-id="765be-236"><paramref name="dateTime" /> パラメーターの <see cref="P:System.DateTime.Kind" /> プロパティが <see cref="F:System.DateTimeKind.Utc" /> ですが、<paramref name="sourceTimeZone" /> パラメーターが <see cref="P:System.TimeZoneInfo.Utc" /> と等しくありません。</span><span class="sxs-lookup"><span data-stu-id="765be-236">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> parameter is <see cref="F:System.DateTimeKind.Utc" />, but the <paramref name="sourceTimeZone" /> parameter does not equal <see cref="P:System.TimeZoneInfo.Utc" />.</span></span>  
  
<span data-ttu-id="765be-237">または</span><span class="sxs-lookup"><span data-stu-id="765be-237">-or-</span></span> 
<span data-ttu-id="765be-238"><paramref name="dateTime" /> パラメーターが無効な時刻です (つまり、タイム ゾーンの調整規則に起因して存在しえない時刻を表しています)。</span><span class="sxs-lookup"><span data-stu-id="765be-238">The <paramref name="dateTime" /> parameter is an invalid time (that is, it represents a time that does not exist because of a time zone's adjustment rules).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-239"><paramref name="sourceTimeZone" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-239">The <paramref name="sourceTimeZone" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="765be-240">または</span><span class="sxs-lookup"><span data-stu-id="765be-240">-or-</span></span> 
<span data-ttu-id="765be-241"><paramref name="destinationTimeZone" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-241">The <paramref name="destinationTimeZone" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId" />
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="765be-242">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="765be-242">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTimeBySystemTimeZoneId">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="765be-243">ある時刻をタイム ゾーン ID に基づいて別のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-243">Converts a time to the time in another time zone based on a time zone identifier.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="765be-244">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="765be-244">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTimeBySystemTimeZoneId">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeBySystemTimeZoneId (DateTime dateTime, string destinationTimeZoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeBySystemTimeZoneId(valuetype System.DateTime dateTime, string destinationTimeZoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeBySystemTimeZoneId(DateTime dateTime, System::String ^ destinationTimeZoneId);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeBySystemTimeZoneId : DateTime * string -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (dateTime, destinationTimeZoneId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationTimeZoneId" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="765be-245">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-245">The date and time to convert.</span></span></param>
        <param name="destinationTimeZoneId"><span data-ttu-id="765be-246">変換先タイム ゾーンの ID。</span><span class="sxs-lookup"><span data-stu-id="765be-246">The identifier of the destination time zone.</span></span></param>
        <summary><span data-ttu-id="765be-247">ある時刻をタイム ゾーン ID に基づいて別のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-247">Converts a time to the time in another time zone based on the time zone's identifier.</span></span></summary>
        <returns><span data-ttu-id="765be-248">変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-248">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-249">変換を実行するときに、<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A>メソッドには、任意で有効の調整規則が適用されます、`destinationTimeZoneId`タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-249">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.</span></span>  
  
 <span data-ttu-id="765be-250">このオーバー ロードの呼び出しとほぼ同じですが、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29>その it では、オブジェクト参照ではなく、その識別子を使用して、変換先のタイム ゾーンを指定できます。 ただし、メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-250">This overload is largely identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference.</span></span> <span data-ttu-id="765be-251">それに対応するタイム ゾーン オブジェクトを取得することがなく、時刻を変換する必要があり、変換された時間が standard または夏時間かどうかを把握する必要はありません、このメソッドは最も役立ちます。</span><span class="sxs-lookup"><span data-stu-id="765be-251">This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.</span></span>  
  
 <span data-ttu-id="765be-252"><xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%29>メソッドの値からソース タイム ゾーンの決定、`dateTime`パラメーターの<xref:System.DateTime.Kind%2A>プロパティとして、次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="765be-252">The <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows.</span></span>  
  
|<span data-ttu-id="765be-253">Kind プロパティ値</span><span class="sxs-lookup"><span data-stu-id="765be-253">Kind property value</span></span>|<span data-ttu-id="765be-254">ソースのタイム ゾーン</span><span class="sxs-lookup"><span data-stu-id="765be-254">Source time zone</span></span>|<span data-ttu-id="765be-255">メソッドの動作</span><span class="sxs-lookup"><span data-stu-id="765be-255">Method behavior</span></span>|  
|-------------------------|----------------------|---------------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Local%2A>|<span data-ttu-id="765be-256">時間を現地時刻に変換します`destinationTimeZone`します。</span><span class="sxs-lookup"><span data-stu-id="765be-256">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Utc%2A>|<span data-ttu-id="765be-257">時刻を世界協定時刻 (UTC) に変換します`destinationTimeZone`します。</span><span class="sxs-lookup"><span data-stu-id="765be-257">Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="765be-258">あると見なされます<xref:System.TimeZoneInfo.Local%2A>します。</span><span class="sxs-lookup"><span data-stu-id="765be-258">Assumed to be <xref:System.TimeZoneInfo.Local%2A>.</span></span>|<span data-ttu-id="765be-259">時間を現地時刻に変換します`destinationTimeZone`します。</span><span class="sxs-lookup"><span data-stu-id="765be-259">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
  
 <span data-ttu-id="765be-260"><xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値は次の表に示すように設定されています。</span><span class="sxs-lookup"><span data-stu-id="765be-260">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.</span></span>  
  
|<span data-ttu-id="765be-261">条件</span><span class="sxs-lookup"><span data-stu-id="765be-261">Condition</span></span>|<span data-ttu-id="765be-262">Kind プロパティ値が返されました</span><span class="sxs-lookup"><span data-stu-id="765be-262">Returned Kind property value</span></span>|  
|---------------|----------------------------------|  
|<span data-ttu-id="765be-263">`destinationTimeZone` が `TimeZoneInfo.Utc.Id` です。</span><span class="sxs-lookup"><span data-stu-id="765be-263">The `destinationTimeZone` is `TimeZoneInfo.Utc.Id`.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="765be-264">その他の`destinationTimeZone`値。</span><span class="sxs-lookup"><span data-stu-id="765be-264">Any other `destinationTimeZone` value.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|  
  
 <span data-ttu-id="765be-265">場合の値、`dateTime`パラメーターは、あいまいな現地時刻、その標準時刻として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="765be-265">If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time.</span></span> <span data-ttu-id="765be-266">場合、`dateTime`パラメーターが無効なローカル時刻で、このメソッドは、<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="765be-266">If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="765be-267">場合の変換`dateTime`結果の日付と時刻の値よりも前<xref:System.DateTime.MinValue?displayProperty=nameWithType>かそれより遅い<xref:System.DateTime.MaxValue?displayProperty=nameWithType>、このメソッドが戻る<xref:System.DateTime.MinValue?displayProperty=nameWithType>または<xref:System.DateTime.MaxValue?displayProperty=nameWithType>、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="765be-267">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="765be-268">このメソッドは、識別子を持つがで指定されたタイム ゾーンに関する情報を取得、 `destinationTimeZoneId` Windows システムとの間に、レジストリからパラメーター、 [ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)Linux と macOS でします。</span><span class="sxs-lookup"><span data-stu-id="765be-268">This method retrieves information on the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="765be-269">使用して作成されたタイム ゾーン オブジェクトを取得できない、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-269">It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="765be-270">`destinationTimeZoneId`パラメーターがの長さが、正常に一致する; の場合には、タイム ゾーンの識別子と正確に一致する必要がありますの比較は、`destinationTimeZoneId`とタイム ゾーン識別子は大文字です。</span><span class="sxs-lookup"><span data-stu-id="765be-270">The `destinationTimeZoneId` parameter must correspond exactly to the time zone's identifier in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-271"><paramref name="destinationTimeZoneId" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="765be-271"><paramref name="destinationTimeZoneId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="765be-272">タイム ゾーン ID が見つかりましたが、レジストリ データが破損しています。</span><span class="sxs-lookup"><span data-stu-id="765be-272">The time zone identifier was found, but the registry data is corrupted.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="765be-273">プロセスには、タイム ゾーン情報を格納するレジストリ キーからの読み取りに必要な権限がありません。</span><span class="sxs-lookup"><span data-stu-id="765be-273">The process does not have the permissions required to read from the registry key that contains the time zone information.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="765be-274"><paramref name="destinationTimeZoneId" /> ID がローカル システムで見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="765be-274">The <paramref name="destinationTimeZoneId" /> identifier was not found on the local system.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="765be-275">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="765be-275">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeBySystemTimeZoneId">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ConvertTimeBySystemTimeZoneId (DateTimeOffset dateTimeOffset, string destinationTimeZoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ConvertTimeBySystemTimeZoneId(valuetype System.DateTimeOffset dateTimeOffset, string destinationTimeZoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ConvertTimeBySystemTimeZoneId(DateTimeOffset dateTimeOffset, System::String ^ destinationTimeZoneId);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeBySystemTimeZoneId : DateTimeOffset * string -&gt; DateTimeOffset" Usage="System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (dateTimeOffset, destinationTimeZoneId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationTimeZoneId" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="765be-276">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-276">The date and time to convert.</span></span></param>
        <param name="destinationTimeZoneId"><span data-ttu-id="765be-277">変換先タイム ゾーンの ID。</span><span class="sxs-lookup"><span data-stu-id="765be-277">The identifier of the destination time zone.</span></span></param>
        <summary><span data-ttu-id="765be-278">ある時刻をタイム ゾーン ID に基づいて別のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-278">Converts a time to the time in another time zone based on the time zone's identifier.</span></span></summary>
        <returns><span data-ttu-id="765be-279">変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-279">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-280">変換を実行するときに、<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A>メソッドには、任意で有効の調整規則が適用されます、`destinationTimeZoneId`タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-280">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.</span></span>  
  
 <span data-ttu-id="765be-281">このオーバー ロードを呼び出すことは、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29>その it では、オブジェクト参照ではなく、その識別子を使用して、変換先のタイム ゾーンを指定できます。 ただし、メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-281">This overload is identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference.</span></span> <span data-ttu-id="765be-282">それに対応するタイム ゾーン オブジェクトを取得することがなく、時刻を変換する必要があり、変換された時間が standard または夏時間かどうかを把握する必要はありません、このメソッドは最も役立ちます。</span><span class="sxs-lookup"><span data-stu-id="765be-282">This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.</span></span>  
  
 <span data-ttu-id="765be-283">`dateTimeOffset`パラメーターが日付を表すと世界協定時刻 (UTC) からの時点と時刻のオフセットがあいまいな時刻または無効な時刻のいずれかを表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="765be-283">Because the `dateTimeOffset` parameter represents a date and time together with that time's offset from Coordinated Universal Time (UTC), it cannot represent either an ambiguous time or an invalid time.</span></span>  
  
 <span data-ttu-id="765be-284">このメソッドは、識別子を持つがで指定されたタイム ゾーンを取得、 `destinationTimeZoneId` Windows システムとの間に、レジストリからパラメーター、 [ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)Linux と macOS でします。</span><span class="sxs-lookup"><span data-stu-id="765be-284">This method retrieves the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="765be-285">使用して作成されたタイム ゾーン オブジェクトを取得できない、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-285">It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="765be-286">`destinationTimeZoneId`パラメーターがの長さが、正常に一致する; の場合には、タイム ゾーンの識別子と正確に一致する必要がありますの比較は、`destinationTimeZoneId`とタイム ゾーン識別子は大文字です。</span><span class="sxs-lookup"><span data-stu-id="765be-286">The `destinationTimeZoneId` parameter must correspond exactly to the time zone's identifier in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.</span></span>  
  
 <span data-ttu-id="765be-287">変換で、`dateTimeOffset`変換先のタイム ゾーンで有効な任意の調整規則は考慮の時刻に変換先のタイム ゾーン、メソッドの値。</span><span class="sxs-lookup"><span data-stu-id="765be-287">In converting the `dateTimeOffset` value to the time in the destination time zone, the method takes into account any adjustment rules in effect in the destination time zone.</span></span>  
  
 <span data-ttu-id="765be-288">場合の変換`dateTimeOffset`結果の日付と時刻の値よりも前<xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>かそれより遅い<xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>、このメソッドが戻る<xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>または<xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="765be-288">If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-289"><paramref name="destinationTimeZoneId" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="765be-289"><paramref name="destinationTimeZoneId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="765be-290">タイム ゾーン ID が見つかりましたが、レジストリ データが破損しています。</span><span class="sxs-lookup"><span data-stu-id="765be-290">The time zone identifier was found but the registry data is corrupted.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="765be-291">プロセスには、タイム ゾーン情報を格納するレジストリ キーからの読み取りに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="765be-291">The process does not have the permissions required to read from the registry key that contains the time zone information.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="765be-292"><paramref name="destinationTimeZoneId" /> ID がローカル システムで見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="765be-292">The <paramref name="destinationTimeZoneId" /> identifier was not found on the local system.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="765be-293">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="765be-293">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeBySystemTimeZoneId">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeBySystemTimeZoneId (DateTime dateTime, string sourceTimeZoneId, string destinationTimeZoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeBySystemTimeZoneId(valuetype System.DateTime dateTime, string sourceTimeZoneId, string destinationTimeZoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeBySystemTimeZoneId(DateTime dateTime, System::String ^ sourceTimeZoneId, System::String ^ destinationTimeZoneId);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeBySystemTimeZoneId : DateTime * string * string -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (dateTime, sourceTimeZoneId, destinationTimeZoneId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTimeZoneId" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationTimeZoneId" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="765be-294">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-294">The date and time to convert.</span></span></param>
        <param name="sourceTimeZoneId"><span data-ttu-id="765be-295">変換元タイム ゾーンの ID。</span><span class="sxs-lookup"><span data-stu-id="765be-295">The identifier of the source time zone.</span></span></param>
        <param name="destinationTimeZoneId"><span data-ttu-id="765be-296">変換先タイム ゾーンの ID。</span><span class="sxs-lookup"><span data-stu-id="765be-296">The identifier of the destination time zone.</span></span></param>
        <summary><span data-ttu-id="765be-297">あるタイム ゾーンの時刻を別のタイム ゾーンの時刻にタイム ゾーン ID に基づいて変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-297">Converts a time from one time zone to another based on time zone identifiers.</span></span></summary>
        <returns><span data-ttu-id="765be-298">変換元タイム ゾーンでの <paramref name="dateTime" /> パラメーターに対応する、変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-298">The date and time in the destination time zone that corresponds to the <paramref name="dateTime" /> parameter in the source time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-299">変換を実行するときに、<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A>メソッドには、任意で有効の調整規則が適用されます、`destinationTimeZoneId`タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-299">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.</span></span>  
  
 <span data-ttu-id="765be-300">似ていますが、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType>使用するメソッド、<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType>の代わりにそれらの識別子を使用して、ソースと変換先のタイム ゾーンを指定する、<xref:System.TimeZoneInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-300">Although it is similar to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method, you can use <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> to specify the source and destination time zones using their identifiers instead of their <xref:System.TimeZoneInfo> objects.</span></span> <span data-ttu-id="765be-301">それに対応するタイム ゾーン オブジェクトを取得することがなく、時刻を変換する必要があり、変換された時間が standard または夏時間かどうかを把握する必要はありません、このメソッドは最も役立ちます。</span><span class="sxs-lookup"><span data-stu-id="765be-301">This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.</span></span>  
  
 <span data-ttu-id="765be-302">このメソッドを持つ識別子は、タイム ゾーンを取得、`sourceTimeZoneId`と`destinationTimeZoneId`Windows システムとの間のレジストリからパラメーターを[ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)Linux と macOS でします。</span><span class="sxs-lookup"><span data-stu-id="765be-302">This method retrieves the time zones whose identifiers are the `sourceTimeZoneId` and `destinationTimeZoneId` parameters from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="765be-303">使用して作成されたタイム ゾーン オブジェクトを取得できない、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-303">It cannot retrieve time zone objects that are created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span>  
  
 <span data-ttu-id="765be-304">値、<xref:System.DateTime.Kind%2A>のプロパティ、`dateTime`パラメーターに対応する必要があります、`sourceTimeZoneId`パラメーターとして、次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="765be-304">The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZoneId` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="765be-305">DateTime.Kind 値</span><span class="sxs-lookup"><span data-stu-id="765be-305">DateTime.Kind value</span></span>|<span data-ttu-id="765be-306">sourceTimeZone 値</span><span class="sxs-lookup"><span data-stu-id="765be-306">sourceTimeZone value</span></span>|<span data-ttu-id="765be-307">メソッドの動作</span><span class="sxs-lookup"><span data-stu-id="765be-307">Method behavior</span></span>|  
|-------------------------|--------------------------|---------------------|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="765be-308">等しい`TimeZoneInfo.Utc.Id`します。</span><span class="sxs-lookup"><span data-stu-id="765be-308">Equals `TimeZoneInfo.Utc.Id`.</span></span>|<span data-ttu-id="765be-309">変換`dateTime`変換先タイム ゾーンの時刻にします。</span><span class="sxs-lookup"><span data-stu-id="765be-309">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="765be-310">等しくない`TimeZoneInfo.Utc.Id`します。</span><span class="sxs-lookup"><span data-stu-id="765be-310">Does not equal `TimeZoneInfo.Utc.Id`.</span></span>|<span data-ttu-id="765be-311">スローされます、<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="765be-311">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="765be-312">等しい`TimeZoneInfo.Local.Id`します。</span><span class="sxs-lookup"><span data-stu-id="765be-312">Equals `TimeZoneInfo.Local.Id`.</span></span>|<span data-ttu-id="765be-313">変換`dateTime`変換先タイム ゾーンの時刻にします。</span><span class="sxs-lookup"><span data-stu-id="765be-313">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="765be-314">等しくない`TimeZoneInfo.Local.Id`します。</span><span class="sxs-lookup"><span data-stu-id="765be-314">Does not equal `TimeZoneInfo.Local.Id`.</span></span>|<span data-ttu-id="765be-315">スローされます、<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="765be-315">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="765be-316">任意です。</span><span class="sxs-lookup"><span data-stu-id="765be-316">Any.</span></span>|<span data-ttu-id="765be-317">変換`dateTime`変換先タイム ゾーンの時刻にします。</span><span class="sxs-lookup"><span data-stu-id="765be-317">Converts `dateTime` to the destination time zone's time.</span></span>|  
  
 <span data-ttu-id="765be-318">呼び出しに依存するため、<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>メソッド、<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A>メソッドに対応するタイム ゾーンを検索する検索を実行する`sourceTimeZoneId`と`destinationTimeZoneId`します。</span><span class="sxs-lookup"><span data-stu-id="765be-318">Because it relies on calls to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method performs a case-insensitive search to locate the time zones that correspond to `sourceTimeZoneId` and `destinationTimeZoneId`.</span></span>  
  
 <span data-ttu-id="765be-319">場合の値、`dateTime`パラメーターは、ソースのタイム ゾーンであいまいな時刻、その標準時刻として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="765be-319">If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time.</span></span> <span data-ttu-id="765be-320">場合、`dateTime`パラメーターが無効な時刻ソース タイム ゾーンで、このメソッドをスローする<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="765be-320">If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="765be-321"><xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値に設定されて<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>変換先のタイム ゾーンは、世界協定時刻 (UTC) でない限り、この場合に設定されている<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="765be-321">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> unless the destination time zone is Coordinated Universal Time (UTC), in which case it is set to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-322">次の例では、<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType>ローカル システム時刻を世界の 8 つの都市に対応する時刻を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-322">The following example uses the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> method to display the time that corresponds to the local system time in eight cities of the world.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/System.TimeZone2.Conversions.cs#3)]
 [!code-vb[System.TimeZone2.Conversions#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/System.TimeZone2.Conversions.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-323"><paramref name="dateTime" /> パラメーターの <see cref="P:System.DateTime.Kind" /> プロパティは変換元タイム ゾーンと対応していません。</span><span class="sxs-lookup"><span data-stu-id="765be-323">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> parameter does not correspond to the source time zone.</span></span>  
  
<span data-ttu-id="765be-324">または</span><span class="sxs-lookup"><span data-stu-id="765be-324">-or-</span></span> 
 <span data-ttu-id="765be-325"><paramref name="dateTime" /> が変換元タイム ゾーンで無効な時刻です。</span><span class="sxs-lookup"><span data-stu-id="765be-325"><paramref name="dateTime" /> is an invalid time in the source time zone.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-326"><paramref name="sourceTimeZoneId" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="765be-326"><paramref name="sourceTimeZoneId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="765be-327">- または -</span><span class="sxs-lookup"><span data-stu-id="765be-327">-or-</span></span> 
 <span data-ttu-id="765be-328"><paramref name="destinationTimeZoneId" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="765be-328"><paramref name="destinationTimeZoneId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="765be-329">タイム ゾーン ID が見つかりましたが、レジストリ データが破損しています。</span><span class="sxs-lookup"><span data-stu-id="765be-329">The time zone identifiers were found, but the registry data is corrupted.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="765be-330">ユーザーには、タイム ゾーン データが格納されているレジストリ キーからの読み取りに必要な権限がありません。</span><span class="sxs-lookup"><span data-stu-id="765be-330">The user does not have the permissions required to read from the registry keys that hold time zone data.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="765be-331"><paramref name="sourceTimeZoneId" /> ID がローカル システムで見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="765be-331">The <paramref name="sourceTimeZoneId" /> identifier was not found on the local system.</span></span>  
  
<span data-ttu-id="765be-332">または</span><span class="sxs-lookup"><span data-stu-id="765be-332">-or-</span></span> 
<span data-ttu-id="765be-333"><paramref name="destinationTimeZoneId" /> ID がローカル システムで見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="765be-333">The <paramref name="destinationTimeZoneId" /> identifier was not found on the local system.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="765be-334">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="765be-334">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeFromUtc">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeFromUtc (DateTime dateTime, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeFromUtc(valuetype System.DateTime dateTime, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeFromUtc(DateTime dateTime, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeFromUtc : DateTime * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeFromUtc (dateTime, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="765be-335">世界協定時刻 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="765be-335">The Coordinated Universal Time (UTC).</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="765be-336"><paramref name="dateTime" /> の変換先タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-336">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="765be-337">世界協定時刻 (UTC) を、指定されたタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-337">Converts a Coordinated Universal Time (UTC) to the time in a specified time zone.</span></span></summary>
        <returns><span data-ttu-id="765be-338">変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-338">The date and time in the destination time zone.</span></span> <span data-ttu-id="765be-339"><paramref name="destinationTimeZone" /> が <see cref="P:System.DateTime.Kind" /> の場合、<see cref="F:System.DateTimeKind.Utc" /> プロパティは <see cref="P:System.TimeZoneInfo.Utc" />。それ以外の場合、<see cref="P:System.DateTime.Kind" /> プロパティは <see cref="F:System.DateTimeKind.Unspecified" />。</span><span class="sxs-lookup"><span data-stu-id="765be-339">Its <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Utc" /> if <paramref name="destinationTimeZone" /> is <see cref="P:System.TimeZoneInfo.Utc" />; otherwise, its <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Unspecified" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-340">変換を実行するときに、<xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A>メソッドには、任意で有効の調整規則が適用されます、`destinationTimeZone`タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-340">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="765be-341">このメソッドの正確な動作の値に依存、<xref:System.DateTime.Kind%2A>のプロパティ、`dateTime`パラメーターとして、次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="765be-341">The precise behavior of this method depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="765be-342">DateTime.Kind プロパティ</span><span class="sxs-lookup"><span data-stu-id="765be-342">DateTime.Kind property</span></span>|<span data-ttu-id="765be-343">変換</span><span class="sxs-lookup"><span data-stu-id="765be-343">Conversion</span></span>|  
|----------------------------|----------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="765be-344">スローされます、<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="765be-344">Throws an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="765be-345"><xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> または <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="765be-345"><xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> or <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span></span>|<span data-ttu-id="765be-346">世界協定時刻 (UTC) からに変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-346">Converts from Coordinated Universal Time (UTC).</span></span>|  
  
 <span data-ttu-id="765be-347">場合の変換`dateTime`結果の日付と時刻の値よりも前<xref:System.DateTime.MinValue?displayProperty=nameWithType>かそれより遅い<xref:System.DateTime.MaxValue?displayProperty=nameWithType>、このメソッドが戻る<xref:System.DateTime.MinValue?displayProperty=nameWithType>または<xref:System.DateTime.MaxValue?displayProperty=nameWithType>、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="765be-347">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-348">次の例では、中部標準時を世界協定時刻 (UTC) に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-348">The following example converts Coordinated Universal Time (UTC) to Central Time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Concepts#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Concepts/CS/TimeZone2Concepts.cs#8)]
 [!code-vb[System.TimeZone2.Concepts#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Concepts/VB/TimeZone2Concepts.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-349"><paramref name="dateTime" /> の <see cref="P:System.DateTime.Kind" /> プロパティが <see cref="F:System.DateTimeKind.Local" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-349">The <see cref="P:System.DateTime.Kind" /> property of <paramref name="dateTime" /> is <see cref="F:System.DateTimeKind.Local" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-350"><paramref name="destinationTimeZone" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="765be-350"><paramref name="destinationTimeZone" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="765be-351">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="765be-351">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTimeToUtc">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="765be-352">日付と時刻を世界協定時刻 (UTC) に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-352">Converts a date and time to Coordinated Universal Time (UTC).</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="765be-353">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="765be-353">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTimeToUtc">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeToUtc (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeToUtc(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeToUtc(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeToUtc : DateTime -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeToUtc dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="765be-354">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-354">The date and time to convert.</span></span></param>
        <summary><span data-ttu-id="765be-355">指定の日付と時刻を世界協定時刻 (UTC) に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-355">Converts the specified date and time to Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="765be-356"><paramref name="dateTime" /> パラメーターに対応する世界協定時刻 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="765be-356">The Coordinated Universal Time (UTC) that corresponds to the <paramref name="dateTime" /> parameter.</span></span> <span data-ttu-id="765be-357"><see cref="T:System.DateTime" /> 値の <see cref="P:System.DateTime.Kind" /> プロパティは、常に <see cref="F:System.DateTimeKind.Utc" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="765be-357">The <see cref="T:System.DateTime" /> value's <see cref="P:System.DateTime.Kind" /> property is always set to <see cref="F:System.DateTimeKind.Utc" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-358">実行される正確な変換の値によって異なります、<xref:System.DateTime.Kind%2A>のプロパティ、`dateTime`パラメーターとして、次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="765be-358">The exact conversion performed depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="765be-359">DateTime.Kind プロパティ</span><span class="sxs-lookup"><span data-stu-id="765be-359">DateTime.Kind property</span></span>|<span data-ttu-id="765be-360">変換</span><span class="sxs-lookup"><span data-stu-id="765be-360">Conversion</span></span>|  
|----------------------------|----------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="765be-361">世界協定時刻 (UTC) から現地時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-361">Converts from local time to Coordinated Universal Time (UTC).</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="765be-362">前提としています`dateTime`が現地時刻と現地時刻から UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-362">Assumes `dateTime` is local time and converts from local time to UTC.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="765be-363">返します`dateTime`変更されません。</span><span class="sxs-lookup"><span data-stu-id="765be-363">Returns `dateTime` unchanged.</span></span>|  
  
 <span data-ttu-id="765be-364">場合`dateTime`対応このメソッドに、あいまいな現地時刻には標準のローカル時刻である前提としています。</span><span class="sxs-lookup"><span data-stu-id="765be-364">If `dateTime` corresponds to an ambiguous local time, this method assumes that it is standard local time.</span></span> <span data-ttu-id="765be-365">場合`dateTime`メソッドがスローされます、無効なローカル時刻に対応する<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="765be-365">If `dateTime` corresponds to an invalid local time, the method throws an <xref:System.ArgumentException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="765be-366">タイム ゾーンに複数の調整規則では、このオーバー ロードが含まれています、現在のコンピューターのローカルの場合、<xref:System.TimeZoneInfo.ConvertTimeToUtc%2A>メソッドとは異なる結果を返す場合、<xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType>と<xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-366">If the current computer's local time zone includes multiple adjustment rules, this overload of the <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> method can return results that differ from the <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> and <xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="765be-367"><xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> 現在の調整規則をタイム ゾーン変換のかどうかに常に適用`dateTime`がその日付の範囲内に存在します。</span><span class="sxs-lookup"><span data-stu-id="765be-367"><xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> always applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range.</span></span> <span data-ttu-id="765be-368">実行すると、 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]、<xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType>かどうか、タイム ゾーン変換を現在の調整規則を適用も`dateTime`がその日付の範囲内に存在します。</span><span class="sxs-lookup"><span data-stu-id="765be-368">And when executing on [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)], <xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType> also applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range.</span></span>  
  
 <span data-ttu-id="765be-369">場合に相当する UTC`dateTime`よりも前<xref:System.DateTime.MinValue?displayProperty=nameWithType>またはそれ以降を<xref:System.DateTime.MaxValue?displayProperty=nameWithType>、このメソッドが戻る<xref:System.DateTime.MinValue>または<xref:System.DateTime.MaxValue>、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="765be-369">If the UTC equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later that <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-370">次の例は、の変換を示しています。 時間の値が<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>、 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>、および<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="765be-370">The following example illustrates the conversion of time values whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, and <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, respectively.</span></span> <span data-ttu-id="765be-371">また、あいまいと無効な時間の変換を示しています。</span><span class="sxs-lookup"><span data-stu-id="765be-371">It also illustrates the conversion of ambiguous and invalid times.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/System.TimeZone2.Conversions.cs#1)]
 [!code-vb[System.TimeZone2.Conversions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/System.TimeZone2.Conversions.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-372"><see langword="TimeZoneInfo.Local.IsInvalidDateTime(" />
          <paramref name="dateTime" />
          <see langword=")" /> は <see langword="true" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-372"><see langword="TimeZoneInfo.Local.IsInvalidDateTime(" />
          <paramref name="dateTime" />
          <see langword=")" /> returns <see langword="true" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="765be-373">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="765be-373">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeToUtc">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeToUtc (DateTime dateTime, TimeZoneInfo sourceTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeToUtc(valuetype System.DateTime dateTime, class System.TimeZoneInfo sourceTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeToUtc(DateTime dateTime, TimeZoneInfo ^ sourceTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeToUtc : DateTime * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeToUtc (dateTime, sourceTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="765be-374">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-374">The date and time to convert.</span></span></param>
        <param name="sourceTimeZone"><span data-ttu-id="765be-375"><paramref name="dateTime" /> のタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-375">The time zone of <paramref name="dateTime" />.</span></span></param>
        <summary><span data-ttu-id="765be-376">指定されたタイム ゾーンの時刻を世界協定時刻 (UTC) に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-376">Converts the time in a specified time zone to Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="765be-377"><paramref name="dateTime" /> パラメーターに対応する世界協定時刻 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="765be-377">The Coordinated Universal Time (UTC) that corresponds to the <paramref name="dateTime" /> parameter.</span></span> <span data-ttu-id="765be-378"><see cref="T:System.DateTime" /> オブジェクトの <see cref="P:System.DateTime.Kind" /> プロパティは、常に <see cref="F:System.DateTimeKind.Utc" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="765be-378">The <see cref="T:System.DateTime" /> object's <see cref="P:System.DateTime.Kind" /> property is always set to <see cref="F:System.DateTimeKind.Utc" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-379">場合、<xref:System.DateTime.Kind%2A>のプロパティ、`dateTime`パラメーターと等しい<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>と`sourceTimeZone`パラメーターと等しい<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>、このメソッドが戻る`dateTime`せず、任意の変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="765be-379">If the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter equals <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> and the `sourceTimeZone` parameter equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>, this method returns `dateTime` without performing any conversion.</span></span>  
  
 <span data-ttu-id="765be-380">場合`dateTime`対応このメソッドがあいまいな時刻では、ソースのタイム ゾーンの標準時が前提としています。</span><span class="sxs-lookup"><span data-stu-id="765be-380">If `dateTime` corresponds to an ambiguous time, this method assumes that it is the standard time of the source time zone.</span></span> <span data-ttu-id="765be-381">場合`dateTime`スローに無効な時刻、このメソッドに対応する<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="765be-381">If `dateTime` corresponds to an invalid time, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="765be-382">場合に相当する世界協定時刻 (UTC)`dateTime`よりも前<xref:System.DateTime.MinValue?displayProperty=nameWithType>またはそれ以降を<xref:System.DateTime.MaxValue?displayProperty=nameWithType>、このメソッドが戻る<xref:System.DateTime.MinValue>または<xref:System.DateTime.MaxValue>、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="765be-382">If the Coordinated Universal Time (UTC) equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later that <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-383">次の例では、ローカル システムから現在の日付を取得および世界協定時刻 (UTC) に変換します東京標準時に変換し、最後に東京 (標準時) からを UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-383">The following example retrieves the current date from the local system and converts it to Coordinated Universal Time (UTC), then converts it to Tokyo Standard Time, and finally converts from Tokyo Standard Time back to UTC.</span></span> <span data-ttu-id="765be-384">2 つの UTC 時刻が同じであるに注意してください。</span><span class="sxs-lookup"><span data-stu-id="765be-384">Note that the two UTC times are identical.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/convertdt2.cs#2)]
 [!code-vb[System.TimeZone2.Conversions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/convertdt2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-385"><paramref name="dateTime" />.<see langword="Kind" /></span><span class="sxs-lookup"><span data-stu-id="765be-385"><paramref name="dateTime" />.<see langword="Kind" /></span></span> <span data-ttu-id="765be-386">は <see cref="F:System.DateTimeKind.Utc" /> であり、<paramref name="sourceTimeZone" /> は <see cref="P:System.TimeZoneInfo.Utc" /> と一致しません。</span><span class="sxs-lookup"><span data-stu-id="765be-386">is <see cref="F:System.DateTimeKind.Utc" /> and <paramref name="sourceTimeZone" /> does not equal <see cref="P:System.TimeZoneInfo.Utc" />.</span></span>  
  
<span data-ttu-id="765be-387">または</span><span class="sxs-lookup"><span data-stu-id="765be-387">-or-</span></span> 
 <span data-ttu-id="765be-388"><paramref name="dateTime" />.<see langword="Kind" /></span><span class="sxs-lookup"><span data-stu-id="765be-388"><paramref name="dateTime" />.<see langword="Kind" /></span></span> <span data-ttu-id="765be-389">は <see cref="F:System.DateTimeKind.Local" /> であり、<paramref name="sourceTimeZone" /> は <see cref="P:System.TimeZoneInfo.Local" /> と一致しません。</span><span class="sxs-lookup"><span data-stu-id="765be-389">is <see cref="F:System.DateTimeKind.Local" /> and <paramref name="sourceTimeZone" /> does not equal <see cref="P:System.TimeZoneInfo.Local" />.</span></span>  
  
<span data-ttu-id="765be-390">または</span><span class="sxs-lookup"><span data-stu-id="765be-390">-or-</span></span> 
 <span data-ttu-id="765be-391"><paramref name="sourceTimeZone" /><see langword=".IsInvalidDateTime(" /><paramref name="dateTime" /><see langword=")" /> は <see langword="true" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-391"><paramref name="sourceTimeZone" /><see langword=".IsInvalidDateTime(" /><paramref name="dateTime" /><see langword=")" /> returns <see langword="true" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-392"><paramref name="sourceTimeZone" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="765be-392"><paramref name="sourceTimeZone" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="765be-393">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="765be-393">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateCustomTimeZone">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="765be-394">ローカル コンピューターにないタイム ゾーンを定義します。</span><span class="sxs-lookup"><span data-stu-id="765be-394">Defines a time zone that is not found on the local computer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateCustomTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCustomTimeZone (id As String, baseUtcOffset As TimeSpan, displayName As String, standardDisplayName As String) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ CreateCustomTimeZone(System::String ^ id, TimeSpan baseUtcOffset, System::String ^ displayName, System::String ^ standardDisplayName);" />
      <MemberSignature Language="F#" Value="static member CreateCustomTimeZone : string * TimeSpan * string * string -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.CreateCustomTimeZone (id, baseUtcOffset, displayName, standardDisplayName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="baseUtcOffset" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="displayName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="standardDisplayName" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="765be-395">タイム ゾーン ID。</span><span class="sxs-lookup"><span data-stu-id="765be-395">The time zone's identifier.</span></span></param>
        <param name="baseUtcOffset"><span data-ttu-id="765be-396">このタイム ゾーンの標準時と世界協定時刻 (UTC) との時差を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-396">An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</span></span></param>
        <param name="displayName"><span data-ttu-id="765be-397">新しいタイム ゾーンの表示名。</span><span class="sxs-lookup"><span data-stu-id="765be-397">The display name of the new time zone.</span></span></param>
        <param name="standardDisplayName"><span data-ttu-id="765be-398">新しいタイム ゾーンの標準時名。</span><span class="sxs-lookup"><span data-stu-id="765be-398">The name of the new time zone's standard time.</span></span></param>
        <summary><span data-ttu-id="765be-399">指定された ID、世界協定時刻 (UTC) からのオフセット、表示名、および標準時の表示名を使用して、カスタム タイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-399">Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, and a standard time display name.</span></span></summary>
        <returns><span data-ttu-id="765be-400">新しいタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-400">The new time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-401">このオーバー ロード、<xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29>メソッドは (夏時間をサポートしていないタイム ゾーン) の調整がないタイム ゾーンを作成するために適しています。</span><span class="sxs-lookup"><span data-stu-id="765be-401">This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29> method is suitable for creating a time zone that has no adjustments (that is, a time zone that does not support daylight saving time).</span></span> <span data-ttu-id="765be-402">夏時間の調整が含まれるタイム ゾーンを定義するいずれかの操作を使用して、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>または<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-402">To define a time zone that includes adjustments for daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="765be-403">次の表は、パラメーターに提供されている間のリレーションシップ、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>メソッドとプロパティの<xref:System.TimeZoneInfo>メソッドの呼び出しによって返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-403">The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method and the properties of the <xref:System.TimeZoneInfo> object that are returned by the method call.</span></span>  
  
|<span data-ttu-id="765be-404">CreateCustomTimeZone パラメーター</span><span class="sxs-lookup"><span data-stu-id="765be-404">CreateCustomTimeZone parameter</span></span>|<span data-ttu-id="765be-405">TimeZoneInfo プロパティ</span><span class="sxs-lookup"><span data-stu-id="765be-405">TimeZoneInfo property</span></span>|  
|------------------------------------|---------------------------|  
|`id`|<xref:System.TimeZoneInfo.Id%2A>|  
|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  
|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  
|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  
  
 <span data-ttu-id="765be-406">通常、タイム ゾーンの標準時名とその識別子は、同じです。</span><span class="sxs-lookup"><span data-stu-id="765be-406">Typically, the time zone's standard time name and its identifier are the same.</span></span> <span data-ttu-id="765be-407">ただし、タイム ゾーンの識別子の長さは、32 文字を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="765be-407">However, the length of the time zone's identifier should not exceed 32 characters.</span></span> <span data-ttu-id="765be-408">渡された文字列、`displayName`パラメーターがごく標準的な形式に従います。</span><span class="sxs-lookup"><span data-stu-id="765be-408">The string passed to the `displayName` parameter follows a fairly standard format.</span></span> <span data-ttu-id="765be-409">表示名の最初の部分は、世界協定時刻では、頭字語 GMT (グリニッジ標準時)、かっこで囲まれたで示されるから、タイム ゾーンの基本のオフセットです。</span><span class="sxs-lookup"><span data-stu-id="765be-409">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="765be-410">タイム ゾーン自体、または 1 つまたは複数の市区町村、領域、またはタイム ゾーン、国またはその両方を識別する文字列が続きます。</span><span class="sxs-lookup"><span data-stu-id="765be-410">This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.</span></span> <span data-ttu-id="765be-411">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="765be-411">For example:</span></span>  
  
```  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
   
  
## Examples  
 <span data-ttu-id="765be-412">次の例では、南極モーソンおよびホルム湾の地域のカスタムのタイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-412">The following example creates a custom time zone for the Mawson and Holme Bay regions of Antarctica.</span></span> <span data-ttu-id="765be-413">新しいタイム ゾーンの時刻にローカル時刻に変換した結果が表示されます。</span><span class="sxs-lookup"><span data-stu-id="765be-413">It then displays the result of converting the local time to the time in the new time zone.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#1)]
 [!code-vb[System.TimeZone2.CreateTimeZone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-414"><paramref name="id" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-414">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-415"><paramref name="id" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="765be-415">The <paramref name="id" /> parameter is an empty string ("").</span></span>  
  
<span data-ttu-id="765be-416">または</span><span class="sxs-lookup"><span data-stu-id="765be-416">-or-</span></span> 
<span data-ttu-id="765be-417"><paramref name="baseUtcOffset" /> パラメーターが、分を表す整数値ではありません。</span><span class="sxs-lookup"><span data-stu-id="765be-417">The <paramref name="baseUtcOffset" /> parameter does not represent a whole number of minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="765be-418"><paramref name="baseUtcOffset" /> パラメーターが 14 時間を上回っているか、-14 時間を下回っています。</span><span class="sxs-lookup"><span data-stu-id="765be-418">The <paramref name="baseUtcOffset" /> parameter is greater than 14 hours or less than -14 hours.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a6af8647-7893-4f29-95a9-d94c65a6e8dd"><span data-ttu-id="765be-419">方法: 調整規則のないタイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-419">How to: Create Time Zones Without Adjustment Rules</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateCustomTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[] adjustmentRules);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, class System.TimeZoneInfo/AdjustmentRule[] adjustmentRules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCustomTimeZone (id As String, baseUtcOffset As TimeSpan, displayName As String, standardDisplayName As String, daylightDisplayName As String, adjustmentRules As TimeZoneInfo.AdjustmentRule()) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ CreateCustomTimeZone(System::String ^ id, TimeSpan baseUtcOffset, System::String ^ displayName, System::String ^ standardDisplayName, System::String ^ daylightDisplayName, cli::array &lt;TimeZoneInfo::AdjustmentRule ^&gt; ^ adjustmentRules);" />
      <MemberSignature Language="F#" Value="static member CreateCustomTimeZone : string * TimeSpan * string * string * string * TimeZoneInfo.AdjustmentRule[] -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.CreateCustomTimeZone (id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="baseUtcOffset" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="displayName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="standardDisplayName" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="daylightDisplayName" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="adjustmentRules" Type="System.TimeZoneInfo+AdjustmentRule[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="765be-420">タイム ゾーン ID。</span><span class="sxs-lookup"><span data-stu-id="765be-420">The time zone's identifier.</span></span></param>
        <param name="baseUtcOffset"><span data-ttu-id="765be-421">このタイム ゾーンの標準時と世界協定時刻 (UTC) との時差を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-421">An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</span></span></param>
        <param name="displayName"><span data-ttu-id="765be-422">新しいタイム ゾーンの表示名。</span><span class="sxs-lookup"><span data-stu-id="765be-422">The display name of the new time zone.</span></span></param>
        <param name="standardDisplayName"><span data-ttu-id="765be-423">新しいタイム ゾーンの標準時名。</span><span class="sxs-lookup"><span data-stu-id="765be-423">The new time zone's standard time name.</span></span></param>
        <param name="daylightDisplayName"><span data-ttu-id="765be-424">新しいタイム ゾーンの夏時間名。</span><span class="sxs-lookup"><span data-stu-id="765be-424">The daylight saving time name of the new time zone.</span></span></param>
        <param name="adjustmentRules"><span data-ttu-id="765be-425">特定の期間のベース UTC オフセットを増やす配列。</span><span class="sxs-lookup"><span data-stu-id="765be-425">An array that augments the base UTC offset for a particular period.</span></span></param>
        <summary><span data-ttu-id="765be-426">指定された ID、世界協定時刻 (UTC) からのオフセット、表示名、標準時名、夏時間名、および夏時間規則を使用して、カスタム タイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-426">Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, and daylight saving time rules.</span></span></summary>
        <returns><span data-ttu-id="765be-427">新しいタイム ゾーンを表す <see cref="T:System.TimeZoneInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-427">A <see cref="T:System.TimeZoneInfo" /> object that represents the new time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-428">このオーバー ロード、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>メソッドは夏時間をサポートするタイム ゾーンを作成するために適しています。</span><span class="sxs-lookup"><span data-stu-id="765be-428">This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method is suitable for creating a time zone that supports daylight saving time.</span></span> <span data-ttu-id="765be-429">夏時間をサポートしていないタイム ゾーンを定義するいずれかの操作を使用して、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>または<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-429">To define a time zone that does not support daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="765be-430">次の表は、パラメーターに提供されている間のリレーションシップ、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>メソッドとのメンバー、<xref:System.TimeZoneInfo>メソッドの呼び出しによって返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-430">The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.</span></span>  
  
|<span data-ttu-id="765be-431">CreateCustomTimeZone パラメーター</span><span class="sxs-lookup"><span data-stu-id="765be-431">CreateCustomTimeZone parameter</span></span>|<span data-ttu-id="765be-432">TimeZoneInfo メンバー</span><span class="sxs-lookup"><span data-stu-id="765be-432">TimeZoneInfo member</span></span>|  
|------------------------------------|-------------------------|  
|`id`|<xref:System.TimeZoneInfo.Id%2A>|  
|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  
|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  
|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  
|`daylightDisplayName`|<xref:System.TimeZoneInfo.DaylightName%2A>|  
|`adjustmentRules`|<span data-ttu-id="765be-433">配列の<xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType>によって返されるオブジェクト、<xref:System.TimeZoneInfo.GetAdjustmentRules%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-433">An array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method.</span></span>|  
  
 <span data-ttu-id="765be-434">通常、タイム ゾーンの標準時名とその識別子は、同じです。</span><span class="sxs-lookup"><span data-stu-id="765be-434">Typically, the time zone's standard time name and its identifier are the same.</span></span> <span data-ttu-id="765be-435">ただし、タイム ゾーンの識別子の長さは、32 文字を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="765be-435">However, the length of the time zone's identifier should not exceed 32 characters.</span></span> <span data-ttu-id="765be-436">渡された文字列、`displayName`パラメーターがごく標準的な形式に従います。</span><span class="sxs-lookup"><span data-stu-id="765be-436">The string passed to the `displayName` parameter follows a fairly standard format.</span></span> <span data-ttu-id="765be-437">表示名の最初の部分は、世界協定時刻では、頭字語 GMT (グリニッジ標準時)、かっこで囲まれたで示されるから、タイム ゾーンの基本のオフセットです。</span><span class="sxs-lookup"><span data-stu-id="765be-437">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="765be-438">タイム ゾーン自体、または 1 つまたは複数の市区町村、領域、またはタイム ゾーン、国またはその両方を識別する文字列が続きます。</span><span class="sxs-lookup"><span data-stu-id="765be-438">This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.</span></span> <span data-ttu-id="765be-439">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="765be-439">For example:</span></span>  
  
```  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
 <span data-ttu-id="765be-440">`baseUtcOffset`パラメーターがカスタムのタイム ゾーンのオフセットから世界協定時刻 (UTC) のすべてのタイム ゾーンの調整規則を定義します。</span><span class="sxs-lookup"><span data-stu-id="765be-440">The `baseUtcOffset` parameter defines the custom time zone's offset from Coordinated Universal Time (UTC) for all of the time zone's adjustment rules.</span></span> <span data-ttu-id="765be-441">つまり、<xref:System.TimeZoneInfo>オブジェクト モデルで UTC からのタイム ゾーンのオフセットは、タイム ゾーンの有効期間を通じて一定とが存在する特定の調整規則の独立しました。</span><span class="sxs-lookup"><span data-stu-id="765be-441">In other words, the <xref:System.TimeZoneInfo> object model assumes that the time zone's offset from UTC is constant throughout the life of the time zone, and exists independent of particular adjustment rules.</span></span> <span data-ttu-id="765be-442">タイム ゾーンを UTC からのオフセットが変更を反映するためには、新しいタイム ゾーン オブジェクトを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="765be-442">To reflect a time zone that has changed its offset from UTC, you must create a new time zone object.</span></span>  
  
 <span data-ttu-id="765be-443">次の手順では、タイム ゾーンの調整規則が定義されています。</span><span class="sxs-lookup"><span data-stu-id="765be-443">A time zone's adjustment rules are defined by doing the following:</span></span>  
  
1.  <span data-ttu-id="765be-444">いずれかを呼び出し、<xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A>または<xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A>最初と最後の調整規則ごとの切り替え時間を定義するメソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-444">Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition time for each adjustment rule.</span></span>  
  
2.  <span data-ttu-id="765be-445">呼び出す、<xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A>各調整規則のメソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-445">Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.</span></span>  
  
3.  <span data-ttu-id="765be-446">として渡される配列に調整規則を割り当てることができます、`adjustmentRules`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="765be-446">Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-447">次の例では、南極パーマー基地およびアンヴァース島のカスタムのタイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-447">The following example creates a custom time zone for the Palmer station and Anvers Island in Antarctica.</span></span> <span data-ttu-id="765be-448">新しいタイム ゾーンの時刻にローカル時刻を変換し、結果が表示されます。</span><span class="sxs-lookup"><span data-stu-id="765be-448">It then converts the local time to the time in the new time zone and displays the result.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#2)]
 [!code-vb[System.TimeZone2.CreateTimeZone#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-449"><paramref name="id" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-449">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-450"><paramref name="id" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="765be-450">The <paramref name="id" /> parameter is an empty string ("").</span></span>  
  
<span data-ttu-id="765be-451">または</span><span class="sxs-lookup"><span data-stu-id="765be-451">-or-</span></span> 
<span data-ttu-id="765be-452"><paramref name="baseUtcOffset" /> パラメーターが、分を表す整数値ではありません。</span><span class="sxs-lookup"><span data-stu-id="765be-452">The <paramref name="baseUtcOffset" /> parameter does not represent a whole number of minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="765be-453"><paramref name="baseUtcOffset" /> パラメーターが 14 時間を上回っているか、-14 時間を下回っています。</span><span class="sxs-lookup"><span data-stu-id="765be-453">The <paramref name="baseUtcOffset" /> parameter is greater than 14 hours or less than -14 hours.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="765be-454"><paramref name="adjustmentRules" /> パラメーターに指定された調整規則が重複しています。</span><span class="sxs-lookup"><span data-stu-id="765be-454">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter overlap.</span></span>  
  
<span data-ttu-id="765be-455">または</span><span class="sxs-lookup"><span data-stu-id="765be-455">-or-</span></span> 
<span data-ttu-id="765be-456"><paramref name="adjustmentRules" /> パラメーターに指定された調整規則が時系列順ではありません。</span><span class="sxs-lookup"><span data-stu-id="765be-456">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter are not in chronological order.</span></span>  
  
<span data-ttu-id="765be-457">または</span><span class="sxs-lookup"><span data-stu-id="765be-457">-or-</span></span> 
<span data-ttu-id="765be-458"><paramref name="adjustmentRules" /> の 1 つ以上の要素が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-458">One or more elements in <paramref name="adjustmentRules" /> are <see langword="null" />.</span></span>  
  
<span data-ttu-id="765be-459">または</span><span class="sxs-lookup"><span data-stu-id="765be-459">-or-</span></span> 
<span data-ttu-id="765be-460">適用可能な調整規則が複数ある日付があります。</span><span class="sxs-lookup"><span data-stu-id="765be-460">A date can have multiple adjustment rules applied to it.</span></span>  
  
<span data-ttu-id="765be-461">または</span><span class="sxs-lookup"><span data-stu-id="765be-461">-or-</span></span> 
<span data-ttu-id="765be-462"><paramref name="baseUtcOffset" /> パラメーターと、<paramref name="adjustmentRules" /> 配列内にある 1 つ以上のオブジェクトの <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> 値の合計が、14 時間を上回っているか、-14 時間を下回っています。</span><span class="sxs-lookup"><span data-stu-id="765be-462">The sum of the <paramref name="baseUtcOffset" /> parameter and the <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> value of one or more objects in the <paramref name="adjustmentRules" /> array is greater than 14 hours or less than -14 hours.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c52ef192-13a9-435f-8015-3b12eae8c47c"><span data-ttu-id="765be-463">方法: タイム ゾーン調整規則を作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-463">How to: Create Time Zones with Adjustment Rules</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateCustomTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, class System.TimeZoneInfo/AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCustomTimeZone (id As String, baseUtcOffset As TimeSpan, displayName As String, standardDisplayName As String, daylightDisplayName As String, adjustmentRules As TimeZoneInfo.AdjustmentRule(), disableDaylightSavingTime As Boolean) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ CreateCustomTimeZone(System::String ^ id, TimeSpan baseUtcOffset, System::String ^ displayName, System::String ^ standardDisplayName, System::String ^ daylightDisplayName, cli::array &lt;TimeZoneInfo::AdjustmentRule ^&gt; ^ adjustmentRules, bool disableDaylightSavingTime);" />
      <MemberSignature Language="F#" Value="static member CreateCustomTimeZone : string * TimeSpan * string * string * string * TimeZoneInfo.AdjustmentRule[] * bool -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.CreateCustomTimeZone (id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules, disableDaylightSavingTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="baseUtcOffset" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="displayName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="standardDisplayName" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="daylightDisplayName" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="adjustmentRules" Type="System.TimeZoneInfo+AdjustmentRule[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="disableDaylightSavingTime" Type="System.Boolean" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="765be-464">タイム ゾーン ID。</span><span class="sxs-lookup"><span data-stu-id="765be-464">The time zone's identifier.</span></span></param>
        <param name="baseUtcOffset"><span data-ttu-id="765be-465">現在のタイム ゾーンの標準時と世界協定時刻 (UTC) との時差を表す <see cref="T:System.TimeSpan" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-465">A <see cref="T:System.TimeSpan" /> object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</span></span></param>
        <param name="displayName"><span data-ttu-id="765be-466">新しいタイム ゾーンの表示名。</span><span class="sxs-lookup"><span data-stu-id="765be-466">The display name of the new time zone.</span></span></param>
        <param name="standardDisplayName"><span data-ttu-id="765be-467">新しいタイム ゾーンの標準時名。</span><span class="sxs-lookup"><span data-stu-id="765be-467">The standard time name of the new time zone.</span></span></param>
        <param name="daylightDisplayName"><span data-ttu-id="765be-468">新しいタイム ゾーンの夏時間名。</span><span class="sxs-lookup"><span data-stu-id="765be-468">The daylight saving time name of the new time zone.</span></span></param>
        <param name="adjustmentRules"><span data-ttu-id="765be-469">特定の期間のベース UTC オフセットを増やす <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="765be-469">An array of <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> objects that augment the base UTC offset for a particular period.</span></span></param>
        <param name="disableDaylightSavingTime"><span data-ttu-id="765be-470">新しいオブジェクトの <paramref name="adjustmentRules" /> に含まれている夏時間関連の情報をすべて破棄する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="765be-470"><see langword="true" /> to discard any daylight saving time-related information present in <paramref name="adjustmentRules" /> with the new object; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="765be-471">指定された ID、世界協定時刻 (UTC) からのオフセット、表示名、標準時名、夏時間名、夏時間規則、および返されるオブジェクトに夏時間情報を反映するかどうかを示す値を使用して、カスタム タイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-471">Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, daylight saving time rules, and a value that indicates whether the returned object reflects daylight saving time information.</span></span></summary>
        <returns><span data-ttu-id="765be-472">新しいタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-472">The new time zone.</span></span> <span data-ttu-id="765be-473"><paramref name="disableDaylightSavingTime" /> パラメーターが <see langword="true" /> の場合、返されるオブジェクトに夏時間データはありません。</span><span class="sxs-lookup"><span data-stu-id="765be-473">If the <paramref name="disableDaylightSavingTime" /> parameter is <see langword="true" />, the returned object has no daylight saving time data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-474">このオーバー ロードを使用することができます、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>夏時間のサポートは、実行時に条件によって決まりますできますカスタム タイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-474">You can use this overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method to create a custom time zone whose support for daylight saving time can be determined by conditions at run time.</span></span>  
  
 <span data-ttu-id="765be-475">次の表は、パラメーターに提供されている間のリレーションシップ、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>メソッドとのメンバー、<xref:System.TimeZoneInfo>メソッドの呼び出しによって返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-475">The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.</span></span>  
  
|<span data-ttu-id="765be-476">CreateCustomTimeZone パラメーター</span><span class="sxs-lookup"><span data-stu-id="765be-476">CreateCustomTimeZone parameter</span></span>|<span data-ttu-id="765be-477">TimeZoneInfo プロパティ</span><span class="sxs-lookup"><span data-stu-id="765be-477">TimeZoneInfo property</span></span>|  
|------------------------------------|---------------------------|  
|`id`|<xref:System.TimeZoneInfo.Id%2A>|  
|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  
|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  
|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  
|`daylightDisplayName`|<span data-ttu-id="765be-478"><xref:System.TimeZoneInfo.DaylightName%2A> 場合`disableDaylightSavingTime`は`false`;<xref:System.String.Empty?displayProperty=nameWithType>場合`disableDaylightSavingTime`は`true`します。</span><span class="sxs-lookup"><span data-stu-id="765be-478"><xref:System.TimeZoneInfo.DaylightName%2A> if `disableDaylightSavingTime` is `false`; <xref:System.String.Empty?displayProperty=nameWithType> if `disableDaylightSavingTime` is `true`.</span></span>|  
|`adjustmentRules`|<span data-ttu-id="765be-479">配列の<xref:System.TimeZoneInfo.AdjustmentRule>によって返されるオブジェクト、<xref:System.TimeZoneInfo.GetAdjustmentRules%2A>メソッド場合`disableDaylightSavingTime`は`false`; によって返される空の配列、<xref:System.TimeZoneInfo.GetAdjustmentRules%2A>メソッド場合`disableDaylightSavingTime`は`true`します。</span><span class="sxs-lookup"><span data-stu-id="765be-479">An array of <xref:System.TimeZoneInfo.AdjustmentRule> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `false`; an empty array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `true`.</span></span>|  
|`disableDaylightSavingTime`|<span data-ttu-id="765be-480">いない<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>します。</span><span class="sxs-lookup"><span data-stu-id="765be-480">Not <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>.</span></span>|  
  
 <span data-ttu-id="765be-481">通常、タイム ゾーンの標準時名とその識別子は、同じです。</span><span class="sxs-lookup"><span data-stu-id="765be-481">Typically, the time zone's standard time name and its identifier are the same.</span></span> <span data-ttu-id="765be-482">ただし、タイム ゾーンの識別子の長さは、32 文字を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="765be-482">However, the length of the time zone's identifier should not exceed 32 characters.</span></span> <span data-ttu-id="765be-483">渡された文字列、`displayName`パラメーターがごく標準的な形式に従います。</span><span class="sxs-lookup"><span data-stu-id="765be-483">The string passed to the `displayName` parameter follows a fairly standard format.</span></span> <span data-ttu-id="765be-484">表示名の最初の部分は、世界協定時刻では、頭字語 GMT (グリニッジ標準時)、かっこで囲まれたで示されるから、タイム ゾーンの基本のオフセットです。</span><span class="sxs-lookup"><span data-stu-id="765be-484">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="765be-485">タイム ゾーン自体、または 1 つまたは複数の市区町村、領域、またはタイム ゾーン、国またはその両方を識別する文字列が続きます。</span><span class="sxs-lookup"><span data-stu-id="765be-485">This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.</span></span> <span data-ttu-id="765be-486">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="765be-486">For example:</span></span>  
  
```  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
 <span data-ttu-id="765be-487">次の手順では、タイム ゾーンの調整規則が定義されています。</span><span class="sxs-lookup"><span data-stu-id="765be-487">A time zone's adjustment rules are defined by doing the following:</span></span>  
  
1.  <span data-ttu-id="765be-488">いずれかを呼び出し、<xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A>または<xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A>最初と最後の調整規則ごとの遷移の規則を定義するメソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-488">Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition rules for each adjustment rule.</span></span>  
  
2.  <span data-ttu-id="765be-489">呼び出す、<xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A>各調整規則のメソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-489">Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.</span></span>  
  
3.  <span data-ttu-id="765be-490">として渡される配列に調整規則を割り当てることができます、`adjustmentRules`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="765be-490">Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter.</span></span>  
  
 <span data-ttu-id="765be-491">場合`disableDaylightSavingTime`パラメーターが`false`、このメソッドの操作のと同じですが、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="765be-491">If `disableDaylightSavingTime` parameter is `false`, the operation of this method is identical to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="765be-492">場合`disableDaylightSavingTime`は`true`、返されたオブジェクトに調整規則が含まれていないと、<xref:System.TimeZoneInfo.DaylightName%2A>プロパティの値が空の文字列。</span><span class="sxs-lookup"><span data-stu-id="765be-492">If `disableDaylightSavingTime` is `true`, the returned object includes no adjustment rules and a <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-493">次の例では、南極パーマー基地およびアンヴァース島のカスタムのタイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-493">The following example creates a custom time zone for the Palmer station and Anvers Island in Antarctica.</span></span> <span data-ttu-id="765be-494">設定、`disableDaylightSavingTime`への呼び出しでパラメーター、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>メソッドを`true`します。</span><span class="sxs-lookup"><span data-stu-id="765be-494">It sets the `disableDaylightSavingTime` parameter in the call to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method to `true`.</span></span> <span data-ttu-id="765be-495">新しいタイム ゾーンの夏時間名、1 つが存在する場合、新しいタイム ゾーンに夏時間の情報がないことを確認する調整規則の数が表示されます。</span><span class="sxs-lookup"><span data-stu-id="765be-495">It then displays the new time zone's daylight saving time name, if one is present, and the number of adjustment rules to confirm that the new time zone has no daylight saving time information.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#3)]
 [!code-vb[System.TimeZone2.CreateTimeZone#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-496"><paramref name="id" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-496">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-497"><paramref name="id" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="765be-497">The <paramref name="id" /> parameter is an empty string ("").</span></span>  
  
<span data-ttu-id="765be-498">または</span><span class="sxs-lookup"><span data-stu-id="765be-498">-or-</span></span> 
<span data-ttu-id="765be-499"><paramref name="baseUtcOffset" /> パラメーターが、分を表す整数値ではありません。</span><span class="sxs-lookup"><span data-stu-id="765be-499">The <paramref name="baseUtcOffset" /> parameter does not represent a whole number of minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="765be-500"><paramref name="baseUtcOffset" /> パラメーターが 14 時間を上回っているか、-14 時間を下回っています。</span><span class="sxs-lookup"><span data-stu-id="765be-500">The <paramref name="baseUtcOffset" /> parameter is greater than 14 hours or less than -14 hours.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="765be-501"><paramref name="adjustmentRules" /> パラメーターに指定された調整規則が重複しています。</span><span class="sxs-lookup"><span data-stu-id="765be-501">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter overlap.</span></span>  
  
<span data-ttu-id="765be-502">または</span><span class="sxs-lookup"><span data-stu-id="765be-502">-or-</span></span> 
<span data-ttu-id="765be-503"><paramref name="adjustmentRules" /> パラメーターに指定された調整規則が時系列順ではありません。</span><span class="sxs-lookup"><span data-stu-id="765be-503">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter are not in chronological order.</span></span>  
  
<span data-ttu-id="765be-504">または</span><span class="sxs-lookup"><span data-stu-id="765be-504">-or-</span></span> 
<span data-ttu-id="765be-505"><paramref name="adjustmentRules" /> の 1 つ以上の要素が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-505">One or more elements in <paramref name="adjustmentRules" /> are <see langword="null" />.</span></span>  
  
<span data-ttu-id="765be-506">または</span><span class="sxs-lookup"><span data-stu-id="765be-506">-or-</span></span> 
<span data-ttu-id="765be-507">適用可能な調整規則が複数ある日付があります。</span><span class="sxs-lookup"><span data-stu-id="765be-507">A date can have multiple adjustment rules applied to it.</span></span>  
  
<span data-ttu-id="765be-508">または</span><span class="sxs-lookup"><span data-stu-id="765be-508">-or-</span></span> 
<span data-ttu-id="765be-509"><paramref name="baseUtcOffset" /> パラメーターと、<paramref name="adjustmentRules" /> 配列内にある 1 つ以上のオブジェクトの <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> 値の合計が、14 時間を上回っているか、-14 時間を下回っています。</span><span class="sxs-lookup"><span data-stu-id="765be-509">The sum of the <paramref name="baseUtcOffset" /> parameter and the <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> value of one or more objects in the <paramref name="adjustmentRules" /> array is greater than 14 hours or less than -14 hours.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a6af8647-7893-4f29-95a9-d94c65a6e8dd"><span data-ttu-id="765be-510">方法: 調整規則のないタイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-510">How to: Create Time Zones Without Adjustment Rules</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c52ef192-13a9-435f-8015-3b12eae8c47c"><span data-ttu-id="765be-511">方法: タイム ゾーン調整規則を作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-511">How to: Create Time Zones with Adjustment Rules</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DaylightName">
      <MemberSignature Language="C#" Value="public string DaylightName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DaylightName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.DaylightName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DaylightName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightName : string" Usage="System.TimeZoneInfo.DaylightName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="765be-512">現在のタイム ゾーンの夏時間の表示名を取得します。</span><span class="sxs-lookup"><span data-stu-id="765be-512">Gets the display name for the current time zone's daylight saving time.</span></span></summary>
        <value><span data-ttu-id="765be-513">タイム ゾーンの夏時間の表示名。</span><span class="sxs-lookup"><span data-stu-id="765be-513">The display name for the time zone's daylight saving time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-514">表示名は、Windows オペレーティング システムと共にインストールされたカルチャに基づいてローカライズされます。</span><span class="sxs-lookup"><span data-stu-id="765be-514">The display name is localized based on the culture installed with the Windows operating system.</span></span>  
  
 <span data-ttu-id="765be-515">A<xref:System.TimeZoneInfo.DaylightName%2A>プロパティの値でない<xref:System.String.Empty?displayProperty=nameWithType>または`null`必ずしもタイム ゾーンが夏時間をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="765be-515">A <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is not <xref:System.String.Empty?displayProperty=nameWithType> or `null` does not necessarily indicate that the time zone supports daylight saving time.</span></span> <span data-ttu-id="765be-516">タイム ゾーンが夏時間をサポートするかどうかを判断するには、値を確認、<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="765be-516">To determine whether the time zone supports daylight saving time, check the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.</span></span>  
  
 <span data-ttu-id="765be-517">ほとんどの場合、`DaylightName`タイム ゾーンのシステム定義のプロパティが<xref:System.String.Empty?displayProperty=nameWithType>または`null`します。</span><span class="sxs-lookup"><span data-stu-id="765be-517">In most cases, the `DaylightName` property of system-defined time zones is not <xref:System.String.Empty?displayProperty=nameWithType> or `null`.</span></span> <span data-ttu-id="765be-518">ただし、<xref:System.TimeZoneInfo.DaylightName%2A>にカスタムのタイム ゾーンのプロパティを設定できます<xref:System.String.Empty?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="765be-518">However, the <xref:System.TimeZoneInfo.DaylightName%2A> property of custom time zones can be set to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="765be-519">これは、カスタム タイム ゾーンがによって作成されたときに発生します、<xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType>または<xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=nameWithType>オーバー ロードと`disableDaylightSavingTime`パラメーターが`true`します。</span><span class="sxs-lookup"><span data-stu-id="765be-519">This occurs when custom time zones are created by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=nameWithType> overload and the `disableDaylightSavingTime` parameter is `true`.</span></span> <span data-ttu-id="765be-520">そのため、コードとは限りませんがの値、<xref:System.TimeZoneInfo.DaylightName%2A>プロパティは`null`または空です。</span><span class="sxs-lookup"><span data-stu-id="765be-520">Therefore, your code should never assume that the value of the <xref:System.TimeZoneInfo.DaylightName%2A> property is not `null` or empty.</span></span>  
  
 <span data-ttu-id="765be-521"><xref:System.TimeZoneInfo.DaylightName%2A>プロパティは、<xref:System.TimeZone.DaylightName%2A>のプロパティ、<xref:System.TimeZone>クラス。</span><span class="sxs-lookup"><span data-stu-id="765be-521">The <xref:System.TimeZoneInfo.DaylightName%2A> property is equivalent to the <xref:System.TimeZone.DaylightName%2A> property of the <xref:System.TimeZone> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-522">次の例は、という名前のメソッドを定義します。`DisplayDateWithTimeZoneName`を使用して、<xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29>タイム ゾーンの標準時名または夏時間名を表示するかどうかを判断するメソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-522">The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether to display a time zone's standard time name or daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.TimeZoneInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="765be-523">タイム ゾーンを表す標準表示名を取得します。</span><span class="sxs-lookup"><span data-stu-id="765be-523">Gets the general display name that represents the time zone.</span></span></summary>
        <value><span data-ttu-id="765be-524">タイム ゾーンの標準表示名。</span><span class="sxs-lookup"><span data-stu-id="765be-524">The time zone's general display name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-525">表示名は、Windows オペレーティング システムと共にインストールされたカルチャに基づいてローカライズされます。</span><span class="sxs-lookup"><span data-stu-id="765be-525">The display name is localized based on the culture installed with the Windows operating system.</span></span>  
  
 <span data-ttu-id="765be-526">Windows システムのタイム ゾーンのタイム ゾーンの表示名では、ごく標準的な形式に従います。</span><span class="sxs-lookup"><span data-stu-id="765be-526">Time zone display names for Windows system time zones follow a fairly standard format.</span></span> <span data-ttu-id="765be-527">表示名の最初の部分は、世界協定時刻では、頭字語 GMT (グリニッジ標準時)、かっこで囲まれたで示されるから、タイム ゾーンの基本のオフセットです。</span><span class="sxs-lookup"><span data-stu-id="765be-527">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="765be-528">世界協定時刻は、オフセットなし gmt はかっこで囲みます。</span><span class="sxs-lookup"><span data-stu-id="765be-528">For Coordinated Universal Time, the GMT acronym with no offset is enclosed in parentheses.</span></span>  <span data-ttu-id="765be-529">タイム ゾーンまたは 1 つ以上の都市や地域など、タイム ゾーンの国を識別する文字列が続きます。</span><span class="sxs-lookup"><span data-stu-id="765be-529">This is followed by a string that identifies the time zone or one or more of the cities, regions, or countries in the time zone.</span></span> <span data-ttu-id="765be-530">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="765be-530">For example:</span></span>  
  
```  
(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
   
  
## Examples  
 <span data-ttu-id="765be-531">次の例では、取得、<xref:System.TimeZoneInfo>ローカル タイム ゾーンを表し、その表示名、標準時名、および夏時間名を出力するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-531">The following example retrieves a <xref:System.TimeZoneInfo> object that represents the local time zone and outputs its display name, standard time name, and daylight saving time name.</span></span> <span data-ttu-id="765be-532">米国内のシステムの出力が表示されます。太平洋標準時ゾーンでの実行例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="765be-532">The output is displayed for a system in the U.S. Pacific Standard Time zone.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/ShowTimeZoneNames1.cs#2)]
 [!code-vb[System.TimeZone2.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/ShowTimeZoneNames1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="765be-533">2 つの <see cref="T:System.TimeZoneInfo" /> オブジェクトが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-533">Determines whether two <see cref="T:System.TimeZoneInfo" /> objects are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="timeZoneInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="765be-534">現在のオブジェクトと比較するもう 1 つのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-534">A second object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="765be-535">現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトと別のオブジェクトが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-535">Determines whether the current <see cref="T:System.TimeZoneInfo" /> object and another object are equal.</span></span></summary>
        <returns><span data-ttu-id="765be-536"><paramref name="obj" /> が現在のインスタンスと等しい <see cref="T:System.TimeZoneInfo" /> オブジェクトである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="765be-536"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.TimeZoneInfo" /> object that is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-537">このメソッドに変換またはキャスト`obj`を<xref:System.TimeZoneInfo>オブジェクトし、現在のインスタンスと比較します。</span><span class="sxs-lookup"><span data-stu-id="765be-537">This method converts or casts `obj` to a <xref:System.TimeZoneInfo> object and compares it with the current instance.</span></span> <span data-ttu-id="765be-538">等しいかどうかテストは、値の比較に基づいています。</span><span class="sxs-lookup"><span data-stu-id="765be-538">The test for equality is based on a comparison of values.</span></span> <span data-ttu-id="765be-539">現在<xref:System.TimeZoneInfo>インスタンスと`obj`は次の条件であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="765be-539">The current <xref:System.TimeZoneInfo> instance and `obj` are considered to be equal under the following conditions:</span></span>  
  
-   <span data-ttu-id="765be-540">実行時の型の`obj`は<xref:System.TimeZoneInfo>します。</span><span class="sxs-lookup"><span data-stu-id="765be-540">The run-time type of `obj` is <xref:System.TimeZoneInfo>.</span></span>  
  
-   <span data-ttu-id="765be-541">2 つのオブジェクトが同じである<xref:System.TimeZoneInfo.Id%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="765be-541">The two objects have the same <xref:System.TimeZoneInfo.Id%2A> property value.</span></span>  
  
-   <span data-ttu-id="765be-542">2 つのオブジェクトでは、同じ調整規則があります。</span><span class="sxs-lookup"><span data-stu-id="765be-542">The two objects have the same adjustment rules.</span></span>  
  
 <span data-ttu-id="765be-543">`obj` が `null` の場合、このメソッドは `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-543">If `obj` is `null`, this method returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-544">次の例では、<xref:System.TimeZoneInfo.Equals%28System.Object%29>ローカル タイム ゾーンは太平洋標準時または東部標準時であるかどうかを判断するメソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-544">The following example uses the <xref:System.TimeZoneInfo.Equals%28System.Object%29> method to determine whether the local time zone is Pacific Time or Eastern Time.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.equals/cs/equals1.cs#1)]
 [!code-vb[System.TimeZoneInfo.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.TimeZoneInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeZoneInfo -&gt; bool" Usage="timeZoneInfo.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="765be-545">現在のオブジェクトと比較するもう 1 つのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-545">A second object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="765be-546">現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトと別の <see cref="T:System.TimeZoneInfo" /> オブジェクトが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-546">Determines whether the current <see cref="T:System.TimeZoneInfo" /> object and another <see cref="T:System.TimeZoneInfo" /> object are equal.</span></span></summary>
        <returns><span data-ttu-id="765be-547">2 つの <see cref="T:System.TimeZoneInfo" /> オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="765be-547"><see langword="true" /> if the two <see cref="T:System.TimeZoneInfo" /> objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-548">等しいかどうかは、値の比較に基づいています。</span><span class="sxs-lookup"><span data-stu-id="765be-548">Equality is based on a comparison of values.</span></span> <span data-ttu-id="765be-549">2 つ<xref:System.TimeZoneInfo>オブジェクトは、次の条件下で等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="765be-549">Two <xref:System.TimeZoneInfo> objects are considered to be equal under the following conditions:</span></span>  
  
-   <span data-ttu-id="765be-550">値、<xref:System.TimeZoneInfo.Id%2A>プロパティは同じです。</span><span class="sxs-lookup"><span data-stu-id="765be-550">The value of their <xref:System.TimeZoneInfo.Id%2A> property is the same.</span></span>  
  
-   <span data-ttu-id="765be-551">同じ調整規則があります。</span><span class="sxs-lookup"><span data-stu-id="765be-551">They have the same adjustment rules.</span></span>  
  
 <span data-ttu-id="765be-552"><xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> 次の式を評価して得た結果をブール値を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-552"><xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> returns the Boolean value that results from evaluating the following expression:</span></span>  
  
 ```csharp 
 other.Id == this.Id && HasSameRules(other);  
 ```
  
 ```vb
 other.Id = me.Id AndAlso HasSameRules(other)  
 ```

 <span data-ttu-id="765be-553">場合、`other`パラメーターは初期化されていない<xref:System.TimeZoneInfo>オブジェクトに、このメソッドが返す`false`します。</span><span class="sxs-lookup"><span data-stu-id="765be-553">If the `other` parameter is an uninitialized <xref:System.TimeZoneInfo> object, this method returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-554">次の例では、<xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29>ローカル タイム ゾーンは太平洋標準時または東部標準時であるかどうかを判断するメソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-554">The following example uses the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> method to determine whether the local time zone is Pacific Time or Eastern Time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#7)]
 [!code-vb[System.TimeZone2.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSystemTimeZoneById">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo FindSystemTimeZoneById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo FindSystemTimeZoneById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindSystemTimeZoneById (id As String) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ FindSystemTimeZoneById(System::String ^ id);" />
      <MemberSignature Language="F#" Value="static member FindSystemTimeZoneById : string -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.FindSystemTimeZoneById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="765be-555">タイム ゾーン ID。<see cref="P:System.TimeZoneInfo.Id" /> プロパティの値です。</span><span class="sxs-lookup"><span data-stu-id="765be-555">The time zone identifier, which corresponds to the <see cref="P:System.TimeZoneInfo.Id" /> property.</span></span></param>
        <summary><span data-ttu-id="765be-556">その識別子に基づいて、新しい <see cref="T:System.TimeZoneInfo" /> オブジェクトをインスタンス化されます。</span><span class="sxs-lookup"><span data-stu-id="765be-556">Instantiates a new <see cref="T:System.TimeZoneInfo" /> object based on its identifier.</span></span></summary>
        <returns><span data-ttu-id="765be-557">ID が <paramref name="id" /> パラメーターの値であるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-557">An object whose identifier is the value of the <paramref name="id" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-558">`id`パラメーターがの長さが、正常に一致する; の場合には、タイム ゾーンの識別子と正確に一致する必要がありますの比較は、`id`とタイム ゾーン識別子は大文字です。</span><span class="sxs-lookup"><span data-stu-id="765be-558">The `id` parameter must correspond exactly to the time zone's identifier in length, but not in case, for a successful match to occur; that is, the comparison of `id` with time zone identifiers is case-insensitive.</span></span> <span data-ttu-id="765be-559">読み取り専用コレクションを使用するカスタムのプロシージャを作成する部分一致に基づくタイム ゾーン オブジェクトを取得する場合は、<xref:System.TimeZoneInfo>によって返されるオブジェクト、<xref:System.TimeZoneInfo.GetSystemTimeZones%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-559">If you want to retrieve time zone objects based on partial matches, you can write custom procedures that work with the read-only collection of <xref:System.TimeZoneInfo> objects returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method.</span></span>  
  
 <span data-ttu-id="765be-560">Windows システムでは、`FindSystemTimeZoneById`一致を試みます`id`レジストリの hkey_local_machine \software\microsoft\windows nt \currentversion\time Zones 分岐のサブキーの名前にします。</span><span class="sxs-lookup"><span data-stu-id="765be-560">On Windows systems, `FindSystemTimeZoneById` tries to match `id` to the subkey names of the HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones branch of the registry.</span></span> <span data-ttu-id="765be-561">利用可能なタイム ゾーン情報を使用して、Linux と macOS で、 [ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)します。</span><span class="sxs-lookup"><span data-stu-id="765be-561">On Linux and macOS, it uses time zone information available in the [ICU Library](http://userguide.icu-project.org/datetime/timezone).</span></span> <span data-ttu-id="765be-562">場合は、レジストリまたはライブラリには、希望するタイム ゾーンの情報がないを作成、特定のタイム ゾーンのオーバー ロードのいずれかを呼び出すか、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>メソッドを呼び出して、または<xref:System.TimeZoneInfo.FromSerializedString%2A>を逆シリアル化、<xref:System.TimeZoneInfo>オブジェクトを必要なタイム ゾーンを表します。</span><span class="sxs-lookup"><span data-stu-id="765be-562">If the registry or the library does not have the information for the time zone you desire, you can create a particular time zone either by calling one of the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method or by calling <xref:System.TimeZoneInfo.FromSerializedString%2A> to deserialize a <xref:System.TimeZoneInfo> object that represents the required time zone.</span></span> <span data-ttu-id="765be-563">ただし、これらのメソッド呼び出しによって作成されたタイム ゾーンはシステム定義の時刻ではなくを使用して取得することはできません、<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-563">However, time zones created by these method calls are not system-defined time and cannot be retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method.</span></span> <span data-ttu-id="765be-564">このカスタムのタイム ゾーンは、によって返されるオブジェクトの参照を介してのみアクセスできる、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>または<xref:System.TimeZoneInfo.FromSerializedString%2A>メソッドの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="765be-564">These custom time zones can be accessed only through the object reference returned by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> or <xref:System.TimeZoneInfo.FromSerializedString%2A> method call.</span></span>  
  
<span data-ttu-id="765be-565">このメソッドは、新しい返します<xref:System.TimeZoneInfo>各メソッド呼び出しのインスタンスはキャッシュされたオブジェクトを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="765be-565">This method returns a new <xref:System.TimeZoneInfo> instance for each method call; it does not return cached objects.</span></span> <span data-ttu-id="765be-566">これを呼び出すアプリケーションのパフォーマンスに影響が、`FindSystemTimeZoneById`繰り返し同じ識別子を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-566">This may impact performance in applications that call the  `FindSystemTimeZoneById` method repeatedly with the same identifier.</span></span>   
  
## Examples  
 <span data-ttu-id="765be-567">次の例では、<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>東京標準タイム ゾーンを取得します。</span><span class="sxs-lookup"><span data-stu-id="765be-567">The following example uses the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to retrieve the Tokyo Standard Time zone.</span></span> <span data-ttu-id="765be-568">これは、<xref:System.TimeZoneInfo>東京のローカル時刻を時刻に変換し、東京 (標準時) または東京夏時間があるかどうかを判断するオブジェクトを使用しています。</span><span class="sxs-lookup"><span data-stu-id="765be-568">This <xref:System.TimeZoneInfo> object is then used to convert the local time to the time in Tokyo and to determine whether it is Tokyo Standard Time or Tokyo Daylight Time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/convertdt2.cs#2)]
 [!code-vb[System.TimeZone2.Conversions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/convertdt2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="765be-569">タイム ゾーンに関する情報を保持するために必要なメモリがシステムにありません。</span><span class="sxs-lookup"><span data-stu-id="765be-569">The system does not have enough memory to hold information about the time zone.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-570"><paramref name="id" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-570">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="765be-571"><paramref name="id" /> で指定されたタイム ゾーン ID が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="765be-571">The time zone identifier specified by <paramref name="id" /> was not found.</span></span> <span data-ttu-id="765be-572">つまり、<paramref name="id" /> と同じ名前のタイム ゾーン識別子が存在していないか、または識別子は存在するものの、それにはタイム ゾーンのデータが含まれていません。</span><span class="sxs-lookup"><span data-stu-id="765be-572">This means that a time zone identifier whose name matches <paramref name="id" /> does not exist, or that the identifier exists but does not contain any time zone data.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="765be-573">プロセスには、タイム ゾーン情報を格納するレジストリ キーからの読み取りに必要な権限がありません。</span><span class="sxs-lookup"><span data-stu-id="765be-573">The process does not have the permissions required to read from the registry key that contains the time zone information.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="765be-574">タイム ゾーン ID が見つかりましたが、レジストリ データが破損しています。</span><span class="sxs-lookup"><span data-stu-id="765be-574">The time zone identifier was found, but the registry data is corrupted.</span></span></exception>
        <altmember cref="P:System.TimeZoneInfo.Id" />
        <related type="Article" href="https://msdn.microsoft.com/library/8cb620e5-c6a6-4267-a52e-beeb73cd1a34"><span data-ttu-id="765be-575">方法: TimeZoneInfo オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="765be-575">How to: Instantiate a TimeZoneInfo Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromSerializedString">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo FromSerializedString (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo FromSerializedString(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.FromSerializedString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSerializedString (source As String) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ FromSerializedString(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member FromSerializedString : string -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.FromSerializedString source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="765be-576">シリアル化された <see cref="T:System.TimeZoneInfo" /> オブジェクトの文字列表現。</span><span class="sxs-lookup"><span data-stu-id="765be-576">The string representation of the serialized <see cref="T:System.TimeZoneInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="765be-577">文字列を逆シリアル化して、シリアル化された元の <see cref="T:System.TimeZoneInfo" /> オブジェクトを再作成します。</span><span class="sxs-lookup"><span data-stu-id="765be-577">Deserializes a string to re-create an original serialized <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="765be-578">シリアル化された元のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-578">The original serialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-579">別の Windows またはレジストリに含まれていないタイム ゾーンを作成するために必要なすべてのコードを提供するために、 [ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)Linux と macOS でします。</span><span class="sxs-lookup"><span data-stu-id="765be-579">There is an alternative to providing all the code required to create a time zone that is not found in the registry on Windows or in the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="765be-580">カスタムのタイム ゾーンといずれかを定義できますを使用して、<xref:System.TimeZoneInfo.ToSerializedString%2A>メソッドでは、スタンドアロン実行可能ファイルまたはアプリケーションのセットアップ プログラムを文字列としてのタイム ゾーンの保存に使用します。</span><span class="sxs-lookup"><span data-stu-id="765be-580">You can define a custom time zone and either use the <xref:System.TimeZoneInfo.ToSerializedString%2A> method in a standalone executable or use an application's setup program to save the time zone as a string.</span></span> <span data-ttu-id="765be-581">アプリケーションの記憶域の場所からこの文字列を取得し、インスタンス化を使用して、<xref:System.TimeZoneInfo.FromSerializedString%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-581">The application can then retrieve this string from its storage location and instantiate it using the <xref:System.TimeZoneInfo.FromSerializedString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-582">次の例では、/南極を取得しようとしました。 ローカル システムからのタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-582">The following example tries to retrieve the Antarctica/South Pole time zone from the local system.</span></span> <span data-ttu-id="765be-583">失敗した場合、コードは、アプリケーション ディレクトリ内のテキスト ファイルからタイム ゾーンに関する情報を取得しようとします。</span><span class="sxs-lookup"><span data-stu-id="765be-583">If it fails, the code tries to retrieve information about the time zone from a text file in the application directory.</span></span> <span data-ttu-id="765be-584">この試行が失敗した場合、コードは、タイム ゾーンを作成し、タイム ゾーンに関する情報をテキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="765be-584">If this attempt fails, the code creates the time zone and writes information about the time zone to the text file.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#4)]
 [!code-vb[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-585"><paramref name="source" /> パラメーターが <see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-585">The <paramref name="source" /> parameter is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-586"><paramref name="source" /> パラメーターが null 文字列です。</span><span class="sxs-lookup"><span data-stu-id="765be-586">The <paramref name="source" /> parameter is a null string.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="765be-587">指定されたパラメーターを逆シリアル化して <see cref="T:System.TimeZoneInfo" /> オブジェクトに戻すことができません。</span><span class="sxs-lookup"><span data-stu-id="765be-587">The source parameter cannot be deserialized back into a <see cref="T:System.TimeZoneInfo" /> object.</span></span></exception>
        <altmember cref="M:System.TimeZoneInfo.ToSerializedString" />
        <related type="Article" href="https://msdn.microsoft.com/library/6b7b4de9-da07-47e3-8f4c-823f81798ee7"><span data-ttu-id="765be-588">方法: 埋め込みリソースからタイム ゾーンを復元します。</span><span class="sxs-lookup"><span data-stu-id="765be-588">How to: Restore Time Zones from an Embedded Resource</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustmentRules">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.AdjustmentRule[] GetAdjustmentRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.TimeZoneInfo/AdjustmentRule[] GetAdjustmentRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetAdjustmentRules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjustmentRules () As TimeZoneInfo.AdjustmentRule()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;TimeZoneInfo::AdjustmentRule ^&gt; ^ GetAdjustmentRules();" />
      <MemberSignature Language="F#" Value="member this.GetAdjustmentRules : unit -&gt; TimeZoneInfo.AdjustmentRule[]" Usage="timeZoneInfo.GetAdjustmentRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+AdjustmentRule[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="765be-589">現在の <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> オブジェクトに適用する <see cref="T:System.TimeZoneInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="765be-589">Retrieves an array of <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> objects that apply to the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="765be-590">このタイム ゾーンのオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="765be-590">An array of objects for this time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-591"><xref:System.TimeZoneInfo.GetAdjustmentRules%2A>メソッドの配列を取得する<xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-591">The <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method retrieves an array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> objects.</span></span> <span data-ttu-id="765be-592">配列内の各オブジェクトがそのデルタと同様に、そのタイム ゾーン調整の有効な開始と終了日を定義します (調整を変更する時間のによって使用される正確な量)。</span><span class="sxs-lookup"><span data-stu-id="765be-592">Each object in the array defines the effective start and end date of that time zone adjustment, as well as its delta (the exact amount by which the adjustment causes the time to change).</span></span> <span data-ttu-id="765be-593">さらに、2 つのプロパティが返す<xref:System.TimeZoneInfo.TransitionTime?displayProperty=nameWithType>標準時との間の切り替えが発生したときを定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-593">In addition, two properties return <xref:System.TimeZoneInfo.TransitionTime?displayProperty=nameWithType> objects that define when each annual transition to and from standard time occurs.</span></span>  
  
 <span data-ttu-id="765be-594">タイム ゾーンに複数の調整規則がある場合は、通常、順序がから最も古い (インデックス 0) の最新版に (インデックス位置にある<xref:System.Array.Length%2A>- 1)。</span><span class="sxs-lookup"><span data-stu-id="765be-594">If a time zone has multiple adjustment rules, they are generally ordered from earliest (at index 0) to latest (at index <xref:System.Array.Length%2A> - 1).</span></span>  
  
 <span data-ttu-id="765be-595">タイム ゾーン調整の規則が存在しない場合、<xref:System.TimeZoneInfo.GetAdjustmentRules%2A>メソッドは空の配列を返します (配列の<xref:System.Array.Length%2A>は 0 です)。</span><span class="sxs-lookup"><span data-stu-id="765be-595">If a time zone has no adjustment rules, the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an empty array (an array whose <xref:System.Array.Length%2A> is zero).</span></span>  
  
 <span data-ttu-id="765be-596">によって返される配列の要素への変更、<xref:System.TimeZoneInfo.GetAdjustmentRules%2A>メソッドは、特定のタイム ゾーンに属している調整規則には反映されません。</span><span class="sxs-lookup"><span data-stu-id="765be-596">Any modifications to the elements of the array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method are not reflected in the adjustment rules that belong to a particular time zone.</span></span> <span data-ttu-id="765be-597">(履歴の遷移と夏時間の間の反映など) のタイム ゾーンの調整規則を変更する必要があります、適切な調整規則では、新しいタイム ゾーンを作成ではなく既存のものを変更します。</span><span class="sxs-lookup"><span data-stu-id="765be-597">To modify a time zone's adjustment rules (such as to reflect its historical transition to and from daylight saving time) you must create a new time zone with the appropriate adjustment rules, rather than modify the existing one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-598">次の例は、ローカル システム情報を表示します完了について、コンソールにそれらの調整規則で定義されているすべてのタイム ゾーンを取得します。</span><span class="sxs-lookup"><span data-stu-id="765be-598">The following example retrieves all time zones that are defined on the local system and displays complete information about their adjustment rules to the console.</span></span>  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#3)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="765be-599">調整規則のメモリ内コピーを作成するために必要なメモリがシステムにありません。</span><span class="sxs-lookup"><span data-stu-id="765be-599">The system does not have enough memory to make an in-memory copy of the adjustment rules.</span></span></exception>
        <altmember cref="T:System.TimeZoneInfo.AdjustmentRule" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAmbiguousTimeOffsets">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="765be-600">あいまいな日付と時刻を割り当て可能な、日付と時刻に関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-600">Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAmbiguousTimeOffsets">
      <MemberSignature Language="C#" Value="public TimeSpan[] GetAmbiguousTimeOffsets (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan[] GetAmbiguousTimeOffsets(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;TimeSpan&gt; ^ GetAmbiguousTimeOffsets(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.GetAmbiguousTimeOffsets : DateTime -&gt; TimeSpan[]" Usage="timeZoneInfo.GetAmbiguousTimeOffsets dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="765be-601">日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-601">A date and time.</span></span></param>
        <summary><span data-ttu-id="765be-602">あいまいな日付と時刻を割り当て可能な、日付と時刻に関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-602">Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</span></span></summary>
        <returns><span data-ttu-id="765be-603">特定の日付と時刻を割り当て可能な、世界協定時刻 (UTC) オフセットを表すオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="765be-603">An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-604">このメソッドの正確な動作の間のリレーションシップに依存、<xref:System.DateTime.Kind%2A>プロパティおよび<xref:System.TimeZoneInfo>オブジェクトとして、次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="765be-604">The precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.</span></span>  
  
|<span data-ttu-id="765be-605">TimeZoneInfo オブジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="765be-605">TimeZoneInfo object type</span></span>|<span data-ttu-id="765be-606">Kind プロパティ値</span><span class="sxs-lookup"><span data-stu-id="765be-606">Kind property value</span></span>|<span data-ttu-id="765be-607">動作</span><span class="sxs-lookup"><span data-stu-id="765be-607">Behavior</span></span>|  
|------------------------------|-------------------------|--------------|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<span data-ttu-id="765be-608"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> または <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="765be-608"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span></span>|<span data-ttu-id="765be-609">オフセットを返しますのあいまいな時刻`dateTime`します。</span><span class="sxs-lookup"><span data-stu-id="765be-609">Returns ambiguous time offsets for `dateTime`.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="765be-610">変換`dateTime`を現地時刻、および、その時間のオフセットをあいまいな時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-610">Converts `dateTime` to the local time, and then returns ambiguous time offsets for that time.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<span data-ttu-id="765be-611">任意の値。</span><span class="sxs-lookup"><span data-stu-id="765be-611">Any value.</span></span>|<span data-ttu-id="765be-612">スローされます、<xref:System.ArgumentException>します。</span><span class="sxs-lookup"><span data-stu-id="765be-612">Throws an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="765be-613">タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-613">Any other time zone.</span></span>|<span data-ttu-id="765be-614"><xref:System.DateTimeKind.Local> または <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="765be-614"><xref:System.DateTimeKind.Local> or <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span></span>|<span data-ttu-id="765be-615">変換`dateTime`指定されたタイム ゾーンに、その時刻があいまいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-615">Converts `dateTime` to the specified time zone, and then determines whether that time is ambiguous.</span></span>|  
|<span data-ttu-id="765be-616">タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-616">Any other time zone.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="765be-617">決定かどうか`dateTime`が指定されたタイム ゾーンであいまいです。</span><span class="sxs-lookup"><span data-stu-id="765be-617">Determines whether `dateTime` is ambiguous in the specified time zone.</span></span>|  
  
 <span data-ttu-id="765be-618">順序<xref:System.TimeSpan>このメソッドによって返される配列内のオブジェクトが定義されていません。</span><span class="sxs-lookup"><span data-stu-id="765be-618">The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined.</span></span> <span data-ttu-id="765be-619">要素は、そのタイム ゾーンの値を比較することで、タイム ゾーンの標準時間からオフセットを表しますを決定するただし、<xref:System.TimeZoneInfo.BaseUtcOffset%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="765be-619">However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property.</span></span> <span data-ttu-id="765be-620">あいまいな時刻をタイム ゾーンの標準時刻にマップするを参照してください。[方法。あいまいな時刻を解決](~/docs/standard/datetime/resolve-ambiguous-times.md)します。</span><span class="sxs-lookup"><span data-stu-id="765be-620">To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-621">次の例は、という名前のメソッドを定義します。`ShowPossibleUtcTimes`を使用して、<xref:System.TimeZoneInfo.GetAmbiguousTimeOffsets%28System.DateTime%29>あいまいな時刻を対応する世界協定時刻 (UTC) が可能にマップする方法。</span><span class="sxs-lookup"><span data-stu-id="765be-621">The following example defines a method named `ShowPossibleUtcTimes` that uses the <xref:System.TimeZoneInfo.GetAmbiguousTimeOffsets%28System.DateTime%29> method to map an ambiguous time to its possible corresponding Coordinated Universal Time (UTC) times.</span></span>  
  
 [!code-csharp[System.TimeZone2.GetAmbiguousTimeOffsets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/cs/System.TimeZone2.GetAmbiguousTimeOffsets.cs#1)]
 [!code-vb[System.TimeZone2.GetAmbiguousTimeOffsets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/vb/System.TimeZone2.GetAmbiguousTimeOffsets.vb#1)]  
  
 <span data-ttu-id="765be-622">メソッドには、次のコードを使用して呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="765be-622">The method can then be called using code such as the following:</span></span>  
  
 [!code-csharp[System.TimeZone2.GetAmbiguousTimeOffsets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/cs/System.TimeZone2.GetAmbiguousTimeOffsets.cs#2)]
 [!code-vb[System.TimeZone2.GetAmbiguousTimeOffsets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/vb/System.TimeZone2.GetAmbiguousTimeOffsets.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-623"><paramref name="dateTime" /> は、あいまいな時刻ではありません。</span><span class="sxs-lookup"><span data-stu-id="765be-623"><paramref name="dateTime" /> is not an ambiguous time.</span></span></exception>
        <altmember cref="Overload:System.TimeZoneInfo.IsAmbiguousTime" />
        <related type="Article" href="https://msdn.microsoft.com/library/2cf5fb25-492c-4875-9245-98cac8348e97"><span data-ttu-id="765be-624">方法: あいまいな時刻を解決するには</span><span class="sxs-lookup"><span data-stu-id="765be-624">How to: Resolve Ambiguous Times</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/bca874ee-5b68-4654-8bbd-3711220ef332"><span data-ttu-id="765be-625">方法: あいまいな時刻を解決できるようにユーザー</span><span class="sxs-lookup"><span data-stu-id="765be-625">How to: Let Users Resolve Ambiguous Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAmbiguousTimeOffsets">
      <MemberSignature Language="C#" Value="public TimeSpan[] GetAmbiguousTimeOffsets (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan[] GetAmbiguousTimeOffsets(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;TimeSpan&gt; ^ GetAmbiguousTimeOffsets(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.GetAmbiguousTimeOffsets : DateTimeOffset -&gt; TimeSpan[]" Usage="timeZoneInfo.GetAmbiguousTimeOffsets dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="765be-626">日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-626">A date and time.</span></span></param>
        <summary><span data-ttu-id="765be-627">あいまいな日付と時刻を割り当て可能な、日付と時刻に関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-627">Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</span></span></summary>
        <returns><span data-ttu-id="765be-628">特定の日付と時刻を割り当て可能な、世界協定時刻 (UTC) オフセットを表すオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="765be-628">An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-629">このメソッドの正確な動作の間のリレーションシップに依存、<xref:System.DateTimeOffset.Offset%2A>のプロパティ、`dateTimeOffset`パラメーターおよび<xref:System.TimeZoneInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-629">The precise behavior of this method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the <xref:System.TimeZoneInfo> object.</span></span> <span data-ttu-id="765be-630">場合の値、<xref:System.DateTimeOffset.Offset%2A>プロパティに対応可能なオフセットの現在のタイム ゾーンの協定世界時 (UTC) からの日付と時刻をメソッドを返す可能性のあるオフセット。</span><span class="sxs-lookup"><span data-stu-id="765be-630">If the value of the <xref:System.DateTimeOffset.Offset%2A> property corresponds to the current time zone's possible offsets from Coordinated Universal Time (UTC) for that date and time, the method returns the possible offsets.</span></span> <span data-ttu-id="765be-631">それ以外の場合、変換`dateTimeOffset`の現在のタイム ゾーン、しを返します。 そのオフセットを、使用可能な時間の日付と時刻にします。</span><span class="sxs-lookup"><span data-stu-id="765be-631">Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then returns the possible offsets of that date and time.</span></span>  
  
 <span data-ttu-id="765be-632">順序<xref:System.TimeSpan>このメソッドによって返される配列内のオブジェクトが定義されていません。</span><span class="sxs-lookup"><span data-stu-id="765be-632">The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined.</span></span> <span data-ttu-id="765be-633">要素は、そのタイム ゾーンの値を比較することで、タイム ゾーンの標準時間からオフセットを表しますを決定するただし、<xref:System.TimeZoneInfo.BaseUtcOffset%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="765be-633">However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property.</span></span> <span data-ttu-id="765be-634">あいまいな時刻をタイム ゾーンの標準時刻にマップするを参照してください。[方法。あいまいな時刻を解決](~/docs/standard/datetime/resolve-ambiguous-times.md)します。</span><span class="sxs-lookup"><span data-stu-id="765be-634">To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-635"><paramref name="dateTimeOffset" /> は、あいまいな時刻ではありません。</span><span class="sxs-lookup"><span data-stu-id="765be-635"><paramref name="dateTimeOffset" /> is not an ambiguous time.</span></span></exception>
        <altmember cref="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)" />
        <related type="Article" href="https://msdn.microsoft.com/library/2cf5fb25-492c-4875-9245-98cac8348e97"><span data-ttu-id="765be-636">方法: あいまいな時刻を解決するには</span><span class="sxs-lookup"><span data-stu-id="765be-636">How to: Resolve Ambiguous Times</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/bca874ee-5b68-4654-8bbd-3711220ef332"><span data-ttu-id="765be-637">方法: あいまいな時刻を解決できるようにユーザー</span><span class="sxs-lookup"><span data-stu-id="765be-637">How to: Let Users Resolve Ambiguous Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="timeZoneInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="765be-638">ハッシュ関数として機能し、ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造に使用されます。</span><span class="sxs-lookup"><span data-stu-id="765be-638">Serves as a hash function for hashing algorithms and data structures such as hash tables.</span></span></summary>
        <returns><span data-ttu-id="765be-639">この <see cref="T:System.TimeZoneInfo" /> オブジェクトのハッシュ コードとして機能する 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="765be-639">A 32-bit signed integer that serves as the hash code for this <see cref="T:System.TimeZoneInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-640">詳細については、<xref:System.TimeZoneInfo.GetHashCode%2A>メソッドを参照してください<xref:System.Object.GetHashCode%2A>します。</span><span class="sxs-lookup"><span data-stu-id="765be-640">For additional detail about the <xref:System.TimeZoneInfo.GetHashCode%2A> method, see <xref:System.Object.GetHashCode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemTimeZones">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;TimeZoneInfo&gt; GetSystemTimeZones ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.TimeZoneInfo&gt; GetSystemTimeZones() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetSystemTimeZones" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemTimeZones () As ReadOnlyCollection(Of TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;TimeZoneInfo ^&gt; ^ GetSystemTimeZones();" />
      <MemberSignature Language="F#" Value="static member GetSystemTimeZones : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;TimeZoneInfo&gt;" Usage="System.TimeZoneInfo.GetSystemTimeZones " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.TimeZoneInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="765be-641">ローカル システムで情報を使用できるすべてのタイム ゾーンのコレクションを、並べ替えられた状態で返します。</span><span class="sxs-lookup"><span data-stu-id="765be-641">Returns a sorted collection of all the time zones about which information is available on the local system.</span></span></summary>
        <returns><span data-ttu-id="765be-642"><see cref="T:System.TimeZoneInfo" /> オブジェクトの読み取り専用のコレクション。</span><span class="sxs-lookup"><span data-stu-id="765be-642">A read-only collection of <see cref="T:System.TimeZoneInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-643"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A>メソッドは、Windows システムとの間に、レジストリの hkey_local_machine \software\microsoft\windows nt \currentversion\time Zones キーのサブキーからすべての利用可能なタイム ゾーン情報を取得、 [ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone) Linux と macOS でします。</span><span class="sxs-lookup"><span data-stu-id="765be-643">The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method retrieves all available time zone information from the subkeys of the registry's HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones key on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="765be-644">正常に取得し、個人の特定の文字列プロパティの値を解析できない場合<xref:System.TimeZoneInfo>オブジェクトの場合、このメソッドでは、その値を設定を空の文字列 ("")。</span><span class="sxs-lookup"><span data-stu-id="765be-644">If it is unable to successfully retrieve and parse values for particular string properties of individual <xref:System.TimeZoneInfo> objects, this method sets their value to an empty string ("").</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="765be-645"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A>メソッドのコレクションを返します<xref:System.TimeZoneInfo>オブジェクトで定義されているタイム ゾーンの場合にのみ、または ICU ライブラリ。</span><span class="sxs-lookup"><span data-stu-id="765be-645">The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method returns a collection of <xref:System.TimeZoneInfo> objects only for time zones defined in the  or ICU library.</span></span> <span data-ttu-id="765be-646">オーバー ロードを使用して作成されたタイム ゾーンを含まない、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-646">It does not include time zones created using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="765be-647">これらは、タイム ゾーンの作成方法によって返されるオブジェクトの参照を介してのみアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="765be-647">These are accessible only through the object reference returned by the time zone creation method.</span></span>  
  
 <span data-ttu-id="765be-648">このメソッドによって返されるコレクションには、現在のカルチャを使用して表示名で UTC オフセットがあり、同じの UTC オフセットを使用するタイム ゾーンは並べ替え。</span><span class="sxs-lookup"><span data-stu-id="765be-648">The collection returned by this method is sorted by UTC offset and, for time zones that have the same UTC offset, by the display name using the current culture.</span></span> <span data-ttu-id="765be-649">表示名については、次を参照してください。<xref:System.TimeZoneInfo.DisplayName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="765be-649">For information about the display name, see <xref:System.TimeZoneInfo.DisplayName%2A>.</span></span>  
  
 <span data-ttu-id="765be-650"><xref:System.Collections.ObjectModel.ReadOnlyCollection%601>このメソッドによって返されるオブジェクトをサポートしています、<xref:System.Collections.Generic.IEnumerable%601>インターフェイスを反復処理できるを使用して、 `foreach` (で C# の場合) または`For Each…Next`(Visual Basic) でのステートメント。</span><span class="sxs-lookup"><span data-stu-id="765be-650">The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object returned by this method supports the <xref:System.Collections.Generic.IEnumerable%601> interface, which means that it can be iterated using the `foreach` (in C#) or `For Each…Next` (in Visual Basic) statements.</span></span> <span data-ttu-id="765be-651">ループの各反復処理は、次を提供します。<xref:System.TimeZoneInfo>コレクション内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-651">Each iteration of the loop provides the next <xref:System.TimeZoneInfo> object in the collection.</span></span>  
  
 <span data-ttu-id="765be-652">コレクション<xref:System.TimeZoneInfo>オブジェクトは、ローカル コンピューターで定義されているタイム ゾーンを表します。 はすべての期間内にすべてのタイム ゾーンの完全な情報を必ずしも指定しません。</span><span class="sxs-lookup"><span data-stu-id="765be-652">The collection of <xref:System.TimeZoneInfo> objects represents time zones defined on the local computer; it does not necessarily provide complete information for all time zones during all time periods.</span></span> <span data-ttu-id="765be-653">タイム ゾーンがローカル コンピューターに見つからない場合は、オーバー ロードを使用してカスタムのタイム ゾーンを作成することができます、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-653">If your application requires time zones not found on the local computer, you can create custom time zones using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="765be-654">詳細については、「[方法 :調整規則のないタイム ゾーンを作成](~/docs/standard/datetime/create-time-zones-without-adjustment-rules.md)と[方法。タイム ゾーン調整規則を作成](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md)です。</span><span class="sxs-lookup"><span data-stu-id="765be-654">For more information, see [How to: Create Time Zones Without Adjustment Rules](~/docs/standard/datetime/create-time-zones-without-adjustment-rules.md) and [How to: Create Time Zones with Adjustment Rules](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).</span></span>  
  
 <span data-ttu-id="765be-655">呼び出すことによって、ローカル コンピューター上に個別のタイム ゾーンが定義されているかどうかを確認することも、<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>メソッドをパラメーターとして取得するタイム ゾーンの識別子。</span><span class="sxs-lookup"><span data-stu-id="765be-655">You can also determine whether an individual time zone is defined on the local computer by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method and providing the identifier of the time zone you want to retrieve as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-656">次の例では、コンピューターで定義されているタイム ゾーンを表すタイム ゾーン オブジェクトのコレクションを取得し、それらについての情報をテキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="765be-656">The following example retrieves a collection of time zone objects that represent the time zones defined on a computer and writes information about them to a text file.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/getsystemtimezones1.cs#6)]
 [!code-vb[System.TimeZone2.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/getsystemtimezones1.vb#6)]
  [!code-powershell[System.TimeZone2.Class#6](~/samples/snippets/powershell/VS_Snippets_CLR_System/System.TimeZone2.Class/PS/Timezone2_Examples.ps1)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="765be-657">タイム ゾーン情報をすべて格納するには、メモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="765be-657">There is insufficient memory to store all time zone information.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="765be-658">タイム ゾーン情報が格納されているレジストリ キーを読み取るためのアクセス許可が、ユーザーにありません。</span><span class="sxs-lookup"><span data-stu-id="765be-658">The user does not have permission to read from the registry keys that contain time zone information.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUtcOffset">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="765be-659">特定の日付と時刻について、このタイム ゾーンでの時刻と世界協定時刻 (UTC) とのオフセットまたは差を計算します。</span><span class="sxs-lookup"><span data-stu-id="765be-659">Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public TimeSpan GetUtcOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetUtcOffset(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.GetUtcOffset : DateTime -&gt; TimeSpan" Usage="timeZoneInfo.GetUtcOffset dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="765be-660">オフセットの計算対象となる日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-660">The date and time to determine the offset for.</span></span></param>
        <summary><span data-ttu-id="765be-661">特定の日付と時刻について、このタイム ゾーンでの時刻と世界協定時刻 (UTC) とのオフセットまたは差を計算します。</span><span class="sxs-lookup"><span data-stu-id="765be-661">Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</span></span></summary>
        <returns><span data-ttu-id="765be-662">2 つのタイム ゾーンの時差を示すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-662">An object that indicates the time difference between the two time zones.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-663">返される期間には、現在のタイム ゾーン調整規則の適用により、相違点が含まれています。</span><span class="sxs-lookup"><span data-stu-id="765be-663">The returned time span includes any differences due to the application of adjustment rules to the current time zone.</span></span> <span data-ttu-id="765be-664">異なり、<xref:System.TimeZoneInfo.BaseUtcOffset%2A>プロパティでは、世界協定時刻 (UTC) とタイム ゾーンの標準時刻の差を返し、そのため、アカウントを調整規則を考慮はされません。</span><span class="sxs-lookup"><span data-stu-id="765be-664">It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.</span></span>  
  
 <span data-ttu-id="765be-665">場合、`dateTime`パラメーターの<xref:System.DateTime.Kind%2A>プロパティは、タイム ゾーン オブジェクトに対応していない、このメソッドは、結果を返す前に、必要な変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="765be-665">If the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property does not correspond to the time zone object, this method performs the necessary conversion before returning a result.</span></span> <span data-ttu-id="765be-666">たとえば場合に発生、<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>がタイム ゾーン オブジェクトがローカル タイム ゾーンではありません。</span><span class="sxs-lookup"><span data-stu-id="765be-666">For example, this can occur if the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> but the time zone object is not the local time zone.</span></span> <span data-ttu-id="765be-667">場合`dateTime`があいまい、または変換後の時刻があいまいな場合は、このメソッドは、標準時とあいまいな時刻を解釈します。</span><span class="sxs-lookup"><span data-stu-id="765be-667">If `dateTime` is ambiguous, or if the converted time is ambiguous, this method interprets the ambiguous time as a standard time.</span></span> <span data-ttu-id="765be-668">場合`dateTime`が無効です、このメソッドが戻る、 <xref:System.TimeSpan> UTC とタイム ゾーンの標準時刻の差を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-668">If `dateTime` is invalid, this method returns a <xref:System.TimeSpan> object that reflects the difference between UTC and the time zone's standard time.</span></span>  
  
 <span data-ttu-id="765be-669"><xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=nameWithType>メソッドは操作に似ています、<xref:System.TimeZone.GetUtcOffset%2A>のメソッド、<xref:System.TimeZone>クラス。</span><span class="sxs-lookup"><span data-stu-id="765be-669">The <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=nameWithType> method is similar in operation to the <xref:System.TimeZone.GetUtcOffset%2A> method of the <xref:System.TimeZone> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-670">次の例の使用を示しています、<xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29>メソッドの異なるタイム ゾーンと日付の値が異なる<xref:System.DateTime.Kind%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="765be-670">The following example illustrates the use of the <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29> method with different time zones and with date values that have different <xref:System.DateTime.Kind%2A> property values.</span></span>  
  
 [!code-csharp[System.TimeZone2.GetUtcOffset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetUtcOffset/cs/System.TimeZone2.GetUtcOffset.cs#1)]
 [!code-vb[System.TimeZone2.GetUtcOffset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetUtcOffset/vb/System.TimeZone2.GetUtcOffset.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.BaseUtcOffset" />
      </Docs>
    </Member>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public TimeSpan GetUtcOffset (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetUtcOffset(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.GetUtcOffset : DateTimeOffset -&gt; TimeSpan" Usage="timeZoneInfo.GetUtcOffset dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="765be-671">オフセットの計算対象となる日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-671">The date and time to determine the offset for.</span></span></param>
        <summary><span data-ttu-id="765be-672">特定の日付と時刻について、このタイム ゾーンでの時刻と世界協定時刻 (UTC) とのオフセットまたは差を計算します。</span><span class="sxs-lookup"><span data-stu-id="765be-672">Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</span></span></summary>
        <returns><span data-ttu-id="765be-673">世界協定時刻 (UTC) と現在のタイム ゾーンとの時差を示すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-673">An object that indicates the time difference between Coordinated Universal Time (UTC) and the current time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-674">返される期間には、現在のタイム ゾーン調整規則の適用により、相違点が含まれています。</span><span class="sxs-lookup"><span data-stu-id="765be-674">The returned time span includes any differences due to the application of adjustment rules to the current time zone.</span></span> <span data-ttu-id="765be-675">異なり、<xref:System.TimeZoneInfo.BaseUtcOffset%2A>プロパティでは、世界協定時刻 (UTC) とタイム ゾーンの標準時刻の差を返し、そのため、アカウントを調整規則を考慮はされません。</span><span class="sxs-lookup"><span data-stu-id="765be-675">It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSameRules">
      <MemberSignature Language="C#" Value="public bool HasSameRules (TimeZoneInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasSameRules(class System.TimeZoneInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.HasSameRules(System.TimeZoneInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasSameRules (other As TimeZoneInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasSameRules(TimeZoneInfo ^ other);" />
      <MemberSignature Language="F#" Value="member this.HasSameRules : TimeZoneInfo -&gt; bool" Usage="timeZoneInfo.HasSameRules other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="765be-676">現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトと比較するもう 1 つのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-676">A second object to compare with the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="765be-677">現在のオブジェクトと別の <see cref="T:System.TimeZoneInfo" /> オブジェクトが同じ調整規則を持っているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-677">Indicates whether the current object and another <see cref="T:System.TimeZoneInfo" /> object have the same adjustment rules.</span></span></summary>
        <returns><span data-ttu-id="765be-678">2 つのタイム ゾーンが同じ調整規則と同じベース オフセットを持っている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="765be-678"><see langword="true" /> if the two time zones have identical adjustment rules and an identical base offset; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-679">ように、<xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType>メソッド、<xref:System.TimeZoneInfo.HasSameRules%2A>メソッドでは、2 つのタイム ゾーンが同じベース オフセットを持っているかどうかを示します (で定義されている、<xref:System.TimeZoneInfo.BaseUtcOffset%2A>プロパティ) と同じ調整規則。</span><span class="sxs-lookup"><span data-stu-id="765be-679">Like the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> method, the <xref:System.TimeZoneInfo.HasSameRules%2A> method indicates whether two time zones have the same base offset (as defined by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property) and the same adjustment rules.</span></span> <span data-ttu-id="765be-680">異なり、<xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType>メソッド、<xref:System.TimeZoneInfo.HasSameRules%2A>タイム ゾーン id は比較しません (で定義されている、<xref:System.TimeZoneInfo.Id%2A>プロパティ)。</span><span class="sxs-lookup"><span data-stu-id="765be-680">Unlike the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> method, <xref:System.TimeZoneInfo.HasSameRules%2A> does not compare time zone identifiers (as defined by the <xref:System.TimeZoneInfo.Id%2A> property).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-681">Windows 上のレジストリで定義されているタイム ゾーンの数では通常、および[ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)Linux と macOS には、世界協定時刻 (UTC) と同じ調整規則から同じオフセットを持っています。</span><span class="sxs-lookup"><span data-stu-id="765be-681">Typically, a number of time zones defined in the registry on Windows and the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS have the same offset from Coordinated Universal Time (UTC) and the same adjustment rules.</span></span> <span data-ttu-id="765be-682">次の例では、コンソールにこれらのタイム ゾーンの一覧が表示されます。</span><span class="sxs-lookup"><span data-stu-id="765be-682">The following example displays a list of these time zones to the console.</span></span>  
  
 [!code-csharp[System.TimeZone2.HasSameRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.HasSameRules/cs/HasSameRules.cs#1)]
 [!code-vb[System.TimeZone2.HasSameRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.HasSameRules/vb/HasSameRules.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-683"><paramref name="other" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-683">The <paramref name="other" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.TimeZoneInfo.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="765be-684">タイム ゾーン ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="765be-684">Gets the time zone identifier.</span></span></summary>
        <value><span data-ttu-id="765be-685">タイム ゾーン ID。</span><span class="sxs-lookup"><span data-stu-id="765be-685">The time zone identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-686">タイム ゾーン id は、特定のタイム ゾーンを一意に識別するキーの文字列です。</span><span class="sxs-lookup"><span data-stu-id="765be-686">The time zone identifier is a key string that uniquely identifies a particular time zone.</span></span> <span data-ttu-id="765be-687">Windows システムでは、Windows システムとの間に、レジストリの hkey_local_machine \software\microsoft\windows \currentversion\time ゾーン ブランチのサブキーに対応する、 [ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)Linux と macOS でします。</span><span class="sxs-lookup"><span data-stu-id="765be-687">On Windows systems, it corresponds to the subkeys of the HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zone branch of the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="765be-688">パラメーターとして渡すことが、<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>をインスタンス化するメソッド、<xref:System.TimeZoneInfo>特定のタイム ゾーンを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-688">It can be passed as a parameter to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to instantiate a <xref:System.TimeZoneInfo> object that represents a particular time zone.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="765be-689">Windows レジストリにキー名には、最大 255 文字できますが、カスタム タイム ゾーンに割り当てることの識別子が 32 文字以下にすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="765be-689">Although a key name in the Windows registry can be a maximum of 255 characters, we recommend that an identifier that you assign to a custom time zone be 32 characters or fewer.</span></span> <span data-ttu-id="765be-690">識別子が長いほど、不適切なキーの名前となる可能性が高く、取得するときに指定します。</span><span class="sxs-lookup"><span data-stu-id="765be-690">The longer the identifier, the greater the probability that an incorrect key name will be supplied when retrieving it.</span></span>  
  
 <span data-ttu-id="765be-691">値、<xref:System.TimeZoneInfo.Id%2A>プロパティは、通常は、常にではありませんと同一の<xref:System.TimeZoneInfo.StandardName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="765be-691">The value of the <xref:System.TimeZoneInfo.Id%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.StandardName%2A> property.</span></span> <span data-ttu-id="765be-692">協定のタイム ゾーンの識別子は、UTC です。</span><span class="sxs-lookup"><span data-stu-id="765be-692">The identifier of the Coordinated Universal Time zone is UTC.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-693">次の例では、各ローカル コンピューターで定義されているタイム ゾーンの識別子が表示されます。</span><span class="sxs-lookup"><span data-stu-id="765be-693">The following example lists the identifier of each of the time zones defined on the local computer.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#5)]
 [!code-vb[System.TimeZone2.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAmbiguousTime">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="765be-694">特定のタイム ゾーンの特定の日付と時刻があいまいかどうか、および複数の世界協定時刻 (UTC) に割り当て可能かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-694">Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAmbiguousTime">
      <MemberSignature Language="C#" Value="public bool IsAmbiguousTime (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAmbiguousTime(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbiguousTime(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.IsAmbiguousTime : DateTime -&gt; bool" Usage="timeZoneInfo.IsAmbiguousTime dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="765be-695">日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="765be-695">A date and time value.</span></span></param>
        <summary><span data-ttu-id="765be-696">特定のタイム ゾーンの特定の日付と時刻があいまいかどうか、および複数の世界協定時刻 (UTC) に割り当て可能かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-696">Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</span></span></summary>
        <returns><span data-ttu-id="765be-697"><paramref name="dateTime" /> パラメーターがあいまいな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="765be-697"><see langword="true" /> if the <paramref name="dateTime" /> parameter is ambiguous; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-698">あいまいな時刻は、現在のタイム ゾーンの時間の範囲内にあります。</span><span class="sxs-lookup"><span data-stu-id="765be-698">An ambiguous time falls within a range of times for the current time zone.</span></span> <span data-ttu-id="765be-699">つまり、標準時または調整規則の適用に起因する時間のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="765be-699">This means it can be either a standard time or a time that results from the application of an adjustment rule.</span></span> <span data-ttu-id="765be-700">通常、クロックが夏時間から標準時間に戻るに設定されている場合があいまいな時刻が発生します。</span><span class="sxs-lookup"><span data-stu-id="765be-700">Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time.</span></span> <span data-ttu-id="765be-701">図の例のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="765be-701">See the Example section for an illustration.</span></span>  
  
 <span data-ttu-id="765be-702">世界協定時刻 (UTC) には、あいまいな時刻がありません。ゾーンが夏時間をサポートしていないどちらでもない時刻の操作を行います。</span><span class="sxs-lookup"><span data-stu-id="765be-702">Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.</span></span> <span data-ttu-id="765be-703">そのため、これらのタイム ゾーンがあるない調整規則を呼び出すと、<xref:System.TimeZoneInfo.IsAmbiguousTime%2A>メソッドの戻り値を常に`false`します。</span><span class="sxs-lookup"><span data-stu-id="765be-703">Therefore, these time zones have no adjustment rules and calls to the <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> method always return `false`.</span></span>  
  
 <span data-ttu-id="765be-704">夏時間を観察するタイム ゾーンの場合、このメソッドの動作の詳細がの間のリレーションシップに依存、<xref:System.DateTime.Kind%2A>プロパティおよび<xref:System.TimeZoneInfo>オブジェクトとして、次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="765be-704">For time zones that do observe daylight saving time, the precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.</span></span>  
  
|<span data-ttu-id="765be-705">TimeZoneInfo オブジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="765be-705">TimeZoneInfo object type</span></span>|<span data-ttu-id="765be-706">Kind プロパティ値</span><span class="sxs-lookup"><span data-stu-id="765be-706">Kind property value</span></span>|<span data-ttu-id="765be-707">動作</span><span class="sxs-lookup"><span data-stu-id="765be-707">Behavior</span></span>|  
|------------------------------|-------------------------|--------------|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<span data-ttu-id="765be-708"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> または <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="765be-708"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span></span>|<span data-ttu-id="765be-709">決定かどうか、`dateTime`パラメーターがあいまいです。</span><span class="sxs-lookup"><span data-stu-id="765be-709">Determines whether the `dateTime` parameter is ambiguous.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="765be-710">変換`dateTime`現地時刻に、その時刻があいまいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-710">Converts `dateTime` to the local time and then determines whether that time is ambiguous.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<span data-ttu-id="765be-711"><xref:System.DateTimeKind.Utc?displayProperty=nameWithType> または <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="765be-711"><xref:System.DateTimeKind.Utc?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span></span>|<span data-ttu-id="765be-712">`false` を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-712">Returns `false`.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="765be-713">場合`dateTime`標準時は、UTC に変換し、返しますを前提としています、あいまいな`false`します。</span><span class="sxs-lookup"><span data-stu-id="765be-713">If `dateTime` is ambiguous, assumes it is a standard time, converts it to UTC, and returns `false`.</span></span>|  
|<span data-ttu-id="765be-714">タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-714">Any other time zone.</span></span>|<span data-ttu-id="765be-715"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> または <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="765be-715"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span></span>|<span data-ttu-id="765be-716">変換`dateTime`を指定されたタイム ゾーンの時刻に、その時刻があいまいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-716">Converts `dateTime` to the time in the specified time zone and then determines whether that time is ambiguous.</span></span>|  
|<span data-ttu-id="765be-717">タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-717">Any other time zone.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="765be-718">決定かどうか`dateTime`があいまいです。</span><span class="sxs-lookup"><span data-stu-id="765be-718">Determines whether `dateTime` is ambiguous.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="765be-719">太平洋標準時ゾーンで夏時間が午前 2 時に終了します。</span><span class="sxs-lookup"><span data-stu-id="765be-719">In the Pacific Time zone, daylight saving time ends at 2:00 A.M.</span></span> <span data-ttu-id="765be-720">2007 年 11 月 4 日。</span><span class="sxs-lookup"><span data-stu-id="765be-720">on November 4, 2007.</span></span> <span data-ttu-id="765be-721">次の例は、午前 12時 59分時から 1 分間隔で、時間を渡します</span><span class="sxs-lookup"><span data-stu-id="765be-721">The following example passes the time at one-minute intervals from 12:59 A.M.</span></span> <span data-ttu-id="765be-722">2007、年 11 月 4 日午前 2時 01分</span><span class="sxs-lookup"><span data-stu-id="765be-722">on November 4, 2007, to 2:01 A.M.</span></span> <span data-ttu-id="765be-723">2007 年 11 月 4 日に、<xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29>のメソッド、<xref:System.TimeZoneInfo>太平洋標準時タイム ゾーンを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-723">on November 4, 2007, to the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> method of a <xref:System.TimeZoneInfo> object that represents the Pacific Time zone.</span></span> <span data-ttu-id="765be-724">コンソール出力は、午前 1 時からそのすべての回数を示します</span><span class="sxs-lookup"><span data-stu-id="765be-724">The console output indicates that all times from 1:00 A.M.</span></span> <span data-ttu-id="765be-725">2007、年 11 月 4 日午前 1時 59分に</span><span class="sxs-lookup"><span data-stu-id="765be-725">on November 4, 2007, to 1:59 A.M.</span></span> <span data-ttu-id="765be-726">2007 年 11 月 4 日には、あいまいになります。</span><span class="sxs-lookup"><span data-stu-id="765be-726">on November 4, 2007, are ambiguous.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#8)]
 [!code-vb[System.TimeZone2.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-727"><paramref name="dateTime" /> 値の <see cref="P:System.DateTime.Kind" /> プロパティは <see cref="F:System.DateTimeKind.Local" /> で、<paramref name="dateTime" /> は無効な時刻です。</span><span class="sxs-lookup"><span data-stu-id="765be-727">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> value is <see cref="F:System.DateTimeKind.Local" /> and <paramref name="dateTime" /> is an invalid time.</span></span></exception>
        <altmember cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsAmbiguousTime">
      <MemberSignature Language="C#" Value="public bool IsAmbiguousTime (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAmbiguousTime(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbiguousTime(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.IsAmbiguousTime : DateTimeOffset -&gt; bool" Usage="timeZoneInfo.IsAmbiguousTime dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="765be-728">日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="765be-728">A date and time.</span></span></param>
        <summary><span data-ttu-id="765be-729">特定のタイム ゾーンの特定の日付と時刻があいまいかどうか、および複数の世界協定時刻 (UTC) に割り当て可能かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-729">Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</span></span></summary>
        <returns><span data-ttu-id="765be-730"><paramref name="dateTimeOffset" /> パラメーターが現在のタイム ゾーンであいまいな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="765be-730"><see langword="true" /> if the <paramref name="dateTimeOffset" /> parameter is ambiguous in the current time zone; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-731">あいまいな時刻は、現在のタイム ゾーンの時間の範囲内にあります。</span><span class="sxs-lookup"><span data-stu-id="765be-731">An ambiguous time falls within a range of times for the current time zone.</span></span> <span data-ttu-id="765be-732">これは、標準時または調整規則の適用に起因する時間のいずれかのどちらをできることを意味します。</span><span class="sxs-lookup"><span data-stu-id="765be-732">This means that it can be either a standard time or a time that results from the application of an adjustment rule.</span></span> <span data-ttu-id="765be-733">通常、クロックが夏時間から標準時間に戻るに設定されている場合があいまいな時刻が発生します。</span><span class="sxs-lookup"><span data-stu-id="765be-733">Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time.</span></span> <span data-ttu-id="765be-734">世界協定時刻 (UTC) には、あいまいな時刻がありません。ゾーンが夏時間をサポートしていないどちらでもない時刻の操作を行います。</span><span class="sxs-lookup"><span data-stu-id="765be-734">Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.</span></span>  
  
 <span data-ttu-id="765be-735">メソッドの正確な動作の間のリレーションシップに依存、<xref:System.DateTimeOffset.Offset%2A>のプロパティ、`dateTimeOffset`パラメーターと現在のタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-735">The precise behavior of the method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the current time zone.</span></span> <span data-ttu-id="765be-736">場合の値、<xref:System.DateTimeOffset.Offset%2A>メソッドを決定する可能性のある現在のタイム ゾーンの UTC からのオフセットをプロパティには、かどうかは、日付し、時刻があいまいです。</span><span class="sxs-lookup"><span data-stu-id="765be-736">If the value of the <xref:System.DateTimeOffset.Offset%2A> property is a possible offset from the UTC of the current time zone, the method determines whether that date and time is ambiguous.</span></span> <span data-ttu-id="765be-737">それ以外の場合、変換`dateTimeOffset`を現在のタイム ゾーンの時刻に決定するかどうかは、日付し、時刻があいまいです。</span><span class="sxs-lookup"><span data-stu-id="765be-737">Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then determines whether that date and time is ambiguous.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDaylightSavingTime">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="765be-738">指定された日付と時刻が、現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトのタイム ゾーンの夏時間の範囲内かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="765be-738">Indicates whether a specified date and time falls in the range of daylight saving time for the current <see cref="T:System.TimeZoneInfo" /> object's time zone.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool IsDaylightSavingTime (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDaylightSavingTime(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDaylightSavingTime(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.IsDaylightSavingTime : DateTime -&gt; bool" Usage="timeZoneInfo.IsDaylightSavingTime dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="765be-739">日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="765be-739">A date and time value.</span></span></param>
        <summary><span data-ttu-id="765be-740">指定された日付と時刻が、現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトのタイム ゾーンの夏時間範囲内かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="765be-740">Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="765be-741"><paramref name="dateTime" /> パラメーターが夏時間の範囲内の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="765be-741"><see langword="true" /> if the <paramref name="dateTime" /> parameter is a daylight saving time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-742">戻り値<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType>によって表されるタイム ゾーン間のリレーションシップが影響を受ける、<xref:System.TimeZoneInfo>オブジェクトと<xref:System.DateTime.Kind%2A>のプロパティ、`dateTime`パラメーターとして、次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="765be-742">The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="765be-743">TimeZoneInfo オブジェクト</span><span class="sxs-lookup"><span data-stu-id="765be-743">TimeZoneInfo object</span></span>|<span data-ttu-id="765be-744">DateTime.Kind プロパティ</span><span class="sxs-lookup"><span data-stu-id="765be-744">DateTime.Kind property</span></span>|<span data-ttu-id="765be-745">結果</span><span class="sxs-lookup"><span data-stu-id="765be-745">Result</span></span>|  
|-------------------------|----------------------------|------------|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|`DateTimeKind.Local`|<span data-ttu-id="765be-746">決定かどうか`dateTime`夏時間が。</span><span class="sxs-lookup"><span data-stu-id="765be-746">Determines whether `dateTime` is daylight saving time.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|`DateTimeKind.Utc`|<span data-ttu-id="765be-747">変換します`dateTime`から世界協定時刻 (UTC) から現地時刻を夏時間があるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="765be-747">Converts `dateTime` from Coordinated Universal Time (UTC) to local time and determines whether it is daylight saving time.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|`DateTimeKind.Unspecified`|<span data-ttu-id="765be-748">前提と`dateTime`現地時刻を表し、夏時間かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-748">Assumes that `dateTime` represents local time and determines whether it is daylight saving time.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<span data-ttu-id="765be-749">`DateTimeKind.Local`、 `DateTimeKind.Unspecified`、または `DateTimeKind.Utc`</span><span class="sxs-lookup"><span data-stu-id="765be-749">`DateTimeKind.Local`, `DateTimeKind.Unspecified`, or `DateTimeKind.Utc`</span></span>|<span data-ttu-id="765be-750">返します`false`(UTC は夏時間をサポートしていません)。</span><span class="sxs-lookup"><span data-stu-id="765be-750">Returns `false` (UTC does not support daylight saving time).</span></span>|  
|<span data-ttu-id="765be-751">その他の<xref:System.TimeZoneInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-751">Any other <xref:System.TimeZoneInfo> object.</span></span>|`DateTimeKind.Local`|<span data-ttu-id="765be-752">同等の時刻を現地時刻に変換します、<xref:System.TimeZoneInfo>オブジェクト、後者が夏時間かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-752">Converts the local time to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.</span></span>|  
|<span data-ttu-id="765be-753">その他の<xref:System.TimeZoneInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-753">Any other <xref:System.TimeZoneInfo> object.</span></span>|`DateTimeKind.Utc`|<span data-ttu-id="765be-754">同等の時刻を UTC に変換します、<xref:System.TimeZoneInfo>オブジェクト、後者が夏時間かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-754">Converts UTC to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.</span></span>|  
|<span data-ttu-id="765be-755">その他の<xref:System.TimeZoneInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-755">Any other <xref:System.TimeZoneInfo> object.</span></span>|`DateTimeKind.Unspecified`|<span data-ttu-id="765be-756">決定かどうか`dateTime`夏時間が。</span><span class="sxs-lookup"><span data-stu-id="765be-756">Determines whether `dateTime` is daylight saving time.</span></span>|  
  
 <span data-ttu-id="765be-757">によって表されるタイム ゾーンの場合、<xref:System.TimeZoneInfo>オブジェクトが夏時間をサポートしていないメソッドを常に返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="765be-757">If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`.</span></span> <span data-ttu-id="765be-758">さまざまなタイム ゾーンを含む<xref:System.TimeZoneInfo.Utc%2A>夏時間を確認しません。</span><span class="sxs-lookup"><span data-stu-id="765be-758">A number of time zones, including <xref:System.TimeZoneInfo.Utc%2A>, do not observe daylight saving time.</span></span>  <span data-ttu-id="765be-759">値を取得するタイム ゾーンが夏時間をサポートするかどうかを判断するには、その<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="765be-759">To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.</span></span>  
  
 <span data-ttu-id="765be-760">場合、`dateTime`パラメーターは、あいまいな時刻を現在のオブジェクトのタイム ゾーンを指定します、<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType>メソッドは解釈`dateTime`標準時として返す`false`場合その<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>または<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="765be-760">If the `dateTime` parameter specifies an ambiguous time in the current object's time zone, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method interprets `dateTime` as standard time and returns `false` if its <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="765be-761">場合、<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>、このメソッドは正しいのあいまいな時刻を選択し、夏時間があるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="765be-761">If the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, this method will select the correct ambiguous time and indicate whether it is a daylight saving time.</span></span>  
  
 <span data-ttu-id="765be-762"><xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29?displayProperty=nameWithType>メソッドが返すことができます`false`のあいまいな日時 (つまり、日付と時刻を標準時または特定のタイム ゾーンの夏時間のいずれかを表すことができます)、<xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29?displayProperty=nameWithType>メソッドと組み合わせることができますが、<xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29>時間が夏時間にあるかどうかを判断するメソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-762">Because the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29?displayProperty=nameWithType> method can return `false` for a date and time that is ambiguous (that is, a date and time that can represent either a standard time or a daylight saving time in a particular time zone), the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29?displayProperty=nameWithType> method can be paired with the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether a time may be a daylight saving time.</span></span> <span data-ttu-id="765be-763">あいまいな時刻は夏時間と標準時では、可能性のある 1 つあるため、<xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29>日付と時刻が夏時間をする可能性があるかどうかを判断するメソッドを最初に呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="765be-763">Because an ambiguous time is one that can be both a daylight saving time and a standard time, the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> method can be called first to determine whether a date and time may be a daylight saving time.</span></span> <span data-ttu-id="765be-764">メソッドを返す場合`false`、<xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29>判断するメソッドを呼び出すことができるかどうか、<xref:System.DateTime>値は、夏時間の期間。</span><span class="sxs-lookup"><span data-stu-id="765be-764">If the method returns `false`, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method can be called to determine whether the <xref:System.DateTime> value is a daylight saving time.</span></span> <span data-ttu-id="765be-765">次の例では、この方法を示します。</span><span class="sxs-lookup"><span data-stu-id="765be-765">The following example illustrates this technique.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#2)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#2)]  
  
 <span data-ttu-id="765be-766">場合、`dateTime`パラメーターが無効な時刻を指定します、メソッド呼び出しがスローされた、<xref:System.ArgumentException>場合の値、`dateTime`パラメーターの<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、それ以外のメソッドを返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="765be-766">If the `dateTime` parameter specifies an invalid time, the method call throws an <xref:System.ArgumentException> if the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>; otherwise, the method returns `false`.</span></span>  
  
 <span data-ttu-id="765be-767">呼び出す、<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType>タイム ゾーンを使用するかどうかを判断するメソッド<xref:System.TimeZoneInfo.StandardName%2A>値またはその<xref:System.TimeZoneInfo.DaylightName%2A>タイム ゾーンの名前を表示するときの値します。</span><span class="sxs-lookup"><span data-stu-id="765be-767">Call the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method to determine whether to use a time zone's <xref:System.TimeZoneInfo.StandardName%2A> value or its <xref:System.TimeZoneInfo.DaylightName%2A> value when displaying the time zone name.</span></span> <span data-ttu-id="765be-768">図の例のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="765be-768">See the Example section for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-769">次の例は、という名前のメソッドを定義します。`DisplayDateWithTimeZoneName`を使用して、<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType>タイム ゾーンの標準時名または夏時間名を表示するかどうかを判断するメソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-769">The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method to determine whether to display a time zone's standard time name or daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="765be-770"><paramref name="dateTime" /> 値の <see cref="P:System.DateTime.Kind" /> プロパティは <see cref="F:System.DateTimeKind.Local" /> で、<paramref name="dateTime" /> は無効な時刻です。</span><span class="sxs-lookup"><span data-stu-id="765be-770">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> value is <see cref="F:System.DateTimeKind.Local" /> and <paramref name="dateTime" /> is an invalid time.</span></span></exception>
        <altmember cref="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool IsDaylightSavingTime (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDaylightSavingTime(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDaylightSavingTime(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.IsDaylightSavingTime : DateTimeOffset -&gt; bool" Usage="timeZoneInfo.IsDaylightSavingTime dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="765be-771">日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="765be-771">A date and time value.</span></span></param>
        <summary><span data-ttu-id="765be-772">指定された日付と時刻が、現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトのタイム ゾーンの夏時間範囲内かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="765be-772">Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="765be-773"><paramref name="dateTimeOffset" /> パラメーターが夏時間の範囲内の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="765be-773"><see langword="true" /> if the <paramref name="dateTimeOffset" /> parameter is a daylight saving time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-774">戻り値<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType>によって表されるタイム ゾーン間のリレーションシップが影響を受ける、<xref:System.TimeZoneInfo>オブジェクトと<xref:System.DateTimeOffset.Offset%2A>のプロパティ、`dateTimeOffset`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="765be-774">The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter.</span></span> <span data-ttu-id="765be-775">場合`dateTimeOffset`に対応していない現在のタイム ゾーンのオフセット世界協定時刻 (UTC) から現在のタイム ゾーンの時刻にタイム メソッドに変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-775">If `dateTimeOffset` does not correspond to the current time zone's offset from Coordinated Universal Time (UTC), the method converts that time to the time in the current time zone.</span></span> <span data-ttu-id="765be-776">また、日付し、時刻をかどうかが夏時間を決定します。</span><span class="sxs-lookup"><span data-stu-id="765be-776">It then determines whether that date and time is a daylight saving time.</span></span>  
  
 <span data-ttu-id="765be-777">によって表されるタイム ゾーンの場合、<xref:System.TimeZoneInfo>オブジェクトが夏時間をサポートしていないメソッドを常に返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="765be-777">If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`.</span></span> <span data-ttu-id="765be-778">値を取得するタイム ゾーンが夏時間をサポートするかどうかを判断するには、その<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="765be-778">To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
      </Docs>
    </Member>
    <Member MemberName="IsInvalidTime">
      <MemberSignature Language="C#" Value="public bool IsInvalidTime (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInvalidTime(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInvalidTime(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.IsInvalidTime : DateTime -&gt; bool" Usage="timeZoneInfo.IsInvalidTime dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="765be-779">日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="765be-779">A date and time value.</span></span></param>
        <summary><span data-ttu-id="765be-780">指定された日付と時刻が無効かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="765be-780">Indicates whether a particular date and time is invalid.</span></span></summary>
        <returns><span data-ttu-id="765be-781"><paramref name="dateTime" /> が無効の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="765be-781"><see langword="true" /> if <paramref name="dateTime" /> is invalid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-782">無効な時刻は、現在のタイム ゾーン調整規則の適用により世界協定時刻 (UTC) をマップできない時間の範囲内にあります。</span><span class="sxs-lookup"><span data-stu-id="765be-782">An invalid time falls within a range of times for the current time zone that cannot be mapped to Coordinated Universal Time (UTC) due to the application of an adjustment rule.</span></span> <span data-ttu-id="765be-783">通常、無効な時刻は、時刻は夏時間の前方に移動したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="765be-783">Typically, invalid times occur when the time moves ahead for daylight saving time.</span></span> <span data-ttu-id="765be-784">図の例のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="765be-784">See the Example section for an illustration.</span></span>  
  
 <span data-ttu-id="765be-785">値、<xref:System.DateTime.Kind%2A>のプロパティ、`dateTime`パラメーターに影響するかどうか`dateTime`として次の表は、無効な時刻を表します。</span><span class="sxs-lookup"><span data-stu-id="765be-785">The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter affects whether `dateTime` represents an invalid time, as the following table shows.</span></span>  
  
|<span data-ttu-id="765be-786">DateTime.Kind プロパティ</span><span class="sxs-lookup"><span data-stu-id="765be-786">DateTime.Kind property</span></span>|<span data-ttu-id="765be-787">TimeZoneInfo オブジェクト (該当する場合)</span><span class="sxs-lookup"><span data-stu-id="765be-787">TimeZoneInfo object (if applicable)</span></span>|<span data-ttu-id="765be-788">動作</span><span class="sxs-lookup"><span data-stu-id="765be-788">Behavior</span></span>|  
|----------------------------|-------------------------------------------|--------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<span data-ttu-id="765be-789">時間が有効かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="765be-789">Determines whether the time is invalid.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="765be-790"><xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> または、ローカル以外のタイム ゾーンを選択します。</span><span class="sxs-lookup"><span data-stu-id="765be-790"><xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> or a non-local time zone.</span></span>|<span data-ttu-id="765be-791">変換`dateTime`の時刻に、<xref:System.TimeZoneInfo>オブジェクトを返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="765be-791">Converts `dateTime` to the time of the <xref:System.TimeZoneInfo> object and returns `false`.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="765be-792">該当なし。</span><span class="sxs-lookup"><span data-stu-id="765be-792">Not applicable.</span></span>|<span data-ttu-id="765be-793">前提としています`dateTime`の時間、<xref:System.TimeZoneInfo>オブジェクトし、が正しくないかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="765be-793">Assumes `dateTime` is the time of the <xref:System.TimeZoneInfo> object and determines whether it is invalid.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="765be-794">該当なし。</span><span class="sxs-lookup"><span data-stu-id="765be-794">Not applicable.</span></span>|<span data-ttu-id="765be-795">`false` を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-795">Returns `false`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="765be-796">太平洋標準時ゾーンで夏時間が午前 2 時に開始します。</span><span class="sxs-lookup"><span data-stu-id="765be-796">In the Pacific Time zone, daylight saving time begins at 2:00 A.M.</span></span> <span data-ttu-id="765be-797">2006 年年 4 月 2 日。</span><span class="sxs-lookup"><span data-stu-id="765be-797">on April 2, 2006.</span></span> <span data-ttu-id="765be-798">次のコードは、午前 1 時 59 分: から 1 分間隔で、時間を渡します</span><span class="sxs-lookup"><span data-stu-id="765be-798">The following code passes the time at one-minute intervals from 1:59 A.M.</span></span> <span data-ttu-id="765be-799">で、2006 年 4 月 2日 3時 01分 am</span><span class="sxs-lookup"><span data-stu-id="765be-799">on April 2, 2006, to 3:01 A.M.</span></span> <span data-ttu-id="765be-800">2006 年 4 月 2 日に、<xref:System.TimeZoneInfo.IsInvalidTime%2A>のメソッド、<xref:System.TimeZoneInfo>太平洋標準時タイム ゾーンを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-800">on April 2, 2006, to the <xref:System.TimeZoneInfo.IsInvalidTime%2A> method of a <xref:System.TimeZoneInfo> object that represents the Pacific Time zone.</span></span> <span data-ttu-id="765be-801">コンソール出力が午前 2 時からそのすべての回数を示します</span><span class="sxs-lookup"><span data-stu-id="765be-801">The console output indicates that all times from 2:00 A.M.</span></span> <span data-ttu-id="765be-802">2006 年 4 月 2日午前 2時 59分までの</span><span class="sxs-lookup"><span data-stu-id="765be-802">on April 2, 2006, to 2:59 A.M.</span></span> <span data-ttu-id="765be-803">2006 年 4 月 2 日は無効です。</span><span class="sxs-lookup"><span data-stu-id="765be-803">on April 2, 2006, are invalid.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#9)]
 [!code-vb[System.TimeZone2.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.TimeZoneInfo.IsAmbiguousTime" />
      </Docs>
    </Member>
    <Member MemberName="Local">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo Local { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZoneInfo Local" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.Local" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Local As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZoneInfo ^ Local { TimeZoneInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Local : TimeZoneInfo" Usage="System.TimeZoneInfo.Local" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="765be-804">ローカル タイム ゾーンを表す <see cref="T:System.TimeZoneInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="765be-804">Gets a <see cref="T:System.TimeZoneInfo" /> object that represents the local time zone.</span></span></summary>
        <value><span data-ttu-id="765be-805">ローカル タイム ゾーンを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-805">An object that represents the local time zone.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-806">ローカル タイム ゾーンは、コードを実行しているコンピューターのタイム ゾーンです。</span><span class="sxs-lookup"><span data-stu-id="765be-806">The local time zone is the time zone on the computer where the code is executing.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="765be-807">使用してローカル タイム ゾーンを常にアクセスする必要があります、<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>にゾーンのローカル時刻を割り当てるのではなく、プロパティ、<xref:System.TimeZoneInfo>オブジェクト変数です。</span><span class="sxs-lookup"><span data-stu-id="765be-807">You should always access the local time zone through the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property rather than assigning the local time zone to a <xref:System.TimeZoneInfo> object variable.</span></span> <span data-ttu-id="765be-808">これにより、<xref:System.TimeZoneInfo>オブジェクト変数への呼び出しによって無効になることから、<xref:System.TimeZoneInfo.ClearCachedData%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-808">This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.</span></span>  
  
 <span data-ttu-id="765be-809">Windows システムでは、<xref:System.TimeZoneInfo>によって返されるオブジェクト、<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>プロパティの設定の反映、**夏時間の時計を自動的に調整**コントロール パネルの チェック ボックスをオン**日付と時刻**アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="765be-809">On Windows systems, the <xref:System.TimeZoneInfo> object returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property reflects the setting of the **Automatically adjust clock for Daylight Saving Time** checkbox in the Control Panel **Date and Time** application.</span></span> <span data-ttu-id="765be-810">チェック ボックスがオフの場合は、ローカル タイム ゾーンのキャッシュされたコピーは夏時間の情報を含まない。</span><span class="sxs-lookup"><span data-stu-id="765be-810">If the checkbox is unchecked, the cached copy of the local time zone contains no daylight saving time information.</span></span> <span data-ttu-id="765be-811">これによって、次のことが起こります。</span><span class="sxs-lookup"><span data-stu-id="765be-811">This means that:</span></span>  
  
-   <span data-ttu-id="765be-812">ローカル タイム ゾーンの<xref:System.TimeZoneInfo.GetAdjustmentRules%2A>メソッドは長さが 0 の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-812">The local time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an array whose length is zero.</span></span>  
  
-   <span data-ttu-id="765be-813">ローカル タイム ゾーンの<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>プロパティが返す`false`します。</span><span class="sxs-lookup"><span data-stu-id="765be-813">The local time zone's <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property returns `false`.</span></span>  
  
-   <span data-ttu-id="765be-814">ローカル タイム ゾーンにあいまいであるか、無効な時間がありません (すべての呼び出しを<xref:System.TimeZoneInfo.IsAmbiguousTime%2A>または<xref:System.TimeZoneInfo.IsInvalidTime%2A>返す`false`)。</span><span class="sxs-lookup"><span data-stu-id="765be-814">The local time zone has no ambiguous or invalid times (all calls to <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> or <xref:System.TimeZoneInfo.IsInvalidTime%2A> return `false`).</span></span>  
  
-   <span data-ttu-id="765be-815">すべての呼び出しを<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A>個々 のローカル時間で false を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-815">All calls to <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A> with individual local times return false.</span></span>  
  
 <span data-ttu-id="765be-816">これが true でないただしを使用して、ローカル タイム ゾーンへの参照を取得する場合、<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-816">This is not true, however, if a reference to the local time zone is retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method.</span></span>  
  
 <span data-ttu-id="765be-817"><xref:System.TimeZoneInfo.Local%2A>プロパティに対応して、<xref:System.TimeZone.CurrentTimeZone%2A>のプロパティ、<xref:System.TimeZone>クラス。</span><span class="sxs-lookup"><span data-stu-id="765be-817">The <xref:System.TimeZoneInfo.Local%2A> property corresponds to the <xref:System.TimeZone.CurrentTimeZone%2A> property of the <xref:System.TimeZone> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-818">次の例では、取得、<xref:System.TimeZoneInfo>ローカル タイム ゾーンを表し、その表示名、標準時名、および夏時間名を出力するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-818">The following example retrieves a <xref:System.TimeZoneInfo> object that represents the local time zone and outputs its display name, standard time name, and daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/ShowTimeZoneNames1.cs#2)]
 [!code-vb[System.TimeZone2.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/ShowTimeZoneNames1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/961fb70b-83f0-4dab-a042-cb5fcd817cf5"><span data-ttu-id="765be-819">方法: 定義済みの UTC とローカル タイム ゾーン オブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="765be-819">How to: Access the Predefined UTC and Local Time Zone Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StandardName">
      <MemberSignature Language="C#" Value="public string StandardName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.StandardName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardName : string" Usage="System.TimeZoneInfo.StandardName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="765be-820">タイム ゾーンの標準時の表示名を取得します。</span><span class="sxs-lookup"><span data-stu-id="765be-820">Gets the display name for the time zone's standard time.</span></span></summary>
        <value><span data-ttu-id="765be-821">タイム ゾーンの標準時間の表示名。</span><span class="sxs-lookup"><span data-stu-id="765be-821">The display name of the time zone's standard time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-822">表示名は、Windows オペレーティング システムと共にインストールされたカルチャに基づいてローカライズされます。</span><span class="sxs-lookup"><span data-stu-id="765be-822">The display name is localized based on the culture installed with the Windows operating system.</span></span>  
  
 <span data-ttu-id="765be-823"><xref:System.TimeZoneInfo.StandardName%2A>プロパティのと同じですが、<xref:System.TimeZone.StandardName%2A>のプロパティ、<xref:System.TimeZone>クラス。</span><span class="sxs-lookup"><span data-stu-id="765be-823">The <xref:System.TimeZoneInfo.StandardName%2A> property is identical to the <xref:System.TimeZone.StandardName%2A> property of the <xref:System.TimeZone> class.</span></span>  
  
 <span data-ttu-id="765be-824">かどうか、オペレーティング システムの言語は英語の値、<xref:System.TimeZoneInfo.StandardName%2A>プロパティは、通常は、常にではありませんと同一の<xref:System.TimeZoneInfo.Id%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="765be-824">If the operating system language is English, the value of the <xref:System.TimeZoneInfo.StandardName%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.Id%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-825">次の例は、という名前のメソッドを定義します。`DisplayDateWithTimeZoneName`を使用して、<xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29>タイム ゾーンの標準時名または夏時間名を表示するかどうかを判断するメソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-825">The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether to display a time zone's standard time name or daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool SupportsDaylightSavingTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDaylightSavingTime" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsDaylightSavingTime As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsDaylightSavingTime { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDaylightSavingTime : bool" Usage="System.TimeZoneInfo.SupportsDaylightSavingTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="765be-826">タイム ゾーンに夏時間規則があるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="765be-826">Gets a value indicating whether the time zone has any daylight saving time rules.</span></span></summary>
        <value><span data-ttu-id="765be-827">タイム ゾーンが夏時間をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="765be-827"><see langword="true" /> if the time zone supports daylight saving time; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-828">値、<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>プロパティによって返される、ローカル タイム ゾーン、<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>プロパティには、コントロール パネルの設定が反映されます**日付と時刻**アプリケーションのチェック ボックスを定義するかどうか、システムに自動的に。夏時間の調整します。</span><span class="sxs-lookup"><span data-stu-id="765be-828">The value of the <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property for the local time zone returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property reflects the setting of the Control Panel **Date and Time** application's checkbox that defines whether the system automatically adjusts for daylight saving time.</span></span> <span data-ttu-id="765be-829">選択されていないかどうか、またはこのプロパティの値は、タイム ゾーンのチェック ボックスが表示されない場合`false`します。</span><span class="sxs-lookup"><span data-stu-id="765be-829">If it is unchecked, or if no checkbox is displayed for a time zone, the value of this property is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-830">次の例では、ローカル システムで利用できるすべてのタイム ゾーンのコレクションを取得し、夏時間をサポートしないものの名前を表示します。</span><span class="sxs-lookup"><span data-stu-id="765be-830">The following example retrieves a collection of all time zones that are available on a local system and displays the names of those that do not support daylight saving time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#4)]
 [!code-vb[System.TimeZone2.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#4)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="765be-831">コールバックを開始したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-831">The object that initiated the callback.</span></span> <span data-ttu-id="765be-832">このパラメーターの機能は、現在実装されていません。</span><span class="sxs-lookup"><span data-stu-id="765be-832">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="765be-833">オブジェクトの逆シリアル化の完了後に実行します。</span><span class="sxs-lookup"><span data-stu-id="765be-833">Runs when the deserialization of an object has been completed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="765be-834"><see cref="T:System.TimeZoneInfo" /> オブジェクトには、無効なデータまたは破損したデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="765be-834">The <see cref="T:System.TimeZoneInfo" /> object contains invalid or corrupted data.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="765be-835">データを読み込む先の <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-835">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="765be-836">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</span><span class="sxs-lookup"><span data-stu-id="765be-836">The destination for this serialization (see <see cref="T:System.Runtime.Serialization.StreamingContext" />).</span></span></param>
        <summary><span data-ttu-id="765be-837"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトをシリアル化するために必要なすべてのデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="765be-837">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="765be-838"><paramref name="info" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="765be-838">The <paramref name="info" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="765be-839">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="765be-839">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="765be-840">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="765be-840">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToSerializedString">
      <MemberSignature Language="C#" Value="public string ToSerializedString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToSerializedString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ToSerializedString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToSerializedString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToSerializedString();" />
      <MemberSignature Language="F#" Value="member this.ToSerializedString : unit -&gt; string" Usage="timeZoneInfo.ToSerializedString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="765be-841">現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトをシリアル化された文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="765be-841">Converts the current <see cref="T:System.TimeZoneInfo" /> object to a serialized string.</span></span></summary>
        <returns><span data-ttu-id="765be-842">現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="765be-842">A string that represents the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-843">通常、Windows システムのレジストリで定義されていないタイム ゾーンに依存するアプリケーションまたは[ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)Linux および macOScan で使用できます、 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> として必要なタイムゾーンをインスタンス化するメソッド<xref:System.TimeZoneInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-843">Applications that rely on time zones that are not typically defined in the registry of Windows systems or the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOScan can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to instantiate the necessary time zones as <xref:System.TimeZoneInfo> objects.</span></span> <span data-ttu-id="765be-844">アプリケーションを呼び出すことができますし、<xref:System.TimeZoneInfo.ToSerializedString%2A>タイム ゾーン オブジェクトを文字列に変換するメソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-844">The application can then call the <xref:System.TimeZoneInfo.ToSerializedString%2A> method to convert the time zone object to a string.</span></span>  
  
 <span data-ttu-id="765be-845"><xref:System.TimeZoneInfo>オブジェクトは、アプリケーションが必要なときにどのように取得場所、場所にも格納する必要があります。</span><span class="sxs-lookup"><span data-stu-id="765be-845">The <xref:System.TimeZoneInfo> object should also be stored in a location where the application can retrieve it when needed.</span></span> <span data-ttu-id="765be-846">使用可能な場所は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="765be-846">Possible locations include:</span></span>  
  
-   <span data-ttu-id="765be-847">Windows システム上のレジストリ。</span><span class="sxs-lookup"><span data-stu-id="765be-847">The registry on Windows systems.</span></span>  
  
-   <span data-ttu-id="765be-848">アプリケーション リソース ファイル。</span><span class="sxs-lookup"><span data-stu-id="765be-848">An application resource file.</span></span>  
  
-   <span data-ttu-id="765be-849">外部ファイル、テキスト ファイルなどです。</span><span class="sxs-lookup"><span data-stu-id="765be-849">An external file, such as a text file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-850">次の例では、/南極を取得しようとしました。 ローカル システムからのタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="765be-850">The following example tries to retrieve the Antarctica/South Pole time zone from the local system.</span></span> <span data-ttu-id="765be-851">失敗した場合、コードは、アプリケーション ディレクトリ内のテキスト ファイルからタイム ゾーンに関する情報を取得しようとします。</span><span class="sxs-lookup"><span data-stu-id="765be-851">If it fails, the code tries to retrieve information about the time zone from a text file in the application directory.</span></span> <span data-ttu-id="765be-852">この試行が失敗した場合、コードは、タイム ゾーンを作成し、それに関する情報をテキスト ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="765be-852">If this attempt fails, the code creates the time zone and writes information about it to the text file.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#4)]
 [!code-vb[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.FromSerializedString(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/3c96d83a-a057-4496-abb0-8f4b12712558"><span data-ttu-id="765be-853">方法: 埋め込みリソースにタイム ゾーンを保存します。</span><span class="sxs-lookup"><span data-stu-id="765be-853">How to: Save Time Zones to an Embedded Resource</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="timeZoneInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="765be-854">現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトの表示名を返します。</span><span class="sxs-lookup"><span data-stu-id="765be-854">Returns the current <see cref="T:System.TimeZoneInfo" /> object's display name.</span></span></summary>
        <returns><span data-ttu-id="765be-855">現在の <see cref="P:System.TimeZoneInfo.DisplayName" /> オブジェクトの <see cref="T:System.TimeZoneInfo" /> プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="765be-855">The value of the <see cref="P:System.TimeZoneInfo.DisplayName" /> property of the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-856">コレクションを割り当てることが含まれる場合<xref:System.TimeZoneInfo>などのオブジェクト リスト コントロールに、<xref:System.Windows.Forms.ListBox>コントロール、コントロールを自動的に呼び出す、<xref:System.TimeZoneInfo.ToString%2A>メソッドの一覧で表される各オブジェクトを表す文字列を抽出します。</span><span class="sxs-lookup"><span data-stu-id="765be-856">When assigning a collection that contains <xref:System.TimeZoneInfo> objects to a list control such as the <xref:System.Windows.Forms.ListBox> control, the control automatically calls the <xref:System.TimeZoneInfo.ToString%2A> method to extract a string that describes each object to be represented in the list.</span></span> <span data-ttu-id="765be-857">結果として、文字列としてオブジェクトのわかりやすい説明を格納する必要はありませんし、ユーザーはその文字列を使用してコレクションからオブジェクトを抽出する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="765be-857">As a result, you do not need to store a meaningful description of the object as a string, and the user does not need to use that string to extract the object from the collection.</span></span> <span data-ttu-id="765be-858">「[方法:コンピューターに存在するタイム ゾーンを列挙](~/docs/standard/datetime/enumerate-time-zones.md)の詳細。</span><span class="sxs-lookup"><span data-stu-id="765be-858">See [How to: Enumerate Time Zones Present on a Computer](~/docs/standard/datetime/enumerate-time-zones.md) for more detail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Utc">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo Utc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZoneInfo Utc" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.Utc" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Utc As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZoneInfo ^ Utc { TimeZoneInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Utc : TimeZoneInfo" Usage="System.TimeZoneInfo.Utc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="765be-859">世界協定時刻 (UTC) ゾーンを表す <see cref="T:System.TimeZoneInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="765be-859">Gets a <see cref="T:System.TimeZoneInfo" /> object that represents the Coordinated Universal Time (UTC) zone.</span></span></summary>
        <value><span data-ttu-id="765be-860">世界協定時刻 (UTC) ゾーンを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-860">An object that represents the Coordinated Universal Time (UTC) zone.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="765be-861">これは、組み込みオブジェクトです。これについては<xref:System.TimeZoneInfo>オブジェクトは、Windows システムとの間に、レジストリからは取得されません、 [ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)Linux と macOS でします。</span><span class="sxs-lookup"><span data-stu-id="765be-861">This is a built-in object; information about this <xref:System.TimeZoneInfo> object is not retrieved from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="765be-862">使用して、世界協定時刻 (UTC) ゾーンを常にアクセスする必要があります、<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>に UTC タイム ゾーンを割り当てるのではなく、プロパティ、<xref:System.TimeZoneInfo>オブジェクト変数です。</span><span class="sxs-lookup"><span data-stu-id="765be-862">You should always access the Coordinated Universal Time (UTC) zone through the <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> property rather than assigning the UTC time zone to a <xref:System.TimeZoneInfo> object variable.</span></span> <span data-ttu-id="765be-863">これにより、<xref:System.TimeZoneInfo>オブジェクト変数への呼び出しによって無効になることから、<xref:System.TimeZoneInfo.ClearCachedData%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="765be-863">This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.</span></span>  
  
 <span data-ttu-id="765be-864">世界協定時刻については、以前のグリニッジ標準時 (GMT) と呼ばれていました。</span><span class="sxs-lookup"><span data-stu-id="765be-864">Coordinated Universal Time was previously known as Greenwich Mean Time (GMT).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="765be-865">次の例では、取得、<xref:System.TimeZoneInfo>世界協定時刻 (UTC) を表し、その表示名、標準時名、および夏時間名を出力するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="765be-865">The following example retrieves a <xref:System.TimeZoneInfo> object that represents Coordinated Universal Time (UTC) and outputs its display name, standard time name, and daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#3)]
 [!code-vb[System.TimeZone2.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/961fb70b-83f0-4dab-a042-cb5fcd817cf5"><span data-ttu-id="765be-866">方法: 定義済みの UTC とローカル タイム ゾーン オブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="765be-866">How to: Access the Predefined UTC and Local Time Zone Objects</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>