<Type Name="TimeSpan" FullName="System.TimeSpan">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe7f0ad78c092d4e6c7d151224ff0983a27ad2a3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39944230" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct TimeSpan : IComparable, IComparable&lt;TimeSpan&gt;, IEquatable&lt;TimeSpan&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit TimeSpan extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.TimeSpan&gt;, class System.IEquatable`1&lt;valuetype System.TimeSpan&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.TimeSpan" />
  <TypeSignature Language="VB.NET" Value="Public Structure TimeSpan&#xA;Implements IComparable, IComparable(Of TimeSpan), IEquatable(Of TimeSpan), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class TimeSpan : IComparable, IComparable&lt;TimeSpan&gt;, IEquatable&lt;TimeSpan&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type TimeSpan = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.TimeSpan&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeSpan&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="61768-101">時間間隔を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="61768-101">Represents a time interval.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-102">A<xref:System.TimeSpan>オブジェクトは、日、時、分、秒、および秒の端数の正または負の数として測定される時間間隔 (時間の経過時間の期間) を表します。</span><span class="sxs-lookup"><span data-stu-id="61768-102">A <xref:System.TimeSpan> object represents a time interval (duration of time or elapsed time) that is measured as a positive or negative number of days, hours, minutes, seconds, and fractions of a second.</span></span> <span data-ttu-id="61768-103"><xref:System.TimeSpan>構造体が、時間は、特定の日付に関連する場合にのみ、1 日の時刻を表したりすることもできます。</span><span class="sxs-lookup"><span data-stu-id="61768-103">The <xref:System.TimeSpan> structure can also be used to represent the time of day, but only if the time is unrelated to a particular date.</span></span> <span data-ttu-id="61768-104">それ以外の場合、<xref:System.DateTime>または<xref:System.DateTimeOffset>構造体を代わりに使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-104">Otherwise, the <xref:System.DateTime> or <xref:System.DateTimeOffset> structure should be used instead.</span></span> <span data-ttu-id="61768-105">(使用の詳細については、<xref:System.TimeSpan>構造体を 1 日の時間を反映しを参照してください[選択の間で DateTime、DateTimeOffset、TimeSpan、および TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md))。</span><span class="sxs-lookup"><span data-stu-id="61768-105">(For more information about using the <xref:System.TimeSpan> structure to reflect the time of day, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61768-106">A<xref:System.TimeSpan>値は、時間間隔を表すし、日、時間、分、秒、ミリ秒などの特定の数として表現できます。</span><span class="sxs-lookup"><span data-stu-id="61768-106">A <xref:System.TimeSpan> value represents a time interval and can be expressed as a particular number of days, hours, minutes, seconds, and milliseconds.</span></span> <span data-ttu-id="61768-107">特定の始点または終点を指定せずに一般的な間隔を表しているので、年と月の日数を変数があるいずれの観点から表されることはできません。</span><span class="sxs-lookup"><span data-stu-id="61768-107">Because it represents a general interval without reference to a particular start or end point, it cannot be expressed in terms of years and months, both of which have a variable number of days.</span></span> <span data-ttu-id="61768-108">異なり、 <xref:System.DateTime> 、特定のタイム ゾーンへの参照なしの日時を表す値または<xref:System.DateTimeOffset>の特定の時点を表す値。</span><span class="sxs-lookup"><span data-stu-id="61768-108">It differs from a <xref:System.DateTime> value, which represents a date and time without reference to a particular time zone, or a <xref:System.DateTimeOffset> value, which represents a specific moment of time.</span></span>  
  
 <span data-ttu-id="61768-109">最大単位の時間を<xref:System.TimeSpan>期間の測定に使用する構造体は、1 日です。</span><span class="sxs-lookup"><span data-stu-id="61768-109">The largest unit of time that the <xref:System.TimeSpan> structure uses to measure duration is a day.</span></span> <span data-ttu-id="61768-110">時間間隔より大きな数か月、年などの時間単位の日数が異なるために、一貫性を保つのための日で測定されます。</span><span class="sxs-lookup"><span data-stu-id="61768-110">Time intervals are measured in days for consistency, because the number of days in larger units of time, such as months and years, varies.</span></span>  
  
 <span data-ttu-id="61768-111">値を<xref:System.TimeSpan>オブジェクトが表される時間間隔に等しいティック数。</span><span class="sxs-lookup"><span data-stu-id="61768-111">The value of a <xref:System.TimeSpan> object is the number of ticks that equal the represented time interval.</span></span> <span data-ttu-id="61768-112">1 ティックは 100 ナノ秒単位または 1 つ 10 分の 1 秒に等しいです。</span><span class="sxs-lookup"><span data-stu-id="61768-112">A tick is equal to 100 nanoseconds, or one ten-millionth of a second.</span></span> <span data-ttu-id="61768-113">値を<xref:System.TimeSpan>オブジェクトの範囲は<xref:System.TimeSpan.MinValue?displayProperty=nameWithType>に<xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="61768-113">The value of a <xref:System.TimeSpan> object can range from <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> to <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="instantiating-a-timespan-value"></a><span data-ttu-id="61768-114">TimeSpan 値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="61768-114">Instantiating a TimeSpan Value</span></span>  
 <span data-ttu-id="61768-115">インスタンス化することができます、<xref:System.TimeSpan>さまざまな方法で値。</span><span class="sxs-lookup"><span data-stu-id="61768-115">You can instantiate a <xref:System.TimeSpan> value in a number of ways:</span></span>  
  
-   <span data-ttu-id="61768-116">暗黙的な既定のコンス トラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="61768-116">By calling its implicit default constructor.</span></span> <span data-ttu-id="61768-117">これは、値がオブジェクトを作成します。 <xref:System.TimeSpan.Zero?displayProperty=nameWithType>、次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="61768-117">This creates an object whose value is <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, as the following example shows.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#2)]
     [!code-vb[System.TimeSpan.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#2)]  
  
-   <span data-ttu-id="61768-118">その明示的なコンス トラクターのいずれかを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="61768-118">By calling one of its explicit constructors.</span></span> <span data-ttu-id="61768-119">次の例では、初期化、<xref:System.TimeSpan>を指定した時間、分、および秒の値。</span><span class="sxs-lookup"><span data-stu-id="61768-119">The following example initializes a <xref:System.TimeSpan> value to a specified number of hours, minutes, and seconds.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#3)]
     [!code-vb[System.TimeSpan.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#3)]  
  
-   <span data-ttu-id="61768-120">メソッドの呼び出しやを返す操作を実行して、<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-120">By calling a method or performing an operation that returns a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="61768-121">たとえば、インスタンス化できる、<xref:System.TimeSpan>として次の例は、2 つの日付と時刻値の間の間隔を表す値です。</span><span class="sxs-lookup"><span data-stu-id="61768-121">For example, you can instantiate a <xref:System.TimeSpan> value that represents the interval between two date and time values, as the following example shows.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#4)]
     [!code-vb[System.TimeSpan.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#4)]  
  
     <span data-ttu-id="61768-122">初期化することも、<xref:System.TimeSpan>オブジェクトとして次の例は、この方法で時間値がゼロにします。</span><span class="sxs-lookup"><span data-stu-id="61768-122">You can also initialize a <xref:System.TimeSpan> object to a zero time value in this way, as the following example shows.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/zero1.cs#6)]
     [!code-vb[System.TimeSpan.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/zero1.vb#6)]  
  
     <span data-ttu-id="61768-123"><xref:System.TimeSpan> 値は、算術演算子とのメソッドによって返される、 <xref:System.DateTime>、 <xref:System.DateTimeOffset>、および<xref:System.TimeSpan>構造体。</span><span class="sxs-lookup"><span data-stu-id="61768-123"><xref:System.TimeSpan> values are returned by arithmetic operators and methods of the <xref:System.DateTime>, <xref:System.DateTimeOffset>, and <xref:System.TimeSpan> structures.</span></span>  
  
-   <span data-ttu-id="61768-124">文字列表現を解析することによって、<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-124">By parsing the string representation of a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="61768-125">使用することができます、<xref:System.TimeSpan.Parse%2A>と<xref:System.TimeSpan.TryParse%2A>する時間間隔を含む文字列を変換するメソッドを<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-125">You can use the <xref:System.TimeSpan.Parse%2A> and <xref:System.TimeSpan.TryParse%2A> methods to convert strings that contain time intervals to <xref:System.TimeSpan> values.</span></span> <span data-ttu-id="61768-126">次の例では、<xref:System.TimeSpan.Parse%2A>メソッドに文字列の配列に変換する<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-126">The following example uses the <xref:System.TimeSpan.Parse%2A> method to convert an array of strings to <xref:System.TimeSpan> values.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#5)]
     [!code-vb[System.TimeSpan.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#5)]  
  
     <span data-ttu-id="61768-127">さらに、解析およびに変換する入力文字列の正確な形式を定義することができます、<xref:System.TimeSpan>値を呼び出すことによって、<xref:System.TimeSpan.ParseExact%2A>または<xref:System.TimeSpan.TryParseExact%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-127">In addition, you can define the precise format of the input string to be parsed and converted to a <xref:System.TimeSpan> value by calling the <xref:System.TimeSpan.ParseExact%2A> or <xref:System.TimeSpan.TryParseExact%2A> method.</span></span>  
  
## <a name="performing-operations-on-timespan-values"></a><span data-ttu-id="61768-128">TimeSpan 値に対して操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="61768-128">Performing Operations on TimeSpan Values</span></span>  
 <span data-ttu-id="61768-129">追加しを使用するか期間を減算することができます、<xref:System.TimeSpan.op_Addition%2A>と<xref:System.TimeSpan.op_Subtraction%2A>演算子、または呼び出すことによって、<xref:System.TimeSpan.Add%2A>と<xref:System.TimeSpan.Subtract%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-129">You can add and subtract time durations either by using the <xref:System.TimeSpan.op_Addition%2A> and <xref:System.TimeSpan.op_Subtraction%2A> operators, or by calling the <xref:System.TimeSpan.Add%2A> and <xref:System.TimeSpan.Subtract%2A> methods.</span></span> <span data-ttu-id="61768-130">呼び出すことによって、2 つの期間を比較することも、 <xref:System.TimeSpan.Compare%2A>、 <xref:System.TimeSpan.CompareTo%2A>、および<xref:System.TimeSpan.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-130">You can also compare two time durations by calling the <xref:System.TimeSpan.Compare%2A>, <xref:System.TimeSpan.CompareTo%2A>, and <xref:System.TimeSpan.Equals%2A> methods.</span></span> <span data-ttu-id="61768-131"><xref:System.TimeSpan>構造も含まれます、<xref:System.TimeSpan.Duration%2A>と<xref:System.TimeSpan.Negate%2A>メソッドで、時間間隔を正と負の値に変換</span><span class="sxs-lookup"><span data-stu-id="61768-131">The <xref:System.TimeSpan> structure also includes the <xref:System.TimeSpan.Duration%2A> and <xref:System.TimeSpan.Negate%2A> methods, which convert time intervals to positive and negative values,</span></span>  
  
 <span data-ttu-id="61768-132">範囲<xref:System.TimeSpan>値は<xref:System.TimeSpan.MinValue>に<xref:System.TimeSpan.MaxValue>します。</span><span class="sxs-lookup"><span data-stu-id="61768-132">The range of <xref:System.TimeSpan> values is <xref:System.TimeSpan.MinValue> to <xref:System.TimeSpan.MaxValue>.</span></span>  
  
## <a name="formatting-a-timespan-value"></a><span data-ttu-id="61768-133">TimeSpan 値を書式設定</span><span class="sxs-lookup"><span data-stu-id="61768-133">Formatting a TimeSpan Value</span></span>  
 <span data-ttu-id="61768-134">A<xref:System.TimeSpan>として値を表すことが [*-*]*d*.*hh*:*mm*:*ss*.*ff*、省略可能なマイナス記号を負の時間間隔を示しますが、 *d*コンポーネントは、日、 *hh*を 24 時間制で測定される時間は*mm*は分、 *ss* (秒単位) と*ff*秒の端数が。</span><span class="sxs-lookup"><span data-stu-id="61768-134">A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second.</span></span> <span data-ttu-id="61768-135">つまり、時間間隔は、1 日の時刻のない日間の正または負の数や時間帯、または 1 日の時間だけの日数で構成されます。</span><span class="sxs-lookup"><span data-stu-id="61768-135">That is, a time interval consists of a positive or negative number of days without a time of day, or a number of days with a time of day, or only a time of day.</span></span>  
  
 <span data-ttu-id="61768-136">以降で、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.TimeSpan>構造体のオーバー ロードを通じてカルチャの書式設定をサポートしています、<xref:System.TimeSpan.ToString%2A>メソッドで、変換、<xref:System.TimeSpan>値をその文字列形式にします。</span><span class="sxs-lookup"><span data-stu-id="61768-136">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.TimeSpan> structure supports culture-sensitive formatting through the overloads of its <xref:System.TimeSpan.ToString%2A> method, which converts a <xref:System.TimeSpan> value to its string representation.</span></span> <span data-ttu-id="61768-137">既定の<xref:System.TimeSpan.ToString?displayProperty=nameWithType>メソッドは、.NET Framework の以前のバージョンでその戻り値と同じであるインバリアントの形式を使用して時間間隔を返します。</span><span class="sxs-lookup"><span data-stu-id="61768-137">The default <xref:System.TimeSpan.ToString?displayProperty=nameWithType> method returns a time interval by using an invariant format that is identical to its return value in previous versions of the .NET Framework.</span></span> <span data-ttu-id="61768-138"><xref:System.TimeSpan.ToString%28System.String%29?displayProperty=nameWithType>オーバー ロードを使用して、時間間隔の文字列表現を定義する書式指定文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-138">The <xref:System.TimeSpan.ToString%28System.String%29?displayProperty=nameWithType> overload lets you specify a format string that defines the string representation of the time interval.</span></span> <span data-ttu-id="61768-139"><xref:System.TimeSpan.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>オーバー ロードを使用して、書式指定文字列と書式指定規則が時間間隔の文字列表現の作成に使用されるカルチャを指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-139">The <xref:System.TimeSpan.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload lets you specify a format string and the culture whose formatting conventions are used to create the string representation of the time interval.</span></span> <span data-ttu-id="61768-140"><xref:System.TimeSpan> 両方の標準およびカスタムの書式指定文字列をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="61768-140"><xref:System.TimeSpan> supports both standard and custom format strings.</span></span> <span data-ttu-id="61768-141">(詳細については、次を参照してください[標準 TimeSpan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)と[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)。)。ただし、のみ標準書式指定文字列は、カルチャ依存です。</span><span class="sxs-lookup"><span data-stu-id="61768-141">(For more information, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).) However, only standard format strings are culture-sensitive.</span></span>  
  
## <a name="restoring-legacy-timespan-formatting"></a><span data-ttu-id="61768-142">従来の TimeSpan 書式設定を復元します。</span><span class="sxs-lookup"><span data-stu-id="61768-142">Restoring Legacy TimeSpan Formatting</span></span>  
 <span data-ttu-id="61768-143">コードでは、場合によっては、その正常形式<xref:System.TimeSpan>値[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]で失敗した以前のバージョンと[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="61768-143">In some cases, code that successfully formats <xref:System.TimeSpan> values in [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions fails in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="61768-144">これを呼び出すコードで最も一般的な[< TimeSpan_LegacyFormatMode > 要素](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md)書式指定するメソッド、<xref:System.TimeSpan>値を書式文字列。</span><span class="sxs-lookup"><span data-stu-id="61768-144">This is most common in code that calls a [<TimeSpan_LegacyFormatMode> element](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md) method to format a <xref:System.TimeSpan> value with a format string.</span></span> <span data-ttu-id="61768-145">次の例が正常に書式設定、<xref:System.TimeSpan>値[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]以前のバージョン例外をスローしますが、[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]以降のバージョン。</span><span class="sxs-lookup"><span data-stu-id="61768-145">The following example successfully formats a <xref:System.TimeSpan> value in [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, but throws an exception in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and later versions.</span></span> <span data-ttu-id="61768-146">書式を設定しようとするメモを<xref:System.TimeSpan>、サポートされていない書式指定子では無視されるを使用して値[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]以前のバージョン。</span><span class="sxs-lookup"><span data-stu-id="61768-146">Note that it attempts to format a <xref:System.TimeSpan> value by using an unsupported format specifier, which is ignored in [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions.</span></span>  
  
 [!code-csharp[System.TimeSpan.Class.Legacy#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class.legacy/cs/legacycode1.cs#1)]
 [!code-vb[System.TimeSpan.Class.Legacy#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class.legacy/vb/legacycode1.vb#1)]  
  
 <span data-ttu-id="61768-147">従来の書式設定を復元するには、コードを変更することはできない場合、<xref:System.TimeSpan>次の方法のいずれかの値。</span><span class="sxs-lookup"><span data-stu-id="61768-147">If you cannot modify the code, you can restore the legacy formatting of <xref:System.TimeSpan> values in one of the following ways:</span></span>  
  
-   <span data-ttu-id="61768-148">構成ファイルを作成してが含まれています、 [< TimeSpan_LegacyFormatMode > 要素](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md)します。</span><span class="sxs-lookup"><span data-stu-id="61768-148">By creating a configuration file that contains the [<TimeSpan_LegacyFormatMode> element](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md).</span></span> <span data-ttu-id="61768-149">この要素の設定`enabled`属性を`true`復元レガシ<xref:System.TimeSpan>アプリケーションごとの書式設定します。</span><span class="sxs-lookup"><span data-stu-id="61768-149">Setting this element's `enabled` attribute to `true` restores legacy <xref:System.TimeSpan> formatting on a per-application basis.</span></span>  
  
-   <span data-ttu-id="61768-150">"NetFx40_TimeSpanLegacyFormatMode"との互換性を設定して、アプリケーション ドメインを作成するときに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="61768-150">By setting the "NetFx40_TimeSpanLegacyFormatMode" compatibility switch when you create an application domain.</span></span> <span data-ttu-id="61768-151">これにより、レガシ<xref:System.TimeSpan>アプリケーション ドメインごとに書式設定します。</span><span class="sxs-lookup"><span data-stu-id="61768-151">This enables legacy <xref:System.TimeSpan> formatting on a per-application-domain basis.</span></span> <span data-ttu-id="61768-152">次の例では、従来を使用するアプリケーション ドメインが作成<xref:System.TimeSpan>書式設定します。</span><span class="sxs-lookup"><span data-stu-id="61768-152">The following example creates an application domain that uses legacy <xref:System.TimeSpan> formatting.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class.AppDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class.appdomain/cs/perappdomain1.cs#1)]
     [!code-vb[System.TimeSpan.Class.AppDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class.appdomain/vb/perappdomain1.vb#1)]  
  
     <span data-ttu-id="61768-153">次のコードは、新しいアプリケーション ドメインで実行する場合、レガシに戻ります<xref:System.TimeSpan>書式設定動作します。</span><span class="sxs-lookup"><span data-stu-id="61768-153">When the following code executes in the new application domain, it reverts to legacy <xref:System.TimeSpan> formatting behavior.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class.AppDomain#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class.appdomain/cs/showtimespan.cs#2)]
     [!code-vb[System.TimeSpan.Class.AppDomain#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class.appdomain/vb/showtimespan.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="61768-154">次の例では、インスタンス化、 <xref:System.TimeSpan> 2 つの日付間の差を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-154">The following example instantiates a <xref:System.TimeSpan> object that represents the difference between two dates.</span></span> <span data-ttu-id="61768-155">これは、後、表示、<xref:System.TimeSpan>オブジェクトのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-155">It then displays the <xref:System.TimeSpan> object's properties.</span></span>  
  
 [!code-csharp[System.TimeSpan.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/structure1.cs#1)]
 [!code-vb[System.TimeSpan.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/structure1.vb#1)]  
 [!code-powershell[System.TimeSpan.Class#1](~/samples/snippets/powershell/VS_Snippets_CLR_System/system.timespan.class/ps/structure1.ps1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.Globalization.Calendar" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61768-156">
            <see cref="T:System.TimeSpan" /> 構造体の新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-156">Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(long ticks);" />
      <MemberSignature Language="F#" Value="new TimeSpan : int64 -&gt; TimeSpan" Usage="new System.TimeSpan ticks" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks">
          <span data-ttu-id="61768-157">100 ナノ秒単位で表される期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-157">A time period expressed in 100-nanosecond units.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-158">
            <see cref="T:System.TimeSpan" /> 構造体の新しいインスタンスを、指定したタイマー刻み数に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-158">Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure to the specified number of ticks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-159">単一のティックは 100 ナノ秒または 1 つ 10 分の 1 秒を表します。</span><span class="sxs-lookup"><span data-stu-id="61768-159">A single tick represents one hundred nanoseconds or one ten-millionth of a second.</span></span> <span data-ttu-id="61768-160">10,000 ティックをミリ秒単位でがあります。</span><span class="sxs-lookup"><span data-stu-id="61768-160">There are 10,000 ticks in a millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-161">次の例がいくつか作成します<xref:System.TimeSpan>オブジェクトを初期化するコンス トラクター オーバー ロードを使用して、<xref:System.TimeSpan>タイマー刻み数を指定します。</span><span class="sxs-lookup"><span data-stu-id="61768-161">The following example creates several <xref:System.TimeSpan> objects using the constructor overload that initializes a <xref:System.TimeSpan> to a specified number of ticks.</span></span>  
  
 [!code-cpp[System.TimeSpan.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctorl.cpp#1)]
 [!code-csharp[System.TimeSpan.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctorl.cs#1)]
 [!code-vb[System.TimeSpan.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctorl.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Ticks" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (int hours, int minutes, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 hours, int32 minutes, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hours As Integer, minutes As Integer, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(int hours, int minutes, int seconds);" />
      <MemberSignature Language="F#" Value="new TimeSpan : int * int * int -&gt; TimeSpan" Usage="new System.TimeSpan (hours, minutes, seconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hours">
          <span data-ttu-id="61768-162">時間数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-162">Number of hours.</span>
          </span>
        </param>
        <param name="minutes">
          <span data-ttu-id="61768-163">分数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-163">Number of minutes.</span>
          </span>
        </param>
        <param name="seconds">
          <span data-ttu-id="61768-164">秒数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-164">Number of seconds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-165">
            <see cref="T:System.TimeSpan" /> 構造体の新しいインスタンスを、指定した時間数、分数、秒数に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-165">Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure to a specified number of hours, minutes, and seconds.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-166">指定した`hours`、`minutes`と`seconds`はティック単位に変換し、値がこのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="61768-166">The specified `hours`, `minutes`, and `seconds` are converted to ticks, and that value initializes this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-167">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトを初期化するコンス トラクター オーバー ロードを使用して、<xref:System.TimeSpan>指定した数時間、分、および秒にします。</span><span class="sxs-lookup"><span data-stu-id="61768-167">The following example creates several <xref:System.TimeSpan> objects using the constructor overload that initializes a <xref:System.TimeSpan> to a specified number of hours, minutes, and seconds.</span></span>  
  
 [!code-cpp[System.TimeSpan.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctoriii.cpp#2)]
 [!code-csharp[System.TimeSpan.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctoriii.cs#2)]
 [!code-vb[System.TimeSpan.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctoriii.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61768-168">パラメーターに <see cref="T:System.TimeSpan" /> より小さいか、<see cref="F:System.TimeSpan.MinValue" /> より大きい <see cref="F:System.TimeSpan.MaxValue" /> 値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-168">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (int days, int hours, int minutes, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 days, int32 hours, int32 minutes, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (days As Integer, hours As Integer, minutes As Integer, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(int days, int hours, int minutes, int seconds);" />
      <MemberSignature Language="F#" Value="new TimeSpan : int * int * int * int -&gt; TimeSpan" Usage="new System.TimeSpan (days, hours, minutes, seconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="days" Type="System.Int32" />
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="days">
          <span data-ttu-id="61768-169">日数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-169">Number of days.</span>
          </span>
        </param>
        <param name="hours">
          <span data-ttu-id="61768-170">時間数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-170">Number of hours.</span>
          </span>
        </param>
        <param name="minutes">
          <span data-ttu-id="61768-171">分数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-171">Number of minutes.</span>
          </span>
        </param>
        <param name="seconds">
          <span data-ttu-id="61768-172">秒数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-172">Number of seconds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-173">
            <see cref="T:System.TimeSpan" /> 構造体の新しいインスタンスを、指定した日数、時間数、分数、秒数に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-173">Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure to a specified number of days, hours, minutes, and seconds.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-174">指定した`days`、 `hours`、`minutes`と`seconds`はティック単位に変換し、値がこのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="61768-174">The specified `days`, `hours`, `minutes`, and `seconds` are converted to ticks, and that value initializes this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-175">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトを初期化するコンス トラクター オーバー ロードを使用して、<xref:System.TimeSpan>を指定した日数、時間、分、および秒の。</span><span class="sxs-lookup"><span data-stu-id="61768-175">The following example creates several <xref:System.TimeSpan> objects using the constructor overload that initializes a <xref:System.TimeSpan> to a specified number of days, hours, minutes, and seconds.</span></span>  
  
 [!code-cpp[System.TimeSpan.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctoriiii.cpp#3)]
 [!code-csharp[System.TimeSpan.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctoriiii.cs#3)]
 [!code-vb[System.TimeSpan.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctoriiii.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61768-176">パラメーターに <see cref="T:System.TimeSpan" /> より小さいか、<see cref="F:System.TimeSpan.MinValue" /> より大きい <see cref="F:System.TimeSpan.MaxValue" /> 値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-176">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (int days, int hours, int minutes, int seconds, int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 days, int32 hours, int32 minutes, int32 seconds, int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (days As Integer, hours As Integer, minutes As Integer, seconds As Integer, milliseconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(int days, int hours, int minutes, int seconds, int milliseconds);" />
      <MemberSignature Language="F#" Value="new TimeSpan : int * int * int * int * int -&gt; TimeSpan" Usage="new System.TimeSpan (days, hours, minutes, seconds, milliseconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="days" Type="System.Int32" />
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="days">
          <span data-ttu-id="61768-177">日数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-177">Number of days.</span>
          </span>
        </param>
        <param name="hours">
          <span data-ttu-id="61768-178">時間数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-178">Number of hours.</span>
          </span>
        </param>
        <param name="minutes">
          <span data-ttu-id="61768-179">分数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-179">Number of minutes.</span>
          </span>
        </param>
        <param name="seconds">
          <span data-ttu-id="61768-180">秒数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-180">Number of seconds.</span>
          </span>
        </param>
        <param name="milliseconds">
          <span data-ttu-id="61768-181">ミリ秒数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-181">Number of milliseconds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-182">
            <see cref="T:System.TimeSpan" /> 構造体の新しいインスタンスを、指定した日数、時間数、分数、秒数、ミリ秒数に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-182">Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure to a specified number of days, hours, minutes, seconds, and milliseconds.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-183">指定した`days`、 `hours`、 `minutes`、`seconds`と`milliseconds`はティック単位に変換し、値がこのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="61768-183">The specified `days`, `hours`, `minutes`, `seconds`, and `milliseconds` are converted to ticks, and that value initializes this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-184">次の例がいくつか作成します<xref:System.TimeSpan>オブジェクトを初期化するコンス トラクター オーバー ロードを使用して、<xref:System.TimeSpan>日、時、分、秒、およびミリ秒の指定した数にします。</span><span class="sxs-lookup"><span data-stu-id="61768-184">The following example creates several <xref:System.TimeSpan> objects using the constructor overload that initializes a <xref:System.TimeSpan> to a specified number of days, hours, minutes, seconds, and milliseconds.</span></span>  
  
 [!code-cpp[System.TimeSpan.Ctor#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctoriiiii.cpp#4)]
 [!code-csharp[System.TimeSpan.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctoriiiii.cs#4)]
 [!code-vb[System.TimeSpan.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctoriiiii.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61768-185">パラメーターに <see cref="T:System.TimeSpan" /> より小さいか、<see cref="F:System.TimeSpan.MinValue" /> より大きい <see cref="F:System.TimeSpan.MaxValue" /> 値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-185">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public TimeSpan Add (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Add(valuetype System.TimeSpan ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Add(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ts As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Add(TimeSpan ts);" />
      <MemberSignature Language="F#" Value="member this.Add : TimeSpan -&gt; TimeSpan" Usage="timeSpan.Add ts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ts">
          <span data-ttu-id="61768-186">加算する時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-186">The time interval to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-187">指定した <see cref="T:System.TimeSpan" /> オブジェクトとこのインスタンスを合計した値を持つ新しい <see cref="T:System.TimeSpan" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-187">Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of the specified <see cref="T:System.TimeSpan" /> object and this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-188">このインスタンスの値と <paramref name="ts" /> の値の合計を表す新しいオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-188">A new object that represents the value of this instance plus the value of <paramref name="ts" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-189">戻り値でなければなりません<xref:System.TimeSpan.MinValue?displayProperty=nameWithType>と<xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>、それ以外の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="61768-189">The return value must be between <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> and <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="61768-190">戻り値は、新しい<xref:System.TimeSpan>; 元<xref:System.TimeSpan>は変更されません。</span><span class="sxs-lookup"><span data-stu-id="61768-190">The return value is a new <xref:System.TimeSpan>; the original <xref:System.TimeSpan> is not modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-191">次の例では、<xref:System.TimeSpan.Add%2A>ベース時間間隔の配列の各要素を追加するメソッドを<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-191">The following example calls the <xref:System.TimeSpan.Add%2A> method to add each element in an array of time intervals to a base <xref:System.TimeSpan> value.</span></span>  
  
 [!code-csharp[System.TimeSpan.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.add/cs/add1.cs#1)]
 [!code-vb[System.TimeSpan.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.add/vb/add1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-192">結果として返された <see cref="T:System.TimeSpan" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか、<see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-192">The resulting <see cref="T:System.TimeSpan" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (t1 As TimeSpan, t2 As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member Compare : TimeSpan * TimeSpan -&gt; int" Usage="System.TimeSpan.Compare (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">
          <span data-ttu-id="61768-193">比較する最初の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-193">The first time interval to compare.</span>
          </span>
        </param>
        <param name="t2">
          <span data-ttu-id="61768-194">比較する 2 番目の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-194">The second time interval to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-195">2 つの <see cref="T:System.TimeSpan" /> 値を比較し、第 1 の値が第 2 の値よりも短いか、同じか、または長いかを示す整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-195">Compares two <see cref="T:System.TimeSpan" /> values and returns an integer that indicates whether the first value is shorter than, equal to, or longer than the second value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-196">次のいずれかの値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-196">One of the following values.</span>
          </span>
          <span data-ttu-id="61768-197">
            <list type="table">
              <listheader>
                <term> 値  </term>
                <description> 説明  </description>
              </listheader>
              <item>
                <term> -1  </term>
                <description>
                  <paramref name="t1" />は <paramref name="t2" /> よりも短いです。</description>
              </item>
              <item>
                <term> 0 </term>
                <description>
                  <paramref name="t1" />と等しい<paramref name="t2" />します。</description>
              </item>
              <item>
                <term> 1  </term>
                <description>
                  <paramref name="t1" /> は <paramref name="t2" />よりも長いです。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-197">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description>
                    <paramref name="t1" /> is shorter than <paramref name="t2" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description>
                    <paramref name="t1" /> is equal to <paramref name="t2" />.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <paramref name="t1" /> is longer than <paramref name="t2" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61768-198">次の例では、<xref:System.TimeSpan.Compare%2A>メソッドをいくつかを比較する<xref:System.TimeSpan>オブジェクトを<xref:System.TimeSpan>オブジェクトの値が 2 時間の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="61768-198">The following example uses the <xref:System.TimeSpan.Compare%2A> method to compare several <xref:System.TimeSpan> objects with a <xref:System.TimeSpan> object whose value is a 2-hour time interval.</span></span>  
  
 [!code-csharp[System.TimeSpan.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.compare/cs/compare1.cs#1)]
 [!code-vb[System.TimeSpan.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.compare/vb/compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61768-199">このインスタンスと指定したオブジェクトまたは <see cref="T:System.TimeSpan" /> オブジェクトを比較し、このインスタンスが指定したオブジェクトまたは <see cref="T:System.TimeSpan" /> オブジェクトよりも短いか、同じか、または長いかを示す整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-199">Compares this instance to a specified object or <see cref="T:System.TimeSpan" /> object and returns an integer that indicates whether this instance is shorter than, equal to, or longer than the specified object or <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-200">2 つのオーバー ロード、<xref:System.TimeSpan.CompareTo%2A>メソッドは、このインスタンスの相対値を示す符号付き数値を返す、`value`引数は、次の表に示すようにします。</span><span class="sxs-lookup"><span data-stu-id="61768-200">The two overloads of the <xref:System.TimeSpan.CompareTo%2A> method return a signed number that indicates the relative value of this instance and the `value` argument, as shown in the following table.</span></span>  
  
|<span data-ttu-id="61768-201">[値]</span><span class="sxs-lookup"><span data-stu-id="61768-201">Value</span></span>|<span data-ttu-id="61768-202">説明</span><span class="sxs-lookup"><span data-stu-id="61768-202">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="61768-203">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="61768-203">Less than zero</span></span>|<span data-ttu-id="61768-204">このインスタンスは `value` より短いです。</span><span class="sxs-lookup"><span data-stu-id="61768-204">This instance is shorter than `value`.</span></span>|  
|<span data-ttu-id="61768-205">0</span><span class="sxs-lookup"><span data-stu-id="61768-205">Zero</span></span>|<span data-ttu-id="61768-206">このインスタンスは `value` と同じです。</span><span class="sxs-lookup"><span data-stu-id="61768-206">This instance is the same as `value`.</span></span>|  
|<span data-ttu-id="61768-207">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="61768-207">Greater than zero</span></span>|<span data-ttu-id="61768-208">このインスタンスは `value` より長いです。</span><span class="sxs-lookup"><span data-stu-id="61768-208">This instance is longer than `value`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="timeSpan.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61768-209">比較対象のオブジェクト、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-209">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-210">このインスタンスと指定したオブジェクトを比較し、このインスタンスが指定したオブジェクトよりも短いか、同じか、または長いかを示す整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-210">Compares this instance to a specified object and returns an integer that indicates whether this instance is shorter than, equal to, or longer than the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-211">次のいずれかの値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-211">One of the following values.</span>
          </span>
          <span data-ttu-id="61768-212">
            <list type="table">
              <listheader>
                <term> 値  </term>
                <description> 説明  </description>
              </listheader>
              <item>
                <term> -1  </term>
                <description> このインスタンスは <paramref name="value" /> よりも短いです。</description>
              </item>
              <item>
                <term> 0  </term>
                <description> このインスタンスは <paramref name="value" /> と等価です。</description>
              </item>
              <item>
                <term> 1  </term>
                <description> このインスタンスは <paramref name="value" /> よりも長いです。または、<paramref name="value" /> は <see langword="null" /> です。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-212">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description> This instance is shorter than <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description> This instance is equal to <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> This instance is longer than <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-213">任意のインスタンスの<xref:System.TimeSpan>、その値に関係なくと見なされますより大きい`null`します。</span><span class="sxs-lookup"><span data-stu-id="61768-213">Any instance of <xref:System.TimeSpan>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="61768-214">`value`パラメーターのインスタンスである必要があります<xref:System.TimeSpan>または`null`、それ以外の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="61768-214">The `value` parameter must be an instance of <xref:System.TimeSpan> or `null`; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-215">次の例がいくつかを比較<xref:System.TimeSpan>構造とその他のオブジェクト参照に<xref:System.TimeSpan>を使用して構造体、<xref:System.TimeSpan.CompareTo%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-215">The following example compares several <xref:System.TimeSpan> structures and other objects to a reference <xref:System.TimeSpan> structure using the <xref:System.TimeSpan.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.TimeSpan.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61768-216">
            <paramref name="value" /> が <see cref="T:System.TimeSpan" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-216">
              <paramref name="value" /> is not a <see cref="T:System.TimeSpan" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.CompareTo(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(TimeSpan value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : TimeSpan -&gt; int&#xA;override this.CompareTo : TimeSpan -&gt; int" Usage="timeSpan.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61768-217">このインスタンスと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-217">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-218">このインスタンスと指定した <see cref="T:System.TimeSpan" /> オブジェクトを比較し、このインスタンスが指定した <see cref="T:System.TimeSpan" /> オブジェクトよりも短いか、同じか、または長いかを示す整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-218">Compares this instance to a specified <see cref="T:System.TimeSpan" /> object and returns an integer that indicates whether this instance is shorter than, equal to, or longer than the <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-219">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-219">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="61768-220">
            <list type="table">
              <listheader>
                <term> 値  </term>
                <description> 説明  </description>
              </listheader>
              <item>
                <term> 負の整数  </term>
                <description> このインスタンスは、<paramref name="value" /> よりも短いです。</description>
              </item>
              <item>
                <term> 0  </term>
                <description> このインスタンスは <paramref name="value" /> と等価です。</description>
              </item>
              <item>
                <term> 正の整数  </term>
                <description> このインスタンスは <paramref name="value" /> よりも長いです。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-220">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> A negative integer  </term>
                  <description> This instance is shorter than <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> A positive integer  </term>
                  <description> This instance is longer than <paramref name="value" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-221">このメソッドを実装、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスを実行よりも若干優れています、<xref:System.TimeSpan.CompareTo%2A?displayProperty=nameWithType>メソッドに変換することはありませんので、`value`オブジェクトに対するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="61768-221">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.TimeSpan.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-222">次の例では、ジェネリックと非ジェネリック バージョンの<xref:System.TimeSpan.CompareTo%2A>いくつかの値と参照型のメソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-222">The following example demonstrates generic and nongeneric versions of the <xref:System.TimeSpan.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Days">
      <MemberSignature Language="C#" Value="public int Days { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Days" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Days" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Days As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Days { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Days : int" Usage="System.TimeSpan.Days" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-223">現在の <see cref="T:System.TimeSpan" /> 構造体によって表される時間間隔の日要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-223">Gets the days component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61768-224">このインスタンスの日の部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-224">The day component of this instance.</span>
          </span>
          <span data-ttu-id="61768-225">戻り値は、正の場合もあれば負の場合もあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-225">The return value can be positive or negative.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-226">A<xref:System.TimeSpan>として値を表すことが [*-*]*d*.*hh*:*mm*:*ss*.*ff*、省略可能なマイナス記号を負の時間間隔を示しますが、 *d*コンポーネントは、日、 *hh*を 24 時間制で測定される時間は*mm*は分、 *ss* (秒単位) と*ff*秒の端数が。</span><span class="sxs-lookup"><span data-stu-id="61768-226">A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second.</span></span> <span data-ttu-id="61768-227">値、<xref:System.TimeSpan.Days%2A>プロパティは、1 日コンポーネント、 *d*します。</span><span class="sxs-lookup"><span data-stu-id="61768-227">The value of the <xref:System.TimeSpan.Days%2A> property is the day component, *d*.</span></span>  
  
 <span data-ttu-id="61768-228"><xref:System.TimeSpan.Days%2A>プロパティを表す、日単位のに対して、<xref:System.TimeSpan.TotalDays%2A>プロパティは、整数部と小数部から成る日数を表します。</span><span class="sxs-lookup"><span data-stu-id="61768-228">The <xref:System.TimeSpan.Days%2A> property represents whole days, whereas the <xref:System.TimeSpan.TotalDays%2A> property represents whole and fractional days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-229">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトし、表示、<xref:System.TimeSpan.Days%2A>の各プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-229">The following example creates several <xref:System.TimeSpan> objects and displays the <xref:System.TimeSpan.Days%2A> property of each.</span></span>  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalDays" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public TimeSpan Divide (double divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Divide(float64 divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Divide(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Divide (divisor As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Divide(double divisor);" />
      <MemberSignature Language="F#" Value="member this.Divide : double -&gt; TimeSpan" Usage="timeSpan.Divide divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="divisor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public double Divide (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Divide(valuetype System.TimeSpan ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Divide(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Divide (ts As TimeSpan) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Divide(TimeSpan ts);" />
      <MemberSignature Language="F#" Value="member this.Divide : TimeSpan -&gt; double" Usage="timeSpan.Divide ts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Duration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Function Duration () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Duration();" />
      <MemberSignature Language="F#" Value="member this.Duration : unit -&gt; TimeSpan" Usage="timeSpan.Duration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61768-230">値が現在の <see cref="T:System.TimeSpan" /> オブジェクトの絶対値である、新しい <see cref="T:System.TimeSpan" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-230">Returns a new <see cref="T:System.TimeSpan" /> object whose value is the absolute value of the current <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-231">値が現在の <see cref="T:System.TimeSpan" /> オブジェクトの絶対値である新しいオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-231">A new object whose value is the absolute value of the current <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61768-232">次の例では、適用、<xref:System.TimeSpan.Duration%2A>メソッドをいくつか<xref:System.TimeSpan>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-232">The following example applies the <xref:System.TimeSpan.Duration%2A> method to several <xref:System.TimeSpan> objects.</span></span>  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-233">このインスタンスの値は <see cref="F:System.TimeSpan.MinValue" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-233">The value of this instance is <see cref="F:System.TimeSpan.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.TimeSpan.Ticks" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61768-234">
            <see cref="T:System.TimeSpan" /> の 2 つのインスタンスが等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-234">Returns a value indicating whether two instances of <see cref="T:System.TimeSpan" /> are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="timeSpan.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61768-235">このインスタンスと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-235">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-236">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-236">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-237">
            <paramref name="value" /> が現在の <see cref="T:System.TimeSpan" /> 構造体と同じ時間間隔を表す <see cref="T:System.TimeSpan" /> オブジェクトの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-237">
              <see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.TimeSpan" /> object that represents the same time interval as the current <see cref="T:System.TimeSpan" /> structure; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61768-238">次の例がいくつかを比較<xref:System.TimeSpan>およびその他のオブジェクト参照に<xref:System.TimeSpan>を使用して、<xref:System.TimeSpan.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-238">The following example compares several <xref:System.TimeSpan> and other objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.Equals%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.TimeSpan.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeSpan obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.TimeSpan obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Equals(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeSpan obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeSpan -&gt; bool" Usage="timeSpan.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="61768-239">このインスタンスと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-239">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-240">対象のインスタンスが、指定した <see cref="T:System.TimeSpan" /> オブジェクトに等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-240">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-241">
            <paramref name="obj" /> がこのインスタンスと同じ時間間隔を表している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-241">
              <see langword="true" /> if <paramref name="obj" /> represents the same time interval as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-242">このメソッドは、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりも若干優れています<xref:System.TimeSpan.Equals%2A>に変換することはありませんので、`obj`オブジェクトに対するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="61768-242">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.TimeSpan.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-243">次の例では、ジェネリックと非ジェネリック バージョンの<xref:System.TimeSpan.CompareTo%2A>いくつかの値と参照型のメソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-243">The following example demonstrates generic and nongeneric versions of the <xref:System.TimeSpan.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
        <altmember cref="Overload:System.TimeSpan.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member Equals : TimeSpan * TimeSpan -&gt; bool" Usage="System.TimeSpan.Equals (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">
          <span data-ttu-id="61768-244">比較する最初の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-244">The first time interval to compare.</span>
          </span>
        </param>
        <param name="t2">
          <span data-ttu-id="61768-245">比較する 2 番目の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-245">The second time interval to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-246">
            <see cref="T:System.TimeSpan" /> の指定した 2 つのインスタンスが等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-246">Returns a value that indicates whether two specified instances of <see cref="T:System.TimeSpan" /> are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-247">
            <paramref name="t1" /> の値と <paramref name="t2" /> の値が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-247">
              <see langword="true" /> if the values of <paramref name="t1" /> and <paramref name="t2" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61768-248">次の例がいくつかを比較<xref:System.TimeSpan>オブジェクトの参照を<xref:System.TimeSpan>オブジェクト、静的なを使用して<xref:System.TimeSpan.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-248">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> object using the static <xref:System.TimeSpan.Equals%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.Compare_Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CPP/comp_equal.cpp#2)]
 [!code-csharp[System.TimeSpan.Compare_Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CS/comp_equal.cs#2)]
 [!code-vb[System.TimeSpan.Compare_Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/VB/comp_equal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FromDays">
      <MemberSignature Language="C#" Value="public static TimeSpan FromDays (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromDays(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromDays (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromDays(double value);" />
      <MemberSignature Language="F#" Value="static member FromDays : double -&gt; TimeSpan" Usage="System.TimeSpan.FromDays value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61768-249">ミリ秒単位の精度による日数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-249">A number of days, accurate to the nearest millisecond.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-250">指定した日数を表す <see cref="T:System.TimeSpan" /> を返します。日数は、ミリ秒単位の精度で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-250">Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of days, where the specification is accurate to the nearest millisecond.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-251">
            <paramref name="value" /> を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-251">An object that represents <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-252">`value`パラメーターはタイマー刻みを変換すると、(ミリ秒) に変換され、タイマー刻みの数が、新しい初期化するために使用される<xref:System.TimeSpan>します。</span><span class="sxs-lookup"><span data-stu-id="61768-252">The `value` parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <xref:System.TimeSpan>.</span></span> <span data-ttu-id="61768-253">そのため、`value`のみが検討されます精度はミリ秒単位。</span><span class="sxs-lookup"><span data-stu-id="61768-253">Therefore, `value` will only be considered accurate to the nearest millisecond.</span></span> <span data-ttu-id="61768-254">有効桁数が失われるのため、注意してください、<xref:System.Double>データ型の場合は、この変換が発生することができます、<xref:System.OverflowException>の近くには、いずれかの範囲の中である値の<xref:System.TimeSpan.MinValue>または<xref:System.TimeSpan.MaxValue>します。</span><span class="sxs-lookup"><span data-stu-id="61768-254">Note that, because of the loss of precision of the <xref:System.Double> data type, this conversion can cause an <xref:System.OverflowException> for values that are near to but still in the range of either <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>.</span></span> <span data-ttu-id="61768-255">たとえば、これにより、<xref:System.OverflowException>インスタンスを作成する次の試行で、<xref:System.TimeSpan>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-255">For example, this causes an <xref:System.OverflowException> in the following attempt to instantiate a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[System.TimeSpan.FromMinutes#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#2)]
 [!code-vb[System.TimeSpan.FromMinutes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="61768-256">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトを使用して、<xref:System.TimeSpan.FromDays%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-256">The following example creates several <xref:System.TimeSpan> objects using the <xref:System.TimeSpan.FromDays%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.From#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromdays.cpp#6)]
 [!code-csharp[System.TimeSpan.From#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromdays.cs#6)]
 [!code-vb[System.TimeSpan.From#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromdays.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-257">
            <paramref name="value" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか <see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-257">
              <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
          <span data-ttu-id="61768-258">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-258">-or-</span>
          </span>
          <span data-ttu-id="61768-259">
            <paramref name="value" /> は <see cref="F:System.Double.PositiveInfinity" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-259">
              <paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span>
          </span>
          <span data-ttu-id="61768-260">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-260">-or-</span>
          </span>
          <span data-ttu-id="61768-261">
            <paramref name="value" /> は <see cref="F:System.Double.NegativeInfinity" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-261">
              <paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61768-262">
            <paramref name="value" /> と <see cref="F:System.Double.NaN" /> が等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-262">
              <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromHours">
      <MemberSignature Language="C#" Value="public static TimeSpan FromHours (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromHours(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHours (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromHours(double value);" />
      <MemberSignature Language="F#" Value="static member FromHours : double -&gt; TimeSpan" Usage="System.TimeSpan.FromHours value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61768-263">ミリ秒単位の精度による時間数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-263">A number of hours accurate to the nearest millisecond.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-264">指定した時間数を表す <see cref="T:System.TimeSpan" /> を返します。時間数は、ミリ秒単位の精度で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-264">Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of hours, where the specification is accurate to the nearest millisecond.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-265">
            <paramref name="value" /> を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-265">An object that represents <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-266">`value`パラメーターはタイマー刻みを変換すると、(ミリ秒) に変換され、タイマー刻みの数が、新しい初期化するために使用される<xref:System.TimeSpan>します。</span><span class="sxs-lookup"><span data-stu-id="61768-266">The `value` parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <xref:System.TimeSpan>.</span></span> <span data-ttu-id="61768-267">そのため、`value`のみが検討されます精度はミリ秒単位。</span><span class="sxs-lookup"><span data-stu-id="61768-267">Therefore, `value` will only be considered accurate to the nearest millisecond.</span></span> <span data-ttu-id="61768-268">有効桁数が失われるのため、注意してください、<xref:System.Double>データ型の場合は、この変換を生成できます、<xref:System.OverflowException>の近くには、いずれかの範囲の中である値の<xref:System.TimeSpan.MinValue>または<xref:System.TimeSpan.MaxValue>します。</span><span class="sxs-lookup"><span data-stu-id="61768-268">Note that, because of the loss of precision of the <xref:System.Double> data type, this conversion can generate an <xref:System.OverflowException> for values that are near to but still in the range of either <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>.</span></span> <span data-ttu-id="61768-269">たとえば、これにより、<xref:System.OverflowException>インスタンスを作成する次の試行で、<xref:System.TimeSpan>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-269">For example, this causes an <xref:System.OverflowException> in the following attempt to instantiate a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[System.TimeSpan.FromMinutes#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#3)]
 [!code-vb[System.TimeSpan.FromMinutes#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="61768-270">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトを使用して、<xref:System.TimeSpan.FromHours%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-270">The following example creates several <xref:System.TimeSpan> objects using the <xref:System.TimeSpan.FromHours%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.From#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromhours.cpp#5)]
 [!code-csharp[System.TimeSpan.From#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromhours.cs#5)]
 [!code-vb[System.TimeSpan.From#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromhours.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-271">
            <paramref name="value" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか <see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-271">
              <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
          <span data-ttu-id="61768-272">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-272">-or-</span>
          </span>
          <span data-ttu-id="61768-273">
            <paramref name="value" /> は <see cref="F:System.Double.PositiveInfinity" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-273">
              <paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span>
          </span>
          <span data-ttu-id="61768-274">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-274">-or-</span>
          </span>
          <span data-ttu-id="61768-275">
            <paramref name="value" /> は <see cref="F:System.Double.NegativeInfinity" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-275">
              <paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61768-276">
            <paramref name="value" /> と <see cref="F:System.Double.NaN" /> が等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-276">
              <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromMilliseconds">
      <MemberSignature Language="C#" Value="public static TimeSpan FromMilliseconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromMilliseconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMilliseconds (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromMilliseconds(double value);" />
      <MemberSignature Language="F#" Value="static member FromMilliseconds : double -&gt; TimeSpan" Usage="System.TimeSpan.FromMilliseconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61768-277">ミリ秒数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-277">A number of milliseconds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-278">指定したミリ秒数を表す <see cref="T:System.TimeSpan" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-278">Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of milliseconds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-279">
            <paramref name="value" /> を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-279">An object that represents <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-280">`value`パラメーターはティック単位に変換され、タイマー刻みの数が、新しい初期化するために使用される<xref:System.TimeSpan>します。</span><span class="sxs-lookup"><span data-stu-id="61768-280">The `value` parameter is converted to ticks, and that number of ticks is used to initialize the new <xref:System.TimeSpan>.</span></span> <span data-ttu-id="61768-281">そのため、`value`のみが検討されます精度はミリ秒単位。</span><span class="sxs-lookup"><span data-stu-id="61768-281">Therefore, `value` will only be considered accurate to the nearest millisecond.</span></span> <span data-ttu-id="61768-282">有効桁数が失われるのため、注意してください、<xref:System.Double>データ型の場合は、この変換を生成できます、<xref:System.OverflowException>の近くには、いずれかの範囲の中である値の<xref:System.TimeSpan.MinValue>または<xref:System.TimeSpan.MaxValue>します。</span><span class="sxs-lookup"><span data-stu-id="61768-282">Note that, because of the loss of precision of the <xref:System.Double> data type, this conversion can generate an <xref:System.OverflowException> for values that are near to but still in the range of either <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>.</span></span> <span data-ttu-id="61768-283">たとえば、これにより、<xref:System.OverflowException>インスタンスを作成する次の試行で、<xref:System.TimeSpan>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-283">For example, this causes an <xref:System.OverflowException> in the following attempt to instantiate a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[System.TimeSpan.FromMinutes#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#4)]
 [!code-vb[System.TimeSpan.FromMinutes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="61768-284">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトを使用して、<xref:System.TimeSpan.FromMilliseconds%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-284">The following example creates several <xref:System.TimeSpan> objects by using the <xref:System.TimeSpan.FromMilliseconds%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.From#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/frommillisec.cpp#2)]
 [!code-csharp[System.TimeSpan.From#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/frommillisec.cs#2)]
 [!code-vb[System.TimeSpan.From#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/frommillisec.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-285">
            <paramref name="value" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか <see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-285">
              <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
          <span data-ttu-id="61768-286">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-286">-or-</span>
          </span>
          <span data-ttu-id="61768-287">
            <paramref name="value" /> は <see cref="F:System.Double.PositiveInfinity" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-287">
              <paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span>
          </span>
          <span data-ttu-id="61768-288">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-288">-or-</span>
          </span>
          <span data-ttu-id="61768-289">
            <paramref name="value" /> は <see cref="F:System.Double.NegativeInfinity" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-289">
              <paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61768-290">
            <paramref name="value" /> と <see cref="F:System.Double.NaN" /> が等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-290">
              <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromMinutes">
      <MemberSignature Language="C#" Value="public static TimeSpan FromMinutes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromMinutes(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMinutes (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromMinutes(double value);" />
      <MemberSignature Language="F#" Value="static member FromMinutes : double -&gt; TimeSpan" Usage="System.TimeSpan.FromMinutes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61768-291">ミリ秒単位の精度による分数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-291">A number of minutes, accurate to the nearest millisecond.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-292">指定した分数を表す <see cref="T:System.TimeSpan" /> を返します。分数は、ミリ秒単位の精度で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-292">Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of minutes, where the specification is accurate to the nearest millisecond.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-293">
            <paramref name="value" /> を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-293">An object that represents <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-294">`value`パラメーターはタイマー刻みを変換すると、(ミリ秒) に変換され、タイマー刻みの数が、新しい初期化するために使用される<xref:System.TimeSpan>します。</span><span class="sxs-lookup"><span data-stu-id="61768-294">The `value` parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <xref:System.TimeSpan>.</span></span> <span data-ttu-id="61768-295">そのため、`value`のみが検討されます精度はミリ秒単位。</span><span class="sxs-lookup"><span data-stu-id="61768-295">Therefore, `value` will only be considered accurate to the nearest millisecond.</span></span> <span data-ttu-id="61768-296">有効桁数が失われるのため、注意してください、<xref:System.Double>データ型の場合は、この変換を生成できます、<xref:System.OverflowException>の近くには、いずれかの範囲の中である値の<xref:System.TimeSpan.MinValue>または<xref:System.TimeSpan.MaxValue>します。</span><span class="sxs-lookup"><span data-stu-id="61768-296">Note that, because of the loss of precision of the <xref:System.Double> data type, this conversion can generate an <xref:System.OverflowException> for values that are near to but still in the range of either <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>.</span></span> <span data-ttu-id="61768-297">たとえば、これにより、<xref:System.OverflowException>インスタンスを作成する次の試行で、<xref:System.TimeSpan>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-297">For example, this causes an <xref:System.OverflowException> in the following attempt to instantiate a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[System.TimeSpan.FromMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#1)]
 [!code-vb[System.TimeSpan.FromMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="61768-298">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトを使用して、<xref:System.TimeSpan.FromMinutes%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-298">The following example creates several <xref:System.TimeSpan> objects using the <xref:System.TimeSpan.FromMinutes%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.From#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromminutes.cpp#4)]
 [!code-csharp[System.TimeSpan.From#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromminutes.cs#4)]
 [!code-vb[System.TimeSpan.From#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromminutes.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-299">
            <paramref name="value" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか <see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-299">
              <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
          <span data-ttu-id="61768-300">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-300">-or-</span>
          </span>
          <span data-ttu-id="61768-301">
            <paramref name="value" /> は <see cref="F:System.Double.PositiveInfinity" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-301">
              <paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span>
          </span>
          <span data-ttu-id="61768-302">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-302">-or-</span>
          </span>
          <span data-ttu-id="61768-303">
            <paramref name="value" /> は <see cref="F:System.Double.NegativeInfinity" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-303">
              <paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61768-304">
            <paramref name="value" /> と <see cref="F:System.Double.NaN" /> が等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-304">
              <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromSeconds">
      <MemberSignature Language="C#" Value="public static TimeSpan FromSeconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromSeconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSeconds (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromSeconds(double value);" />
      <MemberSignature Language="F#" Value="static member FromSeconds : double -&gt; TimeSpan" Usage="System.TimeSpan.FromSeconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61768-305">ミリ秒単位の精度による秒数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-305">A number of seconds, accurate to the nearest millisecond.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-306">指定した秒数を表す <see cref="T:System.TimeSpan" /> を返します。秒数は、ミリ秒単位の精度で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-306">Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of seconds, where the specification is accurate to the nearest millisecond.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-307">
            <paramref name="value" /> を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-307">An object that represents <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-308">`value`パラメーターはタイマー刻みを変換すると、(ミリ秒) に変換され、タイマー刻みの数が、新しい初期化に使用される<xref:System.TimeSpan>します。</span><span class="sxs-lookup"><span data-stu-id="61768-308">The `value` parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to intialize the new <xref:System.TimeSpan>.</span></span> <span data-ttu-id="61768-309">そのため、`value`のみが検討されます精度はミリ秒単位。</span><span class="sxs-lookup"><span data-stu-id="61768-309">Therefore, `value` will only be considered accurate to the nearest millisecond.</span></span> <span data-ttu-id="61768-310">有効桁数が失われるのため、注意してください、<xref:System.Double>データ型を生成できますこの、<xref:System.OverflowException>のいずれかの範囲でもが、近くにある値<xref:System.TimeSpan.MinValue>または<xref:System.TimeSpan.MaxValue>、これが原因の<xref:System.OverflowException>、たとえばで、次がインスタンス化しようとした場合、<xref:System.TimeSpan>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-310">Note that, because of the loss of precision of the <xref:System.Double> data type, this can generate an <xref:System.OverflowException> for values that are near but still in the range of either  <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>, This is the cause of an <xref:System.OverflowException>, for example, in the following attempt to instantiate a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[System.TimeSpan.FromMinutes#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#5)]
 [!code-vb[System.TimeSpan.FromMinutes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="61768-311">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトを使用して、<xref:System.TimeSpan.FromSeconds%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-311">The following example creates several <xref:System.TimeSpan> objects using the <xref:System.TimeSpan.FromSeconds%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.From#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromseconds.cpp#3)]
 [!code-csharp[System.TimeSpan.From#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromseconds.cs#3)]
 [!code-vb[System.TimeSpan.From#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromseconds.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-312">
            <paramref name="value" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか <see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-312">
              <paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
          <span data-ttu-id="61768-313">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-313">-or-</span>
          </span>
          <span data-ttu-id="61768-314">
            <paramref name="value" /> は <see cref="F:System.Double.PositiveInfinity" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-314">
              <paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span>
          </span>
          <span data-ttu-id="61768-315">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-315">-or-</span>
          </span>
          <span data-ttu-id="61768-316">
            <paramref name="value" /> は <see cref="F:System.Double.NegativeInfinity" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-316">
              <paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61768-317">
            <paramref name="value" /> と <see cref="F:System.Double.NaN" /> が等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-317">
              <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromTicks">
      <MemberSignature Language="C#" Value="public static TimeSpan FromTicks (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromTicks(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromTicks (value As Long) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromTicks(long value);" />
      <MemberSignature Language="F#" Value="static member FromTicks : int64 -&gt; TimeSpan" Usage="System.TimeSpan.FromTicks value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61768-318">時間を表すタイマー刻み数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-318">A number of ticks that represent a time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-319">指定した時間を表す <see cref="T:System.TimeSpan" /> を返します。時間は、タイマー刻み単位で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-319">Returns a <see cref="T:System.TimeSpan" /> that represents a specified time, where the specification is in units of ticks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-320">
            <paramref name="value" /> を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-320">An object that represents <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-321">これは便利なメソッドと同じ動作を<xref:System.TimeSpan.%23ctor%28System.Int64%29?displayProperty=nameWithType>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="61768-321">This is a convenience method with the same behavior as the <xref:System.TimeSpan.%23ctor%28System.Int64%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="61768-322">単一のティックは 100 ナノ秒または 1 つ 10 分の 1 秒を表します。</span><span class="sxs-lookup"><span data-stu-id="61768-322">A single tick represents one hundred nanoseconds or one ten-millionth of a second.</span></span> <span data-ttu-id="61768-323">10,000 ティックをミリ秒単位でがあります。</span><span class="sxs-lookup"><span data-stu-id="61768-323">There are 10,000 ticks in a millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-324">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトを使用して、<xref:System.TimeSpan.FromTicks%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-324">The following example creates several <xref:System.TimeSpan> objects using the <xref:System.TimeSpan.FromTicks%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.From#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromticks.cpp#1)]
 [!code-csharp[System.TimeSpan.From#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromticks.cs#1)]
 [!code-vb[System.TimeSpan.From#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromticks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="timeSpan.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61768-325">このインスタンスのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-325">Returns a hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-326">32 ビット符号付き整数ハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-326">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-327">2 つ<xref:System.TimeSpan>場合でも、異なる時刻の値を表すオブジェクトが同じハッシュ コードを必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-327">Two <xref:System.TimeSpan> objects might have the same hash code even though they represent different time values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-328">次の例では、いくつかのハッシュ コードを生成する<xref:System.TimeSpan>オブジェクトを使用して、<xref:System.TimeSpan.GetHashCode%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-328">The following example generates the hash codes of several <xref:System.TimeSpan> objects using the <xref:System.TimeSpan.GetHashCode%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.GetHashCode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.GetHashCode/CPP/hashcode.cpp#1)]
 [!code-csharp[System.TimeSpan.GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.GetHashCode/CS/hashcode.cs#1)]
 [!code-vb[System.TimeSpan.GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.GetHashCode/VB/hashcode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hours">
      <MemberSignature Language="C#" Value="public int Hours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hours" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Hours" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hours As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hours { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Hours : int" Usage="System.TimeSpan.Hours" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-329">現在の <see cref="T:System.TimeSpan" /> 構造体が表す時間間隔の時間の部分を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-329">Gets the hours component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61768-330">現在の <see cref="T:System.TimeSpan" /> 構造体の時間の部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-330">The hour component of the current <see cref="T:System.TimeSpan" /> structure.</span>
          </span>
          <span data-ttu-id="61768-331">戻り値の範囲は、-23 ～ 23 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-331">The return value ranges from -23 through 23.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-332">A<xref:System.TimeSpan>として値を表すことが [*-*]*d*.*hh*:*mm*:*ss*.*ff*、省略可能なマイナス記号を負の時間間隔を示しますが、 *d*コンポーネントは、日、 *hh*を 24 時間制で測定される時間は*mm*は分、 *ss* (秒単位) と*ff*秒の端数が。</span><span class="sxs-lookup"><span data-stu-id="61768-332">A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second.</span></span> <span data-ttu-id="61768-333">値、<xref:System.TimeSpan.Hours%2A>プロパティは、時間のコンポーネント、 *hh*します。</span><span class="sxs-lookup"><span data-stu-id="61768-333">The value of the <xref:System.TimeSpan.Hours%2A> property is the hours component, *hh*.</span></span>  
  
 <span data-ttu-id="61768-334"><xref:System.TimeSpan.Hours%2A>プロパティを表す時間全体は、に対して、<xref:System.TimeSpan.TotalHours%2A>プロパティは、整数部と小数部の時間を表します。</span><span class="sxs-lookup"><span data-stu-id="61768-334">The <xref:System.TimeSpan.Hours%2A> property represents whole hours, whereas the <xref:System.TimeSpan.TotalHours%2A> property represents whole and fractional hours.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-335">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトし、表示、<xref:System.TimeSpan.Hours%2A>の各プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-335">The following example creates several <xref:System.TimeSpan> objects and displays the <xref:System.TimeSpan.Hours%2A> property of each.</span></span>  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : TimeSpan" Usage="System.TimeSpan.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-336">
            <see cref="T:System.TimeSpan" /> の最大値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-336">Represents the maximum <see cref="T:System.TimeSpan" /> value.</span>
          </span>
          <span data-ttu-id="61768-337">このフィールドは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-337">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-338">このフィールドの値が等しく<xref:System.Int64.MaxValue?displayProperty=nameWithType>タイマー刻み。</span><span class="sxs-lookup"><span data-stu-id="61768-338">The value of this field is equivalent to <xref:System.Int64.MaxValue?displayProperty=nameWithType> ticks.</span></span> <span data-ttu-id="61768-339">この値の文字列表現とは、正の 10675199.02:48:05.4775807 または 10,675,199 日よりも少しです。</span><span class="sxs-lookup"><span data-stu-id="61768-339">The string representation of this value is positive 10675199.02:48:05.4775807, or slightly more than 10,675,199 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-340">次の例を参照し、値を表示、<xref:System.TimeSpan.MaxValue>フィールド。</span><span class="sxs-lookup"><span data-stu-id="61768-340">The following example references and displays the value of the <xref:System.TimeSpan.MaxValue> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="Milliseconds">
      <MemberSignature Language="C#" Value="public int Milliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Milliseconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Milliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Milliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Milliseconds { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Milliseconds : int" Usage="System.TimeSpan.Milliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-341">現在の <see cref="T:System.TimeSpan" /> 構造体が表す時間間隔のミリ秒の部分を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-341">Gets the milliseconds component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61768-342">現在の <see cref="T:System.TimeSpan" /> 構造体のミリ秒の部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-342">The millisecond component of the current <see cref="T:System.TimeSpan" /> structure.</span>
          </span>
          <span data-ttu-id="61768-343">戻り値の範囲は、-999 ～ 999 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-343">The return value ranges from -999 through 999.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-344">A<xref:System.TimeSpan>として値を表すことが [*-*]*d*.*hh*:*mm*:*ss*.*ff*、省略可能なマイナス記号を負の時間間隔を示しますが、 *d*コンポーネントは、日、 *hh*を 24 時間制で測定される時間は*mm*は分、 *ss* (秒単位) と*ff*秒の端数が。</span><span class="sxs-lookup"><span data-stu-id="61768-344">A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second.</span></span> <span data-ttu-id="61768-345">値、<xref:System.TimeSpan.Milliseconds%2A>プロパティは、小数部の 2 番目のコンポーネント*ff*します。</span><span class="sxs-lookup"><span data-stu-id="61768-345">The value of the <xref:System.TimeSpan.Milliseconds%2A> property is the fractional second component, *ff*.</span></span>  
  
 <span data-ttu-id="61768-346"><xref:System.TimeSpan.Milliseconds%2A>プロパティを表す整数のミリ秒単位のに対して、<xref:System.TimeSpan.TotalMilliseconds%2A>プロパティは、ミリ秒の整数部と小数部を表します。</span><span class="sxs-lookup"><span data-stu-id="61768-346">The <xref:System.TimeSpan.Milliseconds%2A> property represents whole milliseconds, whereas the <xref:System.TimeSpan.TotalMilliseconds%2A> property represents whole and fractional milliseconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-347">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトし、表示、<xref:System.TimeSpan.Milliseconds%2A>の各プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-347">The following example creates several <xref:System.TimeSpan> objects and displays the <xref:System.TimeSpan.Milliseconds%2A> property of each.</span></span>  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="Minutes">
      <MemberSignature Language="C#" Value="public int Minutes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minutes" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Minutes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minutes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minutes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minutes : int" Usage="System.TimeSpan.Minutes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-348">現在の <see cref="T:System.TimeSpan" /> 構造体が表す時間間隔の分の部分を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-348">Gets the minutes component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61768-349">現在の <see cref="T:System.TimeSpan" /> 構造体の分の部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-349">The minute component of the current <see cref="T:System.TimeSpan" /> structure.</span>
          </span>
          <span data-ttu-id="61768-350">戻り値の範囲は、-59 ～ 59 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-350">The return value ranges from -59 through 59.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-351">A<xref:System.TimeSpan>として値を表すことが [*-*]*d*.*hh*:*mm*:*ss*.*ff*、省略可能なマイナス記号を負の時間間隔を示しますが、 *d*コンポーネントは、日、 *hh*を 24 時間制で測定される時間は*mm*は分、 *ss* (秒単位) と*ff*秒の端数が。</span><span class="sxs-lookup"><span data-stu-id="61768-351">A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second.</span></span> <span data-ttu-id="61768-352">値、<xref:System.TimeSpan.Minutes%2A>プロパティは、分単位のコンポーネントでは、 *mm*します。</span><span class="sxs-lookup"><span data-stu-id="61768-352">The value of the <xref:System.TimeSpan.Minutes%2A> property is the minute component, *mm*.</span></span>  
  
 <span data-ttu-id="61768-353"><xref:System.TimeSpan.Minutes%2A>プロパティを表す整数の分のに対して、<xref:System.TimeSpan.TotalMinutes%2A>プロパティは、整数部と小数部から成る分数を表します。</span><span class="sxs-lookup"><span data-stu-id="61768-353">The <xref:System.TimeSpan.Minutes%2A> property represents whole minutes, whereas the <xref:System.TimeSpan.TotalMinutes%2A> property represents whole and fractional minutes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-354">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトし、表示、<xref:System.TimeSpan.Minutes%2A>の各プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-354">The following example creates several <xref:System.TimeSpan> objects and displays the <xref:System.TimeSpan.Minutes%2A> property of each.</span></span>  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan MinValue" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : TimeSpan" Usage="System.TimeSpan.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-355">
            <see cref="T:System.TimeSpan" /> の最小値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-355">Represents the minimum <see cref="T:System.TimeSpan" /> value.</span>
          </span>
          <span data-ttu-id="61768-356">このフィールドは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-356">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-357">このフィールドの値が等しく<xref:System.Int64.MinValue?displayProperty=nameWithType>タイマー刻み。</span><span class="sxs-lookup"><span data-stu-id="61768-357">The value of this field is equivalent to <xref:System.Int64.MinValue?displayProperty=nameWithType> ticks.</span></span> <span data-ttu-id="61768-358">この値の文字列表現は、-10675199.02:48:05.4775808、または負の値よりも少し 10,675,199 日です。</span><span class="sxs-lookup"><span data-stu-id="61768-358">The string representation of this value is negative 10675199.02:48:05.4775808, or slightly more than negative 10,675,199 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-359">次の例を参照し、値を表示、<xref:System.TimeSpan.MinValue>フィールド。</span><span class="sxs-lookup"><span data-stu-id="61768-359">The following example references and displays the value of the <xref:System.TimeSpan.MinValue> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public TimeSpan Multiply (double factor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Multiply(float64 factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Multiply(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Multiply (factor As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Multiply(double factor);" />
      <MemberSignature Language="F#" Value="member this.Multiply : double -&gt; TimeSpan" Usage="timeSpan.Multiply factor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="factor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public TimeSpan Negate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Negate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Negate" />
      <MemberSignature Language="VB.NET" Value="Public Function Negate () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Negate();" />
      <MemberSignature Language="F#" Value="member this.Negate : unit -&gt; TimeSpan" Usage="timeSpan.Negate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61768-360">このインスタンスの値とは符号が逆の値を持つ新しい <see cref="T:System.TimeSpan" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-360">Returns a new <see cref="T:System.TimeSpan" /> object whose value is the negated value of this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-361">このインスタンスの値と絶対値が同じで、逆の符号を持つ新しいオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-361">A new object with the same numeric value as this instance, but with the opposite sign.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61768-362">次の例では、適用、<xref:System.TimeSpan.Negate%2A>メソッドをいくつか<xref:System.TimeSpan>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-362">The following example applies the <xref:System.TimeSpan.Negate%2A> method to several <xref:System.TimeSpan> objects.</span></span>  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-363">このインスタンスの値と符号が逆の値を <see cref="T:System.TimeSpan" /> で表すことはできません。つまり、このインスタンスの値が <see cref="F:System.TimeSpan.MinValue" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-363">The negated value of this instance cannot be represented by a <see cref="T:System.TimeSpan" />; that is, the value of this instance is <see cref="F:System.TimeSpan.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static TimeSpan operator + (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Addition(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (t1 As TimeSpan, t2 As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator +(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : TimeSpan * TimeSpan -&gt; TimeSpan" Usage="t1 + t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">
          <span data-ttu-id="61768-364">加算する最初の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-364">The first time interval to add.</span>
          </span>
        </param>
        <param name="t2">
          <span data-ttu-id="61768-365">加算する 2 番目の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-365">The second time interval to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-366">指定した 2 つの <see cref="T:System.TimeSpan" /> インスタンスを加算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-366">Adds two specified <see cref="T:System.TimeSpan" /> instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-367">
            <paramref name="t1" /> と <paramref name="t2" /> の値の合計を値とするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-367">An object whose value is the sum of the values of <paramref name="t1" /> and <paramref name="t2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-368"><xref:System.TimeSpan.op_Addition%2A>メソッド定義の加算演算子<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-368">The <xref:System.TimeSpan.op_Addition%2A> method defines the addition operator for <xref:System.TimeSpan> values.</span></span> <span data-ttu-id="61768-369">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="61768-369">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.TimeSpan.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.operators/cs/operators1.cs#1)]
 [!code-vb[System.TimeSpan.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.operators/vb/operators1.vb#1)]  
  
 <span data-ttu-id="61768-370">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.TimeSpan.Add%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="61768-370">Languages that do not support custom operators can call the <xref:System.TimeSpan.Add%2A> method instead.</span></span>  
  
 <span data-ttu-id="61768-371">この演算子を同等のメソッドは、します。 <xref:System.TimeSpan.Add%28System.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="61768-371">The equivalent method for this operator is <xref:System.TimeSpan.Add%28System.TimeSpan%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-372">結果として返された <see cref="T:System.TimeSpan" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか、<see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-372">The resulting <see cref="T:System.TimeSpan" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.TimeSpan.Add(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static TimeSpan operator / (TimeSpan timeSpan, double divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Division(valuetype System.TimeSpan timeSpan, float64 divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Division(System.TimeSpan,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator /(TimeSpan timeSpan, double divisor);" />
      <MemberSignature Language="F#" Value="static member ( / ) : TimeSpan * double -&gt; TimeSpan" Usage="timeSpan / divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
        <Parameter Name="divisor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="timeSpan">To be added.</param>
        <param name="divisor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static double operator / (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Division(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Division(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (t1 As TimeSpan, t2 As TimeSpan) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double operator /(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( / ) : TimeSpan * TimeSpan -&gt; double" Usage="t1 / t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">To be added.</param>
        <param name="t2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 = t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">
          <span data-ttu-id="61768-373">比較する最初の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-373">The first time interval to compare.</span>
          </span>
        </param>
        <param name="t2">
          <span data-ttu-id="61768-374">比較する 2 番目の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-374">The second time interval to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-375">2 つの <see cref="T:System.TimeSpan" /> インスタンスが等しいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-375">Indicates whether two <see cref="T:System.TimeSpan" /> instances are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-376">
            <paramref name="t1" /> の値と <paramref name="t2" /> の値が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-376">
              <see langword="true" /> if the values of <paramref name="t1" /> and <paramref name="t2" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="61768-377">この演算子を同等のメソッドは、します。 <xref:System.TimeSpan.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="61768-377">The equivalent method for this operator is <xref:System.TimeSpan.Equals%28System.Object%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="61768-378">次の例がいくつかを比較<xref:System.TimeSpan>オブジェクトの参照を<xref:System.TimeSpan>を使用して、<xref:System.TimeSpan.op_Equality%2A>演算子。</span><span class="sxs-lookup"><span data-stu-id="61768-378">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.op_Equality%2A> operator.</span></span>  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 &gt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">
          <span data-ttu-id="61768-379">比較する最初の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-379">The first time interval to compare.</span>
          </span>
        </param>
        <param name="t2">
          <span data-ttu-id="61768-380">比較する 2 番目の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-380">The second time interval to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-381">指定した <see cref="T:System.TimeSpan" /> が、指定したもう 1 つの <see cref="T:System.TimeSpan" /> より大きいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-381">Indicates whether a specified <see cref="T:System.TimeSpan" /> is greater than another specified <see cref="T:System.TimeSpan" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-382">
            <paramref name="t1" /> の値が <paramref name="t2" /> の値より大きい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-382">
              <see langword="true" /> if the value of <paramref name="t1" /> is greater than the value of <paramref name="t2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="61768-383">この演算子を同等のメソッドは、します。 <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="61768-383">The equivalent method for this operator is <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="61768-384">次の例がいくつかを比較<xref:System.TimeSpan>オブジェクトの参照を<xref:System.TimeSpan>を使用して、<xref:System.TimeSpan.op_GreaterThan%2A>演算子。</span><span class="sxs-lookup"><span data-stu-id="61768-384">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.op_GreaterThan%2A> operator.</span></span>  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 &gt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">
          <span data-ttu-id="61768-385">比較する最初の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-385">The first time interval to compare.</span>
          </span>
        </param>
        <param name="t2">
          <span data-ttu-id="61768-386">比較する 2 番目の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-386">The second time interval to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-387">指定した <see cref="T:System.TimeSpan" /> が、指定したもう 1 つの <see cref="T:System.TimeSpan" /> 以上かどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-387">Indicates whether a specified <see cref="T:System.TimeSpan" /> is greater than or equal to another specified <see cref="T:System.TimeSpan" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-388">
            <paramref name="t1" /> の値が <paramref name="t2" /> の値以上の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-388">
              <see langword="true" /> if the value of <paramref name="t1" /> is greater than or equal to the value of <paramref name="t2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="61768-389">この演算子を同等のメソッドは、します。 <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="61768-389">The equivalent method for this operator is <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="61768-390">次の例がいくつかを比較<xref:System.TimeSpan>オブジェクトの参照を<xref:System.TimeSpan>を使用して、<xref:System.TimeSpan.op_GreaterThanOrEqual%2A>演算子。</span><span class="sxs-lookup"><span data-stu-id="61768-390">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.op_GreaterThanOrEqual%2A> operator.</span></span>  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : TimeSpan * TimeSpan -&gt; bool" Usage="System.TimeSpan.op_Inequality (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">
          <span data-ttu-id="61768-391">比較する最初の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-391">The first time interval to compare.</span>
          </span>
        </param>
        <param name="t2">
          <span data-ttu-id="61768-392">比較する 2 番目の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-392">The second time interval to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-393">
            <see cref="T:System.TimeSpan" /> の 2 つのインスタンスが等しくないかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-393">Indicates whether two <see cref="T:System.TimeSpan" /> instances are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-394">
            <paramref name="t1" /> の値と <paramref name="t2" /> の値が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-394">
              <see langword="true" /> if the values of <paramref name="t1" /> and <paramref name="t2" /> are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="61768-395">この演算子を同等のメソッドは、します。 <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="61768-395">The equivalent method for this operator is <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="61768-396">次の例がいくつかを比較<xref:System.TimeSpan>オブジェクトの参照を<xref:System.TimeSpan>を使用して、<xref:System.TimeSpan.op_Inequality%2A>演算子。</span><span class="sxs-lookup"><span data-stu-id="61768-396">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.op_Inequality%2A> operator.</span></span>  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 &lt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">
          <span data-ttu-id="61768-397">比較する最初の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-397">The first time interval to compare.</span>
          </span>
        </param>
        <param name="t2">
          <span data-ttu-id="61768-398">比較する 2 番目の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-398">The second time interval to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-399">指定した <see cref="T:System.TimeSpan" /> が、指定したもう 1 つの <see cref="T:System.TimeSpan" /> 未満かどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-399">Indicates whether a specified <see cref="T:System.TimeSpan" /> is less than another specified <see cref="T:System.TimeSpan" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-400">
            <see langword="true" /> の値が <paramref name="t1" /> の値より小さい場合は <paramref name="t2" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-400">
              <see langword="true" /> if the value of <paramref name="t1" /> is less than the value of <paramref name="t2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="61768-401">この演算子を同等のメソッドは、します。 <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="61768-401">The equivalent method for this operator is <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="61768-402">次の例がいくつかを比較<xref:System.TimeSpan>オブジェクトの参照を<xref:System.TimeSpan>を使用して、<xref:System.TimeSpan.op_LessThan%2A>演算子。</span><span class="sxs-lookup"><span data-stu-id="61768-402">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.op_LessThan%2A> operator.</span></span>  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 &lt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">
          <span data-ttu-id="61768-403">比較する最初の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-403">The first time interval to compare.</span>
          </span>
        </param>
        <param name="t2">
          <span data-ttu-id="61768-404">比較する 2 番目の時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-404">The second time interval to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-405">指定した <see cref="T:System.TimeSpan" /> が、指定したもう 1 つの <see cref="T:System.TimeSpan" /> 以下かどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-405">Indicates whether a specified <see cref="T:System.TimeSpan" /> is less than or equal to another specified <see cref="T:System.TimeSpan" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-406">
            <paramref name="t1" /> の値が <paramref name="t2" /> の値以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-406">
              <see langword="true" /> if the value of <paramref name="t1" /> is less than or equal to the value of <paramref name="t2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="61768-407">この演算子を同等のメソッドは、します。 <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="61768-407">The equivalent method for this operator is <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="61768-408">次の例がいくつかを比較<xref:System.TimeSpan>オブジェクトの参照を<xref:System.TimeSpan>を使用して、<xref:System.TimeSpan.op_LessThanOrEqual%2A>演算子。</span><span class="sxs-lookup"><span data-stu-id="61768-408">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.op_LessThanOrEqual%2A> operator.</span></span>  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static TimeSpan operator * (double factor, TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Multiply(float64 factor, valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Multiply(System.Double,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator *(double factor, TimeSpan timeSpan);" />
      <MemberSignature Language="F#" Value="static member ( * ) : double * TimeSpan -&gt; TimeSpan" Usage="factor * timeSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Double" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="factor">To be added.</param>
        <param name="timeSpan">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static TimeSpan operator * (TimeSpan timeSpan, double factor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Multiply(valuetype System.TimeSpan timeSpan, float64 factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Multiply(System.TimeSpan,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator *(TimeSpan timeSpan, double factor);" />
      <MemberSignature Language="F#" Value="static member ( * ) : TimeSpan * double -&gt; TimeSpan" Usage="timeSpan * factor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
        <Parameter Name="factor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="timeSpan">To be added.</param>
        <param name="factor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (t1 As TimeSpan, t2 As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : TimeSpan * TimeSpan -&gt; TimeSpan" Usage="t1 - t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">
          <span data-ttu-id="61768-409">被減数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-409">The minuend.</span>
          </span>
        </param>
        <param name="t2">
          <span data-ttu-id="61768-410">減数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-410">The subtrahend.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-411">指定したもう 1 つの <see cref="T:System.TimeSpan" /> から、指定した <see cref="T:System.TimeSpan" /> を減算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-411">Subtracts a specified <see cref="T:System.TimeSpan" /> from another specified <see cref="T:System.TimeSpan" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-412">
            <paramref name="t2" /> の値から <paramref name="t1" /> の値を減算した結果を値とするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-412">An object whose value is the result of the value of <paramref name="t1" /> minus the value of <paramref name="t2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="61768-413">この演算子を同等のメソッドは、します。 <xref:System.TimeSpan.Subtract%28System.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="61768-413">The equivalent method for this operator is <xref:System.TimeSpan.Subtract%28System.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="61768-414">次の例では、<xref:System.TimeSpan>減算演算子を週単位の作業日の合計の長さを計算します。</span><span class="sxs-lookup"><span data-stu-id="61768-414">The following example uses the <xref:System.TimeSpan> subtraction operator to calculate the total length of the weekly work day.</span></span> <span data-ttu-id="61768-415">また、使用、<xref:System.TimeSpan>減算演算の毎日の作業時間の実際の合計を計算するために使用する前に日単位の区切りの時間の合計を計算する加算演算子。</span><span class="sxs-lookup"><span data-stu-id="61768-415">It also uses the <xref:System.TimeSpan> addition operator to compute the total time of the daily breaks before using it in a subtraction operation to compute the total actual daily working time.</span></span>  
  
 [!code-csharp[System.TimeSpan.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.operators/cs/Subtraction1.cs#2)]
 [!code-vb[System.TimeSpan.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.operators/vb/Subtraction1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-416">戻り値が <see cref="F:System.TimeSpan.MinValue" /> 未満であるか、<see cref="F:System.TimeSpan.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-416">The return value is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_UnaryNegation(valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_UnaryNegation(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (t As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : TimeSpan -&gt; TimeSpan" Usage="- t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="61768-417">符号が反転される時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-417">The time interval to be negated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-418">指定したインスタンスの値とは符号が逆の値を持つ <see cref="T:System.TimeSpan" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-418">Returns a <see cref="T:System.TimeSpan" /> whose value is the negated value of the specified instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-419">このインスタンスの値と絶対値が同じで、逆の符号を持つオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-419">An object that has the same numeric value as this instance, but the opposite sign.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="61768-420">この演算子を同等のメソッドは、します。 <xref:System.TimeSpan.Negate?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="61768-420">The equivalent method for this operator is <xref:System.TimeSpan.Negate?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="61768-421">次の例では、適用、<xref:System.TimeSpan.op_UnaryNegation%2A>から複数の演算子<xref:System.TimeSpan>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-421">The following example applies the <xref:System.TimeSpan.op_UnaryNegation%2A> operator to several <xref:System.TimeSpan> objects.</span></span>  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-422">このインスタンスの値と符号が逆の値を <see cref="T:System.TimeSpan" /> で表すことはできません。つまり、このインスタンスの値が <see cref="F:System.TimeSpan.MinValue" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-422">The negated value of this instance cannot be represented by a <see cref="T:System.TimeSpan" />; that is, the value of this instance is <see cref="F:System.TimeSpan.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static TimeSpan operator + (TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_UnaryPlus(valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_UnaryPlus(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (t As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator +(TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : TimeSpan -&gt; TimeSpan" Usage="+ t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="61768-423">返される時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-423">The time interval to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-424">
            <see cref="T:System.TimeSpan" /> の指定したインスタンスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-424">Returns the specified instance of <see cref="T:System.TimeSpan" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-425">
            <paramref name="t" /> で指定された時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-425">The time interval specified by <paramref name="t" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61768-426">次の例では、適用、<xref:System.TimeSpan.op_UnaryPlus%2A>から複数の演算子<xref:System.TimeSpan>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-426">The following example applies the <xref:System.TimeSpan.op_UnaryPlus%2A> operator to several <xref:System.TimeSpan> objects.</span></span>  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61768-427">時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-427">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.TimeSpan.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; TimeSpan" Usage="System.TimeSpan.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="61768-428">変換する時間間隔を指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-428">A string that specifies the time interval to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-429">時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-429">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-430">
            <paramref name="s" /> に対応する時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-430">A time interval that corresponds to <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-431">`s`パラメーターに含まれる形で時間間隔を指定します。</span><span class="sxs-lookup"><span data-stu-id="61768-431">The `s` parameter contains a time interval specification in the form:</span></span>  
  
 <span data-ttu-id="61768-432">[*ws*] [-] { *d* &#124; [*d*.]*hh*:*mm*[:*ss*[.*ff*]} [*ws*]</span><span class="sxs-lookup"><span data-stu-id="61768-432">[*ws*][-]{ *d* &#124; [*d*.]*hh*:*mm*[:*ss*[.*ff*]] }[*ws*]</span></span>  
  
 <span data-ttu-id="61768-433">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="61768-433">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="61768-434">中かっこで囲まれた代替の一覧から 1 つの範囲 ({および}) の縦棒で区切られた (&#124;) が必要です。</span><span class="sxs-lookup"><span data-stu-id="61768-434">One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (&#124;) is required.</span></span> <span data-ttu-id="61768-435">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="61768-435">The following table describes each element.</span></span>  
  
|<span data-ttu-id="61768-436">要素</span><span class="sxs-lookup"><span data-stu-id="61768-436">Element</span></span>|<span data-ttu-id="61768-437">説明</span><span class="sxs-lookup"><span data-stu-id="61768-437">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="61768-438">*ws*</span><span class="sxs-lookup"><span data-stu-id="61768-438">*ws*</span></span>|<span data-ttu-id="61768-439">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="61768-439">Optional white space.</span></span>|  
|-|<span data-ttu-id="61768-440">負の値を示すオプションのマイナス記号、<xref:System.TimeSpan>します。</span><span class="sxs-lookup"><span data-stu-id="61768-440">An optional minus sign, which indicates a negative <xref:System.TimeSpan>.</span></span>|  
|<span data-ttu-id="61768-441">*d*</span><span class="sxs-lookup"><span data-stu-id="61768-441">*d*</span></span>|<span data-ttu-id="61768-442">0 から 10,675, 199 までの日数。</span><span class="sxs-lookup"><span data-stu-id="61768-442">Days, ranging from 0 to 10675199.</span></span>|  
|<span data-ttu-id="61768-443">である必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-443">.</span></span>|<span data-ttu-id="61768-444">時間単位から日を分離するカルチャを認識する記号です。</span><span class="sxs-lookup"><span data-stu-id="61768-444">A culture-sensitive symbol that separates days from hours.</span></span> <span data-ttu-id="61768-445">ピリオドを使用する、インバリアント形式 (".") 文字。</span><span class="sxs-lookup"><span data-stu-id="61768-445">The invariant format uses a period (".") character.</span></span>|  
|<span data-ttu-id="61768-446">*hh*</span><span class="sxs-lookup"><span data-stu-id="61768-446">*hh*</span></span>|<span data-ttu-id="61768-447">0 から 23 までの時間。</span><span class="sxs-lookup"><span data-stu-id="61768-447">Hours, ranging from 0 to 23.</span></span>|  
|<span data-ttu-id="61768-448">:</span><span class="sxs-lookup"><span data-stu-id="61768-448">:</span></span>|<span data-ttu-id="61768-449">カルチャに依存する時間の区切り記号です。</span><span class="sxs-lookup"><span data-stu-id="61768-449">The culture-sensitive time separator symbol.</span></span> <span data-ttu-id="61768-450">インバリアントの形式は、コロンを使用して (":") 文字。</span><span class="sxs-lookup"><span data-stu-id="61768-450">The invariant format uses a colon (":") character.</span></span>|  
|<span data-ttu-id="61768-451">*mm*</span><span class="sxs-lookup"><span data-stu-id="61768-451">*mm*</span></span>|<span data-ttu-id="61768-452">0 から 59 までの分。</span><span class="sxs-lookup"><span data-stu-id="61768-452">Minutes, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="61768-453">*ss*</span><span class="sxs-lookup"><span data-stu-id="61768-453">*ss*</span></span>|<span data-ttu-id="61768-454">0 から 59 まで省略可能な秒。</span><span class="sxs-lookup"><span data-stu-id="61768-454">Optional seconds, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="61768-455">*.*</span><span class="sxs-lookup"><span data-stu-id="61768-455">*.*</span></span>|<span data-ttu-id="61768-456">秒の端数の秒を分離するカルチャを認識する記号です。</span><span class="sxs-lookup"><span data-stu-id="61768-456">A culture-sensitive symbol that separates seconds from fractions of a second.</span></span> <span data-ttu-id="61768-457">ピリオドを使用する、インバリアント形式 (".") 文字。</span><span class="sxs-lookup"><span data-stu-id="61768-457">The invariant format uses a period (".") character.</span></span>|  
|<span data-ttu-id="61768-458">*ff*</span><span class="sxs-lookup"><span data-stu-id="61768-458">*ff*</span></span>|<span data-ttu-id="61768-459">省略可能な秒の小数部を 1 ~ 7 桁です。</span><span class="sxs-lookup"><span data-stu-id="61768-459">Optional fractional seconds, consisting of one to seven decimal digits.</span></span>|  

<span data-ttu-id="61768-460">場合、`s`引数が日付の値のみを時間と分コンポーネントを含めることは; その他のコンポーネントは省略可能です。</span><span class="sxs-lookup"><span data-stu-id="61768-460">If the `s` argument is not a day value only, it must include an hours and a minutes component; other components are optional.</span></span> <span data-ttu-id="61768-461">存在する場合は、各時刻要素の値はする必要があります指定範囲内で分類されます。</span><span class="sxs-lookup"><span data-stu-id="61768-461">If they are present, the values of each time component must fall within a specified range.</span></span> <span data-ttu-id="61768-462">たとえば、値の*hh*時間の部分が 0 ~ 23 の範囲にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-462">For example, the value of *hh*, the hours component, must be between 0 and 23.</span></span> <span data-ttu-id="61768-463">このを渡すのため"23: 00:00"に、 <xref:System.TimeSpan.Parse%2A> 23 時間の時間間隔を返します。</span><span class="sxs-lookup"><span data-stu-id="61768-463">Because of this, passing "23:00:00" to the <xref:System.TimeSpan.Parse%2A> method returns a time interval of 23 hours.</span></span> <span data-ttu-id="61768-464">その一方で、渡す"24: 00:00"24 日の時間間隔を返します。</span><span class="sxs-lookup"><span data-stu-id="61768-464">On the other hand, passing "24:00:00" returns a time interval of 24 days.</span></span> <span data-ttu-id="61768-465">「24」は時間の部分の範囲外であるために、その日の部分として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="61768-465">Because "24" is outside the range of the hours component, it is interpreted as the days component.</span></span>

 <span data-ttu-id="61768-466">コンポーネント`s`より大きいまたは等しい時間間隔をまとめて指定する必要があります<xref:System.TimeSpan.MinValue?displayProperty=nameWithType>以下と等しい、<xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="61768-466">The components of `s` must collectively specify a time interval that is greater than or equal to <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> and less than or equal to <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="61768-467"><xref:System.TimeSpan.Parse%28System.String%29>メソッドが、解析しようとしています。 `s` 、現在のカルチャのカルチャに固有の形式を使用しています。</span><span class="sxs-lookup"><span data-stu-id="61768-467">The <xref:System.TimeSpan.Parse%28System.String%29> method tries to parse `s` by using each of the culture-specific formats for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-468">次の例では、<xref:System.TimeSpan.Parse%2A>文字列配列に各要素に変換するメソッド、<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-468">The following example uses the <xref:System.TimeSpan.Parse%2A> method to convert each element in a string array to a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="61768-469">クロアチア語、クロアチア ("人事 HR") と英語 - 米国 ("EN-US") を現在のシステム カルチャが解析操作に与える影響を示すために、現在のシステム カルチャを変更します。</span><span class="sxs-lookup"><span data-stu-id="61768-469">It changes the current system culture to Croatian - Croatia ("hr-HR") and English - United States ("en-US") to illustrate how the current system culture affects the parsing operation.</span></span>  
  
 [!code-csharp[System.TimeSpan.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parse1.cs#1)]
 [!code-vb[System.TimeSpan.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61768-470">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-470">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="61768-471">
            <paramref name="s" /> の形式が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-471">
              <paramref name="s" /> has an invalid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-472">
            <paramref name="s" /> は <see cref="F:System.TimeSpan.MinValue" /> 未満の数値か、<see cref="F:System.TimeSpan.MaxValue" /> より大きい数値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-472">
              <paramref name="s" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
          <span data-ttu-id="61768-473">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-473">-or-</span>
          </span>
          <span data-ttu-id="61768-474">日、時間、分、または秒のコンポーネントのうち少なくとも 1 つが、その有効範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-474">At least one of the days, hours, minutes, or seconds components is outside its valid range.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="61768-475">
            <para>解析対象の文字列で時間間隔のコンポーネントに解析操作で複数の 7 桁の数字が含まれているとき、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]と以前のバージョンが異なると、解析操作で動作が、[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]します。場合によっては、解析に成功した操作、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]と以前のバージョンが失敗して、スロー、<see cref="T:System.OverflowException" />で、[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]します。それ以外の場合は、解析操作をスローする、<see cref="T:System.FormatException" />で、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]と以前のバージョンが失敗して、スロー、<see cref="T:System.OverflowException" />で、[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]します。次の例は、両方のシナリオを示しています。 [! コード csharp[System.TimeSpan.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parsefailure1.cs#3)] [! コード vb[System.TimeSpan.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parsefailure1.vb#3)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-475">
              <para>When a time interval component in the string to be parsed contains more than seven digits, parsing operations in the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions may behave differently from parsing operations in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. In some cases, parsing operations that succeed in the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions may fail and throw an <see cref="T:System.OverflowException" /> in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. In other cases, parsing operations that throw a <see cref="T:System.FormatException" /> in the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions may fail and throw an <see cref="T:System.OverflowException" /> in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. The following example illustrates both scenarios.  [!code-csharp[System.TimeSpan.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parsefailure1.cs#3)] [!code-vb[System.TimeSpan.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parsefailure1.vb#3)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char), Optional formatProvider As IFormatProvider = null) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; TimeSpan" Usage="System.TimeSpan.Parse (input, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (string input, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(string input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan Parse(System::String ^ input, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; TimeSpan" Usage="System.TimeSpan.Parse (input, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="61768-476">変換する時間間隔を指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-476">A string that specifies the time interval to convert.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="61768-477">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-477">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-478">指定したカルチャ固有の書式情報を使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-478">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-479">
            <paramref name="formatProvider" /> の指定に従って変換された、<paramref name="input" /> に対応する時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-479">A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="formatProvider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-480">`input`パラメーターに含まれる形で時間間隔を指定します。</span><span class="sxs-lookup"><span data-stu-id="61768-480">The `input` parameter contains a time interval specification in the form:</span></span>  
  
 <span data-ttu-id="61768-481">[*ws*] [-] { *d* &#124; [*d*.]*hh*:*mm*[:*ss*[.*ff*]} [*ws*]</span><span class="sxs-lookup"><span data-stu-id="61768-481">[*ws*][-]{ *d* &#124; [*d*.]*hh*:*mm*[:*ss*[.*ff*]] }[*ws*]</span></span>  
  
 <span data-ttu-id="61768-482">要素の角かっこ ([と]) は省略可能です。中かっこで囲まれた代替の一覧から 1 つの範囲 ({および}) の縦棒で区切られた (&#124;) が必要です。</span><span class="sxs-lookup"><span data-stu-id="61768-482">Elements in square brackets ([ and ]) are optional; one selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (&#124;) is required.</span></span> <span data-ttu-id="61768-483">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="61768-483">The following table describes each element.</span></span>  
  
|<span data-ttu-id="61768-484">要素</span><span class="sxs-lookup"><span data-stu-id="61768-484">Element</span></span>|<span data-ttu-id="61768-485">説明</span><span class="sxs-lookup"><span data-stu-id="61768-485">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="61768-486">*ws*</span><span class="sxs-lookup"><span data-stu-id="61768-486">*ws*</span></span>|<span data-ttu-id="61768-487">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="61768-487">Optional white space.</span></span>|  
|-|<span data-ttu-id="61768-488">負の値を示すオプションのマイナス記号、<xref:System.TimeSpan>します。</span><span class="sxs-lookup"><span data-stu-id="61768-488">An optional minus sign, which indicates a negative <xref:System.TimeSpan>.</span></span>|  
|<span data-ttu-id="61768-489">*d*</span><span class="sxs-lookup"><span data-stu-id="61768-489">*d*</span></span>|<span data-ttu-id="61768-490">0 から 10,675, 199 までの日数。</span><span class="sxs-lookup"><span data-stu-id="61768-490">Days, ranging from 0 to 10675199.</span></span>|  
|<span data-ttu-id="61768-491">である必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-491">.</span></span>|<span data-ttu-id="61768-492">時間単位から日を分離するカルチャを認識する記号です。</span><span class="sxs-lookup"><span data-stu-id="61768-492">A culture-sensitive symbol that separates days from hours.</span></span> <span data-ttu-id="61768-493">既定値は、ピリオド (".") 文字。</span><span class="sxs-lookup"><span data-stu-id="61768-493">The default value is a period (".") character.</span></span>|  
|<span data-ttu-id="61768-494">*hh*</span><span class="sxs-lookup"><span data-stu-id="61768-494">*hh*</span></span>|<span data-ttu-id="61768-495">0 から 23 までの時間。</span><span class="sxs-lookup"><span data-stu-id="61768-495">Hours, ranging from 0 to 23.</span></span>|  
|<span data-ttu-id="61768-496">:</span><span class="sxs-lookup"><span data-stu-id="61768-496">:</span></span>|<span data-ttu-id="61768-497">カルチャに依存する時間の区切り記号です。</span><span class="sxs-lookup"><span data-stu-id="61768-497">The culture-sensitive time separator symbol.</span></span>|  
|<span data-ttu-id="61768-498">*mm*</span><span class="sxs-lookup"><span data-stu-id="61768-498">*mm*</span></span>|<span data-ttu-id="61768-499">0 から 59 までの分。</span><span class="sxs-lookup"><span data-stu-id="61768-499">Minutes, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="61768-500">*ss*</span><span class="sxs-lookup"><span data-stu-id="61768-500">*ss*</span></span>|<span data-ttu-id="61768-501">0 から 59 まで省略可能な秒。</span><span class="sxs-lookup"><span data-stu-id="61768-501">Optional seconds, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="61768-502">である必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-502">.</span></span>|<span data-ttu-id="61768-503">秒の端数の秒を分離するカルチャを認識する記号です。</span><span class="sxs-lookup"><span data-stu-id="61768-503">A culture-sensitive symbol that separates seconds from fractions of a second.</span></span> <span data-ttu-id="61768-504">既定値は、ピリオド (".") 文字。</span><span class="sxs-lookup"><span data-stu-id="61768-504">The default value is a period (".") character.</span></span>|  
|<span data-ttu-id="61768-505">*ff*</span><span class="sxs-lookup"><span data-stu-id="61768-505">*ff*</span></span>|<span data-ttu-id="61768-506">省略可能な秒の小数部を 1 ~ 7 桁です。</span><span class="sxs-lookup"><span data-stu-id="61768-506">Optional fractional seconds, consisting of one to seven decimal digits.</span></span>|  

<span data-ttu-id="61768-507">場合、`input`引数が日付の値のみを時間と分コンポーネントを含めることは; その他のコンポーネントは省略可能です。</span><span class="sxs-lookup"><span data-stu-id="61768-507">If the `input` argument is not a day value only, it must include an hours and a minutes component; other components are optional.</span></span> <span data-ttu-id="61768-508">存在する場合は、各時刻要素の値はする必要があります指定範囲内で分類されます。</span><span class="sxs-lookup"><span data-stu-id="61768-508">If they are present, the values of each time component must fall within a specified range.</span></span> <span data-ttu-id="61768-509">たとえば、値の*hh*時間の部分が 0 ~ 23 の範囲にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-509">For example, the value of *hh*, the hours component, must be between 0 and 23.</span></span> <span data-ttu-id="61768-510">このを渡すのため"23: 00:00"に、 <xref:System.TimeSpan.Parse%2A> 23 時間の時間間隔を返します。</span><span class="sxs-lookup"><span data-stu-id="61768-510">Because of this, passing "23:00:00" to the <xref:System.TimeSpan.Parse%2A> method returns a time interval of 23 hours.</span></span> <span data-ttu-id="61768-511">その一方で、渡す"24: 00:00"24 日の時間間隔を返します。</span><span class="sxs-lookup"><span data-stu-id="61768-511">On the other hand, passing "24:00:00" returns a time interval of 24 days.</span></span> <span data-ttu-id="61768-512">「24」は時間の部分の範囲外であるために、その日の部分として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="61768-512">Because "24" is outside the range of the hours component, it is interpreted as the days component.</span></span>

 <span data-ttu-id="61768-513">コンポーネント`input`より大きいまたは等しい時間間隔をまとめて指定する必要があります<xref:System.TimeSpan.MinValue?displayProperty=nameWithType>以下と等しい、<xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="61768-513">The components of `input` must collectively specify a time interval that is greater than or equal to <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> and less than or equal to <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="61768-514"><xref:System.TimeSpan.Parse%28System.String%29>メソッドが、解析しようとしています。`input`のカルチャに固有の形式で指定されたカルチャを使用して`formatProvider`します。</span><span class="sxs-lookup"><span data-stu-id="61768-514">The <xref:System.TimeSpan.Parse%28System.String%29> method tries to parse `input` by using each of the culture-specific formats for the culture specified by `formatProvider`.</span></span>  
  
 <span data-ttu-id="61768-515">`formatProvider`パラメーターは、<xref:System.IFormatProvider>返される文字列の書式設定に関するカルチャに固有の情報を提供する実装。</span><span class="sxs-lookup"><span data-stu-id="61768-515">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string.</span></span> <span data-ttu-id="61768-516">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-516">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="61768-517">A<xref:System.Globalization.CultureInfo>書式指定規則が返される文字列に反映するのには、カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-517">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="61768-518"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティが返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="61768-518">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-519">A<xref:System.Globalization.DateTimeFormatInfo>返される文字列の書式設定を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-519">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-520">実装するカスタム オブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="61768-520">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="61768-521">その<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-521">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="61768-522">場合`formatProvider`は`null`、<xref:System.Globalization.DateTimeFormatInfo>現在のカルチャに関連付けられているオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-522">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-523">次の例の配列を定義する<xref:System.Globalization.CultureInfo>オブジェクト、および呼び出しで各オブジェクトを使用して、<xref:System.TimeSpan.Parse%28System.String%2CSystem.IFormatProvider%29>文字列配列内の要素を解析します。</span><span class="sxs-lookup"><span data-stu-id="61768-523">The following example defines an array of <xref:System.Globalization.CultureInfo> objects, and uses each object in calls to the <xref:System.TimeSpan.Parse%28System.String%2CSystem.IFormatProvider%29> method to parse the elements in a string array.</span></span> <span data-ttu-id="61768-524">この例では、特定のカルチャの規則が、書式設定操作にどのように影響するかを示します。</span><span class="sxs-lookup"><span data-stu-id="61768-524">The example illustrates how the conventions of a specific culture influence the formatting operation.</span></span>  
  
 [!code-csharp[System.TimeSpan.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parse2.cs#2)]
 [!code-vb[System.TimeSpan.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61768-525">
            <paramref name="input" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-525">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="61768-526">
            <paramref name="input" /> の形式が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-526">
              <paramref name="input" /> has an invalid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-527">
            <paramref name="input" /> は <see cref="F:System.TimeSpan.MinValue" /> 未満の数値か、<see cref="F:System.TimeSpan.MaxValue" /> より大きい数値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-527">
              <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
          <span data-ttu-id="61768-528">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-528">-or-</span>
          </span>
          <span data-ttu-id="61768-529">
            <paramref name="input" /> に含まれる日、時間、分、秒の各構成要素のうち、少なくとも 1 つが有効値の範囲にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-529">At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="61768-530">
            <para>解析対象の文字列で時間間隔のコンポーネントに解析操作で複数の 7 桁の数字が含まれているとき、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]と以前のバージョンが異なると、解析操作で動作が、[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]します。場合によっては、解析に成功した操作、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]と以前のバージョンが失敗して、スロー、<see cref="T:System.OverflowException" />で、[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]します。それ以外の場合は、解析操作をスローする、<see cref="T:System.FormatException" />で、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]と以前のバージョンが失敗して、スロー、<see cref="T:System.OverflowException" />で、[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]します。次の例は、両方のシナリオを示しています。 [! コード csharp[System.TimeSpan.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parsefailure1.cs#3)] [! コード vb[System.TimeSpan.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parsefailure1.vb#3)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-530">
              <para>When a time interval component in the string to be parsed contains more than seven digits, parsing operations in the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions may behave differently from parsing operations in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. In some cases, parsing operations that succeed in the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions may fail and throw an <see cref="T:System.OverflowException" /> in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. In other cases, parsing operations that throw a <see cref="T:System.FormatException" /> in the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions may fail and throw an <see cref="T:System.OverflowException" /> in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. The following example illustrates both scenarios.  [!code-csharp[System.TimeSpan.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parsefailure1.cs#3)] [!code-vb[System.TimeSpan.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parsefailure1.vb#3)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61768-531">時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-531">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent.</span>
          </span>
          <span data-ttu-id="61768-532">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-532">The format of the string representation must match a specified format exactly.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.TimeSpan.TryParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="61768-533">変換する時間間隔を指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-533">A string that specifies the time interval to convert.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="61768-534">
            <c>input</c> に要求される書式を定義する標準またはカスタムの書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-534">A standard or custom format string that defines the required format of <c>input</c>.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="61768-535">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-535">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-536">指定した書式とカルチャ固有の書式情報を使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-536">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified format and culture-specific format information.</span>
          </span>
          <span data-ttu-id="61768-537">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-537">The format of the string representation must match the specified format exactly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-538">
            <paramref name="format" /> および <paramref name="formatProvider" /> の指定に従って変換された、<paramref name="input" /> に対応する時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-538">A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-539"><xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29>メソッドで定義された書式である必要があります時間間隔の文字列表現を解析し、`format`パラメーター、その先頭および末尾の空白文字が無視される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="61768-539">The <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method parses the string representation of a time interval, which must be in the format defined by the `format` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="61768-540">`input`の形式に準拠している必要があります`format`正確を使用する例外処理、ユーザーが入力された文字列を時間間隔に変換するときにします。</span><span class="sxs-lookup"><span data-stu-id="61768-540">Because `input` must conform to the format of `format` exactly, you should always use exception handling when converting a string input by the user to a time interval.</span></span> <span data-ttu-id="61768-541">例外処理を使用しない場合を呼び出すことができます、<xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="61768-541">If you prefer not to use exception handling, you can call the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method instead.</span></span>  
  
 <span data-ttu-id="61768-542">`format`パラメーターは、1 つの標準書式指定子、または必要な書式を定義する 1 つまたは複数のカスタム書式指定子を含む文字列`input`します。</span><span class="sxs-lookup"><span data-stu-id="61768-542">The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="61768-543">有効な書式指定文字列についての詳細については、次を参照してください。[標準 TimeSpan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)と[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="61768-543">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="61768-544"><xref:System.TimeSpan.ParseExact%2A>メソッドで指定されたカルチャの規則を使用する、`formatProvider`場合にのみパラメーター`format`標準<xref:System.TimeSpan>値の"g"または"G"のいずれかの文字列の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="61768-544">The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the `formatProvider` parameter only if `format` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="61768-545">"C"、"t"および"T"標準書式指定文字列は、インバリアント カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-545">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="61768-546">カスタム書式指定文字列は、入力文字列の正確な形式を定義し、リテラル文字を使用して時間間隔のコンポーネントを分離します。</span><span class="sxs-lookup"><span data-stu-id="61768-546">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="61768-547">`formatProvider`パラメーターは、<xref:System.IFormatProvider>場合、返される文字列の書式設定に関するカルチャに固有の情報を提供する実装`format`は標準書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="61768-547">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if `format` is a standard format string.</span></span> <span data-ttu-id="61768-548">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-548">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="61768-549">A<xref:System.Globalization.CultureInfo>書式指定規則が返される文字列に反映するのには、カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-549">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="61768-550"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティが返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="61768-550">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-551">A<xref:System.Globalization.DateTimeFormatInfo>返される文字列の書式設定を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-551">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-552">実装するカスタム オブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="61768-552">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="61768-553">その<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-553">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="61768-554">場合`formatProvider`は`null`、<xref:System.Globalization.DateTimeFormatInfo>現在のカルチャに関連付けられているオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-554">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-555">次の例では、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29>さまざまな書式指定文字列とカルチャを使用して時間間隔のいくつかの文字列表現を解析します。</span><span class="sxs-lookup"><span data-stu-id="61768-555">The following example uses the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method to parse several string representations of time intervals using various format strings and cultures.</span></span>  
  
 [!code-csharp[System.TimeSpan.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample1.cs#1)]
 [!code-vb[System.TimeSpan.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61768-556">
            <paramref name="input" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-556">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="61768-557">
            <paramref name="input" /> の形式が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-557">
              <paramref name="input" /> has an invalid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-558">
            <paramref name="input" /> は <see cref="F:System.TimeSpan.MinValue" /> 未満の数値か、<see cref="F:System.TimeSpan.MaxValue" /> より大きい数値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-558">
              <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
          <span data-ttu-id="61768-559">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-559">-or-</span>
          </span>
          <span data-ttu-id="61768-560">
            <paramref name="input" /> に含まれる日、時間、分、秒の各構成要素のうち、少なくとも 1 つが有効値の範囲にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-560">At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string[] formats, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, formats As String(), formatProvider As IFormatProvider) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, formats, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="61768-561">変換する時間間隔を指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-561">A string that specifies the time interval to convert.</span>
          </span>
        </param>
        <param name="formats">
          <span data-ttu-id="61768-562">
            <c>input</c> に要求される書式を定義する標準またはカスタムの書式指定文字列の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-562">A array of standard or custom format strings that defines the required format of <c>input</c>.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="61768-563">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-563">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-564">指定した書式指定文字列の配列とカルチャ固有の書式情報を使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-564">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified array of format strings and culture-specific format information.</span>
          </span>
          <span data-ttu-id="61768-565">文字列形式の書式は、指定されたいずれかの書式と完全に一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-565">The format of the string representation must match one of the specified formats exactly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-566">
            <paramref name="formats" /> および <paramref name="formatProvider" /> の指定に従って変換された、<paramref name="input" /> に対応する時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-566">A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="formats" /> and <paramref name="formatProvider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-567"><xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29>メソッドにより定義された形式のいずれかである必要があります時間間隔の文字列表現を解析し、`formats`パラメーター、その先頭および末尾の空白文字が無視される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="61768-567">The <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method parses the string representation of a time interval, which must be in one of the formats defined by the `formats` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="61768-568">`input`で指定された形式のいずれかに正確に従っている必要があります`formats`、時間間隔をユーザーが入力された文字列を変換するときに常に、例外処理を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-568">Because `input` must exactly conform to one of the formats specified in `formats`, you should always use exception handling when converting a string input by the user to a time interval.</span></span> <span data-ttu-id="61768-569">例外処理を使用しない場合を呼び出すことができます、<xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="61768-569">If you prefer not to use exception handling, you can call the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method instead.</span></span>  
  
 <span data-ttu-id="61768-570">`formats`パラメーターは文字列配列で 1 つの標準書式指定子、または必要な書式を定義する 1 つまたは複数のカスタム書式指定子のいずれかの要素で構成されます`input`します。</span><span class="sxs-lookup"><span data-stu-id="61768-570">The `formats` parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="61768-571">有効な書式指定文字列についての詳細については、次を参照してください。[標準 TimeSpan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)と[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="61768-571">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span> <span data-ttu-id="61768-572">`input` メンバーと正確に一致する必要があります`formats`解析操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="61768-572">`input` must correspond exactly to a member of `formats` for the parse operation to succeed.</span></span> <span data-ttu-id="61768-573">解析操作が、照合しようとしています。`input`内の各要素に`formats`以降では、配列の最初の要素。</span><span class="sxs-lookup"><span data-stu-id="61768-573">The parse operation attempts to match `input` to each element in `formats` starting with the first element in the array.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="61768-574"><xref:System.TimeSpan.ParseExact%2A>メソッドで指定されたカルチャの規則を使用する、`formatProvider`パラメーター書式指定文字列を解析するために使用する場合にのみ`input`標準<xref:System.TimeSpan>値の"g"または"G"のいずれかの文字列の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="61768-574">The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the `formatProvider` parameter only if the format string used to parse `input` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="61768-575">"C"、"t"および"T"標準書式指定文字列は、インバリアント カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-575">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="61768-576">カスタム書式指定文字列は、入力文字列の正確な形式を定義し、リテラル文字を使用して時間間隔のコンポーネントを分離します。</span><span class="sxs-lookup"><span data-stu-id="61768-576">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="61768-577">`formatProvider`パラメーターは、<xref:System.IFormatProvider>書式指定文字列を解析するために使用する場合に返される文字列の書式設定に関するカルチャに固有の情報を提供する実装`input`は標準書式指定文字列です。</span><span class="sxs-lookup"><span data-stu-id="61768-577">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if the format string used to parse `input` is a standard format string.</span></span> <span data-ttu-id="61768-578">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-578">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="61768-579">A<xref:System.Globalization.CultureInfo>書式指定規則が返される文字列に反映するのには、カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-579">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="61768-580"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティが返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="61768-580">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-581">A<xref:System.Globalization.DateTimeFormatInfo>返される文字列の書式設定を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-581">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-582">実装するカスタム オブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="61768-582">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="61768-583">その<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-583">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="61768-584">場合`formatProvider`は`null`、<xref:System.Globalization.DateTimeFormatInfo>現在のカルチャに関連付けられているオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-584">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-585">次の例では、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%29>への文字列配列の各要素に変換するメソッド、<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-585">The following example calls the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%29> method to convert each element of a string array to a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="61768-586">この例では、フランス語 - フランス ("FR-FR") カルチャの書式指定規則を使用して文字列を解釈します。</span><span class="sxs-lookup"><span data-stu-id="61768-586">The example interprets the strings using the formatting conventions of the French - France ("fr-FR") culture.</span></span> <span data-ttu-id="61768-587">文字列は、一般の短い形式または一般の長い形式のいずれかで、時間間隔を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="61768-587">The strings can represent a time interval in either the general short format or the general long format.</span></span>  
  
 <span data-ttu-id="61768-588">さらに、時間間隔の解析メソッドが 1 桁の数字を解釈する方法を変更します。</span><span class="sxs-lookup"><span data-stu-id="61768-588">In addition, the example changes the way in which the time interval parsing methods interpret a single digit.</span></span> <span data-ttu-id="61768-589">通常、1 桁の数字は、時間間隔の日数として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="61768-589">Ordinarily, a single digit is interpreted as the number of days in a time interval.</span></span> <span data-ttu-id="61768-590">代わりに、`%h`カスタム書式指定文字列は 1 桁の数字を時間数として解釈するために使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-590">Instead, the `%h` custom format string is used to interpret a single digit as the number of hours.</span></span> <span data-ttu-id="61768-591">この変更を有効にするには、ことに注意して、`%h`カスタム書式指定文字列でその他の書式指定文字列を付ける必要があります、`formats`配列。</span><span class="sxs-lookup"><span data-stu-id="61768-591">For this change to be effective, note that the `%h` custom format string must precede the other format strings in the `formats` array.</span></span>  
  
 [!code-csharp[System.TimeSpan.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample3.cs#3)]
 [!code-vb[System.TimeSpan.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61768-592">
            <paramref name="input" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-592">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="61768-593">
            <paramref name="input" /> の形式が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-593">
              <paramref name="input" /> has an invalid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-594">
            <paramref name="input" /> は <see cref="F:System.TimeSpan.MinValue" /> 未満の数値か、<see cref="F:System.TimeSpan.MaxValue" /> より大きい数値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-594">
              <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
          <span data-ttu-id="61768-595">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-595">-or-</span>
          </span>
          <span data-ttu-id="61768-596">
            <paramref name="input" /> に含まれる日、時間、分、秒の各構成要素のうち、少なくとも 1 つが有効値の範囲にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-596">At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range.</span>
          </span>
        </exception>
        <altmember cref="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)" />
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles = System.Globalization.TimeSpanStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, Optional styles As TimeSpanStyles = System.Globalization.TimeSpanStyles.None) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.TimeSpanStyles -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles = System.Globalization.TimeSpanStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, Optional styles As TimeSpanStyles = System.Globalization.TimeSpanStyles.None) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.TimeSpanStyles -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As TimeSpanStyles) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider * System.Globalization.TimeSpanStyles -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="61768-597">変換する時間間隔を指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-597">A string that specifies the time interval to convert.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="61768-598">
            <c>input</c> に要求される書式を定義する標準またはカスタムの書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-598">A standard or custom format string that defines the required format of <c>input</c>.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="61768-599">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-599">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <param name="styles">
          <span data-ttu-id="61768-600">
            <c>input</c> で使用できるスタイル要素を定義する列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-600">A bitwise combination of enumeration values that defines the style elements that may be present in <c>input</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-601">指定した書式、カルチャ固有の書式情報、およびスタイルを使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-601">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified format, culture-specific format information, and styles.</span>
          </span>
          <span data-ttu-id="61768-602">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-602">The format of the string representation must match the specified format exactly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-603">
            <paramref name="format" />、<paramref name="formatProvider" />、および <paramref name="styles" /> の指定に従って変換された、<paramref name="input" /> に対応する時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-603">A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="format" />, <paramref name="formatProvider" />, and <paramref name="styles" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-604"><xref:System.TimeSpan.ParseExact%2A>メソッドで定義された書式である必要があります時間間隔の文字列表現を解析し、`format`パラメーター、その先頭および末尾の空白文字が無視される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="61768-604">The <xref:System.TimeSpan.ParseExact%2A> method parses the string representation of a time interval, which must be in the format defined by the `format` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="61768-605">`input`の形式に準拠している必要があります`format`正確を使用する例外処理、ユーザーが入力された文字列を時間間隔に変換するときにします。</span><span class="sxs-lookup"><span data-stu-id="61768-605">Because `input` must conform to the format of `format` exactly, you should always use exception handling when converting a string input by the user to a time interval.</span></span> <span data-ttu-id="61768-606">例外処理を使用しない場合を呼び出すことができます、<xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="61768-606">If you prefer not to use exception handling, you can call the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method instead.</span></span>  
  
 <span data-ttu-id="61768-607">`format`パラメーターは、1 つの標準書式指定子、または必要な書式を定義する 1 つまたは複数のカスタム書式指定子を含む文字列`input`します。</span><span class="sxs-lookup"><span data-stu-id="61768-607">The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="61768-608">有効な書式指定文字列についての詳細については、次を参照してください。[標準 TimeSpan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)と[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="61768-608">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="61768-609"><xref:System.TimeSpan.ParseExact%2A>メソッドで指定されたカルチャの規則を使用する、`formatProvider`場合にのみパラメーター`format`標準<xref:System.TimeSpan>値の"g"または"G"のいずれかの文字列の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="61768-609">The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the `formatProvider` parameter only if `format` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="61768-610">"C"、"t"および"T"標準書式指定文字列は、インバリアント カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-610">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="61768-611">カスタム書式指定文字列は、入力文字列の正確な形式を定義し、リテラル文字を使用して時間間隔のコンポーネントを分離します。</span><span class="sxs-lookup"><span data-stu-id="61768-611">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="61768-612">`formatProvider`パラメーターは、<xref:System.IFormatProvider>場合、返される文字列の書式設定に関するカルチャに固有の情報を提供する実装`format`は標準書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="61768-612">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if `format` is a standard format string.</span></span> <span data-ttu-id="61768-613">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-613">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="61768-614">A<xref:System.Globalization.CultureInfo>書式指定規則が返される文字列に反映するのには、カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-614">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="61768-615"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティが返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="61768-615">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-616">A<xref:System.Globalization.DateTimeFormatInfo>返される文字列の書式設定を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-616">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-617">実装するカスタム オブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="61768-617">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="61768-618">その<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-618">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="61768-619">場合`formatProvider`は`null`、<xref:System.Globalization.DateTimeFormatInfo>現在のカルチャに関連付けられているオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-619">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
 <span data-ttu-id="61768-620">`styles`パラメーターはカスタム書式指定文字列を使用して解析される文字列の解釈に影響します。</span><span class="sxs-lookup"><span data-stu-id="61768-620">The `styles` parameter affects the interpretation of strings that are parsed using custom format strings.</span></span> <span data-ttu-id="61768-621">判断したかどうか`input`は、負の符号が存在する場合にのみ負の時間間隔として解釈されます (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>)、常に負の時間間隔として解釈ことか、または (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="61768-621">It determines whether `input` is interpreted as a negative time interval only if a negative sign is present (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), or whether it is always interpreted as a negative time interval (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>).</span></span> <span data-ttu-id="61768-622">場合<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>が使用されていない`format`リテラル負の記号を含める必要があります (など"\\-") を正常に負の時間間隔を解析します。</span><span class="sxs-lookup"><span data-stu-id="61768-622">If <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> is not used, `format` must include a literal negative sign symbol (such as "\\-") to successfully parse a negative time interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-623">次の例では、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29>さまざまな書式指定文字列とカルチャを使用して時間間隔のいくつかの文字列表現を解析します。</span><span class="sxs-lookup"><span data-stu-id="61768-623">The following example uses the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method to parse several string representations of time intervals using various format strings and cultures.</span></span> <span data-ttu-id="61768-624">また、使用、<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>負の時間間隔として各文字列を解釈する値。</span><span class="sxs-lookup"><span data-stu-id="61768-624">It also uses the <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> value to interpret each string as a negative time interval.</span></span> <span data-ttu-id="61768-625">例の出力を示している<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>スタイルは、カスタム書式指定文字列と共に使用する場合にのみ、戻り値を適用します。</span><span class="sxs-lookup"><span data-stu-id="61768-625">The output from the example illustrates that the <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> style affects the return value only when it is used with custom format strings.</span></span>  
  
 [!code-csharp[System.TimeSpan.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample2.cs#2)]
 [!code-vb[System.TimeSpan.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61768-626">
            <paramref name="styles" /> が無効な <see cref="T:System.Globalization.TimeSpanStyles" /> 値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-626">
              <paramref name="styles" /> is an invalid <see cref="T:System.Globalization.TimeSpanStyles" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61768-627">
            <paramref name="input" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-627">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="61768-628">
            <paramref name="input" /> の形式が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-628">
              <paramref name="input" /> has an invalid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-629">
            <paramref name="input" /> は <see cref="F:System.TimeSpan.MinValue" /> 未満の数値か、<see cref="F:System.TimeSpan.MaxValue" /> より大きい数値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-629">
              <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
          <span data-ttu-id="61768-630">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-630">-or-</span>
          </span>
          <span data-ttu-id="61768-631">
            <paramref name="input" /> に含まれる日、時間、分、秒の各構成要素のうち、少なくとも 1 つが有効値の範囲にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-631">At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider * System.Globalization.TimeSpanStyles -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="61768-632">変換する時間間隔を指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-632">A string that specifies the time interval to convert.</span>
          </span>
        </param>
        <param name="formats">
          <span data-ttu-id="61768-633">
            <c>input</c> に要求される書式を定義する標準またはカスタムの書式指定文字列の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-633">A array of standard or custom format strings that define the required format of <c>input</c>.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="61768-634">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-634">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <param name="styles">
          <span data-ttu-id="61768-635">input で使用できるスタイル要素を定義する列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-635">A bitwise combination of enumeration values that defines the style elements that may be present in input.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-636">指定した書式、カルチャ固有の書式情報、およびスタイルを使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-636">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified formats, culture-specific format information, and styles.</span>
          </span>
          <span data-ttu-id="61768-637">文字列形式の書式は、指定されたいずれかの書式と完全に一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-637">The format of the string representation must match one of the specified formats exactly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-638">
            <paramref name="formats" />、<paramref name="formatProvider" />、および <paramref name="styles" /> の指定に従って変換された、<paramref name="input" /> に対応する時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-638">A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="formats" />, <paramref name="formatProvider" />, and <paramref name="styles" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-639"><xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29>メソッドにより定義された形式のいずれかである必要があります時間間隔の文字列表現を解析し、`formats`パラメーター、その先頭および末尾の空白文字が無視される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="61768-639">The <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> method parses the string representation of a time interval, which must be in one of the formats defined by the `formats` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="61768-640">`input`で指定された形式のいずれかに正確に従っている必要があります`formats`、時間間隔をユーザーが入力された文字列を変換するときに常に、例外処理を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-640">Because `input` must exactly conform to one of the formats specified in `formats`, you should always use exception handling when converting a string input by the user to a time interval.</span></span> <span data-ttu-id="61768-641">例外処理を使用しない場合を呼び出すことができます、<xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="61768-641">If you prefer not to use exception handling, you can call the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method instead.</span></span>  
  
 <span data-ttu-id="61768-642">`formats`パラメーターは文字列配列で 1 つの標準書式指定子、または必要な書式を定義する 1 つまたは複数のカスタム書式指定子のいずれかの要素で構成されます`input`します。</span><span class="sxs-lookup"><span data-stu-id="61768-642">The `formats` parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="61768-643">有効な書式指定文字列についての詳細については、次を参照してください。[標準 TimeSpan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)と[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="61768-643">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span> <span data-ttu-id="61768-644">`input` メンバーと正確に一致する必要があります`formats`解析操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="61768-644">`input` must correspond exactly to a member of `formats` for the parse operation to succeed.</span></span> <span data-ttu-id="61768-645">解析操作が、照合しようとしています。`input`内の各要素に`formats`以降では、配列の最初の要素。</span><span class="sxs-lookup"><span data-stu-id="61768-645">The parse operation attempts to match `input` to each element in `formats` starting with the first element in the array.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="61768-646"><xref:System.TimeSpan.ParseExact%2A>メソッドで指定されたカルチャの規則を使用する、`formatProvider`パラメーター書式指定文字列を解析するために使用する場合にのみ`input`標準<xref:System.TimeSpan>値の"g"または"G"のいずれかの文字列の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="61768-646">The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the `formatProvider` parameter only if the format string used to parse `input` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="61768-647">"C"、"t"および"T"標準書式指定文字列は、インバリアント カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-647">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="61768-648">カスタム書式指定文字列は、入力文字列の正確な形式を定義し、リテラル文字を使用して時間間隔のコンポーネントを分離します。</span><span class="sxs-lookup"><span data-stu-id="61768-648">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="61768-649">`formatProvider`パラメーターは、<xref:System.IFormatProvider>書式指定文字列を解析するために使用する場合に返される文字列の書式設定に関するカルチャに固有の情報を提供する実装`input`は標準書式指定文字列です。</span><span class="sxs-lookup"><span data-stu-id="61768-649">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if the format string used to parse `input` is a standard format string.</span></span> <span data-ttu-id="61768-650">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-650">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="61768-651">A<xref:System.Globalization.CultureInfo>書式指定規則が返される文字列に反映するのには、カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-651">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="61768-652"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティが返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="61768-652">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-653">A<xref:System.Globalization.DateTimeFormatInfo>返される文字列の書式設定を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-653">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-654">実装するカスタム オブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="61768-654">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="61768-655">その<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-655">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="61768-656">場合`formatProvider`は`null`、<xref:System.Globalization.DateTimeFormatInfo>現在のカルチャに関連付けられているオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-656">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
 <span data-ttu-id="61768-657">`styles`パラメーターはカスタム書式指定文字列を使用して解析される文字列の解釈に影響します。</span><span class="sxs-lookup"><span data-stu-id="61768-657">The `styles` parameter affects the interpretation of strings that are parsed using custom format strings.</span></span> <span data-ttu-id="61768-658">判断したかどうか`input`は、負の符号が存在する場合にのみ負の時間間隔として解釈されます (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>)、常に負の時間間隔として解釈ことか、または (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="61768-658">It determines whether `input` is interpreted as a negative time interval only if a negative sign is present (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), or whether it is always interpreted as a negative time interval (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>).</span></span> <span data-ttu-id="61768-659">場合<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>が使用されていない`format`リテラル負の記号を含める必要があります (など"\\-") を正常に負の時間間隔を解析します。</span><span class="sxs-lookup"><span data-stu-id="61768-659">If <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> is not used, `format` must include a literal negative sign symbol (such as "\\-") to successfully parse a negative time interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-660">次の例では、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29>への文字列配列の各要素に変換するメソッド、<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-660">The following example calls the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> method to convert each element of a string array to a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="61768-661">文字列は、一般の短い形式または一般の長い形式のいずれかで、時間間隔を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="61768-661">The strings can represent a time interval in either the general short format or the general long format.</span></span>  
  
 <span data-ttu-id="61768-662">さらに、時間間隔の解析メソッドが 1 桁の数字を解釈する方法を変更します。</span><span class="sxs-lookup"><span data-stu-id="61768-662">In addition, the example changes the way in which the time interval parsing methods interpret a single digit.</span></span> <span data-ttu-id="61768-663">通常、1 桁の数字は、時間間隔の日数として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="61768-663">Ordinarily, a single digit is interpreted as the number of days in a time interval.</span></span> <span data-ttu-id="61768-664">代わりに、`%h`カスタム書式指定文字列は 1 桁の数字を時間数として解釈するために使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-664">Instead, the `%h` custom format string is used to interpret a single digit as the number of hours.</span></span> <span data-ttu-id="61768-665">この変更を有効にするには、ことに注意して、`%h`カスタム書式指定文字列でその他の書式指定文字列を付ける必要があります、`formats`配列。</span><span class="sxs-lookup"><span data-stu-id="61768-665">For this change to be effective, note that the `%h` custom format string must precede the other format strings in the `formats` array.</span></span> <span data-ttu-id="61768-666">出力からも注意してくださいを<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>メソッドの呼び出しで指定されたフラグは、この書式指定子で文字列を解析する場合にのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-666">Also note from the output that the <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> flag specified in the method call is used only when parsing a string with this format specifier.</span></span>  
  
 [!code-csharp[System.TimeSpan.ParseExact#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample4.cs#4)]
 [!code-vb[System.TimeSpan.ParseExact#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61768-667">
            <paramref name="styles" /> が無効な <see cref="T:System.Globalization.TimeSpanStyles" /> 値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-667">
              <paramref name="styles" /> is an invalid <see cref="T:System.Globalization.TimeSpanStyles" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61768-668">
            <paramref name="input" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-668">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="61768-669">
            <paramref name="input" /> の形式が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-669">
              <paramref name="input" /> has an invalid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-670">
            <paramref name="input" /> は <see cref="F:System.TimeSpan.MinValue" /> 未満の数値か、<see cref="F:System.TimeSpan.MaxValue" /> より大きい数値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-670">
              <paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
          <span data-ttu-id="61768-671">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-671">-or-</span>
          </span>
          <span data-ttu-id="61768-672">
            <paramref name="input" /> に含まれる日、時間、分、秒の各構成要素のうち、少なくとも 1 つが有効値の範囲にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-672">At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seconds">
      <MemberSignature Language="C#" Value="public int Seconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Seconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Seconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Seconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Seconds { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Seconds : int" Usage="System.TimeSpan.Seconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-673">現在の <see cref="T:System.TimeSpan" /> 構造体が表す時間間隔の秒の部分を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-673">Gets the seconds component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61768-674">現在の <see cref="T:System.TimeSpan" /> 構造体の秒の部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-674">The second component of the current <see cref="T:System.TimeSpan" /> structure.</span>
          </span>
          <span data-ttu-id="61768-675">戻り値の範囲は、-59 ～ 59 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-675">The return value ranges from -59 through 59.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-676">A<xref:System.TimeSpan>として値を表すことが [*-*]*d*.*hh*:*mm*:*ss*.*ff*、省略可能なマイナス記号を負の時間間隔を示しますが、 *d*コンポーネントは、日、 *hh*を 24 時間制で測定される時間は*mm*は分、 *ss* (秒単位) と*ff*秒の端数が。</span><span class="sxs-lookup"><span data-stu-id="61768-676">A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second.</span></span> <span data-ttu-id="61768-677">値、<xref:System.TimeSpan.Seconds%2A>プロパティは、秒のコンポーネント、 *ss*します。</span><span class="sxs-lookup"><span data-stu-id="61768-677">The value of the <xref:System.TimeSpan.Seconds%2A> property is the seconds component, *ss*.</span></span>  
  
 <span data-ttu-id="61768-678"><xref:System.TimeSpan.Seconds%2A>プロパティ全体 (秒単位) を表すのに対して、<xref:System.TimeSpan.TotalSeconds%2A>プロパティは、整数部と小数部の秒を表します。</span><span class="sxs-lookup"><span data-stu-id="61768-678">The <xref:System.TimeSpan.Seconds%2A> property represents whole seconds, whereas the <xref:System.TimeSpan.TotalSeconds%2A> property represents whole and fractional seconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-679">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトし、表示、<xref:System.TimeSpan.Seconds%2A>の各プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-679">The following example creates several <xref:System.TimeSpan> objects and displays the <xref:System.TimeSpan.Seconds%2A> property of each.</span></span>  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.TimeSpan ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (ts As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(TimeSpan ts);" />
      <MemberSignature Language="F#" Value="member this.Subtract : TimeSpan -&gt; TimeSpan" Usage="timeSpan.Subtract ts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ts">
          <span data-ttu-id="61768-680">減算される時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-680">The time interval to be subtracted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-681">指定した <see cref="T:System.TimeSpan" /> オブジェクトとこのインスタンスとの差を示す値を持つ、新しい <see cref="T:System.TimeSpan" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-681">Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference between the specified <see cref="T:System.TimeSpan" /> object and this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-682">このインスタンスの値から <paramref name="ts" /> の値を減算した結果を値とする新しい時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-682">A new time interval whose value is the result of the value of this instance minus the value of <paramref name="ts" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-683">戻り値でなければなりません<xref:System.TimeSpan.MinValue?displayProperty=nameWithType>と<xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>、それ以外の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="61768-683">The return value must be between <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> and <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="61768-684">戻り値は、新しい<xref:System.TimeSpan>; 元<xref:System.TimeSpan>は変更されません。</span><span class="sxs-lookup"><span data-stu-id="61768-684">The return value is a new <xref:System.TimeSpan>; the original <xref:System.TimeSpan> is not modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-685">次の例では、<xref:System.TimeSpan.Subtract%2A>メソッドを 1 つの差を計算<xref:System.TimeSpan>値と、各配列内の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="61768-685">The following example uses the <xref:System.TimeSpan.Subtract%2A> method to calculate the difference between a single <xref:System.TimeSpan> value and each of the time intervals in an array.</span></span> <span data-ttu-id="61768-686">注意してください。<xref:System.TimeSpan>結果の文字列に、書式指定文字列が負の記号を含めない、例では、条件付きロジックを使用して、負の符号と負の時間間隔が含まれます。</span><span class="sxs-lookup"><span data-stu-id="61768-686">Note that, because <xref:System.TimeSpan> format strings do not include negative signs in the result string, the example uses conditional logic to include a negative sign with negative time intervals.</span></span>  
  
 [!code-csharp[System.TimeSpan.Subtract#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.subtract/cs/subtract1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="61768-687">戻り値が <see cref="F:System.TimeSpan.MinValue" /> 未満であるか、<see cref="F:System.TimeSpan.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-687">The return value is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Ticks : int64" Usage="System.TimeSpan.Ticks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-688">現在の <see cref="T:System.TimeSpan" /> 構造体の値を表すタイマー刻みの数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-688">Gets the number of ticks that represent the value of the current <see cref="T:System.TimeSpan" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61768-689">このインスタンス内のタイマー刻みの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-689">The number of ticks contained in this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-690">時間の最小単位は 100 ナノ秒または 1 つ 10 分の 1 秒刻みです。</span><span class="sxs-lookup"><span data-stu-id="61768-690">The smallest unit of time is the tick, which is equal to 100 nanoseconds or one ten-millionth of a second.</span></span> <span data-ttu-id="61768-691">10,000 ティックをミリ秒単位でがあります。</span><span class="sxs-lookup"><span data-stu-id="61768-691">There are 10,000 ticks in a millisecond.</span></span> <span data-ttu-id="61768-692">値、<xref:System.TimeSpan.Ticks%2A>プロパティは、正または負の時間間隔を表す正または負の値を指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-692">The value of the <xref:System.TimeSpan.Ticks%2A> property can be negative or positive to represent a negative or positive time interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-693">次の例をいくつか作成<xref:System.TimeSpan>オブジェクトし、表示、<xref:System.TimeSpan.Ticks%2A>の各プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-693">The following example creates several <xref:System.TimeSpan> objects and displays the <xref:System.TimeSpan.Ticks%2A> property of each.</span></span>  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerDay">
      <MemberSignature Language="C#" Value="public const long TicksPerDay = 864000000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerDay = (864000000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerDay" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerDay As Long  = 864000000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerDay = 864000000000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerDay : int64" Usage="System.TimeSpan.TicksPerDay" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>864000000000</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-694">タイマー刻みの数を 1 日で表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-694">Represents the number of ticks in 1 day.</span>
          </span>
          <span data-ttu-id="61768-695">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-695">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-696">この定数の値が 864 10億人です。つまり、864,000,000,000 します。</span><span class="sxs-lookup"><span data-stu-id="61768-696">The value of this constant is 864 billion; that is, 864,000,000,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-697">次の例を参照し、値を表示、<xref:System.TimeSpan.TicksPerDay>フィールド。</span><span class="sxs-lookup"><span data-stu-id="61768-697">The following example references and displays the value of the <xref:System.TimeSpan.TicksPerDay> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerHour">
      <MemberSignature Language="C#" Value="public const long TicksPerHour = 36000000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerHour = (36000000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerHour" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerHour As Long  = 36000000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerHour = 36000000000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerHour : int64" Usage="System.TimeSpan.TicksPerHour" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>36000000000</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-698">タイマー刻みの数を 1 時間で表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-698">Represents the number of ticks in 1 hour.</span>
          </span>
          <span data-ttu-id="61768-699">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-699">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-700">この定数の値は 36 件です。つまり、36,000,000,000 します。</span><span class="sxs-lookup"><span data-stu-id="61768-700">The value of this constant is 36 billion; that is, 36,000,000,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-701">次の例を参照し、値を表示、<xref:System.TimeSpan.TicksPerHour>フィールド。</span><span class="sxs-lookup"><span data-stu-id="61768-701">The following example references and displays the value of the <xref:System.TimeSpan.TicksPerHour> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerMillisecond">
      <MemberSignature Language="C#" Value="public const long TicksPerMillisecond = 10000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerMillisecond = (10000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerMillisecond" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerMillisecond As Long  = 10000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerMillisecond = 10000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerMillisecond : int64" Usage="System.TimeSpan.TicksPerMillisecond" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>10000</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-702">タイマー刻みの数を 1 ミリ秒で表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-702">Represents the number of ticks in 1 millisecond.</span>
          </span>
          <span data-ttu-id="61768-703">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-703">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-704">この定数の値は 10 桁です。つまり、10,000 です。</span><span class="sxs-lookup"><span data-stu-id="61768-704">The value of this constant is 10 thousand; that is, 10,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-705">次の例を参照し、値を表示、<xref:System.TimeSpan.TicksPerMillisecond>フィールド。</span><span class="sxs-lookup"><span data-stu-id="61768-705">The following example references and displays the value of the <xref:System.TimeSpan.TicksPerMillisecond> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerMinute">
      <MemberSignature Language="C#" Value="public const long TicksPerMinute = 600000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerMinute = (600000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerMinute" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerMinute As Long  = 600000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerMinute = 600000000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerMinute : int64" Usage="System.TimeSpan.TicksPerMinute" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>600000000</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-706">タイマー刻みの数を 1 分で表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-706">Represents the number of ticks in 1 minute.</span>
          </span>
          <span data-ttu-id="61768-707">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-707">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-708">この定数の値は 600, 000 です。つまり、600,000, 000 です。</span><span class="sxs-lookup"><span data-stu-id="61768-708">The value of this constant is 600 million; that is, 600,000,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-709">次の例を参照し、値を表示、<xref:System.TimeSpan.TicksPerMinute>フィールド。</span><span class="sxs-lookup"><span data-stu-id="61768-709">The following example references and displays the value of the <xref:System.TimeSpan.TicksPerMinute> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerSecond">
      <MemberSignature Language="C#" Value="public const long TicksPerSecond = 10000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerSecond = (10000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerSecond" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerSecond As Long  = 10000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerSecond = 10000000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerSecond : int64" Usage="System.TimeSpan.TicksPerSecond" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>10000000</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-710">タイマー刻みの数を 1 秒で表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-710">Represents the number of ticks in 1 second.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-711">この定数の値は 1,000万です。つまり、10,000, 000 です。</span><span class="sxs-lookup"><span data-stu-id="61768-711">The value of this constant is 10 million; that is, 10,000,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-712">次の例を参照し、値を表示、<xref:System.TimeSpan.TicksPerSecond>フィールド。</span><span class="sxs-lookup"><span data-stu-id="61768-712">The following example references and displays the value of the <xref:System.TimeSpan.TicksPerSecond> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61768-713">現在の <see cref="T:System.TimeSpan" /> オブジェクトの値を等価の文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-713">Converts the value of the current <see cref="T:System.TimeSpan" /> object to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="timeSpan.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61768-714">現在の <see cref="T:System.TimeSpan" /> オブジェクトの値を等価の文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-714">Converts the value of the current <see cref="T:System.TimeSpan" /> object to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-715">現在の <see cref="T:System.TimeSpan" /> 値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-715">The string representation of the current <see cref="T:System.TimeSpan" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-716">返される文字列は"c"書式指定子で書式設定し、形式は、次のとおり。</span><span class="sxs-lookup"><span data-stu-id="61768-716">The returned string is formatted with the "c" format specifier and has the following format:</span></span>  
  
 <span data-ttu-id="61768-717">[-][*d*.]*hh*:*mm*:*ss*[.*fffffff*]</span><span class="sxs-lookup"><span data-stu-id="61768-717">[-][*d*.]*hh*:*mm*:*ss*[.*fffffff*]</span></span>  
  
 <span data-ttu-id="61768-718">角かっこ内の要素 ([と])、返される文字列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="61768-718">Elements in square brackets ([ and ]) may not be included in the returned string.</span></span> <span data-ttu-id="61768-719">コロン (: 積) がリテラル文字。</span><span class="sxs-lookup"><span data-stu-id="61768-719">Colons and periods (: and.) are literal characters.</span></span> <span data-ttu-id="61768-720">リテラルでない要素は、次の表に表示されます。</span><span class="sxs-lookup"><span data-stu-id="61768-720">The non-literal elements are listed in the following table.</span></span> <span data-ttu-id="61768-721">によって返される文字列に注意してください、<xref:System.TimeSpan.ToString>メソッドはカルチャではありません。</span><span class="sxs-lookup"><span data-stu-id="61768-721">Note that the string returned by the <xref:System.TimeSpan.ToString> method is not culture-sensitive.</span></span>  
  
|<span data-ttu-id="61768-722">アイテム</span><span class="sxs-lookup"><span data-stu-id="61768-722">Item</span></span>|<span data-ttu-id="61768-723">説明</span><span class="sxs-lookup"><span data-stu-id="61768-723">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="61768-724">"-"</span><span class="sxs-lookup"><span data-stu-id="61768-724">"-"</span></span>|<span data-ttu-id="61768-725">マイナス記号、負の時間間隔を示します。</span><span class="sxs-lookup"><span data-stu-id="61768-725">A minus sign, which indicates a negative time interval.</span></span> <span data-ttu-id="61768-726">符号が正の時間間隔に含まれません。</span><span class="sxs-lookup"><span data-stu-id="61768-726">No sign is included for a positive time span.</span></span>|  
|<span data-ttu-id="61768-727">"*d*"</span><span class="sxs-lookup"><span data-stu-id="61768-727">"*d*"</span></span>|<span data-ttu-id="61768-728">時間間隔の日数の数。</span><span class="sxs-lookup"><span data-stu-id="61768-728">The number of days in the time interval.</span></span> <span data-ttu-id="61768-729">時間間隔が 1 日未満の場合、この要素は省略するとします。</span><span class="sxs-lookup"><span data-stu-id="61768-729">This element is omitted if the time interval is less than one day.</span></span>|  
|<span data-ttu-id="61768-730">"*hh*"</span><span class="sxs-lookup"><span data-stu-id="61768-730">"*hh*"</span></span>|<span data-ttu-id="61768-731">0 から 23 までの時間間隔の時間の数。</span><span class="sxs-lookup"><span data-stu-id="61768-731">The number of hours in the time interval, ranging from 0 to 23.</span></span>|  
|<span data-ttu-id="61768-732">"*mm*"</span><span class="sxs-lookup"><span data-stu-id="61768-732">"*mm*"</span></span>|<span data-ttu-id="61768-733">0 から 59 までの時間間隔で分単位の数。</span><span class="sxs-lookup"><span data-stu-id="61768-733">The number of minutes in the time interval, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="61768-734">"*ss*"</span><span class="sxs-lookup"><span data-stu-id="61768-734">"*ss*"</span></span>|<span data-ttu-id="61768-735">0 から 59 までの時間間隔の秒数です。</span><span class="sxs-lookup"><span data-stu-id="61768-735">The number of seconds in the time interval, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="61768-736">"*fffffff*"</span><span class="sxs-lookup"><span data-stu-id="61768-736">"*fffffff*"</span></span>|<span data-ttu-id="61768-737">時間間隔の秒の小数部。</span><span class="sxs-lookup"><span data-stu-id="61768-737">Fractional seconds in the time interval.</span></span> <span data-ttu-id="61768-738">時間間隔に秒小数部にはが含まれていない場合、この要素は省略するとします。</span><span class="sxs-lookup"><span data-stu-id="61768-738">This element is omitted if the time interval does not include fractional seconds.</span></span> <span data-ttu-id="61768-739">存在する場合、秒の小数部は 7 つの 10 進数字を使用して表現は常にします。</span><span class="sxs-lookup"><span data-stu-id="61768-739">If present, fractional seconds are always expressed using seven decimal digits.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="61768-740">文字列表現の比較の詳細については<xref:System.TimeSpan>、Oracle データ型は、技術情報の記事を参照してくださいと[324577: 2 つ目のデータ型に System.TimeSpan はない一致 Oracle 9i INTERVAL DAY](http://go.microsoft.com/fwlink/?LinkId=161146)します。</span><span class="sxs-lookup"><span data-stu-id="61768-740">For more information about comparing the string representation of <xref:System.TimeSpan> and Oracle data types, see Knowledge Base article [324577: System.TimeSpan Does Not Match Oracle 9i INTERVAL DAY TO SECOND Data Type](http://go.microsoft.com/fwlink/?LinkId=161146).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-741">次の例は、呼び出すことによって返される文字列を表示、<xref:System.TimeSpan.ToString%2A>メソッドの数を<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-741">The following example displays the strings returned by calling the <xref:System.TimeSpan.ToString%2A> method with a number of <xref:System.TimeSpan> values.</span></span> <span data-ttu-id="61768-742">例が呼び出されませんが、<xref:System.TimeSpan.ToString%2A>メソッドを直接メソッドによって呼び出されます、<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッドに変換しようとしたとき、<xref:System.TimeSpan>値を文字列形式。</span><span class="sxs-lookup"><span data-stu-id="61768-742">Note that although the example does not call the <xref:System.TimeSpan.ToString%2A> method directly, it is called by the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method when it attempts to convert a <xref:System.TimeSpan> value to its string representation.</span></span>  
  
 [!code-csharp[System.TimeSpan.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.TimeSpan.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="61768-743">
            <para>書式設定のサポート<see cref="T:System.TimeSpan" />で値が追加された、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]します。ただし、<see cref="M:System.TimeSpan.ToString" />メソッドのオーバー ロードのカルチャを認識しないままです。その動作は、.NET Framework の以前のバージョンからは変更されません。書式を制御する、<see cref="T:System.TimeSpan" />値には、呼び出し、<see cref="M:System.TimeSpan.ToString(System.String)" />または<see cref="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)" />オーバー ロードします。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-743">
              <para>Support for formatting <see cref="T:System.TimeSpan" /> values was added in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. However, the <see cref="M:System.TimeSpan.ToString" /> method overload remains culture-insensitive. Its behavior remains unchanged from previous versions of the .NET Framework. To control the formatting of a <see cref="T:System.TimeSpan" /> value, call the <see cref="M:System.TimeSpan.ToString(System.String)" /> or <see cref="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)" /> overload.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.String" />
        <altmember cref="M:System.TimeSpan.Parse(System.String)" />
        <altmember cref="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="timeSpan.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="61768-744">標準またはカスタムの <see cref="T:System.TimeSpan" /> 書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-744">A standard or custom <see cref="T:System.TimeSpan" /> format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-745">指定した書式を使用して、現在の <see cref="T:System.TimeSpan" /> オブジェクトの値を等価の文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-745">Converts the value of the current <see cref="T:System.TimeSpan" /> object to its equivalent string representation by using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-746">現在の <see cref="T:System.TimeSpan" /> 値の文字列形式を、<paramref name="format" /> パラメーターで指定されている形式で表現した値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-746">The string representation of the current <see cref="T:System.TimeSpan" /> value in the format specified by the <paramref name="format" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-747">`format`パラメーターの任意の有効な標準またはカスタム書式指定子を指定できます<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-747">The `format` parameter can be any valid standard or custom format specifier for <xref:System.TimeSpan> values.</span></span> <span data-ttu-id="61768-748">場合`format`と等しい<xref:System.String.Empty?displayProperty=nameWithType>または`null`、現在の戻り値<xref:System.TimeSpan>オブジェクトが共通の書式指定子 ("c") でフォーマットされました。</span><span class="sxs-lookup"><span data-stu-id="61768-748">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.TimeSpan> object is formatted with the common format specifier ("c").</span></span> <span data-ttu-id="61768-749">場合`format`他の値、メソッドがスローされますが、<xref:System.FormatException>します。</span><span class="sxs-lookup"><span data-stu-id="61768-749">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="61768-750">場合`format`標準書式指定文字列は、返される文字列の形式は、現在のカルチャの書式指定規則によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="61768-750">If `format` is a standard format string, the format of the returned string is defined by the formatting conventions of the current culture.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="61768-751">カスタムの書式指定文字列の<xref:System.TimeSpan>値に日付または時刻の区切り記号が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="61768-751">The custom format strings for <xref:System.TimeSpan> values do not include a date or time separator.</span></span> <span data-ttu-id="61768-752">書式指定文字列でこれらの要素を含める場合は、文字リテラルとして扱う必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-752">If you want to include these elements in your format string, you must treat them as character literals.</span></span> <span data-ttu-id="61768-753">例については、例を参照して、[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)についても説明します。</span><span class="sxs-lookup"><span data-stu-id="61768-753">See the example for an illustration, and see the [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md) topic for more information.</span></span>  
  
 <span data-ttu-id="61768-754">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="61768-754">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="61768-755">書式指定文字列の詳細については<xref:System.TimeSpan>値を参照してください[標準 TimeSpan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)と[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="61768-755">For more information about format strings for <xref:System.TimeSpan> values, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
-   <span data-ttu-id="61768-756">.NET Framework の書式設定のサポートの詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="61768-756">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-757">次のコードの例は、standard、およびカスタム<xref:System.TimeSpan>書式指定文字列の配列の各要素の文字列表現を表示する<xref:System.TimeSpan>値</span><span class="sxs-lookup"><span data-stu-id="61768-757">The following example uses standard and custom <xref:System.TimeSpan> format strings to display the string representation of each element in an array of <xref:System.TimeSpan> values</span></span>  
  
 [!code-csharp[System.TimeSpan.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.ToString/cs/tostring3.cs#3)]
 [!code-vb[System.TimeSpan.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.ToString/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="61768-758">
            <paramref name="format" /> パラメーターが認識されないか、サポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-758">The <paramref name="format" /> parameter is not recognized or is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="timeSpan.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="61768-759">標準またはカスタムの <see cref="T:System.TimeSpan" /> 書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-759">A standard or custom <see cref="T:System.TimeSpan" /> format string.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="61768-760">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-760">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-761">指定した書式とカルチャ固有の書式情報を使用して、現在の <see cref="T:System.TimeSpan" /> オブジェクトの値を等価の文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-761">Converts the value of the current <see cref="T:System.TimeSpan" /> object to its equivalent string representation by using the specified format and culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-762">
            <paramref name="format" /> および <paramref name="formatProvider" /> の指定に従って表現された、現在の <see cref="T:System.TimeSpan" /> 値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-762">The string representation of the current <see cref="T:System.TimeSpan" /> value, as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-763">`format`パラメーターの任意の有効な標準またはカスタム書式指定子を指定できます<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-763">The `format` parameter can be any valid standard or custom format specifier for <xref:System.TimeSpan> values.</span></span> <span data-ttu-id="61768-764">場合`format`と等しい<xref:System.String.Empty?displayProperty=nameWithType>または`null`、現在の戻り値<xref:System.TimeSpan>オブジェクトが共通の書式指定子 ("c") でフォーマットされました。</span><span class="sxs-lookup"><span data-stu-id="61768-764">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.TimeSpan> object is formatted with the common format specifier ("c").</span></span> <span data-ttu-id="61768-765">形式はその他の値である場合、メソッドがスローされます、<xref:System.FormatException>します。</span><span class="sxs-lookup"><span data-stu-id="61768-765">If format is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="61768-766">カスタムの書式指定文字列の<xref:System.TimeSpan>値に日付または時刻の区切り記号が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="61768-766">The custom format strings for <xref:System.TimeSpan> values do not include a date or time separator.</span></span> <span data-ttu-id="61768-767">書式指定文字列でこれらの要素を含める場合は、文字リテラルとして扱う必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-767">If you want to include these elements in your format string, you must treat them as character literals.</span></span> <span data-ttu-id="61768-768">例については、例を参照して、[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)についても説明します。</span><span class="sxs-lookup"><span data-stu-id="61768-768">See the example for an illustration, and see the [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md) topic for more information.</span></span>  
  
 <span data-ttu-id="61768-769">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="61768-769">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="61768-770">書式指定文字列の詳細については<xref:System.TimeSpan>値を参照してください[標準 TimeSpan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)と[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="61768-770">For more information about format strings for <xref:System.TimeSpan> values, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
-   <span data-ttu-id="61768-771">.NET Framework の書式設定のサポートの詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="61768-771">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="61768-772">`formatProvider`パラメーターは、<xref:System.IFormatProvider>返される文字列の書式設定に関するカルチャに固有の情報を提供する実装。</span><span class="sxs-lookup"><span data-stu-id="61768-772">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string.</span></span> <span data-ttu-id="61768-773">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-773">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="61768-774">A<xref:System.Globalization.CultureInfo>書式指定規則が返される文字列に反映するのには、カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-774">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="61768-775"><xref:System.Globalization.DateTimeFormatInfo>オブジェクトによって返される、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティが返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="61768-775">The <xref:System.Globalization.DateTimeFormatInfo> object retuned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-776">A<xref:System.Globalization.DateTimeFormatInfo>返される文字列の書式設定を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-776">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-777">実装するカスタム オブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="61768-777">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="61768-778">その<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-778">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="61768-779">場合`formatProvider`は`null`、<xref:System.Globalization.DateTimeFormatInfo>現在のカルチャに関連付けられているオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-779">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span> <span data-ttu-id="61768-780">場合`format`、カスタム書式指定文字列は、`formatProvider`パラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="61768-780">If `format` is a custom format string, the `formatProvider` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-781">次の例では、 <xref:System.TimeSpan.ToString%28System.String%2CSystem.IFormatProvider%29> 2 つの時間間隔書式指定するメソッド。</span><span class="sxs-lookup"><span data-stu-id="61768-781">The following example calls the <xref:System.TimeSpan.ToString%28System.String%2CSystem.IFormatProvider%29> method to format two time intervals.</span></span> <span data-ttu-id="61768-782">例では、EN-US カルチャの規則を使用してそれを表示するには、まず各書式指定文字列を 2 回のメソッドを呼び出すし、表示、FR-FR カルチャの規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-782">The example calls the method twice for each format string, first to display it using the conventions of the en-US culture and then to display it using the conventions of the fr-FR culture.</span></span>  
  
 [!code-csharp[System.TimeSpan.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.ToString/cs/tostring4.cs#4)]
 [!code-vb[System.TimeSpan.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.ToString/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="61768-783">
            <paramref name="format" /> パラメーターが認識されないか、サポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-783">The <paramref name="format" /> parameter is not recognized or is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TotalDays">
      <MemberSignature Language="C#" Value="public double TotalDays { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalDays" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalDays" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalDays As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalDays { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalDays : double" Usage="System.TimeSpan.TotalDays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-784">整数部と小数部から成る日数で表される、現在の <see cref="T:System.TimeSpan" /> 構造体の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-784">Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional days.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61768-785">このインスタンスで表される日数の合計。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-785">The total number of days represented by this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-786">このプロパティは、このインスタンスの値をタイマー刻みの日に変換します。</span><span class="sxs-lookup"><span data-stu-id="61768-786">This property converts the value of this instance from ticks to days.</span></span> <span data-ttu-id="61768-787">この数は、整数部と小数部から成る日数を含める可能性があります。</span><span class="sxs-lookup"><span data-stu-id="61768-787">This number might include whole and fractional days.</span></span>  
  
 <span data-ttu-id="61768-788"><xref:System.TimeSpan.TotalDays%2A>プロパティを表す整数部と小数部の日数のに対して、<xref:System.TimeSpan.Days%2A>プロパティは日単位を表します。</span><span class="sxs-lookup"><span data-stu-id="61768-788">The <xref:System.TimeSpan.TotalDays%2A> property represents whole and fractional days, whereas the <xref:System.TimeSpan.Days%2A> property represents whole days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-789">次の例では、インスタンス化、<xref:System.TimeSpan>オブジェクトし、の値を表示します。 その<xref:System.TimeSpan.TotalDays%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-789">The following example instantiates a <xref:System.TimeSpan> object and displays the value of its <xref:System.TimeSpan.TotalDays%2A> property.</span></span> <span data-ttu-id="61768-790">各 (時間、分、秒、ミリ秒単位) を形成するコンポーネントの値の小数部の値もが表示されます。 その<xref:System.TimeSpan.TotalDays%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-790">It also displays the value of each component (hours, minutes, seconds, milliseconds) that forms the fractional part of the value of its <xref:System.TimeSpan.TotalDays%2A> property.</span></span>  
  
 [!code-csharp[System.TimeSpan.TotalDays#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totaldays/cs/totaldays.cs#1)]
 [!code-vb[System.TimeSpan.TotalDays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totaldays/vb/totaldays.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Days" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
      </Docs>
    </Member>
    <Member MemberName="TotalHours">
      <MemberSignature Language="C#" Value="public double TotalHours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalHours" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalHours" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalHours As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalHours { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalHours : double" Usage="System.TimeSpan.TotalHours" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-791">整数部と小数部から成る時間数で表される、現在の <see cref="T:System.TimeSpan" /> 構造体の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-791">Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional hours.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61768-792">このインスタンスで表される時間数の合計。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-792">The total number of hours represented by this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-793">このプロパティは、このインスタンスの値をタイマー刻みの時間に変換します。</span><span class="sxs-lookup"><span data-stu-id="61768-793">This property converts the value of this instance from ticks to hours.</span></span> <span data-ttu-id="61768-794">この数は、整数部と小数部の時間にあります。</span><span class="sxs-lookup"><span data-stu-id="61768-794">This number might include whole and fractional hours.</span></span>  
  
 <span data-ttu-id="61768-795"><xref:System.TimeSpan.TotalHours%2A>プロパティを表す整数部と小数部の時間のに対して、<xref:System.TimeSpan.Hours%2A>プロパティは、全体の時間を表します。</span><span class="sxs-lookup"><span data-stu-id="61768-795">The <xref:System.TimeSpan.TotalHours%2A> property represents whole and fractional hours, whereas the <xref:System.TimeSpan.Hours%2A> property represents whole hours.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-796">次の例では、インスタンス化、<xref:System.TimeSpan>オブジェクトし、値が表示されます、<xref:System.TimeSpan.TotalHours%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-796">The following example instantiates a <xref:System.TimeSpan> object and displays the value its <xref:System.TimeSpan.TotalHours%2A> property.</span></span> <span data-ttu-id="61768-797">各 (時間、分、秒、およびミリ秒単位) を形成するコンポーネントの値の小数部の値もが表示されます。 その<xref:System.TimeSpan.TotalHours%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-797">It also displays the value of each component (hours, minutes, seconds, and milliseconds) that forms the fractional part of the value of its <xref:System.TimeSpan.TotalHours%2A> property.</span></span>  
  
 [!code-csharp[System.TimeSpan.TotalHours#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalhours/cs/totalhours.cs#1)]
 [!code-vb[System.TimeSpan.TotalHours#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalhours/vb/totalhours.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TotalMilliseconds">
      <MemberSignature Language="C#" Value="public double TotalMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalMilliseconds As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalMilliseconds { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalMilliseconds : double" Usage="System.TimeSpan.TotalMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-798">整数部と小数部から成るミリ秒数で表される、現在の <see cref="T:System.TimeSpan" /> 構造体の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-798">Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional milliseconds.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61768-799">このインスタンスで表されるミリ秒数の合計。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-799">The total number of milliseconds represented by this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-800">このプロパティは、このインスタンスの値をタイマー刻みからミリ秒に変換します。</span><span class="sxs-lookup"><span data-stu-id="61768-800">This property converts the value of this instance from ticks to milliseconds.</span></span> <span data-ttu-id="61768-801">この数には、整数部と小数部から成るミリ秒を含める可能性があります。</span><span class="sxs-lookup"><span data-stu-id="61768-801">This number might include whole and fractional milliseconds.</span></span>  
  
 <span data-ttu-id="61768-802"><xref:System.TimeSpan.TotalMilliseconds%2A>プロパティを表す整数部と小数部のミリ秒のに対して、<xref:System.TimeSpan.Milliseconds%2A>プロパティは整数のミリ秒単位を表します。</span><span class="sxs-lookup"><span data-stu-id="61768-802">The <xref:System.TimeSpan.TotalMilliseconds%2A> property represents whole and fractional milliseconds, whereas the <xref:System.TimeSpan.Milliseconds%2A> property represents whole milliseconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-803">次の例では、インスタンス化、<xref:System.TimeSpan>オブジェクトし、の値を表示します。 その<xref:System.TimeSpan.TotalMilliseconds%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-803">The following example instantiates a <xref:System.TimeSpan> object and displays the value of its <xref:System.TimeSpan.TotalMilliseconds%2A> property.</span></span>  
  
 [!code-csharp[System.TimeSpan.TotalMilliseconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalmilliseconds/cs/totalmilliseconds.cs#1)]
 [!code-vb[System.TimeSpan.TotalMilliseconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalmilliseconds/vb/totalmilliseconds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TotalMinutes">
      <MemberSignature Language="C#" Value="public double TotalMinutes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalMinutes" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalMinutes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalMinutes As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalMinutes { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalMinutes : double" Usage="System.TimeSpan.TotalMinutes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-804">整数部と小数部から成る分数で表される、現在の <see cref="T:System.TimeSpan" /> 構造体の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-804">Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional minutes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61768-805">このインスタンスで表される分数の合計。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-805">The total number of minutes represented by this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-806">このプロパティは、このインスタンスの値をタイマー刻みから分に変換します。</span><span class="sxs-lookup"><span data-stu-id="61768-806">This property converts the value of this instance from ticks to minutes.</span></span> <span data-ttu-id="61768-807">この数には、整数部と小数部の分が含まれます。</span><span class="sxs-lookup"><span data-stu-id="61768-807">This number might include whole and fractional minutes.</span></span>  
  
 <span data-ttu-id="61768-808"><xref:System.TimeSpan.TotalMinutes%2A>プロパティ整数部と小数部の分数を表すのに対して、<xref:System.TimeSpan.Minutes%2A>プロパティは分単位を表します。</span><span class="sxs-lookup"><span data-stu-id="61768-808">The <xref:System.TimeSpan.TotalMinutes%2A> property represents whole and fractional minutes, whereas the <xref:System.TimeSpan.Minutes%2A> property represents whole minutes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-809">次の例では、インスタンス化、<xref:System.TimeSpan>オブジェクトし、の値を表示します。 その<xref:System.TimeSpan.TotalMinutes%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-809">The following example instantiates a <xref:System.TimeSpan> object and displays the value of its <xref:System.TimeSpan.TotalMinutes%2A> property.</span></span> <span data-ttu-id="61768-810">各 (秒、ミリ秒単位) を形成するコンポーネントの値の小数部の値もが表示されます。 その<xref:System.TimeSpan.TotalMinutes%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-810">It also displays the value of each component (seconds, milliseconds) that forms the fractional part of the value of its <xref:System.TimeSpan.TotalMinutes%2A> property.</span></span>  
  
 [!code-csharp[System.TimeSpan.TotalMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalminutes/cs/totalminutes.cs#1)]
 [!code-vb[System.TimeSpan.TotalMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalminutes/vb/totalminutes.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TotalSeconds">
      <MemberSignature Language="C#" Value="public double TotalSeconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalSeconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalSeconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalSeconds As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalSeconds { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalSeconds : double" Usage="System.TimeSpan.TotalSeconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-811">整数部と小数部から成る秒数で表される、現在の <see cref="T:System.TimeSpan" /> 構造体の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-811">Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional seconds.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61768-812">このインスタンスで表される秒数の合計。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-812">The total number of seconds represented by this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-813">このプロパティは、このインスタンスの値をタイマー刻みから秒に変換します。</span><span class="sxs-lookup"><span data-stu-id="61768-813">This property converts the value of this instance from ticks to seconds.</span></span> <span data-ttu-id="61768-814">この数には、秒整数部と小数部にはが含まれます。</span><span class="sxs-lookup"><span data-stu-id="61768-814">This number might include whole and fractional seconds.</span></span>  
  
 <span data-ttu-id="61768-815"><xref:System.TimeSpan.TotalSeconds%2A>プロパティを表す整数部と小数部の秒のに対して、<xref:System.TimeSpan.Seconds%2A>プロパティは、秒を表します。</span><span class="sxs-lookup"><span data-stu-id="61768-815">The <xref:System.TimeSpan.TotalSeconds%2A> property represents whole and fractional seconds, whereas the <xref:System.TimeSpan.Seconds%2A> property represents whole seconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-816">次の例では、インスタンス化、<xref:System.TimeSpan>オブジェクトし、の値を表示します。 その<xref:System.TimeSpan.TotalSeconds%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-816">The following example instantiates a <xref:System.TimeSpan> object and displays the value of its <xref:System.TimeSpan.TotalSeconds%2A> property.</span></span> <span data-ttu-id="61768-817">値の小数部の一部を形成して、そのミリ秒コンポーネントの値も表示の<xref:System.TimeSpan.TotalSeconds%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="61768-817">It also displays the value of its milliseconds component, which forms the fractional part of the value of its <xref:System.TimeSpan.TotalSeconds%2A> property.</span></span>  
  
 [!code-csharp[System.TimeSpan.TotalSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalseconds/cs/totalseconds.cs#1)]
 [!code-vb[System.TimeSpan.TotalSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalseconds/vb/totalseconds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider formatProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional formatProvider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="timeSpan.TryFormat (destination, charsWritten, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61768-818">指定した文字列形式の時間間隔を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-818">Converts the specified string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.TimeSpan.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.ReadOnlySpan{System.Char},System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.TimeSpan.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.TimeSpan.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="61768-819">変換する時間間隔を指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-819">A string that specifies the time interval to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="61768-820">このメソッドが返されるときに、 <c>s</c> で指定した時間間隔を表すオブジェクトを格納します。変換に失敗した場合は、<see cref="F:System.TimeSpan.Zero" /> を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-820">When this method returns, contains an object that represents the time interval specified by <c>s</c>, or <see cref="F:System.TimeSpan.Zero" /> if the conversion failed.</span>
          </span>
          <span data-ttu-id="61768-821">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-821">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-822">時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-822">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-823">
            <see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-823">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="61768-824">
            <paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> である場合、書式が無効な場合、表される時間間隔が <see cref="F:System.TimeSpan.MinValue" /> より短いか <see cref="F:System.TimeSpan.MaxValue" /> より長い場合、または日、時間、分、秒の各構成要素の少なくとも 1 つが有効な範囲にない場合、この操作は <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-824">This operation returns <see langword="false" /> if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, has an invalid format, represents a time interval that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />, or has at least one days, hours, minutes, or seconds component outside its valid range.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-825"><xref:System.TimeSpan.TryParse%2A>などのメソッドは、<xref:System.TimeSpan.Parse%28System.String%29?displayProperty=nameWithType>メソッド、点を除いて、変換が失敗した場合、その it が例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="61768-825">The <xref:System.TimeSpan.TryParse%2A> method is like the <xref:System.TimeSpan.Parse%28System.String%29?displayProperty=nameWithType> method, except that it does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="61768-826">`s`パラメーターに含まれる形で時間間隔を指定します。</span><span class="sxs-lookup"><span data-stu-id="61768-826">The `s` parameter contains a time interval specification in the form:</span></span>  
  
 <span data-ttu-id="61768-827">[*ws*] [-] { *d* &#124; *d*.*hh*:*mm*[:*ss*[.*ff*] &#124; *hh*:*mm*[:*ss*[.*ff*]} [*ws*]</span><span class="sxs-lookup"><span data-stu-id="61768-827">[*ws*][-]{ *d* &#124; *d*.*hh*:*mm*[:*ss*[.*ff*]] &#124; *hh*:*mm*[:*ss*[.*ff*]] }[*ws*]</span></span>  
  
 <span data-ttu-id="61768-828">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="61768-828">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="61768-829">中かっこで囲まれた代替の一覧から 1 つの範囲 ({および}) の縦棒で区切られた (&#124;) が必要です。</span><span class="sxs-lookup"><span data-stu-id="61768-829">One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (&#124;) is required.</span></span> <span data-ttu-id="61768-830">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="61768-830">The following table describes each element.</span></span>  
  
|<span data-ttu-id="61768-831">要素</span><span class="sxs-lookup"><span data-stu-id="61768-831">Element</span></span>|<span data-ttu-id="61768-832">説明</span><span class="sxs-lookup"><span data-stu-id="61768-832">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="61768-833">*ws*</span><span class="sxs-lookup"><span data-stu-id="61768-833">*ws*</span></span>|<span data-ttu-id="61768-834">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="61768-834">Optional white space.</span></span>|  
|-|<span data-ttu-id="61768-835">負の値を示すオプションのマイナス記号、<xref:System.TimeSpan>します。</span><span class="sxs-lookup"><span data-stu-id="61768-835">An optional minus sign, which indicates a negative <xref:System.TimeSpan>.</span></span>|  
|<span data-ttu-id="61768-836">*d*</span><span class="sxs-lookup"><span data-stu-id="61768-836">*d*</span></span>|<span data-ttu-id="61768-837">0 から 10,675, 199 までの日数。</span><span class="sxs-lookup"><span data-stu-id="61768-837">Days, ranging from 0 to 10675199.</span></span>|  
|<span data-ttu-id="61768-838">である必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-838">.</span></span>|<span data-ttu-id="61768-839">時間単位から日を分離するカルチャを認識する記号です。</span><span class="sxs-lookup"><span data-stu-id="61768-839">A culture-sensitive symbol that separates days from hours.</span></span> <span data-ttu-id="61768-840">ピリオドを使用する、インバリアント形式 (".") 文字。</span><span class="sxs-lookup"><span data-stu-id="61768-840">The invariant format uses a period (".") character.</span></span>|  
|<span data-ttu-id="61768-841">*hh*</span><span class="sxs-lookup"><span data-stu-id="61768-841">*hh*</span></span>|<span data-ttu-id="61768-842">0 から 23 までの時間。</span><span class="sxs-lookup"><span data-stu-id="61768-842">Hours, ranging from 0 to 23.</span></span>|  
|<span data-ttu-id="61768-843">:</span><span class="sxs-lookup"><span data-stu-id="61768-843">:</span></span>|<span data-ttu-id="61768-844">カルチャに依存する時間の区切り記号です。</span><span class="sxs-lookup"><span data-stu-id="61768-844">The culture-sensitive time separator symbol.</span></span> <span data-ttu-id="61768-845">インバリアントの形式は、コロンを使用して (":") 文字。</span><span class="sxs-lookup"><span data-stu-id="61768-845">The invariant format uses a colon (":") character.</span></span>|  
|<span data-ttu-id="61768-846">*mm*</span><span class="sxs-lookup"><span data-stu-id="61768-846">*mm*</span></span>|<span data-ttu-id="61768-847">0 から 59 までの分。</span><span class="sxs-lookup"><span data-stu-id="61768-847">Minutes, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="61768-848">*ss*</span><span class="sxs-lookup"><span data-stu-id="61768-848">*ss*</span></span>|<span data-ttu-id="61768-849">0 から 59 まで省略可能な秒。</span><span class="sxs-lookup"><span data-stu-id="61768-849">Optional seconds, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="61768-850">である必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-850">.</span></span>|<span data-ttu-id="61768-851">秒の端数の秒を分離するカルチャを認識する記号です。</span><span class="sxs-lookup"><span data-stu-id="61768-851">A culture-sensitive symbol that separates seconds from fractions of a second.</span></span> <span data-ttu-id="61768-852">ピリオドを使用する、インバリアント形式 (".") 文字。</span><span class="sxs-lookup"><span data-stu-id="61768-852">The invariant format uses a period (".") character.</span></span>|  
|<span data-ttu-id="61768-853">*ff*</span><span class="sxs-lookup"><span data-stu-id="61768-853">*ff*</span></span>|<span data-ttu-id="61768-854">省略可能な秒の小数部を 1 ~ 7 桁です。</span><span class="sxs-lookup"><span data-stu-id="61768-854">Optional fractional seconds, consisting of one to seven decimal digits.</span></span>|  
  
 <span data-ttu-id="61768-855">コンポーネント`s`より大きいまたは等しい時間間隔をまとめて指定する必要があります<xref:System.TimeSpan.MinValue?displayProperty=nameWithType>以下と等しい、<xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="61768-855">The components of `s` must collectively specify a time interval that is greater than or equal to <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> and less than or equal to <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="61768-856"><xref:System.TimeSpan.Parse%28System.String%29>メソッドが、解析しようとしています。 `s` 、現在のカルチャのカルチャに固有の形式を使用しています。</span><span class="sxs-lookup"><span data-stu-id="61768-856">The <xref:System.TimeSpan.Parse%28System.String%29> method tries to parse `s` by using each of the culture-specific formats for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-857">次の例では、<xref:System.TimeSpan.TryParse%2A>メソッドを作成する<xref:System.TimeSpan>から有効なオブジェクト<xref:System.TimeSpan>文字列と時刻のスパンの文字列が無効であるため、解析操作ができなかった場合を指定します。</span><span class="sxs-lookup"><span data-stu-id="61768-857">The following example uses the <xref:System.TimeSpan.TryParse%2A> method to create <xref:System.TimeSpan> objects from valid <xref:System.TimeSpan> strings and to indicate when the parse operation has failed because the time span string is invalid.</span></span>  
  
 [!code-csharp[System.TimeSpan.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.TimeSpan.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/TryParse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="61768-858">
            <para>場合によっては、時間間隔コンポーネントに解析する文字列内に複数の 7 桁の数字が含まれている場合解析に成功した操作、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]と以前のバージョンが失敗して、スロー、<see cref="T:System.OverflowException" />で、 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]、次の例このシナリオを示しています。 [! コード csharp[System.TimeSpan.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparsefailure1.cs#3)] [! コード vb[System.TimeSpan.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparsefailure1.vb#3)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-858">
              <para>In some cases, when a time interval component in the string to be parsed contains more than seven digits, parsing operations that succeed in the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions may fail and throw an <see cref="T:System.OverflowException" /> in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], The following example illustrates this scenario.  [!code-csharp[System.TimeSpan.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparsefailure1.cs#3)] [!code-vb[System.TimeSpan.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparsefailure1.vb#3)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * IFormatProvider *  -&gt; bool" Usage="System.TimeSpan.TryParse (input, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * IFormatProvider *  -&gt; bool" Usage="System.TimeSpan.TryParse (input, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="61768-859">変換する時間間隔を指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-859">A string that specifies the time interval to convert.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="61768-860">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-860">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="61768-861">このメソッドが返されるときに、<c>input</c> で指定した時間間隔を表すオブジェクトを格納します。変換に失敗した場合は、<see cref="F:System.TimeSpan.Zero" /> を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-861">When this method returns, contains an object that represents the time interval specified by <c>input</c>, or <see cref="F:System.TimeSpan.Zero" /> if the conversion failed.</span>
          </span>
          <span data-ttu-id="61768-862">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-862">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-863">指定したカルチャ固有の書式情報を使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-863">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified culture-specific formatting information, and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-864">
            <see langword="true" /> が正常に変換された場合は <paramref name="input" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-864">
              <see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="61768-865">
            <paramref name="input" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> である場合、書式が無効な場合、表される時間間隔が <see cref="F:System.TimeSpan.MinValue" /> より短いか <see cref="F:System.TimeSpan.MaxValue" /> より長い場合、または日、時間、分、秒の各構成要素の少なくとも 1 つが有効な範囲にない場合、この操作は <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-865">This operation returns <see langword="false" /> if the <paramref name="input" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, has an invalid format, represents a time interval that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />, or has at least one days, hours, minutes, or seconds component outside its valid range.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-866"><xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29>などのメソッドは、<xref:System.TimeSpan.Parse%28System.String%2CSystem.IFormatProvider%29>メソッド、点を除いて、変換が失敗した場合、その it が例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="61768-866">The <xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method is like the <xref:System.TimeSpan.Parse%28System.String%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="61768-867">`input`パラメーターに含まれる形で時間間隔を指定します。</span><span class="sxs-lookup"><span data-stu-id="61768-867">The `input` parameter contains a time interval specification in the form:</span></span>  
  
 <span data-ttu-id="61768-868">[*ws*] [-] { *d* &#124; *d*.*hh*:*mm*[:*ss*[.*ff*] &#124; *hh*:*mm*[:*ss*[.*ff*]} [*ws*]</span><span class="sxs-lookup"><span data-stu-id="61768-868">[*ws*][-]{ *d* &#124; *d*.*hh*:*mm*[:*ss*[.*ff*]] &#124; *hh*:*mm*[:*ss*[.*ff*]] }[*ws*]</span></span>  
  
 <span data-ttu-id="61768-869">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="61768-869">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="61768-870">中かっこで囲まれた代替の一覧から 1 つの範囲 ({および}) の縦棒で区切られた (&#124;) が必要です。</span><span class="sxs-lookup"><span data-stu-id="61768-870">One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (&#124;) is required.</span></span> <span data-ttu-id="61768-871">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="61768-871">The following table describes each element.</span></span>  
  
|<span data-ttu-id="61768-872">要素</span><span class="sxs-lookup"><span data-stu-id="61768-872">Element</span></span>|<span data-ttu-id="61768-873">説明</span><span class="sxs-lookup"><span data-stu-id="61768-873">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="61768-874">*ws*</span><span class="sxs-lookup"><span data-stu-id="61768-874">*ws*</span></span>|<span data-ttu-id="61768-875">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="61768-875">Optional white space.</span></span>|  
|-|<span data-ttu-id="61768-876">負の値を示すオプションのマイナス記号、<xref:System.TimeSpan>します。</span><span class="sxs-lookup"><span data-stu-id="61768-876">An optional minus sign, which indicates a negative <xref:System.TimeSpan>.</span></span>|  
|<span data-ttu-id="61768-877">*d*</span><span class="sxs-lookup"><span data-stu-id="61768-877">*d*</span></span>|<span data-ttu-id="61768-878">0 から 10,675, 199 までの日数。</span><span class="sxs-lookup"><span data-stu-id="61768-878">Days, ranging from 0 to 10675199.</span></span>|  
|<span data-ttu-id="61768-879">である必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-879">.</span></span>|<span data-ttu-id="61768-880">時間単位から日を分離するカルチャを認識する記号です。</span><span class="sxs-lookup"><span data-stu-id="61768-880">A culture-sensitive symbol that separates days from hours.</span></span> <span data-ttu-id="61768-881">ピリオドを使用する、インバリアント形式 (".") 文字。</span><span class="sxs-lookup"><span data-stu-id="61768-881">The invariant format uses a period (".") character.</span></span>|  
|<span data-ttu-id="61768-882">*hh*</span><span class="sxs-lookup"><span data-stu-id="61768-882">*hh*</span></span>|<span data-ttu-id="61768-883">0 から 23 までの時間。</span><span class="sxs-lookup"><span data-stu-id="61768-883">Hours, ranging from 0 to 23.</span></span>|  
|<span data-ttu-id="61768-884">:</span><span class="sxs-lookup"><span data-stu-id="61768-884">:</span></span>|<span data-ttu-id="61768-885">カルチャに依存する時間の区切り記号です。</span><span class="sxs-lookup"><span data-stu-id="61768-885">The culture-sensitive time separator symbol.</span></span> <span data-ttu-id="61768-886">インバリアントの形式は、コロンを使用して (":") 文字。</span><span class="sxs-lookup"><span data-stu-id="61768-886">The invariant format uses a colon (":") character.</span></span>|  
|<span data-ttu-id="61768-887">*mm*</span><span class="sxs-lookup"><span data-stu-id="61768-887">*mm*</span></span>|<span data-ttu-id="61768-888">0 から 59 までの分。</span><span class="sxs-lookup"><span data-stu-id="61768-888">Minutes, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="61768-889">*ss*</span><span class="sxs-lookup"><span data-stu-id="61768-889">*ss*</span></span>|<span data-ttu-id="61768-890">0 から 59 まで省略可能な秒。</span><span class="sxs-lookup"><span data-stu-id="61768-890">Optional seconds, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="61768-891">である必要があります。</span><span class="sxs-lookup"><span data-stu-id="61768-891">.</span></span>|<span data-ttu-id="61768-892">秒の端数の秒を分離するカルチャを認識する記号です。</span><span class="sxs-lookup"><span data-stu-id="61768-892">A culture-sensitive symbol that separates seconds from fractions of a second.</span></span> <span data-ttu-id="61768-893">ピリオドを使用する、インバリアント形式 (".") 文字。</span><span class="sxs-lookup"><span data-stu-id="61768-893">The invariant format uses a period (".") character.</span></span>|  
|<span data-ttu-id="61768-894">*ff*</span><span class="sxs-lookup"><span data-stu-id="61768-894">*ff*</span></span>|<span data-ttu-id="61768-895">省略可能な秒の小数部を 1 ~ 7 桁です。</span><span class="sxs-lookup"><span data-stu-id="61768-895">Optional fractional seconds, consisting of one to seven decimal digits.</span></span>|  
  
 <span data-ttu-id="61768-896">コンポーネント`input`より大きいまたは等しい時間間隔をまとめて指定する必要があります<xref:System.TimeSpan.MinValue?displayProperty=nameWithType>以下と等しい、<xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="61768-896">The components of `input` must collectively specify a time interval that is greater than or equal to <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> and less than or equal to <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="61768-897"><xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29>メソッドが、解析しようとしています。`input`のカルチャに固有の形式で指定されたカルチャを使用して`formatProvider`します。</span><span class="sxs-lookup"><span data-stu-id="61768-897">The <xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method tries to parse `input` by using each of the culture-specific formats for the culture specified by `formatProvider`.</span></span>  
  
 <span data-ttu-id="61768-898">`formatProvider`パラメーターは、<xref:System.IFormatProvider>返される文字列の書式設定に関するカルチャに固有の情報を提供する実装。</span><span class="sxs-lookup"><span data-stu-id="61768-898">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string.</span></span> <span data-ttu-id="61768-899">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-899">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="61768-900">A<xref:System.Globalization.CultureInfo>書式指定規則が返される文字列に反映するのには、カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-900">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="61768-901"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティが返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="61768-901">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-902">A<xref:System.Globalization.DateTimeFormatInfo>返される文字列の書式設定を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-902">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-903">実装するカスタム オブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="61768-903">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="61768-904">その<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-904">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="61768-905">場合`formatProvider`は`null`、<xref:System.Globalization.DateTimeFormatInfo>現在のカルチャに関連付けられているオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-905">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-906">次の例の配列を定義する<xref:System.Globalization.CultureInfo>オブジェクト、および呼び出しで各オブジェクトを使用して、<xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29>文字列配列内の要素を解析します。</span><span class="sxs-lookup"><span data-stu-id="61768-906">The following example defines an array of <xref:System.Globalization.CultureInfo> objects, and uses each object in calls to the <xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method to parse the elements in a string array.</span></span> <span data-ttu-id="61768-907">この例では、特定のカルチャの規則が、書式設定操作にどのように影響するかを示します。</span><span class="sxs-lookup"><span data-stu-id="61768-907">The example illustrates how the conventions of a specific culture influence the formatting operation.</span></span>  
  
 [!code-csharp[System.TimeSpan.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparse2.cs#2)]
 [!code-vb[System.TimeSpan.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="61768-908">
            <para>場合によっては、時間間隔コンポーネントに解析する文字列内に複数の 7 桁の数字が含まれている場合解析操作が成功し、返す<see langword="true" />で、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]と以前のバージョンが失敗して返す<see langword="false" />で、 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]、次の例では、このシナリオを示します。 [! コード csharp[System.TimeSpan.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparsefailure1.cs#3)] [! コード vb[System.TimeSpan.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparsefailure1.vb#3)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-908">
              <para>In some cases, when a time interval component in the string to be parsed contains more than seven digits, parsing operations that succeed and return <see langword="true" /> in the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions may fail and return <see langword="false" /> in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], The following example illustrates this scenario.  [!code-csharp[System.TimeSpan.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparsefailure1.cs#3)] [!code-vb[System.TimeSpan.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparsefailure1.vb#3)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61768-909">時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-909">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span>
          </span>
          <span data-ttu-id="61768-910">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-910">The format of the string representation must match a specified format exactly.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.TimeSpan.ParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, format, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, formats, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, format, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="61768-911">変換する時間間隔を指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-911">A string that specifies the time interval to convert.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="61768-912">
            <c>input</c> に要求される書式を定義する標準またはカスタムの書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-912">A standard or custom format string that defines the required format of <c>input</c>.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="61768-913">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-913">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="61768-914">このメソッドが返されるときに、<c>input</c> で指定した時間間隔を表すオブジェクトを格納します。変換に失敗した場合は、<see cref="F:System.TimeSpan.Zero" /> を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-914">When this method returns, contains an object that represents the time interval specified by <c>input</c>, or <see cref="F:System.TimeSpan.Zero" /> if the conversion failed.</span>
          </span>
          <span data-ttu-id="61768-915">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-915">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-916">指定した書式とカルチャ固有の書式情報を使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-916">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified format and culture-specific format information, and returns a value that indicates whether the conversion succeeded.</span>
          </span>
          <span data-ttu-id="61768-917">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-917">The format of the string representation must match the specified format exactly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-918">
            <see langword="true" /> が正常に変換された場合は <paramref name="input" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-918">
              <see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-919"><xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29>メソッドで定義された書式である必要があります時間間隔の文字列表現を解析し、`format`パラメーター、その先頭および末尾の空白文字が無視される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="61768-919">The <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method parses the string representation of a time interval, which must be in the format defined by the `format` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="61768-920">このメソッドは、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29>メソッド、点を除いて、変換が失敗した場合、その it が例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="61768-920">This method is similar to the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="61768-921">`format`パラメーターは、1 つの標準書式指定子、または必要な書式を定義する 1 つまたは複数のカスタム書式指定子を含む文字列`input`します。</span><span class="sxs-lookup"><span data-stu-id="61768-921">The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="61768-922">有効な書式指定文字列についての詳細については、次を参照してください。[標準 TimeSpan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)と[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="61768-922">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="61768-923"><xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29>メソッドで指定されたカルチャの規則を使用する、`formatProvider`場合にのみパラメーター`format`標準<xref:System.TimeSpan>値の"g"または"G"のいずれかの文字列の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="61768-923">The <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method uses the conventions of the culture specified by the `formatProvider` parameter only if `format` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="61768-924">"C"、"t"および"T"標準書式指定文字列は、インバリアント カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-924">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="61768-925">カスタム書式指定文字列は、入力文字列の正確な形式を定義し、リテラル文字を使用して時間間隔のコンポーネントを分離します。</span><span class="sxs-lookup"><span data-stu-id="61768-925">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="61768-926">`formatProvider`パラメーターは、<xref:System.IFormatProvider>場合、返される文字列の書式設定に関するカルチャに固有の情報を提供する実装`format`は標準書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="61768-926">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if `format` is a standard format string.</span></span> <span data-ttu-id="61768-927">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-927">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="61768-928">A<xref:System.Globalization.CultureInfo>書式指定規則が返される文字列に反映するのには、カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-928">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="61768-929"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティが返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="61768-929">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-930">A<xref:System.Globalization.DateTimeFormatInfo>返される文字列の書式設定を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-930">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-931">実装するカスタム オブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="61768-931">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="61768-932">その<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-932">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="61768-933">場合`formatProvider`は`null`、<xref:System.Globalization.DateTimeFormatInfo>現在のカルチャに関連付けられているオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-933">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-934">次の例では、<xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29>さまざまな書式指定文字列とカルチャを使用して時間間隔のいくつかの文字列表現を解析します。</span><span class="sxs-lookup"><span data-stu-id="61768-934">The following example uses the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method to parse several string representations of time intervals using various format strings and cultures.</span></span>  
  
 [!code-csharp[System.TimeSpan.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample1.cs#1)]
 [!code-vb[System.TimeSpan.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, formats As String(), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, formats, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="61768-935">変換する時間間隔を指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-935">A string that specifies the time interval to convert.</span>
          </span>
        </param>
        <param name="formats">
          <span data-ttu-id="61768-936">
            <c>input</c> に許容される書式を定義する標準またはカスタムの書式指定文字列の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-936">A array of standard or custom format strings that define the acceptable formats of <c>input</c>.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="61768-937">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-937">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="61768-938">このメソッドが返されるときに、<c>input</c> で指定した時間間隔を表すオブジェクトを格納します。変換に失敗した場合は、<see cref="F:System.TimeSpan.Zero" /> を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-938">When this method returns, contains an object that represents the time interval specified by <c>input</c>, or <see cref="F:System.TimeSpan.Zero" /> if the conversion failed.</span>
          </span>
          <span data-ttu-id="61768-939">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-939">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-940">指定した書式とカルチャ固有の書式情報を使用して、指定した文字列形式の時間間隔を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-940">Converts the specified string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified formats and culture-specific format information, and returns a value that indicates whether the conversion succeeded.</span>
          </span>
          <span data-ttu-id="61768-941">文字列形式の書式は、指定されたいずれかの書式と完全に一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-941">The format of the string representation must match one of the specified formats exactly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-942">
            <see langword="true" /> が正常に変換された場合は <paramref name="input" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-942">
              <see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-943"><xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29>メソッドで指定された書式指定文字列のいずれかで定義された書式である必要があります時間間隔の文字列表現を解析し、`formats`パラメーター、その先頭および末尾の空白文字が無視される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="61768-943">The <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method parses the string representation of a time interval, which must be in the format defined by one of the format strings specified by the `formats` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="61768-944">このメソッドは、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%29>メソッド、点を除いて、変換が失敗した場合、その it が例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="61768-944">This method is similar to the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="61768-945">`formats`パラメーターは文字列配列で 1 つの標準書式指定子、または必要な書式を定義する 1 つまたは複数のカスタム書式指定子のいずれかの要素で構成されます`input`します。</span><span class="sxs-lookup"><span data-stu-id="61768-945">The `formats` parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="61768-946">有効な書式指定文字列についての詳細については、次を参照してください。[標準 TimeSpan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)と[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="61768-946">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span> <span data-ttu-id="61768-947">`input` メンバーと正確に一致する必要があります`formats`解析操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="61768-947">`input` must correspond exactly to a member of `formats` for the parse operation to succeed.</span></span> <span data-ttu-id="61768-948">解析操作が、照合しようとしています。`input`内の各要素に`formats`以降では、配列の最初の要素。</span><span class="sxs-lookup"><span data-stu-id="61768-948">The parse operation attempts to match `input` to each element in `formats` starting with the first element in the array.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="61768-949"><xref:System.TimeSpan.TryParseExact%2A>メソッドで指定されたカルチャの規則を使用する、`formatProvider`パラメーター書式指定文字列を解析するために使用する場合にのみ`input`標準<xref:System.TimeSpan>値の"g"または"G"のいずれかの文字列の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="61768-949">The <xref:System.TimeSpan.TryParseExact%2A> method uses the conventions of the culture specified by the `formatProvider` parameter only if the format string used to parse `input` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="61768-950">"C"、"t"および"T"標準書式指定文字列は、インバリアント カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-950">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="61768-951">カスタム書式指定文字列は、入力文字列の正確な形式を定義し、リテラル文字を使用して時間間隔のコンポーネントを分離します。</span><span class="sxs-lookup"><span data-stu-id="61768-951">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="61768-952">`formatProvider`パラメーターは、<xref:System.IFormatProvider>書式指定文字列を解析するために使用する場合に返される文字列の書式設定に関するカルチャに固有の情報を提供する実装`input`は標準書式指定文字列です。</span><span class="sxs-lookup"><span data-stu-id="61768-952">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if the format string used to parse `input` is a standard format string.</span></span> <span data-ttu-id="61768-953">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-953">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="61768-954">A<xref:System.Globalization.CultureInfo>書式指定規則が返される文字列に反映するのには、カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-954">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="61768-955"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティが返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="61768-955">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-956">A<xref:System.Globalization.DateTimeFormatInfo>返される文字列の書式設定を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-956">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-957">実装するカスタム オブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="61768-957">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="61768-958">その<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-958">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="61768-959">場合`formatProvider`は`null`、<xref:System.Globalization.DateTimeFormatInfo>現在のカルチャに関連付けられているオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-959">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-960">次の例では、<xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29>への文字列配列の各要素に変換するメソッド、<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-960">The following example calls the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method to convert each element of a string array to a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="61768-961">例では、フランス語 - フランス ("FR-FR") カルチャの書式設定規則を使用して、文字列を解釈します。</span><span class="sxs-lookup"><span data-stu-id="61768-961">The example interprets the strings by using the formatting conventions of the French - France ("fr-FR") culture.</span></span> <span data-ttu-id="61768-962">文字列は、一般の短い形式または一般の長い形式のいずれかで、時間間隔を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="61768-962">The strings can represent a time interval in either the general short format or the general long format.</span></span>  
  
 <span data-ttu-id="61768-963">さらに、時間間隔の解析メソッドが 1 桁の数字を解釈する方法を変更します。</span><span class="sxs-lookup"><span data-stu-id="61768-963">In addition, the example changes the way in which the time interval parsing methods interpret a single digit.</span></span> <span data-ttu-id="61768-964">通常、1 桁の数字は、時間間隔の日数として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="61768-964">Ordinarily, a single digit is interpreted as the number of days in a time interval.</span></span> <span data-ttu-id="61768-965">代わりに、`%h`カスタム書式指定文字列は 1 桁の数字を時間数として解釈するために使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-965">Instead, the `%h` custom format string is used to interpret a single digit as the number of hours.</span></span> <span data-ttu-id="61768-966">この変更を有効にするには、ことに注意して、`%h`カスタム書式指定文字列でその他の書式指定文字列を付ける必要があります、`formats`配列。</span><span class="sxs-lookup"><span data-stu-id="61768-966">For this change to be effective, note that the `%h` custom format string must precede the other format strings in the `formats` array.</span></span>  
  
 [!code-csharp[System.TimeSpan.TryParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample3.cs#3)]
 [!code-vb[System.TimeSpan.TryParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample3.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.TimeSpanStyles *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.TimeSpanStyles *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider * System.Globalization.TimeSpanStyles *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="61768-967">変換する時間間隔を指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-967">A string that specifies the time interval to convert.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="61768-968">
            <c>input</c> に要求される書式を定義する標準またはカスタムの書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-968">A standard or custom format string that defines the required format of <c>input</c>.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="61768-969">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-969">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <param name="styles">
          <span data-ttu-id="61768-970">
            <c>input</c> のスタイルを示す 1 つ以上の列挙値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-970">One or more enumeration values that indicate the style of <c>input</c>.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="61768-971">このメソッドが返されるときに、<c>input</c> で指定した時間間隔を表すオブジェクトを格納します。変換に失敗した場合は、<see cref="F:System.TimeSpan.Zero" /> を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-971">When this method returns, contains an object that represents the time interval specified by <c>input</c>, or <see cref="F:System.TimeSpan.Zero" /> if the conversion failed.</span>
          </span>
          <span data-ttu-id="61768-972">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-972">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-973">指定した書式、カルチャ固有の書式情報、およびスタイルを使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-973">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified format, culture-specific format information, and styles, and returns a value that indicates whether the conversion succeeded.</span>
          </span>
          <span data-ttu-id="61768-974">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-974">The format of the string representation must match the specified format exactly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-975">
            <see langword="true" /> が正常に変換された場合は <paramref name="input" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-975">
              <see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-976"><xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29>メソッドで定義された書式である必要があります時間間隔の文字列表現を解析し、`format`パラメーター、その先頭および末尾の空白文字が無視される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="61768-976">The <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method parses the string representation of a time interval, which must be in the format defined by the `format` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="61768-977">このメソッドは、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29>メソッド、点を除いて、変換が失敗した場合、その it が例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="61768-977">This method is similar to the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> method, except that it does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="61768-978">`format`パラメーターは、1 つの標準書式指定子、または必要な書式を定義する 1 つまたは複数のカスタム書式指定子を含む文字列`input`します。</span><span class="sxs-lookup"><span data-stu-id="61768-978">The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="61768-979">有効な書式指定文字列についての詳細については、次を参照してください。[標準 TimeSpan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)と[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="61768-979">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
 <span data-ttu-id="61768-980">`formatProvider`パラメーターは、<xref:System.IFormatProvider>場合、返される文字列の書式設定に関するカルチャに固有の情報を提供する実装`format`は標準書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="61768-980">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if `format` is a standard format string.</span></span> <span data-ttu-id="61768-981">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-981">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="61768-982">A<xref:System.Globalization.CultureInfo>書式指定規則が返される文字列に反映するのには、カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-982">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="61768-983"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティが返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="61768-983">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-984">A<xref:System.Globalization.DateTimeFormatInfo>返される文字列の書式設定を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-984">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-985">実装するカスタム オブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="61768-985">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="61768-986">その<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-986">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="61768-987">場合`formatProvider`は`null`、<xref:System.Globalization.DateTimeFormatInfo>現在のカルチャに関連付けられているオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-987">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
 <span data-ttu-id="61768-988">`styles`パラメーターはカスタム書式指定文字列を使用して解析される文字列の解釈に影響します。</span><span class="sxs-lookup"><span data-stu-id="61768-988">The `styles` parameter affects the interpretation of strings parsed using custom format strings.</span></span> <span data-ttu-id="61768-989">判断したかどうか`input`は、負の符号が存在する場合にのみ負の時間間隔として解釈されます (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>)、常に負の時間間隔として解釈ことか、または (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="61768-989">It determines whether `input` is interpreted as a negative time interval only if a negative sign is present (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), or whether it is always interpreted as a negative time interval (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>).</span></span> <span data-ttu-id="61768-990">場合<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>が使用されていない`format`リテラル負の記号を含める必要があります (など"\\-") を正常に負の時間間隔を解析します。</span><span class="sxs-lookup"><span data-stu-id="61768-990">If <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> is not used, `format` must include a literal negative sign symbol (such as "\\-") to successfully parse a negative time interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-991">次の例では、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29>さまざまな書式指定文字列とカルチャを使用して時間間隔のいくつかの文字列表現を解析します。</span><span class="sxs-lookup"><span data-stu-id="61768-991">The following example uses the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method to parse several string representations of time intervals using various format strings and cultures.</span></span> <span data-ttu-id="61768-992">また、使用、<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>負の時間間隔として各文字列を解釈する値。</span><span class="sxs-lookup"><span data-stu-id="61768-992">It also uses the <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> value to interpret each string as a negative time interval.</span></span> <span data-ttu-id="61768-993">例の出力を示している<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>スタイルは、カスタム書式指定文字列と共に使用する場合にのみ、戻り値を適用します。</span><span class="sxs-lookup"><span data-stu-id="61768-993">The output from the example illustrates that the <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> style affects the return value only when it is used with custom format strings.</span></span>  
  
 [!code-csharp[System.TimeSpan.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample2.cs#2)]
 [!code-vb[System.TimeSpan.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider * System.Globalization.TimeSpanStyles *  -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="61768-994">変換する時間間隔を指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-994">A string that specifies the time interval to convert.</span>
          </span>
        </param>
        <param name="formats">
          <span data-ttu-id="61768-995">
            <c>input</c> に許容される書式を定義する標準またはカスタムの書式指定文字列の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-995">A array of standard or custom format strings that define the acceptable formats of <c>input</c>.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="61768-996">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-996">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <param name="styles">
          <span data-ttu-id="61768-997">
            <c>input</c> のスタイルを示す 1 つ以上の列挙値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-997">One or more enumeration values that indicate the style of <c>input</c>.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="61768-998">このメソッドが返されるときに、<c>input</c> で指定した時間間隔を表すオブジェクトを格納します。変換に失敗した場合は、<see cref="F:System.TimeSpan.Zero" /> を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-998">When this method returns, contains an object that represents the time interval specified by <c>input</c>, or <see cref="F:System.TimeSpan.Zero" /> if the conversion failed.</span>
          </span>
          <span data-ttu-id="61768-999">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-999">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61768-1000">指定した書式、カルチャ固有の書式情報、およびスタイルを使用して、指定した文字列形式の時間間隔を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-1000">Converts the specified string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified formats, culture-specific format information, and styles, and returns a value that indicates whether the conversion succeeded.</span>
          </span>
          <span data-ttu-id="61768-1001">文字列形式の書式は、指定されたいずれかの書式と完全に一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-1001">The format of the string representation must match one of the specified formats exactly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61768-1002">
            <see langword="true" /> が正常に変換された場合は <paramref name="input" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-1002">
              <see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-1003"><xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29>メソッドで指定された書式指定文字列のいずれかで定義された書式である必要があります時間間隔の文字列表現を解析し、`formats`パラメーター、その先頭および末尾の空白文字が無視される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="61768-1003">The <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method parses the string representation of a time interval, which must be in the format defined by one of the format strings specified by the `formats` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="61768-1004">このメソッドは、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29>メソッド、点を除いて、変換が失敗した場合、その it が例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="61768-1004">This method is similar to the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> method, except that it does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="61768-1005">`formats`パラメーターは文字列配列で 1 つの標準書式指定子、または必要な書式を定義する 1 つまたは複数のカスタム書式指定子のいずれかの要素で構成されます`input`します。</span><span class="sxs-lookup"><span data-stu-id="61768-1005">The `formats` parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="61768-1006">有効な書式指定文字列についての詳細については、次を参照してください。[標準 TimeSpan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)と[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="61768-1006">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span> <span data-ttu-id="61768-1007">`input` メンバーと正確に一致する必要があります`formats`解析操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="61768-1007">`input` must correspond exactly to a member of `formats` for the parse operation to succeed.</span></span> <span data-ttu-id="61768-1008">解析操作が、照合しようとしています。`input`内の各要素に`formats`以降では、配列の最初の要素。</span><span class="sxs-lookup"><span data-stu-id="61768-1008">The parse operation attempts to match `input` to each element in `formats` starting with the first element in the array.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="61768-1009"><xref:System.TimeSpan.ParseExact%2A>メソッドで指定されたカルチャの規則を使用する、`formatProvider`パラメーター書式指定文字列を解析するために使用する場合にのみ`input`標準<xref:System.TimeSpan>値の"g"または"G"のいずれかの文字列の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="61768-1009">The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the `formatProvider` parameter only if the format string used to parse `input` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="61768-1010">"C"、"t"および"T"標準書式指定文字列は、インバリアント カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-1010">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="61768-1011">カスタム書式指定文字列は、入力文字列の正確な形式を定義し、リテラル文字を使用して時間間隔のコンポーネントを分離します。</span><span class="sxs-lookup"><span data-stu-id="61768-1011">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="61768-1012">`formatProvider`パラメーターは、<xref:System.IFormatProvider>書式指定文字列を解析するために使用する場合に返される文字列の書式設定に関するカルチャに固有の情報を提供する実装`input`は標準書式指定文字列です。</span><span class="sxs-lookup"><span data-stu-id="61768-1012">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if the format string used to parse `input` is a standard format string.</span></span> <span data-ttu-id="61768-1013">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="61768-1013">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="61768-1014">A<xref:System.Globalization.CultureInfo>書式指定規則が返される文字列に反映するのには、カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-1014">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="61768-1015"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティが返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="61768-1015">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-1016">A<xref:System.Globalization.DateTimeFormatInfo>返される文字列の書式設定を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-1016">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="61768-1017">実装するカスタム オブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="61768-1017">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="61768-1018">その<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-1018">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="61768-1019">場合`formatProvider`は`null`、<xref:System.Globalization.DateTimeFormatInfo>現在のカルチャに関連付けられているオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-1019">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
 <span data-ttu-id="61768-1020">`styles`パラメーターはカスタム書式指定文字列を使用して解析される文字列の解釈に影響します。</span><span class="sxs-lookup"><span data-stu-id="61768-1020">The `styles` parameter affects the interpretation of strings that are parsed using custom format strings.</span></span> <span data-ttu-id="61768-1021">判断したかどうか`input`は、負の符号が存在する場合にのみ負の時間間隔として解釈されます (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>)、常に負の時間間隔として解釈ことか、または (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="61768-1021">It determines whether `input` is interpreted as a negative time interval only if a negative sign is present (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), or whether it is always interpreted as a negative time interval (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>).</span></span> <span data-ttu-id="61768-1022">場合<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>が使用されていない`format`リテラル負の記号を含める必要があります (など"\\-") を正常に負の時間間隔を解析します。</span><span class="sxs-lookup"><span data-stu-id="61768-1022">If <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> is not used, `format` must include a literal negative sign symbol (such as "\\-") to successfully parse a negative time interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-1023">次の例では、<xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29>への文字列配列の各要素に変換するメソッド、<xref:System.TimeSpan>値。</span><span class="sxs-lookup"><span data-stu-id="61768-1023">The following example calls the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method to convert each element of a string array to a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="61768-1024">文字列は、一般の短い形式または一般の長い形式のいずれかで、時間間隔を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="61768-1024">The strings can represent a time interval in either the general short format or the general long format.</span></span>  
  
 <span data-ttu-id="61768-1025">さらに、時間間隔の解析メソッドが 1 桁の数字を解釈する方法を変更します。</span><span class="sxs-lookup"><span data-stu-id="61768-1025">In addition, the example changes the way in which the time interval parsing methods interpret a single digit.</span></span> <span data-ttu-id="61768-1026">通常、1 桁の数字は、時間間隔の日数として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="61768-1026">Ordinarily, a single digit is interpreted as the number of days in a time interval.</span></span> <span data-ttu-id="61768-1027">代わりに、`%h`カスタム書式指定文字列は 1 桁の数字を時間数として解釈するために使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-1027">Instead, the `%h` custom format string is used to interpret a single digit as the number of hours.</span></span> <span data-ttu-id="61768-1028">この変更を有効にするには、ことに注意して、`%h`カスタム書式指定文字列でその他の書式指定文字列を付ける必要があります、`formats`配列。</span><span class="sxs-lookup"><span data-stu-id="61768-1028">For this change to be effective, note that the `%h` custom format string must precede the other format strings in the `formats` array.</span></span> <span data-ttu-id="61768-1029">出力からも注意してくださいを<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>メソッドの呼び出しで指定されたフラグは、この書式指定子で文字列を解析する場合にのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="61768-1029">Also note from the output that the <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> flag specified in the method call is used only when parsing a string with this format specifier.</span></span>  
  
 [!code-csharp[System.TimeSpan.TryParseExact#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample4.cs#4)]
 [!code-vb[System.TimeSpan.TryParseExact#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample4.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan Zero" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Zero As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan Zero;" />
      <MemberSignature Language="F#" Value=" staticval mutable Zero : TimeSpan" Usage="System.TimeSpan.Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61768-1030">0 の <see cref="T:System.TimeSpan" /> 値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-1030">Represents the zero <see cref="T:System.TimeSpan" /> value.</span>
          </span>
          <span data-ttu-id="61768-1031">このフィールドは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61768-1031">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61768-1032">の値、<xref:System.TimeSpan.Zero>フィールドは、<xref:System.TimeSpan>ゼロの時刻の値を表すオブジェクトを他と比較することができます<xref:System.TimeSpan>後者表す正の値、0 以外の場合、または負の時間間隔かどうかを判断するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61768-1032">Because the value of the <xref:System.TimeSpan.Zero> field is a <xref:System.TimeSpan> object that represents a zero time value, you can compare it with other <xref:System.TimeSpan> objects to determine whether the latter represent positive, non-zero, or negative time intervals.</span></span> <span data-ttu-id="61768-1033">初期化するために、このフィールドを使用することもできます。、<xref:System.TimeSpan>オブジェクトに値がゼロにします。</span><span class="sxs-lookup"><span data-stu-id="61768-1033">You can also use this field to initialize a <xref:System.TimeSpan> object to a zero time value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61768-1034">次の例を参照し、値を表示、<xref:System.TimeSpan.Zero>フィールド。</span><span class="sxs-lookup"><span data-stu-id="61768-1034">The following example references and displays the value of the <xref:System.TimeSpan.Zero> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>