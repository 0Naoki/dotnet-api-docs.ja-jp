<Type Name="ThreadStaticAttribute" FullName="System.ThreadStaticAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07d61cca1964f76b932d1ee8a032f6d54ae50db7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ThreadStaticAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ThreadStaticAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ThreadStaticAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadStaticAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadStaticAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f07b2-101">静的フィールドの値がスレッドごとに一意であることを示します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f07b2-101">Indicates that the value of a static field is unique for each thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f07b2-102">A`static`でマークされたフィールド<xref:System.ThreadStaticAttribute>スレッド間で共有されていません。</span><span class="sxs-lookup"><span data-stu-id="f07b2-102">A `static` field marked with <xref:System.ThreadStaticAttribute> is not shared between threads.</span></span> <span data-ttu-id="f07b2-103">各実行中のスレッドは、フィールドの個別のインスタンスがおよびとは独立して設定し、そのフィールドの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f07b2-103">Each executing thread has a separate instance of the field, and independently sets and gets values for that field.</span></span> <span data-ttu-id="f07b2-104">フィールドに別のスレッドにアクセスした場合、別の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="f07b2-104">If the field is accessed on a different thread, it will contain a different value.</span></span>  
  
 <span data-ttu-id="f07b2-105">適用するだけでなくことに注意してください、<xref:System.ThreadStaticAttribute>属性、フィールドにする必要がありますも定義として、`static`フィールド (c#) または`Shared`(Visual Basic) のフィールドです。</span><span class="sxs-lookup"><span data-stu-id="f07b2-105">Note that in addition to applying the <xref:System.ThreadStaticAttribute> attribute to a field, you must also define it as a `static` field (in C#) or a `Shared` field (in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f07b2-106">マークされたフィールドの初期値を指定しない`ThreadStaticAttribute`このような初期化は、1 回だけで、クラス コンス トラクターを実行して、スレッド 1 つだけをそのために影響が発生したため、します。</span><span class="sxs-lookup"><span data-stu-id="f07b2-106">Do not specify initial values for fields marked with `ThreadStaticAttribute`, because such initialization occurs only once, when the class constructor executes, and therefore affects only one thread.</span></span> <span data-ttu-id="f07b2-107">値の型である場合またはその既定値に初期化されているフィールドを使用する場合は、初期値を指定しないと、`null`参照型である場合。</span><span class="sxs-lookup"><span data-stu-id="f07b2-107">If you do not specify an initial value, you can rely on the field being initialized to its default value if it is a value type, or to `null` if it is a reference type.</span></span>  
  
 <span data-ttu-id="f07b2-108">これは、この属性を使用し、そこから派生していません。</span><span class="sxs-lookup"><span data-stu-id="f07b2-108">Use this attribute as it is, and do not derive from it.</span></span>  
  
 <span data-ttu-id="f07b2-109">属性の使用方法の詳細については、次を参照してください。[属性](~/docs/standard/attributes/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="f07b2-109">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f07b2-110">次の例は、乱数ジェネレーターのインスタンスを作成、10 個のスレッドだけでなく、メイン スレッドを作成し、各スレッドで 200万乱数を生成します。</span><span class="sxs-lookup"><span data-stu-id="f07b2-110">The following example instantiates a random number generator, creates ten threads in addition to the main thread, and then generates two million random numbers in each thread.</span></span> <span data-ttu-id="f07b2-111">使用して、<xref:System.ThreadStaticAttribute>乱数スレッドあたりの数と合計を計算する属性。</span><span class="sxs-lookup"><span data-stu-id="f07b2-111">It uses the <xref:System.ThreadStaticAttribute> attribute to calculate the sum and the count of random numbers per thread.</span></span> <span data-ttu-id="f07b2-112">2 つのスレッドあたりの追加フィールドも定義`previous`と`abnormal`、乱数ジェネレーターの破損を検出することができます。</span><span class="sxs-lookup"><span data-stu-id="f07b2-112">It also defines two additional per-thread fields, `previous` and `abnormal`, that allows it to detect corruption of the random number generator.</span></span>  
  
 [!code-csharp[System.ThreadStaticAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threadstaticattribute/cs/threadsafe2a.cs#1)]
 [!code-vb[System.ThreadStaticAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threadstaticattribute/vb/threadsafe2a.vb#1)]  
  
 <span data-ttu-id="f07b2-113">この例では、 `lock` (C#) ステートメント、および`SyncLock`乱数ジェネレーターへのアクセスを同期するために Visual Basic で作成します。</span><span class="sxs-lookup"><span data-stu-id="f07b2-113">The example uses the `lock` statement in C# and the `SyncLock` construct in Visual Basic to synchronize access to the random number generator.</span></span> <span data-ttu-id="f07b2-114">これは、乱数ジェネレーター、通常すべての後続の呼び出しにゼロの値が返される、結果の破損を防止します。</span><span class="sxs-lookup"><span data-stu-id="f07b2-114">This prevents corruption of the random number generator, which typically results in its returning a value of zero for all subsequent calls.</span></span>  
  
 <span data-ttu-id="f07b2-115">また、例では、<xref:System.Threading.CountdownEvent>クラスを各スレッドの呼び出しの合計数を表示する前に乱数の生成が完了したことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="f07b2-115">The example also uses the <xref:System.Threading.CountdownEvent> class to ensure that each thread has finished generating random numbers before it displays the total number of calls.</span></span> <span data-ttu-id="f07b2-116">それ以外の場合、メイン スレッドには、追加のスレッドを生成する前に実行が完了すると、メソッド呼び出しの合計数が不正確な値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="f07b2-116">Otherwise, if the main thread completes execution before the additional threads that it spawns, it displays an inaccurate value for the total number of method calls.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Threading.AsyncLocal`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadStaticAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ThreadStaticAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadStaticAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f07b2-117">
            <see cref="T:System.ThreadStaticAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f07b2-117">Initializes a new instance of the <see cref="T:System.ThreadStaticAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>