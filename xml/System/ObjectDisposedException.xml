<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObjectDisposedException.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a71fbb299abe0b22f28b60b101f6c94366f6784c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a71fbb299abe0b22f28b60b101f6c94366f6784c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ObjectDisposedException">
          <source>The exception that is thrown when an operation is performed on a disposed object.</source>
          <target state="translated">破棄されたオブジェクトで操作が実行されるとスローされる例外。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>An <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> is thrown when you try to access a member of an object that implements the <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface, and that object has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph>を実装するオブジェクトのメンバーにアクセスしようとする場合にスローされる、<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>インターフェイス、およびそのオブジェクトは破棄されました。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Typically, this exception is caused by one of the following conditions:</source>
          <target state="translated">通常、この例外は、次の条件のいずれかによって発生します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>You've called an object's <ph id="ph1">`Dispose`</ph> method, and you’re trying to access an instance member that gets or sets the object's state.</source>
          <target state="translated">オブジェクトの呼び出した<ph id="ph1">`Dispose`</ph>して、メソッドはインスタンス メンバーを取得または設定オブジェクトの状態にアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> that is thrown when you try to reset the frequency of timer notifications after you call the <ph id="ph2">&lt;xref:System.Threading.Timer.Dispose%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">次の例を示しています、<ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph>を呼び出した後にタイマーの通知の頻度をリセットしようとしたときにスローされる、<ph id="ph2">&lt;xref:System.Threading.Timer.Dispose%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>You've called an object's <ph id="ph1">`Close`</ph> method, and you’re trying to access an instance member that gets or sets the object's state.</source>
          <target state="translated">オブジェクトの呼び出した<ph id="ph1">`Close`</ph>して、メソッドはインスタンス メンバーを取得または設定オブジェクトの状態にアクセスしようとしています。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Often, the <ph id="ph1">`Close`</ph> method provides a type's public implementation of the <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">多くの場合、<ph id="ph1">`Close`</ph>メソッドの型のパブリックな実装を提供する、<ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>You've called an object's <ph id="ph1">`Dispose`</ph> method multiple times.</source>
          <target state="translated">オブジェクトの呼び出した<ph id="ph1">`Dispose`</ph>メソッドを複数回です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Typically, this doesn’t throw an exception.</source>
          <target state="translated">通常、この例外をスローしません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>However, depending on how a type implements <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>, it may not allow multiple calls to <ph id="ph2">`Dispose`</ph>.</source>
          <target state="translated">ただし、型の実装によって<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>、複数の呼び出しを許可する可能性がありますいない<ph id="ph2">`Dispose`</ph>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>In most cases, this exception results from developer error.</source>
          <target state="translated">ほとんどの場合、開発者のエラーからこの例外の結果します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>Instead of handling the error in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block, you should correct the error, typically by reinstantiating the object.</source>
          <target state="translated">エラーの処理ではなく、 <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph>ブロック オブジェクトを reinstantiating によって通常、エラーを修正する必要があります。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>The following example demonstrates an error that causes the <ph id="ph1">`ObjectDisposedException`</ph> exception to be thrown.</source>
          <target state="translated">次の例では、エラーの原因となる、<ph id="ph1">`ObjectDisposedException`</ph>例外がスローされます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ObjectDisposedException">
          <source>This code produces the following output:</source>
          <target state="translated">このコードを実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ObjectDisposedException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>A string containing the name of the disposed object.</source>
          <target state="translated">破棄されたオブジェクトの名前が含まれている文字列。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with a string containing the name of the disposed object.</source>
          <target state="translated">破棄されたオブジェクトの名前が含まれている文字列を使用して、<ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph> property is initialized to a system-supplied message that describes the error and includes the <ph id="ph2">`objectName`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph>プロパティは、システム提供のメッセージをエラーについて説明し、初期化、<ph id="ph2">`objectName`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">このメッセージには、現在のシステムのカルチャが考慮されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>The <ph id="ph1">`InnerException`</ph> property of the new instance is initialized to <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`InnerException`</ph>にプロパティの新しいインスタンスを初期化<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String)">
          <source>If <ph id="ph1">`objectName`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">`Message`</ph> property contains only an error message.</source>
          <target state="translated">場合<ph id="ph1">`objectName`</ph>は<ph id="ph2">`null`</ph>、<ph id="ph3">`Message`</ph>プロパティには、エラー メッセージのみが含まれています。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">スローされている例外に関するシリアル化済みオブジェクト データを保持している <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">転送元または転送先についてのコンテキスト情報を含む <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">シリアル化したデータを使用して、<ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">例外の原因を説明するエラー メッセージ。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">現在の例外の原因となった例外。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="null" /&gt;</ph> でない場合は、内部例外を処理する <ph id="ph2">&lt;see langword="catch" /&gt;</ph> ブロックで現在の例外が発生します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">前の例外の直接の結果としてスローされる例外については、<ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> プロパティに、前の例外への参照が格納されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>プロパティは、コンス トラクターに渡されたものと同じ値を返します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>The name of the disposed object.</source>
          <target state="translated">破棄されたオブジェクトの名前。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">例外の原因を説明するエラー メッセージ。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> class with the specified object name and message.</source>
          <target state="translated">指定したオブジェクト名とメッセージを使用して、<ph id="ph1">&lt;see cref="T:System.ObjectDisposedException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">`InnerException`</ph> property of the new instance is initialized to <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`InnerException`</ph>にプロパティの新しいインスタンスを初期化<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
          <source>If <ph id="ph1">`objectName`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">`Message`</ph> property contains only an error message.</source>
          <target state="translated">場合<ph id="ph1">`objectName`</ph>は<ph id="ph2">`null`</ph>、<ph id="ph3">`Message`</ph>プロパティには、エラー メッセージのみが含まれています。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">スローされている例外に関するシリアル化済みオブジェクト データを保持している <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">転送元または転送先についてのコンテキスト情報を含む <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the parameter name and additional exception information.</source>
          <target state="translated">パラメーター名と追加の例外情報を使用して <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">シリアル化サービスを提供します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">関連する列挙値:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>セキュリティ アクション。 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼が必要です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.ObjectDisposedException.Message">
          <source>Gets the message that describes the error.</source>
          <target state="translated">エラーを説明するメッセージを取得します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.Message">
          <source>A string that describes the error.</source>
          <target state="translated">エラーを説明する文字列。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.Message">
          <source>If the <ph id="ph1">&lt;xref:System.ObjectDisposedException.ObjectName%2A&gt;</ph> property is not <ph id="ph2">`null`</ph>, the message includes the name of the object.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.ObjectDisposedException.ObjectName%2A&gt;</ph>プロパティは使用されません<ph id="ph2">`null`</ph>メッセージには、オブジェクトの名前が含まれています。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.Message">
          <source>This property overrides <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">このプロパティのオーバーライド<ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ObjectDisposedException.ObjectName">
          <source>Gets the name of the disposed object.</source>
          <target state="translated">破棄されたオブジェクトの名前を取得します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.ObjectName">
          <source>A string containing the name of the disposed object.</source>
          <target state="translated">破棄されたオブジェクトの名前が含まれている文字列。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ObjectDisposedException.ObjectName">
          <source>If the current property is not <ph id="ph1">`null`</ph> or <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, the value of this property is included in the string returned by the <ph id="ph3">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph> property.</source>
          <target state="translated">現在のプロパティがない場合<ph id="ph1">`null`</ph>または<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>、このプロパティの値がによって返される文字列に含まれる、<ph id="ph3">&lt;xref:System.ObjectDisposedException.Message%2A&gt;</ph>プロパティです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>