<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MissingMemberException.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac545d9eb037ab898a940ab474bc71592b42430c9ce.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45d9eb037ab898a940ab474bc71592b42430c9ce</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.MissingMemberException">
          <source>The exception that is thrown when there is an attempt to dynamically access a class member that does not exist or that is not declared as public.</source>
          <target state="translated">存在しない、または public として宣言されていないクラス メンバーに動的にアクセスしようとした場合にスローされる例外。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.MissingMemberException">
          <source>If a member in a class library has been removed or renamed, recompile any assemblies that reference that library.</source>
          <target state="translated">クラス ライブラリ内のメンバーを削除するか、名前を変更したときは、そのライブラリを参照するすべてのアセンブリを再コンパイルします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>Normally a compilation error is generated if the code attempts to access a nonexistent member of a class.</source>
          <target state="translated">通常、コードがクラスの存在しないメンバーへのアクセスを試みると、コンパイル エラーが生成されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> is designed to handle cases where a field or a method is deleted or renamed in one assembly and the change is not reflected in a second assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> 2 番目のアセンブリに変更は反映されませんされ、フィールドまたはメソッドが削除されるか、1 つのアセンブリで名前が変更を処理する設計されています。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>At runtime, <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> will be thrown when the code in the second assembly attempts to access the missing member in the first assembly.</source>
          <target state="translated">実行時に、<ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>が 2 番目のアセンブリ内のコードが最初のアセンブリに存在しないメンバーにアクセスしようとしたときにスローされます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> is the base class for <ph id="ph2">&lt;xref:System.MissingFieldException&gt;</ph> and <ph id="ph3">&lt;xref:System.MissingMethodException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> 基本クラスは、<ph id="ph2">&lt;xref:System.MissingFieldException&gt;</ph>と<ph id="ph3">&lt;xref:System.MissingMethodException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>In general it is better to use one of the derived classes of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> to more precisely indicate the exact nature of the error.</source>
          <target state="translated">派生クラスのいずれかを使用することをお勧め一般<ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>を具体的には、エラーの正確な性質を示します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>Throw a <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> if you are only interested in capturing the general case of a missing member error.</source>
          <target state="translated">スロー、<ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>関心がある場合のみに存在しないメンバー エラーの一般的なケースをキャプチャします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> uses the HRESULT COR_E_MISSINGMEMBER, that has the value 0x80131512.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> 0x80131512 の値を持つ HRESULT COR_E_MISSINGMEMBER を使用します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.MissingMemberException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">インスタンスの初期プロパティ値の一覧については<ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>を参照してください、<ph id="ph2">&lt;xref:System.MissingMemberException.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>This example shows what happens if you attempt to use reflection to call a method that does not exist and access a field that does not exist.</source>
          <target state="translated">このリフレクションを使用して、存在しないメソッドを呼び出すしようとする場合の動作の例に示すとアクセスが存在しないフィールド。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>The application recovers by catching the <ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph>, <ph id="ph2">&lt;xref:System.MissingFieldException&gt;</ph>, and <ph id="ph3">&lt;xref:System.MissingMemberException&gt;</ph>.</source>
          <target state="translated">キャッチすることにより、アプリケーションを回復、 <ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph>、 <ph id="ph2">&lt;xref:System.MissingFieldException&gt;</ph>、および<ph id="ph3">&lt;xref:System.MissingMemberException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.MissingMemberException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.MissingMemberException.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Attempted to access a missing member."</source>
          <target state="translated">このコンス トラクター、<ph id="ph1">&lt;xref:System.MissingMemberException.Message%2A&gt;</ph>エラーを説明するシステム提供のメッセージの新しいインスタンスのプロパティなど「にアクセスしようと存在しないメンバーです」。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">このメッセージには、現在のシステムのカルチャが考慮されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> のインスタンスの初期プロパティ値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>Property</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 参照 (Visual Basic の場合は <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">ローカライズされたエラー メッセージ文字列。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">エラーを説明するメッセージ。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">指定したエラー メッセージを使用して、<ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>The content of the <ph id="ph1">`message`</ph> parameter should be understandable by the user.</source>
          <target state="translated">内容、<ph id="ph1">`message`</ph>パラメーターは、ユーザーが理解できるものにする必要があります。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> のインスタンスの初期プロパティ値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 参照 (Visual Basic の場合は <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">エラー メッセージ文字列。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">シリアル化されたオブジェクト データを保持するオブジェクト。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">転送元または転送先に関するコンテキスト情報。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">シリアル化したデータを使用して、<ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>XML および SOAP シリアル化<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">例外の原因を説明するエラー メッセージ。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that is the cause of the current <ph id="ph2">&lt;see langword="Exception" /&gt;</ph>.</source>
          <target state="translated">現在の<ph id="ph2">&lt;see langword="Exception" /&gt;</ph>の原因となった、<ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> のインスタンス。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), then the current <ph id="ph2">&lt;see langword="Exception" /&gt;</ph> is raised in a catch block handling <bpt id="p2">&lt;c&gt;</bpt>inner<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> が null 参照 (Visual Basic の場合は <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>) でない場合は、<bpt id="p2">&lt;c&gt;</bpt>inner<ept id="p2">&lt;/c&gt;</ept> を処理する catch ブロックで現在の <ph id="ph2">&lt;see langword="Exception" /&gt;</ph> が発生します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the root cause of this exception.</source>
          <target state="translated">指定したエラー メッセージと、この例外の原因である内部例外への参照を使用して、<ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">前の例外の直接の結果としてスローされる例外は、<ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> プロパティに前の例外への参照を含んでいる場合があります。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> プロパティは、コンストラクターに渡されたものと同じ値を返します。<ph id="ph2">`Nothing`</ph> プロパティによって内部例外値がコンストラクターに渡されなかった場合は、null 参照 (Visual Basic の場合は <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>) を返します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> のインスタンスの初期プロパティ値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">内部例外の参照。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">エラー メッセージ文字列。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.String)">
          <source>The name of the class in which access to a nonexistent member was attempted.</source>
          <target state="translated">存在しないメンバーへのアクセスが試行されたクラスの名前。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.String)">
          <source>The name of the member that cannot be accessed.</source>
          <target state="translated">アクセスできないメンバーの名前。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> class with the specified class name and member name.</source>
          <target state="translated">クラス名とメンバー名を指定して、<ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.MissingMemberException.ClassName">
          <source>Holds the class name of the missing member.</source>
          <target state="translated">存在しないメンバーのクラス名を保持します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">シリアル化されたオブジェクト データを保持するオブジェクト。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">転送元または転送先に関するコンテキスト情報。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the class name, the member name, the signature of the missing member, and additional exception information.</source>
          <target state="translated">存在しないメンバーのクラス名、メンバー名、シグネチャ、および追加例外情報を使用して、<ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> オブジェクトを設定します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;xref:System.TypeLoadException.GetObjectData%2A&gt;</ph> sets a <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> with all the exception object data targeted for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.TypeLoadException.GetObjectData%2A&gt;</ph> は、シリアル化する対象のすべての例外オブジェクト データを使用して、<ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> を設定します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>During deserialization, the exception object is reconstituted from the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> transmitted over the stream.</source>
          <target state="translated">逆シリアル化中に例外オブジェクトを再構成、<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>ストリームで転送します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> オブジェクトが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">シリアル化サービスを提供します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">関連する列挙値:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>セキュリティ アクション。 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼が必要です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="F:System.MissingMemberException.MemberName">
          <source>Holds the name of the missing member.</source>
          <target state="translated">存在しないメンバーの名前を保持します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.MissingMemberException.Message">
          <source>Gets the text string showing the class name, the member name, and the signature of the missing member.</source>
          <target state="translated">存在しないメンバのクラス名、メンバ名、およびシグネチャを示す文字列を取得します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>The error message string.</source>
          <target state="translated">エラー メッセージ文字列。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>If the class name is not specified when the object is constructed, the default text string inherited from the base class is returned.</source>
          <target state="translated">オブジェクトを作成するときに、クラス名が指定されていない場合は、基本クラスから継承された既定のテキスト文字列が返されます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>This property overrides <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>.</source>
          <target state="translated">このプロパティのオーバーライド<ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>The error message should be localized.</source>
          <target state="translated">エラー メッセージをローカライズする必要があります。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>This property is read-only.</source>
          <target state="translated">このプロパティは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.MissingMemberException.Message%2A&gt;</ph> property.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.MissingMemberException.Message%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="F:System.MissingMemberException.Signature">
          <source>Holds the signature of the missing member.</source>
          <target state="translated">存在しないメンバーのシグネチャを保持します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.MissingMemberException.Signature">
          <source><ph id="ph1">&lt;xref:System.MissingMemberException.Signature&gt;</ph> contains a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value that represents the signature of the missing member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMemberException.Signature&gt;</ph> 含まれています、<ph id="ph2">&lt;xref:System.Byte&gt;</ph>を存在しないメンバーのシグネチャを表す値です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.MissingMemberException.Signature">
          <source><ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> is used to format the signature.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> 署名を書式設定に使用されます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.MissingMemberException.Signature">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.Reflection.Emit.SignatureHelper&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Emit.SignatureToken&gt;</ph>, and <ph id="ph3">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">追加情報については、<ph id="ph1">&lt;xref:System.Reflection.Emit.SignatureHelper&gt;</ph>、<ph id="ph2">&lt;xref:System.Reflection.Emit.SignatureToken&gt;</ph>、および <ph id="ph3">&lt;xref:System.String&gt;</ph> を参照してください。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>