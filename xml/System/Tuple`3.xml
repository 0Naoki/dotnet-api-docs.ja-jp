<Type Name="Tuple&lt;T1,T2,T3&gt;" FullName="System.Tuple&lt;T1,T2,T3&gt;">
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`3&lt;T1, T2, T3&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`3" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="2815b-101">組の 1 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="2815b-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="2815b-102">組の 2 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="2815b-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="2815b-103">組の 3 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="2815b-103">The type of the tuple's third component.</span></span></typeparam>
    <summary><span data-ttu-id="2815b-104">3 つ組、すなわちトリプルを表します。</span><span class="sxs-lookup"><span data-stu-id="2815b-104">Represents a 3-tuple, or triple.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2815b-105">組は、特定の数と一連の値を持つデータ構造です。</span><span class="sxs-lookup"><span data-stu-id="2815b-105">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="2815b-106"><xref:System.Tuple%603>クラスを表します。 3 タプル、または 3 倍、は次の 3 つのコンポーネントが含まれる組です。</span><span class="sxs-lookup"><span data-stu-id="2815b-106">The <xref:System.Tuple%603> class represents a 3-tuple, or triple, which is a tuple that has three components.</span></span>  
  
 <span data-ttu-id="2815b-107">インスタンス化することができます、<xref:System.Tuple%603>を呼び出して、オブジェクト、<xref:System.Tuple%603.%23ctor%2A>コンス トラクターまたは静的な<xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-107">You can instantiate a <xref:System.Tuple%603> object by calling either the <xref:System.Tuple%603.%23ctor%2A> constructor or the static <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2815b-108">タプルの要素の値を取得するには、読み取り専用を使用して<xref:System.Tuple%603.Item1%2A>、 <xref:System.Tuple%603.Item2%2A>、および<xref:System.Tuple%603.Item3%2A>インスタンス プロパティです。</span><span class="sxs-lookup"><span data-stu-id="2815b-108">You can retrieve the values of the tuple's components by using the read-only <xref:System.Tuple%603.Item1%2A>, <xref:System.Tuple%603.Item2%2A>, and <xref:System.Tuple%603.Item3%2A> instance properties.</span></span>  
  
 <span data-ttu-id="2815b-109">組は、4 つの方法でよく使用されます。</span><span class="sxs-lookup"><span data-stu-id="2815b-109">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="2815b-110">単一のデータのセットを表します。</span><span class="sxs-lookup"><span data-stu-id="2815b-110">To represent a single set of data.</span></span> <span data-ttu-id="2815b-111">たとえば、組は、データベースのレコードを表すことができ、そのコンポーネントは、レコードの個別のフィールドを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="2815b-111">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="2815b-112">簡単にアクセスしたり、操作、データ セットを提供します。</span><span class="sxs-lookup"><span data-stu-id="2815b-112">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="2815b-113">次の例の配列を定義する<xref:System.Tuple%603>学生、その平均テスト スコア、およびテストの数の名前を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-113">The following example defines an array of <xref:System.Tuple%603> objects that contain the names of students, their average test scores, and the number of tests taken.</span></span> <span data-ttu-id="2815b-114">配列が渡される、`ComputeStatistics`メソッドで、平均と試験の点数の標準偏差を計算します。</span><span class="sxs-lookup"><span data-stu-id="2815b-114">The array is passed to the `ComputeStatistics` method, which calculates the mean and standard deviation of the test scores.</span></span>  
  
     [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="2815b-115">使用せず、メソッドから複数の値を返す`out`パラメーター (c#) または`ByRef`パラメーター (Visual Basic の場合)。</span><span class="sxs-lookup"><span data-stu-id="2815b-115">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="2815b-116">たとえば、前の例の概要テスト スコア統計情報を返しますで、<xref:System.Tuple%603>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-116">For example, the previous example returns its summary test score statistics in a <xref:System.Tuple%603> object.</span></span>  
  
-   <span data-ttu-id="2815b-117">メソッドに渡される複数の値、1 つのパラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="2815b-117">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="2815b-118">たとえば、<xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType>メソッドには、スレッドが起動時に実行される方法を 1 つの値を提供できる 1 つのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="2815b-118">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="2815b-119">指定した場合、<xref:System.Tuple%603>オブジェクト、メソッド引数として、データの 3 つの項目を含む、スレッドのスタートアップ ルーチンを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="2815b-119">If you supply a <xref:System.Tuple%603> object as the method argument, you can supply the thread’s startup routine with three items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.#ctor(`0,`1,`2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="2815b-120">組の 1 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="2815b-120">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="2815b-121">組の 2 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="2815b-121">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="2815b-122">組の 3 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="2815b-122">The value of the tuple's third component.</span></span></param>
        <summary><span data-ttu-id="2815b-123"><see cref="T:System.Tuple`3" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2815b-123">Initializes a new instance of the <see cref="T:System.Tuple`3" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2815b-124">静的なを使用することもできます。<xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType>メソッドを明示的にそのコンポーネントの種類を指定せずに、3 タプル オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="2815b-124">You can also use the static <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> method to instantiate a 3-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="2815b-125">次の例では、 <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> 3 組のコンポーネントが含まれるの型のインスタンスを作成するメソッド<xref:System.String>、 <xref:System.Double>、および<xref:System.Double>です。</span><span class="sxs-lookup"><span data-stu-id="2815b-125">The following example uses the <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=nameWithType> method to instantiate a 3-tuple whose components are of type <xref:System.String>, <xref:System.Double>, and <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#5)]
 [!code-vb[System.Tuple.Create#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#5)]  
  
 <span data-ttu-id="2815b-126">これは、次の呼び出しに、<xref:System.Tuple%603.%23ctor%2A>クラスのコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="2815b-126">This is equivalent to the following call to the <xref:System.Tuple%603.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#6)]
 [!code-vb[System.Tuple.Create#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2815b-127">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-127">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="2815b-128">現在の <see cref="T:System.Tuple`3" /> オブジェクトが、指定されたオブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="2815b-128">Returns a value that indicates whether the current <see cref="T:System.Tuple`3" /> object is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="2815b-129">現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2815b-129"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2815b-130">`obj`パラメーターは、次の条件下で現在のインスタンスと等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="2815b-130">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="2815b-131"><xref:System.Tuple%603>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-131">It is a <xref:System.Tuple%603> object.</span></span>  
  
-   <span data-ttu-id="2815b-132">その 3 つのコンポーネントでは、現在のインスタンスと同じ型です。</span><span class="sxs-lookup"><span data-stu-id="2815b-132">Its three components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="2815b-133">その 3 つのコンポーネントは、現在のインスタンスのものと同じです。</span><span class="sxs-lookup"><span data-stu-id="2815b-133">Its three components are equal to those of the current instance.</span></span> <span data-ttu-id="2815b-134">等しいかどうかは、各コンポーネントの既定のオブジェクトの等値比較子によって判断されます。</span><span class="sxs-lookup"><span data-stu-id="2815b-134">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2815b-135">次の例では、<xref:System.Tuple%603.Equals%28System.Object%29?displayProperty=nameWithType>かどうかのオブジェクトの配列のいずれかを調べます<xref:System.Tuple%603>オブジェクトが互いに等しい。</span><span class="sxs-lookup"><span data-stu-id="2815b-135">The following example calls the <xref:System.Tuple%603.Equals%28System.Object%29?displayProperty=nameWithType> method to determine whether any of the objects in an array of <xref:System.Tuple%603> objects are equal to one another.</span></span> <span data-ttu-id="2815b-136">出力は、事実を反映する、<xref:System.Tuple%603.Equals%28System.Object%29>メソッドを返します。`true`比較するときに<xref:System.Tuple%603>コンポーネントが同じ値を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-136">The output reflects the fact that the <xref:System.Tuple%603.Equals%28System.Object%29> method returns `true` when comparing <xref:System.Tuple%603> objects whose components have equal values.</span></span>  
  
 [!code-csharp[System.Tuple\`3.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`3.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2815b-137">現在の <see cref="T:System.Tuple`3" /> オブジェクトのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="2815b-137">Returns the hash code for the current <see cref="T:System.Tuple`3" /> object.</span></span></summary>
        <returns><span data-ttu-id="2815b-138">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="2815b-138">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2815b-139">現在の <see cref="T:System.Tuple`3" /> オブジェクトの 1 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2815b-139">Gets the value of the current <see cref="T:System.Tuple`3" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="2815b-140">現在の <see cref="T:System.Tuple`3" /> オブジェクトの 1 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="2815b-140">The value of the current <see cref="T:System.Tuple`3" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2815b-141">型を動的に決定することができます、<xref:System.Tuple%603.Item1%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="2815b-141">You can dynamically determine the type of the <xref:System.Tuple%603.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2815b-142">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%603.Item1%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="2815b-142">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%603.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="2815b-143">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%603>オブジェクト、および、によって返される配列から最初の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-143">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%603> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2815b-144">次の例の配列を定義する<xref:System.Tuple%603>学生、その平均テスト スコア、およびテストの数の名前を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-144">The following example defines an array of <xref:System.Tuple%603> objects that contain the names of students, their average test scores, and the number of tests taken.</span></span> <span data-ttu-id="2815b-145">渡されたが、配列、`ComputeStatistics`メソッドで、平均のスコア、標準偏差、ケースの数が計算されます、統計が計算されるからです。</span><span class="sxs-lookup"><span data-stu-id="2815b-145">The array is passed to the `ComputeStatistics` method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</span></span> <span data-ttu-id="2815b-146">これらの値が格納されている、<xref:System.Tuple%603>によって返されるオブジェクト、`ComputeStatistics`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-146">These values are stored in the <xref:System.Tuple%603> object that is returned by the `ComputeStatistics` method.</span></span> <span data-ttu-id="2815b-147"><xref:System.Tuple%603.Item1%2A>プロパティには、ケースの数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2815b-147">The <xref:System.Tuple%603.Item1%2A> property contains the number of cases.</span></span>  
  
 [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2815b-148">現在の <see cref="T:System.Tuple`3" /> オブジェクトの 2 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2815b-148">Gets the value of the current <see cref="T:System.Tuple`3" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="2815b-149">現在の <see cref="T:System.Tuple`3" /> オブジェクトの 2 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="2815b-149">The value of the current <see cref="T:System.Tuple`3" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2815b-150">型を動的に決定することができます、<xref:System.Tuple%603.Item2%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="2815b-150">You can dynamically determine the type of the <xref:System.Tuple%603.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2815b-151">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%603.Item2%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="2815b-151">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%603.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="2815b-152">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%603>オブジェクト、およびによって返される配列から 2 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-152">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%603> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2815b-153">次の例の配列を定義する<xref:System.Tuple%603>学生、その平均テスト スコア、およびテストの数の名前を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-153">The following example defines an array of <xref:System.Tuple%603> objects that contain the names of students, their average test scores, and the number of tests taken.</span></span> <span data-ttu-id="2815b-154">渡されたが、配列、`ComputeStatistics`メソッドで、平均のスコア、標準偏差、ケースの数が計算されます、統計が計算されるからです。</span><span class="sxs-lookup"><span data-stu-id="2815b-154">The array is passed to the `ComputeStatistics` method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</span></span> <span data-ttu-id="2815b-155">これらの値が格納されている、<xref:System.Tuple%603>によって返されるオブジェクト、`ComputeStatistics`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-155">These values are stored in the <xref:System.Tuple%603> object that is returned by the `ComputeStatistics` method.</span></span> <span data-ttu-id="2815b-156"><xref:System.Tuple%603.Item2%2A>プロパティには、テストの平均スコアが含まれています。</span><span class="sxs-lookup"><span data-stu-id="2815b-156">The <xref:System.Tuple%603.Item2%2A> property contains the mean test score.</span></span>  
  
 [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2815b-157">現在の <see cref="T:System.Tuple`3" /> オブジェクトの 3 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2815b-157">Gets the value of the current <see cref="T:System.Tuple`3" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="2815b-158">現在の <see cref="T:System.Tuple`3" /> オブジェクトの 3 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="2815b-158">The value of the current <see cref="T:System.Tuple`3" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2815b-159">型を動的に決定することができます、<xref:System.Tuple%603.Item3%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="2815b-159">You can dynamically determine the type of the <xref:System.Tuple%603.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="2815b-160">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%603.Item3%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="2815b-160">By calling the `GetType` method on the value returned by the <xref:System.Tuple%603.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="2815b-161">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%603>オブジェクト、およびによって返される配列から 3 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-161">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%603> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2815b-162">次の例の配列を定義する<xref:System.Tuple%603>学生、その平均テスト スコア、およびテストの数の名前を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-162">The following example defines an array of <xref:System.Tuple%603> objects that contain the names of students, their average test scores, and the number of tests taken.</span></span> <span data-ttu-id="2815b-163">渡されたが、配列、`ComputeStatistics`メソッドで、平均のスコア、標準偏差、ケースの数が計算されます、統計が計算されるからです。</span><span class="sxs-lookup"><span data-stu-id="2815b-163">The array is passed to the `ComputeStatistics` method, which calculates the mean score, standard deviation, and number of cases from which the statistics are calculated.</span></span> <span data-ttu-id="2815b-164">これらの値が格納されている、<xref:System.Tuple%603>によって返されるオブジェクト、`ComputeStatistics`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-164">These values are stored in the <xref:System.Tuple%603> object that is returned by the `ComputeStatistics` method.</span></span> <span data-ttu-id="2815b-165"><xref:System.Tuple%603.Item3%2A>プロパティには、標準偏差が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2815b-165">The <xref:System.Tuple%603.Item3%2A> property contains the standard deviation.</span></span>  
  
 [!code-csharp[System.Tuple\`3.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="2815b-166">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-166">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="2815b-167">比較用のカスタムの規則を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-167">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="2815b-168">指定された比較子を使用して現在の <see cref="T:System.Tuple`3" /> オブジェクトと指定されたオブジェクトを比較し、並べ替え順序において、現在のオブジェクトの位置が指定されたオブジェクトの前になるか、後ろになるか、同じになるかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="2815b-168">Compares the current <see cref="T:System.Tuple`3" /> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="2815b-169">並べ替え順序における、このインスタンスと <paramref name="other" /> の相対位置を示す符号付き整数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="2815b-169">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="2815b-170"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="2815b-170"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="2815b-171"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="2815b-171"></term><description> Description</span></span>  
  
 <span data-ttu-id="2815b-172"></description></listheader><item><term> 負の整数</span><span class="sxs-lookup"><span data-stu-id="2815b-172"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="2815b-173"></term><description> このインスタンスの位置が <paramref name="other" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="2815b-173"></term><description> This instance precedes <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="2815b-174"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="2815b-174"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="2815b-175"></term><description> このインスタンスと <paramref name="other" /> の位置は、並べ替え順序において同じです。</span><span class="sxs-lookup"><span data-stu-id="2815b-175"></term><description> This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="2815b-176"></description></item><item><term> 正の整数</span><span class="sxs-lookup"><span data-stu-id="2815b-176"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="2815b-177"></term><description> このインスタンスの位置は <paramref name="other" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="2815b-177"></term><description> This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2815b-178">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="2815b-178">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2815b-179">これは、<xref:System.Tuple%603> のインスタンスが <xref:System.Collections.IStructuralComparable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="2815b-179">It can be used only when the <xref:System.Tuple%603> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="2815b-180">並べ替え方法を含むコレクションで呼び出された最もよくはこのメソッドは、直接呼び出すことができます、<xref:System.Collections.IComparer>パラメーター コレクションのメンバーの順序付けをします。</span><span class="sxs-lookup"><span data-stu-id="2815b-180">Although this method can be called directly, it is most commonly called by collection sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="2815b-181">たとえば、メソッドによって呼び出されます、<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>メソッドおよび<xref:System.Collections.SortedList.Add%2A>のメソッド、<xref:System.Collections.SortedList>を使用してインスタンス化されるオブジェクト、<xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="2815b-181">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2815b-182"><xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType>並べ替え操作で使用するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-182">The <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType> method is intended for use in sorting operations.</span></span> <span data-ttu-id="2815b-183">これはありません、比較の主な目的は 2 つのオブジェクトが等しいかどうかを判断するときに使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2815b-183">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="2815b-184">2 つのオブジェクトが等しいかどうかを判断するを呼び出して、<xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-184">To determine whether two objects are equal, call the <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2815b-185">次の例の配列を作成する<xref:System.Tuple%603>スチューデントの名前、テストの平均のスコア、およびテストの数で構成されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-185">The following example creates an array of <xref:System.Tuple%603> objects that consist of a student's name, mean test score, and number of tests.</span></span> <span data-ttu-id="2815b-186">並べ替え順序で配列内の各組のコンポーネントを表示、配列を並べ替え、およびを呼び出して<xref:System.Tuple%603.ToString%2A>並べ替え順のそれぞれの組の値を表示します。</span><span class="sxs-lookup"><span data-stu-id="2815b-186">It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%603.ToString%2A> to display the value of each tuple in sorted order.</span></span> <span data-ttu-id="2815b-187">ジェネリック型を定義している例では、並べ替えるには、配列、`ScoreComparer`を実装するクラス、<xref:System.Collections.IComparer>インターフェイスと並べ替え、<xref:System.Tuple%603>オブジェクトで、最初のコンポーネントではなく、2 番目のコンポーネントの値で昇順に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="2815b-187">To sort the array, the example defines a generic `ScoreComparer` class that implements the <xref:System.Collections.IComparer> interface and sorts the <xref:System.Tuple%603> objects in ascending order by the value of their second component rather than their first component.</span></span> <span data-ttu-id="2815b-188">例では、直接呼び出しませんなお、<xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-188">Note that the example does not directly call the <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2815b-189">このメソッドはによって暗黙的に呼び出されます、<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>配列内の各要素のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-189">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`3.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`3.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2815b-190"><paramref name="other" /> は <see cref="T:System.Tuple`3" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="2815b-190"><paramref name="other" /> is not a <see cref="T:System.Tuple`3" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="2815b-191">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-191">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="2815b-192">2 つのオブジェクトが等しいかどうかの評価に使用するメソッドを定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-192">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="2815b-193">指定された比較メソッドに基づいて、現在の <see cref="T:System.Tuple`3" /> オブジェクトが指定したオブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="2815b-193">Returns a value that indicates whether the current <see cref="T:System.Tuple`3" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns>
          <span data-ttu-id="2815b-194">現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2815b-194"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2815b-195">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="2815b-195">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2815b-196">これは、<xref:System.Tuple%603> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="2815b-196">It can be used only when the <xref:System.Tuple%603> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="2815b-197"><xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>実装が呼び出される場合にのみ`other`は`null`、キャスト (c#) またはに (Visual Basic) の変換が正常にすることができるかどうかと、<xref:System.Tuple%603>コンポーネントが含まれるは、現在のインスタンスと同じ型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-197">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%603> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="2815b-198"><xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType>メソッドの最初のパス、<xref:System.Tuple%603.Item1%2A>の値、<xref:System.Tuple%603>と比較するオブジェクト、<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>実装します。</span><span class="sxs-lookup"><span data-stu-id="2815b-198">The <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> method first passes the <xref:System.Tuple%603.Item1%2A> values of the <xref:System.Tuple%603> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="2815b-199">このメソッドの呼び出しが返された場合`true`、メソッドが再度呼び出され、渡された、 <xref:System.Tuple%603.Item2%2A> 、2 つの値<xref:System.Tuple%603>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-199">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%603.Item2%2A> values of the two <xref:System.Tuple%603> objects.</span></span> <span data-ttu-id="2815b-200">このメソッドの呼び出しが返された場合`true`もう一度、メソッドが 3 時間と、渡された、 <xref:System.Tuple%603.Item3%2A> 、2 つの値<xref:System.Tuple%603>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-200">If this method call returns `true` again, the method is called a third time and passed the <xref:System.Tuple%603.Item3%2A> values of the two <xref:System.Tuple%603> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2815b-201">次の例では定義、`Item2Comparer`を実装するクラス、<xref:System.Collections.IEqualityComparer>インターフェイスし、方法を変更<xref:System.Tuple%603>オブジェクトが等しいかどうかを評価します。</span><span class="sxs-lookup"><span data-stu-id="2815b-201">The following example defines an `Item2Comparer` class that implements the <xref:System.Collections.IEqualityComparer> interface and changes the way in which <xref:System.Tuple%603> objects are evaluated for equality.</span></span> <span data-ttu-id="2815b-202">メソッドは常に返します`true`渡されたときに、 <xref:System.Tuple%603.Item1%2A> 2 つのプロパティ値<xref:System.Tuple%603>オブジェクト、およびそれを呼び出す、<xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType>を評価するメソッド、<xref:System.Tuple%603.Item2%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="2815b-202">The method always returns `true` when it is passed the <xref:System.Tuple%603.Item1%2A> property values of two <xref:System.Tuple%603> objects, and it calls the <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=nameWithType> method to evaluate their <xref:System.Tuple%603.Item2%2A> property values.</span></span> <span data-ttu-id="2815b-203">このメソッドの呼び出しが返された場合`true`、<xref:System.Tuple%603.Item3%2A>プロパティの値は、メソッドは、常に渡される`true`です。</span><span class="sxs-lookup"><span data-stu-id="2815b-203">If this method call returns `true`, their <xref:System.Tuple%603.Item3%2A> property values are passed to the method, which always returns `true`.</span></span> <span data-ttu-id="2815b-204">メソッドの値のみに基づいて等価をテスト結果として、<xref:System.Tuple%603.Item2%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="2815b-204">As a result, the method tests for equality based only on the value of the <xref:System.Tuple%603.Item2%2A> property.</span></span> <span data-ttu-id="2815b-205">出力のデータ セットの結果を示しています。<xref:System.Tuple%603>クラスで、名前、テストの平均スコア、およびテストの生徒の数を記録するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-205">The output illustrates the result for a data set of <xref:System.Tuple%603> objects that record the names, mean test score, and number of tests of students in a class.</span></span>  
  
 [!code-csharp[System.Tuple\`3.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`3.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="2815b-206">現在の <see cref="T:System.Tuple`3" /> オブジェクトのハッシュ コードを計算する <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> メソッドを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-206">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`3" /> object.</span></span></param>
        <summary><span data-ttu-id="2815b-207">指定した計算メソッドを使用して、現在の <see cref="T:System.Tuple`3" /> オブジェクトのハッシュ コードを計算します。</span><span class="sxs-lookup"><span data-stu-id="2815b-207">Calculates the hash code for the current <see cref="T:System.Tuple`3" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="2815b-208">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="2815b-208">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2815b-209">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="2815b-209">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2815b-210">これは、<xref:System.Tuple%603> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="2815b-210">It can be used only when the <xref:System.Tuple%603> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="2815b-211">メソッドは、単にへの呼び出しをラップ、`comparer`オブジェクトの<xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType>実装します。</span><span class="sxs-lookup"><span data-stu-id="2815b-211">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="2815b-212">2 つのハッシュ コードの計算に使用するアルゴリズムが同じハッシュ コードを返す必要があります<xref:System.Tuple%603>同等であると見なされるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-212">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%603> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2815b-213">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-213">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="2815b-214">現在の <see cref="T:System.Tuple`3" /> オブジェクトと指定したオブジェクトを比較して、現在のオブジェクトが、並べ替え順序において、指定したオブジェクトの前後または同じ位置のいずれにあるかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="2815b-214">Compares the current <see cref="T:System.Tuple`3" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="2815b-215">並べ替え順序における、このインスタンスと <paramref name="obj" /> の相対位置を示す符号付き整数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="2815b-215">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="2815b-216"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="2815b-216"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="2815b-217"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="2815b-217"></term><description> Description</span></span>  
  
 <span data-ttu-id="2815b-218"></description></listheader><item><term> 負の整数</span><span class="sxs-lookup"><span data-stu-id="2815b-218"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="2815b-219"></term><description> このインスタンスの位置が <paramref name="obj" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="2815b-219"></term><description> This instance precedes <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="2815b-220"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="2815b-220"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="2815b-221"></term><description> このインスタンスと <paramref name="obj" /> の位置は、並べ替え順序において同じです。</span><span class="sxs-lookup"><span data-stu-id="2815b-221"></term><description> This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="2815b-222"></description></item><item><term> 正の整数</span><span class="sxs-lookup"><span data-stu-id="2815b-222"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="2815b-223"></term><description> このインスタンスの位置は <paramref name="obj" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="2815b-223"></term><description> This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2815b-224">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="2815b-224">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2815b-225">これは、<xref:System.Tuple%603> のインスタンスが <xref:System.IComparable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="2815b-225">It can be used only when the <xref:System.Tuple%603> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="2815b-226">このメソッドを提供、<xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType>の実装、<xref:System.Tuple%603>クラスです。</span><span class="sxs-lookup"><span data-stu-id="2815b-226">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%603> class.</span></span> <span data-ttu-id="2815b-227">並べ替え方法などのコレクションの既定のオーバー ロードによって最もよく呼び出さは直接メソッドを呼び出すことができます、<xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType>と<xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>コレクションのメンバーの順序付けをします。</span><span class="sxs-lookup"><span data-stu-id="2815b-227">Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2815b-228"><xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType>並べ替え操作で使用するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-228">The <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method is intended for use in sorting operations.</span></span> <span data-ttu-id="2815b-229">これはありません、比較の主な目的は 2 つのオブジェクトが等しいかどうかを判断するときに使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2815b-229">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="2815b-230">2 つのオブジェクトが等しいかどうかを判断するを呼び出して、<xref:System.Tuple%603.Equals%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-230">To determine whether two objects are equal, call the <xref:System.Tuple%603.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="2815b-231"><xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType>メソッドでは、既定のオブジェクトの比較子を使用して、各コンポーネントを比較します。</span><span class="sxs-lookup"><span data-stu-id="2815b-231">The <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2815b-232">次の例の配列を作成する<xref:System.Tuple%603>スチューデントの名前、テストの平均のスコア、およびテストの数を構成要素オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-232">The following example creates an array of <xref:System.Tuple%603> objects whose components consist of a student's name, mean test score, and number of tests.</span></span> <span data-ttu-id="2815b-233">並べ替え順序で配列内の各組のコンポーネントを表示、配列を並べ替え、およびを呼び出して<xref:System.Tuple%603.ToString%2A>を並べ替え順序でそれぞれの組を表示します。</span><span class="sxs-lookup"><span data-stu-id="2815b-233">It displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%603.ToString%2A> to display each tuple in sorted order.</span></span> <span data-ttu-id="2815b-234">出力は、その最初のコンポーネントによって配列が並べ替えられていることを示しています。</span><span class="sxs-lookup"><span data-stu-id="2815b-234">The output shows that the array has been sorted by its first component.</span></span> <span data-ttu-id="2815b-235">例では、直接呼び出しませんなお、<xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-235">Note that the example does not directly call the <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2815b-236">このメソッドはによって暗黙的に呼び出されます、<xref:System.Array.Sort%28System.Array%29>配列内の各要素のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-236">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`3.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`3.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2815b-237"><paramref name="obj" /> は <see cref="T:System.Tuple`3" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="2815b-237"><paramref name="obj" /> is not a <see cref="T:System.Tuple`3" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`3.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Runtime.CompilerServices.ITuple.Item[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2815b-238">指定した <see langword="Tuple" /> 要素のインデックス。</span><span class="sxs-lookup"><span data-stu-id="2815b-238">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="2815b-239"><c>index</c> は 0 から 2 までです。</span><span class="sxs-lookup"><span data-stu-id="2815b-239"><c>index</c> can range from 0 to 2.</span></span></param>
        <summary><span data-ttu-id="2815b-240">指定した <see langword="Tuple" /> 要素の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2815b-240">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="2815b-241">指定した位置にある <see langword="Tuple" /> 要素の値。</span><span class="sxs-lookup"><span data-stu-id="2815b-241">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2815b-242"><xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType>プロパティは、明示的なインターフェイス実装です。</span><span class="sxs-lookup"><span data-stu-id="2815b-242">The <xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="2815b-243">これを呼び出すには、キャストまたは変換する必要があります、<xref:System.Tuple%603>オブジェクトを<xref:System.Runtime.CompilerServices.ITuple>インターフェイス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-243">To call it, you must cast or convert the <xref:System.Tuple%603> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="2815b-244"><paramref name="index" /> が 0 より小さいか、2 を超えています。</span><span class="sxs-lookup"><span data-stu-id="2815b-244"><paramref name="index" /> is less than 0 or greater than 2.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System.Runtime.CompilerServices.ITuple.Length { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2815b-245"><see langword="Tuple" /> にある要素の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="2815b-245">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="2815b-246"><see cref="T:System.Tuple`3" /> オブジェクト内の要素数、3。</span><span class="sxs-lookup"><span data-stu-id="2815b-246">3, the number of elements in a <see cref="T:System.Tuple`3" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2815b-247"><xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A>プロパティは、明示的なインターフェイス実装です。</span><span class="sxs-lookup"><span data-stu-id="2815b-247">The <xref:System.Tuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="2815b-248">これを呼び出すには、キャストまたは変換する必要があります、<xref:System.Tuple%603>オブジェクトを<xref:System.Runtime.CompilerServices.ITuple>インターフェイス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2815b-248">To call it, you must cast or convert the <xref:System.Tuple%603> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2815b-249">この <see cref="T:System.Tuple`3" /> インスタンスの値を表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="2815b-249">Returns a string that represents the value of this <see cref="T:System.Tuple`3" /> instance.</span></span></summary>
        <returns><span data-ttu-id="2815b-250">この <see cref="T:System.Tuple`3" /> オブジェクトの文字列表現。</span><span class="sxs-lookup"><span data-stu-id="2815b-250">The string representation of this <see cref="T:System.Tuple`3" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2815b-251">このメソッドによって返される文字列の形式は (*Item1*、 *Item2*、 *Item3*) ここで、 *Item1*、 *Item2*、および*Item3*の値を表す、 <xref:System.Tuple%603.Item1%2A>、 <xref:System.Tuple%603.Item2%2A>、および<xref:System.Tuple%603.Item3%2A>プロパティ、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="2815b-251">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*), where *Item1*, *Item2*, and *Item3* represent the values of the <xref:System.Tuple%603.Item1%2A>, <xref:System.Tuple%603.Item2%2A>, and <xref:System.Tuple%603.Item3%2A> properties, respectively.</span></span> <span data-ttu-id="2815b-252">プロパティ値のいずれかが場合`null`、として表されます<xref:System.String.Empty?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="2815b-252">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2815b-253">次の例を示しています、<xref:System.Tuple%603.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="2815b-253">The following example illustrates the <xref:System.Tuple%603.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`3.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`3.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>