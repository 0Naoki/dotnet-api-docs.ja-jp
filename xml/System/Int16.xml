<Type Name="Int16" FullName="System.Int16">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13c0f05f7902e3b10eef4b597213d2d8ac6d12ed" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39910115" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Int16 : IComparable, IComparable&lt;short&gt;, IConvertible, IEquatable&lt;short&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int16 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int16&gt;, class System.IConvertible, class System.IEquatable`1&lt;int16&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int16" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int16&#xA;Implements IComparable, IComparable(Of Short), IConvertible, IEquatable(Of Short), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int16 : IComparable, IComparable&lt;short&gt;, IConvertible, IEquatable&lt;short&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type int16 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="36fe0-101">16 ビット符号付き整数を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="36fe0-101">Represents a 16-bit signed integer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-102"><xref:System.Int16>値型は、負の 32768 から正の 32767 までの値を符号付き整数を表します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-102">The <xref:System.Int16> value type represents signed integers with values ranging from negative 32768 through positive 32767.</span></span>  
  
 <span data-ttu-id="36fe0-103">この型は、この型のインスタンスの値を数値の文字列形式をこの型のインスタンスに変換して、この型のインスタンスを比較する文字列形式に変換するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-103">This type provides methods to convert the value of an instance of this type to its string representation, to convert the string representation of a number to an instance of this type, and to compare instances of this type.</span></span>  
  
 <span data-ttu-id="36fe0-104">メンバーを呼び出すこともできます、<xref:System.Math>をさまざまな数値の商と整数の除算の剰余を計算する 2 つの最大値または最小値を決定する絶対パスの値を取得するなどの数値演算を実行するクラス整数、数値の符号を取得して、数値を四捨五入します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-104">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
 <span data-ttu-id="36fe0-105">書式指定コードが値型の文字列形式を制御する方法については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-105">For information about how format specification codes control the string representation of value types, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="36fe0-106">この種類のすべてのメンバーは、スレッド セーフです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="36fe0-106">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="36fe0-107">インスタンスの状態を変更する表示されるメンバーは、実際に新しい値で初期化された新しいインスタンスを返します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="36fe0-107">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="36fe0-108">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによって。</span>
      <span class="sxs-lookup">
        <span data-stu-id="36fe0-108">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.UInt16" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36fe0-109">このインスタンスと指定したオブジェクトまたは別の <see cref="T:System.Int16" /> インスタンスを比較し、このインスタンスの値が指定したオブジェクトの値またはもう一方の <see cref="T:System.Int16" /> インスタンスの値よりも小さいか、同じか、それとも大きいかを示す整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-109">Compares this instance to a specified object or another <see cref="T:System.Int16" /> instance and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object or the other <see cref="T:System.Int16" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.CompareTo(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(short value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int16 -&gt; int&#xA;override this.CompareTo : int16 -&gt; int" Usage="int16.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="36fe0-110">比較対象の整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-110">An integer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-111">このインスタンスと指定した 16 ビット符号付き整数を比較し、このインスタンスの値が指定した 16 ビット符号付き整数の値よりも小さいか、同じか、それとも大きいかを示す整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-111">Compares this instance to a specified 16-bit signed integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-112">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-112">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="36fe0-113">
            <list type="table">
              <listheader>
                <term> 戻り値  </term>
                <description> 説明  </description>
              </listheader>
              <item>
                <term> 0 より小さい値  </term>
                <description> このインスタンスは、<paramref name="value" /> よりも小さくなっています。</description>
              </item>
              <item>
                <term> 0  </term>
                <description> このインスタンスは <paramref name="value" /> と等価です。</description>
              </item>
              <item>
                <term> 0 より大きい  </term>
                <description> このインスタンスは <paramref name="value" /> より大きくなっています。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-113">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is less than <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is greater than <paramref name="value" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-114">このメソッドを実装、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスを実行よりも若干優れています、<xref:System.Int16.CompareTo%2A?displayProperty=nameWithType>メソッドに変換することはありませんので、`value`オブジェクトに対するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="36fe0-114">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int16.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="36fe0-115">によって、プログラミング言語をコードにことができる場合があります、<xref:System.Int16.CompareTo%2A>メソッドのパラメーターの型のビット数が少ないが、範囲が狭いインスタンス型よりもします。</span><span class="sxs-lookup"><span data-stu-id="36fe0-115">Depending on your programming language, it might be possible to code a <xref:System.Int16.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="36fe0-116">一部のプログラミング言語のインスタンスとビット数の型としてパラメーターを表す暗黙の拡大変換を実行するため、可能です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-116">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="36fe0-117">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-117">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="36fe0-118">Microsoft c# コンパイラはパラメーターの値を表す命令を生成、<xref:System.Int32>オブジェクト、し、生成、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>の値を比較するメソッド、<xref:System.Int32>インスタンスと<xref:System.Int32>パラメーター表現。</span><span class="sxs-lookup"><span data-stu-id="36fe0-118">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="36fe0-119">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを判断する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="36fe0-119">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36fe0-120">次のコード例に示しますジェネリックと非ジェネリック バージョンの<xref:System.Int16.CompareTo%2A>いくつかの値と参照型のメソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-120">The following code example demonstrates generic and nongeneric versions of the <xref:System.Int16.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
        <altmember cref="M:System.Int16.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="int16.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="36fe0-121">比較対象のオブジェクト、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-121">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-122">このインスタンスと指定したオブジェクトを比較し、このインスタンスの値がオブジェクトの値よりも小さいか、同じか、それとも大きいかを示す整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-122">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-123">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-123">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="36fe0-124">
            <list type="table">
              <listheader>
                <term> 戻り値  </term>
                <description> 説明  </description>
              </listheader>
              <item>
                <term> 0 より小さい値  </term>
                <description> このインスタンスは、<paramref name="value" /> よりも小さくなっています。</description>
              </item>
              <item>
                <term> 0  </term>
                <description> このインスタンスは <paramref name="value" /> と等価です。</description>
              </item>
              <item>
                <term> 0 より大きい  </term>
                <description> このインスタンスは <paramref name="value" /> より大きくなっています。または、<paramref name="value" /> は <see langword="null" /> です。</description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-124">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is less than <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is greater than <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-125"><xref:System.Int16>、その値に関係なくと見なされます、null 参照を超えています。</span><span class="sxs-lookup"><span data-stu-id="36fe0-125">An <xref:System.Int16>, regardless of its value, is considered greater than a null reference.</span></span>  
  
 <span data-ttu-id="36fe0-126">`value`パラメーターである必要があります`null`のインスタンスまたは<xref:System.Int16>、それ以外の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-126">The `value` parameter must be `null` or an instance of <xref:System.Int16>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="36fe0-127">
            <paramref name="value" /> が <see cref="T:System.Int16" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-127">
              <paramref name="value" /> is not an <see cref="T:System.Int16" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36fe0-128">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.Int16" /> に等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-128">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int16" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (short obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int16 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Equals(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(short obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : int16 -&gt; bool" Usage="int16.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="36fe0-129">このインスタンスと比較する <see cref="T:System.Int16" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-129">An <see cref="T:System.Int16" /> value to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-130">このインスタンスが指定した <see cref="T:System.Int16" /> 値に等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-130">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int16" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-131">
            <paramref name="obj" /> の値がこのインスタンスと同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-131">
              <see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-132">このメソッドは、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりも若干優れています<xref:System.Int16.Equals%2A>に変換することはありませんので、`obj`オブジェクトに対するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="36fe0-132">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int16.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="36fe0-133">
            <para>コンパイラのオーバー ロードの解決は、2 つの動作の明らかな違いのアカウント可能性があります<see cref="M:System.Int16.Equals(System.Int16)" />メソッドのオーバー ロードします。場合の間の暗黙的な変換、<paramref name="obj" />引数と<see cref="T:System.Int16" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラは、暗黙的な変換と呼び出しを実行、<see cref="M:System.Int16.Equals(System.Int16)" />メソッド。それ以外の場合、それらを呼び出す、<see cref="M:System.Int16.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数がない、<see cref="T:System.Int16" />値。次の例は、2 つのメソッドのオーバー ロードの動作の違いを示しています。場合、<see cref="T:System.Byte" />と<see cref="T:System.SByte" />値は、最初の比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Int16.Equals(System.Int16)" />メソッド、2 つ目の比較の結果が一方<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Int16.Equals(System.Object)" />メソッド。 [! コード csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)] [! コード vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-133">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int16.Equals(System.Int16)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int16.Equals(System.Int16)" /> method. Otherwise, they call the <see cref="M:System.Int16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int16" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of the <see cref="T:System.Byte" /> and <see cref="T:System.SByte" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int16.Equals(System.Int16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int16.Equals(System.Object)" /> method.  [!code-csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Int16.Equals(System.Object)" />
        <altmember cref="Overload:System.Int16.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="int16.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="36fe0-134">このインスタンスと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-134">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-135">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-135">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-136">
            <paramref name="obj" /> が <see cref="T:System.Int16" /> のインスタンスで、このインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-136">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Int16" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36fe0-137">次のコード例は、の使用を示しています。`Equals`のコンテキストで`Int16`、2 つの短い値を比較すると、返す`true`、同じ番号を表している場合または`false`一致しない場合。</span><span class="sxs-lookup"><span data-stu-id="36fe0-137">The following code example illustrates the use of `Equals` in the context of `Int16`, comparing two short values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int16_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int16_Equals/CPP/int16_equals.cpp#1)]
 [!code-csharp[Int16_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int16_Equals/CS/int16_equals.cs#1)]
 [!code-vb[Int16_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int16_Equals/VB/int16_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="36fe0-138">
            <para>コンパイラのオーバー ロードの解決は、2 つの動作の明らかな違いのアカウント可能性があります<see cref="M:System.Int16.Equals(System.Int16)" />メソッドのオーバー ロードします。場合の間の暗黙的な変換、<paramref name="obj" />引数と<see cref="T:System.Int16" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラは、暗黙的な変換と呼び出しを実行、<see cref="M:System.Int16.Equals(System.Int16)" />メソッド。それ以外の場合、それらを呼び出す、<see cref="M:System.Int16.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数がない、<see cref="T:System.Int16" />値。次の例は、2 つのメソッドのオーバー ロードの動作の違いを示しています。場合、<see cref="T:System.Byte" />と<see cref="T:System.SByte" />値は、最初の比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Int16.Equals(System.Int16)" />メソッド、2 つ目の比較の結果が一方<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Int16.Equals(System.Object)" />メソッド。 [! コード csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)] [! コード vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-138">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int16.Equals(System.Int16)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int16.Equals(System.Int16)" /> method. Otherwise, they call the <see cref="M:System.Int16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int16" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of the <see cref="T:System.Byte" /> and <see cref="T:System.SByte" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int16.Equals(System.Int16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int16.Equals(System.Object)" /> method.  [!code-csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="int16.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36fe0-139">このインスタンスのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-139">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-140">32 ビット符号付き整数ハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-140">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="int16.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36fe0-141">
            <see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Int16" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-141">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int16" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-142">列挙型定数 <see cref="F:System.TypeCode.Int16" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-142">The enumerated constant, <see cref="F:System.TypeCode.Int16" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const short MaxValue = 32767;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 MaxValue = int16(32767)" />
      <MemberSignature Language="DocId" Value="F:System.Int16.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Short  = 32767" />
      <MemberSignature Language="C++ CLI" Value="public: short MaxValue = 32767;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : int16" Usage="System.int16.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>32767</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="36fe0-143">
            <see cref="T:System.Int16" /> の最大有効値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-143">Represents the largest possible value of an <see cref="T:System.Int16" />.</span>
          </span>
          <span data-ttu-id="36fe0-144">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-144">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-145">この定数の値は 32767 です。つまり、16 進数 0x7FFF します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-145">The value of this constant is 32767; that is, hexadecimal 0x7FFF.</span></span>  
  
 <span data-ttu-id="36fe0-146"><xref:System.Int16.MaxValue>プロパティが通常使用を防ぐために、<xref:System.OverflowException>大きい範囲の上限を数値型から変換するときに (など、<xref:System.UInt16>または<xref:System.Int32>) に、<xref:System.Int16>します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-146">The <xref:System.Int16.MaxValue> property is typically used to prevent an <xref:System.OverflowException> when converting from a numeric type with a greater upper range (such as a <xref:System.UInt16> or a <xref:System.Int32>) to an <xref:System.Int16>.</span></span> <span data-ttu-id="36fe0-147">この例では、この使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-147">The example illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36fe0-148">次の例では、<xref:System.Int16.MaxValue>プロパティを防ぐために、<xref:System.OverflowException>に変換するときに、<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="36fe0-148">The following example uses the <xref:System.Int16.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Int16.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.MaxValue/cpp/minvalue.cpp#1)]
 [!code-csharp[System.Int16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.Int16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int16.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const short MinValue = -32768;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 MinValue = int16(-32768)" />
      <MemberSignature Language="DocId" Value="F:System.Int16.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Short  = -32768" />
      <MemberSignature Language="C++ CLI" Value="public: short MinValue = -32768;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : int16" Usage="System.int16.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>-32768</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="36fe0-149">
            <see cref="T:System.Int16" /> の最小有効値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-149">Represents the smallest possible value of <see cref="T:System.Int16" />.</span>
          </span>
          <span data-ttu-id="36fe0-150">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-150">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-151">この定数の値は、-32768 からです。つまり、16 進数の 0x8000 です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-151">The value of this constant is -32768; that is, hexadecimal 0x8000.</span></span>  
  
 <span data-ttu-id="36fe0-152"><xref:System.Int16.MinValue>プロパティが通常使用を防ぐために、<xref:System.OverflowException>大きい範囲の下限を数値型から変換するときに (など、<xref:System.Int32>または<xref:System.Int64>) に、<xref:System.Int16>します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-152">The <xref:System.Int16.MinValue> property is typically used to prevent an <xref:System.OverflowException> when converting from a numeric type with a greater lower range (such as an <xref:System.Int32> or an <xref:System.Int64>) to an <xref:System.Int16>.</span></span> <span data-ttu-id="36fe0-153">この例では、この使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-153">The example illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36fe0-154">次の例では、<xref:System.Int16.MinValue>プロパティを防ぐために、<xref:System.OverflowException>に変換するときに、<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="36fe0-154">The following example uses the <xref:System.Int16.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Int16.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.MaxValue/cpp/minvalue.cpp#1)]
 [!code-csharp[System.Int16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.Int16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int16.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36fe0-155">数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-155">Converts the string representation of a number to its 16-bit signed integer equivalent.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Int16.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; int16" Usage="System.int16.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="36fe0-156">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-156">A string containing a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-157">数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-157">Converts the string representation of a number to its 16-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-158">
            <paramref name="s" /> に格納されている数値と等しい 16 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-158">A 16-bit signed integer equivalent to the number contained in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-159">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="36fe0-159">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="36fe0-160">[ws][サインイン] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="36fe0-160">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="36fe0-161">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-161">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="36fe0-162">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-162">The following table describes each element.</span></span>  
  
|<span data-ttu-id="36fe0-163">要素</span><span class="sxs-lookup"><span data-stu-id="36fe0-163">Element</span></span>|<span data-ttu-id="36fe0-164">説明</span><span class="sxs-lookup"><span data-stu-id="36fe0-164">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="36fe0-165">*ws*</span><span class="sxs-lookup"><span data-stu-id="36fe0-165">*ws*</span></span>|<span data-ttu-id="36fe0-166">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-166">Optional white space.</span></span>|  
|<span data-ttu-id="36fe0-167">*sign*</span><span class="sxs-lookup"><span data-stu-id="36fe0-167">*sign*</span></span>|<span data-ttu-id="36fe0-168">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-168">An optional sign.</span></span>|  
|<span data-ttu-id="36fe0-169">*digits*</span><span class="sxs-lookup"><span data-stu-id="36fe0-169">*digits*</span></span>|<span data-ttu-id="36fe0-170">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="36fe0-170">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="36fe0-171">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="36fe0-171">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="36fe0-172">整数値の 10 進数字以外には、先頭と末尾の空白および先頭の符号のみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-172">In addition to the integer value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="36fe0-173">使用可能なスタイル要素を明示的に定義する`s`、いずれかを使用して、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>または<xref:System.Int16.Parse%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-173">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int16.Parse%2A> method.</span></span>  
  
 <span data-ttu-id="36fe0-174">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>オブジェクトを現在のシステム カルチャが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-174">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="36fe0-175">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="36fe0-175">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="36fe0-176">他のいくつかのカルチャの書式設定情報を使用して文字列を解析するには、使用、<xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>または<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-176">To parse a string using the formatting information of some other culture, use the <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36fe0-177">次の例では、文字列値を使用して 16 ビット符号付き整数値に変換する方法、<xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-177">The following example demonstrates how to convert a string value into a 16-bit signed integer value using the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="36fe0-178">結果の整数値がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-178">The resulting integer value is then displayed to the console.</span></span>  
  
 [!code-cpp[System.Int16.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse1.cpp#1)]
 [!code-csharp[System.Int16.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#1)]
 [!code-vb[System.Int16.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36fe0-179">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-179">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="36fe0-180">
            <paramref name="s" /> が正しい形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-180">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="36fe0-181">
            <paramref name="s" /> が <see cref="F:System.Int16.MinValue" /> 未満の数値か、<see cref="F:System.Int16.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-181">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int16.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; int16" Usage="System.int16.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="36fe0-182">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-182">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="36fe0-183">
            <c>s</c> で使用できるスタイル要素を示す、列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-183">A bitwise combination of the enumeration values that indicates the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="36fe0-184">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-184">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-185">指定したスタイルの数値の文字列形式を、それと等価の 16 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-185">Converts the string representation of a number in a specified style to its 16-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-186">
            <paramref name="s" /> で指定した数値と等しい 16 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-186">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-187">`style` (空白文字の記号など) で使用できるスタイル要素を定義するパラメーター、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="36fe0-187">The `style` parameter defines the style elements (such as white space or a sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="36fe0-188">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="36fe0-188">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="36fe0-189">値に応じて`style`、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-189">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="36fe0-190">[ws][$][記号][数字] [.fractional_digits] [e [記号] 桁] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="36fe0-190">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="36fe0-191">または、`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="36fe0-191">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="36fe0-192">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="36fe0-192">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="36fe0-193">角かっこ ([と]) は任意の項目です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-193">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="36fe0-194">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-194">The following table describes each element.</span></span>  
  
|<span data-ttu-id="36fe0-195">要素</span><span class="sxs-lookup"><span data-stu-id="36fe0-195">Element</span></span>|<span data-ttu-id="36fe0-196">説明</span><span class="sxs-lookup"><span data-stu-id="36fe0-196">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="36fe0-197">*ws*</span><span class="sxs-lookup"><span data-stu-id="36fe0-197">*ws*</span></span>|<span data-ttu-id="36fe0-198">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-198">Optional white space.</span></span> <span data-ttu-id="36fe0-199">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、または末尾の`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-199">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="36fe0-200">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-200">A culture-specific currency symbol.</span></span> <span data-ttu-id="36fe0-201">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>現在のカルチャのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-201">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> property of the current culture.</span></span> <span data-ttu-id="36fe0-202">現在のカルチャの通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-202">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="36fe0-203">*sign*</span><span class="sxs-lookup"><span data-stu-id="36fe0-203">*sign*</span></span>|<span data-ttu-id="36fe0-204">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-204">An optional sign.</span></span> <span data-ttu-id="36fe0-205">先頭の符号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-205">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="36fe0-206">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-206">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="36fe0-207">*digits*</span><span class="sxs-lookup"><span data-stu-id="36fe0-207">*digits*</span></span>|<span data-ttu-id="36fe0-208">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="36fe0-208">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="36fe0-209">*、*</span><span class="sxs-lookup"><span data-stu-id="36fe0-209">*,*</span></span>|<span data-ttu-id="36fe0-210">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-210">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="36fe0-211">数千の現在のカルチャの区切り記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-211">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="36fe0-212">*.*</span><span class="sxs-lookup"><span data-stu-id="36fe0-212">*.*</span></span>|<span data-ttu-id="36fe0-213">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-213">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="36fe0-214">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-214">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="36fe0-215">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="36fe0-215">*fractional_digits*</span></span>|<span data-ttu-id="36fe0-216">0 の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="36fe0-216">A sequence of the 0 digit.</span></span> <span data-ttu-id="36fe0-217">小数部の桁数を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-217">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="36fe0-218">0 以外の任意の数字が表示される場合*fractional_digits*がスローされます、<xref:System.OverflowException>します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-218">If any digit other than 0 appears in *fractional_digits*, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="36fe0-219">*e*</span><span class="sxs-lookup"><span data-stu-id="36fe0-219">*e*</span></span>|<span data-ttu-id="36fe0-220">"E"または"E"文字は、ことを示します`s`指数表記で表すことができます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-220">The 'e' or 'E' character, which indicates that `s` can be represented in exponential notation.</span></span> <span data-ttu-id="36fe0-221">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-221">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="36fe0-222">ただし、`s`パラメーターの範囲内の数を表す必要があります、<xref:System.Int16>データ型で、0 以外の小数部を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="36fe0-222">However, the `s` parameter must represent a number in the range of the <xref:System.Int16> data type and cannot have a non-zero fractional component.</span></span>|  
|<span data-ttu-id="36fe0-223">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="36fe0-223">*hexdigits*</span></span>|<span data-ttu-id="36fe0-224">0 ~ f、または f の 0 から 16 進数のシーケンス</span><span class="sxs-lookup"><span data-stu-id="36fe0-224">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="36fe0-225">String と*桁*のみ (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) 常に正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-225">A string with *digits* only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="36fe0-226">残りのほとんど<xref:System.Globalization.NumberStyles>メンバーがありますが、この入力文字列内に存在する必要はありません要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-226">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="36fe0-227">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-227">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="36fe0-228">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="36fe0-228">Non-composite NumberStyles values</span></span>|<span data-ttu-id="36fe0-229">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="36fe0-229">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="36fe0-230">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="36fe0-230">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="36fe0-231">*.*</span><span class="sxs-lookup"><span data-stu-id="36fe0-231">The *.*</span></span> <span data-ttu-id="36fe0-232">*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-232">and *fractional_digits* elements.</span></span> <span data-ttu-id="36fe0-233">ただし、 *fractional_digits*のみ 1 つまたは複数の 0 の数字で構成する必要がありますまたは<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-233">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="36fe0-234">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-234">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="36fe0-235">*Ws*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-235">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="36fe0-236">*Ws*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-236">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="36fe0-237">符号は、前に配置できます*桁*します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-237">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="36fe0-238">符号が後に表示できる*桁*します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-238">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="36fe0-239">*サインオン*形式の数値を囲むかっこ内の要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-239">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="36fe0-240">*、* 要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-240">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="36fe0-241">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-241">The *$* element.</span></span>|  
  
 <span data-ttu-id="36fe0-242">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスなしの 16 進数の値の文字列形式を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="36fe0-242">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be the string representation of a hexadecimal value without a prefix.</span></span> <span data-ttu-id="36fe0-243">たとえば、"9AF3"が正常に解析しますが、"0x9AF3"はありません。</span><span class="sxs-lookup"><span data-stu-id="36fe0-243">For example, "9AF3" parses successfully, but "0x9AF3" does not.</span></span> <span data-ttu-id="36fe0-244">他のフラグのみに存在することができる`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-244">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="36fe0-245">(、<xref:System.Globalization.NumberStyles>列挙体には複合数値スタイル、 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、空白文字の両方のフラグが含まれます)。</span><span class="sxs-lookup"><span data-stu-id="36fe0-245">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="36fe0-246">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>オブジェクトを現在のシステム カルチャが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-246">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="36fe0-247">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="36fe0-247">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="36fe0-248">解析する`s`、特定のカルチャの書式情報を使用して、呼び出し、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-248">To parse `s` using the formatting information of a specific culture, call the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36fe0-249">次の例では、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>メソッドの文字列形式を解析する<xref:System.Int16>EN-US カルチャを使用して値します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-249">The following example uses the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of <xref:System.Int16> values using the en-US culture.</span></span>  
  
 [!code-cpp[System.Int16.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse2.cpp#2)]
 [!code-csharp[System.Int16.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int16.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36fe0-250">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-250">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="36fe0-251">
            <paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-251">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="36fe0-252">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-252">-or-</span>
          </span>
          <span data-ttu-id="36fe0-253">
            <paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-253">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="36fe0-254">
            <paramref name="s" /> の書式が、<paramref name="style" /> に準拠した書式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-254">
              <paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="36fe0-255">
            <paramref name="s" /> が <see cref="F:System.Int16.MinValue" /> 未満の数値か、<see cref="F:System.Int16.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-255">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="36fe0-256">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-256">-or-</span>
          </span>
          <span data-ttu-id="36fe0-257">
            <paramref name="s" /> が 0 以外の小数部の桁を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-257">
              <paramref name="s" /> includes non-zero fractional digits.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
        <altmember cref="Overload:System.Int16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; int16" Usage="System.int16.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="36fe0-258">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-258">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="36fe0-259">
            <c>s</c> に関するカルチャに固有の書式設定情報を提供する <see cref="T:System.IFormatProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-259">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-260">指定したカルチャに固有の書式による数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-260">Converts the string representation of a number in a specified culture-specific format to its 16-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-261">
            <paramref name="s" /> で指定した数値と等しい 16 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-261">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-262">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="36fe0-262">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="36fe0-263">[ws][サインイン] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="36fe0-263">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="36fe0-264">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-264">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="36fe0-265">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-265">The following table describes each element.</span></span>  
  
|<span data-ttu-id="36fe0-266">要素</span><span class="sxs-lookup"><span data-stu-id="36fe0-266">Element</span></span>|<span data-ttu-id="36fe0-267">説明</span><span class="sxs-lookup"><span data-stu-id="36fe0-267">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="36fe0-268">ws</span><span class="sxs-lookup"><span data-stu-id="36fe0-268">ws</span></span>|<span data-ttu-id="36fe0-269">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="36fe0-269">An optional white space.</span></span>|  
|<span data-ttu-id="36fe0-270">sign</span><span class="sxs-lookup"><span data-stu-id="36fe0-270">sign</span></span>|<span data-ttu-id="36fe0-271">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-271">An optional sign.</span></span>|  
|<span data-ttu-id="36fe0-272">数字</span><span class="sxs-lookup"><span data-stu-id="36fe0-272">digits</span></span>|<span data-ttu-id="36fe0-273">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="36fe0-273">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="36fe0-274">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="36fe0-274">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="36fe0-275">10 進数字だけでなくは、先頭と末尾の空白および先頭の符号のみを許可します。`s`します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-275">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed in `s`.</span></span> <span data-ttu-id="36fe0-276">使用できるカルチャに固有の書式情報とスタイル要素を明示的に定義する`s`を使用して、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-276">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="36fe0-277">`provider`パラメーターは、<xref:System.IFormatProvider>実装を取得する、<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="36fe0-277">The `provider` parameter is an <xref:System.IFormatProvider> implementation that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="36fe0-278"><xref:System.Globalization.NumberFormatInfo>の書式設定に関するカルチャ固有の情報を提供します`s`します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-278">The <xref:System.Globalization.NumberFormatInfo> provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="36fe0-279">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-279">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36fe0-280">次の例の文字列形式を解析する<xref:System.Int16>値で、<xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-280">The following example parses string representations of <xref:System.Int16> values with the <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Int16.Parse#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse4.cpp#4)]
 [!code-csharp[System.Int16.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#4)]
 [!code-vb[System.Int16.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36fe0-281">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-281">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="36fe0-282">
            <paramref name="s" /> が正しい形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-282">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="36fe0-283">
            <paramref name="s" /> が <see cref="F:System.Int16.MinValue" /> 未満の数値か、<see cref="F:System.Int16.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-283">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int16.ToString" />
        <altmember cref="Overload:System.Int16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Short" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; int16" Usage="System.int16.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; int16" Usage="System.int16.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="36fe0-284">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-284">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="36fe0-285">
            <c>s</c> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-285">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="36fe0-286">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-286">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="36fe0-287">
            <c>s</c> に関するカルチャに固有の書式設定情報を提供する <see cref="T:System.IFormatProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-287">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-288">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 16 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-288">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-289">
            <paramref name="s" /> で指定した数値と等しい 16 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-289">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-290">`style` (空白や正符号) で使用できるスタイル要素を定義するパラメーター、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="36fe0-290">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="36fe0-291">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="36fe0-291">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="36fe0-292">値に応じて`style`、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-292">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="36fe0-293">[ws][$][記号][数字] [.fractional_digits] [e [記号] 桁] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="36fe0-293">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="36fe0-294">または、`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="36fe0-294">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="36fe0-295">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="36fe0-295">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="36fe0-296">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-296">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="36fe0-297">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-297">The following table describes each element.</span></span>  
  
|<span data-ttu-id="36fe0-298">要素</span><span class="sxs-lookup"><span data-stu-id="36fe0-298">Element</span></span>|<span data-ttu-id="36fe0-299">説明</span><span class="sxs-lookup"><span data-stu-id="36fe0-299">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="36fe0-300">*ws*</span><span class="sxs-lookup"><span data-stu-id="36fe0-300">*ws*</span></span>|<span data-ttu-id="36fe0-301">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-301">Optional white space.</span></span> <span data-ttu-id="36fe0-302">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、または末尾の`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-302">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="36fe0-303">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-303">A culture-specific currency symbol.</span></span> <span data-ttu-id="36fe0-304">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>現在のカルチャのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-304">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> property of the current culture.</span></span> <span data-ttu-id="36fe0-305">現在のカルチャの通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-305">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="36fe0-306">*sign*</span><span class="sxs-lookup"><span data-stu-id="36fe0-306">*sign*</span></span>|<span data-ttu-id="36fe0-307">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-307">An optional sign.</span></span> <span data-ttu-id="36fe0-308">先頭の符号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-308">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="36fe0-309">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-309">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="36fe0-310">*digits*</span><span class="sxs-lookup"><span data-stu-id="36fe0-310">*digits*</span></span>|<span data-ttu-id="36fe0-311">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="36fe0-311">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="36fe0-312">*、*</span><span class="sxs-lookup"><span data-stu-id="36fe0-312">*,*</span></span>|<span data-ttu-id="36fe0-313">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-313">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="36fe0-314">数千の現在のカルチャの区切り記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-314">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="36fe0-315">*.*</span><span class="sxs-lookup"><span data-stu-id="36fe0-315">*.*</span></span>|<span data-ttu-id="36fe0-316">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-316">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="36fe0-317">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-317">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="36fe0-318">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="36fe0-318">*fractional_digits*</span></span>|<span data-ttu-id="36fe0-319">0 の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="36fe0-319">A sequence of the 0 digit.</span></span> <span data-ttu-id="36fe0-320">小数部の桁数を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-320">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="36fe0-321">0 以外の任意の数字が表示される場合*fractional_digits*がスローされます、<xref:System.OverflowException>します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-321">If any digit other than 0 appears in *fractional_digits*, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="36fe0-322">*e*</span><span class="sxs-lookup"><span data-stu-id="36fe0-322">*e*</span></span>|<span data-ttu-id="36fe0-323">"E"または"E"文字は、ことを示します`s`指数表記で表すことができます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-323">The 'e' or 'E' character, which indicates that `s` can be represented in exponential notation.</span></span> <span data-ttu-id="36fe0-324">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-324">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="36fe0-325">ただし、`s`パラメーターの範囲内の数を表す必要があります、<xref:System.Int16>データ型で、0 以外の小数部を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="36fe0-325">However, the `s` parameter must represent a number in the range of the <xref:System.Int16> data type and cannot have a non-zero fractional component.</span></span>|  
|<span data-ttu-id="36fe0-326">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="36fe0-326">*hexdigits*</span></span>|<span data-ttu-id="36fe0-327">0 ~ f、または f の 0 から 16 進数のシーケンス</span><span class="sxs-lookup"><span data-stu-id="36fe0-327">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="36fe0-328">String と*桁*のみ (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) 常に正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-328">A string with *digits* only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="36fe0-329">残りのほとんど<xref:System.Globalization.NumberStyles>メンバーがありますが、この入力文字列内に存在する必要はありません要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-329">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="36fe0-330">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-330">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="36fe0-331">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="36fe0-331">Non-composite NumberStyles values</span></span>|<span data-ttu-id="36fe0-332">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="36fe0-332">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="36fe0-333">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="36fe0-333">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="36fe0-334">*.*</span><span class="sxs-lookup"><span data-stu-id="36fe0-334">The *.*</span></span> <span data-ttu-id="36fe0-335">*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-335">and *fractional_digits* elements.</span></span> <span data-ttu-id="36fe0-336">ただし、 *fractional_digits*のみ 1 つまたは複数の 0 の数字で構成する必要がありますまたは<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-336">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="36fe0-337">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-337">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="36fe0-338">*Ws*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-338">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="36fe0-339">*Ws*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-339">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="36fe0-340">符号は、前に配置できます*桁*します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-340">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="36fe0-341">符号が後に表示できる*桁*します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-341">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="36fe0-342">*サインオン*形式の数値を囲むかっこ内の要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-342">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="36fe0-343">*、* 要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-343">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="36fe0-344">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-344">The *$* element.</span></span>|  
  
 <span data-ttu-id="36fe0-345">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスなしの 16 進数の値の文字列形式を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="36fe0-345">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be the string representation of a hexadecimal value without a prefix.</span></span> <span data-ttu-id="36fe0-346">たとえば、"9AF3"が正常に解析しますが、"0x9AF3"は使用できません.</span><span class="sxs-lookup"><span data-stu-id="36fe0-346">For example, "9AF3" parses successfully, but "0x9AF3" does not..</span></span> <span data-ttu-id="36fe0-347">他のフラグのみに存在することができる`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-347">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="36fe0-348">(、<xref:System.Globalization.NumberStyles>列挙体には複合数値スタイル、 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、空白文字の両方のフラグが含まれます)。</span><span class="sxs-lookup"><span data-stu-id="36fe0-348">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="36fe0-349">`provider`パラメーターが、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A>メソッドは、取得、<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="36fe0-349">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="36fe0-350"><xref:System.Globalization.NumberFormatInfo>オブジェクトの書式設定に関するカルチャ固有の情報を提供`s`します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-350">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="36fe0-351">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-351">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36fe0-352">次の例は、さまざまな`style`と`provider`パラメーターの文字列形式を解析する<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="36fe0-352">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int16> values.</span></span>  
  
 [!code-cpp[System.Int16.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse3.cpp#3)]
 [!code-csharp[System.Int16.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#3)]
 [!code-vb[System.Int16.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36fe0-353">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-353">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="36fe0-354">
            <paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-354">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="36fe0-355">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-355">-or-</span>
          </span>
          <span data-ttu-id="36fe0-356">
            <paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-356">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="36fe0-357">
            <paramref name="s" /> の書式が、<paramref name="style" /> に準拠した書式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-357">
              <paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="36fe0-358">
            <paramref name="s" /> が <see cref="F:System.Int16.MinValue" /> 未満の数値か、<see cref="F:System.Int16.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-358">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="36fe0-359">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-359">-or-</span>
          </span>
          <span data-ttu-id="36fe0-360">
            <paramref name="s" /> が 0 以外の小数部の桁を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-360">
              <paramref name="s" /> includes non-zero fractional digits.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-361">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-361">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-362">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-362">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-363">現在のインスタンスの値がゼロでない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-363">
              <see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-364">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-364">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-365">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-365">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="36fe0-366">推奨される代替手段は、<xref:System.Convert.ToBoolean%28System.Int16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-366">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-367">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-367">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-368">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-368">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-369">
            <see cref="T:System.Byte" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-369">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-370">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-370">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-371">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-371">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="36fe0-372">推奨される代替手段は、<xref:System.Convert.ToByte%28System.Int16%29?displayProperty=nameWithType>メソッド</span><span class="sxs-lookup"><span data-stu-id="36fe0-372">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int16%29?displayProperty=nameWithType> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-373">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-373">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-374">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-374">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-375">
            <see cref="T:System.Char" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-375">The value of the current instance, converted to a <see cref="T:System.Char" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-376">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-376">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-377">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-377">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="36fe0-378">推奨される代替手段は、<xref:System.Convert.ToChar%28System.Int16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-378">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-379">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-379">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-380">この変換はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-380">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="36fe0-381">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-381">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-382">この変換はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-382">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="36fe0-383">値は返されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-383">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="36fe0-384">すべての場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-384">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-385">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-385">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-386">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-386">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-387">
            <see cref="T:System.Decimal" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-387">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-388">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-388">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-389">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-389">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="36fe0-390">推奨される代替手段は、<xref:System.Convert.ToDecimal%28System.Int16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-390">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-391">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-391">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-392">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-392">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-393">
            <see cref="T:System.Double" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-393">The value of the current instance, converted to a <see cref="T:System.Double" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-394">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-394">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-395">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-395">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="36fe0-396">推奨される代替手段は、<xref:System.Convert.ToDouble%28System.Int16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-396">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-397">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-397">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-398">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-398">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-399">変更されていない、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-399">The value of the current instance, unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-400">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-400">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-401">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-401">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-402">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-402">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-403">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-403">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-404">
            <see cref="T:System.Int32" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-404">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-405">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-405">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-406">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-406">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="36fe0-407">推奨される代替手段は、<xref:System.Convert.ToInt32%28System.Int16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-407">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-408">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-408">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-409">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-409">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-410">
            <see cref="T:System.Int64" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-410">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-411">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-411">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-412">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-412">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="36fe0-413">推奨される代替手段は、<xref:System.Convert.ToInt64%28System.Int16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-413">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-414">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-414">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-415">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-415">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-416">
            <see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-416">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-417">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-417">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-418">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-418">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="36fe0-419">推奨される代替手段は、<xref:System.Convert.ToSByte%28System.Int16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-419">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-420">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-420">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-421">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-421">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-422">
            <see cref="T:System.Single" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-422">The value of the current instance, converted to a <see cref="T:System.Single" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-423">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-423">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-424">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-424">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="36fe0-425">推奨される代替手段は、<xref:System.Convert.ToSingle%28System.Int16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-425">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="36fe0-426">この <see cref="T:System.Int16" /> 値の変換後の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-426">The type to which to convert this <see cref="T:System.Int16" /> value.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="36fe0-427">戻り値の書式に関する情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-427">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-428">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-428">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-429">
            <paramref name="type" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-429">The value of the current instance, converted to <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-430">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-430">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-431">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-431">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="36fe0-432">推奨される代替手段は、 `static` (`Shared` Visual Basic で)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-432">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-433">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-433">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-434">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-434">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-435">変更されていない、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-435">The value of the current instance, unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-436">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-436">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-437">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-437">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="36fe0-438">推奨される代替手段は、<xref:System.Convert.ToUInt16%28System.Int16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-438">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-439">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-439">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-440">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-440">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-441">
            <see cref="T:System.UInt32" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-441">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-442">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-442">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-443">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-443">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="36fe0-444">推奨される代替手段は、<xref:System.Convert.ToUInt32%28System.Int16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-444">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-445">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-445">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-446">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-446">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-447">
            <see cref="T:System.UInt64" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-447">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-448">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-448">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="36fe0-449">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-449">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="36fe0-450">推奨される代替手段は、<xref:System.Convert.ToUInt64%28System.Int16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-450">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36fe0-451">このインスタンスの数値を、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-451">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="int16.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36fe0-452">このインスタンスの数値を、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-452">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-453">値が負の場合はマイナス記号を伴い、先行ゼロを含まない 0 から 9 までの一連の数字から構成される、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-453">The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-454"><xref:System.Int16.ToString>メソッド形式、 <xref:System.Int16> ("G"または [全般]) の既定値を使用して形式、<xref:System.Globalization.NumberFormatInfo>現在のカルチャのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="36fe0-454">The <xref:System.Int16.ToString> method formats an <xref:System.Int16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="36fe0-455">別の形式またはカルチャを指定する場合の他のオーバー ロードを使用して、<xref:System.Int16.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="36fe0-455">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="36fe0-456">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="36fe0-456">To use format</span></span>|<span data-ttu-id="36fe0-457">カルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-457">For culture</span></span>|<span data-ttu-id="36fe0-458">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-458">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="36fe0-459">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="36fe0-459">Default ("G") format</span></span>|<span data-ttu-id="36fe0-460">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-460">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="36fe0-461">特定の形式</span><span class="sxs-lookup"><span data-stu-id="36fe0-461">A specific format</span></span>|<span data-ttu-id="36fe0-462">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-462">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
|<span data-ttu-id="36fe0-463">特定の形式</span><span class="sxs-lookup"><span data-stu-id="36fe0-463">A specific format</span></span>|<span data-ttu-id="36fe0-464">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-464">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="36fe0-465">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-465">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="36fe0-466">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-466">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="36fe0-467">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-467">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36fe0-468">次の例では、<xref:System.Int16.ToString>の配列を表示するメソッドを<xref:System.Int16>の値をコンソール。</span><span class="sxs-lookup"><span data-stu-id="36fe0-468">The following example uses the <xref:System.Int16.ToString> method to display an array of <xref:System.Int16> values to the console.</span></span>  
  
 [!code-csharp[System.Int16.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Int16.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="int16.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="36fe0-469">カルチャ固有の書式情報を提供する <see cref="T:System.IFormatProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-469">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-470">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-470">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-471">
            <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-471">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-472"><xref:System.Int16.ToString%28System.IFormatProvider%29>メソッド形式、 <xref:System.Int16> ("G"または [全般]) の既定値を使用して形式、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="36fe0-472">The <xref:System.Int16.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="36fe0-473">別の形式または現在のカルチャを指定する場合の他のオーバー ロードを使用して、<xref:System.Int16.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="36fe0-473">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="36fe0-474">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="36fe0-474">To use format</span></span>|<span data-ttu-id="36fe0-475">カルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-475">For culture</span></span>|<span data-ttu-id="36fe0-476">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-476">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="36fe0-477">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="36fe0-477">Default ("G") format</span></span>|<span data-ttu-id="36fe0-478">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-478">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="36fe0-479">特定の形式</span><span class="sxs-lookup"><span data-stu-id="36fe0-479">A specific format</span></span>|<span data-ttu-id="36fe0-480">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-480">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
|<span data-ttu-id="36fe0-481">特定の形式</span><span class="sxs-lookup"><span data-stu-id="36fe0-481">A specific format</span></span>|<span data-ttu-id="36fe0-482">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-482">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="36fe0-483">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-483">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="36fe0-484">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-484">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="36fe0-485">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-485">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="36fe0-486">`provider`パラメーターは、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="36fe0-486">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="36fe0-487">通常、`provider`は、<xref:System.Globalization.NumberFormatInfo>オブジェクトまたは<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="36fe0-487">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="36fe0-488"><xref:System.Globalization.NumberFormatInfo>オブジェクトは、このメソッドによって返される文字列の書式設定に関するカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-488">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="36fe0-489">場合`provider`は`null`のこのインスタンスは書式設定、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="36fe0-489">If `provider` is `null`, this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36fe0-490">次の例の配列を反復処理<xref:System.Int16>値し、それらの各を呼び出すことによってコンソールに表示、<xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>メソッドが異なる書式プロバイダーを使用します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-490">The following example iterates an array of <xref:System.Int16> values and displays each of them to the console by calling the <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method with different format providers.</span></span> <span data-ttu-id="36fe0-491">それぞれのため、単純な既定の"G"書式指定子によって定義された、書式設定された文字列が生成される<xref:System.Int16>値が同一の値に関係なく、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="36fe0-491">Because of the simple formatting defined by the default "G" format specifier, the formatted strings produced for each <xref:System.Int16> value are identical regardless of the value of the `provider` parameter.</span></span>  
  
 [!code-csharp[System.Int16.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#2)]
 [!code-vb[System.Int16.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="int16.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="36fe0-492">数値書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-492">A numeric format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-493">指定した書式を使用して、このインスタンスの数値を、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-493">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-494">
            <paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-494">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-495"><xref:System.Int16.ToString%28System.String%29>メソッド形式、<xref:System.Int16>を使用して指定された形式で値を<xref:System.Globalization.NumberFormatInfo>現在のカルチャの規則を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="36fe0-495">The <xref:System.Int16.ToString%28System.String%29> method formats an <xref:System.Int16> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="36fe0-496">既定値 ("G"または [全般]) を使用する場合は、書式を設定または別のカルチャを指定するの他のオーバー ロードを使用して、<xref:System.Int16.ToString%2A>メソッドは、次のように。</span><span class="sxs-lookup"><span data-stu-id="36fe0-496">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="36fe0-497">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="36fe0-497">To use format</span></span>|<span data-ttu-id="36fe0-498">カルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-498">For culture</span></span>|<span data-ttu-id="36fe0-499">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-499">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="36fe0-500">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="36fe0-500">Default ("G") format</span></span>|<span data-ttu-id="36fe0-501">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-501">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="36fe0-502">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="36fe0-502">Default ("G") format</span></span>|<span data-ttu-id="36fe0-503">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-503">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="36fe0-504">特定の形式</span><span class="sxs-lookup"><span data-stu-id="36fe0-504">A specific format</span></span>|<span data-ttu-id="36fe0-505">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-505">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="36fe0-506">`format`パラメーターは、標準またはカスタム数値書式指定文字列のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-506">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="36fe0-507">すべてのカスタム数値書式指定文字として、"R"(または"r") 以外のすべての標準数値書式指定文字列がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-507">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="36fe0-508">場合`format`は`null`か、[全般] の数値書式指定子 ("G") 書式がこのインスタンスの戻り値、空の文字列。</span><span class="sxs-lookup"><span data-stu-id="36fe0-508">If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="36fe0-509">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-509">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="36fe0-510">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-510">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="36fe0-511">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-511">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="36fe0-512">このインスタンスの戻り値は設定、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-512">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36fe0-513">次の例では、2 つを初期化します<xref:System.Int16>値し、の各サポートされている標準書式指定文字列といくつかのカスタム書式指定文字列を使用して、コンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-513">The following example initializes two <xref:System.Int16> values and displays them to the console using each of the supported standard format strings and several custom format strings.</span></span> <span data-ttu-id="36fe0-514">例は、現在のカルチャとして en-us (英語) で実行されます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-514">The example is run with en-US as the current culture.</span></span>  
  
 [!code-csharp[System.Int16.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Int16.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="int16.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="36fe0-515">数値書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-515">A numeric format string.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="36fe0-516">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-516">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-517">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-517">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-518">
            <paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-518">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-519"><xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>メソッド形式、<xref:System.Int16>値を使用して指定された形式で、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="36fe0-519">The <xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int16> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="36fe0-520">既定の形式またはカルチャの設定を使用する場合の他のオーバー ロードを使用して、<xref:System.Int16.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="36fe0-520">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="36fe0-521">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="36fe0-521">To use format</span></span>|<span data-ttu-id="36fe0-522">カルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-522">For culture</span></span>|<span data-ttu-id="36fe0-523">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-523">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="36fe0-524">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="36fe0-524">Default ("G") format</span></span>|<span data-ttu-id="36fe0-525">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-525">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="36fe0-526">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="36fe0-526">Default ("G") format</span></span>|<span data-ttu-id="36fe0-527">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-527">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="36fe0-528">特定の形式</span><span class="sxs-lookup"><span data-stu-id="36fe0-528">A specific format</span></span>|<span data-ttu-id="36fe0-529">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="36fe0-529">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
  
 <span data-ttu-id="36fe0-530">`format`パラメーターは、標準またはカスタム数値書式指定文字列のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-530">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="36fe0-531">すべてのカスタム数値書式指定文字として、"R"(または"r") 以外のすべての標準数値書式指定文字列がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-531">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="36fe0-532">場合`format`は`null`または空の文字列 ("")、このメソッドによって返される文字列が、一般的な数値書式指定子 ("G") でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="36fe0-532">If `format` is `null` or an empty string (""), the string returned by this method is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="36fe0-533">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-533">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="36fe0-534">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-534">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="36fe0-535">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-535">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="36fe0-536">`provider`パラメーターは、<xref:System.IFormatProvider>実装します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-536">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="36fe0-537">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式設定に関するカルチャに固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="36fe0-537">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="36fe0-538">実装するオブジェクト<xref:System.IFormatProvider>次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-538">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="36fe0-539">A<xref:System.Globalization.CultureInfo>書式指定規則を使用するカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="36fe0-539">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="36fe0-540">A<xref:System.Globalization.NumberFormatInfo>この値の特定の数値書式設定情報を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="36fe0-540">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="36fe0-541">実装するカスタム オブジェクト<xref:System.IFormatProvider>します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-541">A custom object that implements <xref:System.IFormatProvider>.</span></span>  
  
 <span data-ttu-id="36fe0-542">場合`provider`は`null`、または<xref:System.Globalization.NumberFormatInfo>からオブジェクトを取得できない`provider`、戻り値は設定、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-542">If `provider` is `null`, or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36fe0-543">次の例では、表示、<xref:System.Int16>で 4 つの異なるカルチャを使用して、サポートされている標準書式指定文字列の各値します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-543">The following example displays an <xref:System.Int16> value using each of the supported standard format strings in four different cultures.</span></span>  
  
 [!code-csharp[System.Int16.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Int16.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="int16.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36fe0-544">数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-544">Converts the string representation of a number to its 16-bit signed integer equivalent.</span>
          </span>
          <span data-ttu-id="36fe0-545">戻り値は変換が成功したか失敗したかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-545">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Int16.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.ReadOnlySpan{System.Char},System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] short % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.int16.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.String,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] short % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.int16.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="36fe0-546">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-546">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="36fe0-547">変換が成功した場合、このメソッドが返されるときに、<c>s</c> に格納された数値と等価の 16 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-547">When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="36fe0-548">
            <c>s</c> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、正しい形式ではない、または <see cref="F:System.Int16.MinValue" /> より小さいか <see cref="F:System.Int16.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-548">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="36fe0-549">このパラメーターは初期化されていない状態で渡されています。<c>result</c> で最初に指定された任意の値が上書きされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-549">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-550">数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-550">Converts the string representation of a number to its 16-bit signed integer equivalent.</span>
          </span>
          <span data-ttu-id="36fe0-551">戻り値は変換が成功したか失敗したかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-551">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-552">
            <see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-552">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-553"><xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType>メソッドとは異なります、 <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> 、解析を返す代わりに、解析操作が成功したかどうかを示すブール値を返すことによってメソッド<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="36fe0-553">The <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> method differs from the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <xref:System.Int16> value.</span></span> <span data-ttu-id="36fe0-554">例外処理を使用してテストする必要がある、<xref:System.FormatException>イベントで`s`有効でないし、正常に解析されることはできません。</span><span class="sxs-lookup"><span data-stu-id="36fe0-554">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="36fe0-555">`s`パラメーターは、フォームでの数値の文字列形式でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="36fe0-555">The `s` parameter should be the string representation of a number in the form:</span></span>  
  
 <span data-ttu-id="36fe0-556">[ws][サインイン] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="36fe0-556">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="36fe0-557">角かっこ ([と]) は任意の項目です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-557">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="36fe0-558">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-558">The following table describes each element.</span></span>  
  
|<span data-ttu-id="36fe0-559">要素</span><span class="sxs-lookup"><span data-stu-id="36fe0-559">Element</span></span>|<span data-ttu-id="36fe0-560">説明</span><span class="sxs-lookup"><span data-stu-id="36fe0-560">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="36fe0-561">*ws*</span><span class="sxs-lookup"><span data-stu-id="36fe0-561">*ws*</span></span>|<span data-ttu-id="36fe0-562">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-562">Optional white space.</span></span>|  
|<span data-ttu-id="36fe0-563">*sign*</span><span class="sxs-lookup"><span data-stu-id="36fe0-563">*sign*</span></span>|<span data-ttu-id="36fe0-564">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-564">An optional sign.</span></span>|  
|<span data-ttu-id="36fe0-565">*digits*</span><span class="sxs-lookup"><span data-stu-id="36fe0-565">*digits*</span></span>|<span data-ttu-id="36fe0-566">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="36fe0-566">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="36fe0-567">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="36fe0-567">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="36fe0-568">10 進の数字以外には、先頭と末尾の空白および先頭の符号のみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-568">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="36fe0-569">使用できるカルチャに固有の書式情報とスタイル要素を明示的に定義する`s`を使用して、<xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-569">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="36fe0-570">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>オブジェクトを現在のシステム カルチャが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-570">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="36fe0-571">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="36fe0-571">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="36fe0-572">このオーバー ロード、<xref:System.Int16.TryParse%2A>メソッドですべての桁を解釈し、`s`として 10 進数字のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="36fe0-572">This overload of the <xref:System.Int16.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="36fe0-573">16 進数の文字列表現を解析する、<xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="36fe0-573">To parse the string representation of a hexadecimal number, call the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36fe0-574">次の例では、<xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType>数別の文字列値を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-574">The following example calls the <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int16.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int16.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="36fe0-575">文字列の一部を<xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29>メソッドは、この例では変換できませんは。</span><span class="sxs-lookup"><span data-stu-id="36fe0-575">Some of the strings that the <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="36fe0-576">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="36fe0-576">"9432.0".</span></span> <span data-ttu-id="36fe0-577">小数点の記号を含めることはできませんので、変換に失敗します。整数の桁のみ含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="36fe0-577">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="36fe0-578">"16,667".</span><span class="sxs-lookup"><span data-stu-id="36fe0-578">"16,667".</span></span> <span data-ttu-id="36fe0-579">文字列は、グループの区切り記号を含めることはできませんので、変換に失敗します。整数の桁のみ含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="36fe0-579">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="36fe0-580">"(100)".</span><span class="sxs-lookup"><span data-stu-id="36fe0-580">"(100)".</span></span> <span data-ttu-id="36fe0-581">文字列は、現在のカルチャによって定義されている以外の負の符号を含めることはできませんので、変換に失敗<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-581">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="36fe0-582">"01FA"。</span><span class="sxs-lookup"><span data-stu-id="36fe0-582">"01FA".</span></span> <span data-ttu-id="36fe0-583">文字列が 16 進数; を含めることはできませんので、変換に失敗します。10 進数字だけ含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="36fe0-583">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="M:System.Int16.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] short % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int16.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] short % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int16.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="36fe0-584">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-584">A string containing a number to convert.</span>
          </span>
          <span data-ttu-id="36fe0-585">文字列は、<c> スタイル </c> で指定されたスタイルを使用して解釈されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-585">The string is interpreted using the style specified by <c>style</c>.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="36fe0-586">
            <c>s</c> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-586">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="36fe0-587">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-587">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="36fe0-588">
            <c>s</c> に関するカルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-588">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="36fe0-589">変換が成功した場合、このメソッドが返されるときに、<c>s</c> に格納された数値と等価の 16 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-589">When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="36fe0-590">
            <c>s</c> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、 <c>style</c> に準拠した形式ではない、または <see cref="F:System.Int16.MinValue" /> より小さいか <see cref="F:System.Int16.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-590">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="36fe0-591">このパラメーターは初期化されていない状態で渡されています。<c>result</c> で最初に指定された任意の値が上書きされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-591">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36fe0-592">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 16 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-592">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</span>
          </span>
          <span data-ttu-id="36fe0-593">戻り値は変換が成功したか失敗したかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-593">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36fe0-594">
            <see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-594">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36fe0-595"><xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType>メソッドとは異なります、 <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 、解析を返す代わりに、解析操作が成功したかどうかを示すブール値を返すことによってメソッド<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="36fe0-595">The <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method differs from the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <xref:System.Int16> value.</span></span> <span data-ttu-id="36fe0-596">例外処理を使用してテストする必要がある、<xref:System.FormatException>イベントで`s`有効でないし、正常に解析されることはできません。</span><span class="sxs-lookup"><span data-stu-id="36fe0-596">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="36fe0-597">`style` (空白や正または負符号) で使用できるスタイル要素を定義するパラメーター、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="36fe0-597">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="36fe0-598">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="36fe0-598">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="36fe0-599">スタイルの値に応じて、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-599">Depending on the value of style, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="36fe0-600">[ws][$][記号][数字] [.fractional_digits] [e [記号] 桁] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="36fe0-600">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="36fe0-601">または、`style`パラメーターが含まれる<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="36fe0-601">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span></span>  
  
 <span data-ttu-id="36fe0-602">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="36fe0-602">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="36fe0-603">角かっこ ([と]) は任意の項目です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-603">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="36fe0-604">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-604">The following table describes each element.</span></span>  
  
|<span data-ttu-id="36fe0-605">要素</span><span class="sxs-lookup"><span data-stu-id="36fe0-605">Element</span></span>|<span data-ttu-id="36fe0-606">説明</span><span class="sxs-lookup"><span data-stu-id="36fe0-606">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="36fe0-607">*ws*</span><span class="sxs-lookup"><span data-stu-id="36fe0-607">*ws*</span></span>|<span data-ttu-id="36fe0-608">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="36fe0-608">Optional white space.</span></span> <span data-ttu-id="36fe0-609">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、または末尾の`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-609">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="36fe0-610">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-610">A culture-specific currency symbol.</span></span> <span data-ttu-id="36fe0-611">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="36fe0-611">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="36fe0-612">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-612">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="36fe0-613">*sign*</span><span class="sxs-lookup"><span data-stu-id="36fe0-613">*sign*</span></span>|<span data-ttu-id="36fe0-614">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-614">An optional sign.</span></span>|  
|<span data-ttu-id="36fe0-615">*digits*</span><span class="sxs-lookup"><span data-stu-id="36fe0-615">*digits*</span></span>|<span data-ttu-id="36fe0-616">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="36fe0-616">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="36fe0-617">*、*</span><span class="sxs-lookup"><span data-stu-id="36fe0-617">*,*</span></span>|<span data-ttu-id="36fe0-618">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-618">A culture-specific thousands separator.</span></span> <span data-ttu-id="36fe0-619">数千で指定されたカルチャの区切り記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-619">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="36fe0-620">*.*</span><span class="sxs-lookup"><span data-stu-id="36fe0-620">*.*</span></span>|<span data-ttu-id="36fe0-621">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="36fe0-621">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="36fe0-622">指定されたカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-622">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="36fe0-623">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="36fe0-623">*fractional_digits*</span></span>|<span data-ttu-id="36fe0-624">1 つ以上の数字の 0。</span><span class="sxs-lookup"><span data-stu-id="36fe0-624">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="36fe0-625">小数部の桁数を表示できる`s`場合にのみ`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-625">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="36fe0-626">*e*</span><span class="sxs-lookup"><span data-stu-id="36fe0-626">*e*</span></span>|<span data-ttu-id="36fe0-627">"E"または"E"文字は、値は指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-627">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="36fe0-628">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="36fe0-628">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="36fe0-629">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="36fe0-629">*hexdigits*</span></span>|<span data-ttu-id="36fe0-630">0 ~ f、または f の 0 から 16 進数のシーケンス</span><span class="sxs-lookup"><span data-stu-id="36fe0-630">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="36fe0-631">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>フラグ) を常に正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-631">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="36fe0-632">残りのほとんど<xref:System.Globalization.NumberStyles>メンバーがありますが、この入力文字列内に存在する必要はありません要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-632">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="36fe0-633">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-633">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="36fe0-634">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="36fe0-634">Non-composite NumberStyles values</span></span>|<span data-ttu-id="36fe0-635">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="36fe0-635">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="36fe0-636">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="36fe0-636">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="36fe0-637">*.*</span><span class="sxs-lookup"><span data-stu-id="36fe0-637">The *.*</span></span> <span data-ttu-id="36fe0-638">*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-638">and *fractional_digits* elements.</span></span> <span data-ttu-id="36fe0-639">ただし、 *fractional_digits*のみの 1 つ以上の数字が 0 のメソッドを返します。 で構成されている必要があります`false`します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-639">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="36fe0-640">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-640">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="36fe0-641">場合`s`指数表記の数値を表すことの範囲内の整数を表す必要があります、 <xref:System.Int16> 0 以外の小数部がないデータ型。</span><span class="sxs-lookup"><span data-stu-id="36fe0-641">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int16> data type without a non-zero fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="36fe0-642">*Ws*の先頭にある要素*s*します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-642">The *ws* element at the beginning of *s*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="36fe0-643">*Ws*の末尾にある要素*s*します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-643">The *ws* element at the end of *s*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="36fe0-644">符号は、前に配置できます*桁*します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-644">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="36fe0-645">符号が後に表示できる*桁*します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-645">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="36fe0-646">*サインオン*形式の数値を囲むかっこ内の要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-646">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="36fe0-647">*、* 要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-647">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="36fe0-648">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-648">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="36fe0-649">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-649">All elements.</span></span> <span data-ttu-id="36fe0-650">*S*パラメーターは、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="36fe0-650">The *s* parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="36fe0-651">*Ws*先頭または末尾に要素`s`、*サインオン*の先頭に`s`、および*します。*</span><span class="sxs-lookup"><span data-stu-id="36fe0-651">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="36fe0-652">シンボルです。</span><span class="sxs-lookup"><span data-stu-id="36fe0-652">symbol.</span></span> <span data-ttu-id="36fe0-653">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-653">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="36fe0-654">*Ws*、*サインオン*、何千もの区切り記号 (*、*)、および小数点 10 進数 (*.*) 要素。</span><span class="sxs-lookup"><span data-stu-id="36fe0-654">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="36fe0-655">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="36fe0-655">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="36fe0-656">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進数の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="36fe0-656">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="36fe0-657">たとえば、"9AF3"が正常に解析しますが、"0x9AF3"はありません。</span><span class="sxs-lookup"><span data-stu-id="36fe0-657">For example, "9AF3" parses successfully, but "0x9AF3" does not.</span></span> <span data-ttu-id="36fe0-658">他のフラグのみに存在することができる`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-658">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="36fe0-659">(、<xref:System.Globalization.NumberStyles>列挙には複合スタイルは、 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、空白文字の両方のフラグが含まれます)。</span><span class="sxs-lookup"><span data-stu-id="36fe0-659">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="36fe0-660">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.NumberFormatInfo>オブジェクト、<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="36fe0-660">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="36fe0-661"><xref:System.Globalization.NumberFormatInfo>オブジェクトの書式設定に関するカルチャ固有の情報を提供`s`します。</span><span class="sxs-lookup"><span data-stu-id="36fe0-661">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="36fe0-662">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="36fe0-662">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36fe0-663">次の例では、<xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType>数別の文字列値を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="36fe0-663">The following example calls the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int16.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int16.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="36fe0-664">
            <paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-664">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="36fe0-665">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-665">-or-</span>
          </span>
          <span data-ttu-id="36fe0-666">
            <paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36fe0-666">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Int16.Parse" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>