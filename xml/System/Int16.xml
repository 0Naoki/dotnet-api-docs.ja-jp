<Type Name="Int16" FullName="System.Int16">
  <TypeSignature Language="C#" Value="public struct Int16 : IComparable, IComparable&lt;short&gt;, IConvertible, IEquatable&lt;short&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int16 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int16&gt;, class System.IConvertible, class System.IEquatable`1&lt;int16&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int16" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int16&#xA;Implements IComparable, IComparable(Of Short), IConvertible, IEquatable(Of Short), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int16 : IComparable, IComparable&lt;short&gt;, IConvertible, IEquatable&lt;short&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="283d0-101">16 ビット符号付き整数を表します。</span><span class="sxs-lookup"><span data-stu-id="283d0-101">Represents a 16-bit signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-102"><xref:System.Int16>値型は、負の 32768 から正の 32767 までの値を符号付き整数を表します。</span><span class="sxs-lookup"><span data-stu-id="283d0-102">The <xref:System.Int16> value type represents signed integers with values ranging from negative 32768 through positive 32767.</span></span>  
  
 <span data-ttu-id="283d0-103">この型は、この型のインスタンスの値を数値の文字列形式をこの型のインスタンスに変換して、この型のインスタンスを比較する文字列形式に変換するメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="283d0-103">This type provides methods to convert the value of an instance of this type to its string representation, to convert the string representation of a number to an instance of this type, and to compare instances of this type.</span></span>  
  
 <span data-ttu-id="283d0-104">メンバーを呼び出すこともできます、<xref:System.Math>をさまざまな数値の絶対値の取得、商と整数除算の剰余を計算する、2 つの整数の最大値または最小値を決定する、数値の符号を取得および数値の丸め処理を行うなど、数値の操作を実行するクラス。</span><span class="sxs-lookup"><span data-stu-id="283d0-104">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
 <span data-ttu-id="283d0-105">書式指定コードが値型の文字列形式を制御する方法については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="283d0-105">For information about how format specification codes control the string representation of value types, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="283d0-106">この種類のすべてのメンバーでは、スレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="283d0-106">All members of this type are thread safe.</span></span> <span data-ttu-id="283d0-107">インスタンスの状態を変更する表示されるメンバーは、新しい値で初期化された新しいインスタンスを実際に返します。</span><span class="sxs-lookup"><span data-stu-id="283d0-107">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="283d0-108">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによってです。</span><span class="sxs-lookup"><span data-stu-id="283d0-108">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.UInt16" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="283d0-109">このインスタンスと指定したオブジェクトまたは別の <see cref="T:System.Int16" /> インスタンスを比較し、このインスタンスの値が指定したオブジェクトの値またはもう一方の <see cref="T:System.Int16" /> インスタンスの値よりも小さいか、同じか、それとも大きいかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="283d0-109">Compares this instance to a specified object or another <see cref="T:System.Int16" /> instance and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object or the other <see cref="T:System.Int16" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.CompareTo(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(short value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="283d0-110">比較対象の整数。</span><span class="sxs-lookup"><span data-stu-id="283d0-110">An integer to compare.</span></span></param>
        <summary><span data-ttu-id="283d0-111">このインスタンスと指定した 16 ビット符号付き整数を比較し、このインスタンスの値が指定した 16 ビット符号付き整数の値よりも小さいか、同じか、それとも大きいかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="283d0-111">Compares this instance to a specified 16-bit signed integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="283d0-112">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="283d0-112">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="283d0-113"><list type="table"><listheader><term> 戻り値</span><span class="sxs-lookup"><span data-stu-id="283d0-113"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="283d0-114"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="283d0-114"></term><description> Description</span></span>  
  
 <span data-ttu-id="283d0-115"></description></listheader><item><term> 0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="283d0-115"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="283d0-116"></term><description> このインスタンスは、<paramref name="value" /> よりも小さいです。</span><span class="sxs-lookup"><span data-stu-id="283d0-116"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="283d0-117"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="283d0-117"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="283d0-118"></term><description> このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="283d0-118"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="283d0-119"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="283d0-119"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="283d0-120"></term><description> このインスタンスは <paramref name="value" /> よりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="283d0-120"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-121">このメソッドを実装する、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスし、実行よりもわずかに向上、<xref:System.Int16.CompareTo%2A?displayProperty=nameWithType>メソッドに変換があるないため、`value`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="283d0-121">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int16.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="283d0-122">プログラミング言語に応じてコードに考えられる場合があります、<xref:System.Int16.CompareTo%2A>メソッドのパラメーターの型のビット数が少ないがここではインスタンスの型よりもします。</span><span class="sxs-lookup"><span data-stu-id="283d0-122">Depending on your programming language, it might be possible to code a <xref:System.Int16.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="283d0-123">これには一部のプログラミング言語は、ビット数のインスタンスと型としてパラメーターを表す暗黙の拡大変換を実行するため。</span><span class="sxs-lookup"><span data-stu-id="283d0-123">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="283d0-124">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>です。</span><span class="sxs-lookup"><span data-stu-id="283d0-124">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="283d0-125">Microsoft c# コンパイラは、パラメーターの値を表す命令を生成、<xref:System.Int32>オブジェクトを生成、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>の値を比較するメソッド、<xref:System.Int32>インスタンスおよび<xref:System.Int32>パラメーター形式です。</span><span class="sxs-lookup"><span data-stu-id="283d0-125">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="283d0-126">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを決定する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="283d0-126">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="283d0-127">次のコード例に示しますジェネリックと非ジェネリック バージョンの<xref:System.Int16.CompareTo%2A>いくつかの値と参照型のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-127">The following code example demonstrates generic and nongeneric versions of the <xref:System.Int16.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
        <altmember cref="M:System.Int16.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="283d0-128">比較対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="283d0-128">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="283d0-129">このインスタンスと指定したオブジェクトを比較し、このインスタンスの値がオブジェクトの値よりも小さいか、同じか、それとも大きいかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="283d0-129">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the object.</span></span></summary>
        <returns><span data-ttu-id="283d0-130">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="283d0-130">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="283d0-131"><list type="table"><listheader><term> 戻り値</span><span class="sxs-lookup"><span data-stu-id="283d0-131"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="283d0-132"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="283d0-132"></term><description> Description</span></span>  
  
 <span data-ttu-id="283d0-133"></description></listheader><item><term> 0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="283d0-133"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="283d0-134"></term><description> このインスタンスは、<paramref name="value" /> よりも小さいです。</span><span class="sxs-lookup"><span data-stu-id="283d0-134"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="283d0-135"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="283d0-135"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="283d0-136"></term><description> このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="283d0-136"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="283d0-137"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="283d0-137"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="283d0-138"></term><description> このインスタンスは <paramref name="value" /> よりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="283d0-138"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="283d0-139">- または -</span><span class="sxs-lookup"><span data-stu-id="283d0-139">-or-</span></span>  
  
 <span data-ttu-id="283d0-140"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="283d0-140"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-141"><xref:System.Int16>、その値に関係なくと見なされます、null 参照を超えています。</span><span class="sxs-lookup"><span data-stu-id="283d0-141">An <xref:System.Int16>, regardless of its value, is considered greater than a null reference.</span></span>  
  
 <span data-ttu-id="283d0-142">`value`パラメーターでなければなりません`null`またはのインスタンス<xref:System.Int16>です。 それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="283d0-142">The `value` parameter must be `null` or an instance of <xref:System.Int16>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="283d0-143"><paramref name="value" /> が <see cref="T:System.Int16" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="283d0-143"><paramref name="value" /> is not an <see cref="T:System.Int16" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="283d0-144">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.Int16" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="283d0-144">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int16" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (short obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int16 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Equals(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(short obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="283d0-145">このインスタンスと比較する <see cref="T:System.Int16" /> 値。</span><span class="sxs-lookup"><span data-stu-id="283d0-145">An <see cref="T:System.Int16" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="283d0-146">このインスタンスが指定した <see cref="T:System.Int16" /> 値に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="283d0-146">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int16" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="283d0-147"><paramref name="obj" /> の値がこのインスタンスと同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="283d0-147"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-148">このメソッドを実装する、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりもわずかに向上<xref:System.Int16.Equals%2A>変換があるないため、`obj`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="283d0-148">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int16.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="283d0-149">コンパイラのオーバー ロードの解決は、2 つの動作の見かけ上の相違点についてアカウント可能性があります<see cref="M:System.Int16.Equals(System.Int16)" />メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="283d0-149">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int16.Equals(System.Int16)" /> method overloads.</span></span> <span data-ttu-id="283d0-150">場合の間の暗黙的な変換、<paramref name="obj" />引数および<see cref="T:System.Int16" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラが暗黙的な変換と呼び出しを実行、<see cref="M:System.Int16.Equals(System.Int16)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-150">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int16.Equals(System.Int16)" /> method.</span></span> <span data-ttu-id="283d0-151">それ以外の場合を呼び出すことが、<see cref="M:System.Int16.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数ではありません、<see cref="T:System.Int16" />値。</span><span class="sxs-lookup"><span data-stu-id="283d0-151">Otherwise, they call the <see cref="M:System.Int16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int16" /> value.</span></span> <span data-ttu-id="283d0-152">次の例は、次の 2 つのメソッド オーバー ロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="283d0-152">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="283d0-153">場合、<see cref="T:System.Byte" />と<see cref="T:System.SByte" />値は、最初の比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Int16.Equals(System.Int16)" />メソッドが 2 つ目の比較戻る<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Int16.Equals(System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-153">In the case of the <see cref="T:System.Byte" /> and <see cref="T:System.SByte" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int16.Equals(System.Int16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int16.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</para>
        </block>
        <altmember cref="M:System.Int16.Equals(System.Object)" />
        <altmember cref="Overload:System.Int16.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="283d0-154">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-154">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="283d0-155">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="283d0-155">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="283d0-156"><paramref name="obj" /> が <see cref="T:System.Int16" /> のインスタンスで、このインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="283d0-156"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Int16" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="283d0-157">次のコード例は、の使用を示しています。`Equals`のコンテキストで`Int16`、2 つの短い値を比較すると、返す`true`を表している場合、同じ番号または`false`が存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="283d0-157">The following code example illustrates the use of `Equals` in the context of `Int16`, comparing two short values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int16_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int16_Equals/CPP/int16_equals.cpp#1)]
 [!code-csharp[Int16_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int16_Equals/CS/int16_equals.cs#1)]
 [!code-vb[Int16_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int16_Equals/VB/int16_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="283d0-158">コンパイラのオーバー ロードの解決は、2 つの動作の見かけ上の相違点についてアカウント可能性があります<see cref="M:System.Int16.Equals(System.Int16)" />メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="283d0-158">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int16.Equals(System.Int16)" /> method overloads.</span></span> <span data-ttu-id="283d0-159">場合の間の暗黙的な変換、<paramref name="obj" />引数および<see cref="T:System.Int16" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラが暗黙的な変換と呼び出しを実行、<see cref="M:System.Int16.Equals(System.Int16)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-159">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int16.Equals(System.Int16)" /> method.</span></span> <span data-ttu-id="283d0-160">それ以外の場合を呼び出すことが、<see cref="M:System.Int16.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数ではありません、<see cref="T:System.Int16" />値。</span><span class="sxs-lookup"><span data-stu-id="283d0-160">Otherwise, they call the <see cref="M:System.Int16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int16" /> value.</span></span> <span data-ttu-id="283d0-161">次の例は、次の 2 つのメソッド オーバー ロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="283d0-161">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="283d0-162">場合、<see cref="T:System.Byte" />と<see cref="T:System.SByte" />値は、最初の比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Int16.Equals(System.Int16)" />メソッドが 2 つ目の比較戻る<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Int16.Equals(System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-162">In the case of the <see cref="T:System.Byte" /> and <see cref="T:System.SByte" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int16.Equals(System.Int16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int16.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="283d0-163">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="283d0-163">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="283d0-164">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="283d0-164">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="283d0-165"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Int16" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="283d0-165">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-166">列挙型定数 <see cref="F:System.TypeCode.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="283d0-166">The enumerated constant, <see cref="F:System.TypeCode.Int16" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const short MaxValue = 32767;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 MaxValue = int16(32767)" />
      <MemberSignature Language="DocId" Value="F:System.Int16.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Short  = 32767" />
      <MemberSignature Language="C++ CLI" Value="public: short MaxValue = 32767;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>32767</MemberValue>
      <Docs>
        <summary><span data-ttu-id="283d0-167"><see cref="T:System.Int16" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="283d0-167">Represents the largest possible value of an <see cref="T:System.Int16" />.</span></span> <span data-ttu-id="283d0-168">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="283d0-168">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-169">この定数の値は 32767 です。つまり、16 進 0x7FFF します。</span><span class="sxs-lookup"><span data-stu-id="283d0-169">The value of this constant is 32767; that is, hexadecimal 0x7FFF.</span></span>  
  
 <span data-ttu-id="283d0-170"><xref:System.Int16.MaxValue>プロパティは、通常を防ぐために使用、<xref:System.OverflowException>大きい範囲の上限を数値型から変換するときに (など、<xref:System.UInt16>または<xref:System.Int32>) に、<xref:System.Int16>です。</span><span class="sxs-lookup"><span data-stu-id="283d0-170">The <xref:System.Int16.MaxValue> property is typically used to prevent an <xref:System.OverflowException> when converting from a numeric type with a greater upper range (such as a <xref:System.UInt16> or a <xref:System.Int32>) to an <xref:System.Int16>.</span></span> <span data-ttu-id="283d0-171">この例では、この使用法を示します。</span><span class="sxs-lookup"><span data-stu-id="283d0-171">The example illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="283d0-172">次の例では、<xref:System.Int16.MaxValue>ようにするプロパティ、<xref:System.OverflowException>に変換する際、<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="283d0-172">The following example uses the <xref:System.Int16.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Int16.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.MaxValue/cpp/minvalue.cpp#1)]
 [!code-csharp[System.Int16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.Int16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int16.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const short MinValue = -32768;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 MinValue = int16(-32768)" />
      <MemberSignature Language="DocId" Value="F:System.Int16.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Short  = -32768" />
      <MemberSignature Language="C++ CLI" Value="public: short MinValue = -32768;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>-32768</MemberValue>
      <Docs>
        <summary><span data-ttu-id="283d0-173"><see cref="T:System.Int16" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="283d0-173">Represents the smallest possible value of <see cref="T:System.Int16" />.</span></span> <span data-ttu-id="283d0-174">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="283d0-174">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-175">この定数の値は、-32768 からです。つまり、16 進 0x8000 します。</span><span class="sxs-lookup"><span data-stu-id="283d0-175">The value of this constant is -32768; that is, hexadecimal 0x8000.</span></span>  
  
 <span data-ttu-id="283d0-176"><xref:System.Int16.MinValue>プロパティは、通常を防ぐために使用する<xref:System.OverflowException>より低い範囲の数値型から変換するときに (など、<xref:System.Int32>または<xref:System.Int64>) に、<xref:System.Int16>です。</span><span class="sxs-lookup"><span data-stu-id="283d0-176">The <xref:System.Int16.MinValue> property is typically used to prevent an <xref:System.OverflowException> when converting from a numeric type with a greater lower range (such as an <xref:System.Int32> or an <xref:System.Int64>) to an <xref:System.Int16>.</span></span> <span data-ttu-id="283d0-177">この例では、この使用法を示します。</span><span class="sxs-lookup"><span data-stu-id="283d0-177">The example illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="283d0-178">次の例では、<xref:System.Int16.MinValue>ようにするプロパティ、<xref:System.OverflowException>に変換する際、<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="283d0-178">The following example uses the <xref:System.Int16.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Int16.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.MaxValue/cpp/minvalue.cpp#1)]
 [!code-csharp[System.Int16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.Int16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int16.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="283d0-179">数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="283d0-179">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.Int16.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="283d0-180">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="283d0-180">A string containing a number to convert.</span></span></param>
        <summary><span data-ttu-id="283d0-181">数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="283d0-181">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="283d0-182"><paramref name="s" /> に格納されている数値と等しい 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="283d0-182">A 16-bit signed integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-183">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="283d0-183">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="283d0-184">[ws][サインイン] 桁 [ws]</span><span class="sxs-lookup"><span data-stu-id="283d0-184">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="283d0-185">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="283d0-185">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="283d0-186">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="283d0-186">The following table describes each element.</span></span>  
  
|<span data-ttu-id="283d0-187">要素</span><span class="sxs-lookup"><span data-stu-id="283d0-187">Element</span></span>|<span data-ttu-id="283d0-188">説明</span><span class="sxs-lookup"><span data-stu-id="283d0-188">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="283d0-189">*ws*</span><span class="sxs-lookup"><span data-stu-id="283d0-189">*ws*</span></span>|<span data-ttu-id="283d0-190">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="283d0-190">Optional white space.</span></span>|  
|<span data-ttu-id="283d0-191">*sign*</span><span class="sxs-lookup"><span data-stu-id="283d0-191">*sign*</span></span>|<span data-ttu-id="283d0-192">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="283d0-192">An optional sign.</span></span>|  
|<span data-ttu-id="283d0-193">*digits*</span><span class="sxs-lookup"><span data-stu-id="283d0-193">*digits*</span></span>|<span data-ttu-id="283d0-194">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="283d0-194">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="283d0-195">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="283d0-195">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="283d0-196">整数値の 10 進数字以外には、先頭と末尾のスペースが先頭の符号と共にのみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-196">In addition to the integer value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="283d0-197">使用できるスタイル要素を明示的に定義する`s`、いずれかを使用して、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>または<xref:System.Int16.Parse%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-197">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int16.Parse%2A> method.</span></span>  
  
 <span data-ttu-id="283d0-198">`s`で書式設定情報を使用してパラメーターを解析、<xref:System.Globalization.NumberFormatInfo>現在のシステムのカルチャに初期化されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-198">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="283d0-199">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="283d0-199">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="283d0-200">いくつか他のカルチャの書式情報を使用して文字列を解析するを使用して、<xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>または<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-200">To parse a string using the formatting information of some other culture, use the <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="283d0-201">次の例では、16 ビット符号付き整数値を使用して、文字列値に変換する方法、<xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-201">The following example demonstrates how to convert a string value into a 16-bit signed integer value using the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="283d0-202">結果の整数値は、コンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-202">The resulting integer value is then displayed to the console.</span></span>  
  
 [!code-cpp[System.Int16.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse1.cpp#1)]
 [!code-csharp[System.Int16.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#1)]
 [!code-vb[System.Int16.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="283d0-203"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="283d0-203"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="283d0-204"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="283d0-204"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="283d0-205"><paramref name="s" /> が <see cref="F:System.Int16.MinValue" /> 未満の数値か、<see cref="F:System.Int16.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="283d0-205"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int16.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="283d0-206">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="283d0-206">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="283d0-207"><c>s</c> で使用できるスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="283d0-207">A bitwise combination of the enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="283d0-208">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="283d0-208">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="283d0-209">指定したスタイルの数値の文字列形式を、それと等価の 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="283d0-209">Converts the string representation of a number in a specified style to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="283d0-210"><paramref name="s" /> で指定した数値と等しい 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="283d0-210">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-211">`style`パラメーター スタイル要素を定義します (空白やなどの記号) では許可されて、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="283d0-211">The `style` parameter defines the style elements (such as white space or a sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="283d0-212">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="283d0-212">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="283d0-213">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="283d0-213">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="283d0-214">[ws][$][記号][数字] 桁 [.fractional_digits] [e [サインイン] 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="283d0-214">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="283d0-215">または、`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="283d0-215">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="283d0-216">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="283d0-216">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="283d0-217">角かっこ ([および]) は省略可能の項目です。</span><span class="sxs-lookup"><span data-stu-id="283d0-217">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="283d0-218">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="283d0-218">The following table describes each element.</span></span>  
  
|<span data-ttu-id="283d0-219">要素</span><span class="sxs-lookup"><span data-stu-id="283d0-219">Element</span></span>|<span data-ttu-id="283d0-220">説明</span><span class="sxs-lookup"><span data-stu-id="283d0-220">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="283d0-221">*ws*</span><span class="sxs-lookup"><span data-stu-id="283d0-221">*ws*</span></span>|<span data-ttu-id="283d0-222">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="283d0-222">Optional white space.</span></span> <span data-ttu-id="283d0-223">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、またはの末尾`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-223">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="283d0-224">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="283d0-224">A culture-specific currency symbol.</span></span> <span data-ttu-id="283d0-225">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>現在のカルチャのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="283d0-225">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> property of the current culture.</span></span> <span data-ttu-id="283d0-226">現在のカルチャの通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-226">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="283d0-227">*sign*</span><span class="sxs-lookup"><span data-stu-id="283d0-227">*sign*</span></span>|<span data-ttu-id="283d0-228">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="283d0-228">An optional sign.</span></span> <span data-ttu-id="283d0-229">先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグ、およびそのがの末尾に置くことができます`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-229">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="283d0-230">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-230">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="283d0-231">*digits*</span><span class="sxs-lookup"><span data-stu-id="283d0-231">*digits*</span></span>|<span data-ttu-id="283d0-232">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="283d0-232">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="283d0-233">*、*</span><span class="sxs-lookup"><span data-stu-id="283d0-233">*,*</span></span>|<span data-ttu-id="283d0-234">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="283d0-234">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="283d0-235">現在のカルチャの数千に区切り記号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-235">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="283d0-236">*.*</span><span class="sxs-lookup"><span data-stu-id="283d0-236">*.*</span></span>|<span data-ttu-id="283d0-237">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="283d0-237">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="283d0-238">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-238">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="283d0-239">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="283d0-239">*fractional_digits*</span></span>|<span data-ttu-id="283d0-240">0 の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="283d0-240">A sequence of the 0 digit.</span></span> <span data-ttu-id="283d0-241">小数部の桁が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-241">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="283d0-242">0 以外の任意の数字が表示された場合*fractional_digits*がスローされます、<xref:System.OverflowException>です。</span><span class="sxs-lookup"><span data-stu-id="283d0-242">If any digit other than 0 appears in *fractional_digits*, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="283d0-243">*e*</span><span class="sxs-lookup"><span data-stu-id="283d0-243">*e*</span></span>|<span data-ttu-id="283d0-244">'E' または 'E' 文字であることを示す`s`指数表記で表すことができます。</span><span class="sxs-lookup"><span data-stu-id="283d0-244">The 'e' or 'E' character, which indicates that `s` can be represented in exponential notation.</span></span> <span data-ttu-id="283d0-245">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-245">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="283d0-246">ただし、`s`パラメーターの範囲の数を表す必要があります、<xref:System.Int16>データ型で、小数部が 0 ではないことはできません。</span><span class="sxs-lookup"><span data-stu-id="283d0-246">However, the `s` parameter must represent a number in the range of the <xref:System.Int16> data type and cannot have a non-zero fractional component.</span></span>|  
|<span data-ttu-id="283d0-247">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="283d0-247">*hexdigits*</span></span>|<span data-ttu-id="283d0-248">一連の 0 f からまたは f 0 から 16 進数の数字</span><span class="sxs-lookup"><span data-stu-id="283d0-248">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="283d0-249">文字列を*桁*のみ (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="283d0-249">A string with *digits* only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="283d0-250">ほとんど残りの<xref:System.Globalization.NumberStyles>メンバーを制御する可能性がありますが、この入力文字列内に存在する必要はない要素です。</span><span class="sxs-lookup"><span data-stu-id="283d0-250">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="283d0-251">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="283d0-251">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="283d0-252">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="283d0-252">Non-composite NumberStyles values</span></span>|<span data-ttu-id="283d0-253">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="283d0-253">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="283d0-254">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="283d0-254">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="283d0-255">*.*</span><span class="sxs-lookup"><span data-stu-id="283d0-255">The *.*</span></span> <span data-ttu-id="283d0-256">および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="283d0-256">and *fractional_digits* elements.</span></span> <span data-ttu-id="283d0-257">ただし、 *fractional_digits*のみ 1 つ以上の数字が 0 ので構成されている必要がありますまたは<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="283d0-257">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="283d0-258">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-258">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="283d0-259">*Ws*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="283d0-259">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="283d0-260">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="283d0-260">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="283d0-261">前に、記号を表示できる*桁*です。</span><span class="sxs-lookup"><span data-stu-id="283d0-261">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="283d0-262">後に記号が表示される可能性が*桁*です。</span><span class="sxs-lookup"><span data-stu-id="283d0-262">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="283d0-263">*記号*数値の値を囲むかっこの形式での要素。</span><span class="sxs-lookup"><span data-stu-id="283d0-263">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="283d0-264">*、* 要素。</span><span class="sxs-lookup"><span data-stu-id="283d0-264">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="283d0-265">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="283d0-265">The *$* element.</span></span>|  
  
 <span data-ttu-id="283d0-266">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進数値の文字列形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="283d0-266">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be the string representation of a hexadecimal value without a prefix.</span></span> <span data-ttu-id="283d0-267">たとえば、"9AF3"を正常に解析していて、"0x9AF3"にはないです。</span><span class="sxs-lookup"><span data-stu-id="283d0-267">For example, "9AF3" parses successfully, but "0x9AF3" does not.</span></span> <span data-ttu-id="283d0-268">その他のフラグのみで使用可能な`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="283d0-268">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="283d0-269">(、<xref:System.Globalization.NumberStyles>列挙体には、複合数値スタイル<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、両方の空白文字のフラグが含まれている)。</span><span class="sxs-lookup"><span data-stu-id="283d0-269">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="283d0-270">`s`で書式設定情報を使用してパラメーターを解析、<xref:System.Globalization.NumberFormatInfo>現在のシステムのカルチャに初期化されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-270">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="283d0-271">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="283d0-271">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="283d0-272">解析する`s`特定のカルチャの書式情報を使用して、呼び出し、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-272">To parse `s` using the formatting information of a specific culture, call the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="283d0-273">次の例では、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>の文字列形式を解析します<xref:System.Int16>EN-US カルチャを使用して値をします。</span><span class="sxs-lookup"><span data-stu-id="283d0-273">The following example uses the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of <xref:System.Int16> values using the en-US culture.</span></span>  
  
 [!code-cpp[System.Int16.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse2.cpp#2)]
 [!code-csharp[System.Int16.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int16.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="283d0-274"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="283d0-274"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="283d0-275"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="283d0-275"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="283d0-276">- または -</span><span class="sxs-lookup"><span data-stu-id="283d0-276">-or-</span></span>  
  
 <span data-ttu-id="283d0-277"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="283d0-277"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="283d0-278"><paramref name="s" /> の書式が、<paramref name="style" /> に準拠した書式ではありません。</span><span class="sxs-lookup"><span data-stu-id="283d0-278"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="283d0-279"><paramref name="s" /> が <see cref="F:System.Int16.MinValue" /> 未満の数値か、<see cref="F:System.Int16.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="283d0-279"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="283d0-280">- または -</span><span class="sxs-lookup"><span data-stu-id="283d0-280">-or-</span></span>  
  
 <span data-ttu-id="283d0-281"><paramref name="s" /> が 0 以外の小数部の桁を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="283d0-281"><paramref name="s" /> includes non-zero fractional digits.</span></span></exception>
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
        <altmember cref="Overload:System.Int16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="283d0-282">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="283d0-282">A string containing a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="283d0-283"><c>s</c> に関するカルチャに固有の書式設定情報を提供する <see cref="T:System.IFormatProvider" />。</span><span class="sxs-lookup"><span data-stu-id="283d0-283">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="283d0-284">指定したカルチャに固有の書式による数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="283d0-284">Converts the string representation of a number in a specified culture-specific format to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="283d0-285"><paramref name="s" /> で指定した数値と等しい 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="283d0-285">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-286">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="283d0-286">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="283d0-287">[ws][サインイン] 桁 [ws]</span><span class="sxs-lookup"><span data-stu-id="283d0-287">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="283d0-288">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="283d0-288">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="283d0-289">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="283d0-289">The following table describes each element.</span></span>  
  
|<span data-ttu-id="283d0-290">要素</span><span class="sxs-lookup"><span data-stu-id="283d0-290">Element</span></span>|<span data-ttu-id="283d0-291">説明</span><span class="sxs-lookup"><span data-stu-id="283d0-291">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="283d0-292">ws</span><span class="sxs-lookup"><span data-stu-id="283d0-292">ws</span></span>|<span data-ttu-id="283d0-293">省略可能な空白です。</span><span class="sxs-lookup"><span data-stu-id="283d0-293">An optional white space.</span></span>|  
|<span data-ttu-id="283d0-294">sign</span><span class="sxs-lookup"><span data-stu-id="283d0-294">sign</span></span>|<span data-ttu-id="283d0-295">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="283d0-295">An optional sign.</span></span>|  
|<span data-ttu-id="283d0-296">数字</span><span class="sxs-lookup"><span data-stu-id="283d0-296">digits</span></span>|<span data-ttu-id="283d0-297">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="283d0-297">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="283d0-298">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="283d0-298">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="283d0-299">10 進数字だけでなくは、先頭と末尾のスペースが先頭の符号と共にのみを許可します。`s`です。</span><span class="sxs-lookup"><span data-stu-id="283d0-299">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed in `s`.</span></span> <span data-ttu-id="283d0-300">使用できるカルチャに固有の書式情報とスタイル要素を明示的に定義する`s`を使用して、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-300">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="283d0-301">`provider`パラメーターは、<xref:System.IFormatProvider>実装を取得する、<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-301">The `provider` parameter is an <xref:System.IFormatProvider> implementation that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="283d0-302"><xref:System.Globalization.NumberFormatInfo>の書式に関するカルチャ固有の情報を提供`s`です。</span><span class="sxs-lookup"><span data-stu-id="283d0-302">The <xref:System.Globalization.NumberFormatInfo> provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="283d0-303">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-303">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="283d0-304">次の例の文字列表現を解析して<xref:System.Int16>の値を使った、<xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-304">The following example parses string representations of <xref:System.Int16> values with the <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Int16.Parse#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse4.cpp#4)]
 [!code-csharp[System.Int16.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#4)]
 [!code-vb[System.Int16.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="283d0-305"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="283d0-305"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="283d0-306"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="283d0-306"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="283d0-307"><paramref name="s" /> が <see cref="F:System.Int16.MinValue" /> 未満の数値か、<see cref="F:System.Int16.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="283d0-307"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int16.ToString" />
        <altmember cref="Overload:System.Int16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Short" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="283d0-308">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="283d0-308">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="283d0-309"><c>s</c> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="283d0-309">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="283d0-310">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="283d0-310">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="283d0-311"><c>s</c> に関するカルチャに固有の書式設定情報を提供する <see cref="T:System.IFormatProvider" />。</span><span class="sxs-lookup"><span data-stu-id="283d0-311">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="283d0-312">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="283d0-312">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="283d0-313"><paramref name="s" /> で指定した数値と等しい 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="283d0-313">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-314">`style`パラメーター スタイル要素を定義します (空白や正符号) では許可されて、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="283d0-314">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="283d0-315">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="283d0-315">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="283d0-316">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="283d0-316">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="283d0-317">[ws][$][記号][数字] 桁 [.fractional_digits] [e [サインイン] 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="283d0-317">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="283d0-318">または、`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="283d0-318">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="283d0-319">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="283d0-319">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="283d0-320">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="283d0-320">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="283d0-321">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="283d0-321">The following table describes each element.</span></span>  
  
|<span data-ttu-id="283d0-322">要素</span><span class="sxs-lookup"><span data-stu-id="283d0-322">Element</span></span>|<span data-ttu-id="283d0-323">説明</span><span class="sxs-lookup"><span data-stu-id="283d0-323">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="283d0-324">*ws*</span><span class="sxs-lookup"><span data-stu-id="283d0-324">*ws*</span></span>|<span data-ttu-id="283d0-325">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="283d0-325">Optional white space.</span></span> <span data-ttu-id="283d0-326">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、またはの末尾`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-326">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="283d0-327">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="283d0-327">A culture-specific currency symbol.</span></span> <span data-ttu-id="283d0-328">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>現在のカルチャのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="283d0-328">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> property of the current culture.</span></span> <span data-ttu-id="283d0-329">現在のカルチャの通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-329">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="283d0-330">*sign*</span><span class="sxs-lookup"><span data-stu-id="283d0-330">*sign*</span></span>|<span data-ttu-id="283d0-331">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="283d0-331">An optional sign.</span></span> <span data-ttu-id="283d0-332">先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグ、およびそのがの末尾に置くことができます`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-332">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="283d0-333">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-333">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="283d0-334">*digits*</span><span class="sxs-lookup"><span data-stu-id="283d0-334">*digits*</span></span>|<span data-ttu-id="283d0-335">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="283d0-335">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="283d0-336">*、*</span><span class="sxs-lookup"><span data-stu-id="283d0-336">*,*</span></span>|<span data-ttu-id="283d0-337">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="283d0-337">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="283d0-338">現在のカルチャの数千に区切り記号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-338">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="283d0-339">*.*</span><span class="sxs-lookup"><span data-stu-id="283d0-339">*.*</span></span>|<span data-ttu-id="283d0-340">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="283d0-340">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="283d0-341">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-341">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="283d0-342">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="283d0-342">*fractional_digits*</span></span>|<span data-ttu-id="283d0-343">0 の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="283d0-343">A sequence of the 0 digit.</span></span> <span data-ttu-id="283d0-344">小数部の桁が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-344">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="283d0-345">0 以外の任意の数字が表示された場合*fractional_digits*がスローされます、<xref:System.OverflowException>です。</span><span class="sxs-lookup"><span data-stu-id="283d0-345">If any digit other than 0 appears in *fractional_digits*, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="283d0-346">*e*</span><span class="sxs-lookup"><span data-stu-id="283d0-346">*e*</span></span>|<span data-ttu-id="283d0-347">'E' または 'E' 文字であることを示す`s`指数表記で表すことができます。</span><span class="sxs-lookup"><span data-stu-id="283d0-347">The 'e' or 'E' character, which indicates that `s` can be represented in exponential notation.</span></span> <span data-ttu-id="283d0-348">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-348">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="283d0-349">ただし、`s`パラメーターの範囲の数を表す必要があります、<xref:System.Int16>データ型で、小数部が 0 ではないことはできません。</span><span class="sxs-lookup"><span data-stu-id="283d0-349">However, the `s` parameter must represent a number in the range of the <xref:System.Int16> data type and cannot have a non-zero fractional component.</span></span>|  
|<span data-ttu-id="283d0-350">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="283d0-350">*hexdigits*</span></span>|<span data-ttu-id="283d0-351">一連の 0 f からまたは f 0 から 16 進数の数字</span><span class="sxs-lookup"><span data-stu-id="283d0-351">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="283d0-352">文字列を*桁*のみ (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="283d0-352">A string with *digits* only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="283d0-353">ほとんど残りの<xref:System.Globalization.NumberStyles>メンバーを制御する可能性がありますが、この入力文字列内に存在する必要はない要素です。</span><span class="sxs-lookup"><span data-stu-id="283d0-353">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="283d0-354">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="283d0-354">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="283d0-355">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="283d0-355">Non-composite NumberStyles values</span></span>|<span data-ttu-id="283d0-356">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="283d0-356">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="283d0-357">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="283d0-357">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="283d0-358">*.*</span><span class="sxs-lookup"><span data-stu-id="283d0-358">The *.*</span></span> <span data-ttu-id="283d0-359">および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="283d0-359">and *fractional_digits* elements.</span></span> <span data-ttu-id="283d0-360">ただし、 *fractional_digits*のみ 1 つ以上の数字が 0 ので構成されている必要がありますまたは<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="283d0-360">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="283d0-361">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-361">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="283d0-362">*Ws*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="283d0-362">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="283d0-363">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="283d0-363">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="283d0-364">前に、記号を表示できる*桁*です。</span><span class="sxs-lookup"><span data-stu-id="283d0-364">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="283d0-365">後に記号が表示される可能性が*桁*です。</span><span class="sxs-lookup"><span data-stu-id="283d0-365">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="283d0-366">*記号*数値の値を囲むかっこの形式での要素。</span><span class="sxs-lookup"><span data-stu-id="283d0-366">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="283d0-367">*、* 要素。</span><span class="sxs-lookup"><span data-stu-id="283d0-367">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="283d0-368">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="283d0-368">The *$* element.</span></span>|  
  
 <span data-ttu-id="283d0-369">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進数値の文字列形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="283d0-369">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be the string representation of a hexadecimal value without a prefix.</span></span> <span data-ttu-id="283d0-370">たとえば、"9AF3"を正常に解析していて、"0x9AF3"にはない.</span><span class="sxs-lookup"><span data-stu-id="283d0-370">For example, "9AF3" parses successfully, but "0x9AF3" does not..</span></span> <span data-ttu-id="283d0-371">その他のフラグのみで使用可能な`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="283d0-371">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="283d0-372">(、<xref:System.Globalization.NumberStyles>列挙体には、複合数値スタイル<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、両方の空白文字のフラグが含まれている)。</span><span class="sxs-lookup"><span data-stu-id="283d0-372">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="283d0-373">`provider`パラメーターは、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A>メソッドは、取得、<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-373">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="283d0-374"><xref:System.Globalization.NumberFormatInfo>オブジェクトの書式に関するカルチャ固有の情報を提供`s`です。</span><span class="sxs-lookup"><span data-stu-id="283d0-374">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="283d0-375">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-375">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="283d0-376">次の例は、さまざまな`style`と`provider`パラメーターの文字列形式を解析する<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="283d0-376">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int16> values.</span></span>  
  
 [!code-cpp[System.Int16.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse3.cpp#3)]
 [!code-csharp[System.Int16.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#3)]
 [!code-vb[System.Int16.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="283d0-377"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="283d0-377"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="283d0-378"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="283d0-378"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="283d0-379">- または -</span><span class="sxs-lookup"><span data-stu-id="283d0-379">-or-</span></span>  
  
 <span data-ttu-id="283d0-380"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="283d0-380"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="283d0-381"><paramref name="s" /> の書式が、<paramref name="style" /> に準拠した書式ではありません。</span><span class="sxs-lookup"><span data-stu-id="283d0-381"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="283d0-382"><paramref name="s" /> が <see cref="F:System.Int16.MinValue" /> 未満の数値か、<see cref="F:System.Int16.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="283d0-382"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="283d0-383">- または -</span><span class="sxs-lookup"><span data-stu-id="283d0-383">-or-</span></span>  
  
 <span data-ttu-id="283d0-384"><paramref name="s" /> が 0 以外の小数部の桁を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="283d0-384"><paramref name="s" /> includes non-zero fractional digits.</span></span></exception>
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-385">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-385">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-386">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-386">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="283d0-387">現在のインスタンスの値がゼロでない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="283d0-387"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-388">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-388">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-389">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-389">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="283d0-390">推奨される代替手段が呼び出されて、<xref:System.Convert.ToBoolean%28System.Int16%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-390">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-391">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-391">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-392">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-392">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-393"><see cref="T:System.Byte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="283d0-393">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-394">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-394">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-395">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-395">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="283d0-396">推奨される代替手段が呼び出されて、<xref:System.Convert.ToByte%28System.Int16%29?displayProperty=nameWithType>メソッド</span><span class="sxs-lookup"><span data-stu-id="283d0-396">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int16%29?displayProperty=nameWithType> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-397">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-397">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-398">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-398">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-399"><see cref="T:System.Char" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="283d0-399">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-400">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-400">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-401">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-401">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="283d0-402">推奨される代替手段が呼び出されて、<xref:System.Convert.ToChar%28System.Int16%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-402">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-403">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-403">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-404">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="283d0-404">This conversion is not supported.</span></span> <span data-ttu-id="283d0-405">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="283d0-405">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-406">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="283d0-406">This conversion is not supported.</span></span> <span data-ttu-id="283d0-407">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="283d0-407">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="283d0-408">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="283d0-408">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-409">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-409">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-410">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-410">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-411"><see cref="T:System.Decimal" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="283d0-411">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-412">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-412">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-413">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-413">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="283d0-414">推奨される代替手段が呼び出されて、<xref:System.Convert.ToDecimal%28System.Int16%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-414">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-415">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-415">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-416">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-416">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-417"><see cref="T:System.Double" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="283d0-417">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-418">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-418">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-419">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-419">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="283d0-420">推奨される代替手段が呼び出されて、<xref:System.Convert.ToDouble%28System.Int16%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-420">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-421">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-421">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-422">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-422">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-423">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="283d0-423">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-424">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-424">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-425">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-425">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-426">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-426">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-427">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-427">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-428"><see cref="T:System.Int32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="283d0-428">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-429">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-429">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-430">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-430">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="283d0-431">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt32%28System.Int16%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-431">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-432">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-432">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-433">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-433">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-434"><see cref="T:System.Int64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="283d0-434">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-435">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-435">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-436">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-436">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="283d0-437">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt64%28System.Int16%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-437">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-438">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-438">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-439">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-439">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-440"><see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="283d0-440">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-441">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-441">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-442">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-442">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="283d0-443">推奨される代替手段が呼び出されて、<xref:System.Convert.ToSByte%28System.Int16%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-443">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-444">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-444">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-445">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-445">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-446"><see cref="T:System.Single" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="283d0-446">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-447">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-447">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-448">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-448">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="283d0-449">推奨される代替手段が呼び出されて、<xref:System.Convert.ToSingle%28System.Int16%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-449">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="283d0-450">この <see cref="T:System.Int16" /> 値の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="283d0-450">The type to which to convert this <see cref="T:System.Int16" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="283d0-451">戻り値の書式に関する情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="283d0-451">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="283d0-452">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-452">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-453"><paramref name="type" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="283d0-453">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-454">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-454">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-455">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-455">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="283d0-456">推奨される代替手段が呼び出されて、 `static` (`Shared` Visual Basic で)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-456">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-457">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-457">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-458">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-458">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-459">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="283d0-459">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-460">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-460">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-461">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-461">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="283d0-462">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt16%28System.Int16%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-462">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-463">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-463">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-464">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-464">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-465"><see cref="T:System.UInt32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="283d0-465">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-466">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-466">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-467">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-467">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="283d0-468">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt32%28System.Int16%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-468">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-469">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-469">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="283d0-470">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="283d0-470">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="283d0-471"><see cref="T:System.UInt64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="283d0-471">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-472">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="283d0-472">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="283d0-473">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-473">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="283d0-474">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt64%28System.Int16%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-474">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="283d0-475">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="283d0-475">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="283d0-476">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="283d0-476">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="283d0-477">値が負の場合はマイナス記号を伴い、先行ゼロを含まない 0 から 9 までの一連の数字から構成される、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="283d0-477">The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-478"><xref:System.Int16.ToString>メソッドの形式、 <xref:System.Int16> ("G"、または [全般]) の既定の値の形式を使用して、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-478">The <xref:System.Int16.ToString> method formats an <xref:System.Int16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="283d0-479">別の形式またはカルチャを指定する場合は、他のオーバー ロードを使用して、<xref:System.Int16.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="283d0-479">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="283d0-480">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="283d0-480">To use format</span></span>|<span data-ttu-id="283d0-481">カルチャの</span><span class="sxs-lookup"><span data-stu-id="283d0-481">For culture</span></span>|<span data-ttu-id="283d0-482">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="283d0-482">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="283d0-483">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="283d0-483">Default ("G") format</span></span>|<span data-ttu-id="283d0-484">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="283d0-484">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="283d0-485">特定の形式</span><span class="sxs-lookup"><span data-stu-id="283d0-485">A specific format</span></span>|<span data-ttu-id="283d0-486">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="283d0-486">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
|<span data-ttu-id="283d0-487">特定の形式</span><span class="sxs-lookup"><span data-stu-id="283d0-487">A specific format</span></span>|<span data-ttu-id="283d0-488">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="283d0-488">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="283d0-489">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="283d0-489">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="283d0-490">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="283d0-490">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="283d0-491">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="283d0-491">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="283d0-492">次の例では、<xref:System.Int16.ToString>の配列を表示するメソッドを<xref:System.Int16>コンソールに値。</span><span class="sxs-lookup"><span data-stu-id="283d0-492">The following example uses the <xref:System.Int16.ToString> method to display an array of <xref:System.Int16> values to the console.</span></span>  
  
 [!code-csharp[System.Int16.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Int16.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="283d0-493">カルチャ固有の書式情報を提供する <see cref="T:System.IFormatProvider" />。</span><span class="sxs-lookup"><span data-stu-id="283d0-493">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="283d0-494">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="283d0-494">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="283d0-495"><paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="283d0-495">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-496"><xref:System.Int16.ToString%28System.IFormatProvider%29>メソッドの形式、 <xref:System.Int16> ("G"、または [全般]) の既定の値の形式を使用して、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-496">The <xref:System.Int16.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="283d0-497">別の形式または現在のカルチャを指定する場合は、他のオーバー ロードを使用して、<xref:System.Int16.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="283d0-497">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="283d0-498">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="283d0-498">To use format</span></span>|<span data-ttu-id="283d0-499">カルチャの</span><span class="sxs-lookup"><span data-stu-id="283d0-499">For culture</span></span>|<span data-ttu-id="283d0-500">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="283d0-500">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="283d0-501">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="283d0-501">Default ("G") format</span></span>|<span data-ttu-id="283d0-502">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="283d0-502">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="283d0-503">特定の形式</span><span class="sxs-lookup"><span data-stu-id="283d0-503">A specific format</span></span>|<span data-ttu-id="283d0-504">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="283d0-504">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
|<span data-ttu-id="283d0-505">特定の形式</span><span class="sxs-lookup"><span data-stu-id="283d0-505">A specific format</span></span>|<span data-ttu-id="283d0-506">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="283d0-506">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="283d0-507">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="283d0-507">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="283d0-508">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="283d0-508">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="283d0-509">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="283d0-509">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="283d0-510">`provider`パラメーターは、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-510">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="283d0-511">通常、`provider`は、<xref:System.Globalization.NumberFormatInfo>オブジェクトまたは<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-511">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="283d0-512"><xref:System.Globalization.NumberFormatInfo>オブジェクトは、このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="283d0-512">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="283d0-513">場合`provider`は`null`、このインスタンスがでフォーマットされて、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-513">If `provider` is `null`, this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="283d0-514">次の例の配列を反復処理<xref:System.Int16>値し、それらの各を呼び出すことによってコンソールに表示、<xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>異なる書式プロバイダーを持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-514">The following example iterates an array of <xref:System.Int16> values and displays each of them to the console by calling the <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method with different format providers.</span></span> <span data-ttu-id="283d0-515">により、単純な書式設定、既定値"G"書式指定子によって定義された、書式設定された文字列ごとに生成<xref:System.Int16>値が同一の値に関係なく、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="283d0-515">Because of the simple formatting defined by the default "G" format specifier, the formatted strings produced for each <xref:System.Int16> value are identical regardless of the value of the `provider` parameter.</span></span>  
  
 [!code-csharp[System.Int16.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#2)]
 [!code-vb[System.Int16.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="283d0-516">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="283d0-516">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="283d0-517">指定した書式を使用して、このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="283d0-517">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="283d0-518"><paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="283d0-518">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-519"><xref:System.Int16.ToString%28System.String%29>メソッドの形式、<xref:System.Int16>値を使用して指定された形式で、<xref:System.Globalization.NumberFormatInfo>を現在のカルチャの規則を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-519">The <xref:System.Int16.ToString%28System.String%29> method formats an <xref:System.Int16> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="283d0-520">既定値 ("G"、または [全般]) を使用する場合は、書式を設定または別のカルチャを指定して、他のオーバー ロードを使用して、<xref:System.Int16.ToString%2A>メソッドは、次のように。</span><span class="sxs-lookup"><span data-stu-id="283d0-520">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="283d0-521">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="283d0-521">To use format</span></span>|<span data-ttu-id="283d0-522">カルチャの</span><span class="sxs-lookup"><span data-stu-id="283d0-522">For culture</span></span>|<span data-ttu-id="283d0-523">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="283d0-523">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="283d0-524">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="283d0-524">Default ("G") format</span></span>|<span data-ttu-id="283d0-525">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="283d0-525">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="283d0-526">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="283d0-526">Default ("G") format</span></span>|<span data-ttu-id="283d0-527">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="283d0-527">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="283d0-528">特定の形式</span><span class="sxs-lookup"><span data-stu-id="283d0-528">A specific format</span></span>|<span data-ttu-id="283d0-529">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="283d0-529">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="283d0-530">`format`パラメーターには、標準またはカスタム数値書式指定文字列のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-530">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="283d0-531">すべてのカスタム数値書式指定文字として、"R"(または"r") 以外のすべての標準数値書式指定文字列はサポートされます。</span><span class="sxs-lookup"><span data-stu-id="283d0-531">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="283d0-532">場合`format`は`null`またはこのインスタンスの戻り値、空の文字列が、一般的な数値書式指定子 ("G") でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="283d0-532">If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="283d0-533">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="283d0-533">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="283d0-534">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="283d0-534">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="283d0-535">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="283d0-535">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="283d0-536">このインスタンスの戻り値でフォーマットされた、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="283d0-536">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="283d0-537">次の例では、2 つを初期化します<xref:System.Int16>値し、それぞれのサポートされている標準書式指定文字列といくつかのカスタム書式指定文字列を使用して、コンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="283d0-537">The following example initializes two <xref:System.Int16> values and displays them to the console using each of the supported standard format strings and several custom format strings.</span></span> <span data-ttu-id="283d0-538">例は、現在のカルチャとして EN-US で実行されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-538">The example is run with en-US as the current culture.</span></span>  
  
 [!code-csharp[System.Int16.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Int16.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="283d0-539">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="283d0-539">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="283d0-540">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-540">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="283d0-541">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="283d0-541">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="283d0-542"><paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="283d0-542">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-543"><xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>メソッドの形式、<xref:System.Int16>値を使用して指定された形式で、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-543">The <xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int16> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="283d0-544">既定の形式またはカルチャの設定を使用する場合は、他のオーバー ロードを使用して、<xref:System.Int16.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="283d0-544">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="283d0-545">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="283d0-545">To use format</span></span>|<span data-ttu-id="283d0-546">カルチャの</span><span class="sxs-lookup"><span data-stu-id="283d0-546">For culture</span></span>|<span data-ttu-id="283d0-547">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="283d0-547">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="283d0-548">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="283d0-548">Default ("G") format</span></span>|<span data-ttu-id="283d0-549">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="283d0-549">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="283d0-550">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="283d0-550">Default ("G") format</span></span>|<span data-ttu-id="283d0-551">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="283d0-551">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="283d0-552">特定の形式</span><span class="sxs-lookup"><span data-stu-id="283d0-552">A specific format</span></span>|<span data-ttu-id="283d0-553">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="283d0-553">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
  
 <span data-ttu-id="283d0-554">`format`パラメーターには、標準またはカスタム数値書式指定文字列のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-554">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="283d0-555">すべてのカスタム数値書式指定文字として、"R"(または"r") 以外のすべての標準数値書式指定文字列はサポートされます。</span><span class="sxs-lookup"><span data-stu-id="283d0-555">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="283d0-556">場合`format`は`null`または空の文字列 ("")、このメソッドによって返される文字列は、一般的な数値形式指定子 ("G") を使用します。</span><span class="sxs-lookup"><span data-stu-id="283d0-556">If `format` is `null` or an empty string (""), the string returned by this method is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="283d0-557">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="283d0-557">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="283d0-558">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="283d0-558">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="283d0-559">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="283d0-559">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="283d0-560">`provider`パラメーターは、<xref:System.IFormatProvider>実装します。</span><span class="sxs-lookup"><span data-stu-id="283d0-560">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="283d0-561">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-561">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="283d0-562">実装するオブジェクト<xref:System.IFormatProvider>次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-562">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="283d0-563">A<xref:System.Globalization.CultureInfo>が書式指定規則が使用されるカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-563">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="283d0-564">A<xref:System.Globalization.NumberFormatInfo>この値の特定の数値書式設定情報を含むオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="283d0-564">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="283d0-565">実装するカスタム オブジェクト<xref:System.IFormatProvider>です。</span><span class="sxs-lookup"><span data-stu-id="283d0-565">A custom object that implements <xref:System.IFormatProvider>.</span></span>  
  
 <span data-ttu-id="283d0-566">場合`provider`は`null`、または<xref:System.Globalization.NumberFormatInfo>からオブジェクトを取得できません`provider`、戻り値の書式で、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="283d0-566">If `provider` is `null`, or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="283d0-567">次の例を表示、<xref:System.Int16>で 4 つの異なるカルチャを使用して、サポートされている標準書式指定文字列の各値です。</span><span class="sxs-lookup"><span data-stu-id="283d0-567">The following example displays an <xref:System.Int16> value using each of the supported standard format strings in four different cultures.</span></span>  
  
 [!code-csharp[System.Int16.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Int16.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="283d0-568">数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="283d0-568">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span> <span data-ttu-id="283d0-569">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="283d0-569">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.Int16.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.ReadOnlySpan{System.Char},System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] short % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Int16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.String,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] short % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Int16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="283d0-570">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="283d0-570">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="283d0-571">変換が成功した場合、このメソッドが返されるときに、<c>s</c> に格納された数値と等価の 16 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="283d0-571">When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="283d0-572"><c>s</c> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、正しい形式ではない、または <see cref="F:System.Int16.MinValue" /> より小さいか <see cref="F:System.Int16.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="283d0-572">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span> <span data-ttu-id="283d0-573">このパラメーターは初期化されていない状態で渡されています。<c>result</c> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="283d0-573">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="283d0-574">数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="283d0-574">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span> <span data-ttu-id="283d0-575">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="283d0-575">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="283d0-576"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="283d0-576"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-577"><xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType>メソッドとは異なります、<xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType>解析されたを返す代わりに、解析操作が成功したかどうかを示すブール値を返すことによってメソッド<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="283d0-577">The <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> method differs from the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <xref:System.Int16> value.</span></span> <span data-ttu-id="283d0-578">テストするため、例外処理を使用する必要がある、<xref:System.FormatException>イベントで`s`無効なため、正常に解析することはできません。</span><span class="sxs-lookup"><span data-stu-id="283d0-578">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="283d0-579">`s`パラメーターが、フォームでの数値の文字列形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="283d0-579">The `s` parameter should be the string representation of a number in the form:</span></span>  
  
 <span data-ttu-id="283d0-580">[ws][サインイン] 桁 [ws]</span><span class="sxs-lookup"><span data-stu-id="283d0-580">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="283d0-581">角かっこ ([および]) は省略可能の項目です。</span><span class="sxs-lookup"><span data-stu-id="283d0-581">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="283d0-582">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="283d0-582">The following table describes each element.</span></span>  
  
|<span data-ttu-id="283d0-583">要素</span><span class="sxs-lookup"><span data-stu-id="283d0-583">Element</span></span>|<span data-ttu-id="283d0-584">説明</span><span class="sxs-lookup"><span data-stu-id="283d0-584">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="283d0-585">*ws*</span><span class="sxs-lookup"><span data-stu-id="283d0-585">*ws*</span></span>|<span data-ttu-id="283d0-586">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="283d0-586">Optional white space.</span></span>|  
|<span data-ttu-id="283d0-587">*sign*</span><span class="sxs-lookup"><span data-stu-id="283d0-587">*sign*</span></span>|<span data-ttu-id="283d0-588">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="283d0-588">An optional sign.</span></span>|  
|<span data-ttu-id="283d0-589">*digits*</span><span class="sxs-lookup"><span data-stu-id="283d0-589">*digits*</span></span>|<span data-ttu-id="283d0-590">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="283d0-590">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="283d0-591">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="283d0-591">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="283d0-592">10 進数字以外には、先頭と末尾のスペースが先頭の符号と共にのみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-592">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="283d0-593">使用できるカルチャに固有の書式情報とスタイル要素を明示的に定義する`s`を使用して、<xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-593">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="283d0-594">`s`で書式設定情報を使用してパラメーターを解析、<xref:System.Globalization.NumberFormatInfo>現在のシステムのカルチャに初期化されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-594">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="283d0-595">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="283d0-595">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="283d0-596">このオーバー ロード、<xref:System.Int16.TryParse%2A>メソッド内のすべての桁を解釈し、`s`として小数点以下桁数のパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="283d0-596">This overload of the <xref:System.Int16.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="283d0-597">16 進数の文字列表現を解析するには、呼び出し、<xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="283d0-597">To parse the string representation of a hexadecimal number, call the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="283d0-598">次の例では、<xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType>別の文字列値の数を持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-598">The following example calls the <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int16.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int16.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="283d0-599">文字列の一部を<xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29>メソッドはこの例では変換することはありませんが。</span><span class="sxs-lookup"><span data-stu-id="283d0-599">Some of the strings that the <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="283d0-600">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="283d0-600">"9432.0".</span></span> <span data-ttu-id="283d0-601">小数点の記号を含めることはできませんので、変換に失敗します。整数部の桁のみでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="283d0-601">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="283d0-602">"16,667".</span><span class="sxs-lookup"><span data-stu-id="283d0-602">"16,667".</span></span> <span data-ttu-id="283d0-603">文字列は、グループの区切り記号を含めることはできませんので、変換に失敗します。整数部の桁のみでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="283d0-603">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="283d0-604">"(100)".</span><span class="sxs-lookup"><span data-stu-id="283d0-604">"(100)".</span></span> <span data-ttu-id="283d0-605">文字列は、現在のカルチャによって定義されたもの以外の負の符号を含めることはできませんので、変換が失敗した<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="283d0-605">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="283d0-606">"01FA".</span><span class="sxs-lookup"><span data-stu-id="283d0-606">"01FA".</span></span> <span data-ttu-id="283d0-607">文字列は 16 進数の数字を含めることはできませんので、変換に失敗します。10 進数字のみでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="283d0-607">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="M:System.Int16.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] short % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] short % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="283d0-608">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="283d0-608">A string containing a number to convert.</span></span> <span data-ttu-id="283d0-609">文字列は、<c> スタイル </c> で指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-609">The string is interpreted using the style specified by <c>style</c>.</span></span></param>
        <param name="style"><span data-ttu-id="283d0-610"><c>s</c> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="283d0-610">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="283d0-611">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="283d0-611">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="283d0-612"><c>s</c> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-612">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="result"><span data-ttu-id="283d0-613">変換が成功した場合、このメソッドが返されるときに、<c>s</c> に格納された数値と等価の 16 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="283d0-613">When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="283d0-614"><c>s</c> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、 <c>style</c> に準拠した形式ではない、または <see cref="F:System.Int16.MinValue" /> より小さいか <see cref="F:System.Int16.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="283d0-614">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span> <span data-ttu-id="283d0-615">このパラメーターは初期化されていない状態で渡されています。<c>result</c> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="283d0-615">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="283d0-616">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="283d0-616">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</span></span> <span data-ttu-id="283d0-617">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="283d0-617">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="283d0-618"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="283d0-618"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="283d0-619"><xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType>メソッドとは異なります、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>解析されたを返す代わりに、解析操作が成功したかどうかを示すブール値を返すことによってメソッド<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="283d0-619">The <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method differs from the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <xref:System.Int16> value.</span></span> <span data-ttu-id="283d0-620">テストするため、例外処理を使用する必要がある、<xref:System.FormatException>イベントで`s`無効なため、正常に解析することはできません。</span><span class="sxs-lookup"><span data-stu-id="283d0-620">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="283d0-621">`style`パラメーター スタイル要素を定義します (空白や正または負符号) では許可されて、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="283d0-621">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="283d0-622">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="283d0-622">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="283d0-623">スタイルの値に応じて、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="283d0-623">Depending on the value of style, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="283d0-624">[ws][$][記号][数字] 桁 [.fractional_digits] [e [サインイン] 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="283d0-624">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="283d0-625">またはの場合、`style`パラメーターが含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="283d0-625">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span></span>  
  
 <span data-ttu-id="283d0-626">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="283d0-626">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="283d0-627">角かっこ ([および]) は省略可能の項目です。</span><span class="sxs-lookup"><span data-stu-id="283d0-627">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="283d0-628">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="283d0-628">The following table describes each element.</span></span>  
  
|<span data-ttu-id="283d0-629">要素</span><span class="sxs-lookup"><span data-stu-id="283d0-629">Element</span></span>|<span data-ttu-id="283d0-630">説明</span><span class="sxs-lookup"><span data-stu-id="283d0-630">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="283d0-631">*ws*</span><span class="sxs-lookup"><span data-stu-id="283d0-631">*ws*</span></span>|<span data-ttu-id="283d0-632">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="283d0-632">Optional white space.</span></span> <span data-ttu-id="283d0-633">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、またはの末尾`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-633">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="283d0-634">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="283d0-634">A culture-specific currency symbol.</span></span> <span data-ttu-id="283d0-635">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="283d0-635">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="283d0-636">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-636">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="283d0-637">*sign*</span><span class="sxs-lookup"><span data-stu-id="283d0-637">*sign*</span></span>|<span data-ttu-id="283d0-638">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="283d0-638">An optional sign.</span></span>|  
|<span data-ttu-id="283d0-639">*digits*</span><span class="sxs-lookup"><span data-stu-id="283d0-639">*digits*</span></span>|<span data-ttu-id="283d0-640">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="283d0-640">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="283d0-641">*、*</span><span class="sxs-lookup"><span data-stu-id="283d0-641">*,*</span></span>|<span data-ttu-id="283d0-642">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="283d0-642">A culture-specific thousands separator.</span></span> <span data-ttu-id="283d0-643">数千で指定されたカルチャの区切り記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-643">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="283d0-644">*.*</span><span class="sxs-lookup"><span data-stu-id="283d0-644">*.*</span></span>|<span data-ttu-id="283d0-645">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="283d0-645">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="283d0-646">指定されたカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-646">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="283d0-647">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="283d0-647">*fractional_digits*</span></span>|<span data-ttu-id="283d0-648">数字の 0 の 1 つ以上の出現します。</span><span class="sxs-lookup"><span data-stu-id="283d0-648">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="283d0-649">小数部の桁が表示できる`s`場合にのみ、`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-649">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="283d0-650">*e*</span><span class="sxs-lookup"><span data-stu-id="283d0-650">*e*</span></span>|<span data-ttu-id="283d0-651">'E' または 'E' 文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="283d0-651">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="283d0-652">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="283d0-652">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="283d0-653">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="283d0-653">*hexdigits*</span></span>|<span data-ttu-id="283d0-654">一連の 0 f からまたは f 0 から 16 進数の数字</span><span class="sxs-lookup"><span data-stu-id="283d0-654">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="283d0-655">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>フラグ) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="283d0-655">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="283d0-656">ほとんど残りの<xref:System.Globalization.NumberStyles>メンバーを制御する可能性がありますが、この入力文字列内に存在する必要はない要素です。</span><span class="sxs-lookup"><span data-stu-id="283d0-656">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="283d0-657">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="283d0-657">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="283d0-658">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="283d0-658">Non-composite NumberStyles values</span></span>|<span data-ttu-id="283d0-659">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="283d0-659">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="283d0-660">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="283d0-660">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="283d0-661">*.*</span><span class="sxs-lookup"><span data-stu-id="283d0-661">The *.*</span></span> <span data-ttu-id="283d0-662">および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="283d0-662">and *fractional_digits* elements.</span></span> <span data-ttu-id="283d0-663">ただし、 *fractional_digits*のみ 1 つ以上の数字が 0 のメソッドを返しますで構成されている必要があります`false`です。</span><span class="sxs-lookup"><span data-stu-id="283d0-663">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="283d0-664">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-664">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="283d0-665">場合`s`指数表記の数値を表すの範囲内の整数を表す必要があります、 <xref:System.Int16> 0 以外の小数部がないデータ型。</span><span class="sxs-lookup"><span data-stu-id="283d0-665">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int16> data type without a non-zero fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="283d0-666">*Ws*の先頭にある要素*s*です。</span><span class="sxs-lookup"><span data-stu-id="283d0-666">The *ws* element at the beginning of *s*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="283d0-667">*Ws*の末尾に要素*s*です。</span><span class="sxs-lookup"><span data-stu-id="283d0-667">The *ws* element at the end of *s*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="283d0-668">前に、記号を表示できる*桁*です。</span><span class="sxs-lookup"><span data-stu-id="283d0-668">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="283d0-669">後に記号が表示される可能性が*桁*です。</span><span class="sxs-lookup"><span data-stu-id="283d0-669">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="283d0-670">*記号*数値の値を囲むかっこの形式での要素。</span><span class="sxs-lookup"><span data-stu-id="283d0-670">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="283d0-671">*、* 要素。</span><span class="sxs-lookup"><span data-stu-id="283d0-671">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="283d0-672">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="283d0-672">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="283d0-673">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="283d0-673">All elements.</span></span> <span data-ttu-id="283d0-674">*S*パラメーターには、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="283d0-674">The *s* parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="283d0-675">*Ws*先頭または末尾の位置にある要素`s`、*記号*の先頭に`s`、および*です。*</span><span class="sxs-lookup"><span data-stu-id="283d0-675">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="283d0-676">記号です。</span><span class="sxs-lookup"><span data-stu-id="283d0-676">symbol.</span></span> <span data-ttu-id="283d0-677">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="283d0-677">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="283d0-678">*Ws*、*記号*、何千もの区切り記号 (*、*)、および小数点 (*.*) 要素です。</span><span class="sxs-lookup"><span data-stu-id="283d0-678">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="283d0-679">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="283d0-679">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="283d0-680">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進値でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="283d0-680">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="283d0-681">たとえば、"9AF3"を正常に解析していて、"0x9AF3"にはないです。</span><span class="sxs-lookup"><span data-stu-id="283d0-681">For example, "9AF3" parses successfully, but "0x9AF3" does not.</span></span> <span data-ttu-id="283d0-682">その他のフラグのみで使用可能な`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="283d0-682">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="283d0-683">(、<xref:System.Globalization.NumberStyles>列挙体には、複合スタイル<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、両方の空白文字のフラグが含まれている)。</span><span class="sxs-lookup"><span data-stu-id="283d0-683">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="283d0-684">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.NumberFormatInfo>オブジェクト、<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="283d0-684">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="283d0-685"><xref:System.Globalization.NumberFormatInfo>オブジェクトの書式に関するカルチャ固有の情報を提供`s`です。</span><span class="sxs-lookup"><span data-stu-id="283d0-685">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="283d0-686">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="283d0-686">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="283d0-687">次の例では、<xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType>別の文字列値の数を持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="283d0-687">The following example calls the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int16.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int16.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="283d0-688"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="283d0-688"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="283d0-689">- または -</span><span class="sxs-lookup"><span data-stu-id="283d0-689">-or-</span></span>  
  
 <span data-ttu-id="283d0-690"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="283d0-690"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="Overload:System.Int16.Parse" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>