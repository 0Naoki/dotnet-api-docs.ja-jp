<Type Name="Char" FullName="System.Char">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb29d8273aed0c2175ba05e02ad948872b11d717" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433501" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit char extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;char&gt;, class System.IConvertible, class System.IEquatable`1&lt;char&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Char" />
  <TypeSignature Language="VB.NET" Value="Public Structure Char&#xA;Implements IComparable, IComparable(Of Char), IConvertible, IEquatable(Of Char)" />
  <TypeSignature Language="C++ CLI" Value="public value class Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="F#" Value="type char = struct&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Char&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="31ffd-101">Represents a character as a UTF-16 code unit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="31ffd-101">Represents a character as a UTF-16 code unit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-102">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]を使用して、 <xref:System.Char> Unicode 文字を表現する構造体。</span><span class="sxs-lookup"><span data-stu-id="31ffd-102">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character.</span></span> <span data-ttu-id="31ffd-103">Unicode 規格は、コード ポイントと呼ばれる一意の 21 ビット スカラー番号でそれぞれの Unicode 文字を識別し、コード ポイントを 1 つ以上の 16 ビット値のシーケンスにエンコードする方法を指定する utf-16 エンコード形式を定義します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-103">The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.</span></span> <span data-ttu-id="31ffd-104">各 16 ビット値が 16 進数の 0x0000 から 0 xffff までの範囲しに格納されて、<xref:System.Char>構造体。</span><span class="sxs-lookup"><span data-stu-id="31ffd-104">Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.</span></span>  <span data-ttu-id="31ffd-105">値、<xref:System.Char>オブジェクトは、16 ビット数値 (序数) の値。</span><span class="sxs-lookup"><span data-stu-id="31ffd-105">The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.</span></span>  
  
 <span data-ttu-id="31ffd-106">次のセクションでは、確認の間のリレーションシップ、<xref:System.Char>オブジェクト、および文字で実行される一般的なタスクについて説明し、<xref:System.Char>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="31ffd-106">The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.</span></span>  
  
 <span data-ttu-id="31ffd-107">[Char 型のオブジェクト、Unicode 文字、および文字列](#Relationship) </span><span class="sxs-lookup"><span data-stu-id="31ffd-107">[Char objects, Unicode characters, and strings](#Relationship) </span></span>  
 <span data-ttu-id="31ffd-108">[文字および文字カテゴリ](#Categories) </span><span class="sxs-lookup"><span data-stu-id="31ffd-108">[Characters and character categories](#Categories) </span></span>  
 <span data-ttu-id="31ffd-109">[文字要素と text 要素](#Elements) </span><span class="sxs-lookup"><span data-stu-id="31ffd-109">[Characters and text elements](#Elements) </span></span>  
 <span data-ttu-id="31ffd-110">[一般的な操作](#Operations) </span><span class="sxs-lookup"><span data-stu-id="31ffd-110">[Common operations](#Operations) </span></span>  
 [<span data-ttu-id="31ffd-111">Char 値との相互運用機能</span><span class="sxs-lookup"><span data-stu-id="31ffd-111">Char values and interop</span></span>](#Interop)  
  
<a name="Relationship"></a>   
## <a name="char-objects-unicode-characters-and-strings"></a><span data-ttu-id="31ffd-112">Char 型のオブジェクト、Unicode 文字、および文字列</span><span class="sxs-lookup"><span data-stu-id="31ffd-112">Char objects, Unicode characters, and strings</span></span>  
 <span data-ttu-id="31ffd-113">A<xref:System.String>オブジェクトは、シーケンシャル コレクションの<xref:System.Char>テキストの文字列を表す構造体。</span><span class="sxs-lookup"><span data-stu-id="31ffd-113">A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text.</span></span> <span data-ttu-id="31ffd-114">ほとんどの Unicode 文字を 1 つで表せる<xref:System.Char>オブジェクト、基本文字としてエンコードされる文字がサロゲート ペアと組み合わせ文字シーケンスが複数で表される<xref:System.Char>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31ffd-114">Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="31ffd-115">このため、<xref:System.Char>構造体、<xref:System.String>オブジェクトは、必ずしも単一の Unicode 文字に相当することはありません。</span><span class="sxs-lookup"><span data-stu-id="31ffd-115">For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.</span></span>  
  
 <span data-ttu-id="31ffd-116">複数の 16 ビットのコード単位を使用して、次の場合、1 つの Unicode 文字を表現します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-116">Multiple 16-bit code units are used to represent single Unicode characters in the following cases:</span></span>  
  
-   <span data-ttu-id="31ffd-117">グリフの 1 つの文字または、基本文字の後に 1 つまたは複数の結合文字で構成されている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="31ffd-117">Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.</span></span> <span data-ttu-id="31ffd-118">たとえば、ä 文字が a で表されます<xref:System.Char>オブジェクト単位は U +0 0061 a の後にコードを持つ<xref:System.Char>がコードの単位が u+0308 オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31ffd-118">For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308.</span></span> <span data-ttu-id="31ffd-119">(文字 ä は、1 つで定義することも<xref:System.Char>U +0 00E4 のコード単位を持つオブジェクトです)。2 つの文字 ä で構成されている次の例を示しています<xref:System.Char>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31ffd-119">(The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.</span></span>  
  
     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]
     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]  
  
-   <span data-ttu-id="31ffd-120">Unicode 基本多言語面 (BMP) 以外の文字。</span><span class="sxs-lookup"><span data-stu-id="31ffd-120">Characters outside the Unicode Basic Multilingual Plane (BMP).</span></span> <span data-ttu-id="31ffd-121">Unicode には、0 の平面を表します bmp ファイルだけでなく 16 個の平面がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="31ffd-121">Unicode supports sixteen planes in addition to the BMP, which represents plane 0.</span></span> <span data-ttu-id="31ffd-122">Unicode コード ポイントは、utf-32 の平面が含まれる 21 ビットの値で表されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-122">A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.</span></span> <span data-ttu-id="31ffd-123">たとえば、U +0 1D160 は、音符シンボル 8 分の文字を表します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-123">For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.</span></span> <span data-ttu-id="31ffd-124">Utf-16 エンコーディングは 16 ビットだけがあるために、BMP 以外の文字は、utf-16 のサロゲート ペアで表されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-124">Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.</span></span> <span data-ttu-id="31ffd-125">次の例では、U + D834 U + DD60 は U +0 1D160、音符シンボル 8 分の文字の utf-32 相当にことを示します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-125">The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.</span></span> <span data-ttu-id="31ffd-126">U + D834 が上位サロゲートです。高サロゲート u+d800 から U+DBFF の範囲です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-126">U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.</span></span> <span data-ttu-id="31ffd-127">U + DD60 が下位サロゲートです。低サロゲート u+dc00 から U+DFFF までの範囲です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-127">U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.</span></span>  
  
     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]
     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]  
  
<a name="Categories"></a>   
## <a name="characters-and-character-categories"></a><span data-ttu-id="31ffd-128">文字および文字カテゴリ</span><span class="sxs-lookup"><span data-stu-id="31ffd-128">Characters and character categories</span></span>  
 <span data-ttu-id="31ffd-129">各 Unicode 文字または有効なサロゲート ペアは、Unicode カテゴリに属しています。</span><span class="sxs-lookup"><span data-stu-id="31ffd-129">Each Unicode character or valid surrogate pair belongs to a Unicode category.</span></span> <span data-ttu-id="31ffd-130">.NET Framework の Unicode カテゴリがのメンバーによって表される、<xref:System.Globalization.UnicodeCategory>列挙などの値と<xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>、<xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>と<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>、例を示します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-130">In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, and <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, for example.</span></span>  
  
 <span data-ttu-id="31ffd-131">文字の Unicode カテゴリを確認するを呼び出す、<xref:System.Char.GetUnicodeCategory%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-131">To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method.</span></span> <span data-ttu-id="31ffd-132">たとえば、次の例では、<xref:System.Char.GetUnicodeCategory%2A>文字列内の各文字の Unicode カテゴリを表示します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-132">For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.</span></span>  
  
 [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]
 [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]  
  
 <span data-ttu-id="31ffd-133">(U +0 0000 から U + 00 ff)、ASCII の範囲外の文字を内部的には、<xref:System.Char.GetUnicodeCategory%2A>メソッドによって報告された Unicode カテゴリによって異なります、<xref:System.Globalization.CharUnicodeInfo>クラスです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-133">Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class.</span></span> <span data-ttu-id="31ffd-134">以降で、 [!INCLUDE[net_v462](~/includes/net-v462-md.md)]、Unicode 文字を分類に基づいて[、Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-134">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="31ffd-135">.NET Framework のバージョンで、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]を[!INCLUDE[net_v461](~/includes/net-v461-md.md)]、その分類に基づいて[、Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-135">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
<a name="Elements"></a>   
## <a name="characters-and-text-elements"></a><span data-ttu-id="31ffd-136">文字要素と text 要素</span><span class="sxs-lookup"><span data-stu-id="31ffd-136">Characters and text elements</span></span>  
 <span data-ttu-id="31ffd-137">複数によって 1 つの文字を表すことができますので<xref:System.Char>オブジェクトの場合は常に個別を使用する意味のあるいない<xref:System.Char>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31ffd-137">Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects.</span></span> <span data-ttu-id="31ffd-138">たとえば、次の例では、Aegean 数字 0 ~ 9 を utf-16 でエンコードされたコード単位を表す Unicode コード ポイントに変換します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-138">For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.</span></span> <span data-ttu-id="31ffd-139">誤ってと同義なるため<xref:System.Char>オブジェクト、文字と正確に報告されて、結果の文字列が 20 文字であります。</span><span class="sxs-lookup"><span data-stu-id="31ffd-139">Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.</span></span>  
  
 [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]
 [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]  
  
 <span data-ttu-id="31ffd-140">想定を回避するのには、次を行うことができますを<xref:System.Char>オブジェクトは 1 つの文字を表します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-140">You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.</span></span>  
  
-   <span data-ttu-id="31ffd-141">使用する、<xref:System.String>全体を表し、言語的内容を分析する個別の文字の操作ではなくオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31ffd-141">You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.</span></span>  
  
-   <span data-ttu-id="31ffd-142">使用することができます、<xref:System.Globalization.StringInfo>個人ではなくテキスト要素を使用するクラス<xref:System.Char>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31ffd-142">You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects.</span></span> <span data-ttu-id="31ffd-143">次の例では、<xref:System.Globalization.StringInfo>エーゲで構成される文字列内のテキスト要素の数をカウントする番号が 0 から 9 です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-143">The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.</span></span> <span data-ttu-id="31ffd-144">見なすので、サロゲート ペアを単一の文字、文字列が 10 文字が含まれているが正しく報告されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-144">Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.</span></span>  
  
     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]
     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]  
  
-   <span data-ttu-id="31ffd-145">文字列を 1 つまたは複数の結合文字を持つ基本文字が含まれている場合は、呼び出す、<xref:System.String.Normalize%2A?displayProperty=nameWithType>部分文字列を 1 つの utf-16 でエンコードされたコード単位に変換します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-145">If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the substring to a single UTF-16 encoded code unit.</span></span> <span data-ttu-id="31ffd-146">次の例では、<xref:System.String.Normalize%2A?displayProperty=nameWithType>を変換する方法、基本文字 U + 0061 (LATIN SMALL LETTER A) と組み合わせ文字 u+0308 (結合 DIAERESIS) U +0 00E4 (ラテン小さい文字 A で DIAERESIS)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-146">The following example calls the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).</span></span>  
  
     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]
     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="31ffd-147">一般的な操作</span><span class="sxs-lookup"><span data-stu-id="31ffd-147">Common operations</span></span>  
 <span data-ttu-id="31ffd-148"><xref:System.Char>構造体を比較するメソッドを提供する<xref:System.Char>、オブジェクトが現在の値を変換<xref:System.Char>オブジェクトを別の型のオブジェクトとの Unicode カテゴリを確認、<xref:System.Char>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31ffd-148">The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:</span></span>  
  
|<span data-ttu-id="31ffd-149">目的</span><span class="sxs-lookup"><span data-stu-id="31ffd-149">To do this</span></span>|<span data-ttu-id="31ffd-150">これらを使用して`System.Char`メソッド</span><span class="sxs-lookup"><span data-stu-id="31ffd-150">Use these `System.Char` methods</span></span>|  
|----------------|-------------------------------------|  
|<span data-ttu-id="31ffd-151">比較<xref:System.Char>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="31ffd-151">Compare <xref:System.Char> objects</span></span>|<span data-ttu-id="31ffd-152"><xref:System.Char.CompareTo%2A> および <xref:System.Char.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="31ffd-152"><xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A></span></span>|  
|<span data-ttu-id="31ffd-153">コード ポイントを文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-153">Convert a code point to a string</span></span>|<xref:System.Char.ConvertFromUtf32%2A>|  
|<span data-ttu-id="31ffd-154">変換、<xref:System.Char>オブジェクトまたはサロゲート ペアの<xref:System.Char>コード ポイントにオブジェクト</span><span class="sxs-lookup"><span data-stu-id="31ffd-154">Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point</span></span>|<span data-ttu-id="31ffd-155">1 つの文字。 <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="31ffd-155">For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span></span><br /><br /> <span data-ttu-id="31ffd-156">サロゲート ペアまたは文字列の文字の場合。 <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="31ffd-156">For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="31ffd-157">文字の Unicode カテゴリを取得します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-157">Get the Unicode category of a character</span></span>|<xref:System.Char.GetUnicodeCategory%2A>|  
|<span data-ttu-id="31ffd-158">制御文字の文字は、数字、文字、句読点などの特定の Unicode カテゴリでは、かどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-158">Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on</span></span>|<span data-ttu-id="31ffd-159"><xref:System.Char.IsControl%2A>、 <xref:System.Char.IsDigit%2A>、 <xref:System.Char.IsHighSurrogate%2A>、 <xref:System.Char.IsLetter%2A>、 <xref:System.Char.IsLetterOrDigit%2A>、 <xref:System.Char.IsLower%2A>、 <xref:System.Char.IsLowSurrogate%2A>、 <xref:System.Char.IsNumber%2A>、 <xref:System.Char.IsPunctuation%2A>、 <xref:System.Char.IsSeparator%2A>、 <xref:System.Char.IsSurrogate%2A>、 <xref:System.Char.IsSurrogatePair%2A>、 <xref:System.Char.IsSymbol%2A>、 <xref:System.Char.IsUpper%2A>、および <xref:System.Char.IsWhiteSpace%2A></span><span class="sxs-lookup"><span data-stu-id="31ffd-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A></span></span>|  
|<span data-ttu-id="31ffd-160">変換、<xref:System.Char>数値型の数値を表すオブジェクトを</span><span class="sxs-lookup"><span data-stu-id="31ffd-160">Convert a <xref:System.Char> object that represents a number to a numeric value type</span></span>|<xref:System.Char.GetNumericValue%2A>|  
|<span data-ttu-id="31ffd-161">文字列内の文字を変換、<xref:System.Char>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="31ffd-161">Convert a character in a string into a <xref:System.Char> object</span></span>|<span data-ttu-id="31ffd-162"><xref:System.Char.Parse%2A> および <xref:System.Char.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="31ffd-162"><xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A></span></span>|  
|<span data-ttu-id="31ffd-163">変換、<xref:System.Char>オブジェクトを<xref:System.String>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="31ffd-163">Convert a <xref:System.Char> object to a <xref:System.String> object</span></span>|<xref:System.Char.ToString%2A>|  
|<span data-ttu-id="31ffd-164">大文字と小文字の変更、<xref:System.Char>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="31ffd-164">Change the case of a <xref:System.Char> object</span></span>|<span data-ttu-id="31ffd-165"><xref:System.Char.ToLower%2A>、<xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>、および <xref:System.Char.ToUpperInvariant%2A></span><span class="sxs-lookup"><span data-stu-id="31ffd-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A></span></span>|  
  
<a name="Interop"></a>   
## <a name="char-values-and-interop"></a><span data-ttu-id="31ffd-166">Char 値との相互運用機能</span><span class="sxs-lookup"><span data-stu-id="31ffd-166">Char values and interop</span></span>  
<span data-ttu-id="31ffd-167">ときに、マネージ<xref:System.Char>Unicode utf-16 でエンコードされたコードの単位として表される型がアンマネージ コードに渡される、相互運用マーシャラーが既定で ANSI に設定する文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-167">When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.</span></span> <span data-ttu-id="31ffd-168">適用することができます、<xref:System.Runtime.InteropServices.DllImportAttribute>属性をプラットフォーム呼び出しの宣言と<xref:System.Runtime.InteropServices.StructLayoutAttribute>コントロールは、どの文字セット、マーシャ リングする COM 相互運用機能の宣言に属性<xref:System.Char>用途を入力します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-168">You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-169">次のコード例では、メソッドの一部を示しています<xref:System.Char>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-169">The following code example demonstrates some of the methods in <xref:System.Char>.</span></span>  
  
 [!code-cpp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char [Type Level]/CPP/charstructure.cpp#23)]
 [!code-csharp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char [Type Level]/CS/charstructure.cs#23)]
 [!code-vb[System.Char &#91;Type Level&#93;#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char [Type Level]/VB/charstructure.vb#23)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="31ffd-170">この種類のすべてのメンバーでは、スレッド セーフです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="31ffd-170">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="31ffd-171">インスタンスの状態を変更する表示されるメンバーは、新しい値で初期化された新しいインスタンスを実際に返します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="31ffd-171">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="31ffd-172">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによってです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="31ffd-172">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(char value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : char -&gt; int&#xA;override this.CompareTo : char -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="31ffd-174">A <see cref="T:System.Char" /> object to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-174">A <see cref="T:System.Char" /> object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="31ffd-177">
            <list type="table">
              <listheader>
                <term> Return Value  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description> This instance precedes <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description> This instance follows <paramref name="value" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-177">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-178">このメソッドを実装する、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスし、実行よりもわずかに向上、<xref:System.Char.CompareTo%2A?displayProperty=nameWithType>メソッドに変換があるないため、`value`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-178">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="31ffd-179">このメソッドによって実行される比較はこのインスタンスのエンコードされた値に基づいて、 `value`、辞書の特性にありません。</span><span class="sxs-lookup"><span data-stu-id="31ffd-179">The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.</span></span>  
  
 <span data-ttu-id="31ffd-180">場合、<xref:System.Char.CompareTo%2A>メソッド パラメーターの型がビット数が少ない範囲が狭い、インスタンスの型よりも一部のプログラミング言語が多くのビット値にパラメーターの値を変換する暗黙の拡大変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-180">If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="31ffd-181">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-181">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="31ffd-182">Microsoft c# コンパイラは、パラメーターの値を表す命令を生成、<xref:System.Int32>オブジェクトを生成、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>の値を比較するメソッド、<xref:System.Int32>インスタンスおよび<xref:System.Int32>パラメーター表現です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-182">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="31ffd-183">通常は、暗黙の拡大変換は、数値型で実行されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-183">Typically, implicit widening conversions are performed on numeric types.</span></span> <span data-ttu-id="31ffd-184">コンパイラが拡大変換を実行するかどうかを決定する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="31ffd-184">Consult your programming language's documentation to determine if its compiler performs widening conversions.</span></span> <span data-ttu-id="31ffd-185">コンパイラが、パラメーターのボックスを起動する命令を生成する、インスタンスとパラメーター型が一致しないと適切な変換が使用できない場合、<xref:System.Char.CompareTo%2A>を受け取るオーバー ロード、<xref:System.Object>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="31ffd-185">If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-186">次のコード例に示しますジェネリックと非ジェネリック バージョンの`CompareTo`いくつかの値と参照型のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-186">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="31ffd-187">An object to compare this instance to, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-187">An object to compare this instance to, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-188">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-188">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-189">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-189">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="31ffd-190">
            <list type="table">
              <listheader>
                <term> Return Value  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description> This instance precedes <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description> This instance follows <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-190">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-191"><xref:System.Char.CompareTo%2A>メソッドを実装して、<xref:System.IComparable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-191">The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="31ffd-192">`value`パラメーターでなければなりません`null`またはのインスタンス<xref:System.Char>です。 それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-192">The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="31ffd-193">このメソッドによって実行される比較はこのインスタンスのエンコードされた値に基づいて、 `value`、辞書の特性に限りません。</span><span class="sxs-lookup"><span data-stu-id="31ffd-193">The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics.</span></span> <span data-ttu-id="31ffd-194">任意のインスタンス<xref:System.Char>、その値に関係なくが大きいと見なされますより`null`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-194">Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-195">次のコード例を示します<xref:System.Char.CompareTo%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-195">The following code example demonstrates <xref:System.Char.CompareTo%2A>.</span></span>  
  
 [!code-cpp[System.Char.CompareTo#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.CompareTo/CPP/compareto.cpp#19)]
 [!code-csharp[System.Char.CompareTo#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.CompareTo/CS/compareto.cs#19)]
 [!code-vb[System.Char.CompareTo#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.CompareTo/VB/compareto.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31ffd-196">
            <paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-196">
              <paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromUtf32">
      <MemberSignature Language="C#" Value="public static string ConvertFromUtf32 (int utf32);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertFromUtf32(int32 utf32) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertFromUtf32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertFromUtf32 (utf32 As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConvertFromUtf32(int utf32);" />
      <MemberSignature Language="F#" Value="static member ConvertFromUtf32 : int -&gt; string" Usage="System.char.ConvertFromUtf32 utf32" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf32" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf32">
          <span data-ttu-id="31ffd-197">A 21-bit Unicode code point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-197">A 21-bit Unicode code point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-198">Converts the specified Unicode code point into a UTF-16 encoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-198">Converts the specified Unicode code point into a UTF-16 encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-199">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-199">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-200">このメソッドを使用して、メソッドなど、文字列をテストする前に、21 ビット Unicode コード ポイントを utf-16 でエンコードされた文字列に変換<xref:System.Char.IsLowSurrogate%28System.Char%29>と<xref:System.Char.IsHighSurrogate%28System.Char%29>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-200">Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span></span>  
  
 <span data-ttu-id="31ffd-201">有効なコード ポイントの外側、平面 (bmp: Basic Multilingual) は、常に有効なサロゲート ペアを生成します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-201">A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.</span></span> <span data-ttu-id="31ffd-202">ただし、BMP 内の有効なコード ポイントが生成されない Unicode 標準に従って有効な結果の変換で言語的な処理が使用されていないためです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-202">However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.</span></span> <span data-ttu-id="31ffd-203">そのため、使用して、<xref:System.Text.UTF32Encoding?displayProperty=nameWithType>に変換するクラスでは、utf-32 データを一括一括 utf-16 データにします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-203">For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class to convert bulk UTF-32 data into bulk UTF-16 data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-204">次のコード例を示しています、<xref:System.Char.ConvertToUtf32%2A>と<xref:System.Char.ConvertFromUtf32%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-204">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-205">
            <paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-205">
              <paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToUtf32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-206">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-206">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (highSurrogate As Char, lowSurrogate As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : char * char -&gt; int" Usage="System.char.ConvertToUtf32 (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="31ffd-207">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-207">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="31ffd-208">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-208">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-209">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-209">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-210">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-210">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-211">サロゲート ペアを 21 ビット Unicode コード ポイントに変換するのにには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-211">Use this method to convert a surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="31ffd-212">Utf-32 データに utf-16 データに変換する、<xref:System.Text.UTF32Encoding?displayProperty=nameWithType>クラスです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-212">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="31ffd-213">通常は、utf-16 エンコードと、16 ビット コードの単位として 1 つの Unicode 文字を表します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-213">Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.</span></span> <span data-ttu-id="31ffd-214">ただし、2 つの 16 ビットのコード単位として表現されている 1 つの抽象文字を許可するサロゲート ペアもサポートします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-214">However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.</span></span> <span data-ttu-id="31ffd-215">これらの 2 つ<xref:System.Char>オブジェクトは、その範囲の最初の (高) サロゲート U+DBFF には、u+d800 から U+DFFF の 2 つ目の (低) のサロゲートを u+dc00 からにコード単位に必要があります。</span><span class="sxs-lookup"><span data-stu-id="31ffd-215">These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.</span></span> <span data-ttu-id="31ffd-216">サロゲート ペアは、utf-16 でのみサポートされますエンコードします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-216">Surrogate pairs are supported only by UTF-16 encoding.</span></span> <span data-ttu-id="31ffd-217">このメソッドは、utf-32 エンコーディングを使用する文字に変換する utf-16 サロゲート ペアで表される文字を使用します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-217">This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-218">次のコード例を示しています、<xref:System.Char.ConvertToUtf32%2A>と<xref:System.Char.ConvertFromUtf32%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-218">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-219">
            <paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-219">
              <paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : string * int -&gt; int" Usage="System.char.ConvertToUtf32 (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-220">A string that contains a character or surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-220">A string that contains a character or surrogate pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-221">The index position of the character or surrogate pair in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-221">The index position of the character or surrogate pair in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-222">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-222">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-223">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-223">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-224">このメソッドを使用して、文字またはサロゲート ペアを 21 ビット Unicode コード ポイントに変換します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-224">Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="31ffd-225">Utf-32 データに utf-16 データに変換する、<xref:System.Text.UTF32Encoding?displayProperty=nameWithType>クラスです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-225">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-226">次のコード例を示しています、<xref:System.Char.ConvertToUtf32%2A>と<xref:System.Char.ConvertFromUtf32%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-226">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-227">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-227">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-228">
            <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-228">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31ffd-229">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-229">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-230">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-230">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(char obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : char -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="31ffd-231">An object to compare to this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-231">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-232">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-232">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-233">
            <see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-233">
              <see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-234">このメソッドを実装する、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりもわずかに向上<xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType>ボックス化を解除する必要はありませんので、`obj`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="31ffd-234">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> because it does not need to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="31ffd-235">An object to compare with this instance or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-235">An object to compare with this instance or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-236">Returns a value that indicates whether this instance is equal to a specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-236">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-237">
            <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-237">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-238">このメソッドによって実行される比較はこのインスタンスのエンコードされた値に基づいて、 `obj`、辞書の特性に限りません。</span><span class="sxs-lookup"><span data-stu-id="31ffd-238">The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-239">次のコード例を示します<xref:System.Char.Equals%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-239">The following code example demonstrates <xref:System.Char.Equals%2A>.</span></span>  
  
 [!code-cpp[System.Char.Equals#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Equals/CPP/equals.cpp#20)]
 [!code-csharp[System.Char.Equals#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Equals/CS/equals.cs#20)]
 [!code-vb[System.Char.Equals#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Equals/VB/equals.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="char.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-240">Returns the hash code for this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-240">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-241">A 32-bit signed integer hash code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-241">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-242">Converts a specified numeric Unicode character to a double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-242">Converts a specified numeric Unicode character to a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (c As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char c);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.char.GetNumericValue c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-243">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-243">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-244">Converts the specified numeric Unicode character to a double-precision floating point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-244">Converts the specified numeric Unicode character to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-245">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-245">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-246">`c`パラメーターである必要があります、<xref:System.Char>数値の形式です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-246">The `c` parameter must be the <xref:System.Char> representation of a numeric value.</span></span> <span data-ttu-id="31ffd-247">たとえば場合、`c`が「5」の場合、戻り値は 5 です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-247">For example, if `c` is "5", the return value is 5.</span></span> <span data-ttu-id="31ffd-248">ただし場合、 `c` "z"は、戻り値は-1.0。</span><span class="sxs-lookup"><span data-stu-id="31ffd-248">However, if `c` is "z", the return value is -1.0.</span></span>  
  
 <span data-ttu-id="31ffd-249">次のいずれかのメンバーである場合にのみ、文字が、関連付けられた数値の値を持つ<xref:System.Globalization.UnicodeCategory>カテゴリ: `DecimalDigitNumber`、 `LetterNumber`、または`OtherNumber`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-249">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="31ffd-250"><xref:System.Char.GetNumericValue%2A>メソッドと見なします`c`単一言語の文字に対応しており、その文字が 10 進数字に変換できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-250">The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="31ffd-251">ただし、Unicode 規格の一部の数値が 2 で表されます<xref:System.Char>サロゲート ペアを形成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31ffd-251">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="31ffd-252">たとえば、番号付けシステム エーゲは U +0 10133 を通じて 10107 U +0 のコード ポイントで構成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-252">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="31ffd-253">次の例では、 <xref:System.Char.ConvertFromUtf32%2A> AEGEAN 番号 1 を表す文字列をインスタンス化するメソッド。</span><span class="sxs-lookup"><span data-stu-id="31ffd-253">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="31ffd-254">例から出力として、<xref:System.Char.GetNumericValue%28System.Char%29>上位サロゲートまたは下位サロゲートのこの文字のいずれかが渡された場合、メソッドは-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-254">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]
 [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-255">次の例で<xref:System.Char.GetNumericValue%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-255">The following example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.char.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-256">A <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-256">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-257">The character position in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-257">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-258">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-258">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-259">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-259">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-260">`s`パラメーターが数値の文字列形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="31ffd-260">The `s` parameter must be the string representation of a numeric value.</span></span> <span data-ttu-id="31ffd-261">たとえば場合、位置にある文字`index`で`s`が「5」の場合、戻り値は 5 です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-261">For example, if the character at position `index` in `s` is "5", the return value is 5.</span></span> <span data-ttu-id="31ffd-262">ただし場合、文字位置にある`index`で`s`"z"は、戻り値は-1。</span><span class="sxs-lookup"><span data-stu-id="31ffd-262">However, if the character at position `index` in `s` is "z", the return value is -1.</span></span>  
  
 <span data-ttu-id="31ffd-263">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-263">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="31ffd-264">次のいずれかのメンバーである場合にのみ、文字が、関連付けられた数値の値を持つ<xref:System.Globalization.UnicodeCategory>カテゴリ: `DecimalDigitNumber`、 `LetterNumber`、または`OtherNumber`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-264">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="31ffd-265">場合、<xref:System.Char>オブジェクト位置にある`index`、有効なサロゲート ペアの最初の文字、<xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29>メソッドは、サロゲート ペアが数字を形成するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-265">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="31ffd-266">たとえば、番号付けシステム エーゲは U +0 10133 を通じて 10107 U +0 のコード ポイントで構成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-266">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="31ffd-267">次の例では、 <xref:System.Char.ConvertFromUtf32%2A> Aegean の個々 の数を表す文字列をインスタンス化するメソッド。</span><span class="sxs-lookup"><span data-stu-id="31ffd-267">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="31ffd-268">例から出力として、 <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> Aegean 数の上位サロゲート渡される場合、メソッドが適切な数値を返します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-268">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="31ffd-269">ただし、下位サロゲート、渡される場合メソッド分離に下位サロゲートのみを考慮し、-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-269">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]
 [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-270">次のコード例を示します<xref:System.Char.GetNumericValue%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-270">The following code example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-271">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-271">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-272">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-272">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="char.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-273">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-273">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-274">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-274">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-275">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-275">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (c As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char c);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-276">The Unicode character to categorize.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-276">The Unicode character to categorize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-277">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-277">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-278">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-278">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-279"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは常に返しません同じ<xref:System.Globalization.UnicodeCategory>値として、<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>メソッドの特定の文字をパラメーターとして渡されるとします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-279">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="31ffd-280"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>メソッドが現在のバージョンの Unicode 標準を反映するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="31ffd-280">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="31ffd-281">これに対し、ですが、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは通常、Unicode 規格の現在のバージョンを反映して、標準の以前のバージョンに基づく文字のカテゴリを返す可能性がありますまたはの順序で、現在の標準からとは異なるカテゴリを返す旧バージョンとの互換性を維持します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-281">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="31ffd-282">その結果、ことをお勧めを使用すること、<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>メソッドの代わりに<xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-282">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="31ffd-283">以降で、 [!INCLUDE[net_v462](~/includes/net-v462-md.md)]、Unicode 文字を分類に基づいて[Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-283">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="31ffd-284">.NET Framework のバージョンで、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]を[!INCLUDE[net_v461](~/includes/net-v461-md.md)]、その分類に基づいて[Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-284">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-285">次のコード例を示します<xref:System.Char.GetUnicodeCategory%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-285">The following code example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-286">A <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-286">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-287">The character position in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-287">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-288">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-288">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-289">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-289">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-290">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-290">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="31ffd-291"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは常に返しません同じ<xref:System.Globalization.UnicodeCategory>値として、<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>メソッドの特定の文字をパラメーターとして渡されるとします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-291">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="31ffd-292"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>メソッドが現在のバージョンの Unicode 標準を反映するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="31ffd-292">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="31ffd-293">これに対し、ですが、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは通常、Unicode 規格の現在のバージョンを反映して、標準の以前のバージョンに基づく文字のカテゴリを返す可能性がありますまたはの順序で、現在の標準からとは異なるカテゴリを返す旧バージョンとの互換性を維持します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-293">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="31ffd-294">その結果、ことをお勧めを使用すること、<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>メソッドの代わりに<xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-294">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="31ffd-295">以降で、 [!INCLUDE[net_v462](~/includes/net-v462-md.md)]、Unicode 文字を分類に基づいて[Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-295">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="31ffd-296">.NET Framework のバージョンで、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]を[!INCLUDE[net_v461](~/includes/net-v461-md.md)]、その分類に基づいて[Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-296">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-297">次の例で<xref:System.Char.GetUnicodeCategory%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-297">The following example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-298">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-298">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-299">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-299">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsControl">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-300">Indicates whether a specified Unicode character is categorized as a control character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-300">Indicates whether a specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-301">制御文字が書式設定および ACK、BEL、CR、FF、LF、VT. などその他の非印刷文字</span><span class="sxs-lookup"><span data-stu-id="31ffd-301">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="31ffd-302">Unicode 規格と制御文字を \U009F に \U0080 \U001F、\U007F でに \U0000 から、コード ポイントが割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-302">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="31ffd-303">Unicode 標準に従ってこれらの値は、使用がそれ以外の場合アプリケーションによって定義されている場合を除き、制御文字として解釈するは。</span><span class="sxs-lookup"><span data-stu-id="31ffd-303">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="31ffd-304">メンバーである有効なコントロール文字、<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-304">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(char c);" />
      <MemberSignature Language="F#" Value="static member IsControl : char -&gt; bool" Usage="System.char.IsControl c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-305">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-305">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-306">Indicates whether the specified Unicode character is categorized as a control character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-306">Indicates whether the specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-307">
            <see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-307">
              <see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-308">制御文字が書式設定および ACK、BEL、CR、FF、LF、VT. などその他の非印刷文字</span><span class="sxs-lookup"><span data-stu-id="31ffd-308">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="31ffd-309">T、Unicode 規格と制御文字を \U009F に \U0080 \U001F、\U007F でに \U0000 から、コード ポイントが割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-309">T The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="31ffd-310">Unicode 標準に従ってこれらの値は、使用がそれ以外の場合アプリケーションによって定義されている場合を除き、制御文字として解釈するは。</span><span class="sxs-lookup"><span data-stu-id="31ffd-310">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="31ffd-311">メンバーである有効なコントロール文字、<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-311">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-312">次の例では、各コントロールの文字の Unicode コード ポイントが一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-312">The following example lists the Unicode code point of each of the control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol1.cpp#1)]
 [!code-csharp[System.Char.IsControl#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl1.cs#1)]
 [!code-vb[System.Char.IsControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsControl : string * int -&gt; bool" Usage="System.char.IsControl (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-313">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-313">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-314">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-314">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-315">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-315">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-316">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-316">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-317">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-317">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="31ffd-318">制御文字が書式設定および ACK、BEL、CR、FF、LF、VT. などその他の非印刷文字</span><span class="sxs-lookup"><span data-stu-id="31ffd-318">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="31ffd-319">Unicode 規格と制御文字を \U009F に \U0080 \U001F、\U007F でに \U0000 から、コード ポイントが割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-319">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="31ffd-320">Unicode 標準に従ってこれらの値は、使用がそれ以外の場合アプリケーションによって定義されている場合を除き、制御文字として解釈するは。</span><span class="sxs-lookup"><span data-stu-id="31ffd-320">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="31ffd-321">メンバーである有効なコントロール文字、<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-321">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-322">次の例では、文字列の文字を列挙し、いずれかが制御文字であるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-322">The following example enumerates the characters in a string and determines whether any are control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol2.cpp#2)]
 [!code-csharp[System.Char.IsControl#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl2.cs#2)]
 [!code-vb[System.Char.IsControl#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-323">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-323">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-324">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-324">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-325">Indicates whether a Unicode character is categorized as a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-325">Indicates whether a Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-326">有効な数字のメンバーである、<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-326">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsDigit : char -&gt; bool" Usage="System.char.IsDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-327">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-327">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-328">Indicates whether the specified Unicode character is categorized as a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-328">Indicates whether the specified Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-329">
            <see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-329">
              <see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-330">このメソッドを判断するかどうか、<xref:System.Char>基数 10 の数字です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-330">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="31ffd-331">これとは対照的<xref:System.Char.IsNumber%2A>を決定するかどうか、`Char`数値 Unicode カテゴリのです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-331">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category.</span></span> <span data-ttu-id="31ffd-332">番号には、分数、添字、上付き文字、ローマ数字、通貨分子、丸付き数字、およびスクリプトに固有の数字などの文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-332">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="31ffd-333">有効な数字のメンバーである、<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-333">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-334">次のコード例を示します<xref:System.Char.IsDigit%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-334">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsDigit : string * int -&gt; bool" Usage="System.char.IsDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-335">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-335">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-336">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-336">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-337">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-337">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-338">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-338">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-339">このメソッドを判断するかどうか、<xref:System.Char>基数 10 の数字です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-339">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="31ffd-340">これとは対照的<xref:System.Char.IsNumber%2A>を決定するかどうか、<xref:System.Char>数値 Unicode カテゴリのです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-340">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="31ffd-341">番号には、分数、添字、上付き文字、ローマ数字、通貨分子、丸付き数字、およびスクリプトに固有の数字などの文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-341">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="31ffd-342">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-342">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="31ffd-343">有効な数字のメンバーである、<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-343">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-344">次のコード例を示します<xref:System.Char.IsDigit%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-344">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-345">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-345">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-346">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-346">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsHighSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-347">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-347">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : char -&gt; bool" Usage="System.char.IsHighSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-348">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-348">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-349">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-349">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-350">
            <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-350">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-351">16 ビットのコード ポイントを使用して単一の文字を表す、に加えて utf-16 エンコード文字が許可されて抽象表現されている 2 つの 16 ビットのコード ポイントを使用して、これと呼ばれるサロゲート ペア。</span><span class="sxs-lookup"><span data-stu-id="31ffd-351">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="31ffd-352">このペアの最初の要素は、高のサロゲートです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-352">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="31ffd-353">そのコード ポイントの範囲は、u+d800 から U+DBFF です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-353">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="31ffd-354">個々 のサロゲートはそれ自体以外の解釈がありません。サロゲート ペアの一部として使用する場合にのみ意味がします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-354">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-355">次のコード例を示しています、 <xref:System.Char.IsHighSurrogate%2A>、 <xref:System.Char.IsLowSurrogate%2A>、および<xref:System.Char.IsSurrogatePair%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-355">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : string * int -&gt; bool" Usage="System.char.IsHighSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-356">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-356">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-357">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-357">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-358">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-358">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-359">
            <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-359">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-360">`index`パラメーターは 0 から始まる。</span><span class="sxs-lookup"><span data-stu-id="31ffd-360">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="31ffd-361">16 ビットのコード ポイントを使用して単一の文字を表す、に加えて utf-16 エンコード文字が許可されて抽象表現されている 2 つの 16 ビットのコード ポイントを使用して、これと呼ばれるサロゲート ペア。</span><span class="sxs-lookup"><span data-stu-id="31ffd-361">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="31ffd-362">このペアの最初の要素は、高のサロゲートです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-362">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="31ffd-363">そのコード ポイントの範囲は、u+d800 から U+DBFF です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-363">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="31ffd-364">個々 のサロゲートはそれ自体以外の解釈がありません。サロゲート ペアの一部として使用する場合にのみ意味がします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-364">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-365">次のコード例を示しています、 <xref:System.Char.IsHighSurrogate%2A>、 <xref:System.Char.IsLowSurrogate%2A>、および<xref:System.Char.IsSurrogatePair%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-365">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-366">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-366">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-367">
            <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-367">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-368">Indicates whether a Unicode character is categorized as a Unicode letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-368">Indicates whether a Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-369">このメソッドを判断するかどうか、 <xref:System.Char> Unicode 文字の任意のカテゴリのメンバーであります。</span><span class="sxs-lookup"><span data-stu-id="31ffd-369">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="31ffd-370">Unicode 文字を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-370">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="31ffd-371">U+0041 (LATIN CAPITAL LETTER A) U +0 005A 経由などの大文字 (LATIN CAPITAL LETTER Z)、または U +0 0400 (キリル CAPITAL LETTER IE WITH GRAVE) U +0 042F (キリル文字の大文字文字で表されるや) を通じてします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-371">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="31ffd-372">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-372">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="31ffd-373">U +0 0061 (LATIN SMALL LETTER A) U +0 007A 経由などの小文字 (ラテン小さい文字 Z)、または U +0 03AC (ギリシャ語小さい文字アルファ使用トノス) U +0 03CE を通じて (ギリシャ語小さい文字オメガでトノス)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-373">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="31ffd-374">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-374">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="31ffd-375">タイトルの大文字と小文字、U + 01 C 5 など (ラテン CAPITAL LETTER D の小さい文字 Z でキャロン) または U +0 1FFC (ギリシャ語 CAPITAL LETTER オメガで PROSGEGRAMMENI)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-375">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="31ffd-376">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-376">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="31ffd-377">U +0 02B0 などの修飾子 (修飾子文字の小さな H) U +0 02C 1 (修飾子文字 REVERSED GLOTTAL 停止)、または U +0 1D2C (修飾子文字の大文字 A) U +0 1D 61 (修飾子文字の小さなカイ) を通じてします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-377">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="31ffd-378">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-378">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="31ffd-379">U + 05 D 0 (ヘブライ語文字 ALEF) U +0 05EA を通じてなどその他の文字 (ヘブライ語文字 TAV)、U +0 0621 (アラビア語文字 HAMZA) U +0 063A を通じて (アラビア語文字 GHAIN)、または U +0 4E00 (\<CJK 漢字、最初 >) U +0 9 FC 3 を通じて (\<CJK 漢字、最後>)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-379">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="31ffd-380">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-380">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetter : char -&gt; bool" Usage="System.char.IsLetter c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-381">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-381">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-382">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-382">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-383">
            <see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-383">
              <see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-384">このメソッドを判断するかどうか、 <xref:System.Char> Unicode 文字の任意のカテゴリのメンバーであります。</span><span class="sxs-lookup"><span data-stu-id="31ffd-384">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="31ffd-385">Unicode 文字を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-385">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="31ffd-386">U+0041 (LATIN CAPITAL LETTER A) U +0 005A 経由などの大文字 (LATIN CAPITAL LETTER Z)、または U +0 0400 (キリル CAPITAL LETTER IE WITH GRAVE) U +0 042F (キリル文字の大文字文字で表されるや) を通じてします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-386">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="31ffd-387">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-387">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="31ffd-388">U +0 0061 (LATIN SMALL LETTER A) U +0 007A 経由などの小文字 (ラテン小さい文字 Z)、または U +0 03AC (ギリシャ語小さい文字アルファ使用トノス) U +0 03CE を通じて (ギリシャ語小さい文字オメガでトノス)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-388">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="31ffd-389">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-389">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="31ffd-390">タイトルの大文字と小文字、U + 01 C 5 など (ラテン CAPITAL LETTER D の小さい文字 Z でキャロン) または U +0 1FFC (ギリシャ語 CAPITAL LETTER オメガで PROSGEGRAMMENI)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-390">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="31ffd-391">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-391">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="31ffd-392">U +0 02B0 などの修飾子 (修飾子文字の小さな H) U +0 02C 1 (修飾子文字 REVERSED GLOTTAL 停止)、または U +0 1D2C (修飾子文字の大文字 A) U +0 1D 61 (修飾子文字の小さなカイ) を通じてします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-392">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="31ffd-393">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-393">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="31ffd-394">U + 05 D 0 (ヘブライ語文字 ALEF) U +0 05EA を通じてなどその他の文字 (ヘブライ語文字 TAV)、U +0 0621 (アラビア語文字 HAMZA) U +0 063A を通じて (アラビア語文字 GHAIN)、または U +0 4E00 (\<CJK 漢字、最初 >) U +0 9 FC 3 を通じて (\<CJK 漢字、最後>)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-394">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="31ffd-395">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-395">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-396">次のコード例を示します<xref:System.Char.IsLetter%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-396">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetter : string * int -&gt; bool" Usage="System.char.IsLetter (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-397">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-397">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-398">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-398">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-399">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-399">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-400">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-400">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-401">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-401">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="31ffd-402">このメソッドは、文字列で指定したインデックス位置にある文字の Unicode 文字の任意のカテゴリのメンバーであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-402">This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.</span></span> <span data-ttu-id="31ffd-403">Unicode 文字を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-403">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="31ffd-404">U+0041 (LATIN CAPITAL LETTER A) U +0 005A 経由などの大文字 (LATIN CAPITAL LETTER Z)、または U +0 0400 (キリル CAPITAL LETTER IE WITH GRAVE) U +0 042F (キリル文字の大文字文字で表されるや) を通じてします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-404">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="31ffd-405">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-405">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="31ffd-406">U +0 0061 (LATIN SMALL LETTER A) U +0 007A 経由などの小文字 (ラテン小さい文字 Z)、または U +0 03AC (ギリシャ語小さい文字アルファ使用トノス) U +0 03CE を通じて (ギリシャ語小さい文字オメガでトノス)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-406">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="31ffd-407">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-407">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="31ffd-408">タイトルの大文字と小文字、U + 01 C 5 など (ラテン CAPITAL LETTER D の小さい文字 Z でキャロン) または U +0 1FFC (ギリシャ語 CAPITAL LETTER オメガで PROSGEGRAMMENI)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-408">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="31ffd-409">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-409">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="31ffd-410">U +0 02B0 などの修飾子 (修飾子文字の小さな H) U +0 02C 1 (修飾子文字 REVERSED GLOTTAL 停止)、または U +0 1D2C (修飾子文字の大文字 A) U +0 1D 61 (修飾子文字の小さなカイ) を通じてします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-410">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="31ffd-411">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-411">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="31ffd-412">U + 05 D 0 (ヘブライ語文字 ALEF) U +0 05EA を通じてなどその他の文字 (ヘブライ語文字 TAV)、U +0 0621 (アラビア語文字 HAMZA) U +0 063A を通じて (アラビア語文字 GHAIN)、または U +0 4E00 (\<CJK 漢字、最初 >) U +0 9 FC 3 を通じて (\<CJK 漢字、最後>)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-412">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="31ffd-413">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-413">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-414">次のコード例を示します<xref:System.Char.IsLetter%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-414">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-415">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-415">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-416">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-416">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetterOrDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-417">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-417">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-418">有効な文字および 10 進数では、次のカテゴリのメンバーである<xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`、 `LowercaseLetter`、 `TitlecaseLetter`、 `ModifierLetter`、 `OtherLetter`、または`DecimalDigitNumber`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-418">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : char -&gt; bool" Usage="System.char.IsLetterOrDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-419">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-419">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-420">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-420">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-421">
            <see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-421">
              <see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-422">有効な文字および 10 進数では、次のカテゴリのメンバーである<xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`、 `LowercaseLetter`、 `TitlecaseLetter`、 `ModifierLetter`、 `OtherLetter`、または`DecimalDigitNumber`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-422">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-423">次のコード例を示します<xref:System.Char.IsLetterOrDigit%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-423">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : string * int -&gt; bool" Usage="System.char.IsLetterOrDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-424">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-424">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-425">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-425">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-426">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-426">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-427">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-427">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-428">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-428">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="31ffd-429">有効な文字および 10 進数では、次のカテゴリのメンバーである<xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`、 `LowercaseLetter`、 `TitlecaseLetter`、 `ModifierLetter`、 `OtherLetter`、または`DecimalDigitNumber`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-429">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-430">次のコード例を示します<xref:System.Char.IsLetterOrDigit%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-430">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-431">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-431">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-432">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-432">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-433">Indicates whether a Unicode character is categorized as a lowercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-433">Indicates whether a Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(char c);" />
      <MemberSignature Language="F#" Value="static member IsLower : char -&gt; bool" Usage="System.char.IsLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-434">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-434">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-435">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-435">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-436">
            <see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-436">
              <see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-437">次のカテゴリのメンバーである有効な小文字<xref:System.Globalization.UnicodeCategory>:`LowercaseLetter`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-437">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-438">次のコード例を示します<xref:System.Char.IsLower%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-438">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLower : string * int -&gt; bool" Usage="System.char.IsLower (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-439">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-439">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-440">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-440">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-441">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-441">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-442">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-442">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-443">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-443">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="31ffd-444">次のカテゴリのメンバーである有効な小文字<xref:System.Globalization.UnicodeCategory>:`LowercaseLetter`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-444">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-445">次のコード例を示します<xref:System.Char.IsLower%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-445">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-446">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-446">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-447">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-447">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLowSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-448">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-448">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : char -&gt; bool" Usage="System.char.IsLowSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-449">The character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-449">The character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-450">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-450">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-451">
            <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-451">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-452">16 ビットのコード ポイントを使用して単一の文字を表す、に加えて utf-16 エンコード文字が許可されて抽象表現されている 2 つの 16 ビットのコード ポイントを使用して、これと呼ばれるサロゲート ペア。</span><span class="sxs-lookup"><span data-stu-id="31ffd-452">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="31ffd-453">このペアの 2 番目の要素は、下位のサロゲートです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-453">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="31ffd-454">そのコード ポイントの範囲は u+dc00 から U+DFFF です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-454">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="31ffd-455">個々 のサロゲートはそれ自体以外の解釈がありません。サロゲート ペアの一部として使用する場合にのみ意味がします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-455">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-456">次のコード例を示しています、 <xref:System.Char.IsHighSurrogate%2A>、 <xref:System.Char.IsLowSurrogate%2A>、および<xref:System.Char.IsSurrogatePair%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-456">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : string * int -&gt; bool" Usage="System.char.IsLowSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-457">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-457">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-458">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-458">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-459">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-459">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-460">
            <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-460">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-461">`index`パラメーターは 0 から始まる。</span><span class="sxs-lookup"><span data-stu-id="31ffd-461">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="31ffd-462">16 ビットのコード ポイントを使用して単一の文字を表す、に加えて utf-16 エンコード文字が許可されて抽象表現されている 2 つの 16 ビットのコード ポイントを使用して、これと呼ばれるサロゲート ペア。</span><span class="sxs-lookup"><span data-stu-id="31ffd-462">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="31ffd-463">このペアの 2 番目の要素は、下位のサロゲートです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-463">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="31ffd-464">そのコード ポイントの範囲は u+dc00 から U+DFFF です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-464">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="31ffd-465">個々 のサロゲートはそれ自体以外の解釈がありません。サロゲート ペアの一部として使用する場合にのみ意味がします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-465">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-466">次のコード例を示しています、 <xref:System.Char.IsHighSurrogate%2A>、 <xref:System.Char.IsLowSurrogate%2A>、および<xref:System.Char.IsSurrogatePair%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-466">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-467">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-467">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-468">
            <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-468">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNumber">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-469">Indicates whether a Unicode character is categorized as a number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-469">Indicates whether a Unicode character is categorized as a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(char c);" />
      <MemberSignature Language="F#" Value="static member IsNumber : char -&gt; bool" Usage="System.char.IsNumber c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-470">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-470">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-471">Indicates whether the specified Unicode character is categorized as a number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-471">Indicates whether the specified Unicode character is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-472">
            <see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-472">
              <see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-473">このメソッドを判断するかどうか、<xref:System.Char>数値 Unicode カテゴリのです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-473">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="31ffd-474">桁の数字のほかに、番号には、文字、分数、添字、上付き文字、ローマ数字、通貨分子、および丸付き数字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-474">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="31ffd-475">このメソッドとは対照的、<xref:System.Char.IsDigit%2A>を決定するメソッドかどうか、<xref:System.Char>基数 10 の数字です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-475">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31ffd-476"><xref:System.Char.IsNumber%28System.Char%29>メソッドは、文字列が (たとえば、メソッドを呼び出して、文字列内の各文字の) の数値の文字から成るかどうかを決定するものではありません。</span><span class="sxs-lookup"><span data-stu-id="31ffd-476">The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="31ffd-477">呼び出しのオーバー ロードのいずれかの文字列が数値文字で構成されているかどうかを判断するのには`TryParse`メソッド (など<xref:System.Int32.TryParse%2A?displayProperty=nameWithType>または<xref:System.Double.TryParse%2A?displayProperty=nameWithType>整数または浮動小数点型のです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-477">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="31ffd-478">有効な数字のメンバーである、 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>、 <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>、または<xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-478">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="31ffd-479"><xref:System.Char.IsNumber%28System.Char%29>メソッドと見なします`c`単一言語の文字に対応しており、その文字が数字を表すかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-479">The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number.</span></span> <span data-ttu-id="31ffd-480">ただし、Unicode 規格の一部の数値が 2 で表されます<xref:System.Char>サロゲート ペアを形成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31ffd-480">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="31ffd-481">たとえば、番号付けシステム エーゲは U +0 10133 を通じて 10107 U +0 のコード ポイントで構成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-481">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="31ffd-482">次の例では、 <xref:System.Char.ConvertFromUtf32%2A> AEGEAN 番号 1 を表す文字列をインスタンス化するメソッド。</span><span class="sxs-lookup"><span data-stu-id="31ffd-482">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="31ffd-483">例から出力として、<xref:System.Char.IsNumber%28System.Char%29>メソッドを返します。`false`上位サロゲートまたは下位サロゲートのこの文字のいずれか渡されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-483">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]
 [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-484">次の例で<xref:System.Char.IsNumber%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-484">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsNumber : string * int -&gt; bool" Usage="System.char.IsNumber (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-485">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-485">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-486">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-486">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-487">Indicates whether the character at the specified position in a specified string is categorized as a number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-487">Indicates whether the character at the specified position in a specified string is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-488">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-488">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-489">このメソッドを判断するかどうか、<xref:System.Char>数値 Unicode カテゴリのです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-489">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="31ffd-490">桁の数字のほかに、番号には、文字、分数、添字、上付き文字、ローマ数字、通貨分子、および丸付き数字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-490">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="31ffd-491">このメソッドとは対照的、<xref:System.Char.IsDigit%2A>を決定するメソッドかどうか、<xref:System.Char>基数 10 の数字です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-491">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
 <span data-ttu-id="31ffd-492">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-492">Character positions in a string are indexed starting from zero.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31ffd-493"><xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29>メソッドは、文字列が (たとえば、メソッドを呼び出して、文字列内の各文字の) の数値の文字から成るかどうかを決定するものではありません。</span><span class="sxs-lookup"><span data-stu-id="31ffd-493">The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="31ffd-494">呼び出しのオーバー ロードのいずれかの文字列が数値文字で構成されているかどうかを判断するのには`TryParse`メソッド (など<xref:System.Int32.TryParse%2A?displayProperty=nameWithType>または<xref:System.Double.TryParse%2A?displayProperty=nameWithType>整数または浮動小数点型のです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-494">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="31ffd-495">有効な数字のメンバーである、 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>、 <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>、または<xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-495">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="31ffd-496">場合、<xref:System.Char>オブジェクト位置にある`index`、有効なサロゲート ペアの最初の文字、<xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29>メソッドは、サロゲート ペアが数字を形成するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-496">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="31ffd-497">たとえば、番号付けシステム エーゲは U +0 10133 を通じて 10107 U +0 のコード ポイントで構成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-497">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="31ffd-498">次の例では、 <xref:System.Char.ConvertFromUtf32%2A> AEGEAN 番号 1 を表す文字列をインスタンス化するメソッド。</span><span class="sxs-lookup"><span data-stu-id="31ffd-498">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="31ffd-499">例から出力として、<xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29>メソッドを返します。`true`渡される上位サロゲート AEGEAN 番号 1 の場合。</span><span class="sxs-lookup"><span data-stu-id="31ffd-499">As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="31ffd-500">ただし、これには、下位サロゲートが渡された場合、下位サロゲートのカテゴリのみを考慮し、返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-500">However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]
 [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-501">次の例で<xref:System.Char.IsNumber%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-501">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-502">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-502">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-503">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-503">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPunctuation">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-504">Indicates whether a Unicode character is categorized as a punctuation mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-504">Indicates whether a Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-505">有効な区切り記号では、次のカテゴリのメンバーである<xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`、 `DashPunctuation`、 `OpenPunctuation`、 `ClosePunctuation`、 `InititalQuotePunctuation`、 `FinalQuotePunctuation`、または`OtherPunctuation`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-505">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="31ffd-506">次の表に、Unicode コード ポイントの文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-506">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="31ffd-507">U + U +0 0023 に 0021</span><span class="sxs-lookup"><span data-stu-id="31ffd-507">U+0021 to U+0023</span></span>|<span data-ttu-id="31ffd-508">U +0 060 C と U +0 060 D</span><span class="sxs-lookup"><span data-stu-id="31ffd-508">U+060C and U+060D</span></span>|<span data-ttu-id="31ffd-509">U + U +0 180A を 1800</span><span class="sxs-lookup"><span data-stu-id="31ffd-509">U+1800 to U+180A</span></span>|<span data-ttu-id="31ffd-510">U + U +0 301F に 3014</span><span class="sxs-lookup"><span data-stu-id="31ffd-510">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="31ffd-511">U + U +002 に 0025</span><span class="sxs-lookup"><span data-stu-id="31ffd-511">U+0025 to U+002A</span></span>|<span data-ttu-id="31ffd-512">U+061B</span><span class="sxs-lookup"><span data-stu-id="31ffd-512">U+061B</span></span>|<span data-ttu-id="31ffd-513">U+1944 および u+1945</span><span class="sxs-lookup"><span data-stu-id="31ffd-513">U+1944 and U+1945</span></span>|<span data-ttu-id="31ffd-514">U+3030</span><span class="sxs-lookup"><span data-stu-id="31ffd-514">U+3030</span></span>|  
|<span data-ttu-id="31ffd-515">U + 002 C U +0 002F</span><span class="sxs-lookup"><span data-stu-id="31ffd-515">U+002C to U+002F</span></span>|<span data-ttu-id="31ffd-516">U +0 061E と U +0 061F</span><span class="sxs-lookup"><span data-stu-id="31ffd-516">U+061E and U+061F</span></span>|<span data-ttu-id="31ffd-517">U +0 19DE と U +0 19DF</span><span class="sxs-lookup"><span data-stu-id="31ffd-517">U+19DE and U+19DF</span></span>|<span data-ttu-id="31ffd-518">U +0 303D</span><span class="sxs-lookup"><span data-stu-id="31ffd-518">U+303D</span></span>|  
|<span data-ttu-id="31ffd-519">U +0 003A と U +0 003B</span><span class="sxs-lookup"><span data-stu-id="31ffd-519">U+003A and U+003B</span></span>|<span data-ttu-id="31ffd-520">U + U +0 方位 066 D に 066A</span><span class="sxs-lookup"><span data-stu-id="31ffd-520">U+066A to U+066D</span></span>|<span data-ttu-id="31ffd-521">U +0 1A1E と U +0 1A1F</span><span class="sxs-lookup"><span data-stu-id="31ffd-521">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="31ffd-522">U +0 30A0</span><span class="sxs-lookup"><span data-stu-id="31ffd-522">U+30A0</span></span>|  
|<span data-ttu-id="31ffd-523">U +0 003F と U +0 0040</span><span class="sxs-lookup"><span data-stu-id="31ffd-523">U+003F and U+0040</span></span>|<span data-ttu-id="31ffd-524">U+06D4</span><span class="sxs-lookup"><span data-stu-id="31ffd-524">U+06D4</span></span>|<span data-ttu-id="31ffd-525">U + U +0 1B60 に 1B5A</span><span class="sxs-lookup"><span data-stu-id="31ffd-525">U+1B5A to U+1B60</span></span>|<span data-ttu-id="31ffd-526">U +0 30FB</span><span class="sxs-lookup"><span data-stu-id="31ffd-526">U+30FB</span></span>|  
|<span data-ttu-id="31ffd-527">U + U +0 005-D を 005B</span><span class="sxs-lookup"><span data-stu-id="31ffd-527">U+005B to U+005D</span></span>|<span data-ttu-id="31ffd-528">U + U +0 070 D に 0700</span><span class="sxs-lookup"><span data-stu-id="31ffd-528">U+0700 to U+070D</span></span>|<span data-ttu-id="31ffd-529">U + U +0 2027 に 2010</span><span class="sxs-lookup"><span data-stu-id="31ffd-529">U+2010 to U+2027</span></span>|<span data-ttu-id="31ffd-530">U + A874 U + A877 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-530">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="31ffd-531">U+005F</span><span class="sxs-lookup"><span data-stu-id="31ffd-531">U+005F</span></span>|<span data-ttu-id="31ffd-532">U + U +0 07F9 に 07F7</span><span class="sxs-lookup"><span data-stu-id="31ffd-532">U+07F7 to U+07F9</span></span>|<span data-ttu-id="31ffd-533">U+2030 U +0 2043 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-533">U+2030 to U+2043</span></span>|<span data-ttu-id="31ffd-534">U + FD3E と U + FD3F</span><span class="sxs-lookup"><span data-stu-id="31ffd-534">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="31ffd-535">U+007B</span><span class="sxs-lookup"><span data-stu-id="31ffd-535">U+007B</span></span>|<span data-ttu-id="31ffd-536">U+0964 および u+0965</span><span class="sxs-lookup"><span data-stu-id="31ffd-536">U+0964 and U+0965</span></span>|<span data-ttu-id="31ffd-537">U + U +0 2051 に 2045</span><span class="sxs-lookup"><span data-stu-id="31ffd-537">U+2045 to U+2051</span></span>|<span data-ttu-id="31ffd-538">U + FE10 U + FE19 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-538">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="31ffd-539">U+007D</span><span class="sxs-lookup"><span data-stu-id="31ffd-539">U+007D</span></span>|<span data-ttu-id="31ffd-540">U+0970</span><span class="sxs-lookup"><span data-stu-id="31ffd-540">U+0970</span></span>|<span data-ttu-id="31ffd-541">U + U +0 205E に 2053</span><span class="sxs-lookup"><span data-stu-id="31ffd-541">U+2053 to U+205E</span></span>|<span data-ttu-id="31ffd-542">U + FE30 U + FE52 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-542">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="31ffd-543">U+00A1</span><span class="sxs-lookup"><span data-stu-id="31ffd-543">U+00A1</span></span>|<span data-ttu-id="31ffd-544">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="31ffd-544">U+0DF4</span></span>|<span data-ttu-id="31ffd-545">U +0 207 D と U +0 207E</span><span class="sxs-lookup"><span data-stu-id="31ffd-545">U+207D and  U+207E</span></span>|<span data-ttu-id="31ffd-546">U + FE54 U + FE61 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-546">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="31ffd-547">U+00AB</span><span class="sxs-lookup"><span data-stu-id="31ffd-547">U+00AB</span></span>|<span data-ttu-id="31ffd-548">U + U +0 0E5B に 0E4F</span><span class="sxs-lookup"><span data-stu-id="31ffd-548">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="31ffd-549">U +0 208 D と U +0 208E</span><span class="sxs-lookup"><span data-stu-id="31ffd-549">U+208D and U+208E</span></span>|<span data-ttu-id="31ffd-550">U+FE63</span><span class="sxs-lookup"><span data-stu-id="31ffd-550">U+FE63</span></span>|  
|<span data-ttu-id="31ffd-551">U +0 00AD</span><span class="sxs-lookup"><span data-stu-id="31ffd-551">U+00AD</span></span>|<span data-ttu-id="31ffd-552">U + U +0 0F12 に 0F04</span><span class="sxs-lookup"><span data-stu-id="31ffd-552">U+0F04 to U+0F12</span></span>|<span data-ttu-id="31ffd-553">U +0 の 2329 と 232A</span><span class="sxs-lookup"><span data-stu-id="31ffd-553">U+2329 and U+232A</span></span>|<span data-ttu-id="31ffd-554">U+FE68</span><span class="sxs-lookup"><span data-stu-id="31ffd-554">U+FE68</span></span>|  
|<span data-ttu-id="31ffd-555">U+00B7</span><span class="sxs-lookup"><span data-stu-id="31ffd-555">U+00B7</span></span>|<span data-ttu-id="31ffd-556">U + U +0 0F3D に 0F3A</span><span class="sxs-lookup"><span data-stu-id="31ffd-556">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="31ffd-557">U + U +0 2775 に 2768</span><span class="sxs-lookup"><span data-stu-id="31ffd-557">U+2768 to U+2775</span></span>|<span data-ttu-id="31ffd-558">U + FE6A と U + FE6B</span><span class="sxs-lookup"><span data-stu-id="31ffd-558">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="31ffd-559">U +0 00BB</span><span class="sxs-lookup"><span data-stu-id="31ffd-559">U+00BB</span></span>|<span data-ttu-id="31ffd-560">U+0F85</span><span class="sxs-lookup"><span data-stu-id="31ffd-560">U+0F85</span></span>|<span data-ttu-id="31ffd-561">U +0 27C 6 に U +0 27C 5</span><span class="sxs-lookup"><span data-stu-id="31ffd-561">U+27C5 to U+27C6</span></span>|<span data-ttu-id="31ffd-562">U + FF03 に U + ff 01</span><span class="sxs-lookup"><span data-stu-id="31ffd-562">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="31ffd-563">U +0 00BF</span><span class="sxs-lookup"><span data-stu-id="31ffd-563">U+00BF</span></span>|<span data-ttu-id="31ffd-564">U +0 0FD0 と U +0 0FD1</span><span class="sxs-lookup"><span data-stu-id="31ffd-564">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="31ffd-565">U + U +0 27EB に 27E6</span><span class="sxs-lookup"><span data-stu-id="31ffd-565">U+27E6 to U+27EB</span></span>|<span data-ttu-id="31ffd-566">U + FF05 U + FF0A に</span><span class="sxs-lookup"><span data-stu-id="31ffd-566">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="31ffd-567">U+037E</span><span class="sxs-lookup"><span data-stu-id="31ffd-567">U+037E</span></span>|<span data-ttu-id="31ffd-568">U + U +0 104F に 104A</span><span class="sxs-lookup"><span data-stu-id="31ffd-568">U+104A to U+104F</span></span>|<span data-ttu-id="31ffd-569">U + U +0 2998 に 2983</span><span class="sxs-lookup"><span data-stu-id="31ffd-569">U+2983 to U+2998</span></span>|<span data-ttu-id="31ffd-570">U + FF0C U + FF0F に</span><span class="sxs-lookup"><span data-stu-id="31ffd-570">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="31ffd-571">U+0387</span><span class="sxs-lookup"><span data-stu-id="31ffd-571">U+0387</span></span>|<span data-ttu-id="31ffd-572">U +0 10FB</span><span class="sxs-lookup"><span data-stu-id="31ffd-572">U+10FB</span></span>|<span data-ttu-id="31ffd-573">U +0 29D 8 U +0 29DB を</span><span class="sxs-lookup"><span data-stu-id="31ffd-573">U+29D8 to U+29DB</span></span>|<span data-ttu-id="31ffd-574">U + FF1A と U + FF1B</span><span class="sxs-lookup"><span data-stu-id="31ffd-574">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="31ffd-575">U + U +0 055F に 055A</span><span class="sxs-lookup"><span data-stu-id="31ffd-575">U+055A to U+055F</span></span>|<span data-ttu-id="31ffd-576">U + U +0 1368 に 1361</span><span class="sxs-lookup"><span data-stu-id="31ffd-576">U+1361 to U+1368</span></span>|<span data-ttu-id="31ffd-577">U +0 29 FC と U +0 29FD</span><span class="sxs-lookup"><span data-stu-id="31ffd-577">U+29FC and U+29FD</span></span>|<span data-ttu-id="31ffd-578">U + FF1F と U + FF20</span><span class="sxs-lookup"><span data-stu-id="31ffd-578">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="31ffd-579">U +0 の 0589 と 058A</span><span class="sxs-lookup"><span data-stu-id="31ffd-579">U+0589 and U+058A</span></span>|<span data-ttu-id="31ffd-580">U +0 166 D と U +0 166E</span><span class="sxs-lookup"><span data-stu-id="31ffd-580">U+166D and U+166E</span></span>|<span data-ttu-id="31ffd-581">U + U +0 2CFC に 2CF9</span><span class="sxs-lookup"><span data-stu-id="31ffd-581">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="31ffd-582">U + FF3B U + FF3D に</span><span class="sxs-lookup"><span data-stu-id="31ffd-582">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="31ffd-583">U +0 05BE</span><span class="sxs-lookup"><span data-stu-id="31ffd-583">U+05BE</span></span>|<span data-ttu-id="31ffd-584">U +0 169B と U +0 169 C</span><span class="sxs-lookup"><span data-stu-id="31ffd-584">U+169B and U+169C</span></span>|<span data-ttu-id="31ffd-585">U +0 2CFE と U +0 2CFF</span><span class="sxs-lookup"><span data-stu-id="31ffd-585">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="31ffd-586">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="31ffd-586">U+FF3F</span></span>|  
|<span data-ttu-id="31ffd-587">U+05C0</span><span class="sxs-lookup"><span data-stu-id="31ffd-587">U+05C0</span></span>|<span data-ttu-id="31ffd-588">U + U +0 16ED に 16EB</span><span class="sxs-lookup"><span data-stu-id="31ffd-588">U+16EB to U+16ED</span></span>|<span data-ttu-id="31ffd-589">U + U +0 2E17 に 2E00</span><span class="sxs-lookup"><span data-stu-id="31ffd-589">U+2E00 to U+2E17</span></span>|<span data-ttu-id="31ffd-590">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="31ffd-590">U+FF5B</span></span>|  
|<span data-ttu-id="31ffd-591">U+05C3</span><span class="sxs-lookup"><span data-stu-id="31ffd-591">U+05C3</span></span>|<span data-ttu-id="31ffd-592">U+1735 および u+1736</span><span class="sxs-lookup"><span data-stu-id="31ffd-592">U+1735 and U+1736</span></span>|<span data-ttu-id="31ffd-593">U +0 2E1C と U +0 2E1D</span><span class="sxs-lookup"><span data-stu-id="31ffd-593">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="31ffd-594">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="31ffd-594">U+FF5D</span></span>|  
|<span data-ttu-id="31ffd-595">U+05C6</span><span class="sxs-lookup"><span data-stu-id="31ffd-595">U+05C6</span></span>|<span data-ttu-id="31ffd-596">U +0 17D 4 U +0 17D 6</span><span class="sxs-lookup"><span data-stu-id="31ffd-596">U+17D4 to U+17D6</span></span>|<span data-ttu-id="31ffd-597">U + U +0 3003 に 3001</span><span class="sxs-lookup"><span data-stu-id="31ffd-597">U+3001 to U+3003</span></span>|<span data-ttu-id="31ffd-598">U + FF5F U + FF65 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-598">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="31ffd-599">U +0 05F3 と U +0 05F4</span><span class="sxs-lookup"><span data-stu-id="31ffd-599">U+05F3 and U+05F4</span></span>|<span data-ttu-id="31ffd-600">U +0 17D 8 U +0 17DA を</span><span class="sxs-lookup"><span data-stu-id="31ffd-600">U+17D8 to U+17DA</span></span>|<span data-ttu-id="31ffd-601">U + U +0 3011 に 3008</span><span class="sxs-lookup"><span data-stu-id="31ffd-601">U+3008 to U+3011</span></span>||  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(char c);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : char -&gt; bool" Usage="System.char.IsPunctuation c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-602">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-602">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-603">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-603">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-604">
            <see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-604">
              <see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-605">有効な区切り記号では、次のカテゴリのメンバーである<xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`、 `DashPunctuation`、 `OpenPunctuation`、 `ClosePunctuation`、 `InititalQuotePunctuation`、 `FinalQuotePunctuation`、または`OtherPunctuation`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-605">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="31ffd-606">次の表に、Unicode コード ポイントの文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-606">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="31ffd-607">U + U +0 0023 に 0021</span><span class="sxs-lookup"><span data-stu-id="31ffd-607">U+0021 to U+0023</span></span>|<span data-ttu-id="31ffd-608">U +0 060 C と U +0 060 D</span><span class="sxs-lookup"><span data-stu-id="31ffd-608">U+060C and U+060D</span></span>|<span data-ttu-id="31ffd-609">U + U +0 180A を 1800</span><span class="sxs-lookup"><span data-stu-id="31ffd-609">U+1800 to U+180A</span></span>|<span data-ttu-id="31ffd-610">U + U +0 301F に 3014</span><span class="sxs-lookup"><span data-stu-id="31ffd-610">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="31ffd-611">U + U +002 に 0025</span><span class="sxs-lookup"><span data-stu-id="31ffd-611">U+0025 to U+002A</span></span>|<span data-ttu-id="31ffd-612">U+061B</span><span class="sxs-lookup"><span data-stu-id="31ffd-612">U+061B</span></span>|<span data-ttu-id="31ffd-613">U+1944 および u+1945</span><span class="sxs-lookup"><span data-stu-id="31ffd-613">U+1944 and U+1945</span></span>|<span data-ttu-id="31ffd-614">U+3030</span><span class="sxs-lookup"><span data-stu-id="31ffd-614">U+3030</span></span>|  
|<span data-ttu-id="31ffd-615">U + 002 C U +0 002F</span><span class="sxs-lookup"><span data-stu-id="31ffd-615">U+002C to U+002F</span></span>|<span data-ttu-id="31ffd-616">U +0 061E と U +0 061F</span><span class="sxs-lookup"><span data-stu-id="31ffd-616">U+061E and U+061F</span></span>|<span data-ttu-id="31ffd-617">U +0 19DE と U +0 19DF</span><span class="sxs-lookup"><span data-stu-id="31ffd-617">U+19DE and U+19DF</span></span>|<span data-ttu-id="31ffd-618">U +0 303D</span><span class="sxs-lookup"><span data-stu-id="31ffd-618">U+303D</span></span>|  
|<span data-ttu-id="31ffd-619">U +0 003A と U +0 003B</span><span class="sxs-lookup"><span data-stu-id="31ffd-619">U+003A and U+003B</span></span>|<span data-ttu-id="31ffd-620">U + U +0 方位 066 D に 066A</span><span class="sxs-lookup"><span data-stu-id="31ffd-620">U+066A to U+066D</span></span>|<span data-ttu-id="31ffd-621">U +0 1A1E と U +0 1A1F</span><span class="sxs-lookup"><span data-stu-id="31ffd-621">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="31ffd-622">U +0 30A0</span><span class="sxs-lookup"><span data-stu-id="31ffd-622">U+30A0</span></span>|  
|<span data-ttu-id="31ffd-623">U +0 003F と U +0 0040</span><span class="sxs-lookup"><span data-stu-id="31ffd-623">U+003F and U+0040</span></span>|<span data-ttu-id="31ffd-624">U+06D4</span><span class="sxs-lookup"><span data-stu-id="31ffd-624">U+06D4</span></span>|<span data-ttu-id="31ffd-625">U + U +0 1B60 に 1B5A</span><span class="sxs-lookup"><span data-stu-id="31ffd-625">U+1B5A to U+1B60</span></span>|<span data-ttu-id="31ffd-626">U +0 30FB</span><span class="sxs-lookup"><span data-stu-id="31ffd-626">U+30FB</span></span>|  
|<span data-ttu-id="31ffd-627">U + U +0 005-D を 005B</span><span class="sxs-lookup"><span data-stu-id="31ffd-627">U+005B to U+005D</span></span>|<span data-ttu-id="31ffd-628">U + U +0 070 D に 0700</span><span class="sxs-lookup"><span data-stu-id="31ffd-628">U+0700 to U+070D</span></span>|<span data-ttu-id="31ffd-629">U + U +0 2027 に 2010</span><span class="sxs-lookup"><span data-stu-id="31ffd-629">U+2010 to U+2027</span></span>|<span data-ttu-id="31ffd-630">U + A874 U + A877 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-630">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="31ffd-631">U+005F</span><span class="sxs-lookup"><span data-stu-id="31ffd-631">U+005F</span></span>|<span data-ttu-id="31ffd-632">U + U +0 07F9 に 07F7</span><span class="sxs-lookup"><span data-stu-id="31ffd-632">U+07F7 to U+07F9</span></span>|<span data-ttu-id="31ffd-633">U+2030 U +0 2043 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-633">U+2030 to U+2043</span></span>|<span data-ttu-id="31ffd-634">U + FD3E と U + FD3F</span><span class="sxs-lookup"><span data-stu-id="31ffd-634">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="31ffd-635">U+007B</span><span class="sxs-lookup"><span data-stu-id="31ffd-635">U+007B</span></span>|<span data-ttu-id="31ffd-636">U+0964 および u+0965</span><span class="sxs-lookup"><span data-stu-id="31ffd-636">U+0964 and U+0965</span></span>|<span data-ttu-id="31ffd-637">U + U +0 2051 に 2045</span><span class="sxs-lookup"><span data-stu-id="31ffd-637">U+2045 to U+2051</span></span>|<span data-ttu-id="31ffd-638">U + FE10 U + FE19 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-638">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="31ffd-639">U+007D</span><span class="sxs-lookup"><span data-stu-id="31ffd-639">U+007D</span></span>|<span data-ttu-id="31ffd-640">U+0970</span><span class="sxs-lookup"><span data-stu-id="31ffd-640">U+0970</span></span>|<span data-ttu-id="31ffd-641">U + U +0 205E に 2053</span><span class="sxs-lookup"><span data-stu-id="31ffd-641">U+2053 to U+205E</span></span>|<span data-ttu-id="31ffd-642">U + FE30 U + FE52 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-642">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="31ffd-643">U+00A1</span><span class="sxs-lookup"><span data-stu-id="31ffd-643">U+00A1</span></span>|<span data-ttu-id="31ffd-644">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="31ffd-644">U+0DF4</span></span>|<span data-ttu-id="31ffd-645">U +0 207 D と U +0 207E</span><span class="sxs-lookup"><span data-stu-id="31ffd-645">U+207D and  U+207E</span></span>|<span data-ttu-id="31ffd-646">U + FE54 U + FE61 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-646">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="31ffd-647">U+00AB</span><span class="sxs-lookup"><span data-stu-id="31ffd-647">U+00AB</span></span>|<span data-ttu-id="31ffd-648">U + U +0 0E5B に 0E4F</span><span class="sxs-lookup"><span data-stu-id="31ffd-648">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="31ffd-649">U +0 208 D と U +0 208E</span><span class="sxs-lookup"><span data-stu-id="31ffd-649">U+208D and U+208E</span></span>|<span data-ttu-id="31ffd-650">U+FE63</span><span class="sxs-lookup"><span data-stu-id="31ffd-650">U+FE63</span></span>|  
|<span data-ttu-id="31ffd-651">U +0 00AD</span><span class="sxs-lookup"><span data-stu-id="31ffd-651">U+00AD</span></span>|<span data-ttu-id="31ffd-652">U + U +0 0F12 に 0F04</span><span class="sxs-lookup"><span data-stu-id="31ffd-652">U+0F04 to U+0F12</span></span>|<span data-ttu-id="31ffd-653">U +0 の 2329 と 232A</span><span class="sxs-lookup"><span data-stu-id="31ffd-653">U+2329 and U+232A</span></span>|<span data-ttu-id="31ffd-654">U+FE68</span><span class="sxs-lookup"><span data-stu-id="31ffd-654">U+FE68</span></span>|  
|<span data-ttu-id="31ffd-655">U+00B7</span><span class="sxs-lookup"><span data-stu-id="31ffd-655">U+00B7</span></span>|<span data-ttu-id="31ffd-656">U + U +0 0F3D に 0F3A</span><span class="sxs-lookup"><span data-stu-id="31ffd-656">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="31ffd-657">U + U +0 2775 に 2768</span><span class="sxs-lookup"><span data-stu-id="31ffd-657">U+2768 to U+2775</span></span>|<span data-ttu-id="31ffd-658">U + FE6A と U + FE6B</span><span class="sxs-lookup"><span data-stu-id="31ffd-658">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="31ffd-659">U +0 00BB</span><span class="sxs-lookup"><span data-stu-id="31ffd-659">U+00BB</span></span>|<span data-ttu-id="31ffd-660">U+0F85</span><span class="sxs-lookup"><span data-stu-id="31ffd-660">U+0F85</span></span>|<span data-ttu-id="31ffd-661">U +0 27C 6 に U +0 27C 5</span><span class="sxs-lookup"><span data-stu-id="31ffd-661">U+27C5 to U+27C6</span></span>|<span data-ttu-id="31ffd-662">U + FF03 に U + ff 01</span><span class="sxs-lookup"><span data-stu-id="31ffd-662">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="31ffd-663">U +0 00BF</span><span class="sxs-lookup"><span data-stu-id="31ffd-663">U+00BF</span></span>|<span data-ttu-id="31ffd-664">U +0 0FD0 と U +0 0FD1</span><span class="sxs-lookup"><span data-stu-id="31ffd-664">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="31ffd-665">U + U +0 27EB に 27E6</span><span class="sxs-lookup"><span data-stu-id="31ffd-665">U+27E6 to U+27EB</span></span>|<span data-ttu-id="31ffd-666">U + FF05 U + FF0A に</span><span class="sxs-lookup"><span data-stu-id="31ffd-666">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="31ffd-667">U+037E</span><span class="sxs-lookup"><span data-stu-id="31ffd-667">U+037E</span></span>|<span data-ttu-id="31ffd-668">U + U +0 104F に 104A</span><span class="sxs-lookup"><span data-stu-id="31ffd-668">U+104A to U+104F</span></span>|<span data-ttu-id="31ffd-669">U + U +0 2998 に 2983</span><span class="sxs-lookup"><span data-stu-id="31ffd-669">U+2983 to U+2998</span></span>|<span data-ttu-id="31ffd-670">U + FF0C U + FF0F に</span><span class="sxs-lookup"><span data-stu-id="31ffd-670">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="31ffd-671">U+0387</span><span class="sxs-lookup"><span data-stu-id="31ffd-671">U+0387</span></span>|<span data-ttu-id="31ffd-672">U +0 10FB</span><span class="sxs-lookup"><span data-stu-id="31ffd-672">U+10FB</span></span>|<span data-ttu-id="31ffd-673">U +0 29D 8 U +0 29DB を</span><span class="sxs-lookup"><span data-stu-id="31ffd-673">U+29D8 to U+29DB</span></span>|<span data-ttu-id="31ffd-674">U + FF1A と U + FF1B</span><span class="sxs-lookup"><span data-stu-id="31ffd-674">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="31ffd-675">U + U +0 055F に 055A</span><span class="sxs-lookup"><span data-stu-id="31ffd-675">U+055A to U+055F</span></span>|<span data-ttu-id="31ffd-676">U + U +0 1368 に 1361</span><span class="sxs-lookup"><span data-stu-id="31ffd-676">U+1361 to U+1368</span></span>|<span data-ttu-id="31ffd-677">U +0 29 FC と U +0 29FD</span><span class="sxs-lookup"><span data-stu-id="31ffd-677">U+29FC and U+29FD</span></span>|<span data-ttu-id="31ffd-678">U + FF1F と U + FF20</span><span class="sxs-lookup"><span data-stu-id="31ffd-678">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="31ffd-679">U +0 の 0589 と 058A</span><span class="sxs-lookup"><span data-stu-id="31ffd-679">U+0589 and U+058A</span></span>|<span data-ttu-id="31ffd-680">U +0 166 D と U +0 166E</span><span class="sxs-lookup"><span data-stu-id="31ffd-680">U+166D and U+166E</span></span>|<span data-ttu-id="31ffd-681">U + U +0 2CFC に 2CF9</span><span class="sxs-lookup"><span data-stu-id="31ffd-681">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="31ffd-682">U + FF3B U + FF3D に</span><span class="sxs-lookup"><span data-stu-id="31ffd-682">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="31ffd-683">U +0 05BE</span><span class="sxs-lookup"><span data-stu-id="31ffd-683">U+05BE</span></span>|<span data-ttu-id="31ffd-684">U +0 169B と U +0 169 C</span><span class="sxs-lookup"><span data-stu-id="31ffd-684">U+169B and U+169C</span></span>|<span data-ttu-id="31ffd-685">U +0 2CFE と U +0 2CFF</span><span class="sxs-lookup"><span data-stu-id="31ffd-685">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="31ffd-686">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="31ffd-686">U+FF3F</span></span>|  
|<span data-ttu-id="31ffd-687">U+05C0</span><span class="sxs-lookup"><span data-stu-id="31ffd-687">U+05C0</span></span>|<span data-ttu-id="31ffd-688">U + U +0 16ED に 16EB</span><span class="sxs-lookup"><span data-stu-id="31ffd-688">U+16EB to U+16ED</span></span>|<span data-ttu-id="31ffd-689">U + U +0 2E17 に 2E00</span><span class="sxs-lookup"><span data-stu-id="31ffd-689">U+2E00 to U+2E17</span></span>|<span data-ttu-id="31ffd-690">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="31ffd-690">U+FF5B</span></span>|  
|<span data-ttu-id="31ffd-691">U+05C3</span><span class="sxs-lookup"><span data-stu-id="31ffd-691">U+05C3</span></span>|<span data-ttu-id="31ffd-692">U+1735 および u+1736</span><span class="sxs-lookup"><span data-stu-id="31ffd-692">U+1735 and U+1736</span></span>|<span data-ttu-id="31ffd-693">U +0 2E1C と U +0 2E1D</span><span class="sxs-lookup"><span data-stu-id="31ffd-693">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="31ffd-694">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="31ffd-694">U+FF5D</span></span>|  
|<span data-ttu-id="31ffd-695">U+05C6</span><span class="sxs-lookup"><span data-stu-id="31ffd-695">U+05C6</span></span>|<span data-ttu-id="31ffd-696">U +0 17D 4 U +0 17D 6</span><span class="sxs-lookup"><span data-stu-id="31ffd-696">U+17D4 to U+17D6</span></span>|<span data-ttu-id="31ffd-697">U + U +0 3003 に 3001</span><span class="sxs-lookup"><span data-stu-id="31ffd-697">U+3001 to U+3003</span></span>|<span data-ttu-id="31ffd-698">U + FF5F U + FF65 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-698">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="31ffd-699">U +0 05F3 と U +0 05F4</span><span class="sxs-lookup"><span data-stu-id="31ffd-699">U+05F3 and U+05F4</span></span>|<span data-ttu-id="31ffd-700">U +0 17D 8 U +0 17DA を</span><span class="sxs-lookup"><span data-stu-id="31ffd-700">U+17D8 to U+17DA</span></span>|<span data-ttu-id="31ffd-701">U + U +0 3011 に 3008</span><span class="sxs-lookup"><span data-stu-id="31ffd-701">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-702">次のコード例を示します<xref:System.Char.IsPunctuation%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-702">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : string * int -&gt; bool" Usage="System.char.IsPunctuation (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-703">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-703">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-704">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-704">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-705">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-705">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-706">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-706">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-707">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-707">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="31ffd-708">有効な区切り記号では、次のカテゴリのメンバーである<xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`、 `DashPunctuation`、 `OpenPunctuation`、 `ClosePunctuation`、 `InititalQuotePunctuation`、 `FinalQuotePunctuation`、または`OtherPunctuation`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-708">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="31ffd-709">次の表に、Unicode コード ポイントの文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-709">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="31ffd-710">U + U +0 0023 に 0021</span><span class="sxs-lookup"><span data-stu-id="31ffd-710">U+0021 to U+0023</span></span>|<span data-ttu-id="31ffd-711">U +0 060 C と U +0 060 D</span><span class="sxs-lookup"><span data-stu-id="31ffd-711">U+060C and U+060D</span></span>|<span data-ttu-id="31ffd-712">U + U +0 180A を 1800</span><span class="sxs-lookup"><span data-stu-id="31ffd-712">U+1800 to U+180A</span></span>|<span data-ttu-id="31ffd-713">U + U +0 301F に 3014</span><span class="sxs-lookup"><span data-stu-id="31ffd-713">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="31ffd-714">U + U +002 に 0025</span><span class="sxs-lookup"><span data-stu-id="31ffd-714">U+0025 to U+002A</span></span>|<span data-ttu-id="31ffd-715">U+061B</span><span class="sxs-lookup"><span data-stu-id="31ffd-715">U+061B</span></span>|<span data-ttu-id="31ffd-716">U+1944 および u+1945</span><span class="sxs-lookup"><span data-stu-id="31ffd-716">U+1944 and U+1945</span></span>|<span data-ttu-id="31ffd-717">U+3030</span><span class="sxs-lookup"><span data-stu-id="31ffd-717">U+3030</span></span>|  
|<span data-ttu-id="31ffd-718">U + 002 C U +0 002F</span><span class="sxs-lookup"><span data-stu-id="31ffd-718">U+002C to U+002F</span></span>|<span data-ttu-id="31ffd-719">U +0 061E と U +0 061F</span><span class="sxs-lookup"><span data-stu-id="31ffd-719">U+061E and U+061F</span></span>|<span data-ttu-id="31ffd-720">U +0 19DE と U +0 19DF</span><span class="sxs-lookup"><span data-stu-id="31ffd-720">U+19DE and U+19DF</span></span>|<span data-ttu-id="31ffd-721">U +0 303D</span><span class="sxs-lookup"><span data-stu-id="31ffd-721">U+303D</span></span>|  
|<span data-ttu-id="31ffd-722">U +0 003A と U +0 003B</span><span class="sxs-lookup"><span data-stu-id="31ffd-722">U+003A and U+003B</span></span>|<span data-ttu-id="31ffd-723">U + U +0 方位 066 D に 066A</span><span class="sxs-lookup"><span data-stu-id="31ffd-723">U+066A to U+066D</span></span>|<span data-ttu-id="31ffd-724">U +0 1A1E と U +0 1A1F</span><span class="sxs-lookup"><span data-stu-id="31ffd-724">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="31ffd-725">U +0 30A0</span><span class="sxs-lookup"><span data-stu-id="31ffd-725">U+30A0</span></span>|  
|<span data-ttu-id="31ffd-726">U +0 003F と U +0 0040</span><span class="sxs-lookup"><span data-stu-id="31ffd-726">U+003F and U+0040</span></span>|<span data-ttu-id="31ffd-727">U+06D4</span><span class="sxs-lookup"><span data-stu-id="31ffd-727">U+06D4</span></span>|<span data-ttu-id="31ffd-728">U + U +0 1B60 に 1B5A</span><span class="sxs-lookup"><span data-stu-id="31ffd-728">U+1B5A to U+1B60</span></span>|<span data-ttu-id="31ffd-729">U +0 30FB</span><span class="sxs-lookup"><span data-stu-id="31ffd-729">U+30FB</span></span>|  
|<span data-ttu-id="31ffd-730">U + U +0 005-D を 005B</span><span class="sxs-lookup"><span data-stu-id="31ffd-730">U+005B to U+005D</span></span>|<span data-ttu-id="31ffd-731">U + U +0 070 D に 0700</span><span class="sxs-lookup"><span data-stu-id="31ffd-731">U+0700 to U+070D</span></span>|<span data-ttu-id="31ffd-732">U + U +0 2027 に 2010</span><span class="sxs-lookup"><span data-stu-id="31ffd-732">U+2010 to U+2027</span></span>|<span data-ttu-id="31ffd-733">U + A874 U + A877 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-733">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="31ffd-734">U+005F</span><span class="sxs-lookup"><span data-stu-id="31ffd-734">U+005F</span></span>|<span data-ttu-id="31ffd-735">U + U +0 07F9 に 07F7</span><span class="sxs-lookup"><span data-stu-id="31ffd-735">U+07F7 to U+07F9</span></span>|<span data-ttu-id="31ffd-736">U+2030 U +0 2043 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-736">U+2030 to U+2043</span></span>|<span data-ttu-id="31ffd-737">U + FD3E と U + FD3F</span><span class="sxs-lookup"><span data-stu-id="31ffd-737">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="31ffd-738">U+007B</span><span class="sxs-lookup"><span data-stu-id="31ffd-738">U+007B</span></span>|<span data-ttu-id="31ffd-739">U+0964 および u+0965</span><span class="sxs-lookup"><span data-stu-id="31ffd-739">U+0964 and U+0965</span></span>|<span data-ttu-id="31ffd-740">U + U +0 2051 に 2045</span><span class="sxs-lookup"><span data-stu-id="31ffd-740">U+2045 to U+2051</span></span>|<span data-ttu-id="31ffd-741">U + FE10 U + FE19 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-741">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="31ffd-742">U+007D</span><span class="sxs-lookup"><span data-stu-id="31ffd-742">U+007D</span></span>|<span data-ttu-id="31ffd-743">U+0970</span><span class="sxs-lookup"><span data-stu-id="31ffd-743">U+0970</span></span>|<span data-ttu-id="31ffd-744">U + U +0 205E に 2053</span><span class="sxs-lookup"><span data-stu-id="31ffd-744">U+2053 to U+205E</span></span>|<span data-ttu-id="31ffd-745">U + FE30 U + FE52 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-745">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="31ffd-746">U+00A1</span><span class="sxs-lookup"><span data-stu-id="31ffd-746">U+00A1</span></span>|<span data-ttu-id="31ffd-747">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="31ffd-747">U+0DF4</span></span>|<span data-ttu-id="31ffd-748">U +0 207 D と U +0 207E</span><span class="sxs-lookup"><span data-stu-id="31ffd-748">U+207D and  U+207E</span></span>|<span data-ttu-id="31ffd-749">U + FE54 U + FE61 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-749">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="31ffd-750">U+00AB</span><span class="sxs-lookup"><span data-stu-id="31ffd-750">U+00AB</span></span>|<span data-ttu-id="31ffd-751">U + U +0 0E5B に 0E4F</span><span class="sxs-lookup"><span data-stu-id="31ffd-751">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="31ffd-752">U +0 208 D と U +0 208E</span><span class="sxs-lookup"><span data-stu-id="31ffd-752">U+208D and U+208E</span></span>|<span data-ttu-id="31ffd-753">U+FE63</span><span class="sxs-lookup"><span data-stu-id="31ffd-753">U+FE63</span></span>|  
|<span data-ttu-id="31ffd-754">U +0 00AD</span><span class="sxs-lookup"><span data-stu-id="31ffd-754">U+00AD</span></span>|<span data-ttu-id="31ffd-755">U + U +0 0F12 に 0F04</span><span class="sxs-lookup"><span data-stu-id="31ffd-755">U+0F04 to U+0F12</span></span>|<span data-ttu-id="31ffd-756">U +0 の 2329 と 232A</span><span class="sxs-lookup"><span data-stu-id="31ffd-756">U+2329 and U+232A</span></span>|<span data-ttu-id="31ffd-757">U+FE68</span><span class="sxs-lookup"><span data-stu-id="31ffd-757">U+FE68</span></span>|  
|<span data-ttu-id="31ffd-758">U+00B7</span><span class="sxs-lookup"><span data-stu-id="31ffd-758">U+00B7</span></span>|<span data-ttu-id="31ffd-759">U + U +0 0F3D に 0F3A</span><span class="sxs-lookup"><span data-stu-id="31ffd-759">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="31ffd-760">U + U +0 2775 に 2768</span><span class="sxs-lookup"><span data-stu-id="31ffd-760">U+2768 to U+2775</span></span>|<span data-ttu-id="31ffd-761">U + FE6A と U + FE6B</span><span class="sxs-lookup"><span data-stu-id="31ffd-761">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="31ffd-762">U +0 00BB</span><span class="sxs-lookup"><span data-stu-id="31ffd-762">U+00BB</span></span>|<span data-ttu-id="31ffd-763">U+0F85</span><span class="sxs-lookup"><span data-stu-id="31ffd-763">U+0F85</span></span>|<span data-ttu-id="31ffd-764">U +0 27C 6 に U +0 27C 5</span><span class="sxs-lookup"><span data-stu-id="31ffd-764">U+27C5 to U+27C6</span></span>|<span data-ttu-id="31ffd-765">U + FF03 に U + ff 01</span><span class="sxs-lookup"><span data-stu-id="31ffd-765">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="31ffd-766">U +0 00BF</span><span class="sxs-lookup"><span data-stu-id="31ffd-766">U+00BF</span></span>|<span data-ttu-id="31ffd-767">U +0 0FD0 と U +0 0FD1</span><span class="sxs-lookup"><span data-stu-id="31ffd-767">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="31ffd-768">U + U +0 27EB に 27E6</span><span class="sxs-lookup"><span data-stu-id="31ffd-768">U+27E6 to U+27EB</span></span>|<span data-ttu-id="31ffd-769">U + FF05 U + FF0A に</span><span class="sxs-lookup"><span data-stu-id="31ffd-769">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="31ffd-770">U+037E</span><span class="sxs-lookup"><span data-stu-id="31ffd-770">U+037E</span></span>|<span data-ttu-id="31ffd-771">U + U +0 104F に 104A</span><span class="sxs-lookup"><span data-stu-id="31ffd-771">U+104A to U+104F</span></span>|<span data-ttu-id="31ffd-772">U + U +0 2998 に 2983</span><span class="sxs-lookup"><span data-stu-id="31ffd-772">U+2983 to U+2998</span></span>|<span data-ttu-id="31ffd-773">U + FF0C U + FF0F に</span><span class="sxs-lookup"><span data-stu-id="31ffd-773">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="31ffd-774">U+0387</span><span class="sxs-lookup"><span data-stu-id="31ffd-774">U+0387</span></span>|<span data-ttu-id="31ffd-775">U +0 10FB</span><span class="sxs-lookup"><span data-stu-id="31ffd-775">U+10FB</span></span>|<span data-ttu-id="31ffd-776">U +0 29D 8 U +0 29DB を</span><span class="sxs-lookup"><span data-stu-id="31ffd-776">U+29D8 to U+29DB</span></span>|<span data-ttu-id="31ffd-777">U + FF1A と U + FF1B</span><span class="sxs-lookup"><span data-stu-id="31ffd-777">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="31ffd-778">U + U +0 055F に 055A</span><span class="sxs-lookup"><span data-stu-id="31ffd-778">U+055A to U+055F</span></span>|<span data-ttu-id="31ffd-779">U + U +0 1368 に 1361</span><span class="sxs-lookup"><span data-stu-id="31ffd-779">U+1361 to U+1368</span></span>|<span data-ttu-id="31ffd-780">U +0 29 FC と U +0 29FD</span><span class="sxs-lookup"><span data-stu-id="31ffd-780">U+29FC and U+29FD</span></span>|<span data-ttu-id="31ffd-781">U + FF1F と U + FF20</span><span class="sxs-lookup"><span data-stu-id="31ffd-781">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="31ffd-782">U +0 の 0589 と 058A</span><span class="sxs-lookup"><span data-stu-id="31ffd-782">U+0589 and U+058A</span></span>|<span data-ttu-id="31ffd-783">U +0 166 D と U +0 166E</span><span class="sxs-lookup"><span data-stu-id="31ffd-783">U+166D and U+166E</span></span>|<span data-ttu-id="31ffd-784">U + U +0 2CFC に 2CF9</span><span class="sxs-lookup"><span data-stu-id="31ffd-784">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="31ffd-785">U + FF3B U + FF3D に</span><span class="sxs-lookup"><span data-stu-id="31ffd-785">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="31ffd-786">U +0 05BE</span><span class="sxs-lookup"><span data-stu-id="31ffd-786">U+05BE</span></span>|<span data-ttu-id="31ffd-787">U +0 169B と U +0 169 C</span><span class="sxs-lookup"><span data-stu-id="31ffd-787">U+169B and U+169C</span></span>|<span data-ttu-id="31ffd-788">U +0 2CFE と U +0 2CFF</span><span class="sxs-lookup"><span data-stu-id="31ffd-788">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="31ffd-789">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="31ffd-789">U+FF3F</span></span>|  
|<span data-ttu-id="31ffd-790">U+05C0</span><span class="sxs-lookup"><span data-stu-id="31ffd-790">U+05C0</span></span>|<span data-ttu-id="31ffd-791">U + U +0 16ED に 16EB</span><span class="sxs-lookup"><span data-stu-id="31ffd-791">U+16EB to U+16ED</span></span>|<span data-ttu-id="31ffd-792">U + U +0 2E17 に 2E00</span><span class="sxs-lookup"><span data-stu-id="31ffd-792">U+2E00 to U+2E17</span></span>|<span data-ttu-id="31ffd-793">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="31ffd-793">U+FF5B</span></span>|  
|<span data-ttu-id="31ffd-794">U+05C3</span><span class="sxs-lookup"><span data-stu-id="31ffd-794">U+05C3</span></span>|<span data-ttu-id="31ffd-795">U+1735 および u+1736</span><span class="sxs-lookup"><span data-stu-id="31ffd-795">U+1735 and U+1736</span></span>|<span data-ttu-id="31ffd-796">U +0 2E1C と U +0 2E1D</span><span class="sxs-lookup"><span data-stu-id="31ffd-796">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="31ffd-797">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="31ffd-797">U+FF5D</span></span>|  
|<span data-ttu-id="31ffd-798">U+05C6</span><span class="sxs-lookup"><span data-stu-id="31ffd-798">U+05C6</span></span>|<span data-ttu-id="31ffd-799">U +0 17D 4 U +0 17D 6</span><span class="sxs-lookup"><span data-stu-id="31ffd-799">U+17D4 to U+17D6</span></span>|<span data-ttu-id="31ffd-800">U + U +0 3003 に 3001</span><span class="sxs-lookup"><span data-stu-id="31ffd-800">U+3001 to U+3003</span></span>|<span data-ttu-id="31ffd-801">U + FF5F U + FF65 に</span><span class="sxs-lookup"><span data-stu-id="31ffd-801">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="31ffd-802">U +0 05F3 と U +0 05F4</span><span class="sxs-lookup"><span data-stu-id="31ffd-802">U+05F3 and U+05F4</span></span>|<span data-ttu-id="31ffd-803">U +0 17D 8 U +0 17DA を</span><span class="sxs-lookup"><span data-stu-id="31ffd-803">U+17D8 to U+17DA</span></span>|<span data-ttu-id="31ffd-804">U + U +0 3011 に 3008</span><span class="sxs-lookup"><span data-stu-id="31ffd-804">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-805">次のコード例を示します<xref:System.Char.IsPunctuation%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-805">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-806">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-806">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-807">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-807">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSeparator">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-808">Indicates whether a Unicode character is categorized as a separator character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-808">Indicates whether a Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-809">Unicode 規格では、区切り記号の 3 つのサブカテゴリを認識します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-809">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="31ffd-810">区切り記号のスペース (、<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>カテゴリ)、\u0020 などの文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-810">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="31ffd-811">行区切り記号 (、<xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType>カテゴリ)、\u2028 が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-811">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="31ffd-812">段落区切り記号 (、<xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType>カテゴリ)、\u2029 が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-812">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31ffd-813">Unicode 標準制御文字としての文字の \u000A (LF)、\u000C (FF) および \u000D (CR) の分類 (のメンバー、<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>カテゴリ)、区切り文字としてではなくです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-813">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(char c);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : char -&gt; bool" Usage="System.char.IsSeparator c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-814">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-814">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-815">Indicates whether the specified Unicode character is categorized as a separator character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-815">Indicates whether the specified Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-816">
            <see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-816">
              <see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-817">Unicode 規格では、区切り記号の 3 つのサブカテゴリを認識します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-817">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="31ffd-818">区切り記号のスペース (、<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>カテゴリ)、\u0020 などの文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-818">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="31ffd-819">行区切り記号 (、<xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType>カテゴリ)、\u2028 が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-819">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="31ffd-820">段落区切り記号 (、<xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType>カテゴリ)、\u2029 が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-820">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31ffd-821">Unicode 標準制御文字としての文字の \u000A (LF)、\u000C (FF) および \u000D (CR) の分類 (のメンバー、<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>カテゴリ)、区切り文字としてではなくです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-821">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-822">次の例の一覧、<xref:System.Char>区切り文字として分類されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31ffd-822">The following example lists the <xref:System.Char> objects that are classified as separator characters.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator1.cpp#1)]
 [!code-csharp[System.Char.IsSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator1.cs#1)]
 [!code-vb[System.Char.IsSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : string * int -&gt; bool" Usage="System.char.IsSeparator (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-823">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-823">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-824">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-824">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-825">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-825">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-826">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-826">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-827">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-827">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="31ffd-828">Unicode 規格では、区切り記号の 3 つのサブカテゴリを認識します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-828">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="31ffd-829">区切り記号のスペース (、<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>カテゴリ)、\u0020 などの文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-829">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="31ffd-830">行区切り記号 (、<xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType>カテゴリ)、\u2028 が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-830">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="31ffd-831">段落区切り記号 (、<xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType>カテゴリ)、\u2029 が含まれます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-831">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31ffd-832">Unicode 標準制御文字としての文字の \u000A (LF)、\u000C (FF) および \u000D (CR) の分類 (のメンバー、<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>カテゴリ)、区切り文字としてではなくです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-832">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-833">次の例で<xref:System.Char.IsSeparator%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-833">The following example demonstrates <xref:System.Char.IsSeparator%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator.cpp#10)]
 [!code-csharp[System.Char.IsSeparator#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator.cs#10)]
 [!code-vb[System.Char.IsSeparator#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-834">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-834">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-835">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-835">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-836">Indicates whether a character has a surrogate code unit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-836">Indicates whether a character has a surrogate code unit.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : char -&gt; bool" Usage="System.char.IsSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-837">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-837">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-838">Indicates whether the specified character has a surrogate code unit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-838">Indicates whether the specified character has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-839">
            <see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-839">
              <see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-840">サロゲートは、 <xref:System.Char> u+d800 から U+DFFF の範囲の utf-16 コード単位を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31ffd-840">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="31ffd-841">この範囲内のコード単位での各文字が属する、<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-841">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="31ffd-842">個々 のサロゲート コード単位が存在せず、それ自体の解釈がサロゲート ペアの一部として使用される場合にのみ意味します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-842">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="31ffd-843">サロゲート ペアの詳細についてで Unicode 標準を参照してください、 [Unicode ホームページ](http://go.microsoft.com/fwlink/?linkid=37123)です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-843">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-844">次の例で、<xref:System.Char.IsSurrogate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-844">The following example demonstrates the <xref:System.Char.IsSurrogate%2A> method.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : string * int -&gt; bool" Usage="System.char.IsSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-845">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-845">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-846">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-846">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-847">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-847">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-848">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-848">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-849">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-849">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="31ffd-850">サロゲートは、 <xref:System.Char> u+d800 から U+DFFF の範囲の utf-16 コード単位を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="31ffd-850">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="31ffd-851">この範囲内のコード単位での各文字が属する、<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="31ffd-851">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="31ffd-852">個々 のサロゲート コード単位が存在せず、それ自体の解釈がサロゲート ペアの一部として使用される場合にのみ意味します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-852">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="31ffd-853">サロゲート ペアの詳細についてで Unicode 標準を参照してください、 [Unicode ホームページ](http://go.microsoft.com/fwlink/?linkid=37123)です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-853">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-854">次のコード例を示します<xref:System.Char.IsSurrogate%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-854">The following code example demonstrates <xref:System.Char.IsSurrogate%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-855">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-855">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-856">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-856">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogatePair">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-857">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-857">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (highSurrogate As Char, lowSurrogate As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : char * char -&gt; bool" Usage="System.char.IsSurrogatePair (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="31ffd-858">The character to evaluate as the high surrogate of a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-858">The character to evaluate as the high surrogate of a surrogate pair.</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="31ffd-859">The character to evaluate as the low surrogate of a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-859">The character to evaluate as the low surrogate of a surrogate pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-860">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-860">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-861">
            <see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-861">
              <see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-862">通常、1 つの文字は、1 つの 16 ビット Unicode コード単位で表されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-862">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="31ffd-863">Utf-16 エンコードでは、サロゲート ペアは、次の 2 つの 16 ビットのコード単位で表される 1 つの抽象文字を許可するもサポートしています。</span><span class="sxs-lookup"><span data-stu-id="31ffd-863">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="31ffd-864">値は u+d800 から U+DBFF の範囲に、最初のコード単位は、高のサロゲートです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-864">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="31ffd-865">値は u+dc00 から U+DFFF の範囲に、2 つ目のコード単位は、下位のサロゲートです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-865">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="31ffd-866">個々 のサロゲート コード ポイントがある独自の解釈されません。</span><span class="sxs-lookup"><span data-stu-id="31ffd-866">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="31ffd-867">サロゲートおよび Unicode 規格の詳細については、次を参照してください。、 [Unicode ホームページ](http://go.microsoft.com/fwlink/?LinkId=37123)です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-867">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-868">次のコード例を示しています、 <xref:System.Char.IsHighSurrogate%2A>、 <xref:System.Char.IsLowSurrogate%2A>、および<xref:System.Char.IsSurrogatePair%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-868">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : string * int -&gt; bool" Usage="System.char.IsSurrogatePair (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-869">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-869">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-870">The starting position of the pair of characters to evaluate within <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-870">The starting position of the pair of characters to evaluate within <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-871">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-871">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-872">
            <see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-872">
              <see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-873">通常、1 つの文字は、1 つの 16 ビット Unicode コード単位で表されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-873">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="31ffd-874">Utf-16 エンコードでは、サロゲート ペアは、次の 2 つの 16 ビットのコード単位で表される 1 つの抽象文字を許可するもサポートしています。</span><span class="sxs-lookup"><span data-stu-id="31ffd-874">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="31ffd-875">値は u+d800 から U+DBFF の範囲に、最初のコード単位は、高のサロゲートです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-875">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="31ffd-876">値は u+dc00 から U+DFFF の範囲に、2 つ目のコード単位は、下位のサロゲートです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-876">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="31ffd-877">個々 のサロゲート コード ポイントがある独自の解釈されません。</span><span class="sxs-lookup"><span data-stu-id="31ffd-877">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="31ffd-878">サロゲートおよび Unicode 規格の詳細については、次を参照してください。、 [Unicode ホームページ](http://go.microsoft.com/fwlink/?LinkId=37123)です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-878">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-879">次のコード例を示しています、 <xref:System.Char.IsHighSurrogate%2A>、 <xref:System.Char.IsLowSurrogate%2A>、および<xref:System.Char.IsSurrogatePair%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-879">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-880">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-880">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-881">
            <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-881">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSymbol">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-882">Indicates whether a Unicode character is categorized as a symbol character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-882">Indicates whether a Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-883">有効なシンボルでは、次のカテゴリのメンバーである<xref:System.Globalization.UnicodeCategory>: `MathSymbol`、 `CurrencySymbol`、 `ModifierSymbol`、および`OtherSymbol`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-883">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="31ffd-884">大まかに定義された一連の次のような文字を Unicode 規格のシンボルには。</span><span class="sxs-lookup"><span data-stu-id="31ffd-884">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="31ffd-885">通貨記号。</span><span class="sxs-lookup"><span data-stu-id="31ffd-885">Currency symbols.</span></span>  
  
-   <span data-ttu-id="31ffd-886">文字種の記号、数学的な英数字記号だけでなく ℅、№ などの記号のセットが含まれていると™ します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-886">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="31ffd-887">文字と下付き文字などのフォームを番号します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-887">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="31ffd-888">算術演算子、および矢印です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-888">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="31ffd-889">幾何学模様の記号。</span><span class="sxs-lookup"><span data-stu-id="31ffd-889">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="31ffd-890">技術的な記号です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-890">Technical symbols.</span></span>  
  
-   <span data-ttu-id="31ffd-891">ブライユ点字パターン。</span><span class="sxs-lookup"><span data-stu-id="31ffd-891">Braille patterns.</span></span>  
  
-   <span data-ttu-id="31ffd-892">飾り。</span><span class="sxs-lookup"><span data-stu-id="31ffd-892">Dingbats.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(char c);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : char -&gt; bool" Usage="System.char.IsSymbol c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-893">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-893">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-894">Indicates whether the specified Unicode character is categorized as a symbol character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-894">Indicates whether the specified Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-895">
            <see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-895">
              <see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-896">有効なシンボルでは、次のカテゴリのメンバーである<xref:System.Globalization.UnicodeCategory>: `MathSymbol`、 `CurrencySymbol`、 `ModifierSymbol`、および`OtherSymbol`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-896">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="31ffd-897">大まかに定義された一連の次のような文字を Unicode 規格のシンボルには。</span><span class="sxs-lookup"><span data-stu-id="31ffd-897">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="31ffd-898">通貨記号。</span><span class="sxs-lookup"><span data-stu-id="31ffd-898">Currency symbols.</span></span>  
  
-   <span data-ttu-id="31ffd-899">文字種の記号、数学的な英数字記号だけでなく ℅、№ などの記号のセットが含まれていると™ します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-899">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="31ffd-900">文字と下付き文字などのフォームを番号します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-900">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="31ffd-901">算術演算子、および矢印です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-901">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="31ffd-902">幾何学模様の記号。</span><span class="sxs-lookup"><span data-stu-id="31ffd-902">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="31ffd-903">技術的な記号です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-903">Technical symbols.</span></span>  
  
-   <span data-ttu-id="31ffd-904">ブライユ点字パターン。</span><span class="sxs-lookup"><span data-stu-id="31ffd-904">Braille patterns.</span></span>  
  
-   <span data-ttu-id="31ffd-905">飾り。</span><span class="sxs-lookup"><span data-stu-id="31ffd-905">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-906">次のコード例を示します<xref:System.Char.IsSymbol%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-906">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : string * int -&gt; bool" Usage="System.char.IsSymbol (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-907">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-907">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-908">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-908">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-909">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-909">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-910">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-910">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-911">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-911">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="31ffd-912">有効なシンボルでは、次のカテゴリのメンバーである<xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`、 `CurrencySymbol`、 `ModifierSymbol`、および`OtherSymbol`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-912">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="31ffd-913">大まかに定義された一連の次のような文字を Unicode 規格のシンボルには。</span><span class="sxs-lookup"><span data-stu-id="31ffd-913">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="31ffd-914">通貨記号。</span><span class="sxs-lookup"><span data-stu-id="31ffd-914">Currency symbols.</span></span>  
  
-   <span data-ttu-id="31ffd-915">文字種の記号、数学的な英数字記号だけでなく ℅、№ などの記号のセットが含まれていると™ します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-915">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="31ffd-916">文字と下付き文字などのフォームを番号します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-916">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="31ffd-917">算術演算子、および矢印です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-917">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="31ffd-918">幾何学模様の記号。</span><span class="sxs-lookup"><span data-stu-id="31ffd-918">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="31ffd-919">技術的な記号です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-919">Technical symbols.</span></span>  
  
-   <span data-ttu-id="31ffd-920">ブライユ点字パターン。</span><span class="sxs-lookup"><span data-stu-id="31ffd-920">Braille patterns.</span></span>  
  
-   <span data-ttu-id="31ffd-921">飾り。</span><span class="sxs-lookup"><span data-stu-id="31ffd-921">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-922">次のコード例を示します<xref:System.Char.IsSymbol%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-922">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-923">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-923">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-924">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-924">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-925">Indicates whether a Unicode character is categorized as an uppercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-925">Indicates whether a Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(char c);" />
      <MemberSignature Language="F#" Value="static member IsUpper : char -&gt; bool" Usage="System.char.IsUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-926">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-926">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-927">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-927">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-928">
            <see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-928">
              <see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-929">有効な文字を大文字で、次のカテゴリのメンバーである<xref:System.Globalization.UnicodeCategory>:`UppercaseLetter`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-929">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsLower(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsUpper : string * int -&gt; bool" Usage="System.char.IsUpper (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-930">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-930">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-931">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-931">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-932">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-932">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-933">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-933">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-934">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-934">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="31ffd-935">有効な文字を大文字で、次のカテゴリのメンバーである<xref:System.Globalization.UnicodeCategory>:`UppercaseLetter`です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-935">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-936">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-936">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-937">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-937">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWhiteSpace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-938">Indicates whether a Unicode character is categorized as white space.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-938">Indicates whether a Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-939">空白文字は、次の Unicode 文字です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-939">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="31ffd-940">メンバー、<xref:System.Globalization.UnicodeCategory.SpaceSeparator>カテゴリでが含まれていますが、文字のスペース (u+0020)、OGHAM 領域マーク (U +0 1680)、EN クアッド (U +0 2000)、EM クアッド (U +0 2001 年)、EN スペース (U +0 2002)、全角スペース (U +0 2003)、3-EM あたりスペース (U +0 2004 年)、4-EM あたりスペース (U +0 2005)、6-EM あたり(U +0 2006) の領域、領域の図 (U +0 2007)、句読点をシン (U +0 2008)、スペース (U +0 2009 年)、スペース髪領域 (200 U + a)、幅の狭い非分割領域 (U +0 202F)、MEDIUM 数学的な領域 (U +0 205F)、および全角スペース (u+3000)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-940">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="31ffd-941">メンバー、<xref:System.Globalization.UnicodeCategory.LineSeparator>カテゴリで、行区切り記号文字だけで構成されます (u+2028)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-941">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="31ffd-942">メンバー、<xref:System.Globalization.UnicodeCategory.ParagraphSeparator>段落区切り記号文字のみから構成されるカテゴリ (u+2029)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-942">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="31ffd-943">文字の集計の文字 (u+0009)、ライン フィード (u+000 a)、行の集計 (U +0 000B)、フォーム フィード (U + 000 C)、キャリッジ リターン (U+000D)、次に、行 (U +0 0085)、および非分割領域 (U +0 00A0)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-943">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), NEXT LINE (U+0085), and NO-BREAK SPACE (U+00A0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(char c);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : char -&gt; bool" Usage="System.char.IsWhiteSpace c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-944">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-944">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-945">Indicates whether the specified Unicode character is categorized as white space.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-945">Indicates whether the specified Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-946">
            <see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-946">
              <see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-947">空白文字は、次の Unicode 文字です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-947">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="31ffd-948">メンバー、<xref:System.Globalization.UnicodeCategory.SpaceSeparator>カテゴリで、スペース文字が含まれています (u+0020) 非分割領域 (U +0 00A0)、OGHAM 領域マーク (U +0 1680)、EN クアッド (U +0 2000)、EM クアッド (U +0 2001 年)、EN スペース (U +0 2002)、全角スペース (U +0 2003)、3-EM あたりスペース (U +0 2004 年)、4-EM あたりスペース (U+ 2005)、6-EM あたりスペース (U +0 2006)、図の領域 (U +0 2007)、句読点をシン (U +0 2008)、スペース (U +0 2009 年)、スペース髪領域 (200 U + a)、幅の狭い非分割領域 (U +0 202F)、MEDIUM 数学的な領域 (U +0 205F)、および全角スペース (u+3000)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-948">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="31ffd-949">メンバー、<xref:System.Globalization.UnicodeCategory.LineSeparator>カテゴリで、行区切り記号文字だけで構成されます (u+2028)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-949">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="31ffd-950">メンバー、<xref:System.Globalization.UnicodeCategory.ParagraphSeparator>段落区切り記号文字のみから構成されるカテゴリ (u+2029)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-950">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="31ffd-951">文字のタブ文字 (u+0009)、ライン フィード (u+000 a)、行の集計 (U +0 000B)、フォーム フィード (U + 000 C)、キャリッジ リターン (U+000D)、および次の行 (U +0 0085)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-951">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-952">次の例で、<xref:System.Char.IsWhiteSpace%28System.Char%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-952">The following example demonstrates the <xref:System.Char.IsWhiteSpace%28System.Char%29> method.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : string * int -&gt; bool" Usage="System.char.IsWhiteSpace (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-953">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-953">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="31ffd-954">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-954">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-955">Indicates whether the character at the specified position in a specified string is categorized as white space.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-955">Indicates whether the character at the specified position in a specified string is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-956">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-956">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-957">文字列内の文字位置では、0 から始まるインデックスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-957">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="31ffd-958">空白文字は、次の Unicode 文字です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-958">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="31ffd-959">メンバー、<xref:System.Globalization.UnicodeCategory.SpaceSeparator>カテゴリで、スペース文字が含まれています (u+0020) 非分割領域 (U +0 00A0)、OGHAM 領域マーク (U +0 1680)、EN クアッド (U +0 2000)、EM クアッド (U +0 2001 年)、EN スペース (U +0 2002)、全角スペース (U +0 2003)、3-EM あたりスペース (U +0 2004 年)、4-EM あたりスペース (U+ 2005)、6-EM あたりスペース (U +0 2006)、図の領域 (U +0 2007)、句読点をシン (U +0 2008)、スペース (U +0 2009 年)、スペース髪領域 (200 U + a)、幅の狭い非分割領域 (U +0 202F)、MEDIUM 数学的な領域 (U +0 205F)、および全角スペース (u+3000)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-959">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="31ffd-960">メンバー、<xref:System.Globalization.UnicodeCategory.LineSeparator>カテゴリで、行区切り記号文字だけで構成されます (u+2028)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-960">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="31ffd-961">メンバー、<xref:System.Globalization.UnicodeCategory.ParagraphSeparator>段落区切り記号文字のみから構成されるカテゴリ (u+2029)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-961">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="31ffd-962">文字のタブ文字 (u+0009)、ライン フィード (u+000 a)、行の集計 (U +0 000B)、フォーム フィード (U + 000 C)、キャリッジ リターン (U+000D)、および次の行 (U +0 0085)。</span><span class="sxs-lookup"><span data-stu-id="31ffd-962">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-963">次のコード例を示します<xref:System.Char.IsWhiteSpace%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-963">The following code example demonstrates <xref:System.Char.IsWhiteSpace%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-964">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-964">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31ffd-965">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-965">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxValue;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : char" Usage="System.char.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-966">Represents the largest possible value of a <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-966">Represents the largest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="31ffd-967">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-967">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-968">この定数の値は、16 進数 0 xffff です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-968">The value of this constant is hexadecimal 0xFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinValue;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : char" Usage="System.char.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-969">Represents the smallest possible value of a <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-969">Represents the smallest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="31ffd-970">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-970">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-971">この定数の値は、16 進数の 0x00 です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-971">The value of this constant is hexadecimal 0x00.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static char Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; char" Usage="System.char.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-972">A string that contains a single character, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-972">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-973">Converts the value of the specified string to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-973">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-974">A Unicode character equivalent to the sole character in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-974">A Unicode character equivalent to the sole character in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="31ffd-975">次のコード例を示します<xref:System.Char.Parse%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-975">The following code example demonstrates <xref:System.Char.Parse%2A>.</span></span>  
  
 [!code-cpp[System.Char.Parse#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Parse/CPP/parse.cpp#15)]
 [!code-csharp[System.Char.Parse#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Parse/CS/parse.cs#15)]
 [!code-vb[System.Char.Parse#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Parse/VB/parse.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-976">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-976">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="31ffd-977">The length of <paramref name="s" /> is not 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-977">The length of <paramref name="s" /> is not 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-978">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-978">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-979">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-979">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="31ffd-980">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-980">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-981">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-981">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="31ffd-982">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-982">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="31ffd-983">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-983">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-984">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-984">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-985">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-985">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-986">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-986">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-987">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-987">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="31ffd-988">これは、<xref:System.Char> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-988">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="31ffd-989">推奨される代替手段が呼び出されて、<xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-989">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-990">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-990">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-991">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-991">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-992">The value of the current <see cref="T:System.Char" /> object unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-992">The value of the current <see cref="T:System.Char" /> object unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-993">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-993">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="31ffd-994">これは、<xref:System.Char> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-994">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-995">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-995">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-996">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-996">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="31ffd-997">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-997">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-998">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-998">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="31ffd-999">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-999">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-1000">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1000">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1001">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1001">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="31ffd-1002">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1002">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1003">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1003">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="31ffd-1004">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1004">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-1005">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1005">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1006">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1006">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="31ffd-1007">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1007">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1008">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1008">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="31ffd-1009">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1009">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-1010">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1010">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1011">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1011">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1012">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1012">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1013">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1013">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="31ffd-1014">これは、<xref:System.Char> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1014">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="31ffd-1015">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1015">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-1016">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1016">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1017">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1017">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1018">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1018">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1019">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1019">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="31ffd-1020">これは、<xref:System.Char> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1020">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="31ffd-1021">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1021">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-1022">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1022">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1023">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1023">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1024">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1024">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1025">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1025">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="31ffd-1026">これは、<xref:System.Char> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1026">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="31ffd-1027">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1027">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-1028">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1028">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1029">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1029">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1030">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1030">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1031">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1031">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="31ffd-1032">これは、<xref:System.Char> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1032">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="31ffd-1033">推奨される代替手段が呼び出されて、<xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1033">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-1034">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1034">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1035">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1035">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="31ffd-1036">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1036">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1037">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1037">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="31ffd-1038">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1038">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="31ffd-1039">A <see cref="T:System.Type" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1039">A <see cref="T:System.Type" /> object.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="31ffd-1040">An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1040">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1041">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1041">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1042">An object of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1042">An object of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1043">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1043">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="31ffd-1044">これは、<xref:System.Char> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1044">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="31ffd-1045">推奨される代替手段が呼び出されて、<xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1045">The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-1046">
            <paramref name="type" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1046">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="31ffd-1047">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1047">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-1048">An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1048">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="31ffd-1049">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1049">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1050">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1050">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1051">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1051">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1052">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1052">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="31ffd-1053">これは、<xref:System.Char> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1053">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="31ffd-1054">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1054">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-1055">An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1055">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="31ffd-1056">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1056">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1057">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1057">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1058">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1058">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1059">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1059">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="31ffd-1060">これは、<xref:System.Char> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1060">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="31ffd-1061">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1061">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-1062">An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1062">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="31ffd-1063">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1063">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1064">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1064">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1065">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1065">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1066">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1066">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="31ffd-1067">これは、<xref:System.Char> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1067">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="31ffd-1068">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1068">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-1069">Converts the value of a Unicode character to its lowercase equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1069">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c);" />
      <MemberSignature Language="F#" Value="static member ToLower : char -&gt; char" Usage="System.char.ToLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-1070">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1070">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1071">Converts the value of a Unicode character to its lowercase equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1071">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1072">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1072">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1073">大文字小文字の規則は、現在のカルチャから取得されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1073">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="31ffd-1074">使用して<xref:System.String.ToLower%2A?displayProperty=nameWithType>文字列を小文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1074">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-1075">次の例で<xref:System.Char.ToLower%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1075">The following example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="31ffd-1076">
            <para>説明に従って [を使用して Strings](~/docs/standard/base-types/best-practices-strings.md) のベスト プラクティスをお勧め既定値を置き換える文字列の大文字小文字の区別と文字の大文字と小文字のメソッドを呼び出すことは避けることです。代わりに、パラメーターを明示的に指定する必要のあるメソッドを呼び出す必要があります。現在のカルチャの大文字と小文字の規則を使用して小文字の文字を変換するを呼び出して、<see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />の値を持つメソッド オーバー ロード<see cref="P:System.Globalization.CultureInfo.CurrentCulture" />の<paramref name="culture" />パラメーター。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1076">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToLower : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToLower (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-1077">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1077">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="31ffd-1078">An object that supplies culture-specific casing rules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1078">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1079">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1079">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1080">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1080">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1081">使用して<xref:System.String.ToLower%2A?displayProperty=nameWithType>文字列を小文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1081">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-1082">次のコード例を示します<xref:System.Char.ToLower%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1082">The following code example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-1083">
            <paramref name="culture" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1083">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static char ToLowerInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLowerInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLowerInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToLowerInvariant : char -&gt; char" Usage="System.char.ToLowerInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-1084">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1084">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1085">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1085">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1086">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1086">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1087">アプリケーションは、現在のカルチャによる影響はありませんが、予測可能な方法で変更する文字の大文字と小文字に依存して場合を使用して、<xref:System.Char.ToLowerInvariant%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1087">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="31ffd-1088"><xref:System.Char.ToLowerInvariant%2A>メソッドは`ToLower(Char, CultureInfo.InvariantCulture)`します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1088">The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="31ffd-1089">使用して<xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType>文字列を小文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1089">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-1090">Converts the value of this instance to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1090">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="char.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-1091">Converts the value of this instance to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1091">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1092">The string representation of the value of this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1092">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="31ffd-1093">次のコード例を示します<xref:System.Char.ToString%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1093">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (c As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char c);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.char.ToString c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-1094">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1094">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1095">Converts the specified Unicode character to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1095">Converts the specified Unicode character to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1096">The string representation of the value of <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1096">The string representation of the value of <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="31ffd-1097">次のコード例を示します<xref:System.Char.ToString%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1097">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="char.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="31ffd-1098">(Reserved) An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1098">(Reserved) An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1099">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1099">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1100">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1100">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1101">`provider`パラメーターは無視されます。 この操作には参加しません。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1101">The `provider` parameter is ignored; it does not participate in this operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-1102">次のコード例に示しますのオーバー ロード<xref:System.Char.ToString%2A>です。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1102">The following code example demonstrates an overload of <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31ffd-1103">Converts the value of a Unicode character to its uppercase equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1103">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char -&gt; char" Usage="System.char.ToUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-1104">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1104">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1105">Converts the value of a Unicode character to its uppercase equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1105">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1106">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1106">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1107">大文字小文字の規則は、現在のカルチャから取得されます。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1107">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="31ffd-1108">使用して<xref:System.String.ToUpper%2A?displayProperty=nameWithType>文字列を大文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1108">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-1109">次の例は、配列内の各文字を等価な大文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1109">The following example converts each character in an array to its uppercase equivalent.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper1.cs#1)]
 [!code-vb[System.Char.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="31ffd-1110">
            <para>説明に従って [を使用して Strings](~/docs/standard/base-types/best-practices-strings.md) のベスト プラクティスをお勧め既定値を置き換える文字列の大文字小文字の区別と文字の大文字と小文字のメソッドを呼び出すことは避けることです。代わりに、パラメーターを明示的に指定する必要のあるメソッドを呼び出す必要があります。現在のカルチャの大文字と小文字の規則を使用して大文字の文字を変換するを呼び出して、<see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />の値を持つメソッド オーバー ロード<see cref="P:System.Globalization.CultureInfo.CurrentCulture" />の<paramref name="culture" />パラメーター。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1110">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToUpper (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-1111">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1111">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="31ffd-1112">An object that supplies culture-specific casing rules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1112">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1113">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1113">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1114">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1114">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1115">使用して<xref:System.String.ToUpper%2A?displayProperty=nameWithType>文字列を大文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1115">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-1116">次の例は、配列内の各文字を EN-US カルチャ、インバリアント カルチャ、および TR-TR カルチャの大文字表現に変換します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1116">The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture.</span></span> <span data-ttu-id="31ffd-1117">この例では、各英文字の大文字表現では、1 つのケースを除くすべてのカルチャと一致します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1117">In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case.</span></span> <span data-ttu-id="31ffd-1118">小文字の"i"文字"I"(u+0069) に変換 (u+0049) EN-US およびインバリアント カルチャですを""(u+0130) TR-TR カルチャでします。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1118">The lowercase "i" character (U+0069) converts to "I" (U+0049) in the en-US and invariant cultures, but to "İ" (U+0130) in the tr-TR culture.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper5.cs#2)]
 [!code-vb[System.Char.ToUpper#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper5.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31ffd-1119">
            <paramref name="culture" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1119">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static char ToUpperInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpperInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpperInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpperInvariant : char -&gt; char" Usage="System.char.ToUpperInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="31ffd-1120">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1120">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1121">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1121">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1122">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1122">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1123">場合は、アプリケーションは、現在のカルチャによる影響はありませんが、予測可能な方法で変更する文字の大文字と小文字に依存してを使用して、<xref:System.Char.ToUpperInvariant%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1123">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.</span></span>  <span data-ttu-id="31ffd-1124"><xref:System.Char.ToUpperInvariant%2A>メソッドは`ToUpper(Char, CultureInfo.InvariantCulture)`します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1124">The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="31ffd-1125">使用して<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>文字列を大文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1125">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out char result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] char&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.TryParse(System.String,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] char % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.char.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Char&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="31ffd-1126">A string that contains a single character, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1126">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="31ffd-1127">When this method returns, contains a Unicode character equivalent to the sole character in <c>s</c>, if the conversion succeeded, or an undefined value if the conversion failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1127">When this method returns, contains a Unicode character equivalent to the sole character in <c>s</c>, if the conversion succeeded, or an undefined value if the conversion failed.</span>
          </span>
          <span data-ttu-id="31ffd-1128">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or the length of <c>s</c> is not 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1128">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or the length of <c>s</c> is not 1.</span>
          </span>
          <span data-ttu-id="31ffd-1129">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1129">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31ffd-1130">Converts the value of the specified string to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1130">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
          <span data-ttu-id="31ffd-1131">A return code indicates whether the conversion succeeded or failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1131">A return code indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31ffd-1132">
            <see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31ffd-1132">
              <see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31ffd-1133"><xref:System.Char.TryParse%2A>などのメソッドは、<xref:System.Char.Parse%2A>メソッドを除く、<xref:System.Char.TryParse%2A>変換が失敗した場合、メソッドが例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1133">The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31ffd-1134">次のコード例に示しますのオーバー ロード、<xref:System.Char.TryParse%2A>いくつかの基本型のメソッドと<xref:System.DateTime.TryParseExact%2A>メソッドを<xref:System.DateTime>基本データ型。</span><span class="sxs-lookup"><span data-stu-id="31ffd-1134">The following code example demonstrates overloads of the <xref:System.Char.TryParse%2A> method for several base types, and the <xref:System.DateTime.TryParseExact%2A> method for the <xref:System.DateTime> base type.</span></span>  
  
 [!code-cpp[T.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.TryParse/CPP/tp.cpp#1)]
 [!code-csharp[T.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.TryParse/CS/tp.cs#1)]
 [!code-vb[T.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.TryParse/VB/tp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>