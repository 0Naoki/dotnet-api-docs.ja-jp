<Type Name="Tuple" FullName="System.Tuple">
  <Metadata><Meta Name="ms.openlocfilehash" Value="82581947b967089b5d9882a251814e9607523939" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58739121" /></Metadata><TypeSignature Language="C#" Value="public static class Tuple" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Tuple extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Tuple" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple" />
  <TypeSignature Language="C++ CLI" Value="public ref class Tuple abstract sealed" />
  <TypeSignature Language="F#" Value="type Tuple = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>組オブジェクトを作成するための静的メソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 タプルとは、特定の数と要素のシーケンスを持つデータ構造です。 タプルの例は、最初の要素、3 番目の要素では、その年の 2 番目の要素と個人の収入における年のユーザーの名前などの識別子を格納するために使用する (3 タプル、すなわちトリプルと呼ばれます) 3 つの要素を含むデータ構造です。 .NET Framework は、1 ~ 7 要素を持つタプルを直接サポートします。 さらに、8 個以上の要素のタプルを作成で組オブジェクトを入れ子にして、<xref:System.Tuple%608.Rest%2A>のプロパティを<xref:System.Tuple%608>オブジェクト。  
  
 タプルは、4 つの方法でよく使用されます。  
  
-   単一のデータ セットを表します。 たとえば、タプルは、データベースのレコードを表すことができ、そのコンポーネントは、レコードの個々 のフィールドを表すことができます。  
  
-   簡単にアクセスして、データ セットの操作を提供します。  
  
-   使用せず、メソッドから複数の値を返す`out`パラメーター (c#) または`ByRef`(Visual Basic) でのパラメーター。  
  
-   1 つのパラメーターを使用してメソッドには、複数値を渡す。 たとえば、<xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType>メソッドが 1 つのパラメーターの起動時にスレッドを実行する方法の 1 つの値を指定することができます。 指定した場合、<xref:System.Tuple%603>メソッドの引数としてオブジェクトのデータの 3 つの項目を含む、スレッドのスタートアップ ルーチンを指定することができます。  
  
 <xref:System.Tuple>クラス自体を表さないタプル。 代わりに、.NET Framework でサポートされているタプル型のインスタンスを作成するための静的メソッドを提供するクラスになります。 タプルの各コンポーネントの型を明示的に指定せずに、組のオブジェクトをインスタンス化を呼び出すことができるヘルパー メソッドを提供します。  
  
 タプル クラスのインスタンスを作成するには、クラス コンス トラクターを呼び出すことによって、これを行うコードは複雑です。 次の例では、クラス コンス トラクターを使用して、7 組を作成または 2000 1950年から各国勢調査のニューヨーク市の人口データを含む 7 組。  
  
 [!code-csharp[System.Tuple.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.class/vb/example1.vb#1)]  
  
 ヘルパー メソッドを使用して同じタプル オブジェクトを作成するは、次の例のようにより簡単です。  
  
 [!code-csharp[System.Tuple.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.class/cs/example1.cs#2)]
 [!code-vb[System.Tuple.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.class/vb/example1.vb#2)]  
  
 <xref:System.Tuple.Create%2A>ヘルパー メソッドが直接 1 から 8 つのコンポーネント (つまり、1 ~ 構成される組) にある組オブジェクトの作成をサポートします。 タプルのコンポーネントの数に事実上制限はありませんが、ヘルパー メソッドは 9 つまたは複数のコンポーネントを持つタプルを作成するのには使用できません。 このようなタプルを作成するには、呼び出す必要がある、<xref:System.Tuple%608.%23ctor%2A?displayProperty=nameWithType>コンス トラクター。  
  
> [!NOTE]
>  追加情報とタプルを使用する例については、.NET Framework 内の個々 のタプル型のドキュメントを参照してください。 これらは、このトピックの最後に「参照」セクションに表示されます。  
  
   
  
## Examples  
 次の例では、8 組 (組) を含む 20 未満の素数を作成します。  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Create&lt;T1&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しい組オブジェクトを作成します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1&gt; Create&lt;T1&gt; (T1 item1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`1&lt;!!T1&gt; Create&lt;T1&gt;(!!T1 item1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1) (item1 As T1) As Tuple(Of T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA; static Tuple&lt;T1&gt; ^ Create(T1 item1);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 -&gt; 'T1" Usage="System.Tuple.Create item1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
      </Parameters>
      <Docs>
        <typeparam name="T1">組の唯一のコンポーネントの型。</typeparam>
        <param name="item1">組の唯一のコンポーネントの値。</param>
        <summary>新しい 1 組 (1 つの要素で構成される組) を作成します。</summary>
        <returns>値が (<paramref name="item1" />) である 1 組。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple.Create%2A> そのコンポーネントの型を明示的に指定することがなく、1 組のオブジェクトをインスタンス化を呼び出すことができるヘルパー メソッド。 次の例では、<xref:System.Tuple.Create%2A>メソッドを持つコンポーネントのタイプは 1 組をインスタンス化する<xref:System.Int32>します。  
  
 [!code-csharp[System.Tuple.Create#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#1)]
 [!code-vb[System.Tuple.Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#1)]  
  
 このコードは次の呼び出しに相当、<xref:System.Tuple%601.%23ctor%2A>クラスのコンス トラクター。  
  
 [!code-csharp[System.Tuple.Create#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#2)]
 [!code-vb[System.Tuple.Create#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`1" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2&gt; Create&lt;T1,T2&gt; (T1 item1, T2 item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`2&lt;!!T1, !!T2&gt; Create&lt;T1, T2&gt;(!!T1 item1, !!T2 item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``2(``0,``1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2) (item1 As T1, item2 As T2) As Tuple(Of T1, T2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static Tuple&lt;T1, T2&gt; ^ Create(T1 item1, T2 item2);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 -&gt; 'T1 * 'T2" Usage="System.Tuple.Create (item1, item2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
      </Parameters>
      <Docs>
        <typeparam name="T1">組の 1 番目のコンポーネントの型。</typeparam>
        <typeparam name="T2">組の 2 番目のコンポーネントの型。</typeparam>
        <param name="item1">組の 1 番目のコンポーネントの値。</param>
        <param name="item2">組の 2 番目のコンポーネントの値。</param>
        <summary>新しい 2 組 (2 つの要素で構成される組) を作成します。</summary>
        <returns>値が (<paramref name="item1" />, <paramref name="item2" />) である 2 組。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple.Create%2A> 2 タプル オブジェクトをインスタンス化を明示的にそのコンポーネントの種類を指定しなくても呼び出すことができるヘルパー メソッド。 次の例では、 <xref:System.Tuple.Create%2A> 2 タプルをインスタンス化するメソッド。  
  
 [!code-csharp[System.Tuple.Create#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#3)]
 [!code-vb[System.Tuple.Create#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#3)]  
  
 このコードは次の呼び出しに相当、<xref:System.Tuple%602.%23ctor%2A>クラスのコンス トラクター。  
  
 [!code-csharp[System.Tuple.Create#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#4)]
 [!code-vb[System.Tuple.Create#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`2" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3&gt; Create&lt;T1,T2,T3&gt; (T1 item1, T2 item2, T3 item3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; Create&lt;T1, T2, T3&gt;(!!T1 item1, !!T2 item2, !!T3 item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``3(``0,``1,``2)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3) (item1 As T1, item2 As T2, item3 As T3) As Tuple(Of T1, T2, T3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static Tuple&lt;T1, T2, T3&gt; ^ Create(T1 item1, T2 item2, T3 item3);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 * 'T3 -&gt; 'T1 * 'T2 * 'T3" Usage="System.Tuple.Create (item1, item2, item3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
      </Parameters>
      <Docs>
        <typeparam name="T1">組の 1 番目のコンポーネントの型。</typeparam>
        <typeparam name="T2">組の 2 番目のコンポーネントの型。</typeparam>
        <typeparam name="T3">組の 3 番目のコンポーネントの型。</typeparam>
        <param name="item1">組の 1 番目のコンポーネントの値。</param>
        <param name="item2">組の 2 番目のコンポーネントの値。</param>
        <param name="item3">組の 3 番目のコンポーネントの値。</param>
        <summary>新しい 3 組 (3 つの要素で構成される組) を作成します。</summary>
        <returns>値が (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />) である 3 組。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple.Create%2A> 3 組オブジェクトをインスタンス化を明示的にそのコンポーネントの種類を指定しなくても呼び出すことができるヘルパー メソッド。 次の例では、 <xref:System.Tuple.Create%2A> 3 タプルをインスタンス化するメソッド。  
  
 [!code-csharp[System.Tuple.Create#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#5)]
 [!code-vb[System.Tuple.Create#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#5)]  
  
 このコードは次の呼び出しに相当、<xref:System.Tuple%603.%23ctor%2A?displayProperty=nameWithType>クラスのコンス トラクター。  
  
 [!code-csharp[System.Tuple.Create#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#6)]
 [!code-vb[System.Tuple.Create#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`3" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4&gt; Create&lt;T1,T2,T3,T4&gt; (T1 item1, T2 item2, T3 item3, T4 item4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; Create&lt;T1, T2, T3, T4&gt;(!!T1 item1, !!T2 item2, !!T3 item3, !!T4 item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``4(``0,``1,``2,``3)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4) (item1 As T1, item2 As T2, item3 As T3, item4 As T4) As Tuple(Of T1, T2, T3, T4)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA; static Tuple&lt;T1, T2, T3, T4&gt; ^ Create(T1 item1, T2 item2, T3 item3, T4 item4);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 * 'T3 * 'T4 -&gt; 'T1 * 'T2 * 'T3 * 'T4" Usage="System.Tuple.Create (item1, item2, item3, item4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
      </Parameters>
      <Docs>
        <typeparam name="T1">組の 1 番目のコンポーネントの型。</typeparam>
        <typeparam name="T2">組の 2 番目のコンポーネントの型。</typeparam>
        <typeparam name="T3">組の 3 番目のコンポーネントの型。</typeparam>
        <typeparam name="T4">組の 4 番目のコンポーネントの型。</typeparam>
        <param name="item1">組の 1 番目のコンポーネントの値。</param>
        <param name="item2">組の 2 番目のコンポーネントの値。</param>
        <param name="item3">組の 3 番目のコンポーネントの値。</param>
        <param name="item4">組の 4 番目のコンポーネントの値。</param>
        <summary>新しい 4 組 (4 つの要素で構成される組) を作成します。</summary>
        <returns>値が (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />) である 4 組。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple.Create%2A> そのコンポーネントの型を明示的に指定することがなく、4 組オブジェクトをインスタンス化を呼び出すことができるヘルパー メソッド。 次の例では、 <xref:System.Tuple.Create%2A> 4 タプルをインスタンス化するメソッド。  
  
 [!code-csharp[System.Tuple.Create#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#7)]
 [!code-vb[System.Tuple.Create#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#7)]  
  
 このコードは次の呼び出しに相当、<xref:System.Tuple%604.%23ctor%2A?displayProperty=nameWithType>クラスのコンス トラクター。  
  
 [!code-csharp[System.Tuple.Create#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#8)]
 [!code-vb[System.Tuple.Create#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`4" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5&gt; Create&lt;T1,T2,T3,T4,T5&gt; (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; Create&lt;T1, T2, T3, T4, T5&gt;(!!T1 item1, !!T2 item2, !!T3 item3, !!T4 item4, !!T5 item5) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5) (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5) As Tuple(Of T1, T2, T3, T4, T5)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA; static Tuple&lt;T1, T2, T3, T4, T5&gt; ^ Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5" Usage="System.Tuple.Create (item1, item2, item3, item4, item5)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
      </Parameters>
      <Docs>
        <typeparam name="T1">組の 1 番目のコンポーネントの型。</typeparam>
        <typeparam name="T2">組の 2 番目のコンポーネントの型。</typeparam>
        <typeparam name="T3">組の 3 番目のコンポーネントの型。</typeparam>
        <typeparam name="T4">組の 4 番目のコンポーネントの型。</typeparam>
        <typeparam name="T5">組の 5 番目のコンポーネントの型。</typeparam>
        <param name="item1">組の 1 番目のコンポーネントの値。</param>
        <param name="item2">組の 2 番目のコンポーネントの値。</param>
        <param name="item3">組の 3 番目のコンポーネントの値。</param>
        <param name="item4">組の 4 番目のコンポーネントの値。</param>
        <param name="item5">組の 5 番目のコンポーネントの値。</param>
        <summary>新しい 5 組 (5 つの要素で構成される組) を作成します。</summary>
        <returns>値が (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />) である 5 組。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple.Create%2A> 5 タプル オブジェクトをインスタンス化を明示的にそのコンポーネントの種類を指定しなくても呼び出すことができるヘルパー メソッド。 次の例では、 <xref:System.Tuple.Create%2A> 5 タプルをインスタンス化するメソッド。  
  
 [!code-csharp[System.Tuple.Create#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#9)]
 [!code-vb[System.Tuple.Create#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#9)]  
  
 このコードは次の呼び出しに相当、<xref:System.Tuple%605.%23ctor%2A>クラスのコンス トラクター。  
  
 [!code-csharp[System.Tuple.Create#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#10)]
 [!code-vb[System.Tuple.Create#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`5" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6&gt; Create&lt;T1,T2,T3,T4,T5,T6&gt; (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; Create&lt;T1, T2, T3, T4, T5, T6&gt;(!!T1 item1, !!T2 item2, !!T3 item3, !!T4 item4, !!T5 item5, !!T6 item6) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6) (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6) As Tuple(Of T1, T2, T3, T4, T5, T6)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6&gt; ^ Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6" Usage="System.Tuple.Create (item1, item2, item3, item4, item5, item6)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
      </Parameters>
      <Docs>
        <typeparam name="T1">組の 1 番目のコンポーネントの型。</typeparam>
        <typeparam name="T2">組の 2 番目のコンポーネントの型。</typeparam>
        <typeparam name="T3">組の 3 番目のコンポーネントの型。</typeparam>
        <typeparam name="T4">組の 4 番目のコンポーネントの型。</typeparam>
        <typeparam name="T5">組の 5 番目のコンポーネントの型。</typeparam>
        <typeparam name="T6">組の 6 番目のコンポーネントの型。</typeparam>
        <param name="item1">組の 1 番目のコンポーネントの値。</param>
        <param name="item2">組の 2 番目のコンポーネントの値。</param>
        <param name="item3">組の 3 番目のコンポーネントの値。</param>
        <param name="item4">組の 4 番目のコンポーネントの値。</param>
        <param name="item5">組の 5 番目のコンポーネントの値。</param>
        <param name="item6">組の 6 番目のコンポーネントの値。</param>
        <summary>新しい 6 組 (6 つの要素で構成される組) 作成します。</summary>
        <returns>値が (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />) である 6 組。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple.Create%2A> 6 つのタプル オブジェクトをインスタンス化を明示的にそのコンポーネントの種類を指定しなくても呼び出すことができるヘルパー メソッド。 次の例では、 <xref:System.Tuple.Create%2A> 6 つのタプルをインスタンス化するメソッド。  
  
 [!code-csharp[System.Tuple.Create#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#11)]
 [!code-vb[System.Tuple.Create#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#11)]  
  
 このコードは次の呼び出しに相当、<xref:System.Tuple%606.%23ctor%2A>クラスのコンス トラクター。  
  
 [!code-csharp[System.Tuple.Create#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#12)]
 [!code-vb[System.Tuple.Create#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`6" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; Create&lt;T1,T2,T3,T4,T5,T6,T7&gt; (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; Create&lt;T1, T2, T3, T4, T5, T6, T7&gt;(!!T1 item1, !!T2 item2, !!T3 item3, !!T4 item4, !!T5 item5, !!T6 item6, !!T7 item7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7) (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7) As Tuple(Of T1, T2, T3, T4, T5, T6, T7)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt; ^ Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7" Usage="System.Tuple.Create (item1, item2, item3, item4, item5, item6, item7)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
      </Parameters>
      <Docs>
        <typeparam name="T1">組の 1 番目のコンポーネントの型。</typeparam>
        <typeparam name="T2">組の 2 番目のコンポーネントの型。</typeparam>
        <typeparam name="T3">組の 3 番目のコンポーネントの型。</typeparam>
        <typeparam name="T4">組の 4 番目のコンポーネントの型。</typeparam>
        <typeparam name="T5">組の 5 番目のコンポーネントの型。</typeparam>
        <typeparam name="T6">組の 6 番目のコンポーネントの型。</typeparam>
        <typeparam name="T7">組の 7 番目のコンポーネントの型。</typeparam>
        <param name="item1">組の 1 番目のコンポーネントの値。</param>
        <param name="item2">組の 2 番目のコンポーネントの値。</param>
        <param name="item3">組の 3 番目のコンポーネントの値。</param>
        <param name="item4">組の 4 番目のコンポーネントの値。</param>
        <param name="item5">組の 5 番目のコンポーネントの値。</param>
        <param name="item6">組の 6 番目のコンポーネントの値。</param>
        <param name="item7">組の 7 番目のコンポーネントの値。</param>
        <summary>新しい 7 組 (7 つの要素で構成される組) を作成します。</summary>
        <returns>値が (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />) である 7 組。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple.Create%2A> そのコンポーネントの型を明示的に指定することがなく 7 組オブジェクトをインスタンス化を呼び出すことができるヘルパー メソッド。 次の例では、 <xref:System.Tuple.Create%2A> 7 組をインスタンス化するメソッド。  
  
 [!code-csharp[System.Tuple.Create#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#13)]
 [!code-vb[System.Tuple.Create#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#13)]  
  
 このコードは次の呼び出しに相当、<xref:System.Tuple%607.%23ctor%2A>クラスのコンス トラクター。  
  
 [!code-csharp[System.Tuple.Create#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#14)]
 [!code-vb[System.Tuple.Create#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`7" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8&gt;&gt; Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`1&lt;!!T8&gt;&gt; Create&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(!!T1 item1, !!T2 item2, !!T3 item3, !!T4 item4, !!T5 item5, !!T6 item6, !!T7 item7, !!T8 item8) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8) (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7, item8 As T8) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8&gt; ^&gt; ^ Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8" Usage="System.Tuple.Create (item1, item2, item3, item4, item5, item6, item7, item8)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
        <Parameter Name="item8" Type="T8" />
      </Parameters>
      <Docs>
        <typeparam name="T1">組の 1 番目のコンポーネントの型。</typeparam>
        <typeparam name="T2">組の 2 番目のコンポーネントの型。</typeparam>
        <typeparam name="T3">組の 3 番目のコンポーネントの型。</typeparam>
        <typeparam name="T4">組の 4 番目のコンポーネントの型。</typeparam>
        <typeparam name="T5">組の 5 番目のコンポーネントの型。</typeparam>
        <typeparam name="T6">組の 6 番目のコンポーネントの型。</typeparam>
        <typeparam name="T7">組の 7 番目のコンポーネントの型。</typeparam>
        <typeparam name="T8">組の 8 番目のコンポーネントの型。</typeparam>
        <param name="item1">組の 1 番目のコンポーネントの値。</param>
        <param name="item2">組の 2 番目のコンポーネントの値。</param>
        <param name="item3">組の 3 番目のコンポーネントの値。</param>
        <param name="item4">組の 4 番目のコンポーネントの値。</param>
        <param name="item5">組の 5 番目のコンポーネントの値。</param>
        <param name="item6">組の 6 番目のコンポーネントの値。</param>
        <param name="item7">組の 7 番目のコンポーネントの値。</param>
        <param name="item8">組の 8 番目のコンポーネントの値。</param>
        <summary>新しい 8 組 (8 つの要素で構成される組) を作成します。</summary>
        <returns>8 組 (8 つの要素で構成される組)。その値は (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />, <paramref name="item8" />) です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple.Create%2A> 8 組をインスタンス化を明示的にそのコンポーネントの種類を指定しなくても呼び出すことができるヘルパー メソッド。  
  
> [!NOTE]
>  呼び出す必要があります、<xref:System.Tuple%608.%23ctor%2A?displayProperty=nameWithType>お使いの言語は、この目的に特別な構文を提供しない限り、9 つまたは複数のコンポーネントを持つタプルを作成するコンス トラクター。 静的な (`Shared` Visual basic) のメソッド、 <xref:System.Tuple> 9 つまたは複数のコンポーネントを持つタプルを作成するクラスを使用することはできません。  
  
   
  
## Examples  
 次の例では、8 組のコンポーネントが 20 未満の素数を作成します。  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 次の例で使用するのと同じ、<xref:System.Tuple%608>クラスのコンス トラクターの代わりに、<xref:System.Tuple.Create%2A>ファクトリ作成メソッド。 インスタンス化することに注意してください、 <xref:System.Tuple%608> 、入れ子になったを宣言する必要がありますので、この方法でオブジェクトにはるかに多くのコードが含まれます<xref:System.Tuple%601>オブジェクトとして、<xref:System.Tuple%608>オクタプルを生成するためにオブジェクトの 8 番目のコンポーネント。  
  
 [!code-csharp[System.Tuple.Create#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/ctor8.cs#20)]
 [!code-vb[System.Tuple.Create#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/ctor8.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`8" />
      </Docs>
    </Member>
  </Members>
</Type>