<Type Name="IObservable&lt;T&gt;" FullName="System.IObservable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4a3280f4b3d42c0a1b2a54c137f9ab2494fe7aa0" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46628473" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IObservable&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObservable`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObservable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObservable(Of Out T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObservable" />
  <TypeSignature Language="F#" Value="type IObservable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="53989-101">通知情報を提供するオブジェクト。</span>
      <span class="sxs-lookup">
        <span data-stu-id="53989-101">The object that provides notification information.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="53989-102">プッシュ ベースの通知用プロバイダーを定義します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="53989-102">Defines a provider for push-based notification.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53989-103"><xref:System.IObserver%601>と<xref:System.IObservable%601>インターフェイスが汎用化されたプッシュ ベースの通知、オブザーバー デザイン パターンとも呼ばれるメカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="53989-103">The <xref:System.IObserver%601> and <xref:System.IObservable%601> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</span></span> <span data-ttu-id="53989-104"><xref:System.IObservable%601>インターフェイス (プロバイダー); の通知を送信するクラスを表す、<xref:System.IObserver%601>インターフェイスは、受信する (オブザーバー) クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="53989-104">The <xref:System.IObservable%601> interface represents the class that sends notifications (the provider); the <xref:System.IObserver%601> interface represents the class that receives them (the observer).</span></span> <span data-ttu-id="53989-105">`T` 通知情報を提供するクラスを表します。</span><span class="sxs-lookup"><span data-stu-id="53989-105">`T` represents the class that provides the notification information.</span></span> <span data-ttu-id="53989-106">一部のプッシュ ベースの通知で、<xref:System.IObserver%601>実装と`T`同じ型を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="53989-106">In some push-based notifications, the <xref:System.IObserver%601> implementation and `T` can represent the same type.</span></span>  
  
 <span data-ttu-id="53989-107">プロバイダーは、1 つのメソッドを実装する必要があります<xref:System.IObservable%601.Subscribe%2A>オブザーバーがプッシュ ベースの通知を受信することを示します。</span><span class="sxs-lookup"><span data-stu-id="53989-107">The provider must implement a single method, <xref:System.IObservable%601.Subscribe%2A>, that indicates that an observer wants to receive push-based notifications.</span></span> <span data-ttu-id="53989-108">メソッドの呼び出し元は、オブザーバーのインスタンスを渡します。</span><span class="sxs-lookup"><span data-stu-id="53989-108">Callers to the method pass an instance of the observer.</span></span> <span data-ttu-id="53989-109">メソッドを返します、<xref:System.IDisposable>により、プロバイダーが送信を停止する前に、いつでも通知をキャンセルするオブザーバーを実装します。</span><span class="sxs-lookup"><span data-stu-id="53989-109">The method returns an <xref:System.IDisposable> implementation that enables observers to cancel notifications at any time before the provider has stopped sending them.</span></span>  
  
 <span data-ttu-id="53989-110">任意の時点では、指定されたプロバイダーは 0、1、または複数のオブザーバーがあります。</span><span class="sxs-lookup"><span data-stu-id="53989-110">At any given time, a given provider may have zero, one, or multiple observers.</span></span> <span data-ttu-id="53989-111">プロバイダーは、オブザーバーへの参照を格納すると、それらが有効である通知を送信することを確認します。</span><span class="sxs-lookup"><span data-stu-id="53989-111">The provider is responsible for storing references to observers and ensuring that they are valid before it sends notifications.</span></span> <span data-ttu-id="53989-112"><xref:System.IObservable%601>インターフェイスはオブザーバーまたは通知が送信される注文の数に関するどのような想定を行いません。</span><span class="sxs-lookup"><span data-stu-id="53989-112">The <xref:System.IObservable%601> interface does not make any assumptions about the number of observers or the order in which notifications are sent.</span></span>  
  
 <span data-ttu-id="53989-113">プロバイダーは、呼び出すことによって、オブザーバーに次の 3 種類の通知を送信<xref:System.IObserver%601>メソッド。</span><span class="sxs-lookup"><span data-stu-id="53989-113">The provider sends the following three kinds of notifications to the observer by calling <xref:System.IObserver%601> methods:</span></span>  
  
-   <span data-ttu-id="53989-114">現在のデータ。</span><span class="sxs-lookup"><span data-stu-id="53989-114">The current data.</span></span> <span data-ttu-id="53989-115">プロバイダーが呼び出すことができます、<xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType>オブザーバーを渡すメソッドを`T`を現在のデータや変更されたデータは、新しいデータを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="53989-115">The provider can call the <xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType> method to pass the observer a `T` object that has current data, changed data, or fresh data.</span></span>  
  
-   <span data-ttu-id="53989-116">エラー条件。</span><span class="sxs-lookup"><span data-stu-id="53989-116">An error condition.</span></span> <span data-ttu-id="53989-117">プロバイダーが呼び出すことができます、<xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType>何らかのエラー状態が発生したことをオブザーバーに通知するメソッド。</span><span class="sxs-lookup"><span data-stu-id="53989-117">The provider can call the <xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType> method to notify the observer that some error condition has occurred.</span></span>  
  
-   <span data-ttu-id="53989-118">さらにデータがありません。</span><span class="sxs-lookup"><span data-stu-id="53989-118">No further data.</span></span> <span data-ttu-id="53989-119">プロバイダーが呼び出すことができます、<xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType>通知の送信が完了したことをオブザーバーに通知するメソッド。</span><span class="sxs-lookup"><span data-stu-id="53989-119">The provider can call the <xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType> method to notify the observer that it has finished sending notifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53989-120">次の例は、オブザーバー デザイン パターンを示しています。</span><span class="sxs-lookup"><span data-stu-id="53989-120">The following example illustrates the observer design pattern.</span></span> <span data-ttu-id="53989-121">定義、`Location`緯度と経度の情報を含むクラスです。</span><span class="sxs-lookup"><span data-stu-id="53989-121">It defines a `Location` class that contains latitude and longitude information.</span></span>  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 <span data-ttu-id="53989-122">`LocationTracker`クラスには、<xref:System.IObservable%601>実装します。</span><span class="sxs-lookup"><span data-stu-id="53989-122">The `LocationTracker` class provides the <xref:System.IObservable%601> implementation.</span></span> <span data-ttu-id="53989-123">その`TrackLocation`メソッドは、null 許容型で渡される`Location`緯度と経度のデータを格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="53989-123">Its `TrackLocation` method is passed a nullable `Location` object that contains the latitude and longitude data.</span></span> <span data-ttu-id="53989-124">場合、`Location`値が`null`、`TrackLocation`メソッドの呼び出し、<xref:System.IObserver%601.OnNext%2A>各オブザーバーのメソッド。</span><span class="sxs-lookup"><span data-stu-id="53989-124">If the `Location` value is not `null`, the `TrackLocation` method calls the <xref:System.IObserver%601.OnNext%2A> method of each observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 <span data-ttu-id="53989-125">場合、`Location`値は`null`、`TrackLocation`メソッドをインスタンス化、`LocationUnknownException`オブジェクトで、次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="53989-125">If the `Location` value is `null`, the `TrackLocation` method instantiates a `LocationUnknownException` object, which is shown in the following example.</span></span> <span data-ttu-id="53989-126">各オブザーバーを呼び出して<xref:System.IObserver%601.OnError%2A>メソッドを渡します、`LocationUnknownException`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="53989-126">It then calls each observer's <xref:System.IObserver%601.OnError%2A> method and passes it the `LocationUnknownException` object.</span></span> <span data-ttu-id="53989-127">なお`LocationUnknownException`から派生した<xref:System.Exception>、新しいメンバーを追加しません。</span><span class="sxs-lookup"><span data-stu-id="53989-127">Note that `LocationUnknownException` derives from <xref:System.Exception>, but does not add any new members.</span></span>  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 <span data-ttu-id="53989-128">通知を受信するオブザーバーを登録、`TrackLocation`オブジェクトを呼び出すことによってその<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>メソッドで、オブザーバー オブジェクトへの参照をプライベート ジェネリックに割り当てます<xref:System.Collections.Generic.List%601>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="53989-128">Observers register to receive notifications from a `TrackLocation` object by calling its <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method, which assigns a reference to the observer object to a private generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="53989-129">メソッドを返します、`Unsubscriber`となるオブジェクト、<xref:System.IDisposable>により、通知の受信を停止するオブザーバーを実装します。</span><span class="sxs-lookup"><span data-stu-id="53989-129">The method returns an `Unsubscriber` object, which is an <xref:System.IDisposable> implementation that enables observers to stop receiving notifications.</span></span> <span data-ttu-id="53989-130">`LocationTracker`クラスも含まれています、`EndTransmission`メソッド。</span><span class="sxs-lookup"><span data-stu-id="53989-130">The `LocationTracker` class also includes an `EndTransmission` method.</span></span> <span data-ttu-id="53989-131">場所データをさらに利用できない場合は、メソッドの各オブザーバーの<xref:System.IObserver%601.OnCompleted%2A>メソッドし、オブザーバーの内部リストをクリアします。</span><span class="sxs-lookup"><span data-stu-id="53989-131">When no further location data is available, the method calls each observer's <xref:System.IObserver%601.OnCompleted%2A> method and then clears the internal list of observers.</span></span>  
  
 <span data-ttu-id="53989-132">この例で、`LocationReporter`クラスには、<xref:System.IObserver%601>実装します。</span><span class="sxs-lookup"><span data-stu-id="53989-132">In this example, the `LocationReporter` class provides the <xref:System.IObserver%601> implementation.</span></span> <span data-ttu-id="53989-133">コンソールには、現在の場所に関する情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="53989-133">It displays information about the current location to the console.</span></span> <span data-ttu-id="53989-134">そのコンス トラクターが含まれています、`name`パラメーターは、これにより、`LocationReporter`の文字列の出力で自身を識別するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="53989-134">Its constructor includes a `name` parameter, which enables the `LocationReporter` instance to identify itself in its string output.</span></span> <span data-ttu-id="53989-135">含まれています、`Subscribe`メソッドは、プロバイダーの呼び出しをラップする<xref:System.IObservable%601.Subscribe%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="53989-135">It also includes a `Subscribe` method, which wraps a call to the provider's <xref:System.IObservable%601.Subscribe%2A> method.</span></span> <span data-ttu-id="53989-136">これにより、メソッドは、返された割り当てる<xref:System.IDisposable>秘密の変数への参照。</span><span class="sxs-lookup"><span data-stu-id="53989-136">This allows the method to assign the returned <xref:System.IDisposable> reference to a private variable.</span></span> <span data-ttu-id="53989-137">`LocationReporter`クラスも含まれています、`Unsubscribe`メソッドを呼び出す、<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>によって返されるオブジェクトのメソッド、<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="53989-137">The `LocationReporter` class also includes an `Unsubscribe` method, which calls the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method of the object that is returned by the <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="53989-138">次のコード定義、`LocationReporter`クラス。</span><span class="sxs-lookup"><span data-stu-id="53989-138">The following code defines the `LocationReporter` class.</span></span>  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 <span data-ttu-id="53989-139">次のコードは、プロバイダーとオブザーバーにし、インスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="53989-139">The following code then instantiates the provider and the observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObserver`1" />
    <related type="Article" href="http://msdn.microsoft.com/library/3680171f-f522-453c-aa4a-54f755a78f88">
      <span data-ttu-id="53989-140">オブザーバー デザイン パターン</span>
      <span class="sxs-lookup">
        <span data-stu-id="53989-140">The Observer Design Pattern</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public IDisposable Subscribe (IObserver&lt;out T&gt; observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Subscribe(class System.IObserver`1&lt;!T&gt; observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Subscribe (observer As IObserver(Of Out T)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Subscribe(IObserver&lt;T&gt; ^ observer);" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : IObserver&lt;'T&gt; -&gt; IDisposable" Usage="iObservable.Subscribe observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="System.IObserver&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="observer">
          <span data-ttu-id="53989-141">通知を受け取るオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="53989-141">The object that is to receive notifications.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53989-142">オブザーバーが通知を受け取ることをプロバイダーに通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="53989-142">Notifies the provider that an observer is to receive notifications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53989-143">プロバイダーが通知の送信を完了する前に、オブザーバーが通知の受信を停止できるインターフェイスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="53989-143">A reference to an interface that allows observers to stop receiving notifications before the provider has finished sending them.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53989-144"><xref:System.IObservable%601.Subscribe%2A>プッシュ ベースの通知のオブザーバーを登録するメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="53989-144">The <xref:System.IObservable%601.Subscribe%2A> method must be called to register an observer for push-based notifications.</span></span> <span data-ttu-id="53989-145">一般的な実装、<xref:System.IObservable%601.Subscribe%2A>メソッドは、次を実行します。</span><span class="sxs-lookup"><span data-stu-id="53989-145">A typical implementation of the <xref:System.IObservable%601.Subscribe%2A> method does the following:</span></span>  
  
-   <span data-ttu-id="53989-146">など、コレクション オブジェクトで、オブザーバーへの参照を格納、<xref:System.Collections.Generic.List%601>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="53989-146">It stores a reference to the observer in a collection object, such as a <xref:System.Collections.Generic.List%601> object.</span></span>  
  
-   <span data-ttu-id="53989-147">参照を返します、<xref:System.IDisposable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="53989-147">It returns a reference to an <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="53989-148">これにより、登録を解除するオブザーバー (つまり、通知の受信を停止する)、プロバイダーが送信を完了という、サブスクライバーの前に<xref:System.IObserver%601.OnCompleted%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="53989-148">This enables observers to unsubscribe (that is, to stop receiving notifications) before the provider has finished sending them and called the subscriber's <xref:System.IObserver%601.OnCompleted%2A> method.</span></span>  
  
 <span data-ttu-id="53989-149">時間の特定のインスタンスに特定、<xref:System.IObservable%601>実装はすべてのサブスクリプションを処理し、すべてのサブスクライバーに通知する責任を負います。</span><span class="sxs-lookup"><span data-stu-id="53989-149">At any given time, a particular instance of an <xref:System.IObservable%601> implementation is responsible for handling all subscriptions and notifying all subscribers.</span></span> <span data-ttu-id="53989-150">しない限り、特定のドキュメント<xref:System.IObservable%601>実装がそれを示すオブザーバーことは避けてください前提条件について、<xref:System.IObservable%601>など複数のオブザーバーを受信する通知の順番の実装。</span><span class="sxs-lookup"><span data-stu-id="53989-150">Unless the documentation for a particular <xref:System.IObservable%601> implementation indicates otherwise, observers should make no assumptions about the <xref:System.IObservable%601> implementation, such as the order of notifications that multiple observers will receive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53989-151">次の例を示しています、<xref:System.IObservable%601.Subscribe%2A>緯度と経度の情報を報告するアプリケーションのメソッド。</span><span class="sxs-lookup"><span data-stu-id="53989-151">The following example illustrates the <xref:System.IObservable%601.Subscribe%2A> method for an application that reports latitude and longitude information.</span></span> <span data-ttu-id="53989-152">定義、<xref:System.Collections.Generic.IList%601>すべてオブザーバーへの参照を格納するコレクション オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="53989-152">It defines an <xref:System.Collections.Generic.IList%601> collection object that stores references to all observers.</span></span> <span data-ttu-id="53989-153">という名前のプライベート クラスも返します`Unsubscriber`を実装する、<xref:System.IDisposable>インターフェイスし、により、サブスクライバーにイベント通知の受信を停止します。</span><span class="sxs-lookup"><span data-stu-id="53989-153">It also returns a private class named `Unsubscriber` that implements the <xref:System.IDisposable> interface and enables subscribers to stop receiving event notifications.</span></span>  <span data-ttu-id="53989-154">例を参照してください、<xref:System.IObservable%601>完全な例についてはトピック。</span><span class="sxs-lookup"><span data-stu-id="53989-154">See the Example section of the <xref:System.IObservable%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#13)]
 [!code-vb[System.IObserver.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IObserver`1" />
      </Docs>
    </Member>
  </Members>
</Type>