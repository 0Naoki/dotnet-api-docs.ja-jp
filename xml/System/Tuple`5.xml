<Type Name="Tuple&lt;T1,T2,T3,T4,T5&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5&gt;">
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`5&lt;T1, T2, T3, T4, T5&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`5" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="93d72-101">組の最初のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="93d72-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="93d72-102">タプルの 2 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="93d72-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="93d72-103">タプルの 3 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="93d72-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="93d72-104">タプルの 4 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="93d72-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="93d72-105">組の 5 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="93d72-105">The type of the tuple's fifth component.</span></span></typeparam>
    <summary><span data-ttu-id="93d72-106">Represents a 5-tuple, or quintuple.</span><span class="sxs-lookup"><span data-stu-id="93d72-106">Represents a 5-tuple, or quintuple.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-107">組は、特定の数と一連の値を持つデータ構造です。</span><span class="sxs-lookup"><span data-stu-id="93d72-107">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="93d72-108"><xref:System.Tuple%605>クラスを表します。 5 組、または 5 倍、5 つのコンポーネントが含まれる組です。</span><span class="sxs-lookup"><span data-stu-id="93d72-108">The <xref:System.Tuple%605> class represents a 5-tuple, or quintuple, which is a tuple that has five components.</span></span>  
  
 <span data-ttu-id="93d72-109">インスタンス化することができます、<xref:System.Tuple%605>を呼び出して、オブジェクト、<xref:System.Tuple%605.%23ctor%2A>コンス トラクターまたは静的な<xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-109">You can instantiate a <xref:System.Tuple%605> object by calling either the <xref:System.Tuple%605.%23ctor%2A> constructor or the static <xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93d72-110">組のコンポーネントの値を取得するには、読み取り専用を使用して<xref:System.Tuple%605.Item1%2A>、 <xref:System.Tuple%605.Item2%2A>、 <xref:System.Tuple%605.Item3%2A>、 <xref:System.Tuple%605.Item4%2A>、および<xref:System.Tuple%605.Item5%2A>インスタンス プロパティです。</span><span class="sxs-lookup"><span data-stu-id="93d72-110">You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%605.Item1%2A>, <xref:System.Tuple%605.Item2%2A>, <xref:System.Tuple%605.Item3%2A>, <xref:System.Tuple%605.Item4%2A>, and <xref:System.Tuple%605.Item5%2A> instance properties.</span></span>  
  
 <span data-ttu-id="93d72-111">組は、4 つの方法でよく使用されます。</span><span class="sxs-lookup"><span data-stu-id="93d72-111">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="93d72-112">単一のデータのセットを表します。</span><span class="sxs-lookup"><span data-stu-id="93d72-112">To represent a single set of data.</span></span> <span data-ttu-id="93d72-113">たとえば、組は、データベースのレコードを表すことができ、そのコンポーネントは、レコードの個別のフィールドを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="93d72-113">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="93d72-114">簡単にアクセスしたり、操作、データ セットを提供します。</span><span class="sxs-lookup"><span data-stu-id="93d72-114">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="93d72-115">次の例の配列を定義する<xref:System.Tuple%605>番号で、再生、ゲームや、実行の数の合計、得られたヤード American football では、実行中の名前を格納するオブジェクトとタッチダウンが、これらのゲーム中にスコア付けします。</span><span class="sxs-lookup"><span data-stu-id="93d72-115">The following example defines an array of <xref:System.Tuple%605> objects that contain the names of running backs in American football, the number of games in which they played, and the number of carries, total yards gained, and touchdowns scored during those games.</span></span> <span data-ttu-id="93d72-116">渡されたが、配列、`ComputeStatistics`メソッドで、各実行バックのゲームの平均ヤード、キャリーごとのゲーム、平均メートル単位あたりの実行の数とタッチダウン接続試行ごとの平均数を計算します。</span><span class="sxs-lookup"><span data-stu-id="93d72-116">The array is passed to the `ComputeStatistics` method, which calculates each running back's number of carries per game, average yards per game, average yards per carry, and average number of touchdowns per attempt.</span></span>  
  
     [!code-csharp[System.Tuple\`5.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`5.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="93d72-117">使用せず、メソッドから複数の値を返す`out`パラメーター (c#) または`ByRef`パラメーター (Visual Basic の場合)。</span><span class="sxs-lookup"><span data-stu-id="93d72-117">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="93d72-118">たとえば、前の例は、の配列で、player の名前と共に、計算された統計情報を返します<xref:System.Tuple%605>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-118">For example, the previous example returns its computed statistics, along with the name of the player, in an array of <xref:System.Tuple%605> objects.</span></span>  
  
-   <span data-ttu-id="93d72-119">メソッドに渡される複数の値、1 つのパラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="93d72-119">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="93d72-120">たとえば、<xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType>メソッドには、スレッドが起動時に実行される方法を 1 つの値を提供できる 1 つのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="93d72-120">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="93d72-121">指定した場合、<xref:System.Tuple%605>オブジェクト、メソッド引数として、データの 5 つの項目を含む、スレッドのスタートアップ ルーチンを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="93d72-121">If you supply a <xref:System.Tuple%605> object as the method argument, you can supply the thread’s startup routine with five items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="93d72-122">The value of the tuple's first component.</span><span class="sxs-lookup"><span data-stu-id="93d72-122">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="93d72-123">The value of the tuple's second component.</span><span class="sxs-lookup"><span data-stu-id="93d72-123">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="93d72-124">The value of the tuple's third component.</span><span class="sxs-lookup"><span data-stu-id="93d72-124">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="93d72-125">The value of the tuple's fourth component</span><span class="sxs-lookup"><span data-stu-id="93d72-125">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="93d72-126">The value of the tuple's fifth component.</span><span class="sxs-lookup"><span data-stu-id="93d72-126">The value of the tuple's fifth component.</span></span></param>
        <summary><span data-ttu-id="93d72-127">Initializes a new instance of the <see cref="T:System.Tuple`5" /> class.</span><span class="sxs-lookup"><span data-stu-id="93d72-127">Initializes a new instance of the <see cref="T:System.Tuple`5" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-128">静的なを使用することもできます。<xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType>メソッドを明示的にそのコンポーネントの種類を指定せずに、5 タプル オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="93d72-128">You can also use the static <xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType> method to instantiate a 5-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="93d72-129">次の例では、 <xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType> 5 組の最初のコンポーネントは、型のインスタンスを作成するメソッド<xref:System.String>され、残りの 4 つのコンポーネントの型<xref:System.Int32>です。</span><span class="sxs-lookup"><span data-stu-id="93d72-129">The following example uses the <xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType> method to instantiate a 5-tuple whose first component is of type <xref:System.String> and its remaining four components are of type <xref:System.Int32>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#9)]
 [!code-vb[System.Tuple.Create#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#9)]  
  
 <span data-ttu-id="93d72-130">これは、次の呼び出しに、<xref:System.Tuple%605.%23ctor%2A>クラスのコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="93d72-130">This is equivalent to the following call to the <xref:System.Tuple%605.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#10)]
 [!code-vb[System.Tuple.Create#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="93d72-131">The object to compare with this instance.</span><span class="sxs-lookup"><span data-stu-id="93d72-131">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="93d72-132">Returns a value that indicates whether the current <see cref="T:System.Tuple`5" /> object is equal to a specified object.</span><span class="sxs-lookup"><span data-stu-id="93d72-132">Returns a value that indicates whether the current <see cref="T:System.Tuple`5" /> object is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="93d72-133"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="93d72-133"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-134">`obj`パラメーターは、次の条件下で現在のインスタンスと等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="93d72-134">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="93d72-135"><xref:System.Tuple%605>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-135">It is a <xref:System.Tuple%605> object.</span></span>  
  
-   <span data-ttu-id="93d72-136">5 つのコンポーネントでは、現在のインスタンスと同じ型です。</span><span class="sxs-lookup"><span data-stu-id="93d72-136">Its five components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="93d72-137">5 つのコンポーネントは、現在のインスタンスのものと同じです。</span><span class="sxs-lookup"><span data-stu-id="93d72-137">Its five components are equal to those of the current instance.</span></span> <span data-ttu-id="93d72-138">等しいかどうかは、各コンポーネントの既定のオブジェクトの等値比較子によって判断されます。</span><span class="sxs-lookup"><span data-stu-id="93d72-138">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93d72-139">次の例では、2 つのテスト グループの患者の温度に関するデータを含む 5 組オブジェクトの配列を定義します。</span><span class="sxs-lookup"><span data-stu-id="93d72-139">The following example defines an array of 5-tuple objects that contain data about the temperatures of patients in two test groups.</span></span> <span data-ttu-id="93d72-140">配列の最初のコンポーネントがテスト グループの数を提供し、2 番目 5 番目のコンポーネントからが 1 時間ごとに、患者の温度を提供します。</span><span class="sxs-lookup"><span data-stu-id="93d72-140">The first component of the array provides the number of the test group, and the second through fifth components provide the temperatures of a patient at hourly intervals.</span></span> <span data-ttu-id="93d72-141"><xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType>を比較するメソッドが呼び出された各<xref:System.Tuple%605>以外のすべてのオブジェクト<xref:System.Tuple%605>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-141">The <xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType> method is called to compare every <xref:System.Tuple%605> object with every other <xref:System.Tuple%605> object.</span></span> <span data-ttu-id="93d72-142">出力はことを示しています、<xref:System.Tuple%605.Equals%2A>メソッドを返します。`true`される場合にのみの 5 つのコンポーネントをすべて、<xref:System.Tuple%605>オブジェクトが同じ値を持ちます。</span><span class="sxs-lookup"><span data-stu-id="93d72-142">The output illustrates that the <xref:System.Tuple%605.Equals%2A> method returns `true` only when all five components of the <xref:System.Tuple%605> objects have equal values.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`5.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93d72-143">Returns the hash code for the current <see cref="T:System.Tuple`5" /> object.</span><span class="sxs-lookup"><span data-stu-id="93d72-143">Returns the hash code for the current <see cref="T:System.Tuple`5" /> object.</span></span></summary>
        <returns><span data-ttu-id="93d72-144">A 32-bit signed integer hash code.</span><span class="sxs-lookup"><span data-stu-id="93d72-144">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93d72-145">Gets the value of the current <see cref="T:System.Tuple`5" /> object's first component.</span><span class="sxs-lookup"><span data-stu-id="93d72-145">Gets the value of the current <see cref="T:System.Tuple`5" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="93d72-146">現在の値<see cref="T:System.Tuple`5" />オブジェクトの最初のコンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="93d72-146">The value of the current <see cref="T:System.Tuple`5" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-147">型を動的に決定することができます、<xref:System.Tuple%605.Item1%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="93d72-147">You can dynamically determine the type of the <xref:System.Tuple%605.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="93d72-148">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%605.Item1%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="93d72-148">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%605.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="93d72-149">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%605>オブジェクト、および、によって返される配列から最初の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-149">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%605> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93d72-150">次の例の配列を定義する<xref:System.Tuple%605>コンポーネントが含まれるが United States、1990 および 2000 で作成が、この 10 年間でその population の変更およびその人口の変化率の状態の名前を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-150">The following example defines an array of <xref:System.Tuple%605> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</span></span> <span data-ttu-id="93d72-151">配列を反復処理し、組内の各コンポーネントの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="93d72-151">It then iterates through the array and displays the value of each component in a tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`5.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93d72-152">Gets the value of the current <see cref="T:System.Tuple`5" /> object's second component.</span><span class="sxs-lookup"><span data-stu-id="93d72-152">Gets the value of the current <see cref="T:System.Tuple`5" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="93d72-153">現在の値<see cref="T:System.Tuple`5" />オブジェクトの 2 番目のコンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="93d72-153">The value of the current <see cref="T:System.Tuple`5" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-154">型を動的に決定することができます、<xref:System.Tuple%604.Item2%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="93d72-154">You can dynamically determine the type of the <xref:System.Tuple%604.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="93d72-155">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%604.Item2%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="93d72-155">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%604.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="93d72-156">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%604>オブジェクト、およびによって返される配列から 2 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-156">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%604> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93d72-157">次の例の配列を定義する<xref:System.Tuple%605>コンポーネントが含まれるが United States、1990 および 2000 で作成が、この 10 年間でその population の変更およびその人口の変化率の状態の名前を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-157">The following example defines an array of <xref:System.Tuple%605> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</span></span> <span data-ttu-id="93d72-158">配列を反復処理し、組内の各コンポーネントの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="93d72-158">It then iterates through the array and displays the value of each component in a tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`5.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93d72-159">Gets the value of the current <see cref="T:System.Tuple`5" /> object's third component.</span><span class="sxs-lookup"><span data-stu-id="93d72-159">Gets the value of the current <see cref="T:System.Tuple`5" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="93d72-160">現在の値<see cref="T:System.Tuple`5" />オブジェクトの 3 番目のコンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="93d72-160">The value of the current <see cref="T:System.Tuple`5" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-161">型を動的に決定することができます、<xref:System.Tuple%604.Item2%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="93d72-161">You can dynamically determine the type of the <xref:System.Tuple%604.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="93d72-162">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%604.Item2%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="93d72-162">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%604.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="93d72-163">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%604>オブジェクト、およびによって返される配列から 2 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-163">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%604> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93d72-164">次の例の配列を定義する<xref:System.Tuple%605>コンポーネントが含まれるが United States、1990 および 2000 で作成が、この 10 年間でその population の変更およびその人口の変化率の状態の名前を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-164">The following example defines an array of <xref:System.Tuple%605> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</span></span> <span data-ttu-id="93d72-165">配列を反復処理し、組内の各コンポーネントの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="93d72-165">It then iterates through the array and displays the value of each component in a tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`5.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93d72-166">Gets the value of the current <see cref="T:System.Tuple`5" /> object's fourth component.</span><span class="sxs-lookup"><span data-stu-id="93d72-166">Gets the value of the current <see cref="T:System.Tuple`5" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="93d72-167">現在の値<see cref="T:System.Tuple`5" />オブジェクトの 4 番目のコンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="93d72-167">The value of the current <see cref="T:System.Tuple`5" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-168">型を動的に決定することができます、<xref:System.Tuple%604.Item2%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="93d72-168">You can dynamically determine the type of the <xref:System.Tuple%604.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="93d72-169">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%604.Item2%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="93d72-169">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%604.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="93d72-170">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%604>オブジェクト、およびによって返される配列から 2 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-170">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%604> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93d72-171">次の例の配列を定義する<xref:System.Tuple%605>コンポーネントが含まれるが United States、1990 および 2000 で作成が、この 10 年間でその population の変更およびその人口の変化率の状態の名前を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-171">The following example defines an array of <xref:System.Tuple%605> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</span></span> <span data-ttu-id="93d72-172">配列を反復処理し、組内の各コンポーネントの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="93d72-172">It then iterates through the array and displays the value of each component in a tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`5.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93d72-173">Gets the value of the current <see cref="T:System.Tuple`5" /> object's fifth component.</span><span class="sxs-lookup"><span data-stu-id="93d72-173">Gets the value of the current <see cref="T:System.Tuple`5" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="93d72-174">現在の値<see cref="T:System.Tuple`5" />オブジェクトの 5 番目のコンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="93d72-174">The value of the current <see cref="T:System.Tuple`5" /> object's fifth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-175">型を動的に決定することができます、<xref:System.Tuple%604.Item2%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="93d72-175">You can dynamically determine the type of the <xref:System.Tuple%604.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="93d72-176">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%604.Item2%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="93d72-176">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%604.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="93d72-177">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%604>オブジェクト、およびによって返される配列から 2 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-177">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%604> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93d72-178">次の例の配列を定義する<xref:System.Tuple%605>コンポーネントが含まれる米国の日付、1990 および 2000 で作成が、この 10 年間でその population の変更およびその人口の割合の変化に状態の名前を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-178">The following example defines an array of <xref:System.Tuple%605> objects whose components contain the name of a state in the United Dates, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</span></span> <span data-ttu-id="93d72-179">配列を反復処理し、組内の各コンポーネントの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="93d72-179">It then iterates through the array and displays the value of each component in a tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`5.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="93d72-180">An object to compare with the current instance.</span><span class="sxs-lookup"><span data-stu-id="93d72-180">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="93d72-181">An object that provides custom rules for comparison.</span><span class="sxs-lookup"><span data-stu-id="93d72-181">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="93d72-182">Compares the current <see cref="T:System.Tuple`5" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span><span class="sxs-lookup"><span data-stu-id="93d72-182">Compares the current <see cref="T:System.Tuple`5" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="93d72-183">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span><span class="sxs-lookup"><span data-stu-id="93d72-183">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="93d72-184"><list type="table"><listheader><term> Value</span><span class="sxs-lookup"><span data-stu-id="93d72-184"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="93d72-185"></term><description> Description</span><span class="sxs-lookup"><span data-stu-id="93d72-185"></term><description> Description</span></span>  
  
 <span data-ttu-id="93d72-186"></description></listheader><item><term> A negative integer</span><span class="sxs-lookup"><span data-stu-id="93d72-186"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="93d72-187"></term><description> This instance precedes <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="93d72-187"></term><description> This instance precedes <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="93d72-188"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="93d72-188"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="93d72-189"></term><description> This instance and <paramref name="other" /> have the same position in the sort order.</span><span class="sxs-lookup"><span data-stu-id="93d72-189"></term><description> This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="93d72-190"></description></item><item><term> A positive integer</span><span class="sxs-lookup"><span data-stu-id="93d72-190"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="93d72-191"></term><description> This instance follows <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="93d72-191"></term><description> This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-192">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="93d72-192">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="93d72-193">これは、<xref:System.Tuple%605> のインスタンスが <xref:System.Collections.IStructuralComparable> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="93d72-193">It can be used only when the <xref:System.Tuple%605> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="93d72-194">コレクションを並べ替えることによって最もよく呼び出されますが、このメソッドは、直接呼び出すことができるなどのメソッドを<xref:System.Collections.IComparer>パラメーター コレクションのメンバーの順序付けをします。</span><span class="sxs-lookup"><span data-stu-id="93d72-194">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="93d72-195">たとえば、メソッドによって呼び出されます、<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>メソッドおよび<xref:System.Collections.SortedList.Add%2A>のメソッド、<xref:System.Collections.SortedList>を使用してインスタンス化されるオブジェクト、<xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="93d72-195">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="93d72-196"><xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A>並べ替え操作で使用するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-196">The <xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="93d72-197">これはありません、比較の主な目的は 2 つのオブジェクトが等しいかどうかを判断するときに使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="93d72-197">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="93d72-198">2 つのオブジェクトが等しいかどうかを判断するを呼び出して、<xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-198">To determine whether two objects are equal, call the <xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93d72-199">次の例の配列を作成する<xref:System.Tuple%605>American プロ フットボールでは、実行の統計データを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-199">The following example creates an array of <xref:System.Tuple%605> objects that contain career statistical data for running backs in American professional football.</span></span> <span data-ttu-id="93d72-200">5 組のコンポーネントは、プレーヤーの名前、ゲームの数で構成されているプレイする、または、試行の数をクリックし、ヤード数の合計が得られたタッチダウンの数します。</span><span class="sxs-lookup"><span data-stu-id="93d72-200">The 5-tuple's components consist of the player's name, the number of games in which he played, the number of carries or attempts, the total number of yards gained, and the number of touchdowns scored.</span></span> <span data-ttu-id="93d72-201">例では、並べ替えられていない配列内の各組のコンポーネントを表示、配列を並べ替え、を呼び出して<xref:System.Tuple%605.ToString%2A>を並べ替え順序でそれぞれの組を表示します。</span><span class="sxs-lookup"><span data-stu-id="93d72-201">The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%605.ToString%2A> to display each tuple in sorted order.</span></span> <span data-ttu-id="93d72-202">ジェネリック型を定義している例では、並べ替えるには、配列、`YardsGained`を実装するクラス、<xref:System.Collections.IComparer>インターフェイスと並べ替え、<xref:System.Tuple%605>オブジェクトの最初のコンポーネントではなく、4 番目のコンポーネント (ヤード得られた) の値では、降順にします。</span><span class="sxs-lookup"><span data-stu-id="93d72-202">To sort the array, the example defines a generic `YardsGained` class that implements the <xref:System.Collections.IComparer> interface and sorts the <xref:System.Tuple%605> objects in descending order by the value of their fourth component (yards gained) rather than by their first component.</span></span> <span data-ttu-id="93d72-203">例では、直接呼び出しませんなお、<xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-203">Note that the example does not directly call the <xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A> method.</span></span> <span data-ttu-id="93d72-204">このメソッドはによって暗黙的に呼び出されます、<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>配列内の各要素のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-204">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`5.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`5.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93d72-205"><paramref name="other" /> is not a <see cref="T:System.Tuple`5" /> object.</span><span class="sxs-lookup"><span data-stu-id="93d72-205"><paramref name="other" /> is not a <see cref="T:System.Tuple`5" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="93d72-206">The object to compare with this instance.</span><span class="sxs-lookup"><span data-stu-id="93d72-206">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="93d72-207">An object that defines the method to use to evaluate whether the two objects are equal.</span><span class="sxs-lookup"><span data-stu-id="93d72-207">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="93d72-208">Returns a value that indicates whether the current <see cref="T:System.Tuple`5" /> object is equal to a specified object based on a specified comparison method.</span><span class="sxs-lookup"><span data-stu-id="93d72-208">Returns a value that indicates whether the current <see cref="T:System.Tuple`5" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns>
          <span data-ttu-id="93d72-209"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="93d72-209"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-210">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="93d72-210">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="93d72-211">これは、<xref:System.Tuple%605> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="93d72-211">It can be used only when the <xref:System.Tuple%605> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="93d72-212"><xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>実装が呼び出される場合にのみ`other`は`null`、キャスト (c#) またはに (Visual Basic) の変換が正常にすることができるかどうかと、<xref:System.Tuple%605>コンポーネントが含まれるは、現在のインスタンスと同じ型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-212">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%605> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="93d72-213"><xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29>メソッドの最初のパス、<xref:System.Tuple%605.Item1%2A>の値、<xref:System.Tuple%605>と比較するオブジェクト、<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>実装します。</span><span class="sxs-lookup"><span data-stu-id="93d72-213">The <xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%605.Item1%2A> values of the <xref:System.Tuple%605> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="93d72-214">このメソッドの呼び出しが返された場合`true`、メソッドが再度呼び出され、渡された、 <xref:System.Tuple%605.Item2%2A> 、2 つの値<xref:System.Tuple%605>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-214">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%605.Item2%2A> values of the two <xref:System.Tuple%605> objects.</span></span> <span data-ttu-id="93d72-215">これは、メソッド呼び出しから戻るまで続きます`false`の特定のペアを比較するときに`Item`値、または 2 つ<xref:System.Tuple%605.Item5%2A>値、メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="93d72-215">This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%605.Item5%2A> values are passed to the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93d72-216">次の例では、`DoubleComparer` インターフェイスを実装する <xref:System.Collections.IEqualityComparer> クラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="93d72-216">The following example defines a `DoubleComparer` class that implements the <xref:System.Collections.IEqualityComparer> interface.</span></span> <span data-ttu-id="93d72-217">例では、2 つのインスタンスを作成<xref:System.Tuple%605>キャストに最初のインスタンスが 2 番目 5 番目のコンポーネントからを設定する乱数ジェネレーターを使用して、オブジェクト、<xref:System.Collections.IStructuralEquatable>インターフェイス、および、使用、`DoubleComparer`オブジェクト、2 つのテストを<xref:System.Tuple%605>オブジェクトのおおよその等価性。</span><span class="sxs-lookup"><span data-stu-id="93d72-217">The example instantiates two <xref:System.Tuple%605> objects by using a random number generator to populate their second through fifth components, casts the first instance to an <xref:System.Collections.IStructuralEquatable> interface, and then uses a `DoubleComparer` object to test the two <xref:System.Tuple%605> objects for approximate equality.</span></span>  
  
 [!code-csharp[System.Tuple\`5.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`5.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="93d72-218">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`5" /> object.</span><span class="sxs-lookup"><span data-stu-id="93d72-218">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`5" /> object.</span></span></param>
        <summary><span data-ttu-id="93d72-219">Calculates the hash code for the current <see cref="T:System.Tuple`5" /> object by using a specified computation method.</span><span class="sxs-lookup"><span data-stu-id="93d72-219">Calculates the hash code for the current <see cref="T:System.Tuple`5" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="93d72-220">A 32-bit signed integer hash code.</span><span class="sxs-lookup"><span data-stu-id="93d72-220">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-221">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="93d72-221">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="93d72-222">これは、<xref:System.Tuple%605> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="93d72-222">It can be used only when the <xref:System.Tuple%605> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="93d72-223">メソッドは、単にへの呼び出しをラップ、`comparer`オブジェクトの<xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType>実装します。</span><span class="sxs-lookup"><span data-stu-id="93d72-223">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="93d72-224">2 つのハッシュ コードの計算に使用するアルゴリズムが同じハッシュ コードを返す必要があります<xref:System.Tuple%605>同等であると見なされるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-224">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%605> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="93d72-225">An object to compare with the current instance.</span><span class="sxs-lookup"><span data-stu-id="93d72-225">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="93d72-226">Compares the current <see cref="T:System.Tuple`5" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span><span class="sxs-lookup"><span data-stu-id="93d72-226">Compares the current <see cref="T:System.Tuple`5" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="93d72-227">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span><span class="sxs-lookup"><span data-stu-id="93d72-227">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="93d72-228"><list type="table"><listheader><term> Value</span><span class="sxs-lookup"><span data-stu-id="93d72-228"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="93d72-229"></term><description> Description</span><span class="sxs-lookup"><span data-stu-id="93d72-229"></term><description> Description</span></span>  
  
 <span data-ttu-id="93d72-230"></description></listheader><item><term> A negative integer</span><span class="sxs-lookup"><span data-stu-id="93d72-230"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="93d72-231"></term><description> This instance precedes <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="93d72-231"></term><description> This instance precedes <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="93d72-232"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="93d72-232"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="93d72-233"></term><description> This instance and <paramref name="obj" /> have the same position in the sort order.</span><span class="sxs-lookup"><span data-stu-id="93d72-233"></term><description> This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="93d72-234"></description></item><item><term> A positive integer</span><span class="sxs-lookup"><span data-stu-id="93d72-234"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="93d72-235"></term><description> This instance follows <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="93d72-235"></term><description> This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-236">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="93d72-236">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="93d72-237">これは、<xref:System.Tuple%605> のインスタンスが <xref:System.IComparable> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="93d72-237">It can be used only when the <xref:System.Tuple%605> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="93d72-238">このメソッドを提供、<xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType>の実装、<xref:System.Tuple%605>クラスです。</span><span class="sxs-lookup"><span data-stu-id="93d72-238">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%605> class.</span></span> <span data-ttu-id="93d72-239">コレクションの並べ替えの既定のオーバー ロードによって最もよく呼び出さは直接メソッドを呼び出すことができます、メソッドなど<xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType>と<xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>コレクションのメンバーの順序付けをします。</span><span class="sxs-lookup"><span data-stu-id="93d72-239">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="93d72-240"><xref:System.Tuple%605.System%23IComparable%23CompareTo%2A>並べ替え操作で使用するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-240">The <xref:System.Tuple%605.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="93d72-241">これはありません、比較の主な目的は 2 つのオブジェクトが等しいかどうかを判断するときに使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="93d72-241">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="93d72-242">2 つのオブジェクトが等しいかどうかを判断するを呼び出して、<xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-242">To determine whether two objects are equal, call the <xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="93d72-243"><xref:System.Tuple%605.System%23IComparable%23CompareTo%28System.Object%29>メソッドでは、既定のオブジェクトの比較子を使用して、各コンポーネントを比較します。</span><span class="sxs-lookup"><span data-stu-id="93d72-243">The <xref:System.Tuple%605.System%23IComparable%23CompareTo%28System.Object%29> method uses the default object  comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93d72-244">次の例の配列を作成する<xref:System.Tuple%605>American プロ フットボールでは、実行の統計を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-244">The following example creates an array of <xref:System.Tuple%605> objects that contain career statistics for running backs in American professional football.</span></span> <span data-ttu-id="93d72-245">5 つのコンポーネントは、プレーヤーの名前、ゲームの番号で構成されているプレイする、または、試行の数をクリックし、ヤード数の合計が得られたタッチダウンの数します。</span><span class="sxs-lookup"><span data-stu-id="93d72-245">The five components consist of the player's name, the number of games in which he played, the number of carries or attempts, the total number of yards gained, and the number of touchdowns scored.</span></span> <span data-ttu-id="93d72-246">例では、並べ替えられていない配列内の各組のコンポーネントを表示、配列を並べ替え、を呼び出して<xref:System.Tuple%605.ToString%2A>を並べ替え順序でそれぞれの組を表示します。</span><span class="sxs-lookup"><span data-stu-id="93d72-246">The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%605.ToString%2A> to display each tuple in sorted order.</span></span> <span data-ttu-id="93d72-247">出力は、最初のコンポーネントは、名前で配列が並べ替えられていることを示します。</span><span class="sxs-lookup"><span data-stu-id="93d72-247">The output shows that the array has been sorted by name, which is the first component.</span></span> <span data-ttu-id="93d72-248">例では、直接呼び出しませんなお、<xref:System.Tuple%605.System%23IComparable%23CompareTo%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-248">Note that the example does not directly call the <xref:System.Tuple%605.System%23IComparable%23CompareTo%2A> method.</span></span> <span data-ttu-id="93d72-249">このメソッドはによって暗黙的に呼び出されます、<xref:System.Array.Sort%28System.Array%29>配列内の各要素のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-249">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`5.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`5.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93d72-250"><paramref name="obj" /> is not a <see cref="T:System.Tuple`5" /> object.</span><span class="sxs-lookup"><span data-stu-id="93d72-250"><paramref name="obj" /> is not a <see cref="T:System.Tuple`5" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`5.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Runtime.CompilerServices.ITuple.Item[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="93d72-251">The index of the specified <see langword="Tuple" /> element.</span><span class="sxs-lookup"><span data-stu-id="93d72-251">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="93d72-252"><c>index</c> can range from 0 to 4.</span><span class="sxs-lookup"><span data-stu-id="93d72-252"><c>index</c> can range from 0 to 4.</span></span></param>
        <summary><span data-ttu-id="93d72-253">Gets the value of the specified <see langword="Tuple" /> element.</span><span class="sxs-lookup"><span data-stu-id="93d72-253">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="93d72-254">指定した位置にある <see langword="Tuple" /> 要素の値。</span><span class="sxs-lookup"><span data-stu-id="93d72-254">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-255"><xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType>プロパティは、明示的なインターフェイス実装です。</span><span class="sxs-lookup"><span data-stu-id="93d72-255">The <xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="93d72-256">これを呼び出すには、キャストまたは変換する必要があります、<xref:System.Tuple%605>オブジェクトを<xref:System.Runtime.CompilerServices.ITuple>インターフェイス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-256">To call it, you must cast or convert the <xref:System.Tuple%605> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="93d72-257"><paramref name="index" /> is less than 0 or greater than 4.</span><span class="sxs-lookup"><span data-stu-id="93d72-257"><paramref name="index" /> is less than 0 or greater than 4.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System.Runtime.CompilerServices.ITuple.Length { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93d72-258">Gets the number of elements in the <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="93d72-258">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="93d72-259"><see cref="T:System.Tuple`5" /> オブジェクト内の要素数、5。</span><span class="sxs-lookup"><span data-stu-id="93d72-259">5, the number of elements in a <see cref="T:System.Tuple`5" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-260"><xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Length%2A>プロパティは、明示的なインターフェイス実装です。</span><span class="sxs-lookup"><span data-stu-id="93d72-260">The <xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="93d72-261">これを呼び出すには、キャストまたは変換する必要があります、<xref:System.Tuple%605>オブジェクトを<xref:System.Runtime.CompilerServices.ITuple>インターフェイス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="93d72-261">To call it, you must cast or convert the <xref:System.Tuple%605> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`5.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93d72-262">Returns a string that represents the value of this <see cref="T:System.Tuple`5" /> instance.</span><span class="sxs-lookup"><span data-stu-id="93d72-262">Returns a string that represents the value of this <see cref="T:System.Tuple`5" /> instance.</span></span></summary>
        <returns><span data-ttu-id="93d72-263">The string representation of this <see cref="T:System.Tuple`5" /> object.</span><span class="sxs-lookup"><span data-stu-id="93d72-263">The string representation of this <see cref="T:System.Tuple`5" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93d72-264">このメソッドによって返される文字列の形式は (*Item1*、 *Item2*、 *Item3*、 *Item4*、 `Item5`) ここで、 *Item1*、 *Item2*、 *Item3*、 *Item4*、および`Item5`の値を表す、 <xref:System.Tuple%605.Item1%2A>、 <xref:System.Tuple%605.Item2%2A>、 <xref:System.Tuple%605.Item3%2A>、 <xref:System.Tuple%605.Item4%2A>、および<xref:System.Tuple%605.Item5%2A>プロパティ、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="93d72-264">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5`), where *Item1*, *Item2*, *Item3*, *Item4*, and `Item5` represent the values of the <xref:System.Tuple%605.Item1%2A>, <xref:System.Tuple%605.Item2%2A>, <xref:System.Tuple%605.Item3%2A>, <xref:System.Tuple%605.Item4%2A>, and <xref:System.Tuple%605.Item5%2A> properties, respectively.</span></span> <span data-ttu-id="93d72-265">プロパティ値のいずれかが場合`null`、として表されます<xref:System.String.Empty?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="93d72-265">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93d72-266">次の例を示しています、<xref:System.Tuple%605.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="93d72-266">The following example illustrates the <xref:System.Tuple%605.ToString%2A> method.</span></span> <span data-ttu-id="93d72-267">米国の州をその人口 1990 年と 2000 では、状態の名前を格納する 5 組オブジェクトの配列が表示されます、population の変更でこの 10 年間の期間と、年間 population の変更の速度です。</span><span class="sxs-lookup"><span data-stu-id="93d72-267">It displays an array of 5-tuple objects that contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the annual rate of population change.</span></span>  
  
 [!code-csharp[System.Tuple\`5.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`5.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`5.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`5.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>