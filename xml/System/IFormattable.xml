<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IFormattable.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f1ee32cae285a624ff6ceecaa94663848cf18034.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1ee32cae285a624ff6ceecaa94663848cf18034</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IFormattable">
          <source>Provides functionality to format the value of an object into a string representation.</source>
          <target state="translated">オブジェクトの値を文字列形式で書式設定する機能を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface converts an object to its string representation based on a format string and a format provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormattable&gt;</ph>インターフェイス オブジェクトを書式指定文字列と書式プロバイダーに基づいての文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>A format string typically defines the general appearance of an object.</source>
          <target state="translated">書式指定文字列は、通常、オブジェクトの一般的な外観を定義します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>For example, the .NET Framework supports the following:</source>
          <target state="translated">たとえば、.NET Framework は、次のとおり</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Standard format strings for formatting enumeration values (see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>).</source>
          <target state="translated">列挙値の書式設定の標準書式指定文字列 (を参照してください<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>)。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Standard and custom format strings for formatting numeric values (see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>).</source>
          <target state="translated">数値の書式設定の標準およびカスタムの書式指定文字列 (を参照してください<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Standard and custom format strings for formatting date and time values (see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>).</source>
          <target state="translated">日付と時刻の値の書式設定の標準およびカスタムの書式指定文字列 (を参照してください<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>)。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Standard and custom format strings for formatting time intervals (see <bpt id="p1">[</bpt>Standard TimeSpan Format Strings<ept id="p1">](~/docs/standard/base-types/standard-timespan-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom TimeSpan Format Strings<ept id="p2">](~/docs/standard/base-types/custom-timespan-format-strings.md)</ept>).</source>
          <target state="translated">時間間隔を書式設定するための標準およびカスタムの書式指定文字列 (を参照してください<bpt id="p1">[</bpt>標準 TimeSpan 書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-timespan-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム TimeSpan 書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-timespan-format-strings.md)</ept>)。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>You can also define your own format strings to support formatting of your application-defined types.</source>
          <target state="translated">アプリケーション定義の型の書式設定をサポートするために、独自の書式指定文字列を定義することもできます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>A format provider returns a formatting object that typically defines the symbols used in converting an object to its string representation.</source>
          <target state="translated">書式プロバイダーでは、通常の文字列形式にオブジェクトを変換する際に使用する記号を定義する書式指定オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>For example, when you convert a number to a currency value, a format provider defines the currency symbol that appears in the result string.</source>
          <target state="translated">たとえば、数値を通貨値に変換すると、書式プロバイダーは、結果の文字列に表示する通貨記号を定義します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The .NET Framework defines three format providers:</source>
          <target state="translated">.NET Framework では、次の 3 つの書式プロバイダーを定義します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph> class, which returns either a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for formatting numeric values, or a <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object for formatting date and time values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph>クラスは、どちらかを返します、 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 、数値を書式設定するためのオブジェクトまたは<ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>日付と時刻の値を書式設定するためのオブジェクト。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType&gt;</ph> class, which returns an instance of itself for formatting numeric values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType&gt;</ph>クラスは、数値を書式設定するためには、それ自体のインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType&gt;</ph> class, which returns an instance of itself for formatting date and time values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType&gt;</ph>クラスは、日付と時刻の値を書式設定するためには、それ自体のインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>In addition, you can define your own custom format providers to supply culture-specific, profession-specific, or industry-specific information used in formatting.</source>
          <target state="translated">さらに、カルチャ固有の職業固有を指定する独自のカスタム書式プロバイダーを定義するまたは業界固有の情報が書式設定に使用します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>For more information about implementing custom formatting by using a custom format provider, see <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>.</source>
          <target state="translated">カスタム書式プロバイダーを使用してカスタムの書式設定を実装の詳細については、次を参照してください。<ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface defines a single method, <ph id="ph2">&lt;xref:System.IFormattable.ToString%2A&gt;</ph>, that supplies formatting services for the implementing type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormattable&gt;</ph>インターフェイスが 1 つのメソッドを定義<ph id="ph2">&lt;xref:System.IFormattable.ToString%2A&gt;</ph>、実装する型の書式指定サービスを提供します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method can be called directly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph>メソッドを直接呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>In addition, it is called automatically by the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> methods, and by methods that use the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> in the .NET Framework.</source>
          <target state="translated">さらに、呼び出されたによって自動的に、<ph id="ph1">&lt;xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>メソッド、および使用するメソッドによって、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.NET Framework でします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Such methods include <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph>, among others.</source>
          <target state="translated">このようなメソッドを含める<ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph>、<ph id="ph2">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph>、他のユーザー間で。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method is called for each format item in the method's format string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph>メソッドの書式指定文字列内の各書式項目のメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface is implemented by the base data types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormattable&gt;</ph>インターフェイスは、基本データ型によって実装されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The following example defines a <ph id="ph1">`Temperature`</ph> class that implements the <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface.</source>
          <target state="translated">次の例では、 <ph id="ph1">`Temperature`</ph> インターフェイスを実装する <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> クラスを定義しています。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The class supports four format specifiers: "G" and "C", which indicate that the temperature is to be displayed in Celsius; "F", which indicates that the temperature is to be displayed in Fahrenheit; and "K", which indicates that the temperature is to be displayed in Kelvin.</source>
          <target state="translated">クラスは、次の 4 つの書式指定子のサポート:"G"および"C"、温度を摂氏で表示されることを示します"F"は、温度は華氏; に表示されることを示します"K"は、温度をケルビンで表示されることを示します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>In addition, the <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> implementation also can handle a format string that is <ph id="ph2">`null`</ph> or empty.</source>
          <target state="translated">さらに、<ph id="ph1">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph>実装も処理書式指定文字列を<ph id="ph2">`null`</ph>または空です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The other two <ph id="ph1">`ToString`</ph> methods defined by the <ph id="ph2">`Temperature`</ph> class simply wrap a call to the <ph id="ph3">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">他の 2 つ<ph id="ph1">`ToString`</ph>によって定義されたメソッド、<ph id="ph2">`Temperature`</ph>クラスへの呼び出しをラップするだけ、<ph id="ph3">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The following example then calls the <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> implementation either directly or by using a composite format string.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph>実装直接、または複合書式指定文字列を使用しています。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Classes that require more control over the formatting of strings than <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> provides should implement <ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph>.</source>
          <target state="translated">文字列の書式設定より詳細に制御を必要とするクラス<ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph>提供を実装しなければなりません<ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>A class that implements <ph id="ph1">&lt;see cref="T:System.IFormattable" /&gt;</ph> must support the "G" (general) format specifier.</source>
          <target state="translated">実装するクラス<ph id="ph1">&lt;see cref="T:System.IFormattable" /&gt;</ph>"G"(全般) 書式指定子をサポートする必要があります。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Besides the "G" specifier, the class can define the list of format specifiers that it supports.</source>
          <target state="translated">"G"指定子だけでなく、クラスは、サポートされている書式指定子の一覧を定義できます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>In addition, the class must be prepared to handle a format specifier that is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">書式指定子を処理するさらに、クラスを準備する必要があります<ph id="ph1">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>For more information about formatting and formatting codes, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept></source>
          <target state="translated">書式設定と、コードの書式設定の詳細については、次を参照してください<bpt id="p1">[</bpt>型の書式設定。<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The format to use.</source>
          <target state="translated">使用する書式。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) to use the default format defined for the type of the <ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph> 実装の型に対して定義されている既定の書式を使用する場合は、null 参照 (Visual Basic の場合は <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The provider to use to format the value.</source>
          <target state="translated">値を書式設定するために使用するプロバイダー。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</source>
          <target state="translated">オペレーティング システムの現在のロケール設定から数値書式情報を取得する場合は、null 参照 (Visual Basic の場合は <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>Formats the value of the current instance using the specified format.</source>
          <target state="translated">指定された書式を使用して現在のインスタンスの値を書式設定します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The value of the current instance in the specified format.</source>
          <target state="translated">指定された書式の現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method converts a value to a string representation that can be expressed in multiple ways.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph>メソッドは値を複数の方法で表すことができる文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>Its precise format depends on specific symbols or a specified order defined by specific cultures, professions, or industries.</source>
          <target state="translated">その正確な書式は、特定の記号または特定のカルチャ、職業、内または業界によって定義された特定の順序に依存します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>You can call the method directly.</source>
          <target state="translated">メソッドを直接呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>It is also called automatically by the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> methods, and by methods that use the composite formatting feature in the .NET Framework, such as <ph id="ph3">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>, and <ph id="ph5">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">によって自動的に呼び出されます、<ph id="ph1">&lt;xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>メソッド、および複合書式設定を使用しているメソッドによって機能の .NET Framework でなど<ph id="ph3">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>、 <ph id="ph4">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>、および<ph id="ph5">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>(For more information, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.)</source>
          <target state="translated">(詳細については、次を参照してください<bpt id="p1">[</bpt>複合書式指定<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。)。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>Composite formatting methods call the <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method once for each format item in a format string.</source>
          <target state="translated">複合書式指定メソッドの呼び出し、<ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph>書式指定文字列内の各書式項目を 1 回のメソッドです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The parameters passed to the method depend on the specific formatting method that is called and on the content of the format item, as follows:</source>
          <target state="translated">メソッドに渡されるパラメーターはとおりと呼ばれる特定の書式設定メソッドおよび書式指定項目の内容に依存します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>If the format item does not include a format string (for example, if the format item is simply <ph id="ph1">`{0}`</ph>), it is passed <ph id="ph2">`null`</ph> as the value of the <ph id="ph3">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> parameter.</source>
          <target state="translated">書式指定項目が、書式指定文字列を含まないかどうか (書式指定項目は、単に場合など、 <ph id="ph1">`{0}`</ph>)、渡される<ph id="ph2">`null`</ph>の値として、<ph id="ph3">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>If the format item includes a format string (for example, <ph id="ph1">`{0:G}`</ph>), that format string is passed as the value of the <ph id="ph2">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> parameter.</source>
          <target state="translated">書式指定項目には、書式指定文字列が含まれている場合 (たとえば、 <ph id="ph1">`{0:G}`</ph>) の値として書式設定文字列が渡されること、<ph id="ph2">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>If the original method call does not include an <ph id="ph1">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph> parameter, <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> is passed as the value of the <ph id="ph3">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph> parameter.</source>
          <target state="translated">元のメソッド呼び出しが含まれていない場合、<ph id="ph1">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph>パラメーター、<ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>の値として渡される、<ph id="ph3">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>If the original method call includes an <ph id="ph1">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph> parameter, the provider that is supplied in the method call is passed as the value of the <ph id="ph2">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph> parameter.</source>
          <target state="translated">元のメソッド呼び出しが含まれている場合、<ph id="ph1">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph>パラメーター、メソッドの呼び出しで指定されているプロバイダーは、の値として渡される、<ph id="ph2">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>An object's <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> implementation is called by composite formatting methods only if they are not passed an <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph> format provider, or if the <ph id="ph3">&lt;xref:System.ICustomFormatter.Format%2A&gt;</ph> method of the custom format provider returns <ph id="ph4">`null`</ph>.</source>
          <target state="translated">オブジェクトの<ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph>渡されない場合にのみ、複合書式指定メソッドによって実装が呼び出されます、<ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph>書式プロバイダー、または、<ph id="ph3">&lt;xref:System.ICustomFormatter.Format%2A&gt;</ph>カスタム書式プロバイダーのメソッドを返します<ph id="ph4">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework includes three format providers, all of which implement the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface:</source>
          <target state="translated">.NET Framework には、実装の 3 つの書式設定プロバイダーが含まれています、<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>インターフェイス。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> supplies numeric formatting information, such as the characters to use for decimal and group separators, and the spelling and placement of currency symbols in monetary values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 数値書式設定は 10 進数と桁区切り記号の文字などの情報およびスペルと通貨値の通貨記号の配置を提供します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> supplies date-related and time-related formatting information, such as the position of the month, the day, and the year in a date pattern.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 月、日、および年の日付のパターン内の位置など、日付に関連して、時間関連の書式情報を提供します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> contains the default formatting information in a specific culture, including the numeric format information, and date-related and time-related formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 既定の書式の数値書式指定情報を含む特定のカルチャの情報および日付に関連して、時間関連の書式情報を格納します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>In addition, you can define your own custom format provider.</source>
          <target state="translated">さらに、独自のカスタム書式プロバイダーを定義することができます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The following example demonstrates a <ph id="ph1">`Temperature`</ph> class that implements the <ph id="ph2">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">`Temperature`</ph>を実装するクラス、<ph id="ph2">&lt;xref:System.IFormattable.ToString%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.IFormattable&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /&gt;</ph> method must support the "G" (general) format specifier.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /&gt;</ph>メソッドは、"G"(全般) の書式指定子をサポートする必要があります。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>Besides the "G" specifier, the class can define the list of format specifiers that it supports.</source>
          <target state="translated">"G"指定子だけでなく、クラスは、サポートされている書式指定子の一覧を定義できます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>In addition, the class must be prepared to handle a format specifier that is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">書式指定子を処理するさらに、クラスを準備する必要があります<ph id="ph1">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting and formatting codes, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">書式設定と、コードの書式設定の詳細については、次を参照してください。<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>