<Type Name="IFormattable" FullName="System.IFormattable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f1ee32cae285a624ff6ceecaa94663848cf18034" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.IFormattable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7279e-101">オブジェクトの値を文字列形式で書式設定する機能を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7279e-101">Provides functionality to format the value of an object into a string representation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7279e-102"><xref:System.IFormattable>インターフェイス オブジェクトを書式指定文字列と書式プロバイダーに基づいての文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7279e-102">The <xref:System.IFormattable> interface converts an object to its string representation based on a format string and a format provider.</span></span>  
  
 <span data-ttu-id="7279e-103">書式指定文字列は、通常、オブジェクトの一般的な外観を定義します。</span><span class="sxs-lookup"><span data-stu-id="7279e-103">A format string typically defines the general appearance of an object.</span></span> <span data-ttu-id="7279e-104">たとえば、.NET Framework は、次のとおり</span><span class="sxs-lookup"><span data-stu-id="7279e-104">For example, the .NET Framework supports the following:</span></span>  
  
-   <span data-ttu-id="7279e-105">列挙値の書式設定の標準書式指定文字列 (を参照してください[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md))。</span><span class="sxs-lookup"><span data-stu-id="7279e-105">Standard format strings for formatting enumeration values (see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md)).</span></span>  
  
-   <span data-ttu-id="7279e-106">数値の書式設定の標準およびカスタムの書式指定文字列 (を参照してください[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md))。</span><span class="sxs-lookup"><span data-stu-id="7279e-106">Standard and custom format strings for formatting numeric values (see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)).</span></span>  
  
-   <span data-ttu-id="7279e-107">日付と時刻の値の書式設定の標準およびカスタムの書式指定文字列 (を参照してください[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[カスタムの日付と時刻の書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md))。</span><span class="sxs-lookup"><span data-stu-id="7279e-107">Standard and custom format strings for formatting date and time values (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).</span></span>  
  
-   <span data-ttu-id="7279e-108">時間間隔を書式設定するための標準およびカスタムの書式指定文字列 (を参照してください[標準 TimeSpan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)と[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md))。</span><span class="sxs-lookup"><span data-stu-id="7279e-108">Standard and custom format strings for formatting time intervals (see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md)).</span></span>  
  
 <span data-ttu-id="7279e-109">アプリケーション定義の型の書式設定をサポートするために、独自の書式指定文字列を定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="7279e-109">You can also define your own format strings to support formatting of your application-defined types.</span></span>  
  
 <span data-ttu-id="7279e-110">書式プロバイダーでは、通常の文字列形式にオブジェクトを変換する際に使用する記号を定義する書式指定オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="7279e-110">A format provider returns a formatting object that typically defines the symbols used in converting an object to its string representation.</span></span> <span data-ttu-id="7279e-111">たとえば、数値を通貨値に変換すると、書式プロバイダーは、結果の文字列に表示する通貨記号を定義します。</span><span class="sxs-lookup"><span data-stu-id="7279e-111">For example, when you convert a number to a currency value, a format provider defines the currency symbol that appears in the result string.</span></span> <span data-ttu-id="7279e-112">.NET Framework では、次の 3 つの書式プロバイダーを定義します。</span><span class="sxs-lookup"><span data-stu-id="7279e-112">The .NET Framework defines three format providers:</span></span>  
  
-   <span data-ttu-id="7279e-113"><xref:System.Globalization.CultureInfo?displayProperty=nameWithType>クラスは、どちらかを返します、 <xref:System.Globalization.NumberFormatInfo> 、数値を書式設定するためのオブジェクトまたは<xref:System.Globalization.DateTimeFormatInfo>日付と時刻の値を書式設定するためのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7279e-113">The <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> class, which returns either a <xref:System.Globalization.NumberFormatInfo> object for formatting numeric values, or a <xref:System.Globalization.DateTimeFormatInfo> object for formatting date and time values.</span></span>  
  
-   <span data-ttu-id="7279e-114"><xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType>クラスは、数値を書式設定するためには、それ自体のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="7279e-114">The <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> class, which returns an instance of itself for formatting numeric values.</span></span>  
  
-   <span data-ttu-id="7279e-115"><xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType>クラスは、日付と時刻の値を書式設定するためには、それ自体のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="7279e-115">The <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType> class, which returns an instance of itself for formatting date and time values.</span></span>  
  
 <span data-ttu-id="7279e-116">さらに、カルチャ固有の職業固有を指定する独自のカスタム書式プロバイダーを定義するまたは業界固有の情報が書式設定に使用します。</span><span class="sxs-lookup"><span data-stu-id="7279e-116">In addition, you can define your own custom format providers to supply culture-specific, profession-specific, or industry-specific information used in formatting.</span></span> <span data-ttu-id="7279e-117">カスタム書式プロバイダーを使用してカスタムの書式設定を実装の詳細については、次を参照してください。<xref:System.ICustomFormatter>です。</span><span class="sxs-lookup"><span data-stu-id="7279e-117">For more information about implementing custom formatting by using a custom format provider, see <xref:System.ICustomFormatter>.</span></span>  
  
 <span data-ttu-id="7279e-118"><xref:System.IFormattable>インターフェイスが 1 つのメソッドを定義<xref:System.IFormattable.ToString%2A>、実装する型の書式指定サービスを提供します。</span><span class="sxs-lookup"><span data-stu-id="7279e-118">The <xref:System.IFormattable> interface defines a single method, <xref:System.IFormattable.ToString%2A>, that supplies formatting services for the implementing type.</span></span> <span data-ttu-id="7279e-119"><xref:System.IFormattable.ToString%2A>メソッドを直接呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="7279e-119">The <xref:System.IFormattable.ToString%2A> method can be called directly.</span></span> <span data-ttu-id="7279e-120">さらに、呼び出されたによって自動的に、<xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType>と<xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド、および使用するメソッドによって、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md).NET Framework でします。</span><span class="sxs-lookup"><span data-stu-id="7279e-120">In addition, it is called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods, and by methods that use the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) in the .NET Framework.</span></span> <span data-ttu-id="7279e-121">このようなメソッドを含める<xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType>、<xref:System.String.Format%2A?displayProperty=nameWithType>と<xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType>、他のユーザー間で。</span><span class="sxs-lookup"><span data-stu-id="7279e-121">Such methods include <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, <xref:System.String.Format%2A?displayProperty=nameWithType>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, among others.</span></span> <span data-ttu-id="7279e-122"><xref:System.IFormattable.ToString%2A>メソッドの書式指定文字列内の各書式項目のメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7279e-122">The <xref:System.IFormattable.ToString%2A> method is called for each format item in the method's format string.</span></span>  
  
 <span data-ttu-id="7279e-123"><xref:System.IFormattable>インターフェイスは、基本データ型によって実装されます。</span><span class="sxs-lookup"><span data-stu-id="7279e-123">The <xref:System.IFormattable> interface is implemented by the base data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7279e-124">次の例では、 `Temperature` インターフェイスを実装する <xref:System.IFormattable> クラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="7279e-124">The following example defines a `Temperature` class that implements the <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="7279e-125">クラスは、次の 4 つの書式指定子のサポート:"G"および"C"、温度を摂氏で表示されることを示します"F"は、温度は華氏; に表示されることを示します"K"は、温度をケルビンで表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="7279e-125">The class supports four format specifiers: "G" and "C", which indicate that the temperature is to be displayed in Celsius; "F", which indicates that the temperature is to be displayed in Fahrenheit; and "K", which indicates that the temperature is to be displayed in Kelvin.</span></span> <span data-ttu-id="7279e-126">さらに、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>実装も処理書式指定文字列を`null`または空です。</span><span class="sxs-lookup"><span data-stu-id="7279e-126">In addition, the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation also can handle a format string that is `null` or empty.</span></span> <span data-ttu-id="7279e-127">他の 2 つ`ToString`によって定義されたメソッド、`Temperature`クラスへの呼び出しをラップするだけ、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>実装します。</span><span class="sxs-lookup"><span data-stu-id="7279e-127">The other two `ToString` methods defined by the `Temperature` class simply wrap a call to the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 <span data-ttu-id="7279e-128">次の例では、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType>実装直接、または複合書式指定文字列を使用しています。</span><span class="sxs-lookup"><span data-stu-id="7279e-128">The following example then calls the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation either directly or by using a composite format string.</span></span>  
  
 [!code-csharp[System.IFormattable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#2)]
 [!code-vb[System.IFormattable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="7279e-129">文字列の書式設定より詳細に制御を必要とするクラス<see cref="M:System.Object.ToString" />提供を実装しなければなりません<see cref="T:System.IFormattable" />です。</span>
        <span class="sxs-lookup">
          <span data-stu-id="7279e-129">Classes that require more control over the formatting of strings than <see cref="M:System.Object.ToString" /> provides should implement <see cref="T:System.IFormattable" />.</span>
        </span>
        <span data-ttu-id="7279e-130">実装するクラス<see cref="T:System.IFormattable" />"G"(全般) 書式指定子をサポートする必要があります。</span>
        <span class="sxs-lookup">
          <span data-stu-id="7279e-130">A class that implements <see cref="T:System.IFormattable" /> must support the "G" (general) format specifier.</span>
        </span>
        <span data-ttu-id="7279e-131">"G"指定子だけでなく、クラスは、サポートされている書式指定子の一覧を定義できます。</span>
        <span class="sxs-lookup">
          <span data-stu-id="7279e-131">Besides the "G" specifier, the class can define the list of format specifiers that it supports.</span>
        </span>
        <span data-ttu-id="7279e-132">書式指定子を処理するさらに、クラスを準備する必要があります<see langword="null" />です。</span>
        <span class="sxs-lookup">
          <span data-stu-id="7279e-132">In addition, the class must be prepared to handle a format specifier that is <see langword="null" />.</span>
        </span>
        <span data-ttu-id="7279e-133">書式設定と、コードの書式設定の詳細については、次を参照してください[型の書式設定。](~/docs/standard/base-types/formatting-types.md)</span>
        <span class="sxs-lookup">
          <span data-stu-id="7279e-133">For more information about formatting and formatting codes, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.IFormatProvider" />
    <altmember cref="M:System.Object.ToString" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
  </Docs>
  <Members>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="7279e-134">使用する書式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7279e-134">The format to use.</span>
          </span>
          <span data-ttu-id="7279e-135">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="7279e-135">-or-</span>
          </span>
          <span data-ttu-id="7279e-136">
            <see cref="T:System.IFormattable" /> 実装の型に対して定義されている既定の書式を使用する場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7279e-136">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="7279e-137">値を書式設定するために使用するプロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7279e-137">The provider to use to format the value.</span>
          </span>
          <span data-ttu-id="7279e-138">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="7279e-138">-or-</span>
          </span>
          <span data-ttu-id="7279e-139">オペレーティング システムの現在のロケール設定から数値書式情報を取得する場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7279e-139">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7279e-140">指定された書式を使用して現在のインスタンスの値を書式設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7279e-140">Formats the value of the current instance using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7279e-141">指定された書式の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7279e-141">The value of the current instance in the specified format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7279e-142"><xref:System.IFormattable.ToString%2A>メソッドは値を複数の方法で表すことができる文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7279e-142">The <xref:System.IFormattable.ToString%2A> method converts a value to a string representation that can be expressed in multiple ways.</span></span> <span data-ttu-id="7279e-143">その正確な書式は、特定の記号または特定のカルチャ、職業、内または業界によって定義された特定の順序に依存します。</span><span class="sxs-lookup"><span data-stu-id="7279e-143">Its precise format depends on specific symbols or a specified order defined by specific cultures, professions, or industries.</span></span> <span data-ttu-id="7279e-144">メソッドを直接呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="7279e-144">You can call the method directly.</span></span> <span data-ttu-id="7279e-145">によって自動的に呼び出されます、<xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType>と<xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド、および複合書式設定を使用しているメソッドによって機能の .NET Framework でなど<xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>、 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>、および<xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7279e-145">It is also called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods, and by methods that use the composite formatting feature in the .NET Framework, such as <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7279e-146">(詳細については、次を参照してください[複合書式指定](~/docs/standard/base-types/composite-formatting.md)。)。</span><span class="sxs-lookup"><span data-stu-id="7279e-146">(For more information, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).)</span></span>  
  
 <span data-ttu-id="7279e-147">複合書式指定メソッドの呼び出し、<xref:System.IFormattable.ToString%2A>書式指定文字列内の各書式項目を 1 回のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="7279e-147">Composite formatting methods call the <xref:System.IFormattable.ToString%2A> method once for each format item in a format string.</span></span> <span data-ttu-id="7279e-148">メソッドに渡されるパラメーターはとおりと呼ばれる特定の書式設定メソッドおよび書式指定項目の内容に依存します。</span><span class="sxs-lookup"><span data-stu-id="7279e-148">The parameters passed to the method depend on the specific formatting method that is called and on the content of the format item, as follows:</span></span>  
  
-   <span data-ttu-id="7279e-149">書式指定項目が、書式指定文字列を含まないかどうか (書式指定項目は、単に場合など、 `{0}`)、渡される`null`の値として、<xref:System.String?displayProperty=nameWithType>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7279e-149">If the format item does not include a format string (for example, if the format item is simply `{0}`), it is passed `null` as the value of the <xref:System.String?displayProperty=nameWithType> parameter.</span></span>  
  
-   <span data-ttu-id="7279e-150">書式指定項目には、書式指定文字列が含まれている場合 (たとえば、 `{0:G}`) の値として書式設定文字列が渡されること、<xref:System.String?displayProperty=nameWithType>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7279e-150">If the format item includes a format string (for example, `{0:G}`), that format string is passed as the value of the <xref:System.String?displayProperty=nameWithType> parameter.</span></span>  
  
-   <span data-ttu-id="7279e-151">元のメソッド呼び出しが含まれていない場合、<xref:System.IFormatProvider?displayProperty=nameWithType>パラメーター、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>の値として渡される、<xref:System.IFormatProvider?displayProperty=nameWithType>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7279e-151">If the original method call does not include an <xref:System.IFormatProvider?displayProperty=nameWithType> parameter, <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> is passed as the value of the <xref:System.IFormatProvider?displayProperty=nameWithType> parameter.</span></span>  
  
-   <span data-ttu-id="7279e-152">元のメソッド呼び出しが含まれている場合、<xref:System.IFormatProvider?displayProperty=nameWithType>パラメーター、メソッドの呼び出しで指定されているプロバイダーは、の値として渡される、<xref:System.IFormatProvider?displayProperty=nameWithType>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7279e-152">If the original method call includes an <xref:System.IFormatProvider?displayProperty=nameWithType> parameter, the provider that is supplied in the method call is passed as the value of the <xref:System.IFormatProvider?displayProperty=nameWithType> parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7279e-153">オブジェクトの<xref:System.IFormattable.ToString%2A>渡されない場合にのみ、複合書式指定メソッドによって実装が呼び出されます、<xref:System.ICustomFormatter>書式プロバイダー、または、<xref:System.ICustomFormatter.Format%2A>カスタム書式プロバイダーのメソッドを返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="7279e-153">An object's <xref:System.IFormattable.ToString%2A> implementation is called by composite formatting methods only if they are not passed an <xref:System.ICustomFormatter> format provider, or if the <xref:System.ICustomFormatter.Format%2A> method of the custom format provider returns `null`.</span></span>  
  
 <span data-ttu-id="7279e-154">.NET Framework には、実装の 3 つの書式設定プロバイダーが含まれています、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="7279e-154">The .NET Framework includes three format providers, all of which implement the <xref:System.IFormatProvider> interface:</span></span>  
  
-   <span data-ttu-id="7279e-155"><xref:System.Globalization.NumberFormatInfo> 数値書式設定は 10 進数と桁区切り記号の文字などの情報およびスペルと通貨値の通貨記号の配置を提供します。</span><span class="sxs-lookup"><span data-stu-id="7279e-155"><xref:System.Globalization.NumberFormatInfo> supplies numeric formatting information, such as the characters to use for decimal and group separators, and the spelling and placement of currency symbols in monetary values.</span></span>  
  
-   <span data-ttu-id="7279e-156"><xref:System.Globalization.DateTimeFormatInfo> 月、日、および年の日付のパターン内の位置など、日付に関連して、時間関連の書式情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="7279e-156"><xref:System.Globalization.DateTimeFormatInfo> supplies date-related and time-related formatting information, such as the position of the month, the day, and the year in a date pattern.</span></span>  
  
-   <span data-ttu-id="7279e-157"><xref:System.Globalization.CultureInfo> 既定の書式の数値書式指定情報を含む特定のカルチャの情報および日付に関連して、時間関連の書式情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="7279e-157"><xref:System.Globalization.CultureInfo> contains the default formatting information in a specific culture, including the numeric format information, and date-related and time-related formatting information.</span></span>  
  
 <span data-ttu-id="7279e-158">さらに、独自のカスタム書式プロバイダーを定義することができます。</span><span class="sxs-lookup"><span data-stu-id="7279e-158">In addition, you can define your own custom format provider.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7279e-159">次の例で、`Temperature`を実装するクラス、<xref:System.IFormattable.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7279e-159">The following example demonstrates a `Temperature` class that implements the <xref:System.IFormattable.ToString%2A> method.</span></span> <span data-ttu-id="7279e-160">このコード例に示されている例の一部である、<xref:System.IFormattable>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7279e-160">This code example is part of a larger example provided for the <xref:System.IFormattable> class.</span></span>  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="7279e-161">
              <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />メソッドは、"G"(全般) の書式指定子をサポートする必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="7279e-161">The <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> method must support the "G" (general) format specifier.</span>
            </span>
            <span data-ttu-id="7279e-162">"G"指定子だけでなく、クラスは、サポートされている書式指定子の一覧を定義できます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="7279e-162">Besides the "G" specifier, the class can define the list of format specifiers that it supports.</span>
            </span>
            <span data-ttu-id="7279e-163">書式指定子を処理するさらに、クラスを準備する必要があります<see langword="null" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="7279e-163">In addition, the class must be prepared to handle a format specifier that is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="7279e-164">書式設定と、コードの書式設定の詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="7279e-164">For more information about formatting and formatting codes, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.String" />
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>