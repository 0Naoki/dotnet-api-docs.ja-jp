<Type Name="IComparable" FullName="System.IComparable">
  <TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ee72f-101">値型またはクラスで実装する、インスタンスの並べ替えを目的とする型固有の汎用比較メソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="ee72f-101">Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee72f-102">このインターフェイスは、値を持つ順序付けしたり並べ替えの種類によって実装されます。</span><span class="sxs-lookup"><span data-stu-id="ee72f-102">This interface is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="ee72f-103">実装する型が 1 つのメソッドを定義することが必要です<xref:System.IComparable.CompareTo%28System.Object%29>がかどうか、現在のインスタンスの位置を並べ替え順序で前に、その後、同じ型の 2 番目のオブジェクトと同じかを示すです。</span><span class="sxs-lookup"><span data-stu-id="ee72f-103">It requires that implementing types define a single method, <xref:System.IComparable.CompareTo%28System.Object%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="ee72f-104">インスタンスの<xref:System.IComparable>実装が自動的にメソッドによって呼び出されますなど<xref:System.Array.Sort%2A?displayProperty=nameWithType>と<xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ee72f-104">The instance's <xref:System.IComparable> implementation is called automatically by methods such as <xref:System.Array.Sort%2A?displayProperty=nameWithType> and <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ee72f-105">実装、<xref:System.IComparable.CompareTo%28System.Object%29>メソッドが返す必要があります、<xref:System.Int32>が 3 つの値のいずれかの次の表に示すようにします。</span><span class="sxs-lookup"><span data-stu-id="ee72f-105">The implementation of the <xref:System.IComparable.CompareTo%28System.Object%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="ee72f-106">[値]</span><span class="sxs-lookup"><span data-stu-id="ee72f-106">Value</span></span>|<span data-ttu-id="ee72f-107">説明</span><span class="sxs-lookup"><span data-stu-id="ee72f-107">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="ee72f-108">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="ee72f-108">Less than zero</span></span>|<span data-ttu-id="ee72f-109">現在のインスタンスで指定されたオブジェクトの前に、<xref:System.IComparable.CompareTo%2A>並べ替え順序のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="ee72f-109">The current instance precedes the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="ee72f-110">0</span><span class="sxs-lookup"><span data-stu-id="ee72f-110">Zero</span></span>|<span data-ttu-id="ee72f-111">この現在のインスタンスが並べ替え順序内で指定されたオブジェクトとしての同じ位置で発生する、<xref:System.IComparable.CompareTo%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ee72f-111">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable.CompareTo%2A> method.</span></span>|  
|<span data-ttu-id="ee72f-112">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="ee72f-112">Greater than zero</span></span>|<span data-ttu-id="ee72f-113">この現在のインスタンスで指定されたオブジェクトに依存して、<xref:System.IComparable.CompareTo%2A>並べ替え順序のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="ee72f-113">This current instance follows the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
  
 <span data-ttu-id="ee72f-114">すべての数値型 (など<xref:System.Int32>と<xref:System.Double>) 実装<xref:System.IComparable>と同様、 <xref:System.String>、 <xref:System.Char>、および<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="ee72f-114">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="ee72f-115">カスタム型は、独自の実装も提供する必要があります<xref:System.IComparable>オブジェクトのインスタンスを並べ替える、または並べ替えを有効にします。</span><span class="sxs-lookup"><span data-stu-id="ee72f-115">Custom types should also provide their own implementation of <xref:System.IComparable> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee72f-116">次の例は、の実装を示しています。<xref:System.IComparable>と必要な<xref:System.IComparable.CompareTo%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ee72f-116">The following example illustrates the implementation of <xref:System.IComparable> and the requisite <xref:System.IComparable.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ee72f-117">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ee72f-117">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="ee72f-118">現在のインスタンスを同じ型の別のオブジェクトと比較し、現在のインスタンスの並べ替え順序での位置が、比較対象のオブジェクトと比べて前か、後か、または同じかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="ee72f-118">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="ee72f-119">比較対象オブジェクトの相対順序を示す値。</span><span class="sxs-lookup"><span data-stu-id="ee72f-119">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="ee72f-120">戻り値の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="ee72f-120">The return value has these meanings:</span></span>  
  
 <span data-ttu-id="ee72f-121"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="ee72f-121"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="ee72f-122"></term><description> 意味</span><span class="sxs-lookup"><span data-stu-id="ee72f-122"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="ee72f-123"></description></listheader><item><term> 0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="ee72f-123"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="ee72f-124"></term><description> このインスタンスの位置が、並べ替え順序において <paramref name="obj" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="ee72f-124"></term><description> This instance precedes <paramref name="obj" /> in the sort order.</span></span>  
  
 <span data-ttu-id="ee72f-125"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="ee72f-125"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="ee72f-126"></term><description> このインスタンスは、並べ替え順序で、<paramref name="obj" /> と同じ位置に出現します。</span><span class="sxs-lookup"><span data-stu-id="ee72f-126"></term><description> This instance occurs in the same position in the sort order as <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="ee72f-127"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="ee72f-127"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="ee72f-128"></term><description> このインスタンスの位置が、並べ替え順序において <paramref name="obj" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="ee72f-128"></term><description> This instance follows <paramref name="obj" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee72f-129"><xref:System.IComparable.CompareTo%2A>メソッドは値を持つ順序付けしたり並べ替えの種類によって実装されます。</span><span class="sxs-lookup"><span data-stu-id="ee72f-129">The <xref:System.IComparable.CompareTo%2A> method is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="ee72f-130">メソッドによって呼び出されます自動的に、非ジェネリック コレクション オブジェクトのメソッドなど<xref:System.Array.Sort%2A?displayProperty=nameWithType>配列の各メンバーの並べ替えにします。</span><span class="sxs-lookup"><span data-stu-id="ee72f-130">It is called automatically by methods of non-generic collection objects, such as <xref:System.Array.Sort%2A?displayProperty=nameWithType>, to order each member of the array.</span></span> <span data-ttu-id="ee72f-131">カスタムのクラスまたは構造体を実装しない場合<xref:System.IComparable>そのメンバーを並べ替えることができず、および並べ替え操作を生成する可能性、<xref:System.InvalidOperationException>です。</span><span class="sxs-lookup"><span data-stu-id="ee72f-131">If a custom class or structure does not implement <xref:System.IComparable>, its members cannot be ordered and the sort operation can throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="ee72f-132">このメソッドは定義のみであるため、効果が特定のクラスまたは値の型によって実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee72f-132">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="ee72f-133">(「の前に」、「と同じ位置で発生する」および「後」) のセクションでは、特定の実装によって異なります。 戻り値で指定された比較の意味です。</span><span class="sxs-lookup"><span data-stu-id="ee72f-133">The meaning of the comparisons specified in the Return Value section ("precedes", "occurs in the same position as", and "follows") depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="ee72f-134">定義では、任意のオブジェクトよりも大きい値を比較して (または後) `null`、互いに等しい 2 つの null 参照を比較します。</span><span class="sxs-lookup"><span data-stu-id="ee72f-134">By definition, any object compares greater than (or follows) `null`, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="ee72f-135">パラメーター、 `obj`、する必要があります、クラスと同じ型であるまたは値の型です。 このインターフェイスを実装するそれ以外の場合、<xref:System.ArgumentException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ee72f-135">The parameter, `obj`, must be the same type as the class or value type that implements this interface; otherwise, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee72f-136">次の例は、の使用を示しています。<xref:System.IComparable.CompareTo%2A>を比較する、`Temperature`オブジェクトを実装する<xref:System.IComparable>に別のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ee72f-136">The following example illustrates the use of <xref:System.IComparable.CompareTo%2A> to compare a `Temperature` object implementing <xref:System.IComparable> with another object.</span></span> <span data-ttu-id="ee72f-137">`Temperature`オブジェクトを実装して<xref:System.IComparable.CompareTo%2A>への呼び出しをラップするだけで、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ee72f-137">The `Temperature` object implements <xref:System.IComparable.CompareTo%2A> by simply wrapping a call to the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ee72f-138"><paramref name="obj" /> の型がこのインスタンスの型と異なります。</span><span class="sxs-lookup"><span data-stu-id="ee72f-138"><paramref name="obj" /> is not the same type as this instance.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="ee72f-139">オブジェクト A、B、C、次が満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee72f-139">For objects A, B and C, the following must be true:</span></span>  
  
 <span data-ttu-id="ee72f-140"><c>A.CompareTo(A)</c>ゼロを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee72f-140"><c>A.CompareTo(A)</c> must return zero.</span></span>  
  
 <span data-ttu-id="ee72f-141">場合<c>A.CompareTo(B)</c> 0 が返されます、し<c>B.CompareTo(A)</c>ゼロを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee72f-141">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> must return zero.</span></span>  
  
 <span data-ttu-id="ee72f-142">場合<c>A.CompareTo(B)</c>は 0 を返しますと<c>B.CompareTo(C)</c> 0 が返されます、し<c>A.CompareTo(C)</c>ゼロを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee72f-142">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> must return zero.</span></span>  
  
 <span data-ttu-id="ee72f-143">場合<c>A.CompareTo(B)</c>し、0 以外の値を返します<c>B.CompareTo(A)</c>逆の符号の値を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee72f-143">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> must return a value of the opposite sign.</span></span>  
  
 <span data-ttu-id="ee72f-144">場合<c>A.CompareTo(B)</c>値を返します<paramref name="x" />には、0 と等しくないと<c>B.CompareTo(C)</c>値を返します<paramref name="y" />と同じ符号の<paramref name="x" />、し<c>A.CompareTo(C)</c>と同じ符号の値を返す必要があります<paramref name="x" />と<paramref name="y" />です。</span><span class="sxs-lookup"><span data-stu-id="ee72f-144">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> must return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para>
        </block>
        <block subset="none" type="usage">
          <para><span data-ttu-id="ee72f-145">使用して、<see cref="M:System.IComparable.CompareTo(System.Object)" />メソッド、クラスのインスタンスの構成を決定します。</span><span class="sxs-lookup"><span data-stu-id="ee72f-145">Use the <see cref="M:System.IComparable.CompareTo(System.Object)" /> method to determine the ordering of instances of a class.</span></span></para>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>