<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IComparable.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5070339ff2c2f571a4d73591a9f8016dea438436b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">070339ff2c2f571a4d73591a9f8016dea438436b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IComparable">
          <source>Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</source>
          <target state="translated">値型またはクラスで実装する、インスタンスの並べ替えを目的とする型固有の汎用比較メソッドを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>This interface is implemented by types whose values can be ordered or sorted.</source>
          <target state="translated">このインターフェイスは、値を持つ順序付けしたり並べ替えの種類によって実装されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>It requires that implementing types define a single method, <ph id="ph1">&lt;xref:System.IComparable.CompareTo%28System.Object%29&gt;</ph>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</source>
          <target state="translated">実装する型が 1 つのメソッドを定義することが必要です<ph id="ph1">&lt;xref:System.IComparable.CompareTo%28System.Object%29&gt;</ph>がかどうか、現在のインスタンスの位置を並べ替え順序で前に、その後、同じ型の 2 番目のオブジェクトと同じかを示すです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>The instance's <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation is called automatically by methods such as <ph id="ph2">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">インスタンスの<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>実装が自動的にメソッドによって呼び出されますなど<ph id="ph2">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>The implementation of the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%28System.Object%29&gt;</ph> method must return an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> that has one of three values, as shown in the following table.</source>
          <target state="translated">実装、<ph id="ph1">&lt;xref:System.IComparable.CompareTo%28System.Object%29&gt;</ph>メソッドが返す必要があります、<ph id="ph2">&lt;xref:System.Int32&gt;</ph>が 3 つの値のいずれかの次の表に示すようにします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>Meaning</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>Less than zero</source>
          <target state="translated">0 より小さい値</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>The current instance precedes the object specified by the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method in the sort order.</source>
          <target state="translated">現在のインスタンスで指定されたオブジェクトの前に、<ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>並べ替え順序のメソッドです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>Zero</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>This current instance occurs in the same position in the sort order as the object specified by the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">この現在のインスタンスが並べ替え順序内で指定されたオブジェクトとしての同じ位置で発生する、<ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>Greater than zero</source>
          <target state="translated">0 より大きい値</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>This current instance follows the object specified by the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method in the sort order.</source>
          <target state="translated">この現在のインスタンスで指定されたオブジェクトに依存して、<ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>並べ替え順序のメソッドです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>All numeric types (such as <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and <ph id="ph2">&lt;xref:System.Double&gt;</ph>) implement <ph id="ph3">&lt;xref:System.IComparable&gt;</ph>, as do <ph id="ph4">&lt;xref:System.String&gt;</ph>, <ph id="ph5">&lt;xref:System.Char&gt;</ph>, and <ph id="ph6">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">すべての数値型 (など<ph id="ph1">&lt;xref:System.Int32&gt;</ph>と<ph id="ph2">&lt;xref:System.Double&gt;</ph>) 実装<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>と同様、 <ph id="ph4">&lt;xref:System.String&gt;</ph>、 <ph id="ph5">&lt;xref:System.Char&gt;</ph>、および<ph id="ph6">&lt;xref:System.DateTime&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>Custom types should also provide their own implementation of <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> to enable object instances to be ordered or sorted.</source>
          <target state="translated">カスタム型は、独自の実装も提供する必要があります<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>オブジェクトのインスタンスを並べ替える、または並べ替えを有効にします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable">
          <source>The following example illustrates the implementation of <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> and the requisite <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">次の例は、の実装を示しています。<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>と必要な<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>An object to compare with this instance.</source>
          <target state="translated">このインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</source>
          <target state="translated">現在のインスタンスを同じ型の別のオブジェクトと比較し、現在のインスタンスの並べ替え順序での位置が、比較対象のオブジェクトと比べて前か、後か、または同じかを示す整数を返します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>A value that indicates the relative order of the objects being compared.</source>
          <target state="translated">比較対象オブジェクトの相対順序を示す値。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>The return value has these meanings:</source>
          <target state="translated">戻り値の意味は次のとおりです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 値</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 意味</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 より小さい値</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスの位置が、並べ替え順序において <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> よりも前です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance occurs in the same position in the sort order as <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは、並べ替え順序で、<ph id="ph3">&lt;paramref name="obj" /&gt;</ph> と同じ位置に出現します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 より大きい値</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスの位置が、並べ替え順序において <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> よりも後ろです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> method is implemented by types whose values can be ordered or sorted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>メソッドは値を持つ順序付けしたり並べ替えの種類によって実装されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>It is called automatically by methods of non-generic collection objects, such as <ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph>, to order each member of the array.</source>
          <target state="translated">メソッドによって呼び出されます自動的に、非ジェネリック コレクション オブジェクトのメソッドなど<ph id="ph1">&lt;xref:System.Array.Sort%2A?displayProperty=nameWithType&gt;</ph>配列の各メンバーの並べ替えにします。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>If a custom class or structure does not implement <ph id="ph1">&lt;xref:System.IComparable&gt;</ph>, its members cannot be ordered and the sort operation can throw an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">カスタムのクラスまたは構造体を実装しない場合<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>そのメンバーを並べ替えることができず、および並べ替え操作を生成する可能性、<ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>This method is only a definition and must be implemented by a specific class or value type to have effect.</source>
          <target state="translated">このメソッドは定義のみであるため、効果が特定のクラスまたは値の型によって実装する必要があります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>The meaning of the comparisons specified in the Return Value section ("precedes", "occurs in the same position as", and "follows") depends on the particular implementation.</source>
          <target state="translated">(「の前に」、「と同じ位置で発生する」および「後」) のセクションでは、特定の実装によって異なります。 戻り値で指定された比較の意味です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>By definition, any object compares greater than (or follows) <ph id="ph1">`null`</ph>, and two null references compare equal to each other.</source>
          <target state="translated">定義では、任意のオブジェクトよりも大きい値を比較して (または後) <ph id="ph1">`null`</ph>、互いに等しい 2 つの null 参照を比較します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>The parameter, <ph id="ph1">`obj`</ph>, must be the same type as the class or value type that implements this interface; otherwise, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">パラメーター、 <ph id="ph1">`obj`</ph>、する必要があります、クラスと同じ型であるまたは値の型です。 このインターフェイスを実装するそれ以外の場合、<ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>The following example illustrates the use of <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> to compare a <ph id="ph2">`Temperature`</ph> object implementing <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> with another object.</source>
          <target state="translated">次の例は、の使用を示しています。<ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>を比較する、<ph id="ph2">`Temperature`</ph>オブジェクトを実装する<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>に別のオブジェクト。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>The <ph id="ph1">`Temperature`</ph> object implements <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> by simply wrapping a call to the <ph id="ph3">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`Temperature`</ph>オブジェクトを実装して<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>への呼び出しをラップするだけで、<ph id="ph3">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not the same type as this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> の型がこのインスタンスの型と異なります。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>For objects A, B and C, the following must be true:</source>
          <target state="translated">オブジェクト A、B、C、次が満たす必要があります。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source><bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(A)<ept id="p1">&lt;/c&gt;</ept> must return zero.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(A)<ept id="p1">&lt;/c&gt;</ept>ゼロを返す必要があります。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns zero, then <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> must return zero.</source>
          <target state="translated">場合<bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> 0 が返されます、し<bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept>ゼロを返す必要があります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns zero and <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> returns zero, then <bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> must return zero.</source>
          <target state="translated">場合<bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept>は 0 を返しますと<bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> 0 が返されます、し<bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept>ゼロを返す必要があります。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns a value other than zero, then <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> must return a value of the opposite sign.</source>
          <target state="translated">場合<bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept>し、0 以外の値を返します<bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept>逆の符号の値を返す必要があります。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns a value <ph id="ph1">&lt;paramref name="x" /&gt;</ph> not equal to zero, and <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> returns a value <ph id="ph2">&lt;paramref name="y" /&gt;</ph> of the same sign as <ph id="ph3">&lt;paramref name="x" /&gt;</ph>, then <bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> must return a value of the same sign as <ph id="ph4">&lt;paramref name="x" /&gt;</ph> and <ph id="ph5">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated">場合<bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept>値を返します<ph id="ph1">&lt;paramref name="x" /&gt;</ph>には、0 と等しくないと<bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept>値を返します<ph id="ph2">&lt;paramref name="y" /&gt;</ph>と同じ符号の<ph id="ph3">&lt;paramref name="x" /&gt;</ph>、し<bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept>と同じ符号の値を返す必要があります<ph id="ph4">&lt;paramref name="x" /&gt;</ph>と<ph id="ph5">&lt;paramref name="y" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable.CompareTo(System.Object)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.IComparable.CompareTo(System.Object)" /&gt;</ph> method to determine the ordering of instances of a class.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;see cref="M:System.IComparable.CompareTo(System.Object)" /&gt;</ph>メソッド、クラスのインスタンスの構成を決定します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>