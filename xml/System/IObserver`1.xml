<Type Name="IObserver&lt;T&gt;" FullName="System.IObserver&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69fe38c1466cd015ea9b5aac7f4b2a6dd9f69526" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70472998" /></Metadata><TypeSignature Language="C#" Value="public interface IObserver&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObserver`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObserver`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObserver(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObserver" />
  <TypeSignature Language="F#" Value="type IObserver&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">通知情報を提供するオブジェクト。</typeparam>
    <summary>プッシュ ベースの通知を受け取るための機構を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インターフェイス<xref:System.IObserver%601> と <xref:System.IObservable%601> インターフェイスは、オブザーバーデザインパターンとも呼ばれる、プッシュベースの通知の一般化されたメカニズムを提供します。 インターフェイス<xref:System.IObservable%601>は、通知を送信するクラス (プロバイダー) を表します<xref:System.IObserver%601> 。インターフェイスは、そのインターフェイスを受け取るクラス (オブザーバー) を表します。 `T`通知情報を提供するクラスを表します。  
  
 実装<xref:System.IObserver%601>は、プロバイダーの<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>メソッドに対して自身の<xref:System.IObservable%601>インスタンスを渡すことによって、プロバイダー (実装) からの通知を受け取るように配置されます。 このメソッドは、 <xref:System.IDisposable>プロバイダーが通知の送信を終了する前にオブザーバーの登録を解除するために使用できるオブジェクトを返します。  
  
 インターフェイス<xref:System.IObserver%601>は、オブザーバーが実装する必要がある次の3つのメソッドを定義します。  
  
-   <xref:System.IObserver%601.OnNext%2A>メソッド。このメソッドは、通常、オブザーバーに新しいデータまたは状態情報を提供するためにプロバイダーによって呼び出されます。  
  
-   <xref:System.IObserver%601.OnError%2A>メソッド。このメソッドは通常、データが使用できない、アクセスできない、または破損していることを示すためにプロバイダーによって呼び出されます。または、プロバイダーによって他のエラー状態が発生したことを示します。  
  
-   <xref:System.IObserver%601.OnCompleted%2A>メソッド。これは通常、オブザーバーに通知を送信する処理が完了したことを示すためにプロバイダーによって呼び出されます。  
  
   
  
## Examples  
 次の例は、オブザーバーデザインパターンを示しています。 緯度と経度`Location`の情報を含むクラスを定義します。  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 クラス`LocationReporter`は、実装<xref:System.IObserver%601>を提供します。 現在の場所に関する情報がコンソールに表示されます。 そのコンストラクターには`name` 、パラメーターが含まれ`LocationReporter`ています。これにより、インスタンスは、その文字列の出力で自身を識別できます。 また、プロバイダーの`Subscribe` <xref:System.IObservable%601.Subscribe%2A>メソッドへの呼び出しをラップするメソッドも含まれています。 これにより、メソッドは、返さ<xref:System.IDisposable>れた参照をプライベート変数に割り当てることができます。 クラス`LocationReporter`には、メソッド`Unsubscribe`によって<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>返される<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>オブジェクトのメソッドを呼び出すメソッドも含まれています。 次のコードでは`LocationReporter` 、クラスを定義しています。  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 クラス`LocationTracker`は、実装<xref:System.IObservable%601>を提供します。 このメソッドには、緯度`Location`と経度のデータを格納する null 許容のオブジェクトが渡されます。 `TrackLocation` 値がでない`null`場合、メソッド`TrackLocation`は各オブザーバー <xref:System.IObserver%601.OnNext%2A>のメソッドを呼び出します。 `Location`  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 値が`null`の場合`TrackLocation` 、メソッドはオブジェクトをインスタンス化します。これを次の例に示します。 `LocationNotFoundException`  `Location` 次に、各オブザーバーの<xref:System.IObserver%601.OnError%2A>メソッドを呼び出し、オブジェクト`LocationNotFoundException`を渡します。 はから`LocationNotFoundException` <xref:System.Exception>派生しますが、新しいメンバーは追加されません。  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 オブザーバーは、 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>メソッドを呼び出して`TrackLocation`オブジェクトから通知を受け取るように登録します。これにより、オブザーバー <xref:System.Collections.Generic.List%601>オブジェクトへの参照がプライベートオブジェクトに割り当てられます。 メソッドは`Unsubscriber`オブジェクトを返します。これ<xref:System.IDisposable>は、オブザーバーが通知の受信を停止できるようにする実装です。 クラス`LocationTracker`には、 `EndTransmission`メソッドも含まれています。 これ以上の場所データが使用できない場合、メソッドは各<xref:System.IObserver%601.OnCompleted%2A>オブザーバーのメソッドを呼び出し、オブザーバーの内部リストをクリアします。  
  
 次のコードでは、プロバイダーとオブザーバーをインスタンス化します。  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObservable`1" />
  </Docs>
  <Members>
    <Member MemberName="OnCompleted">
      <MemberSignature Language="C#" Value="public void OnCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnCompleted();" />
      <MemberSignature Language="F#" Value="abstract member OnCompleted : unit -&gt; unit" Usage="iObserver.OnCompleted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>プロバイダーでプッシュ ベースの通知の送信が完了したことをオブザーバーに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブザーバー <xref:System.IObserver%601.OnCompleted%2A>の実装が呼び出されると<xref:System.IObserver%601.OnCompleted%2A> 、 <xref:System.IDisposable.Dispose%2A>メソッドは、メソッドを呼び出したとき<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>に<xref:System.IDisposable>オブザーバーに返されたオブジェクトのメソッドを必要に応じて呼び出すことができます。  
  
   
  
## Examples  
 次の例では、緯度/ <xref:System.IObserver%601.OnCompleted%2A>経度追跡アプリケーションでメソッドを実装しています。 メソッドは、これ以上データが使用できないことを報告するだけ<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>で、プロバイダーの実装を呼び出します。 完全な例について<xref:System.IObserver%601>は、「」の「例」を参照してください。  
  
 [!code-csharp[System.IObserver.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#11)]
 [!code-vb[System.IObserver.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public void OnError (Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnError(class System.Exception error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnError (error As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnError(Exception ^ error);" />
      <MemberSignature Language="F#" Value="abstract member OnError : Exception -&gt; unit" Usage="iObserver.OnError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="error">エラーに関する追加情報を提供するオブジェクト。</param>
        <summary>プロバイダーでエラー状態が発生したことをオブザーバーに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `error`はから <xref:System.Exception?displayProperty=nameWithType> 派生したオブジェクトですが、必ずしもプロバイダーによってスローされる例外を表すとは限りません。 また、必要なデータや使用できないデータなど、ルーチンや予期されるエラー状態を表すこともできます。 メソッド<xref:System.IObserver%601.OnError%2A>は情報として表示される必要があり、プロバイダーはオブザーバーにエラー処理を提供しないようにする必要があります。  
  
   
  
## Examples  
 次の例では、緯度/ <xref:System.IObserver%601.OnError%2A>経度追跡アプリケーションでメソッドを実装しています。 このメソッドは、データが現在使用できないことを報告するだけです。パラメーターとして渡された<xref:System.Exception>オブジェクトを使用することはありません。 完全な例について<xref:System.IObserver%601>は、「」の「例」を参照してください。  
  
 [!code-csharp[System.IObserver.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#10)]
 [!code-vb[System.IObserver.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c834760f-ddd4-417f-abb7-a059679d5b8c">オブサーバー デザイン パターンのベスト プラクティス</related>
      </Docs>
    </Member>
    <Member MemberName="OnNext">
      <MemberSignature Language="C#" Value="public void OnNext (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNext(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnNext(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnNext (value As T)" />
      <MemberSignature Language="F#" Value="abstract member OnNext : 'T -&gt; unit" Usage="iObserver.OnNext value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">現在の通知情報。</param>
        <summary>新しいデータをオブザーバーに提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブザーバーがプロバイダーの<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>メソッドを呼び出した後、プロバイダーはオブザーバーの<xref:System.IObserver%601.OnNext%2A>メソッドを呼び出して通知を提供します。  
  
   
  
## Examples  
 次の例では、緯度/ <xref:System.IObserver%601.OnNext%2A>経度追跡アプリケーションでメソッドを実装しています。 完全な例について<xref:System.IObserver%601>は、「」の「例」を参照してください。  
  
 [!code-csharp[System.IObserver.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#12)]
 [!code-vb[System.IObserver.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
