<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IObserver`1.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53facb3d52ed4cf715a9c826dd48e65f8e79aa81b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3facb3d52ed4cf715a9c826dd48e65f8e79aa81b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The object that provides notification information.</source>
          <target state="translated">通知情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IObserver`1">
          <source>Provides a mechanism for receiving push-based notifications.</source>
          <target state="translated">プッシュ ベースの通知を受信するメカニズムを定義します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> and <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph>と<ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph>インターフェイスが汎用化されたプッシュ ベースの通知、オブザーバー デザイン パターンとも呼ばれるメカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> interface represents the class that sends notifications (the provider); the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> interface represents the class that receives them (the observer).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph>インターフェイスを表します (プロバイダー); の通知を送信するクラス、<ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph>インターフェイスが (observer) 受信するクラスを表します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source><ph id="ph1">`T`</ph> represents the class that provides the notification information.</source>
          <target state="translated"><ph id="ph1">`T`</ph> 通知情報を提供するクラスを表します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>An <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> implementation arranges to receive notifications from a provider (an <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation) by passing an instance of itself to the provider's <ph id="ph3">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph>プロバイダーから通知を受信するように手配実装 (、<ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph>実装) をプロバイダーのそれ自体のインスタンスを渡すことによって<ph id="ph3">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>This method returns an <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> object that can be used to unsubscribe the observer before the provider finishes sending notifications.</source>
          <target state="translated">このメソッドが戻る、<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>プロバイダーにオブザーバーをアンサブスク ライブするのに使用できるオブジェクトは、通知の送信が完了するとします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> interface defines the following three methods that the observer must implement:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph>インターフェイスはオブザーバーを実装する必要がある次の 3 つのメソッドを定義します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method, which is typically called by the provider to supply the observer with new data or state information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph>メソッドで、通常はオブザーバーに新しいデータまたは状態の情報を指定するプロバイダーによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph>メソッドで、データが使用できない、アクセスできないか破損していることを示す、プロバイダーによって通常と呼ばれる、またはプロバイダーには、その他のエラー条件が発生しました。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method, which is typically called by the provider to indicate that it has finished sending notifications to observers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph>メソッドで、通常はオブザーバーに通知の送信が完了したことを示すために、プロバイダーによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following example illustrates the observer design pattern.</source>
          <target state="translated">次の例では、オブザーバー デザイン パターンを示します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It defines a <ph id="ph1">`Location`</ph> class that contains latitude and longitude information.</source>
          <target state="translated">定義する、<ph id="ph1">`Location`</ph>緯度と経度の情報を含むクラスです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationReporter`</ph> class provides the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`LocationReporter`</ph>クラスを提供、<ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It displays information about the current location to the console.</source>
          <target state="translated">コンソールに、現在の場所に関する情報を表示します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Its constructor includes a <ph id="ph1">`name`</ph> parameter, which allows the <ph id="ph2">`LocationReporter`</ph> instance to identify itself in its string output.</source>
          <target state="translated">コンス トラクターが含まれています、<ph id="ph1">`name`</ph>パラメーターは、これにより、<ph id="ph2">`LocationReporter`</ph>の文字列の出力で自身を識別するインスタンス。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It also includes a <ph id="ph1">`Subscribe`</ph> method, which wraps a call to the provider's <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> method.</source>
          <target state="translated">含まれています、<ph id="ph1">`Subscribe`</ph>をプロバイダーの呼び出しをラップするメソッド<ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>This enables the method to assign the returned <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> reference to a private variable.</source>
          <target state="translated">これにより、返された割り当てるメソッド<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>プライベート変数への参照。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationReporter`</ph> class also includes an <ph id="ph2">`Unsubscribe`</ph> method, which calls the <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method of the object returned by the <ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`LocationReporter`</ph>クラスも含まれます、<ph id="ph2">`Unsubscribe`</ph>メソッドを呼び出して、<ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>によって返されるオブジェクトのメソッド、<ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following code defines the <ph id="ph1">`LocationReporter`</ph> class.</source>
          <target state="translated">次のコード定義、<ph id="ph1">`LocationReporter`</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class provides the <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`LocationTracker`</ph>クラスを提供、<ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Its <ph id="ph1">`TrackLocation`</ph> method is passed a nullable <ph id="ph2">`Location`</ph> object that contains the latitude and longitude data.</source>
          <target state="translated">その<ph id="ph1">`TrackLocation`</ph>メソッドは null 許容型に渡されます<ph id="ph2">`Location`</ph>緯度と経度のデータを格納しているオブジェクト。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>If the <ph id="ph1">`Location`</ph> value is not <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method calls the <ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method of each observer.</source>
          <target state="translated">場合、<ph id="ph1">`Location`</ph>値がない<ph id="ph2">`null`</ph>、<ph id="ph3">`TrackLocation`</ph>メソッドの呼び出し、<ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph>各オブザーバーのメソッドです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>If the <ph id="ph1">`Location`</ph> value is <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method instantiates a <ph id="ph4">`LocationNotFoundException`</ph> object, which is shown in the following example.</source>
          <target state="translated">場合、<ph id="ph1">`Location`</ph>値は<ph id="ph2">`null`</ph>、<ph id="ph3">`TrackLocation`</ph>メソッドがインスタンス化、<ph id="ph4">`LocationNotFoundException`</ph>次の例に示されているオブジェクト。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It then calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method and passes it the <ph id="ph2">`LocationNotFoundException`</ph> object.</source>
          <target state="translated">各オブザーバーの順に呼び出して<ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph>メソッドに渡すと、<ph id="ph2">`LocationNotFoundException`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Note that <ph id="ph1">`LocationNotFoundException`</ph> derives from <ph id="ph2">&lt;xref:System.Exception&gt;</ph> but does not add any new members.</source>
          <target state="translated">なお<ph id="ph1">`LocationNotFoundException`</ph>から派生した<ph id="ph2">&lt;xref:System.Exception&gt;</ph>は、新しいメンバーを追加しません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Observers register to receive notifications from a <ph id="ph1">`TrackLocation`</ph> object by calling its <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method, which assigns a reference to the observer object to a private generic <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object.</source>
          <target state="translated">通知を受信するオブザーバーを登録、<ph id="ph1">`TrackLocation`</ph>オブジェクトを呼び出してその<ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph>メソッドで、プライベート ジェネリックにオブザーバー オブジェクトへの参照を割り当てます<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The method returns an <ph id="ph1">`Unsubscriber`</ph> object, which is an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> implementation that enables observers to stop receiving notifications.</source>
          <target state="translated">このメソッドを返します、<ph id="ph1">`Unsubscriber`</ph>オブジェクトは、<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>により、通知の受信を停止するオブザーバーを実装します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class also includes an <ph id="ph2">`EndTransmission`</ph> method.</source>
          <target state="translated"><ph id="ph1">`LocationTracker`</ph>クラスも含まれます、<ph id="ph2">`EndTransmission`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>When no further location data is available, the method calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method and then clears the internal list of observers.</source>
          <target state="translated">さらに場所データを使用できない場合、メソッドの各オブザーバーの<ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph>メソッドおよびオブザーバーの内部リストをクリアします。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following code then instantiates the provider and the observer.</source>
          <target state="translated">次のコードは、プロバイダーとオブザーバーにし、インスタンス化します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnCompleted">
          <source>Notifies the observer that the provider has finished sending push-based notifications.</source>
          <target state="translated">プロバイダーでプッシュ ベースの通知の送信が完了したことをオブザーバーに通知します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>When the observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> implementation is called, the <ph id="ph2">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method can optionally call the <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.IDisposable&gt;</ph> object that was returned to the observer when it called the <ph id="ph5">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">ときにオブザーバーの<ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph>実装が呼び出される、<ph id="ph2">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph>メソッドを呼び出すことができます必要に応じて、<ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>のメソッド、<ph id="ph4">&lt;xref:System.IDisposable&gt;</ph>呼び出されると、オブザーバーに返されたオブジェクトで、<ph id="ph5">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">次の例の実装を提供する、<ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph>緯度/経度追跡アプリケーション内のメソッドです。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>The method simply reports that no further data is available and calls the provider's <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">メソッドは、単にないさらにそのデータが使用可能なは、プロバイダーの呼び出しに報告<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">使用例を参照してください、<ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph>コード例全体についてのトピックです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>An object that provides additional information about the error.</source>
          <target state="translated">エラーに関する追加情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>Notifies the observer that the provider has experienced an error condition.</source>
          <target state="translated">プロバイダーでエラー状態が発生したことをオブザーバーに通知します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>Although <ph id="ph1">`error`</ph> is an object that is derived from <ph id="ph2">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph>, it does not necessarily represent an exception that is thrown by the provider.</source>
          <target state="translated"><ph id="ph1">`error`</ph>から派生したオブジェクトは、 <ph id="ph2">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph>、これは必ずしも表しませんプロバイダーによってスローされる例外。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>It can also represent a routine or expected error condition, such as data that is missing or unavailable.</source>
          <target state="translated">見つからないか、使用できなくなったデータなど、日常的なまたは予期されるエラー条件を表すこともできます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method should be seen as informational, and the provider should not expect the observer to provide error handling.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph>メソッドは、情報として見なす必要があります、プロバイダーは、エラー処理を提供するオブザーバーを予期しない必要があります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">次の例の実装を提供する、<ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph>緯度/経度追跡アプリケーション内のメソッドです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The method simply reports that data is currently unavailable; it does not make use of the <ph id="ph1">&lt;xref:System.Exception&gt;</ph> object passed to it as a parameter.</source>
          <target state="translated">メソッドが単にデータが現在使用できないことを示してください。言えませんの使用、<ph id="ph1">&lt;xref:System.Exception&gt;</ph>をパラメーターとして、それに渡されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">使用例を参照してください、<ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph>コード例全体についてのトピックです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnNext(`0)">
          <source>The current notification information.</source>
          <target state="translated">現在の通知情報。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnNext(`0)">
          <source>Provides the observer with new data.</source>
          <target state="translated">新しいデータをオブザーバーに提供します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>After an observer has called a provider's <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method, the provider calls the observer's <ph id="ph2">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method to provide notifications.</source>
          <target state="translated">オブザーバーには、プロバイダーが呼び出された後に<ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph>メソッド、プロバイダーはオブザーバーの<ph id="ph2">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph>メソッド、通知を提供します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">次の例の実装を提供する、<ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph>緯度/経度追跡アプリケーション内のメソッドです。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">使用例を参照してください、<ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph>コード例全体についてのトピックです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>