<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Nullable`1.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52d5b9220d8b4b5f94e9ef38c32c3cb9e2d9476b3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d5b9220d8b4b5f94e9ef38c32c3cb9e2d9476b3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The underlying value type of the <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> generic type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> ジェネリック型の基になる値型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Nullable`1">
          <source>Represents a value type that can be assigned <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> を割り当て可能な値型を表します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>A type is said to be nullable if it can be assigned a value or can be assigned <ph id="ph1">`null`</ph>, which means the type has no value whatsoever.</source>
          <target state="translated">型が値を割り当てることができるか、または割り当てることができる場合は null 許容にすると言われます<ph id="ph1">`null`</ph>、つまり、型にします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>By default, all reference types, such as <ph id="ph1">&lt;xref:System.String&gt;</ph>, are nullable, but all value types, such as <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, are not.</source>
          <target state="translated">既定では、参照型はすべてなど<ph id="ph1">&lt;xref:System.String&gt;</ph>は、null 値がすべての値などの型、 <ph id="ph2">&lt;xref:System.Int32&gt;</ph>、されません。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>In C# and Visual Basic, you mark a value type as nullable by using the <ph id="ph1">`?`</ph> notation after the value type.</source>
          <target state="translated">C# および Visual Basic の場合でを使用して null 値許容と値の型をマークする、<ph id="ph1">`?`</ph>値型の後に表記されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>For example, <ph id="ph1">`int?`</ph> in C# or <ph id="ph2">`Integer?`</ph> in Visual Basic declares an integer value type that can be assigned <ph id="ph3">`null`</ph>.</source>
          <target state="translated">たとえば、 <ph id="ph1">`int?`</ph> (C#) または<ph id="ph2">`Integer?`</ph>Visual Basic で割り当てることのできる整数値の型を宣言<ph id="ph3">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure supports using only a value type as a nullable type because reference types are nullable by design.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>参照型は仕様による null 許容であるために、null 許容型として値の型のみを使用してサポートを構成します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> class provides complementary support for the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable&gt;</ph>補完的なサポートを提供するクラス、<ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph>構造体。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The <ph id="ph1">&lt;xref:System.Nullable&gt;</ph> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable&gt;</ph>クラスは、null 許容型の基になる型を取得をサポートし、null 許容型の型を基になる値のペアの比較と等しいかどうかの操作が汎用の比較と等しいかどうかの操作をサポートしません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Fundamental Properties</source>
          <target state="translated">基本的なプロパティ</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The two fundamental members of the <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure are the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> properties.</source>
          <target state="translated">2 つの基本的なメンバー、<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>構造体は、<ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property for a <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object is <ph id="ph3">`true`</ph>, the value of the object can be accessed with the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph>オブジェクトが<ph id="ph3">`true`</ph>、オブジェクトの値をアクセスするのには、<ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the value of the object is undefined and an attempt to access the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property throws an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph>プロパティは<ph id="ph2">`false`</ph>、オブジェクトの値が定義されていないとアクセスを試みると、<ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>プロパティがスローされます、<ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Boxing and Unboxing</source>
          <target state="translated">ボックス化とボックス化解除</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object, not the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object itself.</source>
          <target state="translated">共通言語ランタイムの基になる値のボックスを自動的に null 許容型をボックス化するときに、<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>オブジェクトは、<ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph>オブジェクト自体です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>That is, if the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the contents of the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property is boxed.</source>
          <target state="translated">つまり場合、<ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph>プロパティは<ph id="ph2">`true`</ph>の内容、<ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>プロパティのボックス化されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When the underlying value of a nullable type is unboxed, the common language runtime creates a new <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> structure initialized to the underlying value.</source>
          <target state="translated">共通言語ランタイムが新たに作成 null 許容型の基になる値がボックス化された<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>構造体の基になる値に初期化します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>If the <ph id="ph1">`HasValue`</ph> property of a nullable type is <ph id="ph2">`false`</ph>, the result of a boxing operation is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">場合、 <ph id="ph1">`HasValue`</ph> null 許容型のプロパティが<ph id="ph2">`false`</ph>、ボックス化操作の結果は<ph id="ph3">`null`</ph>します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Consequently, if a boxed nullable type is passed to a method that expects an object argument, that method must be prepared to handle the case where the argument is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">その結果、ボックス化変換された null 許容型がオブジェクト引数を必要とするメソッドに渡される場合は、そのメソッドに準備しなければなりません引数がケースを処理する<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>When <ph id="ph1">`null`</ph> is unboxed into a nullable type, the common language runtime creates a new <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure and initializes its <ph id="ph3">`HasValue`</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">ときに<ph id="ph1">`null`</ph>が null 許容型にボックス化解除、共通言語ランタイムを作成、新しい<ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph>構造体を初期化します、<ph id="ph3">`HasValue`</ph>プロパティを<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source><ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> and Windows Runtime Components</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> Windows ランタイム コンポーネントと</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph>, you can include a <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> type as a member of a structure exported in a WinMD library.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph>を含めることができます、 <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> WinMD ライブラリにエクスポートされた構造体のメンバーとしての型。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>Previously, this was not supported.</source>
          <target state="translated">以前は、これがサポートされていません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The following code example defines three rows of a table in the Microsoft Pubs sample database.</source>
          <target state="translated">次のコード例は、Microsoft Pubs サンプル データベース内のテーブルの 3 つの行を定義します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Nullable`1">
          <source>The table contains two columns that are not nullable and two columns that are nullable.</source>
          <target state="translated">テーブルには、null 許容ではない 2 つの列と null 許容である 2 つの列が含まれています。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.#ctor(`0)">
          <source>A value type.</source>
          <target state="translated">値型。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.#ctor(`0)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure to the specified value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 構造体の新しいインスタンスを、指定の値に初期化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.#ctor(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%2A&gt;</ph> constructor initializes the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of the new <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> object to <ph id="ph4">`true`</ph>, and the <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property to the value of the <ph id="ph6">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%2A&gt;</ph>コンス トラクターの初期化、<ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph>新しいプロパティ<ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph>オブジェクトを<ph id="ph4">`true`</ph>、および<ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>プロパティの値を<ph id="ph6">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>An object.</source>
          <target state="translated">オブジェクト。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>Indicates whether the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトが指定されたオブジェクトと等しいかどうかを示します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="other" /&gt;</ph> parameter is equal to the current <ph id="ph3">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="other" /&gt;</ph> パラメーターが現在の <ph id="ph3">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトと等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>This table describes how equality is defined for the compared values:</source>
          <target state="translated">比較した値が等しいかどうかを判断する基準については、次の表を参照してください。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>説明</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="true" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph7">&lt;see langword="false" /&gt;</ph>, and the <ph id="ph8">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph9">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="true" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> プロパティが <ph id="ph7">&lt;see langword="false" /&gt;</ph> で、<ph id="ph8">&lt;paramref name="other" /&gt;</ph> パラメーターが <ph id="ph9">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>That is, two null values are equal by definition.</source>
          <target state="translated">つまり、定義上は 2 つの null 値が等価です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, and the value returned by the <ph id="ph3">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is equal to the <ph id="ph4">&lt;paramref name="other" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> プロパティが <ph id="ph2">&lt;see langword="true" /&gt;</ph> で、<ph id="ph3">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> プロパティによって返される値が <ph id="ph4">&lt;paramref name="other" /&gt;</ph> パラメーターと等価です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="false" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph7">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph8">&lt;see langword="true" /&gt;</ph>, and the <ph id="ph9">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph10">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="false" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 現在の <ph id="ph7">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 構造体の <ph id="ph6">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> プロパティが <ph id="ph8">&lt;see langword="true" /&gt;</ph> で、<ph id="ph9">&lt;paramref name="other" /&gt;</ph> パラメーターが <ph id="ph10">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph3">&lt;see langword="false" /&gt;</ph>, and the <ph id="ph4">&lt;paramref name="other" /&gt;</ph> parameter is not <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> 構造体の <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> プロパティが <ph id="ph3">&lt;see langword="false" /&gt;</ph> で、<ph id="ph4">&lt;paramref name="other" /&gt;</ph> パラメーターが <ph id="ph5">&lt;see langword="null" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property for the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> structure is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, and the value returned by the <ph id="ph4">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is not equal to the <ph id="ph5">&lt;paramref name="other" /&gt;</ph> parameter.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> 構造体の <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> プロパティが <ph id="ph3">&lt;see langword="true" /&gt;</ph> で、<ph id="ph4">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> プロパティによって返される値が <ph id="ph5">&lt;paramref name="other" /&gt;</ph> パラメーターと等価ではありません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of the current <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> structure is <ph id="ph3">`true`</ph> and the <ph id="ph4">`other`</ph> argument is not <ph id="ph5">`null`</ph>, equality is determined by passing the <ph id="ph6">`other`</ph> parameter to the <ph id="ph7">`Equals`</ph> method of the underlying value of the current <ph id="ph8">&lt;xref:System.Nullable%601&gt;</ph> structure.</source>
          <target state="translated">場合、 <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> 、現在のプロパティ<ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph>構造体は、<ph id="ph3">`true`</ph>と<ph id="ph4">`other`</ph>引数ではありません<ph id="ph5">`null`</ph>、等しいかどうかは渡すことによって決定されます、<ph id="ph6">`other`</ph>パラメーターを<ph id="ph7">`Equals`</ph>メソッド、現在の基になる値の<ph id="ph8">&lt;xref:System.Nullable%601&gt;</ph>構造体。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.Equals(System.Object)">
          <source>The following code example determines whether an object and a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object are equal to the current <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object.</source>
          <target state="translated">次のコード例、およびオブジェクトかどうかを決定<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>オブジェクトが現在等しい<ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetHashCode">
          <source>Retrieves the hash code of the object returned by the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> プロパティから返されるオブジェクトのハッシュ コードを取得します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetHashCode">
          <source>The hash code of the object returned by the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, or zero if the <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> プロパティが <ph id="ph3">&lt;see langword="true" /&gt;</ph> の場合は <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> プロパティから返されるオブジェクトのハッシュ コード。<ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> プロパティが <ph id="ph5">&lt;see langword="false" /&gt;</ph> の場合はゼロ (0)。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Nullable`1">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or a default value.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトの値、または既定値を取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or the object's default value.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトの値、またはこのオブジェクトの既定値を取得します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the  <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, the default value of the current <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> プロパティが <ph id="ph3">&lt;see langword="true" /&gt;</ph> の場合は <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> プロパティの値。それ以外の場合は現在の <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトの既定値。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The type of the default value is the type argument of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, and the value of the default value consists solely of binary zeroes.</source>
          <target state="translated">既定値の型は、現在の <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトの型引数です。既定値の値は、バイナリ ゼロだけで構成されます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> method returns a value even if the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph3">`false`</ph> (unlike the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property, which throws an exception).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph>いなくても、値を返します、<ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph>プロパティは<ph id="ph3">`false`</ph>(とは異なり、<ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>プロパティで、例外がスローされます)。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault">
          <source>The following code example retrieves the value of a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object if that value is defined; otherwise, it retrieves the default value or a specific default value.</source>
          <target state="translated">次のコード例の値を取得する、<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>オブジェクトの場合はその値は、定義済みです。 それ以外の場合は、既定値または特定の既定値を取得します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>A value to return if the <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> プロパティが <ph id="ph2">&lt;see langword="false" /&gt;</ph> の場合に返す値。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>Retrieves the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object, or the specified default value.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトの値、または指定した既定値を取得します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, the <ph id="ph4">&lt;paramref name="defaultValue" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> プロパティが <ph id="ph3">&lt;see langword="true" /&gt;</ph> の場合は <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> プロパティの値。それ以外の場合は <ph id="ph4">&lt;paramref name="defaultValue" /&gt;</ph> パラメーター。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> method returns a value even if the <ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph3">`false`</ph> (unlike the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property, which throws an exception).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph>いなくても、値を返します、<ph id="ph2">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph>プロパティは<ph id="ph3">`false`</ph>(とは異なり、<ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>プロパティで、例外がスローされます)。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.GetValueOrDefault(`0)">
          <source>The following code example retrieves the value of a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object if that value is defined; otherwise, it retrieves the default value or a specific default value.</source>
          <target state="translated">次のコード例の値を取得する、<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>オブジェクトの場合はその値は、定義済みです。 それ以外の場合は、既定値または特定の既定値を取得します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.HasValue">
          <source>Gets a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has a valid value of its underlying type.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトに、基になる型の有効値があるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has a value; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the current <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object has no value.</source>
          <target state="translated">現在の <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトに値がある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。現在の <ph id="ph4">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトに値がない場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>If the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the value of the current <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> object can be accessed with the <ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph>プロパティは<ph id="ph2">`true`</ph>、現在の値<ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph>オブジェクトをアクセスするのには、<ph id="ph4">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>Otherwise, attempting to access its value throws an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">それ以外の場合、その値がスローされますにアクセスしよう、<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>例外。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.HasValue">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of a <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> object to determine whether it should display the object's <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or its <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> property.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph>のプロパティ、<ph id="ph2">`Nullable&lt;Integer&gt;`</ph>オブジェクトの表示するかどうかを決定する<ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>プロパティまたはその<ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>A nullable value.</source>
          <target state="translated">null 値が許容される値。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> instance to its underlying value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> インスタンスからその基になる値への明示的な変換を定義します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property for the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> パラメーターの <ph id="ph2">&lt;paramref name="value" /&gt;</ph> プロパティの値。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>This operator supports the explicit conversion of the current <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> instance to type <ph id="ph2">`T`</ph>, the type of <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>.</source>
          <target state="translated">この演算子は、現在の明示的な変換<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>型にインスタンス<ph id="ph2">`T`</ph>の型<ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The syntax for such explicit conversions is language-dependent.</source>
          <target state="translated">このような明示的な変換の構文は、言語によって異なります。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>You may also be able to perform the conversion by calling the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">呼び出して変換を実行することもできます、<ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Nullable%601.Value?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">この演算子を同等の方法は、します。 <ph id="ph1">&lt;xref:System.Nullable%601.Value?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.op_Explicit%2A&gt;</ph> operator enables code such as the following, which converts a <ph id="ph2">`Nullable(Of Int32)`</ph> value to an <ph id="ph3">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable%601.op_Explicit%2A&gt;</ph>演算子により、変換すると、次のようなコード、<ph id="ph2">`Nullable(Of Int32)`</ph>値を<ph id="ph3">&lt;xref:System.Int32&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>A value type.</source>
          <target state="translated">値型。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object initialized to a specified value.</source>
          <target state="translated">指定の値に初期化された新しい <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object whose <ph id="ph2">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> property is initialized with the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="value" /&gt;</ph> パラメーターで <ph id="ph2">&lt;see cref="P:System.Nullable`1.Value" /&gt;</ph> プロパティを初期化する <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>If the <ph id="ph1">`value`</ph> parameter is not <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property of the new <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> value is initialized to the <ph id="ph5">`value`</ph> parameter and the <ph id="ph6">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is initialized to <ph id="ph7">`true`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">`value`</ph>パラメーターではありません<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>新しいプロパティ<ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph>値に初期化される、<ph id="ph5">`value`</ph>パラメーターおよび<ph id="ph6">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph>プロパティに初期化<ph id="ph7">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>If the <ph id="ph1">`value`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property of the new <ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph> value is initialized to the default value, which is the value that is all binary zeroes, and the <ph id="ph5">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is initialized to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">場合、<ph id="ph1">`value`</ph>パラメーターは<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>新しいプロパティ<ph id="ph4">&lt;xref:System.Nullable%601&gt;</ph>値はすべてバイナリ ゼロである値、既定値に初期化されると、<ph id="ph5">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph>にプロパティを初期化<ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">この演算子を同等の方法は、します。 <ph id="ph1">&lt;xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.ToString">
          <source>Returns the text representation of the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトの値のテキスト形式を返します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Nullable`1.ToString">
          <source>The text representation of the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>, or an empty string ("") if the <ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> プロパティが <ph id="ph3">&lt;see langword="true" /&gt;</ph> の場合は、現在の <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトの値のテキスト形式。<ph id="ph4">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> プロパティが <ph id="ph5">&lt;see langword="false" /&gt;</ph> の場合は空の文字列 ("")。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Nullable%601.ToString%2A&gt;</ph> property returns the string yielded by calling the <ph id="ph2">`ToString`</ph> property of the object returned by the <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Nullable%601.ToString%2A&gt;</ph>プロパティを呼び出すことによって得られる文字列を返します、<ph id="ph2">`ToString`</ph>によって返されるオブジェクトのプロパティ、<ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Nullable`1.ToString">
          <source>The following code example displays the value of the current <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> object.</source>
          <target state="translated">次のコード例には、現在の値が表示されます。<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.Value">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if it has been assigned a valid underlying value.</source>
          <target state="translated">有効な基になる値が割り当てられているかどうか示す、<ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> の現在の値を取得します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> object if the <ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> プロパティが <ph id="ph3">&lt;see langword="true" /&gt;</ph> の場合は、現在の <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> オブジェクトの値。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>An exception is thrown if the <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> プロパティが <ph id="ph2">&lt;see langword="false" /&gt;</ph> の場合は、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>If a value of type <ph id="ph1">`T`</ph> has not been assigned to the <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> object, you can compare it to <ph id="ph3">`null`</ph> and retrieve its <ph id="ph4">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property, but you cannot access its <ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or call its other members.</source>
          <target state="translated">値型の場合<ph id="ph1">`T`</ph>が割り当てられていません、<ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph>オブジェクトを比較することができます<ph id="ph3">`null`</ph>を取得し、<ph id="ph4">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph>がプロパティにアクセスできないその<ph id="ph5">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>プロパティまたは呼び出しその他のメンバーです。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Nullable`1.Value">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property of a <ph id="ph2">`Nullable&lt;Integer&gt;`</ph> object to determine whether it should display the object's <ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property or its <ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph> property.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph>のプロパティ、<ph id="ph2">`Nullable&lt;Integer&gt;`</ph>オブジェクトの表示するかどうかを決定する<ph id="ph3">&lt;xref:System.Nullable%601.Value%2A&gt;</ph>プロパティまたはその<ph id="ph4">&lt;xref:System.Nullable%601.GetValueOrDefault%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Nullable`1.Value">
          <source>The <ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Nullable`1.HasValue" /&gt;</ph> プロパティが <ph id="ph2">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>