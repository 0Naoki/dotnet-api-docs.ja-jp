<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Tuple`4.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5361b517b3fa89e94bae2bd871dbff97540883363.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">361b517b3fa89e94bae2bd871dbff97540883363</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The type of the tuple's first component.</source>
          <target state="translated">組の 1 番目のコンポーネントの型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The type of the tuple's second component.</source>
          <target state="translated">組の 2 番目のコンポーネントの型。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The type of the tuple's third component.</source>
          <target state="translated">組の 3 番目のコンポーネントの型。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The type of the tuple's fourth component.</source>
          <target state="translated">組の 4 番目のコンポーネントの型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Tuple`4">
          <source>Represents a 4-tuple, or quadruple.</source>
          <target state="translated">4 つ組、すなわちクオドループルを表します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>A tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">組は、特定の数と一連の値を持つデータ構造です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> class represents a 4-tuple, or quadruple, which is a tuple that has four components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>クラスを表します。 4 つ組、または 4 倍、4 つのコンポーネントが含まれる組です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> object by calling either the <ph id="ph2">&lt;xref:System.Tuple%604.%23ctor%2A&gt;</ph> constructor or the static <ph id="ph3">&lt;xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">インスタンス化することができます、<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>を呼び出して、オブジェクト、<ph id="ph2">&lt;xref:System.Tuple%604.%23ctor%2A&gt;</ph>コンス トラクターまたは静的な<ph id="ph3">&lt;xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>You can retrieve the value of the tuple's components by using the read-only <ph id="ph1">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> instance properties.</source>
          <target state="translated">組のコンポーネントの値を取得するには、読み取り専用を使用して<ph id="ph1">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph>インスタンス プロパティです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>Tuples are commonly used in four different ways:</source>
          <target state="translated">組は、4 つの方法でよく使用されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>To represent a single set of data.</source>
          <target state="translated">単一のデータのセットを表します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>For example, a tuple can represent a database record, and its components can represent individual fields of the record.</source>
          <target state="translated">たとえば、組は、データベースのレコードを表すことができ、そのコンポーネントは、レコードの個別のフィールドを表すことができます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>To provide easy access to, and manipulation of, a data set.</source>
          <target state="translated">簡単にアクセスしたり、操作、データ セットを提供します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects that contain the names of baseball pitchers, the number of innings they pitched, and the number of earned runs (runs that scored without fielding errors), and hits that they gave up.</source>
          <target state="translated">次の例の配列を定義する<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>野球ピッチャー、安打の数および達成実行 (エラーを処理せずスコア付けされたを実行) の数の名前が格納されていると、降参をヒットします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates each pitcher's earned run average (the average number of runs given up in a nine-inning game), and the average number of hits given up per inning.</source>
          <target state="translated">渡されたが、配列、<ph id="ph1">`ComputeStatistics`</ph>メソッドで、各カップの形の平均 (9 回ゲームで指定された実行の平均の数)、および指定された 1 回あたりのヒットの数の平均値を計算します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>The method also uses these two averages to compute a hypothetical effectiveness average.</source>
          <target state="translated">メソッドは、仮想的な効果の平均を計算にもこれら 2 つの平均を使用します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>To return multiple values from a method without the use of <ph id="ph1">`out`</ph> parameters (in C#) or <ph id="ph2">`ByRef`</ph> parameters (in Visual Basic).</source>
          <target state="translated">使用せず、メソッドから複数の値を返す<ph id="ph1">`out`</ph>パラメーター (c#) または<ph id="ph2">`ByRef`</ph>パラメーター (Visual Basic の場合)。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>For example, the previous example returns its computed statistics, along with the name of the pitcher, in an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects.</source>
          <target state="translated">たとえば、前の例は、の配列で、カップの形の名前と共に、計算された統計情報を返します<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>To pass multiple values to a method through a single parameter.</source>
          <target state="translated">メソッドに渡される複数の値、1 つのパラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>For example, the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph>メソッドには、スレッドが起動時に実行される方法を 1 つの値を提供できる 1 つのパラメーターです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`4">
          <source>If you supply a <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> object as the method argument, you can supply the thread’s startup routine with four items of data.</source>
          <target state="translated">指定した場合、<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>オブジェクト、メソッド引数として、データの 4 つの項目を含む、スレッドのスタートアップ ルーチンを指定することができます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>The value of the tuple's first component.</source>
          <target state="translated">組の 1 番目のコンポーネントの値。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>The value of the tuple's second component.</source>
          <target state="translated">組の 2 番目のコンポーネントの値。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>The value of the tuple's third component.</source>
          <target state="translated">組の 3 番目のコンポーネントの値。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>The value of the tuple's fourth component</source>
          <target state="translated">組の 4 番目のコンポーネントの値。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>You can also use the static <ph id="ph1">&lt;xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 4-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated">静的なを使用することもできます。<ph id="ph1">&lt;xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType&gt;</ph>メソッドを明示的にそのコンポーネントの種類を指定せずに、4 タプル オブジェクトをインスタンス化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 4-tuple whose components are of type <ph id="ph2">&lt;xref:System.String&gt;</ph>, <ph id="ph3">&lt;xref:System.Double&gt;</ph>, <ph id="ph4">&lt;xref:System.Double&gt;</ph>, and <ph id="ph5">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">次の例では、 <ph id="ph1">&lt;xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType&gt;</ph> 4 タプルの要素を型のインスタンスを作成するメソッド<ph id="ph2">&lt;xref:System.String&gt;</ph>、 <ph id="ph3">&lt;xref:System.Double&gt;</ph>、 <ph id="ph4">&lt;xref:System.Double&gt;</ph>、および<ph id="ph5">&lt;xref:System.Double&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
          <source>This is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%604.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">これは、次の呼び出しに、<ph id="ph1">&lt;xref:System.Tuple%604.%23ctor%2A&gt;</ph>クラスのコンス トラクターです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">このインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトが、指定されたオブジェクトと等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のインスタンスが指定したオブジェクトと等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> parameter is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated"><ph id="ph1">`obj`</ph>パラメーターは、次の条件下で現在のインスタンスと等しいと見なされます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>It is a <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>Its four components are of the same types as the current instance.</source>
          <target state="translated">その次の 4 つのコンポーネントでは、現在のインスタンスと同じ型です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>Its four components are equal to those of the current instance.</source>
          <target state="translated">4 つのコンポーネントは、現在のインスタンスのものと同じです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>Equality is determined by the default object equality comparer for each component.</source>
          <target state="translated">等しいかどうかは、各コンポーネントの既定のオブジェクトの等値比較子によって判断されます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects that provide data on temperatures at three times during a particular day.</source>
          <target state="translated">次の例の配列を定義する<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>を特定の日に 3 回温度に関するデータを提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.Equals%28System.Object%29&gt;</ph> method is called to compare every <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object with every other <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.Equals%28System.Object%29&gt;</ph>を比較するメソッドが呼び出された各<ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph>以外のすべてのオブジェクト<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.Equals(System.Object)">
          <source>The output illustrates that the <ph id="ph1">&lt;xref:System.Tuple%604.Equals%28System.Object%29&gt;</ph> method returns <ph id="ph2">`true`</ph> only when all four components of the <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects have equal values.</source>
          <target state="translated">出力、<ph id="ph1">&lt;xref:System.Tuple%604.Equals%28System.Object%29&gt;</ph>メソッドを返します。<ph id="ph2">`true`</ph>される場合にのみの 4 つすべてのコンポーネント、<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>オブジェクトが同じ値を持ちます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトのハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 ビット符号付き整数ハッシュ コード。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.Item1">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's first component.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトの 1 番目のコンポーネントの値を取得します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item1">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's first component.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトの 1 番目のコンポーネントの値。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item1">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">型を動的に決定することができます、<ph id="ph1">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>コンポーネントを 2 つの方法のいずれかで。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item1">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph> property.</source>
          <target state="translated">呼び出して、<ph id="ph1">`GetType`</ph>メソッドによって返される値を<ph id="ph2">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item1">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the first element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">取得することによって、<ph id="ph1">&lt;xref:System.Type&gt;</ph>を表すオブジェクト、<ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph>オブジェクト、および、によって返される配列から最初の要素を取得するその<ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item1">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects whose components contain the name of a city, a month of the year, and the average high and low temperatures for that month.</source>
          <target state="translated">次の例の配列を定義する<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>コンポーネントが含まれる、市区町村の名前、その月、年と高値と安値の平均気温の月を含むオブジェクト。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item1">
          <source>It then retrieves and displays the value of each component.</source>
          <target state="translated">取得し、各コンポーネントの値を表示します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.Item2">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's second component.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトの 2 番目のコンポーネントの値を取得します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item2">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's second component.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトの 2 番目のコンポーネントの値。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item2">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">型を動的に決定することができます、<ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>コンポーネントを 2 つの方法のいずれかで。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item2">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">呼び出して、<ph id="ph1">`GetType`</ph>メソッドによって返される値を<ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item2">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">取得することによって、<ph id="ph1">&lt;xref:System.Type&gt;</ph>を表すオブジェクト、<ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph>オブジェクト、およびによって返される配列から 2 番目の要素を取得するその<ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item2">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects whose components contain the name of a city, a month of the year, and the average high and low temperatures for that month.</source>
          <target state="translated">次の例の配列を定義する<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>コンポーネントが含まれる、市区町村の名前、その月、年と高値と安値の平均気温の月を含むオブジェクト。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item2">
          <source>It then retrieves and displays the value of each component.</source>
          <target state="translated">取得し、各コンポーネントの値を表示します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.Item3">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's third component.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトの 3 番目のコンポーネントの値を取得します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item3">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's third component.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトの 3 番目のコンポーネントの値。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item3">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">型を動的に決定することができます、<ph id="ph1">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>コンポーネントを 2 つの方法のいずれかで。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item3">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph> property.</source>
          <target state="translated">呼び出して、<ph id="ph1">`GetType`</ph>メソッドによって返される値を<ph id="ph2">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item3">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the third element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">取得することによって、<ph id="ph1">&lt;xref:System.Type&gt;</ph>を表すオブジェクト、<ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph>オブジェクト、およびによって返される配列から 3 番目の要素を取得するその<ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item3">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects whose components contain the name of a city, a month of the year, and the average high and low temperatures for that month.</source>
          <target state="translated">次の例の配列を定義する<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>コンポーネントが含まれる、市区町村の名前、その月、年と高値と安値の平均気温の月を含むオブジェクト。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item3">
          <source>It then retrieves and displays the value of each component.</source>
          <target state="translated">取得し、各コンポーネントの値を表示します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.Item4">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's fourth component.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトの 4 番目のコンポーネントの値を取得します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item4">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object's fourth component.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトの 4 番目のコンポーネントの値。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item4">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">型を動的に決定することができます、<ph id="ph1">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph>コンポーネントを 2 つの方法のいずれかで。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item4">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> property.</source>
          <target state="translated">呼び出して、<ph id="ph1">`GetType`</ph>メソッドによって返される値を<ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item4">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the fourth element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">取得することによって、<ph id="ph1">&lt;xref:System.Type&gt;</ph>を表すオブジェクト、<ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph>オブジェクト、およびによって返される配列から 4 番目の要素を取得するその<ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item4">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects whose components contain the name of a city, a month of the year, and the average high and low temperatures for that month.</source>
          <target state="translated">次の例の配列を定義する<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>コンポーネントが含まれる、市区町村の名前、その月、年と高値と安値の平均気温の月を含むオブジェクト。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.Item4">
          <source>It then retrieves and displays the value of each component.</source>
          <target state="translated">取得し、各コンポーネントの値を表示します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">現在のインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">比較用のカスタムの規則を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">指定された比較子を使用して現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトと指定されたオブジェクトを比較し、並べ替え順序において、現在のオブジェクトの位置が指定されたオブジェクトの前になるか、後ろになるか、同じになるかを示す整数を返します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">並べ替え順序における、このインスタンスと <ph id="ph1">&lt;paramref name="other" /&gt;</ph> の相対位置を示す符号付き整数値 (次の表を参照)。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 値</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>説明</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 負の整数</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスの位置が <ph id="ph3">&lt;paramref name="other" /&gt;</ph> よりも前です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスと <ph id="ph3">&lt;paramref name="other" /&gt;</ph> の位置は、並べ替え順序において同じです。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 正の整数</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスの位置は <ph id="ph3">&lt;paramref name="other" /&gt;</ph> よりも後ろです。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Although this method can be called directly, it is most commonly called by collection sorting methods that include <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection.</source>
          <target state="translated">並べ替え方法を含むコレクションで呼び出された最もよくはこのメソッドは、直接呼び出すことができます、<ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph>パラメーター コレクションのメンバーの順序付けをします。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>For example, it is called by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">たとえば、メソッドによって呼び出されます、<ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph>のメソッド、<ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>を使用してインスタンス化されるオブジェクト、<ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29&gt;</ph>並べ替え操作で使用するためのメソッドです。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">これはありません、比較の主な目的は 2 つのオブジェクトが等しいかどうかを判断するときに使用する必要があります。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> method.</source>
          <target state="translated">2 つのオブジェクトが等しいかどうかを判断するを呼び出して、<ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects that contain statistical data about baseball pitchers.</source>
          <target state="translated">次の例の配列を作成する<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>野球ピッチャーに関する統計データを格納するオブジェクト。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The data items include the name of the pitcher, the number of innings pitched, the pitcher's earned run average (the average number of runs a pitcher allows per game), and the number of hits the pitcher has given up.</source>
          <target state="translated">イニングの数は、カップの形の平均 (1 ゲームの実行の平均の数)、および、カップの形が指定されたビューの数、データ項目には、カップの形の名前が含まれます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The example displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%604.ToString%2A&gt;</ph> to display the value of each tuple in sorted order.</source>
          <target state="translated">例では、並べ替えられていない配列内の各組のコンポーネントを表示、配列を並べ替え、を呼び出して<ph id="ph1">&lt;xref:System.Tuple%604.ToString%2A&gt;</ph>並べ替え順のそれぞれの組の値を表示します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To sort the array, the example defines a generic <ph id="ph1">`PitcherComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interface and sorts the <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects in ascending order by the value of their third component (the earned run average) rather than their first component.</source>
          <target state="translated">ジェネリック型を定義している例では、並べ替えるには、配列、<ph id="ph1">`PitcherComparer`</ph>を実装するクラス、<ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph>インターフェイスと並べ替え、<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>の最初ではなく、3 番目のコンポーネント (達成実行の平均値) の値で昇順にオブジェクトコンポーネント。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29&gt;</ph> method.</source>
          <target state="translated">例では、直接呼び出しませんなお、<ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method for each element in the array.</source>
          <target state="translated">このメソッドはによって暗黙的に呼び出されます、<ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph>配列内の各要素のメソッドです。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> は <ph id="ph2">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトではありません。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">このインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">2 つのオブジェクトが等しいかどうかの評価に使用するメソッドを定義するオブジェクト。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">指定された比較メソッドに基づいて、現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトが指定したオブジェクトと等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のインスタンスが指定したオブジェクトと等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation is called only if <ph id="ph2">`other`</ph> is not <ph id="ph3">`null`</ph>, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <ph id="ph4">&lt;xref:System.Tuple%604&gt;</ph> object whose components are of the same types as the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph>実装が呼び出される場合にのみ<ph id="ph2">`other`</ph>は<ph id="ph3">`null`</ph>、キャスト (c#) またはに (Visual Basic) の変換が正常にすることができるかどうかと、<ph id="ph4">&lt;xref:System.Tuple%604&gt;</ph>コンポーネントが含まれるは、現在のインスタンスと同じ型のオブジェクト。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> method first passes the <ph id="ph2">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph> values of the <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects to be compared to the <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph>メソッドの最初のパス、<ph id="ph2">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>の値、<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>と比較するオブジェクト、<ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph>, the method is called again and passed the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects.</source>
          <target state="translated">このメソッドの呼び出しが返された場合<ph id="ph1">`true`</ph>、メソッドが再度呼び出され、渡された、 <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> 、2 つの値<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph> again, the method is called a third time and passed the <ph id="ph2">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects.</source>
          <target state="translated">このメソッドの呼び出しが返された場合<ph id="ph1">`true`</ph>もう一度、メソッドが 3 時間と、渡された、 <ph id="ph2">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph> 、2 つの値<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph> again, the method is called for the fourth and final time and passed the <ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects.</source>
          <target state="translated">このメソッドの呼び出しが返された場合<ph id="ph1">`true`</ph>メソッドがもう一度、4 番目および最後の時間で呼び出され、渡された、 <ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> 、2 つの値<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example defines an <ph id="ph1">`Item3And4Comparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> interface and changes the way in which <ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph> objects are evaluated for equality.</source>
          <target state="translated">次の例では定義、<ph id="ph1">`Item3And4Comparer`</ph>を実装するクラス、<ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph>インターフェイスし、方法を変更<ph id="ph3">&lt;xref:System.Tuple%604&gt;</ph>オブジェクトが等しいかどうかを評価します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The method always returns <ph id="ph1">`true`</ph> when it is passed the <ph id="ph2">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property values of two <ph id="ph4">&lt;xref:System.Tuple%604&gt;</ph> objects, and it calls the <ph id="ph5">`obj.Equals`</ph> method to evaluate their <ph id="ph6">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph> property values.</source>
          <target state="translated">メソッドは常に返します<ph id="ph1">`true`</ph>渡されたときに、<ph id="ph2">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>2 つのプロパティ値<ph id="ph4">&lt;xref:System.Tuple%604&gt;</ph>オブジェクト、およびそれを呼び出す、<ph id="ph5">`obj.Equals`</ph>を評価するメソッド、<ph id="ph6">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>プロパティの値。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It this method call returns true, it also calls the <ph id="ph1">`obj.Equals`</ph> method to evaluate the tuples' <ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> property values.</source>
          <target state="translated">このメソッドの呼び出し true が返されますも呼び出して、<ph id="ph1">`obj.Equals`</ph>組を評価するメソッド<ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph>プロパティの値。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>As a result, the method tests for equality based only on the values of the <ph id="ph1">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> properties.</source>
          <target state="translated">メソッドの値のみに基づいて等価をテスト結果として、<ph id="ph1">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The output illustrates the result for a data set of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects that record the name of a U.S. city, the month of a year, and the average high and low temperature for that month.</source>
          <target state="translated">出力のデータ セットの結果を示しています。<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>その月、年と高値と安値の平均の気温の月の米国の都市の名前を記録するオブジェクト。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph2">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトのハッシュ コードを計算する <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> メソッドを持つオブジェクト。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object by using a specified computation method.</source>
          <target state="translated">指定した計算メソッドを使用して、現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトのハッシュ コードを計算します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 ビット符号付き整数ハッシュ コード。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The method simply wraps a call to the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">メソッドは、単にへの呼び出しをラップ、<ph id="ph1">`comparer`</ph>オブジェクトの<ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The algorithm used to compute the hash code should return the same hash code for two <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects that are considered to be equal.</source>
          <target state="translated">2 つのハッシュ コードの計算に使用するアルゴリズムが同じハッシュ コードを返す必要があります<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>同等であると見なされるオブジェクト。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">現在のインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトと指定したオブジェクトを比較して、現在のオブジェクトが、並べ替え順序において、指定したオブジェクトの前後または同じ位置のいずれにあるかを示す整数を返します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">並べ替え順序における、このインスタンスと <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> の相対位置を示す符号付き整数値 (次の表を参照)。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 値</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>説明</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 負の整数</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスの位置が <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> よりも前です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスと <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> の位置は、並べ替え順序において同じです。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 正の整数</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスの位置は <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> よりも後ろです。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>This method provides the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation for the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> class.</source>
          <target state="translated">このメソッドを提供、<ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph>の実装、<ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, to order the members of a collection.</source>
          <target state="translated">並べ替え方法などのコレクションの既定のオーバー ロードによって最もよく呼び出さは直接メソッドを呼び出すことができます、<ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>コレクションのメンバーの順序付けをします。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.System%23IComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.System%23IComparable%23CompareTo%2A&gt;</ph>並べ替え操作で使用するためのメソッドです。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">これはありません、比較の主な目的は 2 つのオブジェクトが等しいかどうかを判断するときに使用する必要があります。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%604.Equals%2A&gt;</ph> method.</source>
          <target state="translated">2 つのオブジェクトが等しいかどうかを判断するを呼び出して、<ph id="ph1">&lt;xref:System.Tuple%604.Equals%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.System%23IComparable%23CompareTo%2A&gt;</ph> method uses the default object comparer to compare each component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.System%23IComparable%23CompareTo%2A&gt;</ph>メソッドでは、既定のオブジェクトの比較子を使用して、各コンポーネントを比較します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> objects whose components consist of a baseball pitcher's name, number of innings pitched, and number of hits and earned runs given up.</source>
          <target state="translated">次の例の配列を作成する<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>野球カップの形の名前、イニング、数およびのヒット数と指定された達成実行の構成要素オブジェクト。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>It displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%604.ToString%2A&gt;</ph> to display each tuple in sorted order.</source>
          <target state="translated">並べ替え順序で配列内の各組のコンポーネントを表示、配列を並べ替え、およびを呼び出して<ph id="ph1">&lt;xref:System.Tuple%604.ToString%2A&gt;</ph>を並べ替え順序でそれぞれの組を表示します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>The output shows that the array has been sorted by name, which is the first component.</source>
          <target state="translated">出力は、最初のコンポーネントは、名前で配列が並べ替えられていることを示します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%604.System%23IComparable%23CompareTo%28System.Object%29&gt;</ph> method.</source>
          <target state="translated">例では、直接呼び出しませんなお、<ph id="ph1">&lt;xref:System.Tuple%604.System%23IComparable%23CompareTo%28System.Object%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> method for each element in the array.</source>
          <target state="translated">このメソッドはによって暗黙的に呼び出されます、<ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph>配列内の各要素のメソッドです。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> は <ph id="ph2">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトではありません。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The index of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 要素のインデックス。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> can range from 0 to 3.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> は 0 から 3 までです。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 要素の値を取得します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element at the specified position.</source>
          <target state="translated">指定した位置にある <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 要素の値。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph>プロパティは、明示的なインターフェイス実装です。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">これを呼び出すには、キャストまたは変換する必要があります、<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>オブジェクトを<ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph>インターフェイス オブジェクト。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than 3.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 より小さいか、3 を超えています。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> にある要素の数を取得します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Length">
          <source>4, the number of elements in a <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクト内の要素数、4。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph>プロパティは、明示的なインターフェイス実装です。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">これを呼び出すには、キャストまたは変換する必要があります、<ph id="ph1">&lt;xref:System.Tuple%604&gt;</ph>オブジェクトを<ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph>インターフェイス オブジェクト。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> instance.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> インスタンスの値を表す文字列を返します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Tuple`4.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Tuple`4" /&gt;</ph> オブジェクトの文字列表現。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>), where <bpt id="p5">*</bpt>Item1<ept id="p5">*</ept>, <bpt id="p6">*</bpt>Item2<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item3<ept id="p7">*</ept>, and <bpt id="p8">*</bpt>Item4<ept id="p8">*</ept> represent the values of the <ph id="ph1">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph> properties, respectively.</source>
          <target state="translated">このメソッドによって返される文字列の形式は (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>、 <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>、 <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>、 <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>) ここで、 <bpt id="p5">*</bpt>Item1<ept id="p5">*</ept>、 <bpt id="p6">*</bpt>Item2<ept id="p6">*</ept>、 <bpt id="p7">*</bpt>Item3<ept id="p7">*</ept>、および<bpt id="p8">*</bpt>Item4<ept id="p8">*</ept>の値を表す、 <ph id="ph1">&lt;xref:System.Tuple%604.Item1%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Tuple%604.Item3%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Tuple%604.Item4%2A&gt;</ph>プロパティ、それぞれします。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.ToString">
          <source>If any of the property values is <ph id="ph1">`null`</ph>, it is represented as <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">プロパティ値のいずれかが場合<ph id="ph1">`null`</ph>、として表されます<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.ToString">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Tuple%604.ToString%2A&gt;</ph> method.</source>
          <target state="translated">次の例を示しています、<ph id="ph1">&lt;xref:System.Tuple%604.ToString%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`4.ToString">
          <source>It displays the components of an array of 4-tuple objects that contain the name of a city, a month of the year, and the high and low average temperature for that month.</source>
          <target state="translated">これには、市区町村の名前、その月、年と高値と安値の平均の気温値の 1 か月を含む 4 タプル オブジェクトの配列のコンポーネントが表示されます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>