<Type Name="Tuple&lt;T1,T2,T3,T4&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c10e333e47f8a9986d4bfd66c1d085fbc098df09" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69419022" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`4&lt;T1, T2, T3, T4&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`4" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1">組の 1 番目のコンポーネントの型。</typeparam>
    <typeparam name="T2">組の 2 番目のコンポーネントの型。</typeparam>
    <typeparam name="T3">組の 3 番目のコンポーネントの型。</typeparam>
    <typeparam name="T4">組の 4 番目のコンポーネントの型。</typeparam>
    <summary>4 組 (4 つの要素で構成される組) を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 組は、特定の数と値のシーケンスを持つデータ構造です。 クラス<xref:System.Tuple%604>は4組 (4 つの要素を持つタプル) を表します。  
  
 オブジェクトを<xref:System.Tuple%604>インスタンス化するには、 <xref:System.Tuple%604.%23ctor%2A>コンストラクターまたは静的<xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType>メソッドを呼び出します。 タプルのコンポーネントの値を取得するに<xref:System.Tuple%604.Item1%2A>は、読み取り専用、 <xref:System.Tuple%604.Item2%2A>、 <xref:System.Tuple%604.Item3%2A>、および<xref:System.Tuple%604.Item4%2A>の各インスタンスプロパティを使用します。  
  
 組は、主に次の4つの方法で使用されます。  
  
-   データの1つのセットを表す場合は。 たとえば、組はデータベースレコードを表すことができ、そのコンポーネントはレコードの個々のフィールドを表すことができます。  
  
-   データセットに簡単にアクセスして操作できるようにするため。 次の例では、野球<xref:System.Tuple%604>ピッチャーの名前、イニングの数、および獲得された実行の数を含むオブジェクトの配列を定義しています (フィールディングエラーなしでスコアが付けられた実行)。 配列は`ComputeStatistics`メソッドに渡されます。このメソッドは、各水差しの獲得された実行の平均 (9 回ゲームで与えられた平均実行数) と、回ごとに与えられた平均ヒット数を計算します。 また、この2つの平均値を使用して、仮定の有効性平均を計算します。  
  
     [!code-csharp[System.Tuple\`4.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`4.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.class/vb/example1.vb#1)]  
  
-   パラメーター (でC#は) またはパラメーター (Visual Basic) を使用`ByRef`せずに、メソッドから複数の値を返す場合は。 `out` たとえば、前の例では、オブジェクトの<xref:System.Tuple%604>配列に、計算された統計が水差しの名前と共に返されます。  
  
-   1つのパラメーターを使用して複数の値をメソッドに渡す場合は。 たとえば、 <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType>メソッドには、起動時にスレッドが実行するメソッドに1つの値を指定できる1つのパラメーターがあります。 メソッドの引数と<xref:System.Tuple%604>してオブジェクトを指定する場合は、スレッドのスタートアップルーチンに4つのデータ項目を指定できます。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.#ctor(`0,`1,`2,`3)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3, 'T4&gt; : 'T1 * 'T2 * 'T3 * 'T4 -&gt; Tuple&lt;'T1, 'T2, 'T3, 'T4&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3, 'T4&gt; (item1, item2, item3, item4)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
      </Parameters>
      <Docs>
        <param name="item1">組の 1 番目のコンポーネントの値。</param>
        <param name="item2">組の 2 番目のコンポーネントの値。</param>
        <param name="item3">組の 3 番目のコンポーネントの値。</param>
        <param name="item4">組の 4 番目のコンポーネントの値。</param>
        <summary><see cref="T:System.Tuple`4" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 また、静的<xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType>メソッドを使用して、コンポーネントの型を明示的に指定しなくても、4組のオブジェクトをインスタンス化できます。 次の例では<xref:System.Tuple.Create%60%604%28%60%600%2C%60%601%2C%60%602%2C%60%603%29?displayProperty=nameWithType> 、メソッドを使用して、、、 <xref:System.Double>、および<xref:System.Double> <xref:System.Double>型<xref:System.String>のコンポーネントを持つ4タプルをインスタンス化します。  
  
 [!code-csharp[System.Tuple.Create#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#7)]
 [!code-vb[System.Tuple.Create#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#7)]  
  
 これは、 <xref:System.Tuple%604.%23ctor%2A>クラスコンストラクターへの次の呼び出しに相当します。  
  
 [!code-csharp[System.Tuple.Create#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#8)]
 [!code-vb[System.Tuple.Create#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">このインスタンスと比較するオブジェクト。</param>
        <summary>現在の <see cref="T:System.Tuple`4" /> オブジェクトが、指定されたオブジェクトと等しいかどうかを示す値を返します。</summary>
        <returns>現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `obj`パラメーターは、次の条件下で現在のインスタンスと等しいと見なされます。  
  
-   これは<xref:System.Tuple%604>オブジェクトです。  
  
-   4つのコンポーネントは、現在のインスタンスと同じ型です。  
  
-   4つのコンポーネントは、現在のインスタンスのものと同じです。 等しいかどうかは、各コンポーネントの既定のオブジェクトの等値比較子によって判断されます。  
  
   
  
## Examples  
 次の例では、特定<xref:System.Tuple%604>の日の3回に気温にデータを提供するオブジェクトの配列を定義します。 メソッド<xref:System.Tuple%604.Equals%28System.Object%29>は、すべて<xref:System.Tuple%604>のオブジェクトを他のすべての<xref:System.Tuple%604>オブジェクトと比較するために呼び出されます。 出力は、 <xref:System.Tuple%604.Equals%28System.Object%29> <xref:System.Tuple%604>オブジェクトの4つ`true`のすべてのコンポーネントの値が等しい場合にのみ、メソッドがを返すことを示しています。  
  
 [!code-csharp[System.Tuple\`4.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`4.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Tuple`4" /> オブジェクトのハッシュ コードを返します。</summary>
        <returns>32 ビット符号付き整数ハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`4.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Tuple`4" /> オブジェクトの 1 番目のコンポーネントの値を取得します。</summary>
        <value>現在の <see cref="T:System.Tuple`4" /> オブジェクトの 1 番目のコンポーネントの値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple%604.Item1%2A>コンポーネントの種類は、次の2つの方法のいずれかで動的に決定できます。  
  
-   プロパティによっ`GetType`て返される値に対してメソッドを呼び出します。 <xref:System.Tuple%604.Item1%2A>  
  
-   オブジェクトを<xref:System.Type>表すオブジェクトを取得し、その<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドによって返される配列から最初の要素を取得する。 <xref:System.Tuple%604>  
  
   
  
## Examples  
 次の例では、オブジェクト<xref:System.Tuple%604>の配列を定義しています。この配列のコンポーネントには、市の名前、月、およびその月の平均気温と最低気温が含まれています。 次に、各コンポーネントの値を取得して表示します。  
  
 [!code-csharp[System.Tuple\`4.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`4.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`4.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Tuple`4" /> オブジェクトの 2 番目のコンポーネントの値を取得します。</summary>
        <value>現在の <see cref="T:System.Tuple`4" /> オブジェクトの 2 番目のコンポーネントの値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple%604.Item2%2A>コンポーネントの種類は、次の2つの方法のいずれかで動的に決定できます。  
  
-   プロパティによっ`GetType`て返される値に対してメソッドを呼び出します。 <xref:System.Tuple%604.Item2%2A>  
  
-   オブジェクトを<xref:System.Type>表すオブジェクトを取得し、その<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドによって返される配列から2番目の要素を取得する。 <xref:System.Tuple%604>  
  
   
  
## Examples  
 次の例では、オブジェクト<xref:System.Tuple%604>の配列を定義しています。この配列のコンポーネントには、市の名前、月、およびその月の平均気温と最低気温が含まれています。 次に、各コンポーネントの値を取得して表示します。  
  
 [!code-csharp[System.Tuple\`4.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`4.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`4.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Tuple`4" /> オブジェクトの 3 番目のコンポーネントの値を取得します。</summary>
        <value>現在の <see cref="T:System.Tuple`4" /> オブジェクトの 3 番目のコンポーネントの値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple%604.Item3%2A>コンポーネントの種類は、次の2つの方法のいずれかで動的に決定できます。  
  
-   プロパティによっ`GetType`て返される値に対してメソッドを呼び出します。 <xref:System.Tuple%604.Item3%2A>  
  
-   オブジェクトを<xref:System.Type>表すオブジェクトを取得し、その<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドによって返される配列から3番目の要素を取得する。 <xref:System.Tuple%604>  
  
   
  
## Examples  
 次の例では、オブジェクト<xref:System.Tuple%604>の配列を定義しています。この配列のコンポーネントには、市の名前、月、およびその月の平均気温と最低気温が含まれています。 次に、各コンポーネントの値を取得して表示します。  
  
 [!code-csharp[System.Tuple\`4.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`4.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`4.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item4 : 'T4" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4&gt;.Item4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Tuple`4" /> オブジェクトの 4 番目のコンポーネントの値を取得します。</summary>
        <value>現在の <see cref="T:System.Tuple`4" /> オブジェクトの 4 番目のコンポーネントの値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Tuple%604.Item4%2A>コンポーネントの種類は、次の2つの方法のいずれかで動的に決定できます。  
  
-   プロパティによっ`GetType`て返される値に対してメソッドを呼び出します。 <xref:System.Tuple%604.Item4%2A>  
  
-   オブジェクトを<xref:System.Type>表すオブジェクトを取得し、その<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドによって返される配列から4番目の要素を取得する。 <xref:System.Tuple%604>  
  
   
  
## Examples  
 次の例では、オブジェクト<xref:System.Tuple%604>の配列を定義しています。この配列のコンポーネントには、市の名前、月、およびその月の平均気温と最低気温が含まれています。 次に、各コンポーネントの値を取得して表示します。  
  
 [!code-csharp[System.Tuple\`4.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`4.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">現在のインスタンスと比較するオブジェクト。</param>
        <param name="comparer">比較用のカスタムの規則を提供するオブジェクト。</param>
        <summary>指定された比較子を使用して現在の <see cref="T:System.Tuple`4" /> オブジェクトと指定されたオブジェクトを比較し、並べ替え順序において、現在のオブジェクトの位置が指定されたオブジェクトの前になるか、後ろになるか、同じになるかを示す整数を返します。</summary>
        <returns>並べ替え順序における、このインスタンスと <paramref name="other" /> の相対位置を示す符号付き整数値 (次の表を参照)。  
  
 <list type="table"><listheader><term> [値] 
 </term><description> 説明 
 </description></listheader><item><term> 負の整数 
 </term><description> このインスタンスの位置が <paramref name="other" /> よりも前です。  
  
 </description></item><item><term> 0 
 </term><description> このインスタンスと <paramref name="other" /> の位置は、並べ替え順序において同じです。  
  
 </description></item><item><term> 正の整数 
 </term><description> このインスタンスの位置が <paramref name="other" /> よりも後ろです。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Tuple%604> のインスタンスが <xref:System.Collections.IStructuralComparable> インターフェイスにキャストされる場合のみ、使用できます。  
  
 このメソッドは直接呼び出すことができますが、最も一般的には、コレクションのメンバー <xref:System.Collections.IComparer>を順序付けるパラメーターを含むコレクションの並べ替えメソッドによって呼び出されます。 たとえば、 <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> コンストラクターを使用<xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>してインスタンス化され<xref:System.Collections.SortedList.Add%2A>た<xref:System.Collections.SortedList>オブジェクトのメソッドとメソッドによって呼び出されます。  
  
> [!CAUTION]
>  メソッド<xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29>は、並べ替え操作で使用することを目的としています。 比較の主な目的が2つのオブジェクトが等しいかどうかを判断する場合は、この値を使用しないでください。 2つのオブジェクトが等しいかどうかを<xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29>判断するには、メソッドを呼び出します。  
  
   
  
## Examples  
 次の例では、野球<xref:System.Tuple%604>ピッチャーに関する統計データを含むオブジェクトの配列を作成します。 データ項目には、水差しの名前、イニングピッチの数、水差しの獲得された実行の平均 (1 回のゲームで実行される平均実行回数)、および水差しが与えたヒット数が含まれます。 この例では、配列内の各組のコンポーネントを並べ替えられていない順序で表示<xref:System.Tuple%604.ToString%2A>し、配列を並べ替え、を呼び出して、各組の値を並べ替えた順序で表示します。 この例では、配列を並べ替えるために`PitcherComparer` 、 <xref:System.Collections.IComparer>インターフェイスを実装するジェネリッククラスを<xref:System.Tuple%604>定義し、3番目のコンポーネントの値 (獲得した実行の平均) ではなくオブジェクトを昇順に並べ替えます。成分. この例では、メソッドが<xref:System.Tuple%604.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29>直接呼び出されないことに注意してください。 このメソッドは、配列内の<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>各要素に対してメソッドによって暗黙的に呼び出されます。  
  
 [!code-csharp[System.Tuple\`4.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`4.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="other" /> は <see cref="T:System.Tuple`4" /> オブジェクトではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">このインスタンスと比較するオブジェクト。</param>
        <param name="comparer">2 つのオブジェクトが等しいかどうかの評価に使用するメソッドを定義するオブジェクト。</param>
        <summary>指定された比較メソッドに基づいて、現在の <see cref="T:System.Tuple`4" /> オブジェクトが指定したオブジェクトと等しいかどうかを示す値を返します。</summary>
        <returns>現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Tuple%604> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。  
  
 実装<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>が呼び出されるのは`other` 、が`null`ではない場合と、そのコンポーネントが現在C#のインスタンスと同じ型の<xref:System.Tuple%604>オブジェクトに正常にキャスト (in) または変換 (Visual Basic) できる場合だけです。 メソッド<xref:System.Tuple%604.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29>は、まず、 <xref:System.Tuple%604.Item1%2A> <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>実装と比較<xref:System.Tuple%604>するオブジェクトの値を渡します。 このメソッド呼び出しから制御`true`が戻った場合、メソッドが再度呼び出さ<xref:System.Tuple%604.Item2%2A>れ、2つ<xref:System.Tuple%604>のオブジェクトの値が渡されます。 このメソッド呼び出しが再び`true`返される場合、メソッドは3回目に呼び出され<xref:System.Tuple%604.Item3%2A> 、2つ<xref:System.Tuple%604>のオブジェクトの値が渡されます。 このメソッド呼び出しが再び`true`返された場合、4番目と最後の時刻に対して<xref:System.Tuple%604.Item4%2A>メソッドが呼び出され<xref:System.Tuple%604> 、2つのオブジェクトの値が渡されます。  
  
   
  
## Examples  
 次の例では`Item3And4Comparer` 、 <xref:System.Collections.IEqualityComparer>インターフェイスを実装するクラスを定義し、 <xref:System.Tuple%604>オブジェクトが等しいかどうかを評価する方法を変更します。 メソッドは、2 `true`つ<xref:System.Tuple%604.Item1%2A> <xref:System.Tuple%604.Item3%2A> <xref:System.Tuple%604.Item2%2A> <xref:System.Tuple%604> のオブジェクトのプロパティ値とプロパティ値が渡されると常にを返し、メソッドを呼び出し`obj.Equals`てプロパティ値を評価します。 このメソッド呼び出しは、true を返します。また`obj.Equals` 、メソッドを呼び出して組<xref:System.Tuple%604.Item4%2A>のプロパティ値を評価します。 その結果、メソッドは、プロパティ<xref:System.Tuple%604.Item3%2A>と<xref:System.Tuple%604.Item4%2A>プロパティの値のみに基づいて等しいかどうかをテストします。 出力は、米国の市区町村の名前、 <xref:System.Tuple%604>年の月、およびその月の平均気温と最低気温を記録するオブジェクトのデータセットの結果を示しています。  
  
 [!code-csharp[System.Tuple\`4.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`4.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">現在の <see cref="T:System.Tuple`4" /> オブジェクトのハッシュ コードを計算する <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> メソッドを持つオブジェクト。</param>
        <summary>指定した計算メソッドを使用して、現在の <see cref="T:System.Tuple`4" /> オブジェクトのハッシュ コードを計算します。</summary>
        <returns>32 ビット符号付き整数ハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Tuple%604> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。  
  
 メソッドは、 `comparer`オブジェクトの<xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType>実装の呼び出しを単にラップします。  
  
 ハッシュコードの計算に使用されるアルゴリズムは、等しいと見なされる 2 <xref:System.Tuple%604>つのオブジェクトに対して同じハッシュコードを返す必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">現在のインスタンスと比較するオブジェクト。</param>
        <summary>現在の <see cref="T:System.Tuple`4" /> オブジェクトと指定したオブジェクトを比較して、現在のオブジェクトが、並べ替え順序において、指定したオブジェクトの前後または同じ位置のいずれにあるかを示す整数を返します。</summary>
        <returns>並べ替え順序における、このインスタンスと <paramref name="obj" /> の相対位置を示す符号付き整数値 (次の表を参照)。  
  
 <list type="table"><listheader><term> [値] 
 </term><description> 説明 
 </description></listheader><item><term> 負の整数 
 </term><description> このインスタンスの位置が <paramref name="obj" /> よりも前です。  
  
 </description></item><item><term> 0 
 </term><description> このインスタンスと <paramref name="obj" /> の位置は、並べ替え順序において同じです。  
  
 </description></item><item><term> 正の整数 
 </term><description> このインスタンスの位置が <paramref name="obj" /> よりも後ろです。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Tuple%604> のインスタンスが <xref:System.IComparable> インターフェイスにキャストされる場合のみ、使用できます。  
  
 このメソッドは、 <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> <xref:System.Tuple%604>クラスの実装を提供します。 メソッドは直接呼び出すことができますが、通常は、コレクションのメンバーを並べ替えるために、 <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType>や<xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>などのコレクションの並べ替えメソッドの既定のオーバーロードによって呼び出されます。  
  
> [!CAUTION]
>  メソッド<xref:System.Tuple%604.System%23IComparable%23CompareTo%2A>は、並べ替え操作で使用することを目的としています。 比較の主な目的が2つのオブジェクトが等しいかどうかを判断する場合は、この値を使用しないでください。 2つのオブジェクトが等しいかどうかを<xref:System.Tuple%604.Equals%2A>判断するには、メソッドを呼び出します。  
  
 メソッド<xref:System.Tuple%604.System%23IComparable%23CompareTo%2A>は、既定のオブジェクト比較子を使用して、各コンポーネントを比較します。  
  
   
  
## Examples  
 次の例では、野球<xref:System.Tuple%604>の形で構成されるオブジェクトの配列を作成します。このオブジェクトは、野球の水差しの名前、イニングピッチの数、およびヒット数と獲得回数で構成されます。 配列内の各組のコンポーネントを並べ替えられていない順序で表示し、配列を<xref:System.Tuple%604.ToString%2A>並べ替え、を呼び出して各組を並べ替えた順序で表示します。 出力は、配列が名前で並べ替えられていることを示しています。これは、最初のコンポーネントです。 この例では、メソッドが<xref:System.Tuple%604.System%23IComparable%23CompareTo%28System.Object%29>直接呼び出されないことに注意してください。 このメソッドは、配列内の<xref:System.Array.Sort%28System.Array%29>各要素に対してメソッドによって暗黙的に呼び出されます。  
  
 [!code-csharp[System.Tuple\`4.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`4.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="obj" /> は <see cref="T:System.Tuple`4" /> オブジェクトではありません。</exception>
        <altmember cref="M:System.Tuple`4.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index">指定した <see langword="Tuple" /> 要素のインデックス。 <paramref name="index" /> は 0 から 3 までです。</param>
        <summary>指定した <see langword="Tuple" /> 要素の値を取得します。</summary>
        <value>指定した位置にある <see langword="Tuple" /> 要素の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType>は、明示的なインターフェイスの実装です。 このメソッドを呼び出すには、 <xref:System.Tuple%604>オブジェクト<xref:System.Runtime.CompilerServices.ITuple>をインターフェイスオブジェクトにキャストまたは変換する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> が 0 より小さいか、3 を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`4.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Tuple" /> にある要素の数を取得します。</summary>
        <value><see cref="T:System.Tuple`4" /> オブジェクト内の要素数、4。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Tuple%604.System%23Runtime%23CompilerServices%23ITuple%23Length%2A>は、明示的なインターフェイスの実装です。 このメソッドを呼び出すには、 <xref:System.Tuple%604>オブジェクト<xref:System.Runtime.CompilerServices.ITuple>をインターフェイスオブジェクトにキャストまたは変換する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`4.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Tuple`4" /> インスタンスの値を表す文字列を返します。</summary>
        <returns>この <see cref="T:System.Tuple`4" /> オブジェクトの文字列表現。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドによって返される文字列の形式は、(*Item1*, *Item2*, *Item3*, *Tuple.item4*) です。ここで、 *Item1*、 *Item2* <xref:System.Tuple%604.Item2%2A> 、 *Item3*、 *tuple.item4*は、の<xref:System.Tuple%604.Item1%2A>値を表します。、 <xref:System.Tuple%604.Item3%2A>、および<xref:System.Tuple%604.Item4%2A>の各プロパティ。 いずれかのプロパティ値が`null`の場合は、として<xref:System.String.Empty?displayProperty=nameWithType>表されます。  
  
   
  
## Examples  
 次の例は、 <xref:System.Tuple%604.ToString%2A>メソッドを示しています。 この例では、4組のオブジェクトの配列のうち、市の名前、年の月、およびその月の最高値と最低気温を含む要素が表示されます。  
  
 [!code-csharp[System.Tuple\`4.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`4.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`4.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`4.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
