<Type Name="Boolean" FullName="System.Boolean">
  <TypeSignature Language="C#" Value="public struct Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit bool extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;bool&gt;, class System.IConvertible, class System.IEquatable`1&lt;bool&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Boolean" />
  <TypeSignature Language="VB.NET" Value="Public Structure Boolean&#xA;Implements IComparable, IComparable(Of Boolean), IConvertible, IEquatable(Of Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public value class Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="71116-101">ブール値 (<see langword="true" /> または <see langword="false" />) を表します。</span><span class="sxs-lookup"><span data-stu-id="71116-101">Represents a Boolean (<see langword="true" /> or <see langword="false" />) value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-102">A<xref:System.Boolean>インスタンスは、2 つの値のいずれかを持つことができます: `true`、または`false`です。</span><span class="sxs-lookup"><span data-stu-id="71116-102">A <xref:System.Boolean> instance can have either of two values: `true`, or `false`.</span></span>  
  
 <span data-ttu-id="71116-103"><xref:System.Boolean>構造は、次のタスクをサポートするメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="71116-103">The <xref:System.Boolean> structure provides methods that support the following tasks:</span></span>  
  
-   <span data-ttu-id="71116-104">ブール値を文字列に変換します。 <xref:System.Boolean.ToString%2A></span><span class="sxs-lookup"><span data-stu-id="71116-104">Converting Boolean values to strings: <xref:System.Boolean.ToString%2A></span></span>  
  
-   <span data-ttu-id="71116-105">ブール値に変換する文字列の解析:<xref:System.Boolean.Parse%2A>と <xref:System.Boolean.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="71116-105">Parsing strings to convert them to Boolean values: <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A></span></span>  
  
-   <span data-ttu-id="71116-106">値を比較する:<xref:System.Boolean.CompareTo%2A>と <xref:System.Boolean.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="71116-106">Comparing values: <xref:System.Boolean.CompareTo%2A> and <xref:System.Boolean.Equals%2A></span></span>  
  
 <span data-ttu-id="71116-107">次のセクションでは、これらのタスクとその他の使用方法の詳細について説明します。</span><span class="sxs-lookup"><span data-stu-id="71116-107">The following sections explain these tasks and other usage details:</span></span>  
  
 <span data-ttu-id="71116-108">[ブール値の書式設定](#Formatting) </span><span class="sxs-lookup"><span data-stu-id="71116-108">[Formatting Boolean values](#Formatting) </span></span>  
 <span data-ttu-id="71116-109">[ブール値に変換します。](#Converting) </span><span class="sxs-lookup"><span data-stu-id="71116-109">[Converting to and from Boolean values](#Converting) </span></span>  
 <span data-ttu-id="71116-110">[解析のブール値](#Parsing) </span><span class="sxs-lookup"><span data-stu-id="71116-110">[Parsing Boolean values](#Parsing) </span></span>  
 <span data-ttu-id="71116-111">[ブール値を比較します。](#Comparing) </span><span class="sxs-lookup"><span data-stu-id="71116-111">[Comparing Boolean values](#Comparing) </span></span>  
 <span data-ttu-id="71116-112">[バイナリ値としてブール値の操作](#Binary) </span><span class="sxs-lookup"><span data-stu-id="71116-112">[Working with Booleans as binary values](#Binary) </span></span>  
 <span data-ttu-id="71116-113">[ブール値を持つ操作を実行します。](#Operations) </span><span class="sxs-lookup"><span data-stu-id="71116-113">[Performing operations with Boolean values](#Operations) </span></span>  
 [<span data-ttu-id="71116-114">ブール値との相互運用機能</span><span class="sxs-lookup"><span data-stu-id="71116-114">Booleans and Interop</span></span>](#Interop)  
  
<a name="Formatting"></a>   
## <a name="formatting-boolean-values"></a><span data-ttu-id="71116-115">ブール値の書式設定</span><span class="sxs-lookup"><span data-stu-id="71116-115">Formatting Boolean values</span></span>  
 <span data-ttu-id="71116-116">文字列形式を<xref:System.Boolean>は"True"、`true`値または"False"に、`false`値。</span><span class="sxs-lookup"><span data-stu-id="71116-116">The string representation of a <xref:System.Boolean> is either "True" for a `true` value or "False" for a `false` value.</span></span> <span data-ttu-id="71116-117">文字列形式を<xref:System.Boolean>値は、読み取り専用<xref:System.Boolean.TrueString>と<xref:System.Boolean.FalseString>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="71116-117">The string representation of a <xref:System.Boolean> value is defined by the read-only <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields.</span></span>  
  
 <span data-ttu-id="71116-118">使用する、<xref:System.Boolean.ToString%2A>ブール値を文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="71116-118">You use the <xref:System.Boolean.ToString%2A> method to convert Boolean values to strings.</span></span> <span data-ttu-id="71116-119">2 つのブール型の構造が含まれます<xref:System.Boolean.ToString%2A>オーバー ロード: パラメーターなし<xref:System.Boolean.ToString>メソッドおよび<xref:System.Boolean.ToString%28System.IFormatProvider%29>メソッドで、書式を制御するパラメーターが含まれています。</span><span class="sxs-lookup"><span data-stu-id="71116-119">The Boolean structure includes two <xref:System.Boolean.ToString%2A> overloads: the parameterless <xref:System.Boolean.ToString> method and the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method, which includes a parameter that controls formatting.</span></span> <span data-ttu-id="71116-120">ただし、このパラメーターが無視されるため、2 つのオーバー ロードと同じ文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="71116-120">However, because this parameter is ignored, the two overloads produce identical strings.</span></span> <span data-ttu-id="71116-121"><xref:System.Boolean.ToString%28System.IFormatProvider%29>メソッドは、カルチャの書式設定をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="71116-121">The <xref:System.Boolean.ToString%28System.IFormatProvider%29> method does not support culture-sensitive formatting.</span></span>  
  
 <span data-ttu-id="71116-122">次の例で書式設定、<xref:System.Boolean.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-122">The following example illustrates formatting with the <xref:System.Boolean.ToString%2A> method.</span></span> <span data-ttu-id="71116-123">この例では注意してください、[複合書式指定](~/docs/standard/base-types/composite-formatting.md)機能、ため、<xref:System.Boolean.ToString%2A>メソッドが暗黙的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="71116-123">Note that the example uses the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature, so the <xref:System.Boolean.ToString%2A> method is called implicitly.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring1.cs#3)]
 [!code-vb[System.Boolean.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring1.vb#3)]  
  
 <span data-ttu-id="71116-124"><xref:System.Boolean>構造体は 2 つの値を持つことができます、簡単にカスタムの書式設定を追加します。</span><span class="sxs-lookup"><span data-stu-id="71116-124">Because the <xref:System.Boolean> structure can have only two values, it is easy to add custom formatting.</span></span> <span data-ttu-id="71116-125">単純なカスタム書式設定するその他の文字列にリテラルが"True"および"False"に置き換えられるなどの言語でサポートされている任意の条件の評価機能を使用することができます、[条件演算子](~/docs/csharp/language-reference/operators/conditional-operator.md)(C#) または[場合演算子](~/docs/visual-basic/language-reference/operators/if-operator.md)Visual Basic でします。</span><span class="sxs-lookup"><span data-stu-id="71116-125">For simple custom formatting in which other string literals are substituted for "True" and "False", you can use any conditional evaluation feature supported by your language, such as the [conditional operator](~/docs/csharp/language-reference/operators/conditional-operator.md) in C# or the [If operator](~/docs/visual-basic/language-reference/operators/if-operator.md) in Visual Basic.</span></span> <span data-ttu-id="71116-126">次の例では、この手法をでフォーマットする<xref:System.Boolean>値として"Yes"と"True"および"False"ではなく"No"です。</span><span class="sxs-lookup"><span data-stu-id="71116-126">The following example uses this technique to format <xref:System.Boolean> values as "Yes" and "No" rather than "True" and "False".</span></span>  
  
 [!code-csharp[System.Boolean.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring2.cs#4)]
 [!code-vb[System.Boolean.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring2.vb#4)]  
  
 <span data-ttu-id="71116-127">カルチャが書式設定など、複雑なカスタム書式設定操作を呼び出すことができます、<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>メソッドを提供し、<xref:System.ICustomFormatter>実装します。</span><span class="sxs-lookup"><span data-stu-id="71116-127">For more complex custom formatting operations, including culture-sensitive formatting, you can call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method and provide an <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="71116-128">次の例では、実装、<xref:System.ICustomFormatter>と<xref:System.IFormatProvider>英語 (米国)、フランス語 (フランス)、およびロシア語 (ロシア) カルチャのカルチャに依存したブール型の文字列を提供するインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="71116-128">The following example implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/format3.cs#5)]
 [!code-vb[System.Boolean.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/format3.vb#5)]  
  
 <span data-ttu-id="71116-129">必要に応じて、使用できる[リソース ファイル](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890)カルチャに固有のブール型の文字列を定義します。</span><span class="sxs-lookup"><span data-stu-id="71116-129">Optionally, you can use [resource files](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890) to define culture-specific Boolean strings.</span></span>  
  
<a name="Converting"></a>   
## <a name="converting-to-and-from-boolean-values"></a><span data-ttu-id="71116-130">ブール値に変換します。</span><span class="sxs-lookup"><span data-stu-id="71116-130">Converting to and from Boolean values</span></span>  
 <span data-ttu-id="71116-131"><xref:System.Boolean> Implements 構造体、<xref:System.IConvertible>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="71116-131">The <xref:System.Boolean> structure implements the <xref:System.IConvertible> interface.</span></span>  <span data-ttu-id="71116-132">その結果、使用することができます、<xref:System.Convert>間の変換を行うにはクラス、<xref:System.Boolean>値と、.NET Framework の他の任意のプリミティブ型を呼び出すことができます、<xref:System.Boolean>構造体の明示的な実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-132">As a result, you can use the <xref:System.Convert> class to perform conversions between a <xref:System.Boolean> value and any other primitive type in the .NET Framework, or you can call the <xref:System.Boolean> structure's explicit implementations.</span></span> <span data-ttu-id="71116-133">ただし、間の変換、<xref:System.Boolean>し、次の種類がサポートされないので、対応する変換メソッドは、スロー、<xref:System.InvalidCastException>例外。</span><span class="sxs-lookup"><span data-stu-id="71116-133">However, conversions between a <xref:System.Boolean> and the following types are not supported, so the corresponding conversion methods throw an <xref:System.InvalidCastException> exception:</span></span>  
  
-   <span data-ttu-id="71116-134">間の変換<xref:System.Boolean>と<xref:System.Char>(、<xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType>と<xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType>メソッド)</span><span class="sxs-lookup"><span data-stu-id="71116-134">Conversion between <xref:System.Boolean> and <xref:System.Char> (the <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType> and <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>  
  
-   <span data-ttu-id="71116-135">間の変換<xref:System.Boolean>と<xref:System.DateTime>(、<xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType>と<xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType>メソッド)</span><span class="sxs-lookup"><span data-stu-id="71116-135">Conversion between <xref:System.Boolean> and <xref:System.DateTime> (the <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> and <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>  
  
 <span data-ttu-id="71116-136">ブール値に整数または浮動小数点の数値からすべての変換にゼロ以外の値を変換する`true`およびゼロ値に`false`です。</span><span class="sxs-lookup"><span data-stu-id="71116-136">All conversions from integral or floating-point numbers to Boolean values convert non-zero values to `true` and zero values to `false`.</span></span>  <span data-ttu-id="71116-137">次の例では、これを示しますの選択したオーバー ロードを呼び出すことによって、<xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType>クラスです。</span><span class="sxs-lookup"><span data-stu-id="71116-137">The following example illustrates this by calling selected overloads of the <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion1.cs#6)]
 [!code-vb[System.Boolean.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion1.vb#6)]  
  
 <span data-ttu-id="71116-138">浮動小数点値からブール値への変換、変換メソッドは 0 での厳密な比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="71116-138">When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero.</span></span> <span data-ttu-id="71116-139">浮動小数点値が有効桁数を失った場合、結果が予期できないことができます。</span><span class="sxs-lookup"><span data-stu-id="71116-139">If the floating-point value has lost precision, the result can be unexpected.</span></span> <span data-ttu-id="71116-140">これで、次の例に示す、<xref:System.Double>変数の値を 0 にする必要がありますが、ブール値に変換します。</span><span class="sxs-lookup"><span data-stu-id="71116-140">This is illustrated in the following example, in which a <xref:System.Double> variable whose value should be zero is converted to a Boolean value.</span></span> <span data-ttu-id="71116-141">結果は、例に示す、 `true` 0.2 の追加機能が有効桁数の損失が発生しました繰り返されるためです。</span><span class="sxs-lookup"><span data-stu-id="71116-141">As the example shows, the result is `true` because repeated additions of 0.2 have resulted in a loss of precision.</span></span>  
  
 <span data-ttu-id="71116-142">ブール値から数値の変換メソッドに変換するときに、<xref:System.Convert>クラス convert`true`を 1 と`false`を 0 にします。</span><span class="sxs-lookup"><span data-stu-id="71116-142">When converting from Boolean to numeric values, the conversion methods of the <xref:System.Convert> class convert `true` to 1 and `false` to 0.</span></span> <span data-ttu-id="71116-143">ただし、Visual Basic の変換関数が変換`true`か 255 (への変換<xref:System.Byte>値) または (他の数値変換の場合) の場合は-1。</span><span class="sxs-lookup"><span data-stu-id="71116-143">However, Visual Basic conversion functions convert `true` to either 255 (for conversions to <xref:System.Byte> values) or -1 (for all other numeric conversions).</span></span> <span data-ttu-id="71116-144">次の例では変換`true`を使用して数値の値を<xref:System.Convert>メソッド、および、Visual Basic 言語の独自の変換演算子を使用して、Visual Basic の例です。</span><span class="sxs-lookup"><span data-stu-id="71116-144">The following example converts `true` to numeric values by using a <xref:System.Convert> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion3.cs#8)]
 [!code-vb[System.Boolean.Structure#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion3.vb#8)]  
  
 <span data-ttu-id="71116-145">変換<xref:System.Boolean>文字列値を参照してください、[ブール値の書式設定](#Formatting)セクションです。</span><span class="sxs-lookup"><span data-stu-id="71116-145">For conversions from <xref:System.Boolean> to string values, see the [Formatting Boolean Values](#Formatting) section.</span></span> <span data-ttu-id="71116-146">文字列からの変換<xref:System.Boolean>値を参照してください、[ブール値の解析](#Parsing)セクションです。</span><span class="sxs-lookup"><span data-stu-id="71116-146">For conversions from strings to <xref:System.Boolean> values, see the [Parsing Boolean Values](#Parsing) section.</span></span>  
  
<a name="Parsing"></a>   
## <a name="parsing-boolean-values"></a><span data-ttu-id="71116-147">解析のブール値</span><span class="sxs-lookup"><span data-stu-id="71116-147">Parsing Boolean values</span></span>  
 <span data-ttu-id="71116-148"><xref:System.Boolean>構造体には、次の 2 つの静的な解析メソッドが含まれています。<xref:System.Boolean.Parse%2A>と<xref:System.Boolean.TryParse%2A>、文字列をブール値を変換します。</span><span class="sxs-lookup"><span data-stu-id="71116-148">The <xref:System.Boolean> structure includes two static parsing methods, <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>, that convert a string to a Boolean value.</span></span> <span data-ttu-id="71116-149">ブール値の文字列形式がの値の大文字と小文字の対応によって定義された、<xref:System.Boolean.TrueString>と<xref:System.Boolean.FalseString>、あるフィールドを"True"および"False"、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="71116-149">The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields, which are "True" and "False", respectively.</span></span> <span data-ttu-id="71116-150">つまり、正常に解析するのみの文字列は、"True"、"False"、"true"、"false"、または、大文字と小文字が混在して該当するショートカットはいくつかです。</span><span class="sxs-lookup"><span data-stu-id="71116-150">In other words, the only strings that parse successfully are "True", "False", "true", "false", or some mixed-case equivalent.</span></span> <span data-ttu-id="71116-151">「0」または「1」などの数値の文字列を正常に解析することはできません。</span><span class="sxs-lookup"><span data-stu-id="71116-151">You cannot successfully parse numeric strings such as "0" or "1".</span></span> <span data-ttu-id="71116-152">文字列比較を実行するときに、先頭または末尾の空白文字は考慮されません。</span><span class="sxs-lookup"><span data-stu-id="71116-152">Leading or trailing white-space characters are not considered when performing the string comparison.</span></span>  
  
 <span data-ttu-id="71116-153">次の例では、<xref:System.Boolean.Parse%2A>と<xref:System.Boolean.TryParse%2A>を文字列の数を解析するメソッド。</span><span class="sxs-lookup"><span data-stu-id="71116-153">The following example uses the <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A> methods to parse a number of strings.</span></span> <span data-ttu-id="71116-154">"True"および"False"の大文字と小文字のオブジェクトのみが正しく解析できることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="71116-154">Note that only the case-insensitive equivalents of "True" and "False" can be successfully parsed.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse2.cs#2)]
 [!code-vb[System.Boolean.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse2.vb#2)]  
  
 <span data-ttu-id="71116-155">Visual Basic でプログラミングしている場合を使用できます、`CBool`ブール値を数値の文字列形式に変換する関数。</span><span class="sxs-lookup"><span data-stu-id="71116-155">If you are programming in Visual Basic, you can use the `CBool` function to convert the string representation of a number to a Boolean value.</span></span> <span data-ttu-id="71116-156">「0」に変換されます`false`、0 以外の値の文字列形式に変換および`true`です。</span><span class="sxs-lookup"><span data-stu-id="71116-156">"0" is converted to `false`, and the string representation of any non-zero value is converted to `true`.</span></span> <span data-ttu-id="71116-157">いないしてプログラミングする Visual Basic の場合、数値の文字列をブール値に変換する前に数値に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="71116-157">If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean.</span></span> <span data-ttu-id="71116-158">次の例は、ブール値に整数の配列を変換することで、これを示しています。</span><span class="sxs-lookup"><span data-stu-id="71116-158">The following example illustrates this by converting an array of integers to Boolean values.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse3.cs#9)]
 [!code-vb[System.Boolean.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse3.vb#9)]  
  
<a name="Comparing"></a>   
## <a name="comparing-boolean-values"></a><span data-ttu-id="71116-159">ブール値を比較します。</span><span class="sxs-lookup"><span data-stu-id="71116-159">Comparing Boolean values</span></span>  
 <span data-ttu-id="71116-160">ブール値がいずれかであるため`true`または`false`、明示的に呼び出す理由はほとんどが、<xref:System.Boolean.CompareTo%2A>インスタンスがより大きいより小さいかどうかを示す、メソッド、または指定した値に等しいかどうか。</span><span class="sxs-lookup"><span data-stu-id="71116-160">Because Boolean values are either `true` or `false`, there is little reason to explicitly call the <xref:System.Boolean.CompareTo%2A> method, which indicates whether an instance is greater than, less than, or equal to a specified value.</span></span> <span data-ttu-id="71116-161">通常を 2 つのブール変数を比較するを呼び出す、<xref:System.Boolean.Equals%2A>メソッド、言語の等値演算子を使用したりします。</span><span class="sxs-lookup"><span data-stu-id="71116-161">Typically, to compare two Boolean variables, you call the <xref:System.Boolean.Equals%2A> method or use your language's equality operator.</span></span>  
  
 <span data-ttu-id="71116-162">ただし、ブール型リテラルのブール値を持つ変数を比較するときに`true`または`false`、ブール値を評価した結果がブール値であるため、明示的な比較を行う必要はありません。</span><span class="sxs-lookup"><span data-stu-id="71116-162">However, when you want to compare a Boolean variable with the literal Boolean value `true` or `false`, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value.</span></span> <span data-ttu-id="71116-163">たとえば、式</span><span class="sxs-lookup"><span data-stu-id="71116-163">For example, the expressions</span></span>  
  
 [!code-csharp[System.Boolean.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#12)]
 [!code-vb[System.Boolean.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#12)]  
  
 <span data-ttu-id="71116-164">と、呼び出し</span><span class="sxs-lookup"><span data-stu-id="71116-164">and</span></span>  
  
 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  
  
 <span data-ttu-id="71116-165">それと同等ですが、2 つ目よりコンパクトなです。</span><span class="sxs-lookup"><span data-stu-id="71116-165">are equivalent, but the second is more compact.</span></span> <span data-ttu-id="71116-166">ただし、両方の手法と同等のパフォーマンスを提供します。</span><span class="sxs-lookup"><span data-stu-id="71116-166">However, both techniques offer comparable performance.</span></span>  
  
<a name="Binary"></a>   
## <a name="working-with-booleans-as-binary-values"></a><span data-ttu-id="71116-167">バイナリ値としてブール値の操作</span><span class="sxs-lookup"><span data-stu-id="71116-167">Working with Booleans as binary values</span></span>  
 <span data-ttu-id="71116-168">ブール値は、C# コード例を次として 1 バイトのメモリを占有します。</span><span class="sxs-lookup"><span data-stu-id="71116-168">A Boolean value occupies one byte of memory, as the following C# example shows.</span></span> <span data-ttu-id="71116-169">例をコンパイルする必要があります、`/unsafe`スイッチします。</span><span class="sxs-lookup"><span data-stu-id="71116-169">The example must be compiled with the `/unsafe` switch.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/size1.cs#14)]  
  
 <span data-ttu-id="71116-170">バイトの下位ビットは、その値を表すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="71116-170">The byte's low-order bit is used to represent its value.</span></span> <span data-ttu-id="71116-171">1 の値が表す`true`です。 値 0 の`false`します。</span><span class="sxs-lookup"><span data-stu-id="71116-171">A value of 1 represents `true`; a value of 0 represents `false`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="71116-172">使用することができます、<xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType>ブール値のセットを使用する構造体。</span><span class="sxs-lookup"><span data-stu-id="71116-172">You can use the <xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> structure to work with sets of Boolean values.</span></span>  
  
 <span data-ttu-id="71116-173">ブール値をバイナリ表現に変換するには呼び出すことによって、<xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-173">You can convert a Boolean value to its binary representation by calling the <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="71116-174">このメソッドは、単一の要素のバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="71116-174">The method returns a byte array with a single element.</span></span> <span data-ttu-id="71116-175">ブール値をバイナリ表現から復元するに呼び出せる、<xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-175">To restore a Boolean value from its binary representation, you can call the <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="71116-176">次の例では、<xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>ブール値を表示、個々 のビット値、および呼び出すして、バイナリ表現に変換するメソッド、<xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType>バイナリ表現から値を復元する方法です。</span><span class="sxs-lookup"><span data-stu-id="71116-176">The following example calls the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType> method to restore the value from its binary representation.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/binary1.cs#1)]
 [!code-vb[System.Boolean.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/binary1.vb#1)]  
  
<a name="Operations"></a>   
## <a name="performing-operations-with-boolean-values"></a><span data-ttu-id="71116-177">ブール値を持つ操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="71116-177">Performing operations with Boolean values</span></span>  
 <span data-ttu-id="71116-178">このセクションでは、どのブール値を示しています。 アプリで使用されます。</span><span class="sxs-lookup"><span data-stu-id="71116-178">This section illustrates how Boolean values are used in apps.</span></span> <span data-ttu-id="71116-179">最初のセクションでは、フラグとしての使用について説明します。</span><span class="sxs-lookup"><span data-stu-id="71116-179">The first section discusses its use as a flag.</span></span> <span data-ttu-id="71116-180">2 つ目は、算術演算の使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="71116-180">The second illustrates its use for arithmetic operations.</span></span>  
  
### <a name="boolean-values-as-flags"></a><span data-ttu-id="71116-181">フラグとしてブール値</span><span class="sxs-lookup"><span data-stu-id="71116-181">Boolean values as flags</span></span>  
 <span data-ttu-id="71116-182">ブール値変数は、いくつかの条件の有無を通知する、フラグとしてよく使用されます。</span><span class="sxs-lookup"><span data-stu-id="71116-182">Boolean variables are most commonly used as flags, to signal the presence or absence of some condition.</span></span> <span data-ttu-id="71116-183">などで、<xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType>メソッドは、最後のパラメーター `ignoreCase`、2 つの文字列の比較が大文字かどうかを示すフラグです (`ignoreCase`は`true`) と小文字の区別 (`ignoreCase`は`false`)。</span><span class="sxs-lookup"><span data-stu-id="71116-183">For example, in the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> method, the final parameter, `ignoreCase`, is a flag that indicates whether the comparison of two strings is case-insensitive (`ignoreCase` is `true`) or case-sensitive (`ignoreCase` is `false`).</span></span> <span data-ttu-id="71116-184">条件付きステートメントでは、フラグの値が評価されます。</span><span class="sxs-lookup"><span data-stu-id="71116-184">The value of the flag can then be evaluated in a conditional statement.</span></span>  
  
 <span data-ttu-id="71116-185">次の例では、単純なコンソール アプリを使用して、フラグとしてブール型の変数の使用方法を説明します。</span><span class="sxs-lookup"><span data-stu-id="71116-185">The following example uses a simple console app to illustrate the use of Boolean variables as flags.</span></span> <span data-ttu-id="71116-186">アプリは、指定したファイルにリダイレクトする出力を有効にするコマンド ライン パラメーターを受け取ります (、`/f`スイッチ)、指定されたファイルと、コンソールの両方に送信される出力を有効にして (、`/b`切り替える)。</span><span class="sxs-lookup"><span data-stu-id="71116-186">The app accepts command-line parameters that enable output to be redirected to a specified file (the `/f` switch), and that enable output to be sent both to a specified file and to the console (the `/b` switch).</span></span> <span data-ttu-id="71116-187">アプリがという名前のフラグを定義`isRedirected`出力をファイルに送信して、フラグが名前付きかどうかを示すために`isBoth`をコンソールに出力を送信することを示します。</span><span class="sxs-lookup"><span data-stu-id="71116-187">The app defines a flag named `isRedirected` to indicate whether output is to be sent to a file, and a flag named `isBoth` to indicate that output should be sent to the console.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#10)]
 [!code-vb[System.Boolean.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#10)]  
  
### <a name="booleans-and-arithmetic-operations"></a><span data-ttu-id="71116-188">ブール値、算術演算</span><span class="sxs-lookup"><span data-stu-id="71116-188">Booleans and arithmetic operations</span></span>  
 <span data-ttu-id="71116-189">ブール値は数学的な計算をトリガーする条件のプレゼンスを示すために使用します。</span><span class="sxs-lookup"><span data-stu-id="71116-189">A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation.</span></span> <span data-ttu-id="71116-190">たとえば、`hasShippingCharge`変数は、請求金額に出荷費用を追加するかどうかを示すフラグとして使用可能性があります。</span><span class="sxs-lookup"><span data-stu-id="71116-190">For example, a `hasShippingCharge` variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.</span></span>  
  
 <span data-ttu-id="71116-191">の操作は、`false`値も何も起こりません操作の結果の必要はありません、数学的な操作で使用する整数値、ブール値を変換します。</span><span class="sxs-lookup"><span data-stu-id="71116-191">Because an operation with a `false` value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation.</span></span> <span data-ttu-id="71116-192">代わりに、条件ロジックを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="71116-192">Instead, you can use conditional logic.</span></span>  
  
 <span data-ttu-id="71116-193">次の例では、小計、送料、およびオプションのサービス料金で構成されている金額を計算します。</span><span class="sxs-lookup"><span data-stu-id="71116-193">The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge.</span></span> <span data-ttu-id="71116-194">`hasServiceCharge`変数は、サービスの料金が適用されるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="71116-194">The `hasServiceCharge` variable determines whether the service charge is applied.</span></span> <span data-ttu-id="71116-195">変換ではなく`hasServiceCharge`数値の値は、サービスの料金の量を乗算例では、ロジックを使用して条件が該当する場合は、サービスの請求金額を追加します。</span><span class="sxs-lookup"><span data-stu-id="71116-195">Instead of converting `hasServiceCharge` to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  
  
<a name="Interop"></a>   
### <a name="booleans-and-interop"></a><span data-ttu-id="71116-196">ブール値との相互運用機能</span><span class="sxs-lookup"><span data-stu-id="71116-196">Booleans and interop</span></span>  
 <span data-ttu-id="71116-197">一般に単純ですが、COM を基本データ型をマーシャ リングは、<xref:System.Boolean>データ型は例外です。</span><span class="sxs-lookup"><span data-stu-id="71116-197">While marshaling base data types to COM is generally straightforward, the <xref:System.Boolean> data type is an exception.</span></span> <span data-ttu-id="71116-198">適用することができます、<xref:System.Runtime.InteropServices.MarshalAsAttribute>をマーシャ リングする属性、<xref:System.Boolean>する次の形式のいずれかの種類。</span><span class="sxs-lookup"><span data-stu-id="71116-198">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to marshal the <xref:System.Boolean> type to any of the following representations:</span></span>  
  
|<span data-ttu-id="71116-199">列挙型</span><span class="sxs-lookup"><span data-stu-id="71116-199">Enumeration type</span></span>|<span data-ttu-id="71116-200">アンマネージ形式</span><span class="sxs-lookup"><span data-stu-id="71116-200">Unmanaged format</span></span>|  
|----------------------|----------------------|  
|<xref:System.Runtime.InteropServices.UnmanagedType.Bool?displayProperty=nameWithType>|<span data-ttu-id="71116-201">4 バイトの整数値、0 以外の値が表す`true`と 0`false`します。</span><span class="sxs-lookup"><span data-stu-id="71116-201">A 4-byte integer value, where any nonzero value represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="71116-202">これは、既定の形式、<xref:System.Boolean>構造体では、フィールド、<xref:System.Boolean>プラットフォームのパラメーターが呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="71116-202">This is the default format of a <xref:System.Boolean> field in a structure and of a <xref:System.Boolean> parameter in platform invoke calls.</span></span>|  
|<xref:System.Runtime.InteropServices.UnmanagedType.U1?displayProperty=nameWithType>|<span data-ttu-id="71116-203">1 バイトの整数値が、1 を表します`true`と 0`false`します。</span><span class="sxs-lookup"><span data-stu-id="71116-203">A 1-byte integer value, where the 1 represents `true` and 0 represents `false`.</span></span>|  
|<xref:System.Runtime.InteropServices.UnmanagedType.VariantBool?displayProperty=nameWithType>|<span data-ttu-id="71116-204">2 バイトの整数値、-1 が表す`true`と 0`false`します。</span><span class="sxs-lookup"><span data-stu-id="71116-204">A 2-byte integer value, where -1 represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="71116-205">これは、既定の形式、 <xref:System.Boolean> COM 相互運用呼び出しのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="71116-205">This is the default format of a <xref:System.Boolean> parameter in COM interop calls.</span></span>|  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="71116-206">この種類のすべてのメンバーでは、スレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="71116-206">All members of this type are thread safe.</span></span> <span data-ttu-id="71116-207">インスタンスの状態を変更する表示されるメンバーは、新しい値で初期化された新しいインスタンスを実際に返します。</span><span class="sxs-lookup"><span data-stu-id="71116-207">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="71116-208">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによってです。</span><span class="sxs-lookup"><span data-stu-id="71116-208">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71116-209">このインスタンスを指定されたオブジェクトまたは <see cref="T:System.Boolean" /> オブジェクトと比較し、それらの互いのリレーションシップを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="71116-209">Compares this instance to a specified object or <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(bool value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="71116-210">このインスタンスと比較する <see cref="T:System.Boolean" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="71116-210">A <see cref="T:System.Boolean" /> object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="71116-211">このインスタンスと指定した <see cref="T:System.Boolean" /> オブジェクトを比較し、互いの関係を示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="71116-211">Compares this instance to a specified <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span></span></summary>
        <returns><span data-ttu-id="71116-212">このインスタンスと <paramref name="value" /> との相対値を示す符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="71116-212">A signed integer that indicates the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="71116-213"><list type="table"><listheader><term> 戻り値</span><span class="sxs-lookup"><span data-stu-id="71116-213"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="71116-214"></term><description>条件</span><span class="sxs-lookup"><span data-stu-id="71116-214"></term><description> Condition</span></span>  
  
 <span data-ttu-id="71116-215"></description></listheader><item><term> 0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="71116-215"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="71116-216"></term><description> このインスタンスは <see langword="false" /> であり <paramref name="value" /> は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="71116-216"></term><description> This instance is <see langword="false" /> and <paramref name="value" /> is <see langword="true" />.</span></span>  
  
 <span data-ttu-id="71116-217"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="71116-217"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="71116-218"></term><description> このインスタンスと <paramref name="value" /> が等価 (両方とも <see langword="true" /> か、両方とも <see langword="false" />)。</span><span class="sxs-lookup"><span data-stu-id="71116-218"></term><description> This instance and <paramref name="value" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).</span></span>  
  
 <span data-ttu-id="71116-219"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="71116-219"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="71116-220"></term><description> このインスタンスは <see langword="true" /> であり <paramref name="value" /> は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="71116-220"></term><description> This instance is <see langword="true" /> and <paramref name="value" /> is <see langword="false" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-221">このメソッドを実装する、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスし、実行よりもわずかに向上、<xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType>メソッドに変換があるないため、`value`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="71116-221">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="71116-222">場合`value`ビット数が少ないのは範囲が狭い、インスタンスの型よりも一部のプログラミング言語が多くのビット値にパラメーターの値を変換する暗黙の拡大変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="71116-222">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="71116-223">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>です。</span><span class="sxs-lookup"><span data-stu-id="71116-223">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="71116-224">Microsoft c# コンパイラは、パラメーターの値を表す命令を生成、<xref:System.Int32>オブジェクトを生成、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>を比較するメソッド、<xref:System.Int32>インスタンスとパラメーターの形式です。</span><span class="sxs-lookup"><span data-stu-id="71116-224">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>  
  
 <span data-ttu-id="71116-225">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを決定する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="71116-225">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71116-226">次のコード例に示しますジェネリックと非ジェネリック バージョンの<xref:System.Boolean.CompareTo%2A>いくつかの値と参照型のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-226">The following code example demonstrates generic and nongeneric versions of the <xref:System.Boolean.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.CompareTo(System.Object)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="71116-227">このインスタンスと比較するオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="71116-227">An object to compare to this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="71116-228">指定したオブジェクトとこのインスタンスを比較し、互いの関係を示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="71116-228">Compares this instance to a specified object and returns an integer that indicates their relationship to one another.</span></span></summary>
        <returns><span data-ttu-id="71116-229">このインスタンスと <paramref name="obj" /> の相対順序を示す符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="71116-229">A signed integer that indicates the relative order of this instance and <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="71116-230"><list type="table"><listheader><term> 戻り値</span><span class="sxs-lookup"><span data-stu-id="71116-230"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="71116-231"></term><description>条件</span><span class="sxs-lookup"><span data-stu-id="71116-231"></term><description> Condition</span></span>  
  
 <span data-ttu-id="71116-232"></description></listheader><item><term> 0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="71116-232"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="71116-233"></term><description> このインスタンスは <see langword="false" /> であり <paramref name="obj" /> は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="71116-233"></term><description> This instance is <see langword="false" /> and <paramref name="obj" /> is <see langword="true" />.</span></span>  
  
 <span data-ttu-id="71116-234"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="71116-234"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="71116-235"></term><description> このインスタンスと <paramref name="obj" /> が等価 (両方とも <see langword="true" /> か、両方とも <see langword="false" />)。</span><span class="sxs-lookup"><span data-stu-id="71116-235"></term><description> This instance and <paramref name="obj" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).</span></span>  
  
 <span data-ttu-id="71116-236"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="71116-236"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="71116-237"></term><description> このインスタンスは <see langword="true" /> であり <paramref name="obj" /> は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="71116-237"></term><description> This instance is <see langword="true" /> and <paramref name="obj" /> is <see langword="false" />.</span></span>  
  
 <span data-ttu-id="71116-238">- または -</span><span class="sxs-lookup"><span data-stu-id="71116-238">-or-</span></span>  
  
 <span data-ttu-id="71116-239"><paramref name="obj" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="71116-239"><paramref name="obj" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-240">`obj` 必要があります`null`またはのインスタンス`Boolean`です。 それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="71116-240">`obj` must be `null` or an instance of `Boolean`; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="71116-241">このメソッドを実装する、<xref:System.IComparable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="71116-241">This method implements the <xref:System.IComparable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71116-242"><paramref name="obj" /> が <see cref="T:System.Boolean" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="71116-242"><paramref name="obj" /> is not a <see cref="T:System.Boolean" />.</span></span></exception>
        <altmember cref="M:System.Boolean.CompareTo(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71116-243">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.Boolean" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="71116-243">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Boolean" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (bool obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(bool obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(bool obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="71116-244">このインスタンスと比較する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="71116-244">A <see cref="T:System.Boolean" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="71116-245">対象のインスタンスが、指定した <see cref="T:System.Boolean" /> オブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="71116-245">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Boolean" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="71116-246"><paramref name="obj" /> の値がこのインスタンスと同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71116-246"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-247">このメソッドを実装する、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりもわずかに向上<xref:System.Boolean.Equals%2A>変換があるないため、`obj`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="71116-247">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Boolean.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Object)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="71116-248">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="71116-248">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="71116-249">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="71116-249">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="71116-250"><see langword="true" /> が <paramref name="obj" /> でこのインスタンスと同じ値を保持している場合は <see cref="T:System.Boolean" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71116-250"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Boolean" /> and has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-251">このメソッドは、<xref:System.Object.Equals%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="71116-251">This method overrides <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="FalseString">
      <MemberSignature Language="C#" Value="public static readonly string FalseString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string FalseString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.FalseString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FalseString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ FalseString;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71116-252">ブール値の <see langword="false" /> を文字列として表します。</span><span class="sxs-lookup"><span data-stu-id="71116-252">Represents the Boolean value <see langword="false" /> as a string.</span></span> <span data-ttu-id="71116-253">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="71116-253">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-254">このフィールドは、文字列"False"になります。</span><span class="sxs-lookup"><span data-stu-id="71116-254">This field is equal to the string "False".</span></span>  
  
 <span data-ttu-id="71116-255"><xref:System.Boolean.FalseString>プロパティの文字列形式を定義する、 `False` <xref:System.Boolean>書式設定および解析操作の値。</span><span class="sxs-lookup"><span data-stu-id="71116-255">The <xref:System.Boolean.FalseString> property defines the string representation of a `False` <xref:System.Boolean> value in formatting and parsing operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.TrueString" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71116-256">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="71116-256">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="71116-257">現在の <see cref="T:System.Boolean" /> のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="71116-257">A hash code for the current <see cref="T:System.Boolean" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-258"><xref:System.Boolean>クラスが実装する`true`、整数値として 1 つ、および`false`整数値としてゼロです。</span><span class="sxs-lookup"><span data-stu-id="71116-258">The <xref:System.Boolean> class implements `true` as the integer, one, and `false` as the integer, zero.</span></span> <span data-ttu-id="71116-259">ただし、特定のプログラミング言語を表す場合があります`true`と`false`以外の値にします。</span><span class="sxs-lookup"><span data-stu-id="71116-259">However, a particular programming language might represent `true` and `false` with other values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71116-260"><see cref="T:System.Boolean" /> 値の型の型コードを返します。</span><span class="sxs-lookup"><span data-stu-id="71116-260">Returns the type code for the <see cref="T:System.Boolean" /> value type.</span></span></summary>
        <returns><span data-ttu-id="71116-261">列挙型定数 <see cref="F:System.TypeCode.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="71116-261">The enumerated constant <see cref="F:System.TypeCode.Boolean" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(ReadOnlySpan&lt;char&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="71116-262">変換する値が含まれている文字列。</span><span class="sxs-lookup"><span data-stu-id="71116-262">A string containing the value to convert.</span></span></param>
        <summary><span data-ttu-id="71116-263">論理値の指定した文字列形式を、それと等価な <see cref="T:System.Boolean" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="71116-263">Converts the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span></span></summary>
        <returns>
          <span data-ttu-id="71116-264"><paramref name="value" /> が <see cref="F:System.Boolean.TrueString" /> と等価な場合、<see langword="true" />。<paramref name="value" /> が <see cref="F:System.Boolean.FalseString" /> と等価な場合、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71116-264"><see langword="true" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.TrueString" />; <see langword="false" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.FalseString" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-265">`value`必要に応じて前または空白の領域で最後のパラメーターは、いずれかを指定する必要があります<xref:System.Boolean.TrueString>または<xref:System.Boolean.FalseString>です。 それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="71116-265">The `value` parameter, optionally preceded or trailed by white space, must contain either <xref:System.Boolean.TrueString> or <xref:System.Boolean.FalseString>; otherwise, an exception is thrown.</span></span> <span data-ttu-id="71116-266">比較では区別されません。</span><span class="sxs-lookup"><span data-stu-id="71116-266">The comparison is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71116-267">次のコード例は、の使用を示しています。<xref:System.Boolean.Parse%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-267">The following code example illustrates the use of <xref:System.Boolean.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Boolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#2)]
 [!code-csharp[System.Boolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#2)]
 [!code-vb[System.Boolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71116-268"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="71116-268"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="71116-269"><paramref name="value" /> は <see cref="F:System.Boolean.TrueString" /> または <see cref="F:System.Boolean.FalseString" /> と等価ではありません。</span><span class="sxs-lookup"><span data-stu-id="71116-269"><paramref name="value" /> is not equivalent to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></exception>
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-270">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-270">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-271">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="71116-271">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="71116-272"><see langword="true" /> または <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71116-272"><see langword="true" /> or <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-273">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-273">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="71116-274">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="71116-274">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-275">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-275">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-276">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="71116-276">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="71116-277">このインスタンスの値が <see langword="true" /> の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="71116-277">1 if the value of this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-278">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-278">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="71116-279">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="71116-279">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="71116-280">推奨される代替手段が呼び出されて、<xref:System.Convert.ToByte%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-280">The recommended alternative is to call the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Convert.ToByte(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-281">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-281">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-282">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="71116-282">This conversion is not supported.</span></span> <span data-ttu-id="71116-283">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="71116-283">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="71116-284">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="71116-284">This conversion is not supported.</span></span> <span data-ttu-id="71116-285">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="71116-285">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="71116-286"><see cref="T:System.Boolean" /> 値を <see cref="T:System.Char" /> 値に変換しようとしました。</span><span class="sxs-lookup"><span data-stu-id="71116-286">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.Char" /> value.</span></span> <span data-ttu-id="71116-287">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="71116-287">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-288">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-288">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-289">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="71116-289">This conversion is not supported.</span></span> <span data-ttu-id="71116-290">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="71116-290">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="71116-291">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="71116-291">This conversion is not supported.</span></span> <span data-ttu-id="71116-292">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="71116-292">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="71116-293"><see cref="T:System.Boolean" /> 値を <see cref="T:System.DateTime" /> 値に変換しようとしました。</span><span class="sxs-lookup"><span data-stu-id="71116-293">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.DateTime" /> value.</span></span> <span data-ttu-id="71116-294">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="71116-294">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-295">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-295">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-296">このメンバーの説明については、<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="71116-296">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />..</span></span></summary>
        <returns><span data-ttu-id="71116-297">このインスタンスが <see langword="true" /> の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="71116-297">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-298">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-298">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="71116-299">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="71116-299">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="71116-300">推奨される代替手段が呼び出されて、<xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-300">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-301">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-301">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-302">このメンバーの説明については、<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="71116-302">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />..</span></span></summary>
        <returns><span data-ttu-id="71116-303">このインスタンスが <see langword="true" /> の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="71116-303">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-304">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-304">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="71116-305">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="71116-305">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="71116-306">推奨される代替手段が呼び出されて、<xref:System.Convert.ToDouble%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-306">The recommended alternative is to call the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-307">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-307">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-308">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="71116-308">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="71116-309">このインスタンスが <see langword="true" /> の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="71116-309">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-310">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-310">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="71116-311">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="71116-311">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="71116-312">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt16%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-312">The recommended alternative is to call the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-313">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-313">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-314">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="71116-314">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="71116-315">このインスタンスが <see langword="true" /> の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="71116-315">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-316">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-316">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="71116-317">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="71116-317">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="71116-318">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt32%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-318">The recommended alternative is to call the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-319">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-319">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-320">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="71116-320">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="71116-321">このインスタンスが <see langword="true" /> の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="71116-321">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-322">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-322">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="71116-323">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="71116-323">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="71116-324">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-324">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-325">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-325">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-326">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="71116-326">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="71116-327">このインスタンスが <see langword="true" /> の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="71116-327">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-328">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-328">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="71116-329">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="71116-329">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="71116-330">推奨される代替手段が呼び出されて、<xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-330">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-331">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-331">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-332">このメンバーの説明については、<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="71116-332">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />..</span></span></summary>
        <returns><span data-ttu-id="71116-333">このインスタンスが <see langword="true" /> の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="71116-333">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-334">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-334">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="71116-335">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="71116-335">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="71116-336">推奨される代替手段が呼び出されて、<xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-336">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="71116-337">必要な型。</span><span class="sxs-lookup"><span data-stu-id="71116-337">The desired type.</span></span></param>
        <param name="provider"><span data-ttu-id="71116-338">戻り値の書式に関するカルチャ固有の情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="71116-338">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="71116-339">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="71116-339">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="71116-340">この <see langword="Boolean" /> オブジェクトの値に相当する値を持つ、指定された型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="71116-340">An object of the specified type, with a value that is equivalent to the value of this <see langword="Boolean" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-341">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-341">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="71116-342">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="71116-342">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="71116-343">推奨される代替手段が呼び出されて、<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-343">The recommended alternative is to call the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71116-344"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="71116-344"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="71116-345">要求された型変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="71116-345">The requested type conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-346">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-346">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-347">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="71116-347">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="71116-348">このインスタンスが <see langword="true" /> の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="71116-348">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-349">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-349">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="71116-350">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="71116-350">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="71116-351">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-351">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
        <altmember cref="M:System.Convert.ToUInt16(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-352">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-352">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-353">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="71116-353">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="71116-354">このインスタンスが <see langword="true" /> の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="71116-354">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-355">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-355">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="71116-356">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="71116-356">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="71116-357">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-357">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Convert.ToUInt32(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-358">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="71116-358">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="71116-359">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="71116-359">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="71116-360">このインスタンスが <see langword="true" /> の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="71116-360">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-361">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="71116-361">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="71116-362">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="71116-362">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="71116-363">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-363">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Convert.ToUInt64(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71116-364">このインスタンスの値をそれと等価な文字列形式に変換します ("True" または "False")。</span><span class="sxs-lookup"><span data-stu-id="71116-364">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71116-365">このインスタンスの値をそれと等価な文字列形式に変換します ("True" または "False")。</span><span class="sxs-lookup"><span data-stu-id="71116-365">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span></span></summary>
        <returns><span data-ttu-id="71116-366">このインスタンスの値が <see langword="true" /> の場合は "True" (<see cref="F:System.Boolean.TrueString" /> プロパティの値)。このインスタンスの値が <see langword="false" /> の場合は "False" (<see cref="F:System.Boolean.FalseString" /> プロパティの値)。</span><span class="sxs-lookup"><span data-stu-id="71116-366">"True" (the value of the <see cref="F:System.Boolean.TrueString" /> property) if the value of this instance is <see langword="true" />, or "False" (the value of the <see cref="F:System.Boolean.FalseString" /> property) if the value of this instance is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-367">このメソッドは、定数を"True"または"False"を返します。</span><span class="sxs-lookup"><span data-stu-id="71116-367">This method returns the constants "True" or "False".</span></span>  
  
 <span data-ttu-id="71116-368">XML では、大文字小文字を区別し、XML 仕様が"true"および"false"は、ブール値の有効なセットを認識しているに注意してください。</span><span class="sxs-lookup"><span data-stu-id="71116-368">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="71116-369">によって、文字列が返される場合、<xref:System.Boolean.ToString>メソッドは、XML ファイルに書き込むにはその<xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType>小文字に変換するメソッドを最初に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="71116-369">If the string returned by the <xref:System.Boolean.ToString> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71116-370">次の例を示しています、<xref:System.Boolean.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="71116-370">The following example illustrates the <xref:System.Boolean.ToString%2A> method.</span></span>  
  
 [!code-cpp[System.Boolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#1)]
 [!code-csharp[System.Boolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#1)]
 [!code-vb[System.Boolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="71116-371">(予約済み) <see cref="T:System.IFormatProvider" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="71116-371">(Reserved) An <see cref="T:System.IFormatProvider" /> object.</span></span></param>
        <summary><span data-ttu-id="71116-372">このインスタンスの値をそれと等価な文字列形式に変換します ("True" または "False")。</span><span class="sxs-lookup"><span data-stu-id="71116-372">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span></span></summary>
        <returns>
          <span data-ttu-id="71116-373">このインスタンスの値が <see langword="true" /> の場合は <see cref="F:System.Boolean.TrueString" />。このインスタンスの値が <see langword="false" /> の場合は <see cref="F:System.Boolean.FalseString" />。</span><span class="sxs-lookup"><span data-stu-id="71116-373"><see cref="F:System.Boolean.TrueString" /> if the value of this instance is <see langword="true" />, or <see cref="F:System.Boolean.FalseString" /> if the value of this instance is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-374">`provider`パラメーターは予約されています。</span><span class="sxs-lookup"><span data-stu-id="71116-374">The `provider` parameter is reserved.</span></span> <span data-ttu-id="71116-375">このメソッドの実行には参加しません。</span><span class="sxs-lookup"><span data-stu-id="71116-375">It does not participate in the execution of this method.</span></span> <span data-ttu-id="71116-376">つまり、<xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>メソッドを持つほとんどのメソッドとは異なり、`provider`パラメーターはカルチャに固有の設定が反映されません。</span><span class="sxs-lookup"><span data-stu-id="71116-376">This means that the <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method, unlike most methods with a `provider` parameter, does not reflect culture-specific settings.</span></span>  
  
 <span data-ttu-id="71116-377">このメソッドは、定数を"True"または"False"を返します。</span><span class="sxs-lookup"><span data-stu-id="71116-377">This method returns the constants "True" or "False".</span></span> <span data-ttu-id="71116-378">XML では、大文字小文字を区別し、XML 仕様が"true"および"false"は、ブール値の有効なセットを認識しているに注意してください。</span><span class="sxs-lookup"><span data-stu-id="71116-378">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="71116-379">場合、<xref:System.String>によって返されるオブジェクト、<xref:System.Boolean.ToString%28System.IFormatProvider%29>メソッドは、XML ファイルに書き込むにはその<xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType>小文字に変換するメソッドを最初に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="71116-379">If the <xref:System.String> object returned by the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrueString">
      <MemberSignature Language="C#" Value="public static readonly string TrueString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string TrueString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.TrueString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TrueString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ TrueString;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71116-380">ブール値の <see langword="true" /> を文字列として表します。</span><span class="sxs-lookup"><span data-stu-id="71116-380">Represents the Boolean value <see langword="true" /> as a string.</span></span> <span data-ttu-id="71116-381">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="71116-381">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-382">このフィールドは、文字列"True"になります。</span><span class="sxs-lookup"><span data-stu-id="71116-382">This field is equal to the string "True".</span></span>  
  
 <span data-ttu-id="71116-383"><xref:System.Boolean.TrueString>プロパティの文字列形式を定義する、 `True` <xref:System.Boolean>書式設定および解析操作の値。</span><span class="sxs-lookup"><span data-stu-id="71116-383">The <xref:System.Boolean.TrueString> property defines the string representation of a `True` <xref:System.Boolean> value in formatting and parsing operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryFormat(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.ReadOnlySpan{System.Char},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="71116-384">変換する値が含まれている文字列。</span><span class="sxs-lookup"><span data-stu-id="71116-384">A string containing the value to convert.</span></span></param>
        <param name="result"><span data-ttu-id="71116-385">変換が成功した場合は、このメソッドから戻るときに、<c>value</c> が <see cref="F:System.Boolean.TrueString" /> と等しければ <see langword="true" />、<c>value</c> が <see cref="F:System.Boolean.FalseString" /> と等しければ <see langword="false" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="71116-385">When this method returns, if the conversion succeeded, contains <see langword="true" /> if <c>value</c> is equal to <see cref="F:System.Boolean.TrueString" /> or <see langword="false" /> if <c>value</c> is equal to <see cref="F:System.Boolean.FalseString" />.</span></span> <span data-ttu-id="71116-386">変換に失敗した場合は、<see langword="false" /> を格納します。</span><span class="sxs-lookup"><span data-stu-id="71116-386">If the conversion failed, contains <see langword="false" />.</span></span> <span data-ttu-id="71116-387"><c>value</c> が <see langword="null" /> であるか、<see cref="F:System.Boolean.TrueString" /> または <see cref="F:System.Boolean.FalseString" /> のいずれかのフィールドの値と等しくない場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="71116-387">The conversion fails if <c>value</c> is <see langword="null" /> or is not equal to the value of either the <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" /> field.</span></span></param>
        <summary><span data-ttu-id="71116-388">論理値の指定した文字列形式を等価の <see cref="T:System.Boolean" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="71116-388">Tries to convert the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span></span> <span data-ttu-id="71116-389">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="71116-389">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="71116-390"><see langword="true" /> が正常に変換された場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71116-390"><see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71116-391"><xref:System.Boolean.TryParse%2A>などのメソッドは、<xref:System.Boolean.Parse%2A>メソッドを除く、<xref:System.Boolean.TryParse%2A>変換が失敗した場合、メソッドが例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="71116-391">The <xref:System.Boolean.TryParse%2A> method is like the <xref:System.Boolean.Parse%2A> method, except the <xref:System.Boolean.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="71116-392">`value`パラメーターの前にまたは空白文字が続くことができます。</span><span class="sxs-lookup"><span data-stu-id="71116-392">The `value` parameter can be preceded or followed by white space.</span></span> <span data-ttu-id="71116-393">比較は、大文字と小文字を表す序数です。</span><span class="sxs-lookup"><span data-stu-id="71116-393">The comparison is ordinal and case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71116-394">次の例では、<xref:System.Boolean.TryParse%2A>文字列の配列を解析します。</span><span class="sxs-lookup"><span data-stu-id="71116-394">The following example calls the <xref:System.Boolean.TryParse%2A> method to parse an array of strings.</span></span> <span data-ttu-id="71116-395">解析する文字列が"True"である場合にのみ、解析操作が成功したことに注意してください (の値、<xref:System.Boolean.TrueString>フィールド) または"False"(の値、<xref:System.Boolean.FalseString>フィールド)、大文字と小文字でします。</span><span class="sxs-lookup"><span data-stu-id="71116-395">Note that the parse operation succeeds only if the string to be parsed is "True" (the value of the <xref:System.Boolean.TrueString> field) or "False" (the value of the <xref:System.Boolean.FalseString> field) in a case-insensitive comparison.</span></span>  
  
 [!code-csharp[System.Boolean.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.tryparse/cs/tryparseex.cs#1)]
 [!code-vb[System.Boolean.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.tryparse/vb/tryparseex.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Parse(System.String)" />
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
  </Members>
</Type>