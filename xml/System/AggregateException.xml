<Type Name="AggregateException" FullName="System.AggregateException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8a1f7783d72af925eaa75bdef024e8f0901f36c8" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58723237" /></Metadata><TypeSignature Language="C#" Value="public class AggregateException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AggregateException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.AggregateException" />
  <TypeSignature Language="VB.NET" Value="Public Class AggregateException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class AggregateException : Exception" />
  <TypeSignature Language="F#" Value="type AggregateException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {InnerExceptionCount}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {InnerExceptions.Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fcba7-101">アプリケーションの実行中に発生する 1 つ以上のエラーを表します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-101">Represents one or more errors that occur during application execution.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcba7-102"><xref:System.AggregateException> 単一のスロー対象の例外オブジェクトに複数のエラーの統合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="fcba7-102"><xref:System.AggregateException> is used to consolidate multiple failures into a single, throwable exception object.</span></span> <span data-ttu-id="fcba7-103">広く使用されて、[タスク並列ライブラリ (TPL)](~/docs/standard/parallel-programming/task-parallel-library-tpl.md)と[Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md)します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-103">It is used extensively in the [Task Parallel Library (TPL)](~/docs/standard/parallel-programming/task-parallel-library-tpl.md) and [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md).</span></span> <span data-ttu-id="fcba7-104">詳細については、「[例外処理](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md)」および「[方法: PLINQ クエリの例外を処理する](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fcba7-104">For more information, see [Exception Handling](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md) and [How to: Handle Exceptions in a PLINQ Query](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md).</span></span> <span data-ttu-id="fcba7-105">詳細については、次を参照してください。、[集計例外](https://msdn.microsoft.com/en-us/magazine/ee321571.aspx).NET の問題のブログ エントリ。</span><span class="sxs-lookup"><span data-stu-id="fcba7-105">For additional information, see the [Aggregating Exceptions](https://msdn.microsoft.com/en-us/magazine/ee321571.aspx) entry in the .NET Matters blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcba7-106">次の例のキャッチ、<xref:System.AggregateException>例外と呼び出し、<xref:System.AggregateException.Handle%2A>が含まれている各例外を処理するメソッド。</span><span class="sxs-lookup"><span data-stu-id="fcba7-106">The following example catches the <xref:System.AggregateException> exception and calls the <xref:System.AggregateException.Handle%2A> method to handle each exception it contains.</span></span> <span data-ttu-id="fcba7-107">コンパイルして、最初の例を実行している`task1`変数が発生する必要があります、<xref:System.AggregateException>オブジェクトを含む、<xref:System.UnauthorizedAccessException>例外。</span><span class="sxs-lookup"><span data-stu-id="fcba7-107">Compiling and running the example with the first `task1` variable should result in an <xref:System.AggregateException> object that contains an <xref:System.UnauthorizedAccessException> exception.</span></span> <span data-ttu-id="fcba7-108">その行をコメント アウト、コメントを解除、2 つ目`task1`変数、およびコンパイルおよび実行例は、<xref:System.AggregateException>オブジェクトを含む、<xref:System.IndexOutOfRangeException>例外。</span><span class="sxs-lookup"><span data-stu-id="fcba7-108">Commenting out that line, uncommenting the second `task1` variable, and compiling and running the example produces an <xref:System.AggregateException> object that contains an <xref:System.IndexOutOfRangeException> exception.</span></span>  
  
 [!code-csharp[System.AggregateException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.aggregateexception.class/cs/exception1.cs#1)]
 [!code-vb[System.AggregateException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.aggregateexception.class/vb/exception1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="fcba7-109">すべてのパブリックおよびプロテクト メンバー<see cref="T:System.AggregateException" />スレッド セーフでは、複数のスレッドから同時に使用される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fcba7-109">All public and protected members of <see cref="T:System.AggregateException" /> are thread-safe and may be used concurrently from multiple threads.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fcba7-110"><see cref="T:System.AggregateException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-110">Initializes a new instance of the <see cref="T:System.AggregateException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcba7-111">エラーを説明するシステム提供のメッセージを使用して、<see cref="T:System.AggregateException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-111">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a system-supplied message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcba7-112">このコンス トラクターの初期化、<xref:System.Exception.Message%2A>など、エラーを説明するシステム提供のメッセージの新しいインスタンスのプロパティ"System.aggregateexception::1 つまたは複数のエラーが発生しました。"</span><span class="sxs-lookup"><span data-stu-id="fcba7-112">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "System.AggregateException: One or more errors occurred."</span></span> <span data-ttu-id="fcba7-113">このメッセージには、現在のシステムのカルチャが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="fcba7-113">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="fcba7-114"><xref:System.AggregateException> のインスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-114">The following table shows the initial property values for an instance of <xref:System.AggregateException>.</span></span>  
  
|<span data-ttu-id="fcba7-115">プロパティ</span><span class="sxs-lookup"><span data-stu-id="fcba7-115">Property</span></span>|<span data-ttu-id="fcba7-116">[値]</span><span class="sxs-lookup"><span data-stu-id="fcba7-116">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="fcba7-117">`null`。</span><span class="sxs-lookup"><span data-stu-id="fcba7-117">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="fcba7-118">ローカライズされたエラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="fcba7-118">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="fcba7-119">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="fcba7-119">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (System.Collections.Generic.IEnumerable&lt;Exception&gt; innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerExceptions As IEnumerable(Of Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ innerExceptions);" />
      <MemberSignature Language="F#" Value="new AggregateException : seq&lt;Exception&gt; -&gt; AggregateException" Usage="new System.AggregateException innerExceptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerExceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="innerExceptions"><span data-ttu-id="fcba7-120">現在の例外の原因である例外。</span><span class="sxs-lookup"><span data-stu-id="fcba7-120">The exceptions that are the cause of the current exception.</span></span></param>
        <summary><span data-ttu-id="fcba7-121">この例外の原因である内部例外への参照を使用して、<see cref="T:System.AggregateException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-121">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with references to the inner exceptions that are the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fcba7-122"><paramref name="innerExceptions" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="fcba7-122">The <paramref name="innerExceptions" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fcba7-123"><paramref name="innerExceptions" /> の要素が null です。</span><span class="sxs-lookup"><span data-stu-id="fcba7-123">An element of <paramref name="innerExceptions" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (params Exception[] innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception[] innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.Exception[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray innerExceptions As Exception())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(... cli::array &lt;Exception ^&gt; ^ innerExceptions);" />
      <MemberSignature Language="F#" Value="new AggregateException : Exception[] -&gt; AggregateException" Usage="new System.AggregateException innerExceptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerExceptions" Type="System.Exception[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="innerExceptions"><span data-ttu-id="fcba7-124">現在の例外の原因である例外。</span><span class="sxs-lookup"><span data-stu-id="fcba7-124">The exceptions that are the cause of the current exception.</span></span></param>
        <summary><span data-ttu-id="fcba7-125">この例外の原因である内部例外への参照を使用して、<see cref="T:System.AggregateException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-125">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with references to the inner exceptions that are the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fcba7-126"><paramref name="innerExceptions" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="fcba7-126">The <paramref name="innerExceptions" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fcba7-127"><paramref name="innerExceptions" /> の要素が null です。</span><span class="sxs-lookup"><span data-stu-id="fcba7-127">An element of <paramref name="innerExceptions" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new AggregateException : string -&gt; AggregateException" Usage="new System.AggregateException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="fcba7-128">例外を説明するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="fcba7-128">The message that describes the exception.</span></span> <span data-ttu-id="fcba7-129">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="fcba7-129">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="fcba7-130">エラーを説明する指定したメッセージを使用して、<see cref="T:System.AggregateException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-130">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcba7-131"><xref:System.AggregateException> のインスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-131">The following table shows the initial property values for an instance of <xref:System.AggregateException>.</span></span>  
  
|<span data-ttu-id="fcba7-132">プロパティ</span><span class="sxs-lookup"><span data-stu-id="fcba7-132">Property</span></span>|<span data-ttu-id="fcba7-133">[値]</span><span class="sxs-lookup"><span data-stu-id="fcba7-133">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="fcba7-134">`null`。</span><span class="sxs-lookup"><span data-stu-id="fcba7-134">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="fcba7-135">`message` に指定されたエラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="fcba7-135">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="fcba7-136">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="fcba7-136">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AggregateException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AggregateException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new AggregateException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; AggregateException" Usage="new System.AggregateException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="fcba7-137">シリアル化されたオブジェクト データを保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fcba7-137">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="fcba7-138">転送元または転送先に関するコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="fcba7-138">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="fcba7-139">シリアル化したデータを使用して、<see cref="T:System.AggregateException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-139">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcba7-140">このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="fcba7-140">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="fcba7-141">詳細については、次を参照してください。 [XML および SOAP シリアル化](~/docs/standard/serialization/xml-and-soap-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-141">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fcba7-142"><paramref name="info" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="fcba7-142">The <paramref name="info" /> argument is null.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="fcba7-143">例外のシリアル化を正しく解除できませんでした。</span><span class="sxs-lookup"><span data-stu-id="fcba7-143">The exception could not be deserialized correctly.</span></span></exception>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="fcba7-144">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="fcba7-144">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (string message, System.Collections.Generic.IEnumerable&lt;Exception&gt; innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerExceptions As IEnumerable(Of Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::String ^ message, System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ innerExceptions);" />
      <MemberSignature Language="F#" Value="new AggregateException : string * seq&lt;Exception&gt; -&gt; AggregateException" Usage="new System.AggregateException (message, innerExceptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerExceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="fcba7-145">例外の原因を説明するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="fcba7-145">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerExceptions"><span data-ttu-id="fcba7-146">現在の例外の原因である例外。</span><span class="sxs-lookup"><span data-stu-id="fcba7-146">The exceptions that are the cause of the current exception.</span></span></param>
        <summary><span data-ttu-id="fcba7-147">指定したエラー メッセージと、この例外の原因である内部例外への参照を使用して、<see cref="T:System.AggregateException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-147">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified error message and references to the inner exceptions that are the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fcba7-148"><paramref name="innerExceptions" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="fcba7-148">The <paramref name="innerExceptions" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fcba7-149"><paramref name="innerExceptions" /> の要素が null です。</span><span class="sxs-lookup"><span data-stu-id="fcba7-149">An element of <paramref name="innerExceptions" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new AggregateException : string * Exception -&gt; AggregateException" Usage="new System.AggregateException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="fcba7-150">例外を説明するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="fcba7-150">The message that describes the exception.</span></span> <span data-ttu-id="fcba7-151">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="fcba7-151">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <param name="innerException"><span data-ttu-id="fcba7-152">現在の例外の原因となった例外。</span><span class="sxs-lookup"><span data-stu-id="fcba7-152">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="fcba7-153"><paramref name="innerException" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-153">If the <paramref name="innerException" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="fcba7-154">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.AggregateException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-154">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcba7-155">前の例外の直接の結果としてスローされる例外については、<xref:System.Exception.InnerException%2A> プロパティに、前の例外への参照が格納されます。</span><span class="sxs-lookup"><span data-stu-id="fcba7-155">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="fcba7-156"><xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。`null` プロパティによって内部例外値がコンストラクターに渡されなかった場合は、<xref:System.Exception.InnerException%2A> を返します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-156">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="fcba7-157"><xref:System.AggregateException> のインスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-157">The following table shows the initial property values for an instance of <xref:System.AggregateException>.</span></span>  
  
|<span data-ttu-id="fcba7-158">プロパティ</span><span class="sxs-lookup"><span data-stu-id="fcba7-158">Property</span></span>|<span data-ttu-id="fcba7-159">[値]</span><span class="sxs-lookup"><span data-stu-id="fcba7-159">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="fcba7-160">`null`。</span><span class="sxs-lookup"><span data-stu-id="fcba7-160">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="fcba7-161">`message` に指定されたエラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="fcba7-161">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fcba7-162"><paramref name="innerException" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="fcba7-162">The <paramref name="innerException" /> argument is null.</span></span></exception>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="fcba7-163">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="fcba7-163">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (string message, params Exception[] innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception[] innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.String,System.Exception[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, ParamArray innerExceptions As Exception())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::String ^ message, ... cli::array &lt;Exception ^&gt; ^ innerExceptions);" />
      <MemberSignature Language="F#" Value="new AggregateException : string * Exception[] -&gt; AggregateException" Usage="new System.AggregateException (message, innerExceptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerExceptions" Type="System.Exception[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="fcba7-164">例外の原因を説明するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="fcba7-164">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerExceptions"><span data-ttu-id="fcba7-165">現在の例外の原因である例外。</span><span class="sxs-lookup"><span data-stu-id="fcba7-165">The exceptions that are the cause of the current exception.</span></span></param>
        <summary><span data-ttu-id="fcba7-166">指定したエラー メッセージと、この例外の原因である内部例外への参照を使用して、<see cref="T:System.AggregateException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-166">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified error message and references to the inner exceptions that are the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fcba7-167"><paramref name="innerExceptions" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="fcba7-167">The <paramref name="innerExceptions" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fcba7-168"><paramref name="innerExceptions" /> の要素が null です。</span><span class="sxs-lookup"><span data-stu-id="fcba7-168">An element of <paramref name="innerExceptions" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public AggregateException Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AggregateException Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Function Flatten () As AggregateException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException ^ Flatten();" />
      <MemberSignature Language="F#" Value="member this.Flatten : unit -&gt; AggregateException" Usage="aggregateException.Flatten " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AggregateException</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcba7-169"><see cref="T:System.AggregateException" /> インスタンスを単一の新しいインスタンスに平坦化します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-169">Flattens an <see cref="T:System.AggregateException" /> instances into a single, new instance.</span></span></summary>
        <returns><span data-ttu-id="fcba7-170">新しい平坦化された <see cref="T:System.AggregateException" />。</span><span class="sxs-lookup"><span data-stu-id="fcba7-170">A new, flattened <see cref="T:System.AggregateException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcba7-171">その例外がラップされたタスクにアタッチされた子タスクが例外をスローする場合、<xref:System.AggregateException>独自でその例外をラップする親タスクに伝達される前に例外<xref:System.AggregateException>反映する前に例外を呼び出し元のスレッド。</span><span class="sxs-lookup"><span data-stu-id="fcba7-171">If a task has an attached child task that throws an exception, that exception is wrapped in an <xref:System.AggregateException> exception before it is propagated to the parent task, which wraps that exception in its own <xref:System.AggregateException> exception before it propagates it back to the calling thread.</span></span> <span data-ttu-id="fcba7-172">このような場合は、<xref:System.AggregateException.InnerExceptions%2A>のプロパティ、<xref:System.AggregateException>によってキャッチされた例外を<xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType>、 <xref:System.Threading.Tasks.Task.Wait*>、<xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=nameWithType>または<xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType>メソッドは、1 つ以上含まれています<xref:System.AggregateException>インスタンス、元の例外ではなくする。違反が発生しました。</span><span class="sxs-lookup"><span data-stu-id="fcba7-172">In such cases, the <xref:System.AggregateException.InnerExceptions%2A> property of the <xref:System.AggregateException> exception that is caught by the <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType>, <xref:System.Threading.Tasks.Task.Wait*>, <xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=nameWithType> or <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method contains one or more <xref:System.AggregateException> instances, not the original exceptions that caused the fault.</span></span> <span data-ttu-id="fcba7-173">入れ子になったを反復処理しなくてもすむようにする<xref:System.AggregateException>使用することができます、例外、<xref:System.AggregateException.Flatten%2A>すべてを削除するメソッド、入れ子になった<xref:System.AggregateException>例外、ように、 <xref:System.AggregateException.InnerExceptions%2A> 、返されたプロパティ<xref:System.AggregateException>元がオブジェクトに含まれています例外。</span><span class="sxs-lookup"><span data-stu-id="fcba7-173">To avoid having to iterate over nested <xref:System.AggregateException> exceptions, you can use the <xref:System.AggregateException.Flatten%2A> method to remove all the nested <xref:System.AggregateException> exceptions, so that the <xref:System.AggregateException.InnerExceptions%2A> property of the returned <xref:System.AggregateException> object contains the original exceptions.</span></span>  
  
 <span data-ttu-id="fcba7-174">このメソッドを再帰的にすべてのインスタンスを平坦化<xref:System.AggregateException>、現在の例外が内部例外<xref:System.AggregateException>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="fcba7-174">This method recursively flattens all instances of  <xref:System.AggregateException> exceptions that are inner exceptions of the current <xref:System.AggregateException> instance .</span></span> <span data-ttu-id="fcba7-175">新しい内部例外が返される<xref:System.AggregateException>例外ツリーからのすべての内部例外の和集合をルートと、現在は<xref:System.AggregateException>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="fcba7-175">The inner exceptions returned in the new <xref:System.AggregateException> are the union of all the inner exceptions from exception tree rooted at the current <xref:System.AggregateException> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcba7-176">次の例では、入れ子の <xref:System.AggregateException> インスタンスが 1 つのループで平坦化され、処理されています。</span><span class="sxs-lookup"><span data-stu-id="fcba7-176">In the following example, nested <xref:System.AggregateException> instances are flattened and handled in just one loop.</span></span>  
  
 [!code-csharp[TPL_Exceptions#22](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/flatten2.cs#22)]
 [!code-vb[TPL_Exceptions#22](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/flatten2.vb#22)]  
  
 <span data-ttu-id="fcba7-177">また、次の例のように、<xref:System.AggregateException.Flatten%2A?displayProperty=nameWithType> メソッドを使用して、単一の <xref:System.AggregateException> インスタンス内の複数のタスクによってスローされた複数の <xref:System.AggregateException> インスタンスから内部例外を再スローすることもできます。</span><span class="sxs-lookup"><span data-stu-id="fcba7-177">You can also use the <xref:System.AggregateException.Flatten%2A?displayProperty=nameWithType> method to rethrow the inner exceptions from multiple <xref:System.AggregateException> instances thrown by multiple tasks in a single <xref:System.AggregateException> instance, as the following example shows.</span></span>  
  
 [!code-csharp[TPL_Exceptions#13](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/taskexceptions2.cs#13)]
 [!code-vb[TPL_Exceptions#13](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/taskexceptions2.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md"><span data-ttu-id="fcba7-178">例外処理 (タスク並列ライブラリ)</span><span class="sxs-lookup"><span data-stu-id="fcba7-178">Exception Handling (Task Parallel Library)</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/p/?LinkId=259617"><span data-ttu-id="fcba7-179">例外を集約します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-179">Aggregating Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public override Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Exception ^ GetBaseException();" />
      <MemberSignature Language="F#" Value="override this.GetBaseException : unit -&gt; Exception" Usage="aggregateException.GetBaseException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcba7-180">この例外の根本的な原因である <see cref="T:System.AggregateException" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-180">Returns the <see cref="T:System.AggregateException" /> that is the root cause of this exception.</span></span></summary>
        <returns><span data-ttu-id="fcba7-181">この例外の根本的な原因である <see cref="T:System.AggregateException" />。</span><span class="sxs-lookup"><span data-stu-id="fcba7-181">The <see cref="T:System.AggregateException" /> that is the root cause of this exception.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="aggregateException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="fcba7-182">シリアル化されたオブジェクト データを保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fcba7-182">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="fcba7-183">転送元または転送先に関するコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="fcba7-183">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="fcba7-184">シリアル化したデータを使用して、<see cref="T:System.AggregateException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-184">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcba7-185">このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="fcba7-185">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="fcba7-186">詳細については、次を参照してください。 [XML および SOAP シリアル化](~/docs/standard/serialization/xml-and-soap-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-186">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fcba7-187"><paramref name="info" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="fcba7-187">The <paramref name="info" /> argument is null.</span></span></exception>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="fcba7-188">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="fcba7-188">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public void Handle (Func&lt;Exception,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Handle(class System.Func`2&lt;class System.Exception, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Handle (predicate As Func(Of Exception, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Handle(Func&lt;Exception ^, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="member this.Handle : Func&lt;Exception, bool&gt; -&gt; unit" Usage="aggregateException.Handle predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Exception,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate"><span data-ttu-id="fcba7-189">それぞれの例外に対して実行する述語。</span><span class="sxs-lookup"><span data-stu-id="fcba7-189">The predicate to execute for each exception.</span></span> <span data-ttu-id="fcba7-190">この述語は、処理される <see cref="T:System.Exception" /> を引数として受け取り、例外が処理されたかどうかを示すブール値を返します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-190">The predicate accepts as an argument the <see cref="T:System.Exception" /> to be processed and returns a Boolean to indicate whether the exception was handled.</span></span></param>
        <summary><span data-ttu-id="fcba7-191">この <see cref="T:System.Exception" /> に含まれている各 <see cref="T:System.AggregateException" /> に対してハンドラーを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-191">Invokes a handler on each <see cref="T:System.Exception" /> contained by this <see cref="T:System.AggregateException" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcba7-192">呼び出しごと、`predicate`を返します。 true または false を示すかどうか、<xref:System.Exception>が処理されました。</span><span class="sxs-lookup"><span data-stu-id="fcba7-192">Each invocation of the `predicate` returns true or false to indicate whether the <xref:System.Exception> was handled.</span></span> <span data-ttu-id="fcba7-193">すべての呼び出し後に例外が処理不能となった場合は、すべてのハンドルされない例外に格納されます新しい<xref:System.AggregateException>これがスローされます。</span><span class="sxs-lookup"><span data-stu-id="fcba7-193">After all invocations, if any exceptions went unhandled, all unhandled exceptions will be put into a new <xref:System.AggregateException> which will be thrown.</span></span> <span data-ttu-id="fcba7-194">それ以外の場合、<xref:System.AggregateException.Handle%2A>メソッドは単に返します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-194">Otherwise, the <xref:System.AggregateException.Handle%2A> method simply returns.</span></span> <span data-ttu-id="fcba7-195">場合の任意の呼び出し、`predicate`例外がスロー詳細例外の処理を停止し、スローされた例外としてを直ちに伝達-です。</span><span class="sxs-lookup"><span data-stu-id="fcba7-195">If any invocations of the `predicate` throws an exception, it will halt the processing of any more exceptions and immediately propagate the thrown exception as-is.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcba7-196">通常、キャッチする例外ハンドラー、<xref:System.AggregateException>例外は、`foreach`ループ (C#) または`For Each`内の各例外を処理する (Visual Basic) ではループの<xref:System.AggregateException.InnerExceptions%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="fcba7-196">Ordinarily, an exception handler that catches an <xref:System.AggregateException> exception uses a `foreach` loop (in C#) or `For Each` loop (in Visual Basic) to handle each exception in its <xref:System.AggregateException.InnerExceptions%2A> collection.</span></span> <span data-ttu-id="fcba7-197">代わりに、次の例を使用して、<xref:System.AggregateException.Handle%2A>各例外、およびが再スローします唯一の例外を処理するメソッドを`CustomException`インスタンス。</span><span class="sxs-lookup"><span data-stu-id="fcba7-197">Instead, the following example uses the <xref:System.AggregateException.Handle%2A> method to handle each exception, and only re-throws exceptions that are not `CustomException` instances.</span></span>  
  
 [!code-csharp[TPL_Exceptions#16](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/handlemethod2.cs#16)]
 [!code-vb[TPL_Exceptions#16](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/handlemethod2.vb#16)]  
  
 <span data-ttu-id="fcba7-198">使用するより詳細な例を次に、<xref:System.AggregateException.Handle%2A>の特別な処理を提供するメソッドを<xref:System.UnauthorizedAccessException>ファイルを列挙する場合。</span><span class="sxs-lookup"><span data-stu-id="fcba7-198">The following is a more complete example that uses the <xref:System.AggregateException.Handle%2A> method to provide special handling for an <xref:System.UnauthorizedAccessException> when enumerating files.</span></span>  
  
 [!code-csharp[TPL_Exceptions#12](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/taskexceptions.cs#12)]
 [!code-vb[TPL_Exceptions#12](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/taskexceptions.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fcba7-199"><paramref name="predicate" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="fcba7-199">The <paramref name="predicate" /> argument is null.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="fcba7-200">この <see cref="T:System.AggregateException" /> に含まれている例外は処理されませんでした。</span><span class="sxs-lookup"><span data-stu-id="fcba7-200">An exception contained by this <see cref="T:System.AggregateException" /> was not handled.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InnerExceptions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Exception&gt; InnerExceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Exception&gt; InnerExceptions" />
      <MemberSignature Language="DocId" Value="P:System.AggregateException.InnerExceptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerExceptions As ReadOnlyCollection(Of Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;Exception ^&gt; ^ InnerExceptions { System::Collections::ObjectModel::ReadOnlyCollection&lt;Exception ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerExceptions : System.Collections.ObjectModel.ReadOnlyCollection&lt;Exception&gt;" Usage="System.AggregateException.InnerExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcba7-201">現在の例外の原因となった <see cref="T:System.Exception" /> インスタンスの読み取り専用コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-201">Gets a read-only collection of the <see cref="T:System.Exception" /> instances that caused the current exception.</span></span></summary>
        <value><span data-ttu-id="fcba7-202">読み取り専用のコレクション、<see cref="T:System.Exception" />現在の例外の原因となったのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="fcba7-202">A read-only collection of the <see cref="T:System.Exception" /> instances that caused the current exception.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.AggregateException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.AggregateException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="aggregateException.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcba7-203">現在の <see cref="T:System.AggregateException" /> の文字列表現を作成して返します。</span><span class="sxs-lookup"><span data-stu-id="fcba7-203">Creates and returns a string representation of the current <see cref="T:System.AggregateException" />.</span></span></summary>
        <returns><span data-ttu-id="fcba7-204">現在の例外の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="fcba7-204">A string representation of the current exception.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>