<Type Name="LocalDataStoreSlot" FullName="System.LocalDataStoreSlot">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e641c106b3852dea1c5ad702247daf66765000ef" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69405715" /></Metadata><TypeSignature Language="C#" Value="public sealed class LocalDataStoreSlot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalDataStoreSlot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.LocalDataStoreSlot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalDataStoreSlot" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalDataStoreSlot sealed" />
  <TypeSignature Language="F#" Value="type LocalDataStoreSlot = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ローカル データを格納するメモリ スロットをカプセル化します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework には、スレッドローカルストレージ (TLS) を使用するための2つのメカニズム (スレッド相対静的フィールドとデータスロット) が用意されています。  
  
-   スレッド相対静的フィールドは`static` 、 <xref:System.ThreadStaticAttribute>属性で`Shared`マークされたフィールド (Visual Basic 内のフィールド) です。 データスロットより優れたパフォーマンスを提供し、コンパイル時の型チェックを有効にします。  
  
-   データスロットは、スレッド相対静的フィールドよりも低速で使いにくい。 また、データは型<xref:System.Object>として格納されるため、使用する前に正しい型にキャストする必要があります。 ただし、コンパイル時に静的フィールドを割り当てるのに十分な情報がない場合は、データスロットを使用できます。  
  
 TLS の使用方法の詳細につい[ては、「Thread Local Storage (スレッドローカルストレージ)」を参照してください。スレッド相対静的フィールドとデータスロット](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)。  
  
 同様に、.NET Framework にはコンテキストローカルストレージを使用するための2つのメカニズムがあります。コンテキスト相対静的フィールドとデータスロットです。 コンテキスト相対静的フィールドは、 <xref:System.ContextStaticAttribute>属性でマークされた静的フィールドです。 これら2つのメカニズムを使用する間のトレードオフは、スレッド相対静的フィールドとデータスロットを使用する場合のトレードオフに似ています。  
  
 この<xref:System.LocalDataStoreSlot>構造体は、スレッドとコンテキストがスレッド固有のデータとコンテキスト固有のデータを格納するために使用できるローカルストアのメモリ機構として機能します。 共通言語ランタイムは、作成時に各プロセスに複数スロットのデータストア配列を割り当てます。 スレッドまたはコンテキストは、データストアにデータスロットを割り当てたり、スロットにデータ値を格納および取得したり、スレッドまたはコンテキストオブジェクトの有効期限が切れた後で再利用できるようにデータスロットを解放したりするために、さまざまな関数を呼び出します。  
  
 データスロットはスレッドまたはコンテキストごとに一意です。これらの値は、スレッドまたはコンテキストオブジェクト間で共有されません。 データスロットは、名前またはインデックス番号によって割り当てることができます。  
  
 ローカルデータの格納の詳細について<xref:System.Threading.Thread>は<xref:System.Runtime.Remoting.Contexts.Context>、「」または「」を参照してください。 <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType>クラスは<xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType>、 、、<xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType>、などのメソッドで使用されます。独自のメソッドを使用する必要はありません。 <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType> <xref:System.LocalDataStoreSlot>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LocalDataStoreSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.LocalDataStoreSlot.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LocalDataStoreSlot ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="localDataStoreSlot.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ガベージ コレクターが <see cref="T:System.LocalDataStoreSlot" /> オブジェクトを再利用しているときに、リソースが解放され、他のクリーンアップ操作が確実に実行されるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のオブジェクトを<xref:System.LocalDataStoreSlot.Finalize%2A>完了する準備が整うと、ガベージコレクターはを呼び出します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
  </Members>
</Type>
