<Type Name="LocalDataStoreSlot" FullName="System.LocalDataStoreSlot">
  <TypeSignature Language="C#" Value="public sealed class LocalDataStoreSlot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalDataStoreSlot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.LocalDataStoreSlot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalDataStoreSlot" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalDataStoreSlot sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="86644-101">ローカル データを格納するメモリ スロットをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="86644-101">Encapsulates a memory slot to store local data.</span></span> <span data-ttu-id="86644-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="86644-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86644-103">.NET Framework には、スレッド ローカル ストレージ (TLS) を使用するための 2 つのメカニズムが用意されています: スレッド相対静的フィールド、およびデータ スロット。</span><span class="sxs-lookup"><span data-stu-id="86644-103">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields, and data slots.</span></span>  
  
-   <span data-ttu-id="86644-104">スレッド相対静的フィールドは`static`フィールド (`Shared` Visual Basic でのフィールド) でマークされている、<xref:System.ThreadStaticAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="86644-104">Thread-relative static fields are `static` fields (`Shared` fields in Visual Basic) that are marked with the <xref:System.ThreadStaticAttribute> attribute.</span></span> <span data-ttu-id="86644-105">データ スロットよりも優れたパフォーマンスを提供およびコンパイル時の型チェックを有効にします。</span><span class="sxs-lookup"><span data-stu-id="86644-105">They provide better performance than data slots, and enable compile-time type checking.</span></span>  
  
-   <span data-ttu-id="86644-106">データ スロットは、低速とよりスレッド相対静的フィールドを使用するメッセージが不適切です。</span><span class="sxs-lookup"><span data-stu-id="86644-106">Data slots are slower and more awkward to use than thread-relative static fields.</span></span> <span data-ttu-id="86644-107">また、データが型として格納された<xref:System.Object>ので、使用する前に、正しい型にキャストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="86644-107">Also, data is stored as type <xref:System.Object>, so you must cast it to the correct type before using it.</span></span> <span data-ttu-id="86644-108">ただし、静的フィールドを割り当てるには、コンパイル時の十分な情報がある場合は、データ スロットを使用できます。</span><span class="sxs-lookup"><span data-stu-id="86644-108">However, you can use data slots when you have insufficient information at compile time to allocate static fields.</span></span>  
  
 <span data-ttu-id="86644-109">詳細については、TLS を使用して、次を参照してください。[スレッド ローカル ストレージ: スレッド相対静的フィールドとデータ スロット](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)です。</span><span class="sxs-lookup"><span data-stu-id="86644-109">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="86644-110">同様に、.NET Framework は、ローカル ストレージのコンテキストを使用するための 2 つのメカニズムを提供します。 コンテキストの相対静的フィールドとデータ スロット。</span><span class="sxs-lookup"><span data-stu-id="86644-110">Similarly, the .NET Framework provides two mechanisms for using context local storage: context-relative static fields and data slots.</span></span> <span data-ttu-id="86644-111">コンテキストの相対静的フィールドが静的でマークされている、<xref:System.ContextStaticAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="86644-111">Context-relative static fields are static fields that are marked with the <xref:System.ContextStaticAttribute> attribute.</span></span> <span data-ttu-id="86644-112">これら 2 つのメカニズムを使用して間のトレードオフは、スレッド相対静的フィールドとデータ スロットを使用する間のトレードオフに似ています。</span><span class="sxs-lookup"><span data-stu-id="86644-112">The trade-offs between using these two mechanisms are similar to the tradeoffs between using thread-relative static fields and data slots.</span></span>  
  
 <span data-ttu-id="86644-113"><xref:System.LocalDataStoreSlot>構造として、ローカルがスレッドのメモリのメカニズムを保存し、それぞれのスレッドおよびコンテキストに固有のデータを格納するコンテキストを使用できます。</span><span class="sxs-lookup"><span data-stu-id="86644-113">The <xref:System.LocalDataStoreSlot> structure serves as a local store memory mechanism that threads and contexts can use to store thread-specific and context-specific data, respectively.</span></span> <span data-ttu-id="86644-114">共通言語ランタイムは、作成時に各プロセスにマルチ スロットのデータ ストア配列を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="86644-114">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="86644-115">スレッドまたはコンテキストの呼び出しをさまざまな関数をデータ ストア内のデータ スロットを割り当てるに保存して、スロット内のデータ値を取得、およびデータ スロットを解放するには、スレッドまたはコンテキスト オブジェクトの有効期限が切れた後が再利用します。</span><span class="sxs-lookup"><span data-stu-id="86644-115">The thread or context calls various functions to allocate a data slot in the data store, to store and retrieve a data value in the slot, and to free a data slot for reuse after the thread or context object expires.</span></span>  
  
 <span data-ttu-id="86644-116">データ スロットがスレッドまたはコンテキストごとに一意ですその値は、スレッドまたはコンテキストのオブジェクト間で共有されません。</span><span class="sxs-lookup"><span data-stu-id="86644-116">The data slots are unique per thread or context; their values are not shared between the thread or context objects.</span></span> <span data-ttu-id="86644-117">名前またはインデックス番号、データ スロットを割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="86644-117">Data slots can be allocated by a name or by an index number.</span></span>  
  
 <span data-ttu-id="86644-118">ローカル データの保存の詳細については、次を参照してください。<xref:System.Threading.Thread>または<xref:System.Runtime.Remoting.Contexts.Context>です。</span><span class="sxs-lookup"><span data-stu-id="86644-118">For more information about storing local data, see <xref:System.Threading.Thread> or <xref:System.Runtime.Remoting.Contexts.Context>.</span></span> <span data-ttu-id="86644-119"><xref:System.LocalDataStoreSlot>など、クラスがメソッドで使用される<xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType>、 <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType>、 <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType>、および<xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType>; がないいずれかを独自のメソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="86644-119">The <xref:System.LocalDataStoreSlot> class is used with methods such as <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType>, and <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType>; it does not have any methods of its own that you need to use.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LocalDataStoreSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.LocalDataStoreSlot.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LocalDataStoreSlot ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86644-120">ガベージ コレクターが <see cref="T:System.LocalDataStoreSlot" /> を再利用しているときに、リソースが解放され、他のクリーンアップ操作が確実に実行されるようにします。</span><span class="sxs-lookup"><span data-stu-id="86644-120">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.LocalDataStoreSlot" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86644-121">ガベージ コレクター<xref:System.LocalDataStoreSlot.Finalize%2A>現在のオブジェクトが完了する準備ができています。</span><span class="sxs-lookup"><span data-stu-id="86644-121">The garbage collector calls <xref:System.LocalDataStoreSlot.Finalize%2A> when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
  </Members>
</Type>