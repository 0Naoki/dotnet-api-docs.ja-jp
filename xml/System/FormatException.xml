<Type Name="FormatException" FullName="System.FormatException">
  <TypeSignature Language="C#" Value="public class FormatException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FormatException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.FormatException" />
  <TypeSignature Language="VB.NET" Value="Public Class FormatException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormatException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6580c-101">引数の形式が無効である場合、または[複合書式指定文字列](~/docs/standard/base-types/composite-formatting.md)が整形式でない場合にスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="6580c-101">The exception that is thrown when the format of an argument is invalid, or when a [composite format string](~/docs/standard/base-types/composite-formatting.md) is not well formed.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6580c-102">A<xref:System.FormatException>原因は次のいずれかの例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="6580c-102">A <xref:System.FormatException> exception can be thrown for one of the following reasons:</span></span>  
  
-   <span data-ttu-id="6580c-103">その他の任意のデータ型に文字列を変換するメソッドを呼び出し、文字列は、必要なパターンに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="6580c-103">In a call to a method that converts a string to some other data type, the string doesn't conform to the required pattern.</span></span> <span data-ttu-id="6580c-104">これは一部のメソッドを呼び出すときに通常に発生、<xref:System.Convert>クラスおよび`Parse`と`ParseExact`いくつかの型のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6580c-104">This typically occurs when calling some methods of the <xref:System.Convert> class and the `Parse` and `ParseExact` methods of some types.</span></span>  
  
     <span data-ttu-id="6580c-105">ほとんどの場合、変換する文字列がユーザーによって入力またはファイルから読み取られた場合に特にを使用して、`try/catch`をブロックし、処理、<xref:System.FormatException>変換が成功した場合に例外です。</span><span class="sxs-lookup"><span data-stu-id="6580c-105">In most cases, particularly if the string that you're converting is input by a user or read from a file, you should use a `try/catch` block and handle the <xref:System.FormatException> exception if the conversion is unsuccessful.</span></span> <span data-ttu-id="6580c-106">呼び出して変換メソッドの呼び出しを置き換えることも、`TryParse`または`TryParseExact`メソッドを 1 つが存在する場合。</span><span class="sxs-lookup"><span data-stu-id="6580c-106">You can also replace the call to the conversion method with a call to a `TryParse` or `TryParseExact` method, if one exists.</span></span> <span data-ttu-id="6580c-107">ただし、<xref:System.FormatException>定義済みまたはハード コーディングされた文字列を解析しようとしている場合にスローされる例外は、プログラム エラーを示します。</span><span class="sxs-lookup"><span data-stu-id="6580c-107">However, a <xref:System.FormatException> exception that is thrown when you're trying to parse a predefined or hard-coded string indicates a program error.</span></span> <span data-ttu-id="6580c-108">この場合、エラーを修正しないで、例外を処理します。</span><span class="sxs-lookup"><span data-stu-id="6580c-108">In this case, you should correct the error rather than handle the exception.</span></span>  
  
     <span data-ttu-id="6580c-109">文字列で、次の種類への変換、<xref:System>名前空間をスローすることが、<xref:System.FormatException>例外。</span><span class="sxs-lookup"><span data-stu-id="6580c-109">The conversion of a string to the following types in the <xref:System> namespace can throw a <xref:System.FormatException> exception:</span></span>  
  
    -   <span data-ttu-id="6580c-110"><xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="6580c-110"><xref:System.Boolean>.</span></span> <span data-ttu-id="6580c-111"><xref:System.Boolean.Parse%28System.String%29?displayProperty=nameWithType>と<xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType>メソッドには、文字列"True"、"true"に変換する、"False"または"false"が必要とします。</span><span class="sxs-lookup"><span data-stu-id="6580c-111">The <xref:System.Boolean.Parse%28System.String%29?displayProperty=nameWithType> and <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> methods require the string to be converted to be "True", "true", "False", or "false".</span></span> <span data-ttu-id="6580c-112">その他の値をスロー、<xref:System.FormatException>例外。</span><span class="sxs-lookup"><span data-stu-id="6580c-112">Any other value throws a <xref:System.FormatException> exception.</span></span>  
  
    -   <span data-ttu-id="6580c-113"><xref:System.DateTime> および <xref:System.DateTimeOffset>。</span><span class="sxs-lookup"><span data-stu-id="6580c-113"><xref:System.DateTime> and <xref:System.DateTimeOffset>.</span></span> <span data-ttu-id="6580c-114">すべての日付と時刻のデータは特定のカルチャの書式指定規則に基づいて解釈されます。 現在のスレッド カルチャ (または、場合によっては、アプリケーション ドメインの現在のカルチャ) で、インバリアント カルチャまたは指定されたカルチャ。</span><span class="sxs-lookup"><span data-stu-id="6580c-114">All date and time data is interpreted based on the formatting conventions of a particular culture: either the current thread culture (or, in some cases, the current application domain culture), the invariant culture, or a specified culture.</span></span> <span data-ttu-id="6580c-115">呼び出すと、<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>と<xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>メソッド、日付と時刻のデータが従う必要がありますも*正確に*1 つまたは複数が指定したパターンに[標準書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)または[カスタム書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)メソッドの呼び出しで引数として提供します。</span><span class="sxs-lookup"><span data-stu-id="6580c-115">When you call the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> and <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> methods, date and time data must also conform *exactly* to a pattern specified by one or more [standard format strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) or [custom format strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) that are provided as arguments in the method call.</span></span> <span data-ttu-id="6580c-116">予期されたカルチャ固有のパターンに準拠していない場合、<xref:System.FormatException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="6580c-116">If it doesn't conform to an expected culture-specific pattern, a <xref:System.FormatException> exception is thrown.</span></span> <span data-ttu-id="6580c-117">つまり、1 つのシステムのカルチャに固有の書式に保存された日付と時刻のデータは、別のシステムで正常に解析できません可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6580c-117">This means that date and time data saved in a culture-specific format on one system might not parse successfully on another system.</span></span>  
  
         <span data-ttu-id="6580c-118">日付と時刻の解析の詳細については、次を参照してください。[解析の日付と時刻文字列](~/docs/standard/base-types/parsing-datetime.md)と例外をスローしたメソッドのドキュメントをします。</span><span class="sxs-lookup"><span data-stu-id="6580c-118">For more information about parsing dates and times, see [Parsing Date and Time Strings](~/docs/standard/base-types/parsing-datetime.md) and the documentation for the method that threw the exception.</span></span>  
  
    -   <span data-ttu-id="6580c-119">**GUIDs.**</span><span class="sxs-lookup"><span data-stu-id="6580c-119">**GUIDs.**</span></span> <span data-ttu-id="6580c-120">GUID の文字列形式の 32 の 16 進数字 (0 から F) で構成されている必要があり、によって 5 つの形式の出力のいずれかである必要があります、<xref:System.Guid.ToString%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6580c-120">The string representation of a GUID must consist of 32 hexadecimal digits (0-F), and must be in one of the five formats output by the <xref:System.Guid.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6580c-121">詳細については、<xref:System.Guid.Parse%2A?displayProperty=nameWithType> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="6580c-121">For more information, see the <xref:System.Guid.Parse%2A?displayProperty=nameWithType> method.</span></span>  
  
    -   <span data-ttu-id="6580c-122">**すべて署名済みの整数、符号なし整数、および浮動小数点型を含む数値型。**</span><span class="sxs-lookup"><span data-stu-id="6580c-122">**Numeric types, including all signed integers, unsigned integers, and floating-point types.**</span></span> <span data-ttu-id="6580c-123">解析する文字列は必要がありますラテン文字の数字 0 ~ 9 で構成されます。</span><span class="sxs-lookup"><span data-stu-id="6580c-123">The string to be parsed must consist of the Latin digits 0-9.</span></span> <span data-ttu-id="6580c-124">正または負の記号、桁区切り記号、桁区切り記号および通貨記号を許可されても可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6580c-124">A positive or negative sign, decimal separator, group separators, and currency symbol may also be permitted.</span></span> <span data-ttu-id="6580c-125">常にスローの文字を含むその他の文字列を解析しようとしています、<xref:System.FormatException>例外。</span><span class="sxs-lookup"><span data-stu-id="6580c-125">Trying to parse a string that contains any other character always throws a <xref:System.FormatException> exception.</span></span>  
  
         <span data-ttu-id="6580c-126">すべての数値の文字列は、特定のカルチャの書式指定規則に基づいて解釈されます。 現在のスレッド カルチャ (または、場合によっては、アプリケーション ドメインの現在のカルチャ) で、インバリアント カルチャまたは指定されたカルチャ。</span><span class="sxs-lookup"><span data-stu-id="6580c-126">All numeric strings are interpreted based on the formatting conventions of a particular culture: either the current thread culture (or, in some cases, the current application domain culture), the invariant culture, or a specified culture.</span></span> <span data-ttu-id="6580c-127">その結果、1 つのカルチャの規則を使用して解析される数値の文字列が別の規則を使用する場合に失敗します。</span><span class="sxs-lookup"><span data-stu-id="6580c-127">As a result, a numeric string that is parsed by using the conventions of one culture might fail when using the conventions of another.</span></span>  
  
         <span data-ttu-id="6580c-128">数値の文字列の解析の詳細については、次を参照してください。[数値文字列の解析](~/docs/standard/base-types/parsing-numeric.md)と例外をスローした特定のメソッドのドキュメントをします。</span><span class="sxs-lookup"><span data-stu-id="6580c-128">For more information about parsing numeric strings, see [Parsing Numeric Strings](~/docs/standard/base-types/parsing-numeric.md) and the documentation for the specific method that threw the exception.</span></span>  
  
    -   <span data-ttu-id="6580c-129">**時間間隔。**</span><span class="sxs-lookup"><span data-stu-id="6580c-129">**Time intervals.**</span></span> <span data-ttu-id="6580c-130">固定のカルチャに依存しない形式で、または現在のスレッド カルチャによって (または、場合によっては、アプリケーション ドメインの現在のカルチャ) で定義されているカルチャ形式で解析する文字列がある必要があります、インバリアント カルチャまたは指定されたカルチャ。</span><span class="sxs-lookup"><span data-stu-id="6580c-130">The string to be parsed must be either in fixed culture-insensitive format or in a culture-sensitive format defined by the current thread culture (or, in some cases, the current application domain culture), the invariant culture, or a specified culture.</span></span> <span data-ttu-id="6580c-131">文字列は、適切な形式は、または場合は、最低限、日数、時間単位ではありません、時間間隔の分のコンポーネントが存在しない場合は、解析メソッドをスロー、<xref:System.FormatException>例外。</span><span class="sxs-lookup"><span data-stu-id="6580c-131">If the string isn't in an appropriate format, or if, at the minimum, the days, hours, and minutes components of the time interval aren't present, the parsing method throws a <xref:System.FormatException> exception.</span></span> <span data-ttu-id="6580c-132">詳細については、ドキュメントを参照して、<xref:System.TimeSpan>例外をスローしたメソッドを解析します。</span><span class="sxs-lookup"><span data-stu-id="6580c-132">For more information, see the documentation for the <xref:System.TimeSpan> parsing method that threw the exception.</span></span>  
  
-   <span data-ttu-id="6580c-133">型が実装する、<xref:System.IFormattable>インターフェイス オブジェクトを文字列形式に変換する方法を定義する書式指定文字列をサポートして、無効な形式の文字列を使用します。</span><span class="sxs-lookup"><span data-stu-id="6580c-133">A type implements the <xref:System.IFormattable> interface, which supports format strings that define how an object is converted to its string representation, and an invalid format string is used.</span></span> <span data-ttu-id="6580c-134">これは、書式設定操作で最も一般的なです。</span><span class="sxs-lookup"><span data-stu-id="6580c-134">This is most common in a formatting operation.</span></span> <span data-ttu-id="6580c-135">次の例では、"Q"標準書式指定文字列は、複合書式指定文字列、数値の書式設定に使用されます。</span><span class="sxs-lookup"><span data-stu-id="6580c-135">In the following example, the "Q" standard format string is used in a composite format string to format a number.</span></span> <span data-ttu-id="6580c-136">ただし、"Q"が無効です[標準書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="6580c-136">However, "Q" is not a valid [standard format string](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span>  
  
     [!code-csharp[System.FormatException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable1.cs#7)]
     [!code-vb[System.FormatException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable1.vb#7)]  
  
     <span data-ttu-id="6580c-137">コードのエラーでは、この例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="6580c-137">This exception results from a coding error.</span></span> <span data-ttu-id="6580c-138">エラーを解決するには、書式指定文字列を削除するか、有効なものを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6580c-138">To correct the error, either remove the format string or substitute a valid one.</span></span> <span data-ttu-id="6580c-139">次の例では、"C"(通貨) 書式指定文字列に無効な書式指定文字列を置き換えることで、エラーを修正します。</span><span class="sxs-lookup"><span data-stu-id="6580c-139">The following example corrects the error by replacing the invalid format string with the "C" (currency) format string.</span></span>  
  
     [!code-csharp[System.FormatException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable2.cs#8)]
     [!code-vb[System.FormatException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable2.vb#8)]  
  
     <span data-ttu-id="6580c-140">A<xref:System.FormatException>などのメソッドを解析して例外をスローすることも<xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>と<xref:System.Guid.ParseExact%2A?displayProperty=nameWithType>、書式指定文字列で指定されたパターンに正確に準拠するように解析する文字列を必要とします。</span><span class="sxs-lookup"><span data-stu-id="6580c-140">A <xref:System.FormatException> exception can also be thrown by parsing methods, such as <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> and <xref:System.Guid.ParseExact%2A?displayProperty=nameWithType>, that require the string to be parsed to conform exactly to the pattern specified by a format string.</span></span> <span data-ttu-id="6580c-141">次の例では、"G"標準書式指定文字列で指定されたパターンに準拠するように GUID の文字列形式が必要です。</span><span class="sxs-lookup"><span data-stu-id="6580c-141">In the following example, the string representation of a GUID is expected to conform to the pattern specified by the "G" standard format string.</span></span> <span data-ttu-id="6580c-142">ただし、<xref:System.Guid>の構造体の実装<xref:System.IFormattable>"G"書式指定文字列をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="6580c-142">However, the <xref:System.Guid> structure's implementation of <xref:System.IFormattable> does not support the "G" format string.</span></span>  
  
     [!code-csharp[System.FormatException#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable3.cs#9)]
     [!code-vb[System.FormatException#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable3.vb#9)]  
  
     <span data-ttu-id="6580c-143">この例外は、コーディング エラーによっても発生します。</span><span class="sxs-lookup"><span data-stu-id="6580c-143">This exception also results from a coding error.</span></span> <span data-ttu-id="6580c-144">これを修正するなど、正確な形式を必要としない解析メソッドを呼び出します<xref:System.DateTime.Parse%2A?displayProperty=nameWithType>または<xref:System.Guid.Parse%2A?displayProperty=nameWithType>、または有効な書式文字列を置換します。</span><span class="sxs-lookup"><span data-stu-id="6580c-144">To correct it, call a parsing method that doesn’t require a precise format, such as <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> or <xref:System.Guid.Parse%2A?displayProperty=nameWithType>, or substitute a valid format string.</span></span> <span data-ttu-id="6580c-145">次の例は、呼び出すことによって、エラーを修正、<xref:System.Guid.Parse%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6580c-145">The following example corrects the error by calling the <xref:System.Guid.Parse%2A?displayProperty=nameWithType> method.</span></span>  
  
     [!code-csharp[System.FormatException#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable4.cs#10)]
     [!code-vb[System.FormatException#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable4.vb#10)]  
  
-   <span data-ttu-id="6580c-146">1 つ以上の書式項目のインデックスの[複合書式指定文字列](~/docs/standard/base-types/composite-formatting.md)がオブジェクトのリストまたはパラメーターの配列内の項目のインデックスよりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="6580c-146">One or more of the indexes of the format items in a [composite format string](~/docs/standard/base-types/composite-formatting.md) is greater than the indexes of the items in the object list or parameter array.</span></span> <span data-ttu-id="6580c-147">次の例では、書式指定文字列で書式指定項目の最大インデックスは 3 です。</span><span class="sxs-lookup"><span data-stu-id="6580c-147">In the following example, the largest index of a format item in the format string is 3.</span></span> <span data-ttu-id="6580c-148">オブジェクトの一覧内の項目のインデックスが 0 から始まるため、この書式指定文字列には、オブジェクトの一覧には次の 4 つの項目が必要です。</span><span class="sxs-lookup"><span data-stu-id="6580c-148">Because the indexes of items in the object list are zero-based, this format string would require the object list to have four items.</span></span> <span data-ttu-id="6580c-149">その代わりに、3 つだけ`dat`、 `temp`、および`scale`でコードを実行しているため、<xref:System.FormatException>実行時に例外: です。</span><span class="sxs-lookup"><span data-stu-id="6580c-149">Instead, it has only three, `dat`, `temp`, and `scale`, so the code results in a <xref:System.FormatException> exception at run time:.</span></span>  
  
     [!code-csharp[System.FormatException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example1.cs#1)]
     [!code-vb[System.FormatException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example1.vb#1)]  
  
     <span data-ttu-id="6580c-150">ここで、<xref:System.FormatException>例外は、開発者のエラーの結果。</span><span class="sxs-lookup"><span data-stu-id="6580c-150">In this case, the <xref:System.FormatException> exception is a result of developer error.</span></span> <span data-ttu-id="6580c-151">なくするように修正で処理される、`try/catch`オブジェクトの一覧内の各項目が、書式指定項目のインデックスに対応していることを確認することによりブロックされます。</span><span class="sxs-lookup"><span data-stu-id="6580c-151">It should be corrected rather than handled in a `try/catch` block by making sure that each item in the object list corresponds to the index of a format item.</span></span> <span data-ttu-id="6580c-152">この例を修正するを参照する 2 番目の書式指定項目のインデックスを変更、`dat`変数、およびデクリメントいずれかでは、各後続の書式項目のインデックス。</span><span class="sxs-lookup"><span data-stu-id="6580c-152">To correct this example, change the index of the second format item to refer to the `dat` variable, and decrement the index of each subsequent format item by one.</span></span>  
  
     [!code-csharp[System.FormatException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example2.cs#2)]
     [!code-vb[System.FormatException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example2.vb#2)]  
  
-   <span data-ttu-id="6580c-153">複合書式指定文字列は、適切な形式はありません。</span><span class="sxs-lookup"><span data-stu-id="6580c-153">The composite format string isn't well-formed.</span></span> <span data-ttu-id="6580c-154">この場合、<xref:System.FormatException>例外は、開発者のエラーの結果では常にします。</span><span class="sxs-lookup"><span data-stu-id="6580c-154">When this happens, the <xref:System.FormatException> exception is always a result of developer error.</span></span> <span data-ttu-id="6580c-155">これは、必要がある修正ではなくで処理される、`try/catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="6580c-155">It should be corrected rather than handled in a `try/catch` block.</span></span>  
  
     <span data-ttu-id="6580c-156">ように次の例には、例外がスローされます、文字列リテラルに中かっこを指定しようとしています。</span><span class="sxs-lookup"><span data-stu-id="6580c-156">Trying to include literal braces in a string, as the following example does, will throw the exception.</span></span>  
  
     [!code-csharp[System.String.Format#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#23)]
     [!code-vb[System.String.Format#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#23)]  
  
     <span data-ttu-id="6580c-157">複合書式指定文字列にリテラルのかっこを含めるための推奨される手法は、オブジェクトの一覧に追加し、書式項目を使用して、結果の文字列に挿入するにです。</span><span class="sxs-lookup"><span data-stu-id="6580c-157">The recommended technique for including literal braces in a composite format string is to include them in the object list and use format items to insert them into the result string.</span></span> <span data-ttu-id="6580c-158">たとえば、次に示すように以前の複合書式指定文字列を変更できます。</span><span class="sxs-lookup"><span data-stu-id="6580c-158">For example, you can modify the previous composite format string as shown here.</span></span>  
  
     [!code-csharp[System.String.Format#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#24)]
     [!code-vb[System.String.Format#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#24)]  
  
     <span data-ttu-id="6580c-159">例外は、書式指定文字列には、入力ミスが含まれている場合にもスローされます。</span><span class="sxs-lookup"><span data-stu-id="6580c-159">The exception is also thrown if your format string contains a typo.</span></span> <span data-ttu-id="6580c-160">次の呼び出し、<xref:System.String.Format%2A?displayProperty=nameWithType>メソッドは、右中かっこを省略し、右角かっこで始めかっこのペアします。</span><span class="sxs-lookup"><span data-stu-id="6580c-160">The following call to the <xref:System.String.Format%2A?displayProperty=nameWithType> method omits a closing brace and pairs an opening brace with a closing bracket.</span></span>  
  
     [!code-csharp[System.FormatException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example3.cs#3)]
     [!code-vb[System.FormatException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example3.vb#3)]  
  
     <span data-ttu-id="6580c-161">エラーを修正するには、すべてを開くと、終わりかっこと一致することを確認します。</span><span class="sxs-lookup"><span data-stu-id="6580c-161">To correct the error, ensure that all opening and closing braces correspond.</span></span>  
  
     [!code-csharp[System.FormatException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example3.cs#4)]
     [!code-vb[System.FormatException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example3.vb#4)]  
  
-   <span data-ttu-id="6580c-162">複合書式指定を厳密に型指定されたパラメーター配列としてのメソッドでオブジェクトの一覧を指定した、<xref:System.FormatException>例外は、1 つまたは複数の書式項目のインデックスがオブジェクトの一覧の引数の数を超えたことを示します。</span><span class="sxs-lookup"><span data-stu-id="6580c-162">You've supplied the object list in a composite formatting method as a strongly typed parameter array, and the <xref:System.FormatException> exception indicates that the index of one or more format items exceeds the number of arguments in the object list.</span></span> <span data-ttu-id="6580c-163">これは、配列型の間の明示的な変換が存在しないため、そのため、コンパイラはパラメーター配列ではなく、単一の引数として、配列を扱いますが発生します。</span><span class="sxs-lookup"><span data-stu-id="6580c-163">This occurs because no explicit conversion between array types exists, so instead the compiler treats the array as a single argument rather than as a parameter array.</span></span> <span data-ttu-id="6580c-164">たとえば、次の呼び出し、<xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>メソッドがスローされます、<xref:System.FormatException>例外、書式指定項目のインデックスの最大値は 3、および型のパラメーター配列が<xref:System.Int32>は 4 つの要素があります。</span><span class="sxs-lookup"><span data-stu-id="6580c-164">For example, the following call to the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method throws a <xref:System.FormatException> exception, although the highest index of the format items is 3, and the parameter array of type <xref:System.Int32> has four elements.</span></span>  
  
     [!code-csharp[System.FormatException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/qa1.cs#5)]
     [!code-vb[System.FormatException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/qa1.vb#5)]  
  
     <span data-ttu-id="6580c-165">この例外を処理するには、代わりにするには、その原因を排除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6580c-165">Instead of handling this exception, you should eliminate its cause.</span></span> <span data-ttu-id="6580c-166">Visual Basic でも C# の場合は、整数の配列をオブジェクト配列に変換できます、ため、複合書式指定メソッドを呼び出す前に自分で変換を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6580c-166">Because neither Visual Basic nor C# can convert an integer array to an object array, you have to perform the conversion yourself before calling the composite formatting method.</span></span> <span data-ttu-id="6580c-167">次の例では、1 つの実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="6580c-167">The following example provides one implementation.</span></span>  
  
     [!code-csharp[System.FormatException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/qa2.cs#6)]
     [!code-vb[System.FormatException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/qa2.vb#6)]  
  
 <span data-ttu-id="6580c-168"><xref:System.FormatException> 値は 0x80131537 HRESULT COR_E_FORMAT を使用します。</span><span class="sxs-lookup"><span data-stu-id="6580c-168"><xref:System.FormatException> uses the HRESULT COR_E_FORMAT, which has the value 0x80131537.</span></span>  
  
 <span data-ttu-id="6580c-169"><xref:System.FormatException>クラスから派生<xref:System.Exception>し、一意のメンバーは追加されません。</span><span class="sxs-lookup"><span data-stu-id="6580c-169">The <xref:System.FormatException> class derives from  <xref:System.Exception> and adds no unique members.</span></span> <span data-ttu-id="6580c-170">インスタンスの初期プロパティ値の一覧については<xref:System.FormatException>を参照してください、<xref:System.FormatException.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="6580c-170">For a list of initial property values for an instance of <xref:System.FormatException>, see the <xref:System.FormatException.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6580c-171"><see cref="T:System.FormatException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6580c-171">Initializes a new instance of the <see cref="T:System.FormatException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6580c-172"><see cref="T:System.FormatException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6580c-172">Initializes a new instance of the <see cref="T:System.FormatException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6580c-173">このコンス トラクター、 <xref:System.Exception.Message%2A> 「形式が無効です」など、エラーを説明するシステム提供のメッセージの新しいインスタンスのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="6580c-173">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Invalid format."</span></span> <span data-ttu-id="6580c-174">このメッセージには、現在のシステムのカルチャが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="6580c-174">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="6580c-175"><xref:System.FormatException> のインスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="6580c-175">The following table shows the initial property values for an instance of <xref:System.FormatException>.</span></span>  
  
|<span data-ttu-id="6580c-176">プロパティ</span><span class="sxs-lookup"><span data-stu-id="6580c-176">Property</span></span>|<span data-ttu-id="6580c-177">[値]</span><span class="sxs-lookup"><span data-stu-id="6580c-177">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="6580c-178">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="6580c-178">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="6580c-179">ローカライズされたエラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="6580c-179">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="6580c-180">エラーを説明するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="6580c-180">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="6580c-181">指定したエラー メッセージを使用して、<see cref="T:System.FormatException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6580c-181">Initializes a new instance of the <see cref="T:System.FormatException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6580c-182">このコンス トラクター、<xref:System.Exception.Message%2A?displayProperty=nameWithType>の新しい例外を使用して、プロパティ、`message`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6580c-182">This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=nameWithType> property of the new exception using the `message` parameter.</span></span> <span data-ttu-id="6580c-183">`message` の内容は、ユーザーが理解できる内容にします。</span><span class="sxs-lookup"><span data-stu-id="6580c-183">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="6580c-184">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="6580c-184">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="6580c-185"><xref:System.FormatException> のインスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="6580c-185">The following table shows the initial property values for an instance of <xref:System.FormatException>.</span></span>  
  
|<span data-ttu-id="6580c-186">プロパティ</span><span class="sxs-lookup"><span data-stu-id="6580c-186">Property</span></span>|<span data-ttu-id="6580c-187">[値]</span><span class="sxs-lookup"><span data-stu-id="6580c-187">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="6580c-188">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="6580c-188">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="6580c-189">エラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="6580c-189">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormatException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormatException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="6580c-190">シリアル化されたオブジェクト データを保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6580c-190">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="6580c-191">転送元または転送先に関するコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="6580c-191">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="6580c-192">シリアル化したデータを使用して、<see cref="T:System.FormatException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6580c-192">Initializes a new instance of the <see cref="T:System.FormatException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6580c-193">このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6580c-193">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="6580c-194">例外の原因を説明するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="6580c-194">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="6580c-195">現在の例外の原因となった例外。</span><span class="sxs-lookup"><span data-stu-id="6580c-195">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="6580c-196"><c>innerException</c> パラメーターが null 参照 (Visual Basic の場合は <see langword="Nothing" />) でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="6580c-196">If the <c>innerException</c> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="6580c-197">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.FormatException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6580c-197">Initializes a new instance of the <see cref="T:System.FormatException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6580c-198">前の例外の直接の結果としてスローされる例外については、<xref:System.Exception.InnerException%2A> プロパティに、前の例外への参照が格納されます。</span><span class="sxs-lookup"><span data-stu-id="6580c-198">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="6580c-199"><xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。`Nothing` プロパティによって内部例外値がコンストラクターに渡されなかった場合は、null 参照 (Visual Basic の場合は <xref:System.Exception.InnerException%2A>) を返します。</span><span class="sxs-lookup"><span data-stu-id="6580c-199">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="6580c-200"><xref:System.FormatException> のインスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="6580c-200">The following table shows the initial property values for an instance of <xref:System.FormatException>.</span></span>  
  
|<span data-ttu-id="6580c-201">プロパティ</span><span class="sxs-lookup"><span data-stu-id="6580c-201">Property</span></span>|<span data-ttu-id="6580c-202">[値]</span><span class="sxs-lookup"><span data-stu-id="6580c-202">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="6580c-203">内部例外の参照。</span><span class="sxs-lookup"><span data-stu-id="6580c-203">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="6580c-204">エラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="6580c-204">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>