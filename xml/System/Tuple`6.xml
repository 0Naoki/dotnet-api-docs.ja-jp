<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;">
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`6&lt;T1, T2, T3, T4, T5, T6&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`6" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="bc0af-101">組の 1 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="bc0af-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="bc0af-102">組の 2 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="bc0af-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="bc0af-103">組の 3 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="bc0af-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="bc0af-104">組の 4 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="bc0af-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="bc0af-105">組の 5 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="bc0af-105">The type of the tuple's fifth component.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="bc0af-106">組の 6 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="bc0af-106">The type of the tuple's sixth component.</span></span></typeparam>
    <summary><span data-ttu-id="bc0af-107">6 つ組、すなわちセクスチュープルを表します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-107">Represents a 6-tuple, or sextuple.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-108">組は、特定の数と一連の値を持つデータ構造です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-108">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="bc0af-109"><xref:System.Tuple%606>クラスを表します。 6 つ組、または sextuple、6 つのコンポーネントが含まれる組です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-109">The <xref:System.Tuple%606> class represents a 6-tuple, or sextuple, which is a tuple that has six components.</span></span>  
  
 <span data-ttu-id="bc0af-110">インスタンス化することができます、<xref:System.Tuple%606>を呼び出して、オブジェクト、<xref:System.Tuple%606.%23ctor%2A>または静的な<xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-110">You can instantiate a <xref:System.Tuple%606> object by calling either the <xref:System.Tuple%606.%23ctor%2A> or the static  <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bc0af-111">組のコンポーネントの値を取得するには、読み取り専用を使用して<xref:System.Tuple%606.Item1%2A>、 <xref:System.Tuple%606.Item2%2A>、 <xref:System.Tuple%606.Item3%2A>、 <xref:System.Tuple%606.Item4%2A>、 <xref:System.Tuple%606.Item5%2A>、および<xref:System.Tuple%606.Item6%2A>インスタンス プロパティです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-111">You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%606.Item1%2A>, <xref:System.Tuple%606.Item2%2A>, <xref:System.Tuple%606.Item3%2A>, <xref:System.Tuple%606.Item4%2A>, <xref:System.Tuple%606.Item5%2A>, and <xref:System.Tuple%606.Item6%2A> instance properties.</span></span>  
  
 <span data-ttu-id="bc0af-112">組は、4 つの方法でよく使用されます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-112">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="bc0af-113">単一のデータのセットを表します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-113">To represent a single set of data.</span></span> <span data-ttu-id="bc0af-114">たとえば、組は、データベースのレコードを表すことができ、そのコンポーネントは、レコードの個別のフィールドを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-114">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="bc0af-115">簡単にアクセスしたり、操作、データ セットを提供します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-115">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="bc0af-116">次の例では定義、<xref:System.Tuple%606>から 2000年まで 1960年から各年の国勢調査をニューヨークの母集団のデータを格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-116">The following example defines a <xref:System.Tuple%606> object that contains population data for New York City for each census from 1960 through 2000.</span></span> <span data-ttu-id="bc0af-117">渡される 6 組、 `ComputePopulationChange` censuses、だけでなく年間変化率の 50 年は全体の期間の間の変更の年間の率を計算するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bc0af-117">The sextuple is passed to the `ComputePopulationChange` method, which calculates the annual rate of change between censuses, as well as the annual rate of change for the entire 50 year period.</span></span>  
  
     [!code-csharp[System.Tuple\`6.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`6.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="bc0af-118">使用せず、メソッドから複数の値を返す`out`パラメーター (c#) または`ByRef`パラメーター (Visual Basic の場合)。</span><span class="sxs-lookup"><span data-stu-id="bc0af-118">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="bc0af-119">たとえば、前の例を返します、計算された統計情報を市区町村名と共に、<xref:System.Tuple%606>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-119">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%606> object.</span></span>  
  
-   <span data-ttu-id="bc0af-120">メソッドに渡される複数の値、1 つのパラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-120">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="bc0af-121">たとえば、<xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType>メソッドには、スレッドが起動時に実行される方法を 1 つの値を提供できる 1 つのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-121">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="bc0af-122">指定した場合、<xref:System.Tuple%606>オブジェクト、メソッド引数として、データの 6 つの項目を含む、スレッドのスタートアップ ルーチンを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-122">If you supply a <xref:System.Tuple%606> object as the method argument, you can supply the thread’s startup routine with six items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="bc0af-123">組の 1 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="bc0af-123">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="bc0af-124">組の 2 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="bc0af-124">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="bc0af-125">組の 3 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="bc0af-125">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="bc0af-126">組の 4 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="bc0af-126">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="bc0af-127">組の 5 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="bc0af-127">The value of the tuple's fifth component.</span></span></param>
        <param name="item6"><span data-ttu-id="bc0af-128">組の 6 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="bc0af-128">The value of the tuple's sixth component.</span></span></param>
        <summary><span data-ttu-id="bc0af-129"><see cref="T:System.Tuple`6" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-129">Initializes a new instance of the <see cref="T:System.Tuple`6" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-130">静的なを使用することもできます。<xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType>メソッドを明示的にそのコンポーネントの種類を指定せずに、6 タプル オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-130">You can also use the static <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> method to instantiate a 6-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="bc0af-131">次の例では、 <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> 6 組の最初のコンポーネントは、型のインスタンスを作成するメソッド<xref:System.String>が残りのコンポーネントがの型は<xref:System.Int32>します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-131">The following example uses the <xref:System.Tuple.Create%60%606%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%29?displayProperty=nameWithType> method to instantiate a 6-tuple whose first component is of type <xref:System.String> and whose remaining components are of type <xref:System.Int32>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#11)]
 [!code-vb[System.Tuple.Create#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#11)]  
  
 <span data-ttu-id="bc0af-132">これは、次の呼び出しに、<xref:System.Tuple%606.%23ctor%2A>クラスのコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-132">This is equivalent to the following call to the <xref:System.Tuple%606.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#12)]
 [!code-vb[System.Tuple.Create#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="bc0af-133">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-133">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="bc0af-134">現在の <see cref="T:System.Tuple`6" /> オブジェクトが、指定されたオブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-134">Returns a value that indicates whether the current <see cref="T:System.Tuple`6" /> object is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="bc0af-135">現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bc0af-135"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-136">`obj`パラメーターは、次の条件下で現在のインスタンスと等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-136">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="bc0af-137"><xref:System.Tuple%606>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-137">It is a <xref:System.Tuple%606> object.</span></span>  
  
-   <span data-ttu-id="bc0af-138">その 6 つのコンポーネントでは、現在のインスタンスと同じ型です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-138">Its six components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="bc0af-139">その 6 つのコンポーネントは、現在のインスタンスのものと同じです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-139">Its six components are equal to those of the current instance.</span></span> <span data-ttu-id="bc0af-140">等しいかどうかは、各コンポーネントの既定のオブジェクトの等値比較子によって判断されます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-140">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc0af-141">次の例では、作成データを含む Los Angeles と New York 1960 から 2000 6 組の配列を定義します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-141">The following example defines an array of sextuples that contain population data for Los Angeles and New York from 1960 to 2000.</span></span> <span data-ttu-id="bc0af-142">各 6 組の最初のコンポーネントでは、市区町村を識別します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-142">The first component of each sextuple identifies the city.</span></span> <span data-ttu-id="bc0af-143">最初、3 番目、および 4 番目 6 組がニューヨークのデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-143">The first, third, and fourth sextuples contain data for New York.</span></span> <span data-ttu-id="bc0af-144">最初の 6 組は、4 番目の 6 組の複製です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-144">The first sextuple is a duplicate of the fourth sextuple.</span></span> <span data-ttu-id="bc0af-145">3 番目の 6 組は、"New York"ではなく"New York City"として市区町村を識別します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-145">The third sextuple identifies the city as "New York City" instead of "New York".</span></span> <span data-ttu-id="bc0af-146">例に示す、4 番目の 6 組のみは最初の 6 組と同じです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-146">As the example shows, only the fourth sextuple is equal to the first sextuple.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`6.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bc0af-147">現在の <see cref="T:System.Tuple`6" /> オブジェクトのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-147">Returns the hash code for the current <see cref="T:System.Tuple`6" /> object.</span></span></summary>
        <returns><span data-ttu-id="bc0af-148">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="bc0af-148">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc0af-149">現在の <see cref="T:System.Tuple`6" /> オブジェクトの 1 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-149">Gets the value of the current <see cref="T:System.Tuple`6" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="bc0af-150">現在の <see cref="T:System.Tuple`6" /> オブジェクトの 1 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="bc0af-150">The value of the current <see cref="T:System.Tuple`6" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-151">型を動的に決定することができます、<xref:System.Tuple%606.Item1%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="bc0af-151">You can dynamically determine the type of the <xref:System.Tuple%606.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="bc0af-152">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%606.Item1%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-152">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="bc0af-153">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%606>オブジェクト、および、によって返される配列から最初の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-153">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc0af-154">次の例の配列を定義する<xref:System.Tuple%606>から 2000年まで 1960年からコンポーネントが含まれるが母集団の 3 つの米国の都市 (ニューヨーク、シカゴ、および Los Angeles) データを含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-154">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="bc0af-155">データを一覧表示するテーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-155">It then displays a table that lists the data.</span></span> <span data-ttu-id="bc0af-156">表示するには、市区町村名の値を取得、<xref:System.Tuple%606.Item1%2A>それぞれのプロパティ<xref:System.Tuple%606>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-156">To display the city name, it retrieves the value of the <xref:System.Tuple%606.Item1%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc0af-157">現在の <see cref="T:System.Tuple`6" /> オブジェクトの 2 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-157">Gets the value of the current <see cref="T:System.Tuple`6" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="bc0af-158">現在の <see cref="T:System.Tuple`6" /> オブジェクトの 2 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="bc0af-158">The value of the current <see cref="T:System.Tuple`6" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-159">型を動的に決定することができます、<xref:System.Tuple%606.Item2%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="bc0af-159">You can dynamically determine the type of the <xref:System.Tuple%606.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="bc0af-160">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%606.Item2%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-160">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="bc0af-161">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%606>オブジェクト、および、によって返される配列から最初の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-161">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc0af-162">次の例の配列を定義する<xref:System.Tuple%606>から 2000年まで 1960年からコンポーネントが含まれるが母集団の 3 つの米国の都市 (ニューヨーク、シカゴ、および Los Angeles) データを含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-162">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="bc0af-163">データを一覧表示するテーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-163">It then displays a table that lists the data.</span></span> <span data-ttu-id="bc0af-164">表示するには 1960年の人口の値を取得、<xref:System.Tuple%606.Item2%2A>それぞれのプロパティ<xref:System.Tuple%606>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-164">To display the population in 1960, it retrieves the value of the <xref:System.Tuple%606.Item2%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc0af-165">現在の <see cref="T:System.Tuple`6" /> オブジェクトの 3 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-165">Gets the value of the current <see cref="T:System.Tuple`6" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="bc0af-166">現在の <see cref="T:System.Tuple`6" /> オブジェクトの 3 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="bc0af-166">The value of the current <see cref="T:System.Tuple`6" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-167">型を動的に決定することができます、<xref:System.Tuple%606.Item3%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="bc0af-167">You can dynamically determine the type of the <xref:System.Tuple%606.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="bc0af-168">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%606.Item3%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-168">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="bc0af-169">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%606>オブジェクト、および、によって返される配列から最初の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-169">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc0af-170">次の例の配列を定義する<xref:System.Tuple%606>から 2000年まで 1960年からコンポーネントが含まれるが母集団の 3 つの米国の都市 (ニューヨーク、シカゴ、および Los Angeles) データを含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-170">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="bc0af-171">データを一覧表示するテーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-171">It then displays a table that lists the data.</span></span> <span data-ttu-id="bc0af-172">表示するには 1970 年の人口の値を取得、<xref:System.Tuple%606.Item3%2A>それぞれのプロパティ<xref:System.Tuple%606>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-172">To display the population in 1970, it retrieves the value of the <xref:System.Tuple%606.Item3%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc0af-173">現在の <see cref="T:System.Tuple`6" /> オブジェクトの 4 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-173">Gets the value of the current <see cref="T:System.Tuple`6" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="bc0af-174">現在の <see cref="T:System.Tuple`6" /> オブジェクトの 4 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="bc0af-174">The value of the current <see cref="T:System.Tuple`6" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-175">型を動的に決定することができます、<xref:System.Tuple%606.Item4%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="bc0af-175">You can dynamically determine the type of the <xref:System.Tuple%606.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="bc0af-176">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%606.Item4%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-176">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="bc0af-177">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%606>オブジェクト、および、によって返される配列から最初の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-177">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc0af-178">次の例の配列を定義する<xref:System.Tuple%606>から 2000年まで 1960年からコンポーネントが含まれるが母集団の 3 つの米国の都市 (ニューヨーク、シカゴ、および Los Angeles) データを含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-178">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="bc0af-179">データを一覧表示するテーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-179">It then displays a table that lists the data.</span></span> <span data-ttu-id="bc0af-180">表示するには 1980年の人口の値を取得、<xref:System.Tuple%606.Item4%2A>それぞれのプロパティ<xref:System.Tuple%606>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-180">To display the population in 1980, it retrieves the value of the <xref:System.Tuple%606.Item4%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc0af-181">現在の <see cref="T:System.Tuple`6" /> オブジェクトの 5 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-181">Gets the value of the current <see cref="T:System.Tuple`6" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="bc0af-182">現在の値<see cref="T:System.Tuple`6" />オブジェクトの 5 番目のコンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-182">The value of the current <see cref="T:System.Tuple`6" /> object's fifth  component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-183">型を動的に決定することができます、<xref:System.Tuple%606.Item5%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="bc0af-183">You can dynamically determine the type of the <xref:System.Tuple%606.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="bc0af-184">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%606.Item5%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-184">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="bc0af-185">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%606>オブジェクト、および、によって返される配列から最初の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-185">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc0af-186">次の例の配列を定義する<xref:System.Tuple%606>から 2000年まで 1960年からコンポーネントが含まれるが母集団の 3 つの米国の都市 (ニューヨーク、シカゴ、および Los Angeles) データを含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-186">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="bc0af-187">データを一覧表示するテーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-187">It then displays a table that lists the data.</span></span> <span data-ttu-id="bc0af-188">表示するには 1990 年の人口の値を取得、<xref:System.Tuple%606.Item5%2A>それぞれのプロパティ<xref:System.Tuple%606>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-188">To display the population in 1990, it retrieves the value of the <xref:System.Tuple%606.Item5%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc0af-189">現在の <see cref="T:System.Tuple`6" /> オブジェクトの 6 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-189">Gets the value of the current <see cref="T:System.Tuple`6" /> object's sixth component.</span></span></summary>
        <value><span data-ttu-id="bc0af-190">現在の <see cref="T:System.Tuple`6" /> オブジェクトの 6 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="bc0af-190">The value of the current <see cref="T:System.Tuple`6" /> object's sixth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-191">型を動的に決定することができます、<xref:System.Tuple%606.Item6%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="bc0af-191">You can dynamically determine the type of the <xref:System.Tuple%606.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="bc0af-192">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%606.Item6%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-192">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%606.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="bc0af-193">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%606>オブジェクト、および、によって返される配列から最初の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-193">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%606> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc0af-194">次の例の配列を定義する<xref:System.Tuple%606>から 2000年まで 1960年からコンポーネントが含まれるが母集団の 3 つの米国の都市 (ニューヨーク、シカゴ、および Los Angeles) データを含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-194">The following example defines an array of <xref:System.Tuple%606> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1960 through 2000.</span></span> <span data-ttu-id="bc0af-195">データを一覧表示するテーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-195">It then displays a table that lists the data.</span></span> <span data-ttu-id="bc0af-196">表示するには 2000年の人口の値を取得、<xref:System.Tuple%606.Item6%2A>それぞれのプロパティ<xref:System.Tuple%606>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-196">To display the population in 2000, it retrieves the value of the <xref:System.Tuple%606.Item6%2A> property for each <xref:System.Tuple%606> object.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`6.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="bc0af-197">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-197">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="bc0af-198">比較用のカスタムの規則を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-198">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="bc0af-199">指定された比較子を使用して現在の <see cref="T:System.Tuple`6" /> オブジェクトと指定されたオブジェクトを比較し、並べ替え順序において、現在のオブジェクトの位置が指定されたオブジェクトの前になるか、後ろになるか、同じになるかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-199">Compares the current <see cref="T:System.Tuple`6" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="bc0af-200">並べ替え順序における、このインスタンスと <paramref name="other" /> の相対位置を示す符号付き整数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="bc0af-200">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="bc0af-201"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="bc0af-201"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="bc0af-202"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="bc0af-202"></term><description> Description</span></span>  
  
 <span data-ttu-id="bc0af-203"></description></listheader><item><term> 負の整数</span><span class="sxs-lookup"><span data-stu-id="bc0af-203"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="bc0af-204"></term><description> このインスタンスの位置が <paramref name="other" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-204"></term><description> This instance precedes <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="bc0af-205"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="bc0af-205"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="bc0af-206"></term><description> このインスタンスと <paramref name="other" /> の位置は、並べ替え順序において同じです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-206"></term><description> This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="bc0af-207"></description></item><item><term> 正の整数</span><span class="sxs-lookup"><span data-stu-id="bc0af-207"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="bc0af-208"></term><description> このインスタンスの位置は <paramref name="other" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-208"></term><description> This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-209">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-209">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bc0af-210">これは、<xref:System.Tuple%606> のインスタンスが <xref:System.Collections.IStructuralComparable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-210">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="bc0af-211">このメソッドでは、カスタマイズした比較を定義できます。<xref:System.Tuple%606>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-211">This method lets you define customized comparisons of <xref:System.Tuple%606> objects.</span></span> <span data-ttu-id="bc0af-212">たとえば、順序に、このメソッドを使用することができます<xref:System.Tuple%606>オブジェクトが特定のコンポーネントの値に基づきます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-212">For example, you can use this method to order <xref:System.Tuple%606> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="bc0af-213">コレクションを並べ替えることによって最もよく呼び出されますが、このメソッドは、直接呼び出すことができるなどのメソッドを<xref:System.Collections.IComparer>パラメーター コレクションのメンバーの順序付けをします。</span><span class="sxs-lookup"><span data-stu-id="bc0af-213">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="bc0af-214">たとえば、メソッドによって呼び出されます、<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>メソッドおよび<xref:System.Collections.SortedList.Add%2A>のメソッド、<xref:System.Collections.SortedList>を使用してインスタンス化されるオブジェクト、<xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-214">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="bc0af-215"><xref:System.Tuple%606.System%23Collections%23IStructuralComparable%23CompareTo%2A>並べ替え操作で使用するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-215">The <xref:System.Tuple%606.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="bc0af-216">これはありません、比較の主な目的は 2 つのオブジェクトが等しいかどうかを判断するときに使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bc0af-216">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="bc0af-217">2 つのオブジェクトが等しいかどうかを判断するを呼び出して、<xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-217">To determine whether two objects are equal, call the <xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc0af-218">次の例の配列を作成する<xref:System.Tuple%606>2000 1960年から次の 3 つの米国都市の母集団のデータが含まれているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-218">The following example creates an array of <xref:System.Tuple%606> objects that contains population data for three U.S. cities from 1960 to 2000.</span></span> <span data-ttu-id="bc0af-219">6 組の最初のコンポーネントは、市区町村名です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-219">The sextuple's first component is the city name.</span></span> <span data-ttu-id="bc0af-220">残りの 5 つのコンポーネントでは、1960年から 2000年までの 10 年間の間隔で人口を表します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-220">The remaining five components represent the population at 10-year intervals from 1960 to 2000.</span></span>  
  
 <span data-ttu-id="bc0af-221">`PopulationComparer`クラスを提供する<xref:System.Collections.IComparer>により、そのコンポーネントのいずれかでソートする 6 組の配列を実装します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-221">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of sextuples to be sorted by any one of its components.</span></span> <span data-ttu-id="bc0af-222">2 つの値が用意されて、`PopulationComparer`コンス トラクター内のクラス: 並べ替え順序を定義するコンポーネントの位置と<xref:System.Boolean>組オブジェクトを昇順または降順で並べ替える必要があるかどうかを示す値。</span><span class="sxs-lookup"><span data-stu-id="bc0af-222">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="bc0af-223">例では、し、並べ替えられていない順序で配列の要素が表示されます、3 番目のコンポーネント (1970 年のカタログ作成) で並べ替えてと、それらを表示し、6 番目のコンポーネント (2000年のカタログ作成) で並べ替えてして表示にします。</span><span class="sxs-lookup"><span data-stu-id="bc0af-223">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1970) and displays them, and then sorts them by the sixth component (the population in 2000) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc0af-224"><paramref name="other" /> は <see cref="T:System.Tuple`6" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="bc0af-224"><paramref name="other" /> is not a <see cref="T:System.Tuple`6" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="bc0af-225">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-225">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="bc0af-226">2 つのオブジェクトが等しいかどうかの評価に使用するメソッドを定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-226">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="bc0af-227">指定された比較メソッドに基づいて、現在の <see cref="T:System.Tuple`6" /> オブジェクトが指定したオブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-227">Returns a value that indicates whether the current <see cref="T:System.Tuple`6" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns>
          <span data-ttu-id="bc0af-228">現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bc0af-228"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-229">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-229">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bc0af-230">これは、<xref:System.Tuple%606> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-230">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="bc0af-231"><xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>実装が呼び出される場合にのみ`other`は`null`、キャスト (c#) またはに (Visual Basic) の変換が正常にすることができるかどうかと、<xref:System.Tuple%606>コンポーネントが含まれるは、現在のインスタンスと同じ型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-231">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%606> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="bc0af-232"><xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29>メソッドの最初のパス、<xref:System.Tuple%606.Item1%2A>の値、<xref:System.Tuple%606>と比較するオブジェクト、<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>実装します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-232">The <xref:System.Tuple%606.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%606.Item1%2A> values of the <xref:System.Tuple%606> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="bc0af-233">このメソッドの呼び出しが返された場合`true`、メソッドが再度呼び出され、渡された、 <xref:System.Tuple%606.Item2%2A> 、2 つの値<xref:System.Tuple%606>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-233">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%606.Item2%2A> values of the two <xref:System.Tuple%606> objects.</span></span> <span data-ttu-id="bc0af-234">これは、メソッド呼び出しから戻るまで続きます`false`の特定のペアを比較するときに`Item`値、または 2 つ<xref:System.Tuple%606.Item6%2A>値、メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-234">This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%606.Item6%2A> values are passed to the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc0af-235">次の例では定義、`RateComparer`等しいかどうか、カスタムのテストを実行するクラス。</span><span class="sxs-lookup"><span data-stu-id="bc0af-235">The following example defines a `RateComparer` class that performs a custom test for equality.</span></span> <span data-ttu-id="bc0af-236">場合に渡される値、<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>型のメソッドは、<xref:System.Single>または<xref:System.Double>メソッドが、3 つまでの小数部の桁を使用して、等しいかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="bc0af-236">If the values that are passed to its <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method are of type <xref:System.Single> or <xref:System.Double>, the method tests for equality by using only up to three fractional digits.</span></span> <span data-ttu-id="bc0af-237">それ以外の場合、単に呼び出して、`x`パラメーターの`Equals`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-237">Otherwise, it simply calls the `x` parameter's `Equals` method.</span></span> <span data-ttu-id="bc0af-238">この例では、使用<xref:System.Collections.IEqualityComparer>4 つあるかどうかを判断する実装<xref:System.Tuple%606>1960 ~ 2000 の population の変更の速度でデータを格納するオブジェクトが等しい。</span><span class="sxs-lookup"><span data-stu-id="bc0af-238">The example uses this <xref:System.Collections.IEqualityComparer> implementation to determine whether four <xref:System.Tuple%606> objects that contain data on the rate of population change between 1960 and 2000 are equal.</span></span>  
  
 [!code-csharp[System.Tuple\`6.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`6.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="bc0af-239">現在の <see cref="T:System.Tuple`6" /> オブジェクトのハッシュ コードを計算する <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> メソッドを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-239">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`6" /> object.</span></span></param>
        <summary><span data-ttu-id="bc0af-240">指定した計算メソッドを使用して、現在の <see cref="T:System.Tuple`6" /> オブジェクトのハッシュ コードを計算します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-240">Calculates the hash code for the current <see cref="T:System.Tuple`6" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="bc0af-241">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="bc0af-241">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-242">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-242">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bc0af-243">これは、<xref:System.Tuple%606> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-243">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="bc0af-244">メソッドは、単にへの呼び出しをラップ、`comparer`オブジェクトの<xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType>実装します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-244">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="bc0af-245">2 つのハッシュ コードの計算に使用するアルゴリズムが同じハッシュ コードを返す必要があります<xref:System.Tuple%606>同等であると見なされるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-245">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%606> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="bc0af-246">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-246">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="bc0af-247">現在の <see cref="T:System.Tuple`6" /> オブジェクトと指定したオブジェクトを比較して、現在のオブジェクトが、並べ替え順序において、指定したオブジェクトの前後または同じ位置のいずれにあるかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-247">Compares the current <see cref="T:System.Tuple`6" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="bc0af-248">並べ替え順序における、このインスタンスと <paramref name="obj" /> の相対位置を示す符号付き整数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="bc0af-248">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="bc0af-249"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="bc0af-249"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="bc0af-250"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="bc0af-250"></term><description> Description</span></span>  
  
 <span data-ttu-id="bc0af-251"></description></listheader><item><term> 負の整数</span><span class="sxs-lookup"><span data-stu-id="bc0af-251"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="bc0af-252"></term><description> このインスタンスの位置が <paramref name="obj" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-252"></term><description> This instance precedes <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="bc0af-253"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="bc0af-253"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="bc0af-254"></term><description> このインスタンスと <paramref name="obj" /> の位置は、並べ替え順序において同じです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-254"></term><description> This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="bc0af-255"></description></item><item><term> 正の整数</span><span class="sxs-lookup"><span data-stu-id="bc0af-255"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="bc0af-256"></term><description> このインスタンスの位置は <paramref name="obj" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-256"></term><description> This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-257">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-257">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bc0af-258">これは、<xref:System.Tuple%606> のインスタンスが <xref:System.IComparable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-258">It can be used only when the <xref:System.Tuple%606> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="bc0af-259">このメソッドを提供、<xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType>の実装、<xref:System.Tuple%606>クラスです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-259">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%606> class.</span></span> <span data-ttu-id="bc0af-260">コレクションの並べ替えの既定のオーバー ロードによって最もよく呼び出さは直接メソッドを呼び出すことができます、メソッドなど<xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType>と<xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>コレクションのメンバーの順序付けをします。</span><span class="sxs-lookup"><span data-stu-id="bc0af-260">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="bc0af-261"><xref:System.Tuple%606.System%23IComparable%23CompareTo%2A>並べ替え操作で使用するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-261">The <xref:System.Tuple%606.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="bc0af-262">これはありません、比較の主な目的は 2 つのオブジェクトが等しいかどうかを判断するときに使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bc0af-262">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="bc0af-263">2 つのオブジェクトが等しいかどうかを判断するを呼び出して、<xref:System.Tuple%606.Equals%28System.Object%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-263">To determine whether two objects are equal, call the <xref:System.Tuple%606.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="bc0af-264"><xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29>メソッドでは、既定のオブジェクトの比較子を使用して、各コンポーネントを比較します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-264">The <xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29> method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc0af-265">次の例の配列を作成する<xref:System.Tuple%606>2000 1960年から、United States で 3 つの市区町村の人口データを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-265">The following example creates an array of <xref:System.Tuple%606> objects that contain population data for three cities in the United States from 1960 to 2000.</span></span> <span data-ttu-id="bc0af-266">市区町村名の後に 10 年間の間隔で市区町村の人口によって 1960年から 2000年に 6 つのコンポーネントで構成されます。</span><span class="sxs-lookup"><span data-stu-id="bc0af-266">The six components consist of the city name followed by the city's population at 10-year intervals from 1960 to 2000.</span></span> <span data-ttu-id="bc0af-267">例では、並べ替えられていない配列内の各組のコンポーネントを表示、配列を並べ替え、を呼び出して、<xref:System.Tuple%606.ToString%2A>メソッド内の各組の表示に並べ替えた順です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-267">The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls the <xref:System.Tuple%606.ToString%2A> method to display each tuple in sorted order.</span></span> <span data-ttu-id="bc0af-268">出力は、最初のコンポーネントは、名前で配列が並べ替えられていることを示します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-268">The output shows that the array has been sorted by name, which is the first component.</span></span> <span data-ttu-id="bc0af-269">例では、直接呼び出しませんなお、<xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-269">Note that the example does not directly call the <xref:System.Tuple%606.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="bc0af-270">このメソッドはによって暗黙的に呼び出されます、<xref:System.Array.Sort%28System.Array%29>配列内の各要素のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-270">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`6.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc0af-271"><paramref name="obj" /> は <see cref="T:System.Tuple`6" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="bc0af-271"><paramref name="obj" /> is not a <see cref="T:System.Tuple`6" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Runtime.CompilerServices.ITuple.Item[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bc0af-272">指定した <see langword="Tuple" /> 要素のインデックス。</span><span class="sxs-lookup"><span data-stu-id="bc0af-272">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="bc0af-273"><c>index</c> は 0 から 5 までです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-273"><c>index</c> can range from 0 to 5.</span></span></param>
        <summary><span data-ttu-id="bc0af-274">指定した <see langword="Tuple" /> 要素の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-274">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="bc0af-275">指定した位置にある <see langword="Tuple" /> 要素の値。</span><span class="sxs-lookup"><span data-stu-id="bc0af-275">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-276"><xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType>プロパティは、明示的なインターフェイス実装です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-276">The <xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="bc0af-277">これを呼び出すには、キャストまたは変換する必要があります、<xref:System.Tuple%606>オブジェクトを<xref:System.Runtime.CompilerServices.ITuple>インターフェイス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-277">To call it, you must cast or convert the <xref:System.Tuple%606> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="bc0af-278"><paramref name="index" /> が 0 より小さいか、5 を超えています。</span><span class="sxs-lookup"><span data-stu-id="bc0af-278"><paramref name="index" /> is less than 0 or greater than 5.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`6.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System.Runtime.CompilerServices.ITuple.Length { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bc0af-279"><see langword="Tuple" /> にある要素の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-279">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="bc0af-280"><see cref="T:System.Tuple`6" /> オブジェクト内の要素数、6。</span><span class="sxs-lookup"><span data-stu-id="bc0af-280">6, the number of elements in a <see cref="T:System.Tuple`6" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-281"><xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Length%2A>プロパティは、明示的なインターフェイス実装です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-281">The <xref:System.Tuple%606.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="bc0af-282">これを呼び出すには、キャストまたは変換する必要があります、<xref:System.Tuple%606>オブジェクトを<xref:System.Runtime.CompilerServices.ITuple>インターフェイス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-282">To call it, you must cast or convert the <xref:System.Tuple%606> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`6.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bc0af-283">この <see cref="T:System.Tuple`6" /> インスタンスの値を表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="bc0af-283">Returns a string that represents the value of this <see cref="T:System.Tuple`6" /> instance.</span></span></summary>
        <returns><span data-ttu-id="bc0af-284">この <see cref="T:System.Tuple`6" /> オブジェクトの文字列表現。</span><span class="sxs-lookup"><span data-stu-id="bc0af-284">The string representation of this <see cref="T:System.Tuple`6" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc0af-285">このメソッドによって返される文字列の形式は (*Item1*、 *Item2*、 *Item3*、 *Item4*、 `Item5, Item6`) ここで、 *Item1*、 *Item2*、 *Item3*、 *Item4*、 *Item5*、および*Item6*の値を表す、 <xref:System.Tuple%606.Item1%2A>、 <xref:System.Tuple%606.Item2%2A>、 <xref:System.Tuple%606.Item3%2A>、 <xref:System.Tuple%606.Item4%2A>、 <xref:System.Tuple%606.Item5%2A>、および<xref:System.Tuple%606.Item6%2A>プロパティ、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="bc0af-285">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6`), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, and *Item6* represent the values of the <xref:System.Tuple%606.Item1%2A>, <xref:System.Tuple%606.Item2%2A>, <xref:System.Tuple%606.Item3%2A>, <xref:System.Tuple%606.Item4%2A>, <xref:System.Tuple%606.Item5%2A>, and <xref:System.Tuple%606.Item6%2A> properties, respectively.</span></span> <span data-ttu-id="bc0af-286">プロパティ値のいずれかが場合`null`、として表されます<xref:System.String.Empty?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="bc0af-286">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc0af-287">次の例では定義、<xref:System.Tuple%606>から 2000年まで 1960年から各年の国勢調査をニューヨークの母集団のデータを格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bc0af-287">The following example defines a <xref:System.Tuple%606> object that contains population data for New York City for each census from 1960 through 2000.</span></span> <span data-ttu-id="bc0af-288">呼び出しによって、セクスタプルのコンポーネントが表示されます、<xref:System.Tuple%606.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bc0af-288">The components of the sextuple are then displayed by a call to the <xref:System.Tuple%606.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`6.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`6.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>