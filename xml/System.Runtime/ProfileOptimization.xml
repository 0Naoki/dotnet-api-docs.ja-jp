<Type Name="ProfileOptimization" FullName="System.Runtime.ProfileOptimization">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0915ded9947c9a7c9b06996766715c6a3e2d1d19" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56352181" /></Metadata><TypeSignature Language="C#" Value="public static class ProfileOptimization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileOptimization extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ProfileOptimization" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileOptimization" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileOptimization abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileOptimization = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>以前のコンパイル中に作成されたプロファイルに基づいて、実行される可能性が高いメソッドをバックグラウンドでコンパイルすることにより、JIT (Just-In-Time) コンパイラを必要とするアプリケーションのアプリケーション ドメインで、起動時のパフォーマンスが向上します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  最適化のプロファイルには、マルチコア コンピューターが必要です。 メソッドは、他のコンピューターで無視されます。  
  
 前の使用時に作成されたプロファイルは、アプリケーション ドメインでの最適化のプロファイルを開始するたびに読み取り専用です。 プロファイルの情報は、スタートアップ時に実行される可能性が最も高いメソッドを識別することによってバック グラウンド コンパイルに使用されます。 マルチコア コンピューターでは、この増加をメソッドになっている可能性は、メイン アプリケーション スレッドが JIT コンパイラを呼び出す必要があるないように必要な時間によってコンパイルされます。  
  
 プロファイル ファイルは、常にスタートアップ時のメソッドの使用に関する最新の情報が含まれるように、使用するたびに上書きされます。  
  
 最適化のプロファイルでは、アプリケーション ドメインの起動時に限定されません。 JIT コンパイラを頻繁に使用を必要とする任意のアクティビティが使用できます。 このような各アクティビティがある、独自のプロファイルを持つように、アプリケーション ドメインの複数のプロファイルを維持できます。  
  
 最適化のプロファイルを使用して、アプリケーション ドメインを呼び出す必要がある、<xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>メソッドのプロファイルの保存先フォルダーを指定します。 フォルダーが既に存在する必要があります。 プロファイルを使用するには、呼び出し、<xref:System.Runtime.ProfileOptimization.StartProfile%2A>メソッド、プロファイルのファイル名を指定します。 場合は、ファイルが以前に記録されませんが、初回使用時に作成されます。 パフォーマンス特典の最初の時間のプロファイルを作成することはありません。  
  
 最適化のプロファイルでは、メソッドが実行される順序は変更されません。 メソッドは、バック グラウンド スレッドで実行されません。メソッドはコンパイルしますが、呼び出されない場合に単に使用されません。 プロファイル ファイルが壊れているか (たとえば、フォルダーが存在しない) ために、指定したフォルダーに書き込めない場合、最適化のプロファイルせずにプログラムの実行が続行されます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetProfileRoot">
      <MemberSignature Language="C#" Value="public static void SetProfileRoot (string directoryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProfileRoot(string directoryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetProfileRoot (directoryPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetProfileRoot(System::String ^ directoryPath);" />
      <MemberSignature Language="F#" Value="static member SetProfileRoot : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.SetProfileRoot directoryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directoryPath">現在のアプリケーション ドメインのためにプロファイル ファイルが格納されるフォルダーへの完全パス。</param>
        <summary>現在のアプリケーション ドメインに対する最適化プロファイルを有効にし、最適化プロファイル ファイルが格納されるフォルダーを設定します。 シングルコア コンピューターでは、メソッドは無視されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す前に、このメソッドを呼び出す必要があります、<xref:System.Runtime.ProfileOptimization.StartProfile%2A>最初に現在のアプリケーション ドメインでのメソッド。 呼び出す場合<xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>同じアプリケーション ドメインで複数回に、最初より後のすべての呼び出しは無視されます。  
  
 指定したフォルダーが既に存在する必要があります。 存在しない場合は、このメソッドを呼び出すことは作成されません、され、プロファイルは発生しません。  
  
 複数のコアがないコンピューターでは、このメソッドは無視されます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に対する完全な信頼が必要です。 このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName="StartProfile">
      <MemberSignature Language="C#" Value="public static void StartProfile (string profile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartProfile(string profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.StartProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartProfile (profile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartProfile(System::String ^ profile);" />
      <MemberSignature Language="F#" Value="static member StartProfile : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.StartProfile profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="profile">使用するプロファイルのファイル名。</param>
        <summary>バックグラウンド スレッド上で、指定したプロファイル ファイルに前もって記録済みのメソッドの、Just-In-Time (JIT) コンパイラを開始します。 指定したプロファイル ファイルをあとで上書きする、現在のメソッド使用の記録処理を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって指定されたフォルダーに指定されたプロファイルが存在する場合、<xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>メソッド、含まれている情報を使用するメソッドはバック グラウンド スレッドでコンパイルされる順序を決定します。 <xref:System.Runtime.ProfileOptimization.StartProfile%2A>メソッドが存在しないことをメソッドの使用の記録を開始する場合は、プロファイルを作成します。  
  
 かどうか、バック グラウンド スレッドまたはメイン アプリケーション スレッドにコンパイルされているに関係なく、実際に呼び出されるメソッドのみが記録されます。 メソッドは、アプリケーションがバック グラウンド スレッドがコンパイルされる前に呼び出す必要がある場合、メイン アプリケーション スレッドでコンパイルされます。  
  
 記録を実行するコードは、位置のメソッドはコンパイル、バック グラウンド スレッドでは、メイン スレッドでコンパイルされるメソッドを含む率を追跡します。 ときに、レートを下回った事前に定義されたレベルでは、記録を停止します。 記録は、JIT コンパイルの比率が事前に定義された上限を超えた場合にも停止します。  
  
 場合、<xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>の現在のアプリケーション ドメインでは、メソッドが呼び出されていないまたはコンピューターに複数のコアがあるない場合、<xref:System.Runtime.ProfileOptimization.StartProfile%2A>メソッドが影響を与えません。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に対する完全な信頼が必要です。 このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</permission>
      </Docs>
    </Member>
  </Members>
</Type>