<Type Name="GCSettings" FullName="System.Runtime.GCSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0edeb1fd33575474eb7857b9bae22ce81e4f2e2" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51862449" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class GCSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit GCSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.GCSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class GCSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class GCSettings abstract sealed" />
  <TypeSignature Language="F#" Value="type GCSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2533e-101">現在のプロセスのガベージ コレクション設定を指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2533e-101">Specifies the garbage collection settings for the current process.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2533e-102">使用して、<xref:System.Runtime.GCSettings.IsServerGC%2A>プロパティを現在のプロセス サーバーのガベージ コレクションが有効になっているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="2533e-102">Use the <xref:System.Runtime.GCSettings.IsServerGC%2A> property to determine whether server garbage collection is enabled for the current process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsServerGC">
      <MemberSignature Language="C#" Value="public static bool IsServerGC { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsServerGC" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.GCSettings.IsServerGC" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsServerGC As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsServerGC { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServerGC : bool" Usage="System.Runtime.GCSettings.IsServerGC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2533e-103">サーバーのガベージ コレクションが有効であるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2533e-103">Gets a value that indicates whether server garbage collection is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2533e-104">サーバーのガベージ コレクションが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2533e-104">
              <see langword="true" /> if server garbage collection is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2533e-105">サーバーのガベージ コレクションについては、「ワークステーションとサーバーのガベージ コレクション」のセクションを参照してください。[ガベージ コレクションの基礎](~/docs/standard/garbage-collection/fundamentals.md)します。</span><span class="sxs-lookup"><span data-stu-id="2533e-105">For information about server garbage collection, see the "Workstation and Server Garbage Collection" section in [Fundamentals of Garbage Collection](~/docs/standard/garbage-collection/fundamentals.md).</span></span>  
  
 <span data-ttu-id="2533e-106">サーバーのガベージ コレクションが有効でない場合は、ワークステーションのガベージ コレクションが有効で (同時実行コレクションの有無にかかわらずです)。</span><span class="sxs-lookup"><span data-stu-id="2533e-106">If server garbage collection is not enabled, workstation garbage collection is in effect (with or without concurrent collection).</span></span> <span data-ttu-id="2533e-107">サーバーのガベージ コレクションは、マルチプロセッサ コンピューターでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="2533e-107">Server garbage collection is available only on multiprocessor computers.</span></span>  
  
 <span data-ttu-id="2533e-108">アンマネージ ホストは、サーバーのガベージ コレクションを要求でき、ホストの要求は、構成ファイルの設定をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="2533e-108">An unmanaged host can request server garbage collection, and the host request overrides configuration file settings.</span></span> <span data-ttu-id="2533e-109">ホストがガベージ コレクションの種類を指定しない場合は、サーバーのガベージ コレクションを指定する構成ファイルの設定を使用できます。</span><span class="sxs-lookup"><span data-stu-id="2533e-109">If the host does not specify the type of garbage collection, you can use a configuration file setting to specify server garbage collection.</span></span> <span data-ttu-id="2533e-110">マシン構成ファイルではなく、アプリケーション構成ファイルでのみこの設定は有効です (を参照してください[構成アプリ](~/docs/framework/configure-apps/index.md))。</span><span class="sxs-lookup"><span data-stu-id="2533e-110">This setting is valid only in the application configuration file, not in the machine configuration file (see [Configuring Apps](~/docs/framework/configure-apps/index.md)).</span></span> <span data-ttu-id="2533e-111">次の例では、サーバー ガベージ コレクションを有効にするサンプル アプリケーションの構成ファイルの内容を示します。</span><span class="sxs-lookup"><span data-stu-id="2533e-111">The following example shows the contents of a sample application configuration file that enables server garbage collection.</span></span>  
  
```  
<configuration>  
  <runtime>  
    <gcServer enabled="true" />  
  </runtime>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="2533e-112">次の例では、ホスト コンピューターがサーバーまたはワークステーションのガベージ コレクションを使用しているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="2533e-112">The following example indicates whether the host computer is using server or workstation garbage collection.</span></span>  
  
 [!code-csharp[Environment.IsServerGC#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.IsServerGC/CS/isg.cs#1)]
 [!code-vb[Environment.IsServerGC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.IsServerGC/VB/isg.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeObjectHeapCompactionMode">
      <MemberSignature Language="C#" Value="public static System.Runtime.GCLargeObjectHeapCompactionMode LargeObjectHeapCompactionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.GCLargeObjectHeapCompactionMode LargeObjectHeapCompactionMode" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LargeObjectHeapCompactionMode As GCLargeObjectHeapCompactionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::GCLargeObjectHeapCompactionMode LargeObjectHeapCompactionMode { System::Runtime::GCLargeObjectHeapCompactionMode get(); void set(System::Runtime::GCLargeObjectHeapCompactionMode value); };" />
      <MemberSignature Language="F#" Value="member this.LargeObjectHeapCompactionMode : System.Runtime.GCLargeObjectHeapCompactionMode with get, set" Usage="System.Runtime.GCSettings.LargeObjectHeapCompactionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;netcore-2.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLargeObjectHeapCompactionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2533e-113">フル ブロッキング ガベージ コレクションが大きなオブジェクト ヒープ (LOH) を圧縮するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2533e-113">Gets or sets a value that indicates whether a full blocking garbage collection compacts the large object heap (LOH).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2533e-114">フル ブロッキング ガベージ コレクションが LOH を圧縮するかどうかを示す、列挙値の 1 つです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2533e-114">One of the enumeration values that indicates whether a full blocking garbage collection compacts the LOH.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2533e-115">LOH は、85,000 バイト以上を必要とするラージ オブジェクト (配列など) のメモリの割り当てに使用されます。</span><span class="sxs-lookup"><span data-stu-id="2533e-115">The LOH is used for allocating memory for large objects (such as arrays) that require more than 85,000 bytes.</span></span> <span data-ttu-id="2533e-116">パフォーマンスに影響する大きなメモリ ブロックのコピーのため、ガベージ コレクター通常スイープ、LOH では、配信不能オブジェクトによって占有されているの今後の要求を再利用できるメモリの場所のリストを作成する必要があります。ラージ オブジェクトのメモリの割り当てです。</span><span class="sxs-lookup"><span data-stu-id="2533e-116">Because of the performance impact of copying large blocks of memory, the garbage collector ordinarily sweeps the   LOH, which involves creating a list of the memory locations that were occupied by dead objects and that can be reused to satisfy future requests for allocation of memory for large objects.</span></span> <span data-ttu-id="2533e-117">ただし、広範なことをアプリでは、LOH の使用メモリの断片化も悪影響を及ぼすパフォーマンスに影響を与える一時的なオブジェクトを格納します。</span><span class="sxs-lookup"><span data-stu-id="2533e-117">However, in apps that make extensive use of the LOH to store transient objects, memory fragmentation can also adversely impact performance.</span></span> <span data-ttu-id="2533e-118">ここでは、使用することは、<xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A>ガベージ コレクション中にスイープだけではなく、LOH を圧縮するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="2533e-118">In this case, it is possible to use the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> property to compact rather than simply sweep the LOH during a garbage collection.</span></span>  
  
 <span data-ttu-id="2533e-119">既定値、<xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A>プロパティは<xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>、ガベージ コレクション中に、LOH は最適化されないことを示します。</span><span class="sxs-lookup"><span data-stu-id="2533e-119">The default value of the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> property is <xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>, which indicates that the LOH is not compacted during garbage collections.</span></span> <span data-ttu-id="2533e-120">プロパティの値を割り当てる場合<xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>、LOH は、[次へ] フル ブロッキング ガベージ コレクション中に、圧縮、およびプロパティの値にリセット<xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="2533e-120">If you assign the property a value of <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>, the LOH is compacted during the next full blocking garbage collection, and the property value is reset to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2533e-121">バック グラウンド ガベージ コレクションがブロックされていません。</span><span class="sxs-lookup"><span data-stu-id="2533e-121">Background garbage collections are not blocking.</span></span> <span data-ttu-id="2533e-122">つまり、設定した場合、<xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A>プロパティを<xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>、その後に発生する 2 つのコレクションが LOH を圧縮しないで任意のバック グラウンド生成します。</span><span class="sxs-lookup"><span data-stu-id="2533e-122">This means that, if you set the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> property to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>, any background generation 2 collections that occur subsequently do not compact the LOH.</span></span> <span data-ttu-id="2533e-123">のみ、最初のブロックしている世代 2 コレクションが LOH を圧縮します。</span><span class="sxs-lookup"><span data-stu-id="2533e-123">Only the first blocking generation 2 collection compacts the LOH.</span></span>  
  
 <span data-ttu-id="2533e-124">後に、<xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A>プロパティに設定されて<xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>、不確定の将来の時点で、[次へ] のフル ブロッキング ガベージ コレクション (と LOH の圧縮) が発生します。</span><span class="sxs-lookup"><span data-stu-id="2533e-124">After the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> property is set to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>, the next full blocking garbage collection (and compaction of the LOH) occurs at an indeterminate future time.</span></span> <span data-ttu-id="2533e-125">次のようなコードを使用してすぐに LOH を圧縮できます。</span><span class="sxs-lookup"><span data-stu-id="2533e-125">You can compact the LOH immediately by using code like the following:</span></span>  
  
 [!code-csharp[System.Runtime.GCSettings#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.gcsettings/cs/lohcompactionmode1.cs#1)]
 [!code-vb[System.Runtime.GCSettings#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.gcsettings/vb/lohcompactionmode1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.GCLargeObjectHeapCompactionMode" />
      </Docs>
    </Member>
    <Member MemberName="LatencyMode">
      <MemberSignature Language="C#" Value="public static System.Runtime.GCLatencyMode LatencyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.GCLatencyMode LatencyMode" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.GCSettings.LatencyMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LatencyMode As GCLatencyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::GCLatencyMode LatencyMode { System::Runtime::GCLatencyMode get(); void set(System::Runtime::GCLatencyMode value); };" />
      <MemberSignature Language="F#" Value="member this.LatencyMode : System.Runtime.GCLatencyMode with get, set" Usage="System.Runtime.GCSettings.LatencyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;netcore-2.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2533e-126">ガベージ コレクションの現在の待機モードを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2533e-126">Gets or sets the current latency mode for garbage collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2533e-127">待機モードを指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2533e-127">One of the enumeration values that specifies the latency mode.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2533e-128">設定して、アプリケーションでガベージ コレクションの割り込みの動作のレベルを減らすことができます、<xref:System.Runtime.GCLatencyMode>に<xref:System.Runtime.GCLatencyMode.LowLatency>重要な操作中にします。</span><span class="sxs-lookup"><span data-stu-id="2533e-128">You can reduce the level of intrusiveness of garbage collection in your application by setting the <xref:System.Runtime.GCLatencyMode> to <xref:System.Runtime.GCLatencyMode.LowLatency> during critical operations.</span></span> <span data-ttu-id="2533e-129">このような操作が完了したら後、は、メモリを増やしてより多くのオブジェクトを再要求できるように、高待機時間モードに戻ります。</span><span class="sxs-lookup"><span data-stu-id="2533e-129">After such operations are completed, return to a higher latency mode so that more objects can be reclaimed to increase memory.</span></span>  
  
 <span data-ttu-id="2533e-130">値を設定する、通常、<xref:System.Runtime.GCSettings.LatencyMode%2A>ガベージ コレクターの待機時間モードを定義するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="2533e-130">Ordinarily, you set the value of the <xref:System.Runtime.GCSettings.LatencyMode%2A> property to define the garbage collector's latency mode.</span></span> <span data-ttu-id="2533e-131">ただし、割り当てることで、GC 領域の無待機モードを設定することはできません、<xref:System.Runtime.GCLatencyMode.NoGCRegion?displayProperty=nameWithType>列挙値を<xref:System.Runtime.GCSettings.LatencyMode%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2533e-131">However, you cannot set the no GC region latency mode by assigning the <xref:System.Runtime.GCLatencyMode.NoGCRegion?displayProperty=nameWithType> enumeration value to the <xref:System.Runtime.GCSettings.LatencyMode%2A> property.</span></span> <span data-ttu-id="2533e-132">代わりに、<xref:System.GC.TryStartNoGCRegion%2A?displayProperty=nameWithType>して、GC 領域の無待機モードを開始するメソッドを呼び出す、<xref:System.GC.EndNoGCRegion%2A?displayProperty=nameWithType>を終了します。</span><span class="sxs-lookup"><span data-stu-id="2533e-132">Instead, you call the <xref:System.GC.TryStartNoGCRegion%2A?displayProperty=nameWithType> method to begin the no GC region latency mode, and you call the <xref:System.GC.EndNoGCRegion%2A?displayProperty=nameWithType> to end it.</span></span>  
  
 <span data-ttu-id="2533e-133">参照してください[待機モード](~/docs/standard/garbage-collection/latency.md)ガベージ コレクションのランタイムの構成設定の既定値に与える影響の詳細については、<xref:System.Runtime.GCLatencyMode>列挙体。</span><span class="sxs-lookup"><span data-stu-id="2533e-133">See [Latency Modes](~/docs/standard/garbage-collection/latency.md) for a discussion of how the runtime configuration settings for garbage collection affect the default value of the <xref:System.Runtime.GCLatencyMode> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2533e-134">
            <see cref="P:System.Runtime.GCSettings.LatencyMode" /> プロパティが無効な値に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2533e-134">The <see cref="P:System.Runtime.GCSettings.LatencyMode" /> property is being set to an invalid value.</span>
          </span>
          <span data-ttu-id="2533e-135">または</span>
          <span class="sxs-lookup">
            <span data-stu-id="2533e-135">-or-</span>
          </span>
          <span data-ttu-id="2533e-136">
            <see cref="P:System.Runtime.GCSettings.LatencyMode" /> プロパティを <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> に設定することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2533e-136">The <see cref="P:System.Runtime.GCSettings.LatencyMode" /> property cannot be set to <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2533e-137">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2533e-137">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2533e-138">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2533e-138">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <related type="Article" href="https://msdn.microsoft.com/library/96278bb7-6eab-4612-8594-ceebfc887d81">
          <span data-ttu-id="2533e-139">待機モード</span>
          <span class="sxs-lookup">
            <span data-stu-id="2533e-139">Latency Modes</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>