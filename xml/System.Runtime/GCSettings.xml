<Type Name="GCSettings" FullName="System.Runtime.GCSettings">
  <TypeSignature Language="C#" Value="public static class GCSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit GCSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.GCSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class GCSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class GCSettings abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0523d-101">現在のプロセスのガベージ コレクション設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="0523d-101">Specifies the garbage collection settings for the current process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0523d-102">使用して、<xref:System.Runtime.GCSettings.IsServerGC%2A>プロパティを現在のプロセスのサーバーのガベージ コレクションが有効になっているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="0523d-102">Use the <xref:System.Runtime.GCSettings.IsServerGC%2A> property to determine whether server garbage collection is enabled for the current process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsServerGC">
      <MemberSignature Language="C#" Value="public static bool IsServerGC { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsServerGC" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.GCSettings.IsServerGC" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsServerGC As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsServerGC { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0523d-103">サーバーのガベージ コレクションが有効であるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0523d-103">Gets a value that indicates whether server garbage collection is enabled.</span></span></summary>
        <value>
          <span data-ttu-id="0523d-104">サーバーのガベージ コレクションが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0523d-104"><see langword="true" /> if server garbage collection is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0523d-105">サーバーのガベージ コレクションに関する情報を「ワークステーションとサーバーのガベージ コレクション」セクションを参照して[ガベージ コレクションの基礎](~/docs/standard/garbage-collection/fundamentals.md)です。</span><span class="sxs-lookup"><span data-stu-id="0523d-105">For information about server garbage collection, see the "Workstation and Server Garbage Collection" section in [Fundamentals of Garbage Collection](~/docs/standard/garbage-collection/fundamentals.md).</span></span>  
  
 <span data-ttu-id="0523d-106">サーバーのガベージ コレクションが有効でない場合は、ワークステーションのガベージ コレクションが有効で (または同時実行コレクションなしです)。</span><span class="sxs-lookup"><span data-stu-id="0523d-106">If server garbage collection is not enabled, workstation garbage collection is in effect (with or without concurrent collection).</span></span> <span data-ttu-id="0523d-107">サーバーのガベージ コレクションは、マルチプロセッサ コンピューターでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="0523d-107">Server garbage collection is available only on multiprocessor computers.</span></span>  
  
 <span data-ttu-id="0523d-108">サーバーのガベージ コレクションを要求できるは、アンマネージ ホストとホスト要求が構成ファイルの設定をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="0523d-108">An unmanaged host can request server garbage collection, and the host request overrides configuration file settings.</span></span> <span data-ttu-id="0523d-109">ホストでは、ガベージ コレクションの型を指定しない場合は、サーバーのガベージ コレクションを指定する構成ファイルの設定を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="0523d-109">If the host does not specify the type of garbage collection, you can use a configuration file setting to specify server garbage collection.</span></span> <span data-ttu-id="0523d-110">マシン構成ファイルではなく、アプリケーション構成ファイルでのみこの設定は無効です (を参照してください[構成アプリ](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f))。</span><span class="sxs-lookup"><span data-stu-id="0523d-110">This setting is valid only in the application configuration file, not in the machine configuration file (see [Configuring Apps](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f)).</span></span> <span data-ttu-id="0523d-111">次の例では、サーバー ガベージ コレクションを有効にするサンプル アプリケーションの構成ファイルの内容を示します。</span><span class="sxs-lookup"><span data-stu-id="0523d-111">The following example shows the contents of a sample application configuration file that enables server garbage collection.</span></span>  
  
```  
<configuration>  
  <runtime>  
    <gcServer enabled="true" />  
  </runtime>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="0523d-112">次の例では、ホスト コンピューターがサーバーまたはワークステーションのガベージ コレクションを使用しているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="0523d-112">The following example indicates whether the host computer is using server or workstation garbage collection.</span></span>  
  
 [!code-csharp[Environment.IsServerGC#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.IsServerGC/CS/isg.cs#1)]
 [!code-vb[Environment.IsServerGC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.IsServerGC/VB/isg.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeObjectHeapCompactionMode">
      <MemberSignature Language="C#" Value="public static System.Runtime.GCLargeObjectHeapCompactionMode LargeObjectHeapCompactionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.GCLargeObjectHeapCompactionMode LargeObjectHeapCompactionMode" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LargeObjectHeapCompactionMode As GCLargeObjectHeapCompactionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::GCLargeObjectHeapCompactionMode LargeObjectHeapCompactionMode { System::Runtime::GCLargeObjectHeapCompactionMode get(); void set(System::Runtime::GCLargeObjectHeapCompactionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLargeObjectHeapCompactionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0523d-113">[.NET Framework 4.5.1 以降のバージョンでサポート]</span><span class="sxs-lookup"><span data-stu-id="0523d-113">[Supported in the .NET Framework 4.5.1 and later versions]</span></span>  
  
 <span data-ttu-id="0523d-114">フル ブロッキング ガベージ コレクションが大きなオブジェクト ヒープ (LOH) を圧縮するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0523d-114">Gets or sets a value that indicates whether a full blocking garbage collection compacts the large object heap (LOH).</span></span></summary>
        <value><span data-ttu-id="0523d-115">フル ブロッキング ガベージ コレクションが LOH を圧縮するかどうかを示す、列挙値の 1 つです。</span><span class="sxs-lookup"><span data-stu-id="0523d-115">One of the enumeration values that indicates whether a full blocking garbage collection compacts the LOH.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0523d-116">LOH 85,000 バイトを超えるを必要とする (配列) などのラージ オブジェクトのメモリの割り当てが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0523d-116">The LOH is used for allocating memory for large objects (such as arrays) that require more than 85,000 bytes.</span></span> <span data-ttu-id="0523d-117">ガベージ コレクターでは、パフォーマンスに対する悪影響のためのメモリの大きなブロックのコピー、LOH、死んだ状態のオブジェクトによって占有されていたをおよび大きいオブジェクトのメモリの割り当ての今後の要求を再利用できるメモリ位置のリストの作成が行われる通常スイープします。</span><span class="sxs-lookup"><span data-stu-id="0523d-117">Because of the performance impact of copying large blocks of memory, the garbage collector ordinarily sweeps the   LOH, which involves creating a list of the memory locations that were occupied by dead objects and that can be reused to satisfy future requests for allocation of memory for large objects.</span></span> <span data-ttu-id="0523d-118">ただし、広くアプリでは、LOH の使用を一時的なオブジェクト、メモリが断片化もパフォーマンスに悪影響を格納します。</span><span class="sxs-lookup"><span data-stu-id="0523d-118">However, in apps that make extensive use of the LOH to store transient objects, memory fragmentation can also adversely impact performance.</span></span> <span data-ttu-id="0523d-119">ここを使用することは、<xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A>をスイープするだけではなく、LOH ガベージ コレクション中に圧縮するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0523d-119">In this case, it is possible to use the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> property to compact rather than simply sweep the LOH during a garbage collection.</span></span>  
  
 <span data-ttu-id="0523d-120">既定値、<xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A>プロパティは<xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>、ガベージ コレクション中に、LOH は最適化されないことを示します。</span><span class="sxs-lookup"><span data-stu-id="0523d-120">The default value of the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> property is <xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>, which indicates that the LOH is not compacted during garbage collections.</span></span> <span data-ttu-id="0523d-121">プロパティの値を割り当てた場合<xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>LOH は、[次へ] フル ブロッキング ガベージ コレクション中に、圧縮、およびプロパティの値にリセット<xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="0523d-121">If you assign the property a value of <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>, the LOH is compacted during the next full blocking garbage collection, and the property value is reset to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0523d-122">バック グラウンド ガベージ コレクションをブロックしていません。</span><span class="sxs-lookup"><span data-stu-id="0523d-122">Background garbage collections are not blocking.</span></span> <span data-ttu-id="0523d-123">つまり、設定した場合、<xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A>プロパティを<xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>、その後に発生する 2 つのコレクションが LOH を圧縮しないで、背景生成します。</span><span class="sxs-lookup"><span data-stu-id="0523d-123">This means that, if you set the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> property to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>, any background generation 2 collections that occur subsequently do not compact the LOH.</span></span> <span data-ttu-id="0523d-124">だけ最初のブロッキング generation 2 のコレクションが LOH を圧縮します。</span><span class="sxs-lookup"><span data-stu-id="0523d-124">Only the first blocking generation 2 collection compacts the LOH.</span></span>  
  
 <span data-ttu-id="0523d-125">後に、<xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A>プロパティに設定されている<xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>、不確定の将来の時刻に、[次へ] のフル ブロッキング ガベージ コレクション (および LOH を圧縮) が実行されます。</span><span class="sxs-lookup"><span data-stu-id="0523d-125">After the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> property is set to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>, the next full blocking garbage collection (and compaction of the LOH) occurs at an indeterminate future time.</span></span> <span data-ttu-id="0523d-126">次のようにコードを使用してすぐが LOH を圧縮することができます。</span><span class="sxs-lookup"><span data-stu-id="0523d-126">You can compact the LOH immediately by using code like the following:</span></span>  
  
 [!code-csharp[System.Runtime.GCSettings#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.gcsettings/cs/lohcompactionmode1.cs#1)]
 [!code-vb[System.Runtime.GCSettings#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.gcsettings/vb/lohcompactionmode1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.GCLargeObjectHeapCompactionMode" />
      </Docs>
    </Member>
    <Member MemberName="LatencyMode">
      <MemberSignature Language="C#" Value="public static System.Runtime.GCLatencyMode LatencyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.GCLatencyMode LatencyMode" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.GCSettings.LatencyMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LatencyMode As GCLatencyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::GCLatencyMode LatencyMode { System::Runtime::GCLatencyMode get(); void set(System::Runtime::GCLatencyMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0523d-127">ガベージ コレクションの現在の待機モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0523d-127">Gets or sets the current latency mode for garbage collection.</span></span></summary>
        <value><span data-ttu-id="0523d-128">待機モードを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="0523d-128">One of the enumeration values that specifies the latency mode.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0523d-129">設定して、アプリケーションでのガベージ コレクションの割り込みの動作のレベルを減らすことができます、<xref:System.Runtime.GCLatencyMode>に<xref:System.Runtime.GCLatencyMode.LowLatency>重要な操作中にします。</span><span class="sxs-lookup"><span data-stu-id="0523d-129">You can reduce the level of intrusiveness of garbage collection in your application by setting the <xref:System.Runtime.GCLatencyMode> to <xref:System.Runtime.GCLatencyMode.LowLatency> during critical operations.</span></span> <span data-ttu-id="0523d-130">このような操作を完了すると後、は、メモリを増やしてより多くのオブジェクトを再要求できるように高待機時間モードに戻ります。</span><span class="sxs-lookup"><span data-stu-id="0523d-130">After such operations are completed, return to a higher latency mode so that more objects can be reclaimed to increase memory.</span></span>  
  
 <span data-ttu-id="0523d-131">通常は、値を設定する、<xref:System.Runtime.GCSettings.LatencyMode%2A>ガベージ コレクターの待機モードを定義するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0523d-131">Ordinarily, you set the value of the <xref:System.Runtime.GCSettings.LatencyMode%2A> property to define the garbage collector's latency mode.</span></span> <span data-ttu-id="0523d-132">ただし、割り当てることによって、GC 領域の無待機モードを設定することはできません、<xref:System.Runtime.GCLatencyMode.NoGCRegion?displayProperty=nameWithType>列挙体の値、<xref:System.Runtime.GCSettings.LatencyMode%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0523d-132">However, you cannot set the no GC region latency mode by assigning the <xref:System.Runtime.GCLatencyMode.NoGCRegion?displayProperty=nameWithType> enumeration value to the <xref:System.Runtime.GCSettings.LatencyMode%2A> property.</span></span> <span data-ttu-id="0523d-133">代わりを呼び出して、<xref:System.GC.TryStartNoGCRegion%2A?displayProperty=nameWithType>を開始して、GC 領域の無待機モード、メソッドの呼び出し、<xref:System.GC.EndNoGCRegion%2A?displayProperty=nameWithType>を終了することです。</span><span class="sxs-lookup"><span data-stu-id="0523d-133">Instead, you call the <xref:System.GC.TryStartNoGCRegion%2A?displayProperty=nameWithType> method to begin the no GC region latency mode, and you call the <xref:System.GC.EndNoGCRegion%2A?displayProperty=nameWithType> to end it.</span></span>  
  
 <span data-ttu-id="0523d-134">参照してください[待機モード](~/docs/standard/garbage-collection/latency.md)のガベージ コレクションの実行時の構成設定の既定値に与える影響については、<xref:System.Runtime.GCLatencyMode>列挙します。</span><span class="sxs-lookup"><span data-stu-id="0523d-134">See [Latency Modes](~/docs/standard/garbage-collection/latency.md) for a discussion of how the runtime configuration settings for garbage collection affect the default value of the <xref:System.Runtime.GCLatencyMode> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0523d-135"><see cref="P:System.Runtime.GCSettings.LatencyMode" /> プロパティが無効な値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="0523d-135">The <see cref="P:System.Runtime.GCSettings.LatencyMode" /> property is being set to an invalid value.</span></span>  
  
 <span data-ttu-id="0523d-136">- または -</span><span class="sxs-lookup"><span data-stu-id="0523d-136">-or-</span></span>  
  
 <span data-ttu-id="0523d-137"><see cref="P:System.Runtime.GCSettings.LatencyMode" /> プロパティを <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="0523d-137">The <see cref="P:System.Runtime.GCSettings.LatencyMode" /> property cannot be set to <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0523d-138">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="0523d-138">requires full trust for the immediate caller.</span></span> <span data-ttu-id="0523d-139">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="0523d-139">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>