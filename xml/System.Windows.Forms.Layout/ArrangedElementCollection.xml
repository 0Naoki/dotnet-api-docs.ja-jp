<Type Name="ArrangedElementCollection" FullName="System.Windows.Forms.Layout.ArrangedElementCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56b857b69f24b281f188b57eb23382cc5229764b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629816" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArrangedElementCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ArrangedElementCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Layout.ArrangedElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrangedElementCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrangedElementCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bb90e-101">オブジェクトのコレクションを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb90e-101">Represents a collection of objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-102"><xref:System.Windows.Forms.Layout.ArrangedElementCollection>クラス オブジェクトをデザイン画面または親内の配置のコレクションを表します<xref:System.Windows.Forms.ContainerControl?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-102">The <xref:System.Windows.Forms.Layout.ArrangedElementCollection> class represents a collection of objects arranged on a design surface or inside a parent <xref:System.Windows.Forms.ContainerControl?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bb90e-103">公開されている定義済みのコンス トラクターがありません<xref:System.Windows.Forms.Layout.ArrangedElementCollection>内で内部的にのみ使用する設計されているので、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-103">There are no publicly defined constructors in <xref:System.Windows.Forms.Layout.ArrangedElementCollection> because it is designed to be used only internally within the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="bb90e-104">ただしから派生したクラス<xref:System.Windows.Forms.Layout.ArrangedElementCollection>など<xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>開発者に利用できます。</span><span class="sxs-lookup"><span data-stu-id="bb90e-104">However, classes derived from <xref:System.Windows.Forms.Layout.ArrangedElementCollection>, such as <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>, are available to the developer.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="bb90e-105">パブリック<see langword="static" />(<see langword="Shared" /> Visual Basic で) この型のメンバーは、スレッド セーフであります。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb90e-105">Public <see langword="static" /> (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="bb90e-106">インスタンス メンバーは、スレッド セーフである保証はありません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb90e-106">Instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="bb90e-107">
        <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />コレクションが変更されない限り、複数のリーダーを同時にサポートできます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb90e-107">An <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="bb90e-108">
        <see cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />メソッドを返します、<see cref="T:System.Collections.IEnumerator" />要素にアクセスするを使用できます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb90e-108">The <see cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" /> method returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to access elements.</span>
      </span>
      <span data-ttu-id="bb90e-109">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb90e-109">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="bb90e-110">コレクションが同期されている場合でも、他のスレッドがコレクションを変更する、これにより、列挙子は例外をスローします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb90e-110">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="bb90e-111">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb90e-111">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
    <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="bb90e-112">現在のコレクションから要素がコピーされる 1 次元の <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-112">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current collection.</span>
          </span>
          <span data-ttu-id="bb90e-113">配列には、0 から始まるインデックスが設定されている必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-113">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bb90e-114">コピーの開始位置となる、<c>array</c> の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-114">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb90e-115">コピー先配列の指定されたインデックスを開始位置として、このコレクションの内容全体を互換性がある 1 次元 <see cref="T:System.Array" /> にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-115">Copies the entire contents of this collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-116">指定された配列の型は、ソース コレクションとの互換性でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="bb90e-116">The type of the specified array must be compatible with the source collection.</span></span>  
  
 <span data-ttu-id="bb90e-117">このメソッドを使用して、<xref:System.Array.Copy%2A?displayProperty=nameWithType>に要素をコピーする方法です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-117">This method uses the <xref:System.Array.Copy%2A?displayProperty=nameWithType> method to copy the elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb90e-118">
            <paramref name="array" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-118">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bb90e-119">
            <paramref name="index" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-119">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bb90e-120">
            <paramref name="array" /> が多次元です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-120">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="bb90e-121">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-121">-or-</span>
          </span>
          <span data-ttu-id="bb90e-122">ソース コレクションの要素数が、<paramref name="index" /> から <paramref name="array" /> の末尾までに格納できる数を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-122">The number of elements in the source collection is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bb90e-123">コピー元の要素の型が、<paramref name="array" /> の型に自動的にキャストできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-123">The type of the source element cannot be cast automatically to the type of <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
        <altmember cref="Overload:System.Collections.ArrayList.CopyTo" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb90e-124">コレクション内の要素の数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-124">Gets the number of elements in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb90e-125">コレクションに現在格納されている要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-125">The number of elements currently contained in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-126">必要な場合、コレクションの容量がさらに要素を受け入れるように動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="bb90e-126">When required, the capacity of the collection will dynamically increase to accept more elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="bb90e-127">現在の <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> と比較する <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-127">The <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> to compare with the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb90e-128">2 つの <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> インスタンスが等しいかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-128">Determines whether two <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> instances are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb90e-129">指定した <see langword="true" /> が現在の <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> と等しい場合は <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-129">
              <see langword="true" /> if the specified <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is equal to the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb90e-130">コレクション全体の列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-130">Returns an enumerator for the entire collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb90e-131">コレクション全体の <see cref="T:System.Collections.IEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-131">An <see cref="T:System.Collections.IEnumerator" /> for the entire collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-132">通常、列挙子にはコレクションへの排他アクセスがありません。そのため、コレクションの列挙は、本質的には、スレッド セーフなプロシージャではします。</span><span class="sxs-lookup"><span data-stu-id="bb90e-132">Typically the enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="bb90e-133">コレクションが同期されている場合でも、他のスレッドがコレクションを変更する、これにより、列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="bb90e-133">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="bb90e-134">列挙処理中には、スレッド セーフを確保するには、次の方針のいずれかを実行できます。</span><span class="sxs-lookup"><span data-stu-id="bb90e-134">To guarantee thread safety during enumeration, you can follow one of the following strategies:</span></span>  
  
-   <span data-ttu-id="bb90e-135">使用して、列挙中にコレクションをロック、<xref:System.Threading.Monitor>です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-135">Lock the collection during the entire enumeration using a <xref:System.Threading.Monitor>.</span></span>  
  
-   <span data-ttu-id="bb90e-136">キャッチし、その他のスレッドによって行われた変更によってスローされる例外を処理します。</span><span class="sxs-lookup"><span data-stu-id="bb90e-136">Catch and handle the exceptions that result from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="Overload:System.Collections.ArrayList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb90e-137">このインスタンスのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-137">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb90e-138">現在の <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> のハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-138">A hash code for the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb90e-139">コレクションが読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-139">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb90e-140">コレクションが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-140">
              <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="bb90e-141">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-141">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-142">読み取り専用のコレクション、追加、削除、または要素の変更後にできません、コレクションを作成します。</span><span class="sxs-lookup"><span data-stu-id="bb90e-142">A read-only collection does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="bb90e-143">読み取り専用コレクションは、単純なコレクションの変更を防止するラッパー コレクションです。</span><span class="sxs-lookup"><span data-stu-id="bb90e-143">A read-only collection is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="bb90e-144">基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</span><span class="sxs-lookup"><span data-stu-id="bb90e-144">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb90e-145">このメンバーの説明については、<see cref="P:System.Collections.ICollection.IsSynchronized" /> プロパティを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-145">For a description of this member, see the <see cref="P:System.Collections.ICollection.IsSynchronized" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb90e-146">
            <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-146">
              <see langword="true" /> if access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-147">このメソッドは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-147">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="bb90e-148">これは、<xref:System.Windows.Forms.Layout.ArrangedElementCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bb90e-148">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb90e-149">このメンバーの説明については、<see cref="P:System.Collections.ICollection.SyncRoot" /> プロパティを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-149">For a description of this member, see the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb90e-150">
            <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> へのアクセスの同期に使用できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-150">An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-151">このメソッドは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-151">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="bb90e-152">これは、<xref:System.Windows.Forms.Layout.ArrangedElementCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bb90e-152">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bb90e-153">
            <see cref="T:System.Object" /> に追加する <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-153">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb90e-154">このメンバーの説明については、<see cref="M:System.Collections.IList.Add(System.Object)" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-154">For a description of this member, see the <see cref="M:System.Collections.IList.Add(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb90e-155">新しい要素が挿入された位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-155">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-156">このメソッドは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-156">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="bb90e-157">これは、<xref:System.Windows.Forms.Layout.ArrangedElementCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bb90e-157">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb90e-158">このメンバーの説明については、<see cref="M:System.Collections.IList.Clear" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-158">For a description of this member, see the <see cref="M:System.Collections.IList.Clear" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-159">このメソッドは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-159">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="bb90e-160">これは、<xref:System.Windows.Forms.Layout.ArrangedElementCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bb90e-160">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bb90e-161">
            <see cref="T:System.Object" /> 内で検索される <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-161">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb90e-162">このメンバーの説明については、<see cref="M:System.Collections.IList.Contains(System.Object)" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-162">For a description of this member, see the <see cref="M:System.Collections.IList.Contains(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb90e-163">
            <see cref="T:System.Object" /> が <see cref="T:System.Collections.IList" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-163">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-164">このメソッドは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-164">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="bb90e-165">これは、<xref:System.Windows.Forms.Layout.ArrangedElementCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bb90e-165">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bb90e-166">
            <see cref="T:System.Object" /> 内で検索される <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-166">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb90e-167">このメンバーの説明については、<see cref="M:System.Collections.IList.IndexOf(System.Object)" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-167">For a description of this member, see the <see cref="M:System.Collections.IList.IndexOf(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb90e-168">リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-168">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-169">このメソッドは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-169">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="bb90e-170">これは、<xref:System.Windows.Forms.Layout.ArrangedElementCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bb90e-170">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="bb90e-171">
            <c>value</c> を挿入する位置を示す、0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-171">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bb90e-172">
            <see cref="T:System.Collections.IList" /> に挿入する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-172">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb90e-173">このメンバーの説明については、<see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-173">For a description of this member, see the <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-174">このメソッドは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-174">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="bb90e-175">これは、<xref:System.Windows.Forms.Layout.ArrangedElementCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bb90e-175">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb90e-176">このメンバーの説明については、<see cref="P:System.Collections.IList.IsFixedSize" /> プロパティを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-176">For a description of this member, see the <see cref="P:System.Collections.IList.IsFixedSize" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb90e-177">
            <see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-177">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-178">このメソッドは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-178">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="bb90e-179">これは、<xref:System.Windows.Forms.Layout.ArrangedElementCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bb90e-179">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="bb90e-180">取得する要素の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-180">The zero-based index of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb90e-181">このメンバーの説明については、<see cref="P:System.Collections.IList.Item(System.Int32)" /> プロパティを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-181">For a description of this member, see the <see cref="P:System.Collections.IList.Item(System.Int32)" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb90e-182">指定したインデックス位置にある要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-182">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-183">このメソッドは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-183">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="bb90e-184">これは、<xref:System.Windows.Forms.Layout.ArrangedElementCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bb90e-184">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bb90e-185">
            <see cref="T:System.Object" /> から削除する <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-185">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb90e-186">このメンバーの説明については、<see cref="M:System.Collections.IList.Remove(System.Object)" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-186">For a description of this member, see the <see cref="M:System.Collections.IList.Remove(System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-187">このメソッドは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-187">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="bb90e-188">これは、<xref:System.Windows.Forms.Layout.ArrangedElementCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bb90e-188">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="bb90e-189">削除する項目の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-189">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb90e-190">このメンバーの説明については、<see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb90e-190">For a description of this member, see the <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb90e-191">このメソッドは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bb90e-191">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="bb90e-192">これは、<xref:System.Windows.Forms.Layout.ArrangedElementCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bb90e-192">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>