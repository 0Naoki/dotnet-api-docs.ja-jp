<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="74aad05220b8b9baafe094a36186017d9fb3b424" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39778089" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceProcessInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="80a21-101">
        <see cref="T:System.ServiceProcess.ServiceBase" /> を拡張するクラスを含む実行可能ファイルをインストールします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="80a21-101">Installs an executable containing classes that extend <see cref="T:System.ServiceProcess.ServiceBase" />.</span>
      </span>
      <span data-ttu-id="80a21-102">このクラスは、サービス アプリケーションのインストール時に InstallUtil.exe などのインストール ユーティリティで呼び出されます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="80a21-102">This class is called by installation utilities, such as InstallUtil.exe, when installing a service application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80a21-103"><xref:System.ServiceProcess.ServiceProcessInstaller>が、実行可能ファイルですべてのサービスに共通する機能します。</span><span class="sxs-lookup"><span data-stu-id="80a21-103">The <xref:System.ServiceProcess.ServiceProcessInstaller> does work common to all services in an executable.</span></span> <span data-ttu-id="80a21-104">インストールするサービスに関連付けられているレジストリ値を書き込むため、インストール ユーティリティによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="80a21-104">It is used by the installation utility to write registry values associated with services you want to install.</span></span>  
  
 <span data-ttu-id="80a21-105">継承されるプロジェクト インストーラー クラスを作成、サービスをインストールする<xref:System.Configuration.Install.Installer>、設定、<xref:System.ComponentModel.RunInstallerAttribute>クラスに対し、`true`します。</span><span class="sxs-lookup"><span data-stu-id="80a21-105">To install a service, create a project installer class that inherits from <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> on the class to `true`.</span></span> <span data-ttu-id="80a21-106">プロジェクト内で 1 つのインスタンスを作成<xref:System.ServiceProcess.ServiceProcessInstaller>サービス アプリケーション、および 1 つごとにインスタンス<xref:System.ServiceProcess.ServiceInstaller>アプリケーション内の各サービスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="80a21-106">Within your project, instantiate one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="80a21-107">最後に、追加、<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスおよび<xref:System.ServiceProcess.ServiceInstaller>プロジェクト インストーラー クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="80a21-107">Finally, add the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and the <xref:System.ServiceProcess.ServiceInstaller> instances to your project installer class.</span></span>  
  
 <span data-ttu-id="80a21-108">InstallUtil.exe を実行すると、ユーティリティは、サービス アセンブリにクラス、<xref:System.ComponentModel.RunInstallerAttribute>設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="80a21-108">When InstallUtil.exe runs, the utility looks for classes in the service assembly with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`.</span></span> <span data-ttu-id="80a21-109">追加することによって、サービス アセンブリにクラスを追加、<xref:System.Configuration.Install.Installer.Installers%2A>プロジェクト インストーラーに関連付けられているコレクション。</span><span class="sxs-lookup"><span data-stu-id="80a21-109">Add classes to the service assembly by adding them to the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer.</span></span> <span data-ttu-id="80a21-110">場合<xref:System.ComponentModel.RunInstallerAttribute>は`false`、インストール ユーティリティ プロジェクト インストーラーは無視されます。</span><span class="sxs-lookup"><span data-stu-id="80a21-110">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the install utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="80a21-111">インスタンスの<xref:System.ServiceProcess.ServiceProcessInstaller>、ログオンしているユーザー以外のアカウントでサービス アプリケーションを実行することを指定するプロパティ変更できますにはが含まれます。</span><span class="sxs-lookup"><span data-stu-id="80a21-111">For an instance of <xref:System.ServiceProcess.ServiceProcessInstaller>, properties you can modify include specifying that a service application run under an account other than the logged-on user.</span></span> <span data-ttu-id="80a21-112">特定を指定できます<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>サービスが実行すると、または使用できる契約ペア<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>サービスがコンピューターのシステム アカウント、ローカルまたはネットワーク サービス アカウント、またはユーザー アカウントで実行するかを指定します。</span><span class="sxs-lookup"><span data-stu-id="80a21-112">You can specify a particular <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair under which the service should run, or you can use <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to specify that the service run under the computer's System account, a local or network service account, or a user account.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80a21-113">コンピューターのシステム アカウントは、管理者アカウントと同じではありません。</span><span class="sxs-lookup"><span data-stu-id="80a21-113">The computer's System account is not the same as the Administrator account.</span></span>  
  
 <span data-ttu-id="80a21-114">通常、呼び出すことはありません、メソッドで<xref:System.ServiceProcess.ServiceInstaller>は、コード内で一般的に呼び出される、インストール ユーティリティでのみです。</span><span class="sxs-lookup"><span data-stu-id="80a21-114">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="80a21-115">インストール ユーティリティが自動的に呼び出し、<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>と<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType>インストール プロセス中にメソッド。</span><span class="sxs-lookup"><span data-stu-id="80a21-115">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="80a21-116">バックアップ実行の障害を必要に応じて、呼び出すことによって<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(または<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) は以前にインストールされたすべてのコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="80a21-116">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components.</span></span>  
  
 <span data-ttu-id="80a21-117">アプリケーションのインストールが自動的にプロジェクトのインストーラーを使用して、既にインストールされているコンポーネントに関する情報を保持<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="80a21-117">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="80a21-118">この状態情報は継続的に更新、<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスと各<xref:System.ServiceProcess.ServiceInstaller>ユーティリティによってインスタンスがインストールされています。</span><span class="sxs-lookup"><span data-stu-id="80a21-118">This state information is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="80a21-119">この状態情報を明示的に変更するコードを通常必要はありません。</span><span class="sxs-lookup"><span data-stu-id="80a21-119">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="80a21-120">インスタンス化する、<xref:System.ServiceProcess.ServiceProcessInstaller>基底クラス コンス トラクターにより<xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>、呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="80a21-120">Instantiating a <xref:System.ServiceProcess.ServiceProcessInstaller> causes the base class constructor, <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>, to be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80a21-121">次の例から継承され、MyProjectInstaller と呼ばれるプロジェクト インストーラーを作成する<xref:System.Configuration.Install.Installer>します。</span><span class="sxs-lookup"><span data-stu-id="80a21-121">The following example creates a project installer called MyProjectInstaller, which inherits from <xref:System.Configuration.Install.Installer>.</span></span> <span data-ttu-id="80a21-122">「Hello World サービス 1」2 つのサービスを含むサービス実行可能ファイルがあることが前提とし、"2" Hello World のサービス。</span><span class="sxs-lookup"><span data-stu-id="80a21-122">It is assumed there is a service executable that contains two services, "Hello-World Service 1" and "Hello-World Service 2".</span></span> <span data-ttu-id="80a21-123">(これが、インストール ユーティリティによって呼び出されます) MyProjectInstaller のコンス トラクター内で<xref:System.ServiceProcess.ServiceInstaller>オブジェクトは、各サービスの作成と<xref:System.ServiceProcess.ServiceProcessInstaller>実行可能ファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="80a21-123">Within the constructor for MyProjectInstaller (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each service, and a <xref:System.ServiceProcess.ServiceProcessInstaller> is created for the executable.</span></span> <span data-ttu-id="80a21-124">インストール ユーティリティが有効なインストーラーとして MyProjectInstaller を認識する、<xref:System.ComponentModel.RunInstallerAttribute>属性に設定されて`true`します。</span><span class="sxs-lookup"><span data-stu-id="80a21-124">For the install utility to recognize MyProjectInstaller as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.</span></span>  
  
 <span data-ttu-id="80a21-125">インストーラーに追加する前に、プロセスのインストーラーおよびサービスのインストーラーで省略可能なプロパティが設定されて、<xref:System.Configuration.Install.Installer.Installers%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="80a21-125">Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span> <span data-ttu-id="80a21-126">オブジェクトに追加インストール ユーティリティが MyProjectInstaller にアクセスするときに、<xref:System.Configuration.Install.Installer.Installers%2A>を呼び出すことによってコレクション<xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType>順番でインストールされています。</span><span class="sxs-lookup"><span data-stu-id="80a21-126">When the install utility accesses MyProjectInstaller, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> will be installed in turn.</span></span> <span data-ttu-id="80a21-127">プロセスでは、インストーラーは、オブジェクトがインストールされているため、各オブジェクト バックアップできます順番でインストール エラーが発生した場合を示す状態情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="80a21-127">During the process, the installer maintains state information indicating which objects have been installed, so each object can be backed out in turn in case of an installation failure.</span></span>  
  
 <span data-ttu-id="80a21-128">通常、いないインスタンスを作成するプロジェクト インストーラー クラスに明示的にします。</span><span class="sxs-lookup"><span data-stu-id="80a21-128">Normally, you would not instantiate your project installer class explicitly.</span></span> <span data-ttu-id="80a21-129">作成し、追加し、は、<xref:System.ComponentModel.RunInstallerAttribute>がインストール ユーティリティを実際に呼び出すし、そのためインスタンス化のクラス。</span><span class="sxs-lookup"><span data-stu-id="80a21-129">You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute>, but the install utility actually calls, and therefore instantiates, the class.</span></span>  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80a21-130">
            <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-130">Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberSignature Language="F#" Value="member this.Account : System.ServiceProcess.ServiceAccount with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80a21-131">サービス アプリケーションを実行するときに使用するアカウントの種類を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-131">Gets or sets the type of account under which to run this service application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80a21-132">システムでこのサービスを実行するときに使用するアカウントの種類を定義する <see cref="T:System.ServiceProcess.ServiceAccount" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-132">A <see cref="T:System.ServiceProcess.ServiceAccount" /> that defines the type of account under which the system runs this service.</span>
          </span>
          <span data-ttu-id="80a21-133">既定値は、<see langword="User" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-133">The default is <see langword="User" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80a21-134">ときに、<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>プロパティは`User`、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>サービス アプリケーションを実行するアカウントを定義するプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="80a21-134">When the <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> property is `User`, the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are used to define an account under which the service application runs.</span></span>  
  
 <span data-ttu-id="80a21-135"><xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>ペアにより、システム アカウント以外のアカウントで実行するサービス。</span><span class="sxs-lookup"><span data-stu-id="80a21-135">The <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="80a21-136">たとえば、ユーザーがログオンしていないときの再起動時に自動的に開始するサービスを許可これことができます。</span><span class="sxs-lookup"><span data-stu-id="80a21-136">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span> <span data-ttu-id="80a21-137">いずれかのままにする場合、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>または<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>空になり、設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>に`User`、有効なユーザー名とインストール時にパスワードを求められます。</span><span class="sxs-lookup"><span data-stu-id="80a21-137">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="80a21-138">指定できますが、ローカル システム アカウントまたはローカル実行サービスやネットワーク サービス。</span><span class="sxs-lookup"><span data-stu-id="80a21-138">You can also specify that the service run under the local system account, or as a local or network service.</span></span> <span data-ttu-id="80a21-139">参照してください、<xref:System.ServiceProcess.ServiceAccount>の詳細については、アカウントの種類の列挙体。</span><span class="sxs-lookup"><span data-stu-id="80a21-139">See the <xref:System.ServiceProcess.ServiceAccount> enumeration for details on types of accounts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceProcessInstaller.CopyFromComponent comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">
          <span data-ttu-id="80a21-140">サービス プロセスを表す <see cref="T:System.ComponentModel.IComponent" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-140">The <see cref="T:System.ComponentModel.IComponent" /> that represents the service process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80a21-141">
            <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> クラス固有の動作を行わない、基本クラスの <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> メソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-141">Implements the base class <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> method with no <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class-specific behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80a21-142">このメソッドは、コード内で呼び出されませんする必要があります。</span><span class="sxs-lookup"><span data-stu-id="80a21-142">This method should not be called within your code.</span></span> <span data-ttu-id="80a21-143">基底クラスのメソッドで<xref:System.Configuration.Install.ComponentInstaller>は`abstract`ので、ここで、派生クラスで実装されます。</span><span class="sxs-lookup"><span data-stu-id="80a21-143">The base class method on <xref:System.Configuration.Install.ComponentInstaller> is `abstract`, so it is implemented here on the derived class.</span></span> <span data-ttu-id="80a21-144">ただし、あるありません<xref:System.ServiceProcess.ServiceProcessInstaller>クラス固有のメソッドの実装で処理します。</span><span class="sxs-lookup"><span data-stu-id="80a21-144">However, there is no <xref:System.ServiceProcess.ServiceProcessInstaller> class-specific processing in the method's implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80a21-145">サービスのインストール オプションに関する情報を表示するヘルプのテキストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-145">Gets help text displayed for service installation options.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80a21-146">特定のアカウントでサービスを実行するために必要なユーザー名とパスワードの設定手順を説明するヘルプのテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-146">Help text that provides a description of the steps for setting the user name and password in order to run the service under a particular account.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80a21-147">このヘルプ テキストは、サービスが手動で開始されるときに使用できます。</span><span class="sxs-lookup"><span data-stu-id="80a21-147">This help text can be used when a service starts manually.</span></span> <span data-ttu-id="80a21-148">ユーザー名とパスワードの情報を入力する方法をユーザーとに示します。</span><span class="sxs-lookup"><span data-stu-id="80a21-148">It indicates to the user how to enter user name and password information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">
          <span data-ttu-id="80a21-149">インストールに関連付けられているコンテキスト情報を格納する <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-149">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80a21-150">サービス アプリケーション情報をレジストリに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-150">Writes service application information to the registry.</span>
          </span>
          <span data-ttu-id="80a21-151">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-151">This method is meant to be used by installation tools, which call the appropriate methods automatically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80a21-152">通常、呼び出すことはありません、メソッドで<xref:System.ServiceProcess.ServiceProcessInstaller>は、コード内で一般的に呼び出される、インストール ユーティリティでのみです。</span><span class="sxs-lookup"><span data-stu-id="80a21-152">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceProcessInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="80a21-153">インストール ユーティリティが自動的に呼び出し、<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>インストール プロセス中にメソッド。</span><span class="sxs-lookup"><span data-stu-id="80a21-153">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> method during the installation process.</span></span> <span data-ttu-id="80a21-154">バックアップ実行の障害を必要に応じて、呼び出すことによって<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>は以前にインストールされたすべてのコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="80a21-154">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> on all previously installed components.</span></span> <span data-ttu-id="80a21-155">このメソッドは基底クラスをインストールを渡します<xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="80a21-155">This method passes the installation to the base class <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="80a21-156">通常がないメソッドを呼び出す、<xref:System.ServiceProcess.ServiceInstaller>は、コード内で一般的に呼び出される、インストール ユーティリティでのみです。</span><span class="sxs-lookup"><span data-stu-id="80a21-156">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="80a21-157">インストール ユーティリティが自動的に呼び出し、<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>と<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType>インストール プロセス中にメソッド。</span><span class="sxs-lookup"><span data-stu-id="80a21-157">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="80a21-158">バックアップ実行の障害を必要に応じて、呼び出すことによって<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(または<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) は以前にインストールされたすべてのコンポーネント</span><span class="sxs-lookup"><span data-stu-id="80a21-158">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components</span></span>  
  
 <span data-ttu-id="80a21-159">アプリケーションのインストールが自動的にプロジェクトのインストーラーを使用して、既にインストールされているコンポーネントに関する情報を保持<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="80a21-159">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="80a21-160">この状態情報が渡される<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A>として、`stateSaver`パラメーターは継続的に更新、<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスと各<xref:System.ServiceProcess.ServiceInstaller>ユーティリティによってインスタンスがインストールされています。</span><span class="sxs-lookup"><span data-stu-id="80a21-160">This state information, passed into <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="80a21-161">この状態情報を明示的に変更するコードを通常必要はありません。</span><span class="sxs-lookup"><span data-stu-id="80a21-161">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="80a21-162"><xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> 基底クラスのメソッドによってスローされた例外を呼び出し元のメソッドに渡すまたは<xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="80a21-162"><xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> passes to the calling method any exceptions thrown by base class methods or <xref:System.Configuration.Install.Installer.BeforeInstall> / <xref:System.Configuration.Install.Installer.AfterInstall> event handlers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80a21-163">
            <paramref name="stateSaver" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-163">The <paramref name="stateSaver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80a21-164">サービス アプリケーションを実行するときに使用するユーザー アカウントに関連付けられたパスワードを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-164">Gets or sets the password associated with the user account under which the service application runs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80a21-165">サービスを実行するために必要なアカウントに関連付けられたパスワード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-165">The password associated with the account under which the service should run.</span>
          </span>
          <span data-ttu-id="80a21-166">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-166">The default is an empty string ("").</span>
          </span>
          <span data-ttu-id="80a21-167">プロパティは、パブリックではなく、シリアル化されることもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-167">The property is not public, and is never serialized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80a21-168"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>ペアにより、システム アカウント以外のアカウントで実行するサービス。</span><span class="sxs-lookup"><span data-stu-id="80a21-168">The <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="80a21-169">たとえば、ユーザーがログオンしていないときの再起動時に自動的に開始するサービスを許可これことができます。</span><span class="sxs-lookup"><span data-stu-id="80a21-169">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span>  
  
 <span data-ttu-id="80a21-170"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>はシリアル化またはインストールの状態を保存しないという点で、安全な方法で処理されます (プロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) またはパブリック アクセス権を持つ他の場所。</span><span class="sxs-lookup"><span data-stu-id="80a21-170"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) or other location with public access.</span></span>  
  
 <span data-ttu-id="80a21-171">設定、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>インストール時に、サービスに自動的に関連付けられるアカウントを使用します。</span><span class="sxs-lookup"><span data-stu-id="80a21-171">Setting the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> allows an account to be associated automatically with the service at install time.</span></span> <span data-ttu-id="80a21-172">いずれかのままにする場合、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>または<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>空になり、設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>に`User`、有効なユーザー名とインストール時にパスワードを求められます。</span><span class="sxs-lookup"><span data-stu-id="80a21-172">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="80a21-173">別のアカウントでサービスを実行するための別のオプションでは、コンピューターのシステム アカウントを使用します。</span><span class="sxs-lookup"><span data-stu-id="80a21-173">Another option for running a service under a separate account is to use the computer's System account.</span></span> <span data-ttu-id="80a21-174">そのアカウントは、管理者アカウントとは異なりますが、パスワードは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="80a21-174">That account, which is distinct from the Administrator account, requires no password.</span></span> <span data-ttu-id="80a21-175">現在ログインしているユーザーのシステム アカウントの特権を超える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="80a21-175">The System account's privileges may exceed those of the user currently logged in.</span></span> <span data-ttu-id="80a21-176">ユーザー アカウントは、アクセス許可が不足しているユーザーに起因する問題を回避できます。 ではなく、システム アカウントで実行されているサービスが必要です。</span><span class="sxs-lookup"><span data-stu-id="80a21-176">Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</span></span>  
  
 <span data-ttu-id="80a21-177">場合<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>以外の任意の値は、 `User`、指定されたアカウント (ローカルまたはネットワーク サービス、またはローカル システム) を使用すると、場合でも、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>プロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="80a21-177">If <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> is any value other than `User`, the specifed account (local or network service, or local system) is used, even if the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are populated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="80a21-178">インストールに関連付けられているコンテキスト情報を格納する <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-178">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80a21-179">インストール プロシージャによってレジストリに書き込まれたサービス アプリケーション情報をロールバックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-179">Rolls back service application information written to the registry by the installation procedure.</span>
          </span>
          <span data-ttu-id="80a21-180">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-180">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80a21-181">通常、呼び出すことはありません、メソッドで<xref:System.ServiceProcess.ServiceProcessInstaller>は、コード内で一般的に呼び出される、インストール ユーティリティでのみです。</span><span class="sxs-lookup"><span data-stu-id="80a21-181">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceProcessInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="80a21-182">インストール ユーティリティが自動的に呼び出し、<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>インストール プロセス中にメソッド。</span><span class="sxs-lookup"><span data-stu-id="80a21-182">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> method during the installation process.</span></span> <span data-ttu-id="80a21-183">バックアップ実行の障害を必要に応じて、呼び出すことによって<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>例外を生成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="80a21-183">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="80a21-184">アプリケーションのインストールが自動的にプロジェクトのインストーラーを使用して、既にインストールされているコンポーネントに関する情報を保持<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="80a21-184">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="80a21-185">この状態情報が渡される<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>として、`savedState`パラメーターは継続的に更新、<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスと各<xref:System.ServiceProcess.ServiceInstaller>ユーティリティによってインスタンスがインストールされています。</span><span class="sxs-lookup"><span data-stu-id="80a21-185">This state information, passed into <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="80a21-186">この状態情報を明示的に変更するコードを通常必要はありません。</span><span class="sxs-lookup"><span data-stu-id="80a21-186">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="80a21-187"><xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 基底クラスのメソッドによってスローされた例外を呼び出し元のメソッドに渡すまたは<xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="80a21-187"><xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> passes to the calling method any exceptions thrown by base class methods or <xref:System.Configuration.Install.Installer.BeforeInstall> / <xref:System.Configuration.Install.Installer.AfterInstall> event handlers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80a21-188">
            <paramref name="savedState" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-188">The <paramref name="savedState" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="80a21-189">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-189">-or-</span>
          </span>
          <span data-ttu-id="80a21-190">
            <paramref name="savedState" /> が、破損しているか存在していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-190">The <paramref name="savedState" /> is corrupted or non-existent.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80a21-191">サービス アプリケーションを実行するときに使用するユーザー アカウントを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-191">Gets or sets the user account under which the service application will run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80a21-192">サービスを実行するために必要なアカウント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-192">The account under which the service should run.</span>
          </span>
          <span data-ttu-id="80a21-193">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="80a21-193">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80a21-194"><xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>ペアにより、システム アカウント以外のアカウントで実行するサービス。</span><span class="sxs-lookup"><span data-stu-id="80a21-194">The <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="80a21-195">たとえば、ユーザーがログオンしていないときの再起動時に自動的に開始するサービスを許可これことができます。</span><span class="sxs-lookup"><span data-stu-id="80a21-195">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span>  
  
 <span data-ttu-id="80a21-196"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>はシリアル化またはインストールの状態を保存しないという点で、安全な方法で処理されます (プロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) またはパブリック アクセス権を持つ他の場所。</span><span class="sxs-lookup"><span data-stu-id="80a21-196"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) or other location with public access.</span></span>  
  
 <span data-ttu-id="80a21-197">設定、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>インストール時に、サービスに自動的に関連付けられるアカウントを使用します。</span><span class="sxs-lookup"><span data-stu-id="80a21-197">Setting the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> allows an account to be associated automatically with the service at install time.</span></span> <span data-ttu-id="80a21-198">いずれかのままにする場合、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>または<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>空になり、設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>に`User`、有効なユーザー名とインストール時にパスワードを求められます。</span><span class="sxs-lookup"><span data-stu-id="80a21-198">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="80a21-199">別のアカウントでサービスを実行するための別のオプションでは、コンピューターのシステム アカウントを使用します。</span><span class="sxs-lookup"><span data-stu-id="80a21-199">Another option for running a service under a separate account is to use the computer's System account.</span></span> <span data-ttu-id="80a21-200">そのアカウントは、管理者アカウントとは異なりますが、パスワードは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="80a21-200">That account, which is distinct from the Administrator account, requires no password.</span></span> <span data-ttu-id="80a21-201">現在ログインしているユーザーのシステム アカウントの特権を超える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="80a21-201">The System account's privileges may exceed those of the user currently logged in.</span></span> <span data-ttu-id="80a21-202">ユーザー アカウントは、アクセス許可が不足しているユーザーに起因する問題を回避できます。 ではなく、システム アカウントで実行されているサービスが必要です。</span><span class="sxs-lookup"><span data-stu-id="80a21-202">Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</span></span>  
  
 <span data-ttu-id="80a21-203">場合<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>以外の任意の値は、 `User`、指定されたアカウント (ローカルまたはネットワーク サービス、またはローカル システム) を使用すると、場合でも、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>プロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="80a21-203">If <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> is any value other than `User`, the specified account (local or network service, or local system) is used, even if the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are populated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>