<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c20e92c41d23587c8e791d251cf9ba3406bd2c80" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69231689" /></Metadata><TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceProcessInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4eacd-101"><see cref="T:System.ServiceProcess.ServiceBase" /> を拡張するクラスを含む実行可能ファイルをインストールします。</span><span class="sxs-lookup"><span data-stu-id="4eacd-101">Installs an executable containing classes that extend <see cref="T:System.ServiceProcess.ServiceBase" />.</span></span> <span data-ttu-id="4eacd-102">このクラスは、サービス アプリケーションのインストール時に InstallUtil.exe などのインストール ユーティリティで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-102">This class is called by installation utilities, such as InstallUtil.exe, when installing a service application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eacd-103">は<xref:System.ServiceProcess.ServiceProcessInstaller> 、実行可能ファイル内のすべてのサービスに共通します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-103">The <xref:System.ServiceProcess.ServiceProcessInstaller> does work common to all services in an executable.</span></span> <span data-ttu-id="4eacd-104">インストールユーティリティでは、インストールするサービスに関連付けられたレジストリ値を書き込むために使用されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-104">It is used by the installation utility to write registry values associated with services you want to install.</span></span>  
  
 <span data-ttu-id="4eacd-105">サービスをインストールするには、から<xref:System.Configuration.Install.Installer>継承されるプロジェクトインストーラークラスを作成し、クラスのをに<xref:System.ComponentModel.RunInstallerAttribute> `true`設定します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-105">To install a service, create a project installer class that inherits from <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> on the class to `true`.</span></span> <span data-ttu-id="4eacd-106">プロジェクト内で、サービスアプリケーション<xref:System.ServiceProcess.ServiceProcessInstaller>ごとに1つのインスタンスと<xref:System.ServiceProcess.ServiceInstaller> 、アプリケーションのサービスごとに1つのインスタンスをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-106">Within your project, instantiate one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="4eacd-107">最後に、 <xref:System.ServiceProcess.ServiceProcessInstaller>インスタンス<xref:System.ServiceProcess.ServiceInstaller>とインスタンスをプロジェクトインストーラークラスに追加します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-107">Finally, add the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and the <xref:System.ServiceProcess.ServiceInstaller> instances to your project installer class.</span></span>  
  
 <span data-ttu-id="4eacd-108">Installutil.exe を実行すると、ユーティリティは、が<xref:System.ComponentModel.RunInstallerAttribute>に`true`設定された状態で、サービスアセンブリ内のクラスを検索します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-108">When InstallUtil.exe runs, the utility looks for classes in the service assembly with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`.</span></span> <span data-ttu-id="4eacd-109">クラスをプロジェクトインストーラーに関連付けられている<xref:System.Configuration.Install.Installer.Installers%2A>コレクションに追加して、サービスアセンブリに追加します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-109">Add classes to the service assembly by adding them to the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer.</span></span> <span data-ttu-id="4eacd-110"><xref:System.ComponentModel.RunInstallerAttribute> が`false`の場合、インストールユーティリティはプロジェクトインストーラーを無視します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-110">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the install utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="4eacd-111">の<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスの場合、変更できるプロパティには、ログオンしているユーザー以外のアカウントでサービスアプリケーションを実行することの指定が含まれます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-111">For an instance of <xref:System.ServiceProcess.ServiceProcessInstaller>, properties you can modify include specifying that a service application run under an account other than the logged-on user.</span></span> <span data-ttu-id="4eacd-112">サービスを実行する特定<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>の<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>およびペアを指定できます。また、を使用<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>して、サービスをコンピューターのシステムアカウント、ローカルまたはネットワークサービスアカウント、またはユーザーアカウントで実行するように指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-112">You can specify a particular <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair under which the service should run, or you can use <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to specify that the service run under the computer's System account, a local or network service account, or a user account.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4eacd-113">コンピューターのシステムアカウントが管理者アカウントと同じではありません。</span><span class="sxs-lookup"><span data-stu-id="4eacd-113">The computer's System account is not the same as the Administrator account.</span></span>  
  
 <span data-ttu-id="4eacd-114">通常、コード<xref:System.ServiceProcess.ServiceInstaller>内でメソッドを呼び出さないでください。通常は、インストールユーティリティによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-114">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="4eacd-115">インストールユーティリティでは、インストール<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>プロセス<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType>中にメソッドとメソッドが自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-115">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="4eacd-116">必要に応じて、以前にインストールされ<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>たすべて<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>のコンポーネントに対して (または) を呼び出すことによって、エラーをバックアップします。</span><span class="sxs-lookup"><span data-stu-id="4eacd-116">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components.</span></span>  
  
 <span data-ttu-id="4eacd-117">アプリケーションのインストールルーチンは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-117">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4eacd-118">この状態情報は<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスとして継続的に更新され、各<xref:System.ServiceProcess.ServiceInstaller>インスタンスはユーティリティによってインストールされます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-118">This state information is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="4eacd-119">通常、コードでこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="4eacd-119">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="4eacd-120">を<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンス化すると、基底クラス<xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>のコンストラクターであるが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-120">Instantiating a <xref:System.ServiceProcess.ServiceProcessInstaller> causes the base class constructor, <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>, to be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4eacd-121">次の例では、MyProjectInstaller という名前のプロジェクトインストーラー <xref:System.Configuration.Install.Installer>を作成します。このインストーラーは、から継承されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-121">The following example creates a project installer called MyProjectInstaller, which inherits from <xref:System.Configuration.Install.Installer>.</span></span> <span data-ttu-id="4eacd-122">"Hello World Service 1" と "Hello World Service 2" という2つのサービスを含むサービス実行可能ファイルがあることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="4eacd-122">It is assumed there is a service executable that contains two services, "Hello-World Service 1" and "Hello-World Service 2".</span></span> <span data-ttu-id="4eacd-123">(インストールユーティリティによって呼び出される) myprojectinstaller のコンストラクター内では、 <xref:System.ServiceProcess.ServiceInstaller>各サービス<xref:System.ServiceProcess.ServiceProcessInstaller>に対してオブジェクトが作成され、その実行可能ファイルに対してが作成されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-123">Within the constructor for MyProjectInstaller (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each service, and a <xref:System.ServiceProcess.ServiceProcessInstaller> is created for the executable.</span></span> <span data-ttu-id="4eacd-124">インストールユーティリティで myprojectinstaller が有効なインストーラー <xref:System.ComponentModel.RunInstallerAttribute>として認識されるようにするには、属性をに`true`設定します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-124">For the install utility to recognize MyProjectInstaller as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.</span></span>  
  
 <span data-ttu-id="4eacd-125">インストーラーが<xref:System.Configuration.Install.Installer.Installers%2A>コレクションに追加される前に、プロセスインストーラーとサービスインストーラーに対してオプションのプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-125">Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span> <span data-ttu-id="4eacd-126">インストールユーティリティが myprojectinstaller にアクセスすると、へ<xref:System.Configuration.Install.Installer.Installers%2A> <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType>の呼び出しによってコレクションに追加されたオブジェクトが順番にインストールされます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-126">When the install utility accesses MyProjectInstaller, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> will be installed in turn.</span></span> <span data-ttu-id="4eacd-127">この処理中、インストーラーは、インストールされているオブジェクトを示す状態情報を保持するため、インストールエラーが発生した場合には、各オブジェクトを順番にバックアップできます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-127">During the process, the installer maintains state information indicating which objects have been installed, so each object can be backed out in turn in case of an installation failure.</span></span>  
  
 <span data-ttu-id="4eacd-128">通常、プロジェクトインストーラークラスを明示的にインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="4eacd-128">Normally, you would not instantiate your project installer class explicitly.</span></span> <span data-ttu-id="4eacd-129">これを作成してを追加<xref:System.ComponentModel.RunInstallerAttribute>しますが、実際には、インストールユーティリティがを呼び出して、クラスをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-129">You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute>, but the install utility actually calls, and therefore instantiates, the class.</span></span>  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4eacd-130"><see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-130">Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberSignature Language="F#" Value="member this.Account : System.ServiceProcess.ServiceAccount with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4eacd-131">サービス アプリケーションを実行するときに使用するアカウントの種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-131">Gets or sets the type of account under which to run this service application.</span></span></summary>
        <value><span data-ttu-id="4eacd-132">システムでこのサービスを実行するときに使用するアカウントの種類を定義する <see cref="T:System.ServiceProcess.ServiceAccount" />。</span><span class="sxs-lookup"><span data-stu-id="4eacd-132">A <see cref="T:System.ServiceProcess.ServiceAccount" /> that defines the type of account under which the system runs this service.</span></span> <span data-ttu-id="4eacd-133">既定値は、<see langword="User" /> です。</span><span class="sxs-lookup"><span data-stu-id="4eacd-133">The default is <see langword="User" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eacd-134">プロパティが`User`の場合、 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>プロパティと<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>プロパティを使用して、サービスアプリケーションを実行するアカウントを定義します。 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A></span><span class="sxs-lookup"><span data-stu-id="4eacd-134">When the <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> property is `User`, the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are used to define an account under which the service application runs.</span></span>  
  
 <span data-ttu-id="4eacd-135">と<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>の<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>ペアを使用すると、システムアカウント以外のアカウントでサービスを実行できます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-135">The <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="4eacd-136">たとえば、ユーザーがログオンしていないときに、再起動時にサービスが自動的に開始されるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-136">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span> <span data-ttu-id="4eacd-137"><xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>または<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>を空のままにして、 `User`をに設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>すると、インストール時に有効なユーザー名とパスワードを入力するように求められます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-137">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="4eacd-138">また、サービスをローカルシステムアカウントで実行するか、ローカルサービスまたはネットワークサービスとして実行するかを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-138">You can also specify that the service run under the local system account, or as a local or network service.</span></span> <span data-ttu-id="4eacd-139">アカウントの<xref:System.ServiceProcess.ServiceAccount>種類の詳細については、列挙体を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4eacd-139">See the <xref:System.ServiceProcess.ServiceAccount> enumeration for details on types of accounts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceProcessInstaller.CopyFromComponent comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp"><span data-ttu-id="4eacd-140">サービス プロセスを表す <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="4eacd-140">The <see cref="T:System.ComponentModel.IComponent" /> that represents the service process.</span></span></param>
        <summary><span data-ttu-id="4eacd-141"><see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> クラス固有の動作を行わない、基本クラスの <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-141">Implements the base class <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> method with no <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class-specific behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eacd-142">コード内でこのメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="4eacd-142">This method should not be called within your code.</span></span> <span data-ttu-id="4eacd-143">の<xref:System.Configuration.Install.ComponentInstaller>基本クラスのメソッドは`abstract`であるため、ここでは派生クラスに実装します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-143">The base class method on <xref:System.Configuration.Install.ComponentInstaller> is `abstract`, so it is implemented here on the derived class.</span></span> <span data-ttu-id="4eacd-144">ただし、メソッドの実装<xref:System.ServiceProcess.ServiceProcessInstaller>にはクラス固有の処理はありません。</span><span class="sxs-lookup"><span data-stu-id="4eacd-144">However, there is no <xref:System.ServiceProcess.ServiceProcessInstaller> class-specific processing in the method's implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4eacd-145">サービスのインストール オプションに関する情報を表示するヘルプのテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-145">Gets help text displayed for service installation options.</span></span></summary>
        <value><span data-ttu-id="4eacd-146">特定のアカウントでサービスを実行するために必要なユーザー名とパスワードの設定手順を説明するヘルプのテキスト。</span><span class="sxs-lookup"><span data-stu-id="4eacd-146">Help text that provides a description of the steps for setting the user name and password in order to run the service under a particular account.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eacd-147">このヘルプテキストは、サービスを手動で開始するときに使用できます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-147">This help text can be used when a service starts manually.</span></span> <span data-ttu-id="4eacd-148">ユーザーにユーザー名とパスワードの情報を入力する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-148">It indicates to the user how to enter user name and password information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver"><span data-ttu-id="4eacd-149">インストールに関連付けられているコンテキスト情報を格納する <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4eacd-149">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span></span></param>
        <summary><span data-ttu-id="4eacd-150">サービス アプリケーション情報をレジストリに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-150">Writes service application information to the registry.</span></span> <span data-ttu-id="4eacd-151">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-151">This method is meant to be used by installation tools, which call the appropriate methods automatically.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eacd-152">通常、コード<xref:System.ServiceProcess.ServiceProcessInstaller>内でメソッドを呼び出さないでください。通常は、インストールユーティリティによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-152">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceProcessInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="4eacd-153">インストールユーティリティでは、インストール<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>プロセス中にメソッドが自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-153">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> method during the installation process.</span></span> <span data-ttu-id="4eacd-154">必要に応じて、以前にインストールされ<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>たすべてのコンポーネントに対してを呼び出すことによって、エラーをバックアップします。</span><span class="sxs-lookup"><span data-stu-id="4eacd-154">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> on all previously installed components.</span></span> <span data-ttu-id="4eacd-155">このメソッドは、のインストールを基底クラス<xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType>のメソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-155">This method passes the installation to the base class <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4eacd-156">通常、コード<xref:System.ServiceProcess.ServiceInstaller>内でメソッドを呼び出すことはありません。通常は、インストールユーティリティによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-156">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="4eacd-157">インストールユーティリティでは、インストール<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>プロセス<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType>中にメソッドとメソッドが自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-157">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="4eacd-158">必要に応じて、以前にインストールされ<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>たすべて<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>のコンポーネントに対して (または) を呼び出すことにより、エラーをバックアップします。</span><span class="sxs-lookup"><span data-stu-id="4eacd-158">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components</span></span>  
  
 <span data-ttu-id="4eacd-159">アプリケーションのインストールルーチンは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-159">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4eacd-160">この<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A>状態情報`stateSaver` は、<xref:System.ServiceProcess.ServiceInstaller>パラメーターとしてに渡され、インスタンスとして継続的に更新され、各インスタンスがユーティリティによってインストールされます。<xref:System.ServiceProcess.ServiceProcessInstaller></span><span class="sxs-lookup"><span data-stu-id="4eacd-160">This state information, passed into <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="4eacd-161">通常、コードでこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="4eacd-161">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="4eacd-162"><xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A>基底クラスのメソッドまたは<xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall>イベントハンドラーによってスローされた例外を呼び出し元のメソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-162"><xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> passes to the calling method any exceptions thrown by base class methods or <xref:System.Configuration.Install.Installer.BeforeInstall> / <xref:System.Configuration.Install.Installer.AfterInstall> event handlers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4eacd-163"><paramref name="stateSaver" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4eacd-163">The <paramref name="stateSaver" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4eacd-164">サービス アプリケーションを実行するときに使用するユーザー アカウントに関連付けられたパスワードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-164">Gets or sets the password associated with the user account under which the service application runs.</span></span></summary>
        <value><span data-ttu-id="4eacd-165">サービスを実行するために必要なアカウントに関連付けられたパスワード。</span><span class="sxs-lookup"><span data-stu-id="4eacd-165">The password associated with the account under which the service should run.</span></span> <span data-ttu-id="4eacd-166">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="4eacd-166">The default is an empty string ("").</span></span> <span data-ttu-id="4eacd-167">プロパティは、パブリックではなく、シリアル化されることもありません。</span><span class="sxs-lookup"><span data-stu-id="4eacd-167">The property is not public, and is never serialized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eacd-168">と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>の<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>ペアを使用すると、システムアカウント以外のアカウントでサービスを実行できます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-168">The <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="4eacd-169">たとえば、ユーザーがログオンしていないときに、再起動時にサービスが自動的に開始されるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-169">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span>  
  
 <span data-ttu-id="4eacd-170"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>は安全な方法で処理されます。これは、インストール状態 (プロジェクト<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>インストーラー) やパブリックアクセスを持つその他の場所にシリアル化または保存されることはありません。</span><span class="sxs-lookup"><span data-stu-id="4eacd-170"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) or other location with public access.</span></span>  
  
 <span data-ttu-id="4eacd-171">とを設定<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>すると、インストール時にアカウントをサービスに自動的に関連付けることができます。 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A></span><span class="sxs-lookup"><span data-stu-id="4eacd-171">Setting the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> allows an account to be associated automatically with the service at install time.</span></span> <span data-ttu-id="4eacd-172"><xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>または<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>を空のままにして、 `User`をに設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>すると、インストール時に有効なユーザー名とパスワードを入力するように求められます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-172">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="4eacd-173">別のアカウントでサービスを実行するもう1つのオプションは、コンピューターのシステムアカウントを使用することです。</span><span class="sxs-lookup"><span data-stu-id="4eacd-173">Another option for running a service under a separate account is to use the computer's System account.</span></span> <span data-ttu-id="4eacd-174">このアカウントは、管理者アカウントとは異なり、パスワードは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="4eacd-174">That account, which is distinct from the Administrator account, requires no password.</span></span> <span data-ttu-id="4eacd-175">システムアカウントの特権は、現在ログインしているユーザーの特権を超える場合があります。</span><span class="sxs-lookup"><span data-stu-id="4eacd-175">The System account's privileges may exceed those of the user currently logged in.</span></span> <span data-ttu-id="4eacd-176">ユーザーアカウントではなくシステムアカウントで実行すると、サービスに必要なアクセス許可がユーザーに与えられていないために発生する問題を回避できます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-176">Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</span></span>  
  
 <span data-ttu-id="4eacd-177">に以外`User`の値を指定<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>すると、プロパティと<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>プロパティが設定されていても、指定したアカウント (local または network service、または local system) が使用されます。 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A></span><span class="sxs-lookup"><span data-stu-id="4eacd-177">If <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> is any value other than `User`, the specified account (local or network service, or local system) is used, even if the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are populated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="4eacd-178">インストールに関連付けられているコンテキスト情報を格納する <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4eacd-178">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span></span></param>
        <summary><span data-ttu-id="4eacd-179">インストール プロシージャによってレジストリに書き込まれたサービス アプリケーション情報をロールバックします。</span><span class="sxs-lookup"><span data-stu-id="4eacd-179">Rolls back service application information written to the registry by the installation procedure.</span></span> <span data-ttu-id="4eacd-180">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に処理します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-180">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eacd-181">通常、コード<xref:System.ServiceProcess.ServiceProcessInstaller>内でメソッドを呼び出さないでください。通常は、インストールユーティリティによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-181">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceProcessInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="4eacd-182">インストールユーティリティでは、インストール<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>プロセス中にメソッドが自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-182">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> method during the installation process.</span></span> <span data-ttu-id="4eacd-183">必要に応じて、例外を生成した<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>オブジェクトに対してを呼び出すことによって、エラーをバックアップします。</span><span class="sxs-lookup"><span data-stu-id="4eacd-183">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="4eacd-184">アプリケーションのインストールルーチンは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-184">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4eacd-185">この<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>状態情報`savedState` は、<xref:System.ServiceProcess.ServiceInstaller>パラメーターとしてに渡され、インスタンスとして継続的に更新され、各インスタンスがユーティリティによってインストールされます。<xref:System.ServiceProcess.ServiceProcessInstaller></span><span class="sxs-lookup"><span data-stu-id="4eacd-185">This state information, passed into <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="4eacd-186">通常、コードでこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="4eacd-186">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="4eacd-187"><xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>基底クラスのメソッドまたは<xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall>イベントハンドラーによってスローされた例外を呼び出し元のメソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-187"><xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> passes to the calling method any exceptions thrown by base class methods or <xref:System.Configuration.Install.Installer.BeforeInstall> / <xref:System.Configuration.Install.Installer.AfterInstall> event handlers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4eacd-188"><paramref name="savedState" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4eacd-188">The <paramref name="savedState" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4eacd-189">- または -</span><span class="sxs-lookup"><span data-stu-id="4eacd-189">-or-</span></span> 
<span data-ttu-id="4eacd-190"><paramref name="savedState" /> が、破損しているか存在していません。</span><span class="sxs-lookup"><span data-stu-id="4eacd-190">The <paramref name="savedState" /> is corrupted or non-existent.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4eacd-191">サービス アプリケーションを実行するときに使用するユーザー アカウントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4eacd-191">Gets or sets the user account under which the service application will run.</span></span></summary>
        <value><span data-ttu-id="4eacd-192">サービスを実行するために必要なアカウント。</span><span class="sxs-lookup"><span data-stu-id="4eacd-192">The account under which the service should run.</span></span> <span data-ttu-id="4eacd-193">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="4eacd-193">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eacd-194">と<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>の<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>ペアを使用すると、システムアカウント以外のアカウントでサービスを実行できます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-194">The <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="4eacd-195">たとえば、ユーザーがログオンしていないときに、再起動時にサービスが自動的に開始されるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-195">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span>  
  
 <span data-ttu-id="4eacd-196"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>は安全な方法で処理されます。これは、インストール状態 (プロジェクト<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>インストーラー) やパブリックアクセスを持つその他の場所にシリアル化または保存されることはありません。</span><span class="sxs-lookup"><span data-stu-id="4eacd-196"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) or other location with public access.</span></span>  
  
 <span data-ttu-id="4eacd-197">とを設定<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>すると、インストール時にアカウントをサービスに自動的に関連付けることができます。 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A></span><span class="sxs-lookup"><span data-stu-id="4eacd-197">Setting the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> allows an account to be associated automatically with the service at install time.</span></span> <span data-ttu-id="4eacd-198"><xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>または<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>を空のままにして、 `User`をに設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>すると、インストール時に有効なユーザー名とパスワードを入力するように求められます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-198">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="4eacd-199">別のアカウントでサービスを実行するもう1つのオプションは、コンピューターのシステムアカウントを使用することです。</span><span class="sxs-lookup"><span data-stu-id="4eacd-199">Another option for running a service under a separate account is to use the computer's System account.</span></span> <span data-ttu-id="4eacd-200">このアカウントは、管理者アカウントとは異なり、パスワードは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="4eacd-200">That account, which is distinct from the Administrator account, requires no password.</span></span> <span data-ttu-id="4eacd-201">システムアカウントの特権は、現在ログインしているユーザーの特権を超える場合があります。</span><span class="sxs-lookup"><span data-stu-id="4eacd-201">The System account's privileges may exceed those of the user currently logged in.</span></span> <span data-ttu-id="4eacd-202">ユーザーアカウントではなくシステムアカウントで実行すると、サービスに必要なアクセス許可がユーザーに与えられていないために発生する問題を回避できます。</span><span class="sxs-lookup"><span data-stu-id="4eacd-202">Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</span></span>  
  
 <span data-ttu-id="4eacd-203">に以外`User`の値を指定<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>すると、プロパティと<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>プロパティが設定されていても、指定したアカウント (local または network service、または local system) が使用されます。 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A></span><span class="sxs-lookup"><span data-stu-id="4eacd-203">If <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> is any value other than `User`, the specified account (local or network service, or local system) is used, even if the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are populated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>
