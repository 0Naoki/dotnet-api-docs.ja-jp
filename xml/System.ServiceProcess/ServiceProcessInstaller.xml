<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c20e92c41d23587c8e791d251cf9ba3406bd2c80" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70458168" /></Metadata><TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceProcessInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.ServiceProcess.ServiceBase" /> を拡張するクラスを含む実行可能ファイルをインストールします。 このクラスは、サービス アプリケーションのインストール時に InstallUtil.exe などのインストール ユーティリティで呼び出されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 は<xref:System.ServiceProcess.ServiceProcessInstaller> 、実行可能ファイル内のすべてのサービスに共通します。 インストールユーティリティでは、インストールするサービスに関連付けられたレジストリ値を書き込むために使用されます。  
  
 サービスをインストールするには、から<xref:System.Configuration.Install.Installer>継承されるプロジェクトインストーラークラスを作成し、クラスのをに<xref:System.ComponentModel.RunInstallerAttribute> `true`設定します。 プロジェクト内で、サービスアプリケーション<xref:System.ServiceProcess.ServiceProcessInstaller>ごとに1つのインスタンスと<xref:System.ServiceProcess.ServiceInstaller> 、アプリケーションのサービスごとに1つのインスタンスをインスタンス化します。 最後に、 <xref:System.ServiceProcess.ServiceProcessInstaller>インスタンス<xref:System.ServiceProcess.ServiceInstaller>とインスタンスをプロジェクトインストーラークラスに追加します。  
  
 Installutil.exe を実行すると、ユーティリティは、が<xref:System.ComponentModel.RunInstallerAttribute>に`true`設定された状態で、サービスアセンブリ内のクラスを検索します。 クラスをプロジェクトインストーラーに関連付けられている<xref:System.Configuration.Install.Installer.Installers%2A>コレクションに追加して、サービスアセンブリに追加します。 <xref:System.ComponentModel.RunInstallerAttribute> が `false` の場合、インストールユーティリティはプロジェクトインストーラーを無視します。  
  
 の<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスの場合、変更できるプロパティには、ログオンしているユーザー以外のアカウントでサービスアプリケーションを実行することの指定が含まれます。 サービスを実行する特定<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>の<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>およびペアを指定できます。また、を使用<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>して、サービスをコンピューターのシステムアカウント、ローカルまたはネットワークサービスアカウント、またはユーザーアカウントで実行するように指定することもできます。  
  
> [!NOTE]
>  コンピューターのシステムアカウントが管理者アカウントと同じではありません。  
  
 通常、コード<xref:System.ServiceProcess.ServiceInstaller>内でメソッドを呼び出さないでください。通常は、インストールユーティリティによってのみ呼び出されます。 インストールユーティリティでは、インストール<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>プロセス<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType>中にメソッドとメソッドが自動的に呼び出されます。 必要に応じて、以前にインストールされ<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>たすべて<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>のコンポーネントに対して (または) を呼び出すことによって、エラーをバックアップします。  
  
 アプリケーションのインストールルーチンは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。 この状態情報は<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスとして継続的に更新され、各<xref:System.ServiceProcess.ServiceInstaller>インスタンスはユーティリティによってインストールされます。 通常、コードでこの状態情報を明示的に変更する必要はありません。  
  
 を<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンス化すると、基底クラス<xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>のコンストラクターであるが呼び出されます。  
  
   
  
## Examples  
 次の例では、MyProjectInstaller という名前のプロジェクトインストーラー <xref:System.Configuration.Install.Installer>を作成します。このインストーラーは、から継承されます。 "Hello World Service 1" と "Hello World Service 2" という2つのサービスを含むサービス実行可能ファイルがあることを前提としています。 (インストールユーティリティによって呼び出される) myprojectinstaller のコンストラクター内では、 <xref:System.ServiceProcess.ServiceInstaller>各サービス<xref:System.ServiceProcess.ServiceProcessInstaller>に対してオブジェクトが作成され、その実行可能ファイルに対してが作成されます。 インストールユーティリティで myprojectinstaller が有効なインストーラー <xref:System.ComponentModel.RunInstallerAttribute>として認識されるようにするには、属性をに`true`設定します。  
  
 インストーラーが<xref:System.Configuration.Install.Installer.Installers%2A>コレクションに追加される前に、プロセスインストーラーとサービスインストーラーに対してオプションのプロパティが設定されます。 インストールユーティリティが myprojectinstaller にアクセスすると、へ<xref:System.Configuration.Install.Installer.Installers%2A> <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType>の呼び出しによってコレクションに追加されたオブジェクトが順番にインストールされます。 この処理中、インストーラーは、インストールされているオブジェクトを示す状態情報を保持するため、インストールエラーが発生した場合には、各オブジェクトを順番にバックアップできます。  
  
 通常、プロジェクトインストーラークラスを明示的にインスタンス化することはありません。 これを作成してを追加<xref:System.ComponentModel.RunInstallerAttribute>しますが、実際には、インストールユーティリティがを呼び出して、クラスをインスタンス化します。  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberSignature Language="F#" Value="member this.Account : System.ServiceProcess.ServiceAccount with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サービス アプリケーションを実行するときに使用するアカウントの種類を取得または設定します。</summary>
        <value>システムでこのサービスを実行するときに使用するアカウントの種類を定義する <see cref="T:System.ServiceProcess.ServiceAccount" />。 既定値は、<see langword="User" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティが`User`の場合、 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>プロパティと<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>プロパティを使用して、サービスアプリケーションを実行するアカウントを定義します。 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>  
  
 と<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>の<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>ペアを使用すると、システムアカウント以外のアカウントでサービスを実行できます。 たとえば、ユーザーがログオンしていないときに、再起動時にサービスが自動的に開始されるようにすることができます。 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>または<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>を空のままにして、 `User`をに設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>すると、インストール時に有効なユーザー名とパスワードを入力するように求められます。  
  
 また、サービスをローカルシステムアカウントで実行するか、ローカルサービスまたはネットワークサービスとして実行するかを指定することもできます。 アカウントの<xref:System.ServiceProcess.ServiceAccount>種類の詳細については、列挙体を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceProcessInstaller.CopyFromComponent comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">サービス プロセスを表す <see cref="T:System.ComponentModel.IComponent" />。</param>
        <summary><see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> クラス固有の動作を行わない、基本クラスの <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> メソッドを実装します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コード内でこのメソッドを呼び出すことはできません。 の<xref:System.Configuration.Install.ComponentInstaller>基本クラスのメソッドは`abstract`であるため、ここでは派生クラスに実装します。 ただし、メソッドの実装<xref:System.ServiceProcess.ServiceProcessInstaller>にはクラス固有の処理はありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サービスのインストール オプションに関する情報を表示するヘルプのテキストを取得します。</summary>
        <value>特定のアカウントでサービスを実行するために必要なユーザー名とパスワードの設定手順を説明するヘルプのテキスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このヘルプテキストは、サービスを手動で開始するときに使用できます。 ユーザーにユーザー名とパスワードの情報を入力する方法を示します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">インストールに関連付けられているコンテキスト情報を格納する <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>サービス アプリケーション情報をレジストリに書き込みます。 このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、コード<xref:System.ServiceProcess.ServiceProcessInstaller>内でメソッドを呼び出さないでください。通常は、インストールユーティリティによってのみ呼び出されます。 インストールユーティリティでは、インストール<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>プロセス中にメソッドが自動的に呼び出されます。 必要に応じて、以前にインストールされ<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>たすべてのコンポーネントに対してを呼び出すことによって、エラーをバックアップします。 このメソッドは、のインストールを基底クラス<xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType>のメソッドに渡します。  
  
 通常、コード<xref:System.ServiceProcess.ServiceInstaller>内でメソッドを呼び出すことはありません。通常は、インストールユーティリティによってのみ呼び出されます。 インストールユーティリティでは、インストール<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>プロセス<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType>中にメソッドとメソッドが自動的に呼び出されます。 必要に応じて、以前にインストールされ<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>たすべて<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>のコンポーネントに対して (または) を呼び出すことにより、エラーをバックアップします。  
  
 アプリケーションのインストールルーチンは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。 この<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A>状態情報`stateSaver` は、 <xref:System.ServiceProcess.ServiceInstaller> パラメーターとしてに渡され、インスタンスとして継続的に更新され、各インスタンスがユーティリティによってインストールされます。 <xref:System.ServiceProcess.ServiceProcessInstaller> 通常、コードでこの状態情報を明示的に変更する必要はありません。  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A>基底クラスのメソッドまたは<xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall>イベントハンドラーによってスローされた例外を呼び出し元のメソッドに渡します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stateSaver" /> が <see langword="null" /> です。</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サービス アプリケーションを実行するときに使用するユーザー アカウントに関連付けられたパスワードを取得または設定します。</summary>
        <value>サービスを実行するために必要なアカウントに関連付けられたパスワード。 既定値は、空の文字列 ("") です。 プロパティは、パブリックではなく、シリアル化されることもありません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>の<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>ペアを使用すると、システムアカウント以外のアカウントでサービスを実行できます。 たとえば、ユーザーがログオンしていないときに、再起動時にサービスが自動的に開始されるようにすることができます。  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>は安全な方法で処理されます。これは、インストール状態 (プロジェクト<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>インストーラー) やパブリックアクセスを持つその他の場所にシリアル化または保存されることはありません。  
  
 とを設定<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>すると、インストール時にアカウントをサービスに自動的に関連付けることができます。 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>または<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>を空のままにして、 `User`をに設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>すると、インストール時に有効なユーザー名とパスワードを入力するように求められます。  
  
 別のアカウントでサービスを実行するもう1つのオプションは、コンピューターのシステムアカウントを使用することです。 このアカウントは、管理者アカウントとは異なり、パスワードは必要ありません。 システムアカウントの特権は、現在ログインしているユーザーの特権を超える場合があります。 ユーザーアカウントではなくシステムアカウントで実行すると、サービスに必要なアクセス許可がユーザーに与えられていないために発生する問題を回避できます。  
  
 に以外`User`の値を指定<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>すると、プロパティと<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>プロパティが設定されていても、指定したアカウント (local または network service、または local system) が使用されます。 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">インストールに関連付けられているコンテキスト情報を格納する <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>インストール プロシージャによってレジストリに書き込まれたサービス アプリケーション情報をロールバックします。 このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、コード<xref:System.ServiceProcess.ServiceProcessInstaller>内でメソッドを呼び出さないでください。通常は、インストールユーティリティによってのみ呼び出されます。 インストールユーティリティでは、インストール<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>プロセス中にメソッドが自動的に呼び出されます。 必要に応じて、例外を生成した<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>オブジェクトに対してを呼び出すことによって、エラーをバックアップします。  
  
 アプリケーションのインストールルーチンは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。 この<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>状態情報`savedState` は、 <xref:System.ServiceProcess.ServiceInstaller> パラメーターとしてに渡され、インスタンスとして継続的に更新され、各インスタンスがユーティリティによってインストールされます。 <xref:System.ServiceProcess.ServiceProcessInstaller> 通常、コードでこの状態情報を明示的に変更する必要はありません。  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>基底クラスのメソッドまたは<xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall>イベントハンドラーによってスローされた例外を呼び出し元のメソッドに渡します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> が <see langword="null" /> です。  
  
- または - 
<paramref name="savedState" /> が、破損しているか存在していません。</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サービス アプリケーションを実行するときに使用するユーザー アカウントを取得または設定します。</summary>
        <value>サービスを実行するために必要なアカウント。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 と<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>の<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>ペアを使用すると、システムアカウント以外のアカウントでサービスを実行できます。 たとえば、ユーザーがログオンしていないときに、再起動時にサービスが自動的に開始されるようにすることができます。  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>は安全な方法で処理されます。これは、インストール状態 (プロジェクト<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>インストーラー) やパブリックアクセスを持つその他の場所にシリアル化または保存されることはありません。  
  
 とを設定<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>すると、インストール時にアカウントをサービスに自動的に関連付けることができます。 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>または<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>を空のままにして、 `User`をに設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>すると、インストール時に有効なユーザー名とパスワードを入力するように求められます。  
  
 別のアカウントでサービスを実行するもう1つのオプションは、コンピューターのシステムアカウントを使用することです。 このアカウントは、管理者アカウントとは異なり、パスワードは必要ありません。 システムアカウントの特権は、現在ログインしているユーザーの特権を超える場合があります。 ユーザーアカウントではなくシステムアカウントで実行すると、サービスに必要なアクセス許可がユーザーに与えられていないために発生する問題を回避できます。  
  
 に以外`User`の値を指定<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>すると、プロパティと<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>プロパティが設定されていても、指定したアカウント (local または network service、または local system) が使用されます。 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>
