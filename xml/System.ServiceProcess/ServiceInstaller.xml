<Type Name="ServiceInstaller" FullName="System.ServiceProcess.ServiceInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e6765d4baec8d048456f421424ebdc9a9b90ced" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70564213" /></Metadata><TypeSignature Language="C#" Value="public class ServiceInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4a8f7-101"><see cref="T:System.ServiceProcess.ServiceBase" /> を拡張するクラスをインストールしてサービスを実装します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-101">Installs a class that extends <see cref="T:System.ServiceProcess.ServiceBase" /> to implement a service.</span></span> <span data-ttu-id="4a8f7-102">このクラスは、サービス アプリケーションのインストール時に、インストール ユーティリティで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-102">This class is called by the install utility when installing a service application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a8f7-103">は<xref:System.ServiceProcess.ServiceInstaller> 、関連付けられているサービスに固有の機能を持ちます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-103">The <xref:System.ServiceProcess.ServiceInstaller> does work specific to the service with which it is associated.</span></span> <span data-ttu-id="4a8f7-104">このファイルは、サービスに関連付けられているレジストリ値を HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services レジストリキー内のサブキーに書き込むためにインストールユーティリティによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-104">It is used by the installation utility to write registry values associated with the service to a subkey within the HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services registry key.</span></span> <span data-ttu-id="4a8f7-105">サービスは、このサブキーの中で ServiceName によって識別されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-105">The service is identified by its ServiceName within this subkey.</span></span> <span data-ttu-id="4a8f7-106">サブキーには、サービスが属する実行可能ファイルまたは .dll の名前も含まれます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-106">The subkey also includes the name of the executable or .dll to which the service belongs.</span></span>  
  
 <span data-ttu-id="4a8f7-107">サービスをインストールするには、 <xref:System.Configuration.Install.Installer>クラスを継承するプロジェクトインストーラークラスを作成し、クラスの<xref:System.ComponentModel.RunInstallerAttribute>属性をに`true`設定します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-107">To install a service, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer> class, and set the <xref:System.ComponentModel.RunInstallerAttribute> attribute on the class to `true`.</span></span> <span data-ttu-id="4a8f7-108">プロジェクト内で、サービスアプリケーション<xref:System.ServiceProcess.ServiceProcessInstaller>ごとに1つのインスタンスと<xref:System.ServiceProcess.ServiceInstaller> 、アプリケーションの各サービスに1つのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-108">Within your project, create one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="4a8f7-109">プロジェクトインストーラークラスコンストラクター内で、インスタンス<xref:System.ServiceProcess.ServiceProcessInstaller>と<xref:System.ServiceProcess.ServiceInstaller>インスタンスを使用してサービスのインストールプロパティを設定し、インスタンスを<xref:System.Configuration.Install.Installer.Installers%2A>コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-109">Within your project installer class constructor, set the installation properties for the service using the <xref:System.ServiceProcess.ServiceProcessInstaller> and <xref:System.ServiceProcess.ServiceInstaller> instances, and add the instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a8f7-110">インストーラーインスタンスを追加するには、コンストラクターを使用することをお勧めします。ただし、 <xref:System.Configuration.Install.Installer.Installers%2A> <xref:System.ServiceProcess.ServiceInstaller.Install%2A>メソッドのコレクションにを追加する必要がある場合は、 <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッド内のコレクションに対して同じ追加を実行してください。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-110">It is recommended that you use the constructor for adding installer instances; however, if you need to add to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method, be sure to perform the same additions to the collection in the <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> method.</span></span>  
  
 <span data-ttu-id="4a8f7-111"><xref:System.Configuration.Install.Installer>クラスから派生するすべてのクラスについて、 <xref:System.Configuration.Install.Installer.Installers%2A>コレクションの状態は、メソッド<xref:System.ServiceProcess.ServiceInstaller.Install%2A>と<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッドで同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-111">For all classes deriving from the <xref:System.Configuration.Install.Installer> class, the state of the <xref:System.Configuration.Install.Installer.Installers%2A> collection must be the same in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods.</span></span> <span data-ttu-id="4a8f7-112">ただし、カスタムインストーラークラスコンストラクターの<xref:System.ServiceProcess.ServiceInstaller.Install%2A> <xref:System.Configuration.Install.Installer.Installers%2A>コレクションにインストーラーインスタンスを追加<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>すると、メソッドとメソッドを使用してコレクションのメンテナンスを回避できます。インストールユーティリティが呼び出されると、 <xref:System.ComponentModel.RunInstallerAttribute>属性が検索されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-112">However, you can avoid the maintenance of the collection across the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods if you add installer instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in your custom installer class constructor.When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute> attribute.</span></span> <span data-ttu-id="4a8f7-113">属性が`true`の場合、ユーティリティは、プロジェクトインストーラーに関連付けられた<xref:System.Configuration.Install.Installer.Installers%2A>コレクションに追加されたすべてのサービスをインストールします。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-113">If the attribute is `true`, the utility installs all the services that were added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection that were associated with your project installer.</span></span> <span data-ttu-id="4a8f7-114"><xref:System.ComponentModel.RunInstallerAttribute> が `false` であるか、または存在しない場合、インストールユーティリティはプロジェクトインストーラーを無視します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-114">If <xref:System.ComponentModel.RunInstallerAttribute> is `false` or does not exist, the install utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="4a8f7-115">プロジェクト<xref:System.ServiceProcess.ServiceProcessInstaller>インストールクラスに関連付けられているでは<xref:System.ServiceProcess.ServiceInstaller> 、プロジェクト内のすべてのインスタンスに共通の情報がインストールされます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-115">The <xref:System.ServiceProcess.ServiceProcessInstaller> associated with your project installation class installs information common to all <xref:System.ServiceProcess.ServiceInstaller> instances in the project.</span></span> <span data-ttu-id="4a8f7-116">このサービスにインストールプロジェクト内の他のサービスと分離するものがある場合は、そのサービス固有の情報がこの方法でインストールされます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-116">If this service has anything that separates it from the other services in the installation project, that service-specific information is installed by this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a8f7-117">は、 <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>から<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> 派生し <xref:System.ServiceProcess.ServiceBase> たクラスのと同じであることが重要です。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-117">It is crucial that the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the class you derived from <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="4a8f7-118">通常、サービスの<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>プロパティの値は、サービスアプリケーションの実行可能ファイルの Main () 関数内で設定されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-118">Normally, the value of the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> property for the service is set within the Main() function of the service application's executable.</span></span> <span data-ttu-id="4a8f7-119">サービスコントロールマネージャーは、 <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType>プロパティを使用して、この実行可能ファイル内でサービスを検索します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-119">The Service Control Manager uses the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> property to locate the service within this executable.</span></span>  
  
 <span data-ttu-id="4a8f7-120">プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Installers%2A>コレクションに追加する<xref:System.ServiceProcess.ServiceInstaller>前または後に、の他のプロパティを変更できます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-120">You can modify other properties on the <xref:System.ServiceProcess.ServiceInstaller> either before or after adding it to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer.</span></span> <span data-ttu-id="4a8f7-121">たとえば、再起動時に<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>サービスを自動的に開始するようにサービスのを設定したり、サービスを手動で開始するようにユーザーに要求したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-121">For example, a service's <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> may be set to start the service automatically at reboot or require a user to start the service manually.</span></span>  
  
 <span data-ttu-id="4a8f7-122">通常、コード<xref:System.ServiceProcess.ServiceInstaller>内でメソッドを呼び出すことはありません。通常は、インストールユーティリティによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-122">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="4a8f7-123">インストールユーティリティでは、インストール<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>プロセス<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType>中にメソッドとメソッドが自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-123">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="4a8f7-124">必要に応じて、以前にインストールされ<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>たすべて<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>のコンポーネントに対して (または) を呼び出すことによって、エラーをバックアップします。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-124">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components.</span></span>  
  
 <span data-ttu-id="4a8f7-125">インストールユーティリティがを<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>呼び出して、オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-125">The installation utility calls <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> to remove the object.</span></span>  
  
 <span data-ttu-id="4a8f7-126">アプリケーションのインストールルーチンは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-126">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a8f7-127">この状態情報は<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスとして継続的に更新され、各<xref:System.ServiceProcess.ServiceInstaller>インスタンスはユーティリティによってインストールされます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-127">This state information is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance, and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="4a8f7-128">通常、コードで状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-128">It is usually unnecessary for your code to modify state information explicitly.</span></span>  
  
 <span data-ttu-id="4a8f7-129">インストールが実行されると、 <xref:System.Diagnostics.EventLogInstaller> <xref:System.ServiceProcess.ServiceBase>派生クラスに関連付けられているイベントログソースをインストールするためのが自動的に作成されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-129">When the installation is performed, it automatically creates an <xref:System.Diagnostics.EventLogInstaller> to install the event log source associated with the <xref:System.ServiceProcess.ServiceBase> derived class.</span></span> <span data-ttu-id="4a8f7-130">このソースの<xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A>プロパティは、コンストラクターによってコンピューターのアプリケーションログに設定されます。 <xref:System.Diagnostics.EventLog.Log%2A></span><span class="sxs-lookup"><span data-stu-id="4a8f7-130">The <xref:System.Diagnostics.EventLog.Log%2A> property for this source is set by the <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A> constructor to the computer's Application log.</span></span> <span data-ttu-id="4a8f7-131">(サービスのと<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>同じ) <xref:System.Diagnostics.EventLog.Source%2A> のを設定すると、が自動的に同じ値に設定されます。 <xref:System.ServiceProcess.ServiceInstaller></span><span class="sxs-lookup"><span data-stu-id="4a8f7-131">When you set the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the <xref:System.ServiceProcess.ServiceInstaller> (which should be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the service), the <xref:System.Diagnostics.EventLog.Source%2A> is automatically set to the same value.</span></span> <span data-ttu-id="4a8f7-132">インストールが失敗すると、ソースのインストールが以前にインストールされたサービスと共にロールバックされます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-132">In an installation failure, the source's installation is rolled-back along with previously installed services.</span></span>  
  
 <span data-ttu-id="4a8f7-133"><xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッドは、サービスが実行されている場合、そのサービスを停止しようとします。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-133">The <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> method tries to stop the service if it is running.</span></span> <span data-ttu-id="4a8f7-134">成功したかどうか<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>にかかわらず、に<xref:System.ServiceProcess.ServiceInstaller.Install%2A>よって行われた変更を元に戻します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-134">Whether this succeeds or not, <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> undoes the changes made by <xref:System.ServiceProcess.ServiceInstaller.Install%2A>.</span></span> <span data-ttu-id="4a8f7-135">イベントログ用に新しいソースが作成された場合は、ソースが削除されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-135">If a new source was created for event logging, the source is deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a8f7-136">次の例では、という`MyProjectInstaller`プロジェクトインストーラーを作成します。これは、から<xref:System.Configuration.Install.Installer>継承されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-136">The following example creates a project installer, called `MyProjectInstaller`, which inherits from <xref:System.Configuration.Install.Installer>.</span></span> <span data-ttu-id="4a8f7-137">"Hello World Service 1" と "Hello World Service 2" という2つのサービスを含むサービス実行可能ファイルがあることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-137">It is assumed there is a service executable that contains two services, "Hello-World Service 1" and "Hello-World Service 2".</span></span> <span data-ttu-id="4a8f7-138">(インストールユーティリティに`MyProjectInstaller`よって呼び出される<xref:System.ServiceProcess.ServiceInstaller> ) のコンストラクター内では、 <xref:System.ServiceProcess.ServiceProcessInstaller>これらのサービスごとにオブジェクトが作成され、実行可能ファイルに対してが作成されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-138">Within the constructor for `MyProjectInstaller` (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each of these services, and a <xref:System.ServiceProcess.ServiceProcessInstaller> is created for the executable.</span></span> <span data-ttu-id="4a8f7-139">インストールユーティリティで有効なインストーラー `MyProjectInstaller` <xref:System.ComponentModel.RunInstallerAttribute>として認識されるようにするに`true`は、属性をに設定します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-139">For the install utility to recognize `MyProjectInstaller` as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.</span></span>  
  
 <span data-ttu-id="4a8f7-140">インストーラーが<xref:System.Configuration.Install.Installer.Installers%2A>コレクションに追加される前に、プロセスインストーラーとサービスインストーラーに対してオプションのプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-140">Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span> <span data-ttu-id="4a8f7-141">インストールユーティリティがにアクセス`MyProjectInstaller`すると、へ<xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType>の呼び出し<xref:System.Configuration.Install.Installer.Installers%2A>によってコレクションに追加されたオブジェクトが順にインストールされます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-141">When the install utility accesses `MyProjectInstaller`, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> will be installed in turn.</span></span> <span data-ttu-id="4a8f7-142">このプロセスの間、インストーラーは、インストールされているオブジェクトを示す状態情報を保持するため、インストールエラーが発生した場合は、各オブジェクトを順番にバックアップできます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-142">During the process, the installer maintains state information indicating which objects have been installed, so each can be backed out in turn, if an installation failure occurs.</span></span>  
  
 <span data-ttu-id="4a8f7-143">通常、プロジェクトインストーラークラスのインスタンスを明示的に作成することはありません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-143">Normally, you would not create an instance of your project installer class explicitly.</span></span> <span data-ttu-id="4a8f7-144">これを作成して<xref:System.ComponentModel.RunInstallerAttribute>属性を構文に追加しますが、これは実際にクラスを呼び出してインスタンス化するインストールユーティリティです。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-144">You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute> attribute to the syntax, but it is the install utility that actually calls, and therefore instantiates, the class.</span></span>  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceProcess.ServiceBase.ServiceName" />
    <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="P:System.ServiceProcess.ServiceBase.EventLog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a8f7-145"><see cref="T:System.ServiceProcess.ServiceInstaller" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-145">Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceInstaller" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a8f7-146">サービスをインストールするには、 <xref:System.Configuration.Install.Installer>クラスを継承するプロジェクトインストーラークラスを作成し、クラスの<xref:System.ComponentModel.RunInstallerAttribute>属性をに`true`設定します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-146">To install a service, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer> class, and set the <xref:System.ComponentModel.RunInstallerAttribute> attribute on the class to `true`.</span></span> <span data-ttu-id="4a8f7-147">プロジェクト内で、サービスアプリケーション<xref:System.ServiceProcess.ServiceProcessInstaller>ごとに1つのインスタンスと<xref:System.ServiceProcess.ServiceInstaller> 、アプリケーションの各サービスに1つのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-147">Within your project, create one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="4a8f7-148">プロジェクトインストーラークラスコンストラクター内で、インスタンス<xref:System.ServiceProcess.ServiceProcessInstaller>と<xref:System.ServiceProcess.ServiceInstaller>インスタンスを使用してサービスのインストールプロパティを設定し、インスタンスを<xref:System.Configuration.Install.Installer.Installers%2A>コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-148">Within your project installer class constructor, set the installation properties for the service using the <xref:System.ServiceProcess.ServiceProcessInstaller> and <xref:System.ServiceProcess.ServiceInstaller> instances, and add the instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
 <span data-ttu-id="4a8f7-149">コンストラクター <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A>は、 <xref:System.Diagnostics.EventLog.Log%2A>プロパティがコンピューターの<xref:System.Diagnostics.EventLogInstaller>アプリケーションログに設定されているイベントログソースと、を自動的に生成します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-149">The <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A> constructor automatically generates an event log source whose <xref:System.Diagnostics.EventLog.Log%2A> property is set to the computer's Application log, and an <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="4a8f7-150"><xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> <xref:System.ServiceProcess.ServiceInstaller>サービスのと <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> 同じになるのを設定すると、イベントログのプロパティは自動的に同じ値に設定されます。 <xref:System.Diagnostics.EventLog.Source%2A></span><span class="sxs-lookup"><span data-stu-id="4a8f7-150">When you set the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the <xref:System.ServiceProcess.ServiceInstaller>, which should be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the service, the <xref:System.Diagnostics.EventLog.Source%2A> property of the event log is automatically set to the same value.</span></span> <span data-ttu-id="4a8f7-151">インストールが失敗した場合、ソースは自動的に削除されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-151">The source is deleted automatically in the case of an installation failure.</span></span>  
  
 <span data-ttu-id="4a8f7-152">コンストラクター <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A>は、 <xref:System.ServiceProcess.ServiceInstaller.StartType%2A>プロパティをに`ServiceStartMode.Manual`設定して、ユーザーがサービスを開始するように指定します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-152">The <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A> constructor sets the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> property to `ServiceStartMode.Manual` to specify that a user start the service.</span></span> <span data-ttu-id="4a8f7-153">プロパティをに`ServiceStartMode.Automatic`リセットすると、コンピューターの再起動時にサービスを開始するように指定できます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-153">You can reset the property to `ServiceStartMode.Automatic` to specify that the service start when the computer reboots.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.ServiceProcess.ServiceStartMode" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="4a8f7-154">コピー元の <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-154">The <see cref="T:System.ComponentModel.IComponent" /> from which to copy.</span></span></param>
        <summary><span data-ttu-id="4a8f7-155">プロパティを <see cref="T:System.ServiceProcess.ServiceBase" /> のインスタンスからこのインストーラーへコピーします。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-155">Copies properties from an instance of <see cref="T:System.ServiceProcess.ServiceBase" /> to this installer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a8f7-156">このメソッドは、コード内で呼び出されることはほとんどありません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-156">This method will rarely be called within your code.</span></span> <span data-ttu-id="4a8f7-157"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A>は、通常、デザイナーによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-157"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A> is usually called only by designers.</span></span>  
  
 <span data-ttu-id="4a8f7-158"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A>`component`パラメーターのサービス名<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>を<xref:System.ServiceProcess.ServiceInstaller>インスタンスのに保存します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-158"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A> saves the service name of the `component` parameter to the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the <xref:System.ServiceProcess.ServiceInstaller> instance.</span></span> <span data-ttu-id="4a8f7-159">(パラメーターは、から<xref:System.ServiceProcess.ServiceBase>派生したクラスのインスタンスである必要があるため、 `component`に<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>はプロパティがあることが保証されています)。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-159">(Because the parameter must be an instance of a class that derives from <xref:System.ServiceProcess.ServiceBase>, `component` is guaranteed to have a <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> property.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a8f7-160">Visual Studio デザイナーを使用している場合、このクラスをインストーラーとして指定した`Add Installer`コンポーネントをユーザーがクリックすると、デザイン時にこのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-160">If you are using the Visual Studio designer, this method is called at design time when the user clicks `Add Installer` on a component that specified this class as its installer.</span></span> <span data-ttu-id="4a8f7-161">インストーラーは、ライブコンポーネントから実行できるすべての情報を取得し、インストール時に使用するために保存します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-161">The installer takes all information it can from the live component and stores it for use at install time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a8f7-162">このインストーラーに関連付けているコンポーネントが <see cref="T:System.ServiceProcess.ServiceBase" /> から継承されません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-162">The component you are associating with this installer does not inherit from <see cref="T:System.ServiceProcess.ServiceBase" />.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="DelayedAutoStart">
      <MemberSignature Language="C#" Value="public bool DelayedAutoStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DelayedAutoStart" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart" />
      <MemberSignature Language="VB.NET" Value="Public Property DelayedAutoStart As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DelayedAutoStart { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DelayedAutoStart : bool with get, set" Usage="System.ServiceProcess.ServiceInstaller.DelayedAutoStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerDelayedAutoStart")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a8f7-163">他の自動的に開始されるサービスが実行されるまでサービスの開始を遅延するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-163">Gets or sets a value that indicates whether the service should be delayed from starting until other automatically started services are running.</span></span></summary>
        <value><span data-ttu-id="4a8f7-164">サービスの自動開始を遅延する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-164"><see langword="true" /> to delay automatic start of the service; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4a8f7-165">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-165">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a8f7-166">プロパティ<xref:System.ServiceProcess.ServiceInstaller.DelayedAutoStart%2A>はどのサービスにも適用できますが、サービスの開始モードが<xref:System.ServiceProcess.ServiceStartMode.Automatic>でない限り無視されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-166">The <xref:System.ServiceProcess.ServiceInstaller.DelayedAutoStart%2A> property can be applied to any service, but it is ignored unless the service's start mode is <xref:System.ServiceProcess.ServiceStartMode.Automatic>.</span></span> <span data-ttu-id="4a8f7-167">この設定は、次回システムを再起動したときに有効になります。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-167">The setting takes effect the next time the system is restarted.</span></span> <span data-ttu-id="4a8f7-168">サービスコントロールマネージャーは、サービスの特定の開始時刻を保証しません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-168">The Service Control Manager does not guarantee a specific start time for the service.</span></span>  
  
 <span data-ttu-id="4a8f7-169">遅延自動開始サービスは、負荷の順序付けグループのメンバーにすることはできませんが、別の自動開始サービスに依存することができます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-169">A delayed automatic start service cannot be a member of a load ordering group, but it can depend on another automatic start service.</span></span> <span data-ttu-id="4a8f7-170">アプリケーションが読み込み前に遅延自動開始サービスを呼び出すと、呼び出しは失敗します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-170">If an application calls a delayed automatic start service before it is loaded, the call fails.</span></span>  
  
 <span data-ttu-id="4a8f7-171">遅延自動開始をサポートしていないオペレーティングシステムでは、このプロパティを設定しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-171">On operating systems that do not support delayed automatic start, setting this property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.ServiceProcess.ServiceInstaller.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerDescription")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a8f7-172">サービスの説明を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-172">Gets or sets the description for the service.</span></span></summary>
        <value><span data-ttu-id="4a8f7-173">サービスの説明。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-173">The description of the service.</span></span> <span data-ttu-id="4a8f7-174">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-174">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a8f7-175"><xref:System.ServiceProcess.ServiceInstaller.Description%2A>プロパティを使用して、インストールされているサービスの目的をユーザーに説明します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-175">Use the <xref:System.ServiceProcess.ServiceInstaller.Description%2A> property to describe the purpose of the installed service to the user.</span></span> <span data-ttu-id="4a8f7-176">ユーザーは、インストールされているサービスの詳細を表示するアプリケーションで、サービスの説明を表示できます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-176">The user can view the service description in applications that display details for installed services.</span></span>  
  
 <span data-ttu-id="4a8f7-177">たとえば、Windows XP を使用してサービスの説明を表示するには、サービスコントロールコマンドラインユーティリティ (Sc.exe) を使用するか、または**コンピューターの管理**コンソールの **[サービス]** ノードでサービスの説明を表示します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-177">For example, using Windows XP, you can view the service description with the Service Control command-line utility (Sc.exe) or you can view the service description within the **Services** node of the **Computer Management** console.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a8f7-178">次のコード例では、新しい Windows サービスアプリケーションのインストールプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-178">The following code example sets the installation properties for a new Windows service application.</span></span> <span data-ttu-id="4a8f7-179">この例では、表示名と説明と共にサービス名を設定します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-179">The example sets the service name, along with the display name and description.</span></span> <span data-ttu-id="4a8f7-180">サービスのインストールプロパティを割り当てると、この例では<xref:System.ServiceProcess.ServiceInstaller>オブジェクト<xref:System.Configuration.Install.Installer.Installers%2A>をコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-180">After assigning the installation properties for the service, the example adds the <xref:System.ServiceProcess.ServiceInstaller> object to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
 [!code-csharp[ServiceProcess_ServiceInstaller#3](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceProcess_serviceinstaller/CS/simpleserviceinstaller.cs#3)]
 [!code-vb[ServiceProcess_ServiceInstaller#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceProcess_serviceinstaller/VB/service1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.ServiceProcess.ServiceInstaller.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerDisplayName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a8f7-181">ユーザーがサービスを識別するための表示名を示します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-181">Indicates the friendly name that identifies the service to the user.</span></span></summary>
        <value><span data-ttu-id="4a8f7-182">対話形式のツールで頻繁に使用される、サービスに関連付けられた名前。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-182">The name associated with the service, used frequently for interactive tools.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a8f7-183">サービス<xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A>コントロールマネージャーでは、を使用して、ユーザーが判読できるサービスのわかりやすい名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-183">The <xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A> is used, for example, in the Service Control Manager to provide a user-readable descriptive name for the service.</span></span> <span data-ttu-id="4a8f7-184"><xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A>はレジストリ値ですが、レジストリキーとしては使用されません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-184">The <xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A> is a registry value, but is never used as a registry key.</span></span> <span data-ttu-id="4a8f7-185">したがって、 <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>プロパティ値に対する制限は適用されません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-185">Therefore, restrictions on the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property value do not apply.</span></span> <span data-ttu-id="4a8f7-186"><xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>は HKEY_LOCAL_MACHINES\System\CurrentControlSet\Services レジストリキーとして使用されるため、制限されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-186"><xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> is used as the HKEY_LOCAL_MACHINES\System\CurrentControlSet\Services registry key, so it is restricted.</span></span>  
  
 <span data-ttu-id="4a8f7-187">この表示名は、サービスを識別するためにインストールユーティリティによって使用されることはありません。そのため、 <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>プロパティの場合と同様に、名前の選択には制限はありません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-187">The display name is never used by the install utility to identify the service, so there are no restrictions on the choice of name, as there is for the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.Description" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver"><span data-ttu-id="4a8f7-188">インストールに関連付けられているコンテキスト情報を格納する <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-188">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span></span></param>
        <summary><span data-ttu-id="4a8f7-189">サービス アプリケーション情報をレジストリに書き込んで、サービスをインストールします。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-189">Installs the service by writing service application information to the registry.</span></span> <span data-ttu-id="4a8f7-190">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に処理します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-190">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a8f7-191">通常、コード<xref:System.ServiceProcess.ServiceInstaller>内でメソッドを呼び出すことはありません。通常は、インストールユーティリティによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-191">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="4a8f7-192">インストールユーティリティは、インストール時<xref:System.ServiceProcess.ServiceInstaller.Install%2A>に自動的にメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-192">The install utility automatically calls the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method during installation.</span></span> <span data-ttu-id="4a8f7-193">必要に応じて、例外を生成した<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A>オブジェクトに対してを呼び出すことによって、エラーをバックアップします。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-193">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="4a8f7-194">アプリケーションのインストールルーチンは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-194">An application's install routine maintains information automatically about the components that were already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a8f7-195">この<xref:System.ServiceProcess.ServiceInstaller.Install%2A>状態情報`stateSaver` は、 <xref:System.ServiceProcess.ServiceInstaller> パラメーターとしてに渡され、インスタンスとして継続的に更新され、各インスタンスがユーティリティによってインストールされます。 <xref:System.ServiceProcess.ServiceProcessInstaller></span><span class="sxs-lookup"><span data-stu-id="4a8f7-195">This state information, passed into <xref:System.ServiceProcess.ServiceInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="4a8f7-196">通常、コードでこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-196">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="4a8f7-197">プロジェクト<xref:System.ServiceProcess.ServiceProcessInstaller>インストールクラスに関連付けられているでは<xref:System.ServiceProcess.ServiceInstaller> 、プロジェクト内のすべてのインスタンスに共通の情報がインストールされます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-197">The <xref:System.ServiceProcess.ServiceProcessInstaller> associated with your project installation class installs information common to all <xref:System.ServiceProcess.ServiceInstaller> instances in the project.</span></span> <span data-ttu-id="4a8f7-198">このサービスにインストールプロジェクト内の他のサービスと分離するものがある場合は、そのサービス固有の情報がこの方法でインストールされます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-198">If this service has anything that separates it from the other services in the installation project, that service-specific information is installed by this method.</span></span>  
  
 <span data-ttu-id="4a8f7-199">サービスをインストールするには、 <xref:System.Configuration.Install.Installer>クラスを継承するプロジェクトインストーラークラスを作成し、クラスの<xref:System.ComponentModel.RunInstallerAttribute>属性をに`true`設定します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-199">To install a service, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer> class, and set the <xref:System.ComponentModel.RunInstallerAttribute> attribute on the class to `true`.</span></span> <span data-ttu-id="4a8f7-200">プロジェクト内で、サービスアプリケーション<xref:System.ServiceProcess.ServiceProcessInstaller>ごとに1つのインスタンスと<xref:System.ServiceProcess.ServiceInstaller> 、アプリケーションの各サービスに1つのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-200">Within your project, create one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="4a8f7-201">プロジェクトインストーラークラスコンストラクター内で、インスタンス<xref:System.ServiceProcess.ServiceProcessInstaller>と<xref:System.ServiceProcess.ServiceInstaller>インスタンスを使用してサービスのインストールプロパティを設定し、インスタンスを<xref:System.Configuration.Install.Installer.Installers%2A>コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-201">Within your project installer class constructor, set the installation properties for the service using the <xref:System.ServiceProcess.ServiceProcessInstaller> and <xref:System.ServiceProcess.ServiceInstaller> instances, and add the instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a8f7-202">インストーラーインスタンスを追加するには、コンストラクターを使用することをお勧めします。ただし、 <xref:System.Configuration.Install.Installer.Installers%2A> <xref:System.ServiceProcess.ServiceInstaller.Install%2A>メソッドのコレクションにを追加する必要がある場合は、 <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッド内のコレクションに対して同じ追加を実行してください。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-202">It is recommended that you use the constructor for adding installer instances; however, if you need to add to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method, be sure to perform the same additions to the collection in the <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> method.</span></span>  
  
 <span data-ttu-id="4a8f7-203"><xref:System.Configuration.Install.Installer>クラスから派生するすべてのクラスについて、 <xref:System.Configuration.Install.Installer.Installers%2A>コレクションの状態は、メソッド<xref:System.ServiceProcess.ServiceInstaller.Install%2A>と<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッドで同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-203">For all classes deriving from the <xref:System.Configuration.Install.Installer> class, the state of the <xref:System.Configuration.Install.Installer.Installers%2A> collection must be the same in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods.</span></span> <span data-ttu-id="4a8f7-204">ただし、カスタムインストーラークラスコンストラクターの<xref:System.ServiceProcess.ServiceInstaller.Install%2A> <xref:System.Configuration.Install.Installer.Installers%2A>コレクションにインストーラーインスタンスを追加<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>すると、メソッドとメソッドを使用してコレクションのメンテナンスを回避できます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-204">However, you can avoid the maintenance of the collection across the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods if you add installer instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in your custom installer class constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a8f7-205">セットアップ ツールに、実行可能ファイルの <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-205">The installation does not contain a <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> for the executable.</span></span>  
  
<span data-ttu-id="4a8f7-206">または</span><span class="sxs-lookup"><span data-stu-id="4a8f7-206">-or-</span></span> 
<span data-ttu-id="4a8f7-207">アセンブリのファイル名が <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-207">The file name for the assembly is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="4a8f7-208">- または -</span><span class="sxs-lookup"><span data-stu-id="4a8f7-208">-or-</span></span> 
<span data-ttu-id="4a8f7-209">サービス名が無効です。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-209">The service name is invalid.</span></span>  
  
<span data-ttu-id="4a8f7-210">- または -</span><span class="sxs-lookup"><span data-stu-id="4a8f7-210">-or-</span></span> 
<span data-ttu-id="4a8f7-211">サービス コントロール マネージャーを開くことができませんでした。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-211">The Service Control Manager could not be opened.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a8f7-212">サービスの表示名の長さが 255 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-212">The display name for the service is more than 255 characters in length.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="4a8f7-213">サービスへのハンドルが生成できませんでした。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-213">The system could not generate a handle to the service.</span></span>  
  
 <span data-ttu-id="4a8f7-214">または</span><span class="sxs-lookup"><span data-stu-id="4a8f7-214">-or-</span></span>  
  
 <span data-ttu-id="4a8f7-215">この名前のサービスは既にインストールされています。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-215">A service with that name is already installed.</span></span></exception>
        <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Diagnostics.EventLogInstaller" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="serviceInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller"><span data-ttu-id="4a8f7-216">現在のインストーラーと比較される <see cref="T:System.Configuration.Install.ComponentInstaller" />。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-216">A <see cref="T:System.Configuration.Install.ComponentInstaller" /> to which you are comparing the current installer.</span></span></param>
        <summary><span data-ttu-id="4a8f7-217">2 つのインストーラーが同じサービスをインストールするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-217">Indicates whether two installers would install the same service.</span></span></summary>
        <returns><span data-ttu-id="4a8f7-218">両方のインストーラーで <see cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" /> を呼び出すと、同じサービスがインストールされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-218"><see langword="true" /> if calling <see cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" /> on both of these installers would result in installing the same service; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a8f7-219"><xref:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller%2A>たとえば、2つのインストーラーが同じユーザーアカウントで同じサービスをインストールするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-219"><xref:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller%2A> indicates, for example, whether two installers would install the same service under the same user account.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="4a8f7-220">インストールに関連付けられているコンテキスト情報を格納する <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-220">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span></span></param>
        <summary><span data-ttu-id="4a8f7-221">インストール プロシージャによってレジストリに書き込まれたサービス アプリケーション情報をロールバックします。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-221">Rolls back service application information written to the registry by the installation procedure.</span></span> <span data-ttu-id="4a8f7-222">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に処理します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-222">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a8f7-223">通常、コード<xref:System.ServiceProcess.ServiceInstaller>内でメソッドを呼び出すことはありません。通常は、インストールユーティリティによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-223">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="4a8f7-224">インストールユーティリティでは、インストール<xref:System.ServiceProcess.ServiceInstaller.Install%2A>プロセス中にメソッドが自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-224">The install utility automatically calls the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method during the installation process.</span></span> <span data-ttu-id="4a8f7-225">必要に応じて、例外を生成した<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A>オブジェクトに対してを呼び出すことによって、エラーをバックアップします。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-225">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="4a8f7-226">アプリケーションのインストールルーチンは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-226">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a8f7-227">この<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A>状態情報`savedState` は、 <xref:System.ServiceProcess.ServiceInstaller> パラメーターとしてに渡され、インスタンスとして継続的に更新され、各インスタンスがユーティリティによってインストールされます。 <xref:System.ServiceProcess.ServiceProcessInstaller></span><span class="sxs-lookup"><span data-stu-id="4a8f7-227">This state information, passed into <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="4a8f7-228">通常、コードでこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-228">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string with get, set" Usage="System.ServiceProcess.ServiceInstaller.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerServiceName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a8f7-229">このサービスを識別するためにシステムが使用する名前を示します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-229">Indicates the name used by the system to identify this service.</span></span> <span data-ttu-id="4a8f7-230">このプロパティは、インストールするサービスの <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> と同じにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-230">This property must be identical to the <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> of the service you want to install.</span></span></summary>
        <value><span data-ttu-id="4a8f7-231">インストールされるサービスの名前。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-231">The name of the service to be installed.</span></span> <span data-ttu-id="4a8f7-232">この値は、インストール ユーティリティがサービスをインストールする前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-232">This value must be set before the install utility attempts to install the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a8f7-233">は、 <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>から<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> 派生し <xref:System.ServiceProcess.ServiceBase> たクラスのと同じであることが重要です。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-233">It is crucial that the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the class you derived from <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="4a8f7-234">通常、サービスの<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>プロパティの値は、サービスアプリケーションの実行可能ファイルの Main () 関数内で設定されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-234">Normally, the value of the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> property for the service is set within the Main() function of the service application's executable.</span></span> <span data-ttu-id="4a8f7-235">サービスコントロールマネージャーは、 <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType>プロパティを使用して、この実行可能ファイル内でサービスを検索します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-235">The Service Control Manager uses the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> property to locate the service within this executable.</span></span>  
  
 <span data-ttu-id="4a8f7-236">サービス<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>のインストーラー <xref:System.Diagnostics.EventLog.Source%2A>のを設定すると、関連付けられているイベントログのが同じ値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-236">When you set the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the service installer, the <xref:System.Diagnostics.EventLog.Source%2A> of the associated event log is set to the same value.</span></span> <span data-ttu-id="4a8f7-237">これにより、サービスは、コンピューター上のアプリケーションログに対するサービスコマンド (開始や停止など) の呼び出しを自動的にログに記録できます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-237">This allows the service to automatically log service commands (such as Start and Stop) calls to the Application log on the computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a8f7-238">同じ名前のソースがコンピューターに既に存在していても、アプリケーションログ以外のログにある場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-238">If a source by the same name already exists on the computer, but in a log other than the Application log, an exception will be thrown.</span></span> <span data-ttu-id="4a8f7-239">ソースが存在し、アプリケーションログに関連付けられている場合、そのソースはサービスへのコマンド呼び出しを報告するために使用され、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-239">If the source exists and is associated with the Application log, that source is used to report command calls to the service, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4a8f7-240">に<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>を指定`null`したり、長さを0にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-240">The <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> cannot be `null` or have zero length.</span></span> <span data-ttu-id="4a8f7-241">最大サイズは256文字です。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-241">Its maximum size is 256 characters.</span></span> <span data-ttu-id="4a8f7-242">また、前方または後方のスラッシュ、'/'、また\\は ' ' を含めることも、10進値32未満の値を持つ ASCII 文字セットの文字を含めることもできません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-242">It also cannot contain forward or backward slashes, '/' or '\\', or characters from the ASCII character set with value less than decimal value 32.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a8f7-243"><see cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" /> プロパティが無効です。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-243">The <see cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" /> property is invalid.</span></span></exception>
        <altmember cref="P:System.ServiceProcess.ServiceBase.ServiceName" />
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="ServicesDependedOn">
      <MemberSignature Language="C#" Value="public string[] ServicesDependedOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ServicesDependedOn" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn" />
      <MemberSignature Language="VB.NET" Value="Public Property ServicesDependedOn As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ServicesDependedOn { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServicesDependedOn : string[] with get, set" Usage="System.ServiceProcess.ServiceInstaller.ServicesDependedOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerServicesDependedOn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a8f7-244">このサービスを実行するために実行する必要があるサービスを示します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-244">Indicates the services that must be running for this service to run.</span></span></summary>
        <value><span data-ttu-id="4a8f7-245">このインストーラーに関連付けられているサービスを実行する前に実行する必要があるサービスの配列。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-245">An array of services that must be running before the service associated with this installer can run.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a8f7-246">サービスを開始する前に、他のサービスの実行を要求することができます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-246">A service can require other services to be running before it can start.</span></span> <span data-ttu-id="4a8f7-247">このプロパティからの情報は、レジストリのキーに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-247">The information from this property is written to a key in the registry.</span></span> <span data-ttu-id="4a8f7-248">ユーザー (または自動起動の場合はシステム) がサービスを実行しようとすると、サービスコントロールマネージャー (SCM) は、配列内の各サービスが既に開始されていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-248">When the user (or the system, in the case of automatic startup) tries to run the service, the Service Control Manager (SCM) verifies that each of the services in the array has already been started.</span></span>  
  
 <span data-ttu-id="4a8f7-249">配列内のいずれかのサービスが実行されていない場合、SCM はそれらを起動しようとします。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-249">If any service in the array is not running then, the SCM tries to start them.</span></span> <span data-ttu-id="4a8f7-250">これには、 `Manual`の<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>サービスも含まれます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-250">This includes services with `Manual`<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>.</span></span>  
  
 <span data-ttu-id="4a8f7-251">このサービスが依存しているサービスを開始できない場合、このサービスは開始されません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-251">If any service upon which this service depends fails to start, this service will not start.</span></span> <span data-ttu-id="4a8f7-252">システムが起動されない場合、例外はスローされません。これは、システムレベルで例外処理が行われないためです。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-252">An exception is not thrown if the system is not started because there is no exception handling at the system level to detect this.</span></span> <span data-ttu-id="4a8f7-253">サービス開始エラーを処理し、コードにこれを実装する方法を決定します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-253">Decide how to handle service start failures and implement this in your code.</span></span> <span data-ttu-id="4a8f7-254">通常、サービスの開始に失敗した場合は、起動時にユーザーにダイアログが表示されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-254">Typically, a dialog appears to the user at startup if a service fails to start.</span></span>  
  
 <span data-ttu-id="4a8f7-255">サービスが開始されない場合、エントリはアプリケーションイベントログに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-255">If the service does not start, an entry is written to the Application event log.</span></span>  
  
 <span data-ttu-id="4a8f7-256">このサービスが依存しているサービスは、同じ実行可能ファイル内に存在する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-256">The services upon which this service depends do not need to be in the same executable.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.StartType" />
      </Docs>
    </Member>
    <Member MemberName="StartType">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceStartMode StartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceStartMode StartType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.StartType" />
      <MemberSignature Language="VB.NET" Value="Public Property StartType As ServiceStartMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceStartMode StartType { System::ServiceProcess::ServiceStartMode get(); void set(System::ServiceProcess::ServiceStartMode value); };" />
      <MemberSignature Language="F#" Value="member this.StartType : System.ServiceProcess.ServiceStartMode with get, set" Usage="System.ServiceProcess.ServiceInstaller.StartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerStartType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceStartMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a8f7-257">このサービスがいつ、どのように開始されるかを示します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-257">Indicates how and when this service is started.</span></span></summary>
        <value><span data-ttu-id="4a8f7-258">サービスを開始する方法を表す <see cref="T:System.ServiceProcess.ServiceStartMode" />。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-258">A <see cref="T:System.ServiceProcess.ServiceStartMode" /> that represents the way the service is started.</span></span> <span data-ttu-id="4a8f7-259">既定値は <see langword="Manual" /> です。再起動の後にサービスが自動的に開始されないように指定します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-259">The default is <see langword="Manual" />, which specifies that the service will not automatically start after reboot.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a8f7-260">を設定<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>して、再起動後にサービスが自動的に開始されるようにするか、ユーザーがサービスを手動で開始する必要があるかを指定します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-260">Set the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> to specify either that the service be started automatically after reboot or that a user must manually start the service.</span></span> <span data-ttu-id="4a8f7-261">また、サービスを無効にして、手動またはプログラムによって有効になるまで、開始できないように指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-261">A service can also be disabled, specifying that it cannot be started, either manually or programmatically, until it is enabled.</span></span>  
  
 <span data-ttu-id="4a8f7-262">インストール後に<xref:System.ServiceProcess.ServiceInstaller>プロパティの値を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-262">You cannot change <xref:System.ServiceProcess.ServiceInstaller> property values after installation.</span></span> <span data-ttu-id="4a8f7-263">を変更<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>するには、サービスをアンインストールしてから再インストールするか、サービスコントロールマネージャーを使用して設定を手動で変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-263">To change the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A>, you either have to uninstall and reinstall your service, or manually change the setting using the Service Control Manager.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="4a8f7-264">開始モードが、<see cref="T:System.ServiceProcess.ServiceStartMode" /> 列挙体の値ではありません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-264">The start mode is not a value of the <see cref="T:System.ServiceProcess.ServiceStartMode" /> enumeration.</span></span></exception>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="serviceInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="4a8f7-265">インストールに関連付けられているコンテキスト情報を格納する <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-265">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span></span></param>
        <summary><span data-ttu-id="4a8f7-266">サービスに関する情報をレジストリから削除して、サービスをアンインストールします。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-266">Uninstalls the service by removing information about it from the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a8f7-267">アンインストールを開始する前に、サービスを停止しようとしています。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-267">Uninstall first attempts to stop the service before uninstalling it.</span></span> <span data-ttu-id="4a8f7-268">サービスを停止できない場合、例外はキャッチされず、メソッドはサービスの削除を続行します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-268">If the service cannot be stopped, no exception is caught, and the method continues with the removal of the service.</span></span>  
  
 <span data-ttu-id="4a8f7-269">通常、コード<xref:System.ServiceProcess.ServiceInstaller>内でメソッドを呼び出すことはありません。通常は、インストールユーティリティによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-269">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="4a8f7-270">Installutil.exe は、サービスのアンインストールとインストールに使用されます。をアンインストールするには、コマンドライン呼び出しでスイッチを実行します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-270">InstallUtil is used to uninstall services as well as install them; uninstalling takes a switch in the command line call.</span></span>  
  
 <span data-ttu-id="4a8f7-271">アプリケーションのアンインストールルーチンは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、アンインストールするコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-271">An application's uninstall routine maintains information automatically about the components being uninstalled, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a8f7-272">この<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>状態情報`savedState` は、 <xref:System.ServiceProcess.ServiceInstaller> パラメーターとしてに渡され、インスタンスとして継続的に更新され、各インスタンスがユーティリティによってインストールされます。 <xref:System.ServiceProcess.ServiceProcessInstaller></span><span class="sxs-lookup"><span data-stu-id="4a8f7-272">This state information, passed into <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="4a8f7-273">通常、コードでこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-273">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="4a8f7-274"><xref:System.Configuration.Install.Installer>クラスから派生するすべてのクラスについて、 <xref:System.Configuration.Install.Installer.Installers%2A>コレクションの状態は、メソッド<xref:System.ServiceProcess.ServiceInstaller.Install%2A>と<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッドで同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-274">For all classes deriving from the <xref:System.Configuration.Install.Installer> class, the state of the <xref:System.Configuration.Install.Installer.Installers%2A> collection must be the same in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods.</span></span> <span data-ttu-id="4a8f7-275">ただし、カスタムインストーラークラスコンストラクターの<xref:System.ServiceProcess.ServiceInstaller.Install%2A> <xref:System.Configuration.Install.Installer.Installers%2A>コレクションにインストーラーインスタンスを追加<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>すると、メソッドとメソッドを使用してコレクションのメンテナンスを回避できます。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-275">However, you can avoid the maintenance of the collection across the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods if you add installer instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in your custom installer class constructor.</span></span>  
  
 <span data-ttu-id="4a8f7-276">をアンインストールするためのロールバックメカニズムはありません。そのため、1つのサービスのアンインストールに失敗した場合、アンインストールされる他のサービス (通常は同じインストールプロジェクト内) は影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-276">There is no rollback mechanism for uninstalling, so if one service fails to uninstall, this does not affect the other services (usually within the same installation project) being uninstalled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="4a8f7-277">サービス コントロール マネージャーを開くことができませんでした。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-277">The Service Control Manager could not be opened.</span></span>  
  
 <span data-ttu-id="4a8f7-278">- または -</span><span class="sxs-lookup"><span data-stu-id="4a8f7-278">-or-</span></span>  
  
 <span data-ttu-id="4a8f7-279">サービスへのハンドルを取得できませんでした。</span><span class="sxs-lookup"><span data-stu-id="4a8f7-279">The system could not get a handle to the service.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>
