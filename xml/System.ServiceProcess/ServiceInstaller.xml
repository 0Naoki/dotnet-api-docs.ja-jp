<Type Name="ServiceInstaller" FullName="System.ServiceProcess.ServiceInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b69845d38861eb8bf36caf960b2e2d06cfb6e478" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48717477" /></Metadata><TypeSignature Language="C#" Value="public class ServiceInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="70ede-101"><see cref="T:System.ServiceProcess.ServiceBase" /> を拡張するクラスをインストールしてサービスを実装します。</span><span class="sxs-lookup"><span data-stu-id="70ede-101">Installs a class that extends <see cref="T:System.ServiceProcess.ServiceBase" /> to implement a service.</span></span> <span data-ttu-id="70ede-102">このクラスは、サービス アプリケーションのインストール時に、インストール ユーティリティで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="70ede-102">This class is called by the install utility when installing a service application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ede-103"><xref:System.ServiceProcess.ServiceInstaller>関連付けられているサービスに固有の機能です。</span><span class="sxs-lookup"><span data-stu-id="70ede-103">The <xref:System.ServiceProcess.ServiceInstaller> does work specific to the service with which it is associated.</span></span> <span data-ttu-id="70ede-104">Hkey_local_machine \system\currentcontrolset\services レジストリ キーのサブキーをサービスに関連付けられたレジストリ値を書き込むため、インストール ユーティリティによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="70ede-104">It is used by the installation utility to write registry values associated with the service to a subkey within the HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services registry key.</span></span> <span data-ttu-id="70ede-105">サービスは、このサブキー内で識別されます。</span><span class="sxs-lookup"><span data-stu-id="70ede-105">The service is identified by its ServiceName within this subkey.</span></span> <span data-ttu-id="70ede-106">サブキーには、実行可能ファイルまたはサービスが属する .dll の名前も含まれています。</span><span class="sxs-lookup"><span data-stu-id="70ede-106">The subkey also includes the name of the executable or .dll to which the service belongs.</span></span>  
  
 <span data-ttu-id="70ede-107">継承されるプロジェクト インストーラー クラスを作成、サービスをインストールする、<xref:System.Configuration.Install.Installer>クラスし、設定、<xref:System.ComponentModel.RunInstallerAttribute>属性をクラス`true`します。</span><span class="sxs-lookup"><span data-stu-id="70ede-107">To install a service, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer> class, and set the <xref:System.ComponentModel.RunInstallerAttribute> attribute on the class to `true`.</span></span> <span data-ttu-id="70ede-108">プロジェクト内で 1 つ作成<xref:System.ServiceProcess.ServiceProcessInstaller>サービス アプリケーション、および 1 つごとにインスタンス<xref:System.ServiceProcess.ServiceInstaller>アプリケーション内の各サービスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="70ede-108">Within your project, create one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="70ede-109">クラスのコンス トラクター、プロジェクト インストーラー内でサービスを使用して、インストールのプロパティを設定、<xref:System.ServiceProcess.ServiceProcessInstaller>と<xref:System.ServiceProcess.ServiceInstaller>インスタンス、およびインスタンスの追加、<xref:System.Configuration.Install.Installer.Installers%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="70ede-109">Within your project installer class constructor, set the installation properties for the service using the <xref:System.ServiceProcess.ServiceProcessInstaller> and <xref:System.ServiceProcess.ServiceInstaller> instances, and add the instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ede-110">インストーラーのインスタンスを追加するため、コンス トラクターを使用することをお勧めただしに追加する必要がある場合、<xref:System.Configuration.Install.Installer.Installers%2A>内のコレクション、<xref:System.ServiceProcess.ServiceInstaller.Install%2A>メソッドで、コレクションに同じ追加機能を実行してください、<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="70ede-110">It is recommended that you use the constructor for adding installer instances; however, if you need to add to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method, be sure to perform the same additions to the collection in the <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> method.</span></span>  
  
 <span data-ttu-id="70ede-111">すべてのクラスから派生する、<xref:System.Configuration.Install.Installer>クラスの状態、<xref:System.Configuration.Install.Installer.Installers%2A>コレクションが同じである必要があります、<xref:System.ServiceProcess.ServiceInstaller.Install%2A>と<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="70ede-111">For all classes deriving from the <xref:System.Configuration.Install.Installer> class, the state of the <xref:System.Configuration.Install.Installer.Installers%2A> collection must be the same in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods.</span></span> <span data-ttu-id="70ede-112">ただし、全体でコレクションのメンテナンスを回避できます、<xref:System.ServiceProcess.ServiceInstaller.Install%2A>と<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッドにインストーラーのインスタンスを追加する場合、<xref:System.Configuration.Install.Installer.Installers%2A>カスタム インストーラー クラスのコンス トラクター内のコレクション。インストール ユーティリティが呼び出されると、検索、<xref:System.ComponentModel.RunInstallerAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="70ede-112">However, you can avoid the maintenance of the collection across the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods if you add installer instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in your custom installer class constructor.When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute> attribute.</span></span> <span data-ttu-id="70ede-113">属性がある場合`true`、ユーティリティに追加されたすべてのサービスのインストール、<xref:System.Configuration.Install.Installer.Installers%2A>プロジェクト インストーラーに関連付けられているコレクション。</span><span class="sxs-lookup"><span data-stu-id="70ede-113">If the attribute is `true`, the utility installs all the services that were added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection that were associated with your project installer.</span></span> <span data-ttu-id="70ede-114">場合<xref:System.ComponentModel.RunInstallerAttribute>は`false`か、存在しないか、インストール ユーティリティ プロジェクト インストーラーは無視されます。</span><span class="sxs-lookup"><span data-stu-id="70ede-114">If <xref:System.ComponentModel.RunInstallerAttribute> is `false` or does not exist, the install utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="70ede-115"><xref:System.ServiceProcess.ServiceProcessInstaller>情報に関連付けられた、プロジェクトのインストール クラス インストールすべてに共通する<xref:System.ServiceProcess.ServiceInstaller>プロジェクト内のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="70ede-115">The <xref:System.ServiceProcess.ServiceProcessInstaller> associated with your project installation class installs information common to all <xref:System.ServiceProcess.ServiceInstaller> instances in the project.</span></span> <span data-ttu-id="70ede-116">このサービスが何もインストール プロジェクトの他のサービスから分離する場合、そのサービスに固有の情報は、このメソッドによってインストールされます。</span><span class="sxs-lookup"><span data-stu-id="70ede-116">If this service has anything that separates it from the other services in the installation project, that service-specific information is installed by this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ede-117">重要ですが、<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>と同じで、<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>から派生したクラスの<xref:System.ServiceProcess.ServiceBase>します。</span><span class="sxs-lookup"><span data-stu-id="70ede-117">It is crucial that the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the class you derived from <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="70ede-118">値では、通常、<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>サービス アプリケーションの実行可能ファイルの Main() 関数内で、サービスのプロパティが設定されています。</span><span class="sxs-lookup"><span data-stu-id="70ede-118">Normally, the value of the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> property for the service is set within the Main() function of the service application's executable.</span></span> <span data-ttu-id="70ede-119">サービス コントロール マネージャーを使用して、<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType>プロパティをこの実行可能ファイル内でサービスを見つけます。</span><span class="sxs-lookup"><span data-stu-id="70ede-119">The Service Control Manager uses the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> property to locate the service within this executable.</span></span>  
  
 <span data-ttu-id="70ede-120">その他のプロパティを変更することができます、<xref:System.ServiceProcess.ServiceInstaller>前に、または後に追加すること、<xref:System.Configuration.Install.Installer.Installers%2A>プロジェクト インストーラーのコレクション。</span><span class="sxs-lookup"><span data-stu-id="70ede-120">You can modify other properties on the <xref:System.ServiceProcess.ServiceInstaller> either before or after adding it to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer.</span></span> <span data-ttu-id="70ede-121">たとえば、サービスの<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>の再起動時に自動的にサービスを開始または、ユーザー、サービスを手動で開始する必要がありますに設定することがあります。</span><span class="sxs-lookup"><span data-stu-id="70ede-121">For example, a service's <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> may be set to start the service automatically at reboot or require a user to start the service manually.</span></span>  
  
 <span data-ttu-id="70ede-122">通常がないメソッドを呼び出す、<xref:System.ServiceProcess.ServiceInstaller>は、コード内で一般的に呼び出される、インストール ユーティリティでのみです。</span><span class="sxs-lookup"><span data-stu-id="70ede-122">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="70ede-123">インストール ユーティリティが自動的に呼び出し、<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>と<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType>インストール プロセス中にメソッド。</span><span class="sxs-lookup"><span data-stu-id="70ede-123">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="70ede-124">バックアップ実行の障害を必要に応じて、呼び出すことによって<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(または<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) は以前にインストールされたすべてのコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="70ede-124">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components.</span></span>  
  
 <span data-ttu-id="70ede-125">インストール ユーティリティ呼び出し<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="70ede-125">The installation utility calls <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> to remove the object.</span></span>  
  
 <span data-ttu-id="70ede-126">アプリケーションのインストールが自動的にプロジェクトのインストーラーを使用して、既にインストールされているコンポーネントに関する情報を保持<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="70ede-126">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="70ede-127">この状態情報は継続的に更新、<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンス、および各<xref:System.ServiceProcess.ServiceInstaller>ユーティリティによってインスタンスがインストールされています。</span><span class="sxs-lookup"><span data-stu-id="70ede-127">This state information is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance, and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="70ede-128">状態情報を明示的に変更するコードを通常必要はありません。</span><span class="sxs-lookup"><span data-stu-id="70ede-128">It is usually unnecessary for your code to modify state information explicitly.</span></span>  
  
 <span data-ttu-id="70ede-129">自動的に作成し、インストールを実行するときに、<xref:System.Diagnostics.EventLogInstaller>に関連付けられているイベント ログ ソースをインストールする、<xref:System.ServiceProcess.ServiceBase>クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="70ede-129">When the installation is performed, it automatically creates an <xref:System.Diagnostics.EventLogInstaller> to install the event log source associated with the <xref:System.ServiceProcess.ServiceBase> derived class.</span></span> <span data-ttu-id="70ede-130"><xref:System.Diagnostics.EventLog.Log%2A>このソースのプロパティが設定されて、<xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A>コンピューターのアプリケーション ログにコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="70ede-130">The <xref:System.Diagnostics.EventLog.Log%2A> property for this source is set by the <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A> constructor to the computer's Application log.</span></span> <span data-ttu-id="70ede-131">設定すると、<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>の<xref:System.ServiceProcess.ServiceInstaller>(と同じにする必要があります、<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>サービスの)、<xref:System.Diagnostics.EventLog.Source%2A>は自動的に同じ値に設定します。</span><span class="sxs-lookup"><span data-stu-id="70ede-131">When you set the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the <xref:System.ServiceProcess.ServiceInstaller> (which should be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the service), the <xref:System.Diagnostics.EventLog.Source%2A> is automatically set to the same value.</span></span> <span data-ttu-id="70ede-132">インストール エラーのソースのインストールが以前にインストールされているサービスとは、ロールバックされます。</span><span class="sxs-lookup"><span data-stu-id="70ede-132">In an installation failure, the source's installation is rolled-back along with previously installed services.</span></span>  
  
 <span data-ttu-id="70ede-133"><xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッドが実行されている場合、サービスを停止しようとしました。</span><span class="sxs-lookup"><span data-stu-id="70ede-133">The <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> method tries to stop the service if it is running.</span></span> <span data-ttu-id="70ede-134">または、これが成功するかどうか<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>によって行われた変更を元に戻します<xref:System.ServiceProcess.ServiceInstaller.Install%2A>します。</span><span class="sxs-lookup"><span data-stu-id="70ede-134">Whether this succeeds or not, <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> undoes the changes made by <xref:System.ServiceProcess.ServiceInstaller.Install%2A>.</span></span> <span data-ttu-id="70ede-135">イベントのログ記録を新しいソースを作成した場合、ソースが削除されます。</span><span class="sxs-lookup"><span data-stu-id="70ede-135">If a new source was created for event logging, the source is deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ede-136">次の例と呼ばれる、プロジェクト インストーラーを作成する`MyProjectInstaller`から継承される<xref:System.Configuration.Install.Installer>します。</span><span class="sxs-lookup"><span data-stu-id="70ede-136">The following example creates a project installer, called `MyProjectInstaller`, which inherits from <xref:System.Configuration.Install.Installer>.</span></span> <span data-ttu-id="70ede-137">「Hello World サービス 1」2 つのサービスを含むサービス実行可能ファイルがあることが前提とし、"2" Hello World のサービス。</span><span class="sxs-lookup"><span data-stu-id="70ede-137">It is assumed there is a service executable that contains two services, "Hello-World Service 1" and "Hello-World Service 2".</span></span> <span data-ttu-id="70ede-138">コンス トラクター内で`MyProjectInstaller`(これが呼び出す、インストール ユーティリティで)、<xref:System.ServiceProcess.ServiceInstaller>オブジェクトは、これらの各サービス、および作成<xref:System.ServiceProcess.ServiceProcessInstaller>実行可能ファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="70ede-138">Within the constructor for `MyProjectInstaller` (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each of these services, and a <xref:System.ServiceProcess.ServiceProcessInstaller> is created for the executable.</span></span> <span data-ttu-id="70ede-139">インストール ユーティリティが認識する`MyProjectInstaller`として有効なインストーラー、<xref:System.ComponentModel.RunInstallerAttribute>属性に設定されて`true`します。</span><span class="sxs-lookup"><span data-stu-id="70ede-139">For the install utility to recognize `MyProjectInstaller` as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.</span></span>  
  
 <span data-ttu-id="70ede-140">インストーラーに追加する前に、プロセスのインストーラーおよびサービスのインストーラーで省略可能なプロパティが設定されて、<xref:System.Configuration.Install.Installer.Installers%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="70ede-140">Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span> <span data-ttu-id="70ede-141">インストール ユーティリティにアクセスするときに`MyProjectInstaller`に追加されたオブジェクト、<xref:System.Configuration.Install.Installer.Installers%2A>を呼び出すことによってコレクション<xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType>順番でインストールされています。</span><span class="sxs-lookup"><span data-stu-id="70ede-141">When the install utility accesses `MyProjectInstaller`, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> will be installed in turn.</span></span> <span data-ttu-id="70ede-142">処理中には、インストーラーは、オブジェクトがインストールされているため、それぞれのバックアップさらに、インストール エラーが発生した場合を示す状態情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="70ede-142">During the process, the installer maintains state information indicating which objects have been installed, so each can be backed out in turn, if an installation failure occurs.</span></span>  
  
 <span data-ttu-id="70ede-143">通常、プロジェクト インストーラー クラスのインスタンスを明示的に作成するはできません。</span><span class="sxs-lookup"><span data-stu-id="70ede-143">Normally, you would not create an instance of your project installer class explicitly.</span></span> <span data-ttu-id="70ede-144">作成し、追加し、は、<xref:System.ComponentModel.RunInstallerAttribute>属性の構文を実際に呼び出すし、そのためインスタンス化のクラスをインストール ユーティリティが。</span><span class="sxs-lookup"><span data-stu-id="70ede-144">You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute> attribute to the syntax, but it is the install utility that actually calls, and therefore instantiates, the class.</span></span>  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceProcess.ServiceBase.ServiceName" />
    <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="P:System.ServiceProcess.ServiceBase.EventLog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="70ede-145"><see cref="T:System.ServiceProcess.ServiceInstaller" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="70ede-145">Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceInstaller" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ede-146">継承されるプロジェクト インストーラー クラスを作成、サービスをインストールする、<xref:System.Configuration.Install.Installer>クラスし、設定、<xref:System.ComponentModel.RunInstallerAttribute>属性をクラス`true`します。</span><span class="sxs-lookup"><span data-stu-id="70ede-146">To install a service, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer> class, and set the <xref:System.ComponentModel.RunInstallerAttribute> attribute on the class to `true`.</span></span> <span data-ttu-id="70ede-147">プロジェクト内で 1 つ作成<xref:System.ServiceProcess.ServiceProcessInstaller>サービス アプリケーション、および 1 つごとにインスタンス<xref:System.ServiceProcess.ServiceInstaller>アプリケーション内の各サービスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="70ede-147">Within your project, create one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="70ede-148">クラスのコンス トラクター、プロジェクト インストーラー内でサービスを使用して、インストールのプロパティを設定、<xref:System.ServiceProcess.ServiceProcessInstaller>と<xref:System.ServiceProcess.ServiceInstaller>インスタンス、およびインスタンスの追加、<xref:System.Configuration.Install.Installer.Installers%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="70ede-148">Within your project installer class constructor, set the installation properties for the service using the <xref:System.ServiceProcess.ServiceProcessInstaller> and <xref:System.ServiceProcess.ServiceInstaller> instances, and add the instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
 <span data-ttu-id="70ede-149"><xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A>コンス トラクターは、イベント ログを自動的に生成されますがソース<xref:System.Diagnostics.EventLog.Log%2A>プロパティが、コンピューターのアプリケーション ログ、および<xref:System.Diagnostics.EventLogInstaller>します。</span><span class="sxs-lookup"><span data-stu-id="70ede-149">The <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A> constructor automatically generates an event log source whose <xref:System.Diagnostics.EventLog.Log%2A> property is set to the computer's Application log, and an <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="70ede-150">設定すると、<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>の<xref:System.ServiceProcess.ServiceInstaller>と同じにする必要があります、 <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> 、サービスの<xref:System.Diagnostics.EventLog.Source%2A>イベント ログのプロパティが自動的に同じ値に設定します。</span><span class="sxs-lookup"><span data-stu-id="70ede-150">When you set the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the <xref:System.ServiceProcess.ServiceInstaller>, which should be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the service, the <xref:System.Diagnostics.EventLog.Source%2A> property of the event log is automatically set to the same value.</span></span> <span data-ttu-id="70ede-151">インストールの失敗した場合、ソースが自動的に削除されます。</span><span class="sxs-lookup"><span data-stu-id="70ede-151">The source is deleted automatically in the case of an installation failure.</span></span>  
  
 <span data-ttu-id="70ede-152"><xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A>コンス トラクターのセット、<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>プロパティを`ServiceStartMode.Manual`をユーザーがサービスを開始することを指定します。</span><span class="sxs-lookup"><span data-stu-id="70ede-152">The <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A> constructor sets the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> property to `ServiceStartMode.Manual` to specify that a user start the service.</span></span> <span data-ttu-id="70ede-153">プロパティをリセットできます`ServiceStartMode.Automatic`コンピューターが再起動したら、サービスを開始するかを指定します。</span><span class="sxs-lookup"><span data-stu-id="70ede-153">You can reset the property to `ServiceStartMode.Automatic` to specify that the service start when the computer reboots.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.ServiceProcess.ServiceStartMode" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="70ede-154">コピー元の <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="70ede-154">The <see cref="T:System.ComponentModel.IComponent" /> from which to copy.</span></span></param>
        <summary><span data-ttu-id="70ede-155">プロパティを <see cref="T:System.ServiceProcess.ServiceBase" /> のインスタンスからこのインストーラーへコピーします。</span><span class="sxs-lookup"><span data-stu-id="70ede-155">Copies properties from an instance of <see cref="T:System.ServiceProcess.ServiceBase" /> to this installer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ede-156">コード内で、このメソッドを呼び出すことはほとんどありませんが。</span><span class="sxs-lookup"><span data-stu-id="70ede-156">This method will rarely be called within your code.</span></span> <span data-ttu-id="70ede-157"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A> 通常、デザイナーによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="70ede-157"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A> is usually called only by designers.</span></span>  
  
 <span data-ttu-id="70ede-158"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A> サービスの名前を保存、`component`パラメーターを<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>の<xref:System.ServiceProcess.ServiceInstaller>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="70ede-158"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A> saves the service name of the `component` parameter to the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the <xref:System.ServiceProcess.ServiceInstaller> instance.</span></span> <span data-ttu-id="70ede-159">(パラメーターから派生したクラスのインスタンスである必要がありますので<xref:System.ServiceProcess.ServiceBase>、`component`させることが保証されます、<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>プロパティです)。</span><span class="sxs-lookup"><span data-stu-id="70ede-159">(Because the parameter must be an instance of a class that derives from <xref:System.ServiceProcess.ServiceBase>, `component` is guaranteed to have a <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> property.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ede-160">Visual Studio デザイナーを使用している場合、ユーザーがクリックすると、デザイン時にこのメソッドが呼び出されます。`Add Installer`コンポーネント インストーラーとしてこのクラスを指定します。</span><span class="sxs-lookup"><span data-stu-id="70ede-160">If you are using the Visual Studio designer, this method is called at design time when the user clicks `Add Installer` on a component that specified this class as its installer.</span></span> <span data-ttu-id="70ede-161">インストーラーは、すべての情報をライブのコンポーネントから、インストール時に使用するため保存します。</span><span class="sxs-lookup"><span data-stu-id="70ede-161">The installer takes all information it can from the live component and stores it for use at install time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="70ede-162">このインストーラーに関連付けているコンポーネントが <see cref="T:System.ServiceProcess.ServiceBase" /> から継承されません。</span><span class="sxs-lookup"><span data-stu-id="70ede-162">The component you are associating with this installer does not inherit from <see cref="T:System.ServiceProcess.ServiceBase" />.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="DelayedAutoStart">
      <MemberSignature Language="C#" Value="public bool DelayedAutoStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DelayedAutoStart" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart" />
      <MemberSignature Language="VB.NET" Value="Public Property DelayedAutoStart As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DelayedAutoStart { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DelayedAutoStart : bool with get, set" Usage="System.ServiceProcess.ServiceInstaller.DelayedAutoStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerDelayedAutoStart")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70ede-163">他の自動的に開始されるサービスが実行されるまでサービスの開始を遅延するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="70ede-163">Gets or sets a value that indicates whether the service should be delayed from starting until other automatically started services are running.</span></span></summary>
        <value><span data-ttu-id="70ede-164">サービスの自動開始を遅延する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70ede-164"><see langword="true" /> to delay automatic start of the service; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="70ede-165">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="70ede-165">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ede-166"><xref:System.ServiceProcess.ServiceInstaller.DelayedAutoStart%2A>プロパティは、任意のサービスに適用されることができますが、サービスの開始モードがない限りは無視されます<xref:System.ServiceProcess.ServiceStartMode.Automatic>します。</span><span class="sxs-lookup"><span data-stu-id="70ede-166">The <xref:System.ServiceProcess.ServiceInstaller.DelayedAutoStart%2A> property can be applied to any service, but it is ignored unless the service's start mode is <xref:System.ServiceProcess.ServiceStartMode.Automatic>.</span></span> <span data-ttu-id="70ede-167">設定は、次に、システムが再起動したときに有効にします。</span><span class="sxs-lookup"><span data-stu-id="70ede-167">The setting takes effect the next time the system is restarted.</span></span> <span data-ttu-id="70ede-168">サービス コントロール マネージャーでは、サービスの特定の開始時間は保証されません。</span><span class="sxs-lookup"><span data-stu-id="70ede-168">The Service Control Manager does not guarantee a specific start time for the service.</span></span>  
  
 <span data-ttu-id="70ede-169">遅延自動起動サービスが読み込み順序、グループのメンバーにすることはできませんが、別の自動開始サービスに依存できます。</span><span class="sxs-lookup"><span data-stu-id="70ede-169">A delayed automatic start service cannot be a member of a load ordering group, but it can depend on another automatic start service.</span></span> <span data-ttu-id="70ede-170">アプリケーションで読み込まれる前に遅延自動起動サービスを呼び出す場合、呼び出しが失敗します。</span><span class="sxs-lookup"><span data-stu-id="70ede-170">If an application calls a delayed automatic start service before it is loaded, the call fails.</span></span>  
  
 <span data-ttu-id="70ede-171">遅延自動起動をサポートしないオペレーティング システムでは、このプロパティの設定による影響はありません。</span><span class="sxs-lookup"><span data-stu-id="70ede-171">On operating systems that do not support delayed automatic start, setting this property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.ServiceProcess.ServiceInstaller.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerDescription")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70ede-172">サービスの説明を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="70ede-172">Gets or sets the description for the service.</span></span></summary>
        <value><span data-ttu-id="70ede-173">サービスの説明。</span><span class="sxs-lookup"><span data-stu-id="70ede-173">The description of the service.</span></span> <span data-ttu-id="70ede-174">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="70ede-174">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ede-175">使用して、<xref:System.ServiceProcess.ServiceInstaller.Description%2A>プロパティをユーザーにインストールされているサービスの目的を説明します。</span><span class="sxs-lookup"><span data-stu-id="70ede-175">Use the <xref:System.ServiceProcess.ServiceInstaller.Description%2A> property to describe the purpose of the installed service to the user.</span></span> <span data-ttu-id="70ede-176">ユーザーは、インストールされているサービスの詳細を表示するアプリケーションでは、サービスの説明を表示できます。</span><span class="sxs-lookup"><span data-stu-id="70ede-176">The user can view the service description in applications that display details for installed services.</span></span>  
  
 <span data-ttu-id="70ede-177">たとえば、Windows XP を使用して、サービス コントロール コマンド ライン ユーティリティ (Sc.exe) を使用したサービスの説明を表示する、またはサービスの説明を表示することができます、**サービス**のノード、**コンピュータの管理**コンソール。</span><span class="sxs-lookup"><span data-stu-id="70ede-177">For example, using Windows XP, you can view the service description with the Service Control command-line utility (Sc.exe) or you can view the service description within the **Services** node of the **Computer Management** console.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ede-178">次のコード例では、新しい Windows サービス アプリケーションのインストールのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="70ede-178">The following code example sets the installation properties for a new Windows service application.</span></span> <span data-ttu-id="70ede-179">例では、表示名と説明と共に、サービス名を設定します。</span><span class="sxs-lookup"><span data-stu-id="70ede-179">The example sets the service name, along with the display name and description.</span></span> <span data-ttu-id="70ede-180">例のサービスのインストールのプロパティを割り当てたら、<xref:System.ServiceProcess.ServiceInstaller>オブジェクトを<xref:System.Configuration.Install.Installer.Installers%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="70ede-180">After assigning the installation properties for the service, the example adds the <xref:System.ServiceProcess.ServiceInstaller> object to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
 [!code-csharp[ServiceProcess_ServiceInstaller#3](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceProcess_serviceinstaller/CS/simpleserviceinstaller.cs#3)]
 [!code-vb[ServiceProcess_ServiceInstaller#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceProcess_serviceinstaller/VB/service1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.ServiceProcess.ServiceInstaller.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerDisplayName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70ede-181">ユーザーがサービスを識別するための表示名を示します。</span><span class="sxs-lookup"><span data-stu-id="70ede-181">Indicates the friendly name that identifies the service to the user.</span></span></summary>
        <value><span data-ttu-id="70ede-182">対話形式のツールで頻繁に使用される、サービスに関連付けられた名前。</span><span class="sxs-lookup"><span data-stu-id="70ede-182">The name associated with the service, used frequently for interactive tools.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ede-183"><xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A>は、たとえば、使用、サービスの場合は、ユーザーが判読できるわかりやすい名前を提供するサービス コントロール マネージャーでします。</span><span class="sxs-lookup"><span data-stu-id="70ede-183">The <xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A> is used, for example, in the Service Control Manager to provide a user-readable descriptive name for the service.</span></span> <span data-ttu-id="70ede-184"><xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A>レジストリ値ですが、レジストリ キーとしては使用されません。</span><span class="sxs-lookup"><span data-stu-id="70ede-184">The <xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A> is a registry value, but is never used as a registry key.</span></span> <span data-ttu-id="70ede-185">そのため、に関する制限事項、<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>プロパティの値は適用されません。</span><span class="sxs-lookup"><span data-stu-id="70ede-185">Therefore, restrictions on the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property value do not apply.</span></span> <span data-ttu-id="70ede-186"><xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> 制限されているために、HKEY_LOCAL_MACHINES\System\CurrentControlSet\Services レジストリ キーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="70ede-186"><xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> is used as the HKEY_LOCAL_MACHINES\System\CurrentControlSet\Services registry key, so it is restricted.</span></span>  
  
 <span data-ttu-id="70ede-187">あると、名の選択に制限はありませんので、サービスを識別するために、インストール ユーティリティで表示名が使用しない、<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="70ede-187">The display name is never used by the install utility to identify the service, so there are no restrictions on the choice of name, as there is for the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.Description" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver"><span data-ttu-id="70ede-188">インストールに関連付けられているコンテキスト情報を格納する <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="70ede-188">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span></span></param>
        <summary><span data-ttu-id="70ede-189">サービス アプリケーション情報をレジストリに書き込んで、サービスをインストールします。</span><span class="sxs-lookup"><span data-stu-id="70ede-189">Installs the service by writing service application information to the registry.</span></span> <span data-ttu-id="70ede-190">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に処理します。</span><span class="sxs-lookup"><span data-stu-id="70ede-190">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ede-191">通常がないメソッドを呼び出す、<xref:System.ServiceProcess.ServiceInstaller>は、コード内で一般的に呼び出される、インストール ユーティリティでのみです。</span><span class="sxs-lookup"><span data-stu-id="70ede-191">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="70ede-192">インストール ユーティリティが自動的に呼び出し、<xref:System.ServiceProcess.ServiceInstaller.Install%2A>インストール中にメソッド。</span><span class="sxs-lookup"><span data-stu-id="70ede-192">The install utility automatically calls the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method during installation.</span></span> <span data-ttu-id="70ede-193">バックアップ実行の障害を必要に応じて、呼び出すことによって<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A>例外を生成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="70ede-193">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="70ede-194">アプリケーションのインストールは既にインストールされて、プロジェクトのインストーラーを使用するコンポーネントを自動的に情報を格納<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="70ede-194">An application's install routine maintains information automatically about the components that were already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="70ede-195">この状態情報が渡される<xref:System.ServiceProcess.ServiceInstaller.Install%2A>として、`stateSaver`パラメーターは継続的に更新、<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスと各<xref:System.ServiceProcess.ServiceInstaller>ユーティリティによってインスタンスがインストールされています。</span><span class="sxs-lookup"><span data-stu-id="70ede-195">This state information, passed into <xref:System.ServiceProcess.ServiceInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="70ede-196">この状態情報を明示的に変更するコードを通常必要はありません。</span><span class="sxs-lookup"><span data-stu-id="70ede-196">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="70ede-197"><xref:System.ServiceProcess.ServiceProcessInstaller>情報に関連付けられた、プロジェクトのインストール クラス インストールすべてに共通する<xref:System.ServiceProcess.ServiceInstaller>プロジェクト内のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="70ede-197">The <xref:System.ServiceProcess.ServiceProcessInstaller> associated with your project installation class installs information common to all <xref:System.ServiceProcess.ServiceInstaller> instances in the project.</span></span> <span data-ttu-id="70ede-198">このサービスが何もインストール プロジェクトの他のサービスから分離する場合、そのサービスに固有の情報は、このメソッドによってインストールされます。</span><span class="sxs-lookup"><span data-stu-id="70ede-198">If this service has anything that separates it from the other services in the installation project, that service-specific information is installed by this method.</span></span>  
  
 <span data-ttu-id="70ede-199">継承されるプロジェクト インストーラー クラスを作成、サービスをインストールする、<xref:System.Configuration.Install.Installer>クラスし、設定、<xref:System.ComponentModel.RunInstallerAttribute>属性をクラス`true`します。</span><span class="sxs-lookup"><span data-stu-id="70ede-199">To install a service, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer> class, and set the <xref:System.ComponentModel.RunInstallerAttribute> attribute on the class to `true`.</span></span> <span data-ttu-id="70ede-200">プロジェクト内で 1 つ作成<xref:System.ServiceProcess.ServiceProcessInstaller>サービス アプリケーション、および 1 つごとにインスタンス<xref:System.ServiceProcess.ServiceInstaller>アプリケーション内の各サービスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="70ede-200">Within your project, create one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="70ede-201">クラスのコンス トラクター、プロジェクト インストーラー内でサービスを使用して、インストールのプロパティを設定、<xref:System.ServiceProcess.ServiceProcessInstaller>と<xref:System.ServiceProcess.ServiceInstaller>インスタンス、およびインスタンスの追加、<xref:System.Configuration.Install.Installer.Installers%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="70ede-201">Within your project installer class constructor, set the installation properties for the service using the <xref:System.ServiceProcess.ServiceProcessInstaller> and <xref:System.ServiceProcess.ServiceInstaller> instances, and add the instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ede-202">インストーラーのインスタンスを追加するため、コンス トラクターを使用することをお勧めただしに追加する必要がある場合、<xref:System.Configuration.Install.Installer.Installers%2A>内のコレクション、<xref:System.ServiceProcess.ServiceInstaller.Install%2A>メソッドで、コレクションに同じ追加機能を実行してください、<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="70ede-202">It is recommended that you use the constructor for adding installer instances; however, if you need to add to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method, be sure to perform the same additions to the collection in the <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> method.</span></span>  
  
 <span data-ttu-id="70ede-203">すべてのクラスから派生する、<xref:System.Configuration.Install.Installer>クラスの状態、<xref:System.Configuration.Install.Installer.Installers%2A>コレクションが同じである必要があります、<xref:System.ServiceProcess.ServiceInstaller.Install%2A>と<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="70ede-203">For all classes deriving from the <xref:System.Configuration.Install.Installer> class, the state of the <xref:System.Configuration.Install.Installer.Installers%2A> collection must be the same in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods.</span></span> <span data-ttu-id="70ede-204">ただし、全体でコレクションのメンテナンスを回避できます、<xref:System.ServiceProcess.ServiceInstaller.Install%2A>と<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッドにインストーラーのインスタンスを追加する場合、<xref:System.Configuration.Install.Installer.Installers%2A>カスタム インストーラー クラスのコンス トラクター内のコレクション。</span><span class="sxs-lookup"><span data-stu-id="70ede-204">However, you can avoid the maintenance of the collection across the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods if you add installer instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in your custom installer class constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70ede-205">セットアップ ツールに、実行可能ファイルの <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="70ede-205">The installation does not contain a <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> for the executable.</span></span>  
  
<span data-ttu-id="70ede-206">- または -</span><span class="sxs-lookup"><span data-stu-id="70ede-206">-or-</span></span> 
<span data-ttu-id="70ede-207">アセンブリのファイル名が <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="70ede-207">The file name for the assembly is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="70ede-208">- または -</span><span class="sxs-lookup"><span data-stu-id="70ede-208">-or-</span></span> 
<span data-ttu-id="70ede-209">サービス名が無効です。</span><span class="sxs-lookup"><span data-stu-id="70ede-209">The service name is invalid.</span></span>  
  
<span data-ttu-id="70ede-210">- または -</span><span class="sxs-lookup"><span data-stu-id="70ede-210">-or-</span></span> 
<span data-ttu-id="70ede-211">サービス コントロール マネージャーを開くことができませんでした。</span><span class="sxs-lookup"><span data-stu-id="70ede-211">The Service Control Manager could not be opened.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="70ede-212">サービスの表示名の長さが 255 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="70ede-212">The display name for the service is more than 255 characters in length.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="70ede-213">サービスへのハンドルが生成できませんでした。</span><span class="sxs-lookup"><span data-stu-id="70ede-213">The system could not generate a handle to the service.</span></span>  
  
<span data-ttu-id="70ede-214">- または -</span><span class="sxs-lookup"><span data-stu-id="70ede-214">-or-</span></span> 
<span data-ttu-id="70ede-215">この名前のサービスは既にインストールされています。</span><span class="sxs-lookup"><span data-stu-id="70ede-215">A service with that name is already installed.</span></span></exception>
        <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Diagnostics.EventLogInstaller" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="serviceInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller"><span data-ttu-id="70ede-216">現在のインストーラーと比較される <see cref="T:System.Configuration.Install.ComponentInstaller" />。</span><span class="sxs-lookup"><span data-stu-id="70ede-216">A <see cref="T:System.Configuration.Install.ComponentInstaller" /> to which you are comparing the current installer.</span></span></param>
        <summary><span data-ttu-id="70ede-217">2 つのインストーラーが同じサービスをインストールするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="70ede-217">Indicates whether two installers would install the same service.</span></span></summary>
        <returns><span data-ttu-id="70ede-218">両方のインストーラーで <see cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" /> を呼び出すと、同じサービスがインストールされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70ede-218"><see langword="true" /> if calling <see cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" /> on both of these installers would result in installing the same service; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ede-219"><xref:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller%2A> たとえば、2 つのインストーラーは、同じユーザー アカウントで同じサービスをインストールするかどうかにことを示します。</span><span class="sxs-lookup"><span data-stu-id="70ede-219"><xref:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller%2A> indicates, for example, whether two installers would install the same service under the same user account.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="70ede-220">インストールに関連付けられているコンテキスト情報を格納する <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="70ede-220">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span></span></param>
        <summary><span data-ttu-id="70ede-221">インストール プロシージャによってレジストリに書き込まれたサービス アプリケーション情報をロールバックします。</span><span class="sxs-lookup"><span data-stu-id="70ede-221">Rolls back service application information written to the registry by the installation procedure.</span></span> <span data-ttu-id="70ede-222">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に処理します。</span><span class="sxs-lookup"><span data-stu-id="70ede-222">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ede-223">通常がないメソッドを呼び出す、<xref:System.ServiceProcess.ServiceInstaller>は、コード内で一般的に呼び出される、インストール ユーティリティでのみです。</span><span class="sxs-lookup"><span data-stu-id="70ede-223">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="70ede-224">インストール ユーティリティが自動的に呼び出し、<xref:System.ServiceProcess.ServiceInstaller.Install%2A>インストール プロセス中にメソッド。</span><span class="sxs-lookup"><span data-stu-id="70ede-224">The install utility automatically calls the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method during the installation process.</span></span> <span data-ttu-id="70ede-225">バックアップ実行の障害を必要に応じて、呼び出すことによって<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A>例外を生成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="70ede-225">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="70ede-226">アプリケーションのインストールが自動的にプロジェクトのインストーラーを使用して、既にインストールされているコンポーネントに関する情報を保持<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="70ede-226">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="70ede-227">この状態情報が渡される<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A>として、`savedState`パラメーターは継続的に更新、<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスと各<xref:System.ServiceProcess.ServiceInstaller>ユーティリティによってインスタンスがインストールされています。</span><span class="sxs-lookup"><span data-stu-id="70ede-227">This state information, passed into <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="70ede-228">この状態情報を明示的に変更するコードを通常必要はありません。</span><span class="sxs-lookup"><span data-stu-id="70ede-228">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string with get, set" Usage="System.ServiceProcess.ServiceInstaller.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerServiceName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70ede-229">このサービスを識別するためにシステムが使用する名前を示します。</span><span class="sxs-lookup"><span data-stu-id="70ede-229">Indicates the name used by the system to identify this service.</span></span> <span data-ttu-id="70ede-230">このプロパティは、インストールするサービスの <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> と同じにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="70ede-230">This property must be identical to the <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> of the service you want to install.</span></span></summary>
        <value><span data-ttu-id="70ede-231">インストールされるサービスの名前。</span><span class="sxs-lookup"><span data-stu-id="70ede-231">The name of the service to be installed.</span></span> <span data-ttu-id="70ede-232">この値は、インストール ユーティリティがサービスをインストールする前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="70ede-232">This value must be set before the install utility attempts to install the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ede-233">重要ですが、<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>と同じで、<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>から派生したクラスの<xref:System.ServiceProcess.ServiceBase>します。</span><span class="sxs-lookup"><span data-stu-id="70ede-233">It is crucial that the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the class you derived from <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="70ede-234">値では、通常、<xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType>サービス アプリケーションの実行可能ファイルの Main() 関数内で、サービスのプロパティが設定されています。</span><span class="sxs-lookup"><span data-stu-id="70ede-234">Normally, the value of the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> property for the service is set within the Main() function of the service application's executable.</span></span> <span data-ttu-id="70ede-235">サービス コントロール マネージャーを使用して、<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType>プロパティをこの実行可能ファイル内でサービスを見つけます。</span><span class="sxs-lookup"><span data-stu-id="70ede-235">The Service Control Manager uses the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> property to locate the service within this executable.</span></span>  
  
 <span data-ttu-id="70ede-236">設定すると、<xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>サービスのインストーラーの<xref:System.Diagnostics.EventLog.Source%2A>関連のイベント ログの同じ値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="70ede-236">When you set the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the service installer, the <xref:System.Diagnostics.EventLog.Source%2A> of the associated event log is set to the same value.</span></span> <span data-ttu-id="70ede-237">これにより、コンピューター上のアプリケーション ログにサービスのコマンド (開始、停止) などの呼び出しを自動的にログオンするサービス。</span><span class="sxs-lookup"><span data-stu-id="70ede-237">This allows the service to automatically log service commands (such as Start and Stop) calls to the Application log on the computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ede-238">アプリケーション ログ以外のログが、コンピューター上に既に同じ名前のソースが存在する場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="70ede-238">If a source by the same name already exists on the computer, but in a log other than the Application log, an exception will be thrown.</span></span> <span data-ttu-id="70ede-239">ソースが存在し、アプリケーション ログに関連付けられている場合、サービスにコマンドの呼び出しをレポートにそのソースを使用し、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="70ede-239">If the source exists and is associated with the Application log, that source is used to report command calls to the service, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="70ede-240"><xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>することはできません`null`か、長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="70ede-240">The <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> cannot be `null` or have zero length.</span></span> <span data-ttu-id="70ede-241">最大サイズは 256 文字です。</span><span class="sxs-lookup"><span data-stu-id="70ede-241">Its maximum size is 256 characters.</span></span> <span data-ttu-id="70ede-242">前方または後方のスラッシュを含めることはできません '/' または '\\'、または文字セット 10 進値 32 未満の値の ascii 文字。</span><span class="sxs-lookup"><span data-stu-id="70ede-242">It also cannot contain forward or backward slashes, '/' or '\\', or characters from the ASCII character set with value less than decimal value 32.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="70ede-243"><see cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" /> プロパティが無効です。</span><span class="sxs-lookup"><span data-stu-id="70ede-243">The <see cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" /> property is invalid.</span></span></exception>
        <altmember cref="P:System.ServiceProcess.ServiceBase.ServiceName" />
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="ServicesDependedOn">
      <MemberSignature Language="C#" Value="public string[] ServicesDependedOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ServicesDependedOn" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn" />
      <MemberSignature Language="VB.NET" Value="Public Property ServicesDependedOn As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ServicesDependedOn { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServicesDependedOn : string[] with get, set" Usage="System.ServiceProcess.ServiceInstaller.ServicesDependedOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerServicesDependedOn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70ede-244">このサービスを実行するために実行する必要があるサービスを示します。</span><span class="sxs-lookup"><span data-stu-id="70ede-244">Indicates the services that must be running for this service to run.</span></span></summary>
        <value><span data-ttu-id="70ede-245">このインストーラーに関連付けられているサービスを実行する前に実行する必要があるサービスの配列。</span><span class="sxs-lookup"><span data-stu-id="70ede-245">An array of services that must be running before the service associated with this installer can run.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ede-246">サービスが実行されているは、開始する際に、その他のサービスを要求できます。</span><span class="sxs-lookup"><span data-stu-id="70ede-246">A service can require other services to be running before it can start.</span></span> <span data-ttu-id="70ede-247">このプロパティの情報は、レジストリのキーに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="70ede-247">The information from this property is written to a key in the registry.</span></span> <span data-ttu-id="70ede-248">ユーザー (または、システムを自動起動の場合) は、サービスの実行を試みると、各配列内のサービスが既に開始されているサービス コントロール マネージャー (SCM) を確認します。</span><span class="sxs-lookup"><span data-stu-id="70ede-248">When the user (or the system, in the case of automatic startup) tries to run the service, the Service Control Manager (SCM) verifies that each of the services in the array has already been started.</span></span>  
  
 <span data-ttu-id="70ede-249">配列内のサービスが、実行されていない場合、SCM を起動しようとします。</span><span class="sxs-lookup"><span data-stu-id="70ede-249">If any service in the array is not running then, the SCM tries to start them.</span></span> <span data-ttu-id="70ede-250">これにより、サービスが含まれます。 `Manual`<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>します。</span><span class="sxs-lookup"><span data-stu-id="70ede-250">This includes services with `Manual`<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>.</span></span>  
  
 <span data-ttu-id="70ede-251">このサービスが依存している任意のサービスが開始に失敗した場合、このサービスは開始されません。</span><span class="sxs-lookup"><span data-stu-id="70ede-251">If any service upon which this service depends fails to start, this service will not start.</span></span> <span data-ttu-id="70ede-252">これを検出するシステム レベルで処理する例外がないために、システムが開始されていない場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="70ede-252">An exception is not thrown if the system is not started because there is no exception handling at the system level to detect this.</span></span> <span data-ttu-id="70ede-253">サービスの起動障害を処理し、コードでこれを実装する方法を決定します。</span><span class="sxs-lookup"><span data-stu-id="70ede-253">Decide how to handle service start failures and implement this in your code.</span></span> <span data-ttu-id="70ede-254">通常、サービスが開始に失敗した場合は、スタートアップ時にダイアログ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="70ede-254">Typically, a dialog appears to the user at startup if a service fails to start.</span></span>  
  
 <span data-ttu-id="70ede-255">サービスが起動しない場合は、アプリケーション イベント ログにエントリが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="70ede-255">If the service does not start, an entry is written to the Application event log.</span></span>  
  
 <span data-ttu-id="70ede-256">このサービスが依存しているサービスは、同じ実行可能ファイルである必要はありません。</span><span class="sxs-lookup"><span data-stu-id="70ede-256">The services upon which this service depends do not need to be in the same executable.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.StartType" />
      </Docs>
    </Member>
    <Member MemberName="StartType">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceStartMode StartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceStartMode StartType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.StartType" />
      <MemberSignature Language="VB.NET" Value="Public Property StartType As ServiceStartMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceStartMode StartType { System::ServiceProcess::ServiceStartMode get(); void set(System::ServiceProcess::ServiceStartMode value); };" />
      <MemberSignature Language="F#" Value="member this.StartType : System.ServiceProcess.ServiceStartMode with get, set" Usage="System.ServiceProcess.ServiceInstaller.StartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerStartType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceStartMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70ede-257">このサービスがいつ、どのように開始されるかを示します。</span><span class="sxs-lookup"><span data-stu-id="70ede-257">Indicates how and when this service is started.</span></span></summary>
        <value><span data-ttu-id="70ede-258">サービスを開始する方法を表す <see cref="T:System.ServiceProcess.ServiceStartMode" />。</span><span class="sxs-lookup"><span data-stu-id="70ede-258">A <see cref="T:System.ServiceProcess.ServiceStartMode" /> that represents the way the service is started.</span></span> <span data-ttu-id="70ede-259">既定値は <see langword="Manual" /> です。再起動の後にサービスが自動的に開始されないように指定します。</span><span class="sxs-lookup"><span data-stu-id="70ede-259">The default is <see langword="Manual" />, which specifies that the service will not automatically start after reboot.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ede-260">設定、<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>サービスが再起動後に自動的に開始するか、ユーザーがサービスを手動で開始する必要がありますを指定します。</span><span class="sxs-lookup"><span data-stu-id="70ede-260">Set the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> to specify either that the service be started automatically after reboot or that a user must manually start the service.</span></span> <span data-ttu-id="70ede-261">サービスも無効にできますを起動できない、手動またはプログラムによってが有効にするまでを指定します。</span><span class="sxs-lookup"><span data-stu-id="70ede-261">A service can also be disabled, specifying that it cannot be started, either manually or programmatically, until it is enabled.</span></span>  
  
 <span data-ttu-id="70ede-262">変更することはできません<xref:System.ServiceProcess.ServiceInstaller>インストール後にプロパティの値。</span><span class="sxs-lookup"><span data-stu-id="70ede-262">You cannot change <xref:System.ServiceProcess.ServiceInstaller> property values after installation.</span></span> <span data-ttu-id="70ede-263">変更する、<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>をアンインストールし、サービスを再インストールまたはサービス コントロール マネージャーを使用して設定を手動で変更があるか。</span><span class="sxs-lookup"><span data-stu-id="70ede-263">To change the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A>, you either have to uninstall and reinstall your service, or manually change the setting using the Service Control Manager.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="70ede-264">開始モードが、<see cref="T:System.ServiceProcess.ServiceStartMode" /> 列挙体の値ではありません。</span><span class="sxs-lookup"><span data-stu-id="70ede-264">The start mode is not a value of the <see cref="T:System.ServiceProcess.ServiceStartMode" /> enumeration.</span></span></exception>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="serviceInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="70ede-265">インストールに関連付けられているコンテキスト情報を格納する <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="70ede-265">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span></span></param>
        <summary><span data-ttu-id="70ede-266">サービスに関する情報をレジストリから削除して、サービスをアンインストールします。</span><span class="sxs-lookup"><span data-stu-id="70ede-266">Uninstalls the service by removing information about it from the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ede-267">これをアンインストールする前に、サービスを停止する最初の試みをアンインストールします。</span><span class="sxs-lookup"><span data-stu-id="70ede-267">Uninstall first attempts to stop the service before uninstalling it.</span></span> <span data-ttu-id="70ede-268">サービスを停止することはできません、例外はキャッチされませんし、メソッドは、サービスの削除を続行します。</span><span class="sxs-lookup"><span data-stu-id="70ede-268">If the service cannot be stopped, no exception is caught, and the method continues with the removal of the service.</span></span>  
  
 <span data-ttu-id="70ede-269">通常がないメソッドを呼び出す、<xref:System.ServiceProcess.ServiceInstaller>は、コード内で一般的に呼び出される、インストール ユーティリティでのみです。</span><span class="sxs-lookup"><span data-stu-id="70ede-269">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="70ede-270">InstallUtil を使ってサービスをアンインストールするとインストールにはアンインストールするには、コマンドラインの呼び出しにスイッチします。</span><span class="sxs-lookup"><span data-stu-id="70ede-270">InstallUtil is used to uninstall services as well as install them; uninstalling takes a switch in the command line call.</span></span>  
  
 <span data-ttu-id="70ede-271">アプリケーションのアンインストールのルーチンに自動的に、コンポーネントに関する情報を保持プロジェクト インストーラーを使用して、アンインストールされる<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="70ede-271">An application's uninstall routine maintains information automatically about the components being uninstalled, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="70ede-272">この状態情報が渡される<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>として、`savedState`パラメーターは継続的に更新、<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスと各<xref:System.ServiceProcess.ServiceInstaller>ユーティリティによってインスタンスがインストールされています。</span><span class="sxs-lookup"><span data-stu-id="70ede-272">This state information, passed into <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="70ede-273">この状態情報を明示的に変更するコードを通常必要はありません。</span><span class="sxs-lookup"><span data-stu-id="70ede-273">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="70ede-274">すべてのクラスから派生する、<xref:System.Configuration.Install.Installer>クラスの状態、<xref:System.Configuration.Install.Installer.Installers%2A>コレクションが同じである必要があります、<xref:System.ServiceProcess.ServiceInstaller.Install%2A>と<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="70ede-274">For all classes deriving from the <xref:System.Configuration.Install.Installer> class, the state of the <xref:System.Configuration.Install.Installer.Installers%2A> collection must be the same in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods.</span></span> <span data-ttu-id="70ede-275">ただし、全体でコレクションのメンテナンスを回避できます、<xref:System.ServiceProcess.ServiceInstaller.Install%2A>と<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A>メソッドにインストーラーのインスタンスを追加する場合、<xref:System.Configuration.Install.Installer.Installers%2A>カスタム インストーラー クラスのコンス トラクター内のコレクション。</span><span class="sxs-lookup"><span data-stu-id="70ede-275">However, you can avoid the maintenance of the collection across the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods if you add installer instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in your custom installer class constructor.</span></span>  
  
 <span data-ttu-id="70ede-276">1 つのサービスをアンインストールできなかった場合、これには影響しません、他のサービス (通常は同じインストール プロジェクト) 内でアンインストールされているためをアンインストールするためのロールバック メカニズムはありません。</span><span class="sxs-lookup"><span data-stu-id="70ede-276">There is no rollback mechanism for uninstalling, so if one service fails to uninstall, this does not affect the other services (usually within the same installation project) being uninstalled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="70ede-277">サービス コントロール マネージャーを開くことができませんでした。</span><span class="sxs-lookup"><span data-stu-id="70ede-277">The Service Control Manager could not be opened.</span></span>  
  
<span data-ttu-id="70ede-278">- または -</span><span class="sxs-lookup"><span data-stu-id="70ede-278">-or-</span></span> 
<span data-ttu-id="70ede-279">サービスへのハンドルを取得できませんでした。</span><span class="sxs-lookup"><span data-stu-id="70ede-279">The system could not get a handle to the service.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>