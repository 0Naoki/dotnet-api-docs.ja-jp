<Type Name="SqlPersistenceProviderFactory" FullName="System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4cb6bfc605f30f34fff72e1d63be0acbf5446094" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39988651" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlPersistenceProviderFactory : System.ServiceModel.Persistence.PersistenceProviderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlPersistenceProviderFactory extends System.ServiceModel.Persistence.PersistenceProviderFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlPersistenceProviderFactory&#xA;Inherits PersistenceProviderFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPersistenceProviderFactory : System::ServiceModel::Persistence::PersistenceProviderFactory" />
  <TypeSignature Language="F#" Value="type SqlPersistenceProviderFactory = class&#xA;    inherit PersistenceProviderFactory" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Persistence.PersistenceProviderFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2b148-101">
        <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" /> インスタンスを作成するために使用される <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> のシステム提供の実装です。インスタンスでは、永続化されているサービス状態データを格納するために SQL データベースが使用されます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b148-101">A system-provided <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" /> implementation used to create a <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> instance that uses a SQL database to store persisted service state data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-102"><xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> クラスは、完全に機能する永続性サービスの永続化プロバイダーのファクトリ クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="2b148-102">The <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class represents a factory class for a fully-functional, durable service persistence provider.</span></span> <span data-ttu-id="2b148-103">このシステムで指定されたプロバイダーを使用して、永続化および永続的な WCF サービスに関する状態情報を取得することができます。</span><span class="sxs-lookup"><span data-stu-id="2b148-103">You can use this system-provided provider to persist and retrieve state information about a durable WCF service.</span></span>  
  
 <span data-ttu-id="2b148-104">永続性に加えて、<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> クラスで作成されたプロバイダーは、抽象 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> クラスを継承してサービス状態データ レコードのロックを実装します。</span><span class="sxs-lookup"><span data-stu-id="2b148-104">In addition to persistence, the provider created by the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class implements locking of service state data records by inheriting from the abstract <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class.</span></span>  <span data-ttu-id="2b148-105">永続化されたデータをやり取りする方法 (など<xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A>または<xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) は省略可能なパラメーターを持つ (`lockInstance`) 当該のデータのロックがリリースされたまたは保持されるかどうかを定義します。</span><span class="sxs-lookup"><span data-stu-id="2b148-105">Methods that interact with persisted data (such as <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> or <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b148-106"><xref:System.ServiceModel.Persistence.PersistenceException> でスローされた <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 例外では、既定で例外の詳細を非表示にしません。</span><span class="sxs-lookup"><span data-stu-id="2b148-106"><xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> do not have their exception details hidden by default.</span></span> <span data-ttu-id="2b148-107">セキュリティの脆弱性に対する保護のため、これらの詳細を設定して隠すことができます<xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A>に`false`します。</span><span class="sxs-lookup"><span data-stu-id="2b148-107">To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b148-108">SQL Persistence Provider は、SQL Server データベースからデータを格納および取得します。</span><span class="sxs-lookup"><span data-stu-id="2b148-108">The SQL Persistence Provider stores and retrieves data from a SQL Server database.</span></span> <span data-ttu-id="2b148-109">ホストは、セキュリティで保護された SQL Server 環境を作成して、データベース内、またはアプリケーションとデータベース間のネットワーク上のいずれかを使用してインスタンス状態への読み込みおよび書き込みアクセスを得ようとする攻撃者に対して保護する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2b148-109">The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b148-110">
            <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-111"><xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> クラスのコンストラクターのオーバーロードには、次を設定するためのパラメーターが用意されています。</span><span class="sxs-lookup"><span data-stu-id="2b148-111">Overloads of the constructor for the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class provide parameters for setting the following:</span></span>  
  
-   <span data-ttu-id="2b148-112">SQL データベースのアクセスに使用される接続文字列。</span><span class="sxs-lookup"><span data-stu-id="2b148-112">The connection string used for accessing the SQL database.</span></span>  
  
-   <span data-ttu-id="2b148-113">ロック所有権期間の定義に使用されるロック タイムアウト。</span><span class="sxs-lookup"><span data-stu-id="2b148-113">The lock time-out used for defining lock ownership duration.</span></span>  
  
-   <span data-ttu-id="2b148-114">永続性データが、XML としてシリアル化されるか、それともバイナリ データとしてシリアル化されるかどうか。</span><span class="sxs-lookup"><span data-stu-id="2b148-114">Whether the persistence data is serialized as XML or binary data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : System.Collections.Specialized.NameValueCollection -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="2b148-115">新しい永続性プロバイダー ファクトリによって使用されるパラメーターのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-115">The collection of parameters used by the new persistence provider factory.</span>
          </span>
          <span data-ttu-id="2b148-116">有効なパラメーターには、<see langword="lockTimeout" />, <see langword="connectionStringName" /> および <see langword="serializeAsText" /> が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-116">Valid parameters include <see langword="lockTimeout" />, <see langword="connectionStringName" />, and <see langword="serializeAsText" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b148-117">指定したパラメーター コレクションを使用して構成される、<see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified parameter collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-118">このコンストラクターを使用して、`lockTimeout`、`connectionString`、および `serializeAsText` を、他のコンストラクターによって必要とされるような他のパラメーター (たとえば、`connectionString` パラメーターを指定しないで `lockTimeout` および `serializeAsText` パラメーターを指定する) を指定しないで任意に指定できます。</span><span class="sxs-lookup"><span data-stu-id="2b148-118">This constructor can be used to arbitrarily specify `lockTimeout`, `connectionString`, and `serializeAsText` without specifying the other parameters as required by the other constructors (for example, to specify the `connectionString` and `lockTimeout` parameters without specifying the `serializeAsText` parameter.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b148-119">パラメーター コレクションを使用して <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> クラスの新しいインスタンスを作成する方法を、次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="2b148-119">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a parameters collection.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#3](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="2b148-120">新しい永続化プロバイダー インスタンスの接続パラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-120">The connection parameters for the new persistence provider instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b148-121">指定した接続文字列で構成される、<see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-121">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified connection string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b148-122">接続文字列を使用して <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> クラスの新規インスタンスを作成する方法を、次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="2b148-122">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a connection string.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#2](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool serializeAsText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, serializeAsText As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString, bool serializeAsText);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string * bool -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory (connectionString, serializeAsText)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="serializeAsText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="2b148-123">新しい永続化プロバイダー インスタンスの接続パラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-123">The connection parameters for the new persistence provider instance.</span>
          </span>
        </param>
        <param name="serializeAsText">
          <span data-ttu-id="2b148-124">データをバイナリではなくテキストとしてシリアル化するかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-124">Specifies whether data is serialized as text rather than binary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b148-125">指定した接続文字列および <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /><see langword="serializeAsText" />パラメーターで構成される、 クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-125">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified connection string and <see langword="serializeAsText" /> parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-126">既定値`serializeAsText`は`false`、バイナリ データとしてシリアル化は、その永続的な情報を示します。</span><span class="sxs-lookup"><span data-stu-id="2b148-126">The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b148-127"><xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> クラスの新規インスタンスを作成する方法を、次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="2b148-127">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#1](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText, TimeSpan lockTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool serializeAsText, valuetype System.TimeSpan lockTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, serializeAsText As Boolean, lockTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString, bool serializeAsText, TimeSpan lockTimeout);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string * bool * TimeSpan -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory (connectionString, serializeAsText, lockTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="serializeAsText" Type="System.Boolean" />
        <Parameter Name="lockTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="2b148-128">新しい永続化プロバイダー ファクトリ インスタンスの接続パラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-128">The connection parameters for the new persistence provider factory instance.</span>
          </span>
        </param>
        <param name="serializeAsText">
          <span data-ttu-id="2b148-129">データをバイナリではなくテキストとしてシリアル化するかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-129">Specifies whether data is serialized as text rather than binary.</span>
          </span>
        </param>
        <param name="lockTimeout">
          <span data-ttu-id="2b148-130">ロック所有権のタイムアウト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-130">The time-out for lock ownership.</span>
          </span>
          <span data-ttu-id="2b148-131">このタイムアウト期間後、ロックされたインスタンスが自動的に解除されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-131">Locked instances are automatically unlocked after this time period.</span>
          </span>
          <span data-ttu-id="2b148-132">
            <see langword="TimeSpan.Zero" /> のタイムアウトでは、ロックが使用されないことを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-132">A time-out of <see langword="TimeSpan.Zero" /> specifies that no locking is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b148-133">指定した接続文字列の <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /><see langword="serializeAsText" />および <see langword="lockTimeout" /> パラメーターで構成される、 クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-133">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified connection string, <see langword="serializeAsText" />, and <see langword="lockTimeout" /> parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-134">既定値`serializeAsText`は`false`、バイナリ データとしてシリアル化は、その永続的な情報を示します。</span><span class="sxs-lookup"><span data-stu-id="2b148-134">The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.</span></span>  
  
 <span data-ttu-id="2b148-135">既定値`lockTimeout`は`TimeSpan.Zero`、そのロックを示すは使用されません。</span><span class="sxs-lookup"><span data-stu-id="2b148-135">The default value for `lockTimeout` is `TimeSpan.Zero`, which indicates that locking is not used.</span></span> <span data-ttu-id="2b148-136">場合`TimeSpan.MaxValue`のロックが無期限に保持し、使用されます。</span><span class="sxs-lookup"><span data-stu-id="2b148-136">If `TimeSpan.MaxValue` is used, then locks are maintained indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b148-137"><xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> クラスの新規インスタンスを作成する方法を、次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="2b148-137">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#0](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b148-138">このファクトリで作成された永続化プロバイダー インスタンスの接続パラメーターを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-138">Gets the connection parameters for persistence provider instances created with this factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b148-139">このファクトリで作成された永続化プロバイダー インスタンスの接続パラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-139">The connection parameters for persistence provider instances created with this factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b148-140">`ConnectionString` プロパティを設定およびアクセスする方法を、次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="2b148-140">The following code example shows how to set and access the `ConnectionString` property.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#4](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Persistence.PersistenceProvider CreateProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Persistence.PersistenceProvider CreateProvider(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateProvider (id As Guid) As PersistenceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Persistence::PersistenceProvider ^ CreateProvider(Guid id);" />
      <MemberSignature Language="F#" Value="override this.CreateProvider : Guid -&gt; System.ServiceModel.Persistence.PersistenceProvider" Usage="sqlPersistenceProviderFactory.CreateProvider id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Persistence.PersistenceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="2b148-141">作成されている永続化プロバイダーの一意の識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-141">The unique identifier of the persistence provider being created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b148-142">永続的ストアとして SQL データベースを使用する新しい <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> インスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-142">Initializes a new <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> instance that uses a SQL database as its persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b148-143">新しく作成した <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-143">A newly-created <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-144">永続化プロバイダーが作成された後、ファクトリのパラメーターが変更された場合でも、初期化済みの永続化プロバイダーでは、永続化プロバイダーを作成したファクトリの現在のパラメーターが使用されます (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>、<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>、および <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>)。</span><span class="sxs-lookup"><span data-stu-id="2b148-144">The initialized persistence provider uses the current parameters of the creating factory (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, and <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), even if the factory's parameters are changed after the persistence provider is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b148-145">`CreateProvider` メソッドを実行する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="2b148-145">The following code example shows how to execute the `CreateProvider` method.</span></span> <span data-ttu-id="2b148-146">結果プロバイダーは <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> インスタンスとしてアクセスされることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="2b148-146">Note that the resulting provider is accessed as a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> instance.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#7](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCloseTimeout : TimeSpan" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b148-147">このファクトリで作成された永続化プロバイダーを閉じるときに使用される既定のタイムアウト値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-147">Gets the default time-out value used when persistence providers created with this factory are closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b148-148">既定のタイムアウト値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-148">The default time-out value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-149">クローズ タイムアウトの既定値は 15 秒です。</span><span class="sxs-lookup"><span data-stu-id="2b148-149">The default value for close time-out is 15 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOpenTimeout : TimeSpan" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b148-150">永続化プロバイダーを開くときに使用される既定のタイムアウト値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-150">Gets the default time-out value used when persistence provider is opened.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b148-151">既定のタイムアウト値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-151">The default time-out value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-152">オープン タイムアウトの既定値は 15 秒です。</span><span class="sxs-lookup"><span data-stu-id="2b148-152">The default value for open time-out is 15 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan LockTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan LockTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LockTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan LockTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.LockTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b148-153">このインスタンスで作成された永続化プロバイダー インスタンスで使用されるロック所有権のタイムアウト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-153">The time-out for lock ownership used by persistence provider instances created by this instance.</span>
          </span>
          <span data-ttu-id="2b148-154">このタイムアウト期間後、ロックされたインスタンスが自動的に解除されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-154">Locked instances are automatically unlocked after this time period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b148-155">ロック所有権のタイムアウト値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-155">The time-out value for lock ownership.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-156">`TimeSpan.Zero` のタイムアウトでは、ロックが使用されないことを指定します。</span><span class="sxs-lookup"><span data-stu-id="2b148-156">A time-out of `TimeSpan.Zero` specifies that no locking is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b148-157">`LockTimeout` プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="2b148-157">The following code example shows how to access the `LockTimeout` property.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#5](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAbort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAbort();" />
      <MemberSignature Language="F#" Value="override this.OnAbort : unit -&gt; unit" Usage="sqlPersistenceProviderFactory.OnAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b148-158">中止フェーズを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-158">Represents the Abort phase.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-159">`OnAbort` サービス ホストが突然シャット ダウンしたときに発生し、現在処理されているアクティブ コマンドは閉じられます。</span><span class="sxs-lookup"><span data-stu-id="2b148-159">`OnAbort` fires when the service host shuts down abruptly and active commands currently being processed are closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlPersistenceProviderFactory.OnBeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2b148-160">永続化プロバイダーがこの試行を中止してからの期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-160">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="2b148-161">操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-161">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2b148-162">この特定の非同期操作を他の操作と区別するために使用するユーザー指定のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-162">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b148-163">クローズ フェーズの開始を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-163">Represents the beginning of the Close phase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b148-164">
            <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 非同期メソッド呼び出しの状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-164">The state of the <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-165">クローズ フェーズは、サービスを閉じるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="2b148-165">The Close phase occurs when the service is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOpen">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlPersistenceProviderFactory.OnBeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2b148-166">永続化プロバイダーがこの試行を中止してからの期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-166">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="2b148-167">操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-167">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2b148-168">この特定の非同期操作を他の操作と区別するために使用するユーザー指定のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-168">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b148-169">オープン フェーズの開始を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-169">Represents the beginning of the Open phase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b148-170">
            <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> 非同期メソッド呼び出しの状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-170">The state of the <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-171">オープン フェーズは、サービスを開くときに発生します。</span><span class="sxs-lookup"><span data-stu-id="2b148-171">The Open phase occurs when the service is opened.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected override void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClose(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnClose : TimeSpan -&gt; unit" Usage="sqlPersistenceProviderFactory.OnClose timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2b148-172">永続化プロバイダーがこの試行を中止してからの期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-172">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b148-173">クローズ フェーズを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-173">Represents the Close phase.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-174">クローズ フェーズは、サービスを閉じるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="2b148-174">The Close phase occurs when the service is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected override void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndClose : IAsyncResult -&gt; unit" Usage="sqlPersistenceProviderFactory.OnEndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="2b148-175">操作の結果への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-175">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b148-176">クローズ フェーズの終了を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-176">Represents the end of the Close phase.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-177">クローズ フェーズは、サービスを閉じるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="2b148-177">The Close phase occurs when the service is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOpen">
      <MemberSignature Language="C#" Value="protected override void OnEndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndOpen : IAsyncResult -&gt; unit" Usage="sqlPersistenceProviderFactory.OnEndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="2b148-178">操作の結果への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-178">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b148-179">オープン フェーズの終了を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-179">Represents the end of the Open phase.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-180">オープン フェーズは、サービスを開くときに発生します。</span><span class="sxs-lookup"><span data-stu-id="2b148-180">The Open phase occurs when the service is opened.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpen">
      <MemberSignature Language="C#" Value="protected override void OnOpen (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpen(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpen (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpen(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnOpen : TimeSpan -&gt; unit" Usage="sqlPersistenceProviderFactory.OnOpen timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2b148-181">永続化プロバイダーがこの試行を中止してからの期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-181">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b148-182">オープン フェーズを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-182">Represents the Open phase.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-183">オープン フェーズは、サービスを開くときに発生します。</span><span class="sxs-lookup"><span data-stu-id="2b148-183">The Open phase occurs when the service is opened.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeAsText">
      <MemberSignature Language="C#" Value="public bool SerializeAsText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SerializeAsText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializeAsText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SerializeAsText { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SerializeAsText : bool with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b148-184">このファクトリで作成された永続化プロバイダーで、データをバイナリではなくテキストとしてシリアル化するかどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-184">Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b148-185">サービス情報がテキストとしてシリアル化される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b148-185">
              <see langword="true" /> if the service information is serialized as text; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b148-186">既定値`serializeAsText`は`false`、バイナリ データとしてシリアル化は、その永続的な情報を示します。</span><span class="sxs-lookup"><span data-stu-id="2b148-186">The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b148-187">`SerializeAsText` プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="2b148-187">The following code example shows how to access the `SerializeAsText` property.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#6](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>