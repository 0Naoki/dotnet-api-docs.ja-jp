<Type Name="DataSourceIDConverter" FullName="System.Web.UI.Design.WebControls.DataSourceIDConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c21d00663b316de5622c00fd84374d0b55a8fad7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36392057" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataSourceIDConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataSourceIDConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataSourceIDConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceIDConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type DataSourceIDConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ ソース名のユーザーが選択可能なリストを作成します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter>クラスは、<xref:System.ComponentModel.TypeConverter>オブジェクトによって参照される通常の<xref:System.ComponentModel.TypeConverterAttribute>属性。  
  
 データ ソースによって返される名、<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A>メソッドが有効なデータ ソースは、指定したコンテキストのコンテナーからのコンポーネントです。  
  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A>メソッドは、返されたデータ ソース名が使用可能な値の排他的なリストかどうかを示す値を取得します。 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported%2A>メソッドは、データ ソースの名前が一覧から選択できる値の標準セットであるかどうかを示す値を取得します。  
  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A>メソッドが、指定したオブジェクトをコンバーターのネイティブな型に変換します。 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A>メソッドを示す値を取得するかどうかこの<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter>ネイティブな型に、指定したソースの種類のオブジェクトを変換することができます。  
  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource%2A>メソッドは、指定したコンポーネントを実装するかどうかを示す、<xref:System.Web.UI.IDataSource>インターフェイスです。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
    <altmember cref="T:System.Web.UI.IDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceIDConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceIDConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework は、内部での新しいインスタンスを作成、<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter>クラスによってクラスが参照されている場合、<xref:System.ComponentModel.TypeConverterAttribute>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dataSourceIDConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">型コンバーターにコンテキスト情報を提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> を実装するオブジェクト。それにより、型コンバーターは変換を実行できます。</param>
        <param name="sourceType">変換の要求対象となるオブジェクトの <see cref="T:System.Type" />。</param>
        <summary>このコンバーターが、指定した型のオブジェクトをコンバーターのネイティブ型に変換できるかどうかを示す値を取得します。</summary>
        <returns>
          <paramref name="sourceType" /> が文字列である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A>メソッドは、文字列からのみ変換できますので、<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A>のみが返されます`true`とき`sourcetype`文字列です。  
  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A>使用しない、`context`パラメーター。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="dataSourceIDConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">型コンバーターにコンテキスト情報を提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> を実装するオブジェクト。それにより、型コンバーターは変換を実行できます。</param>
        <param name="culture">
          <c>value</c> パラメーターのカルチャを指定する <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
        <param name="value">変換対象のオブジェクト。</param>
        <summary>指定したオブジェクトをコンバーターのネイティブな型に変換します。</summary>
        <returns>
          <paramref name="value" /> パラメーターが文字列として返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、`value`パラメーターが文字列の型を持つ文字列として返されます。 場合`value`は`null`、空の文字列 ("") が返されます。 それ以外の場合は、<xref:System.NotSupportedException> がスローされます。  
  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A>メソッドを使用しません、`context`または`culture`パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> が文字列ではないか、<see langword="null" /> です。</exception>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="dataSourceIDConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">型コンバーターにコンテキスト情報を提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> を実装するオブジェクト。それにより、型コンバーターは変換を実行できます。</param>
        <summary>使用可能なデータ ソース名のリストを返します。</summary>
        <returns>
          <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> インターフェイスを実装していて、指定されたコンテキストで使用できるコントロールの名前が格納された <see cref="T:System.Web.UI.IDataSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A>メソッドで指定されているオブジェクトのコンテナーに、有効なデータ ソースにあるコンポーネントの名前のリストを作成する、`context`パラメーター。 その一覧を次に、変換、<xref:System.ComponentModel.TypeConverter.StandardValuesCollection>オブジェクト。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.ComponentModel.ITypeDescriptorContext.Container" />
        <altmember cref="P:System.ComponentModel.Container.Components" />
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" />
        <altmember cref="P:System.ComponentModel.IComponent.Site" />
        <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataSourceIDConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">型コンバーターにコンテキスト情報を提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> を実装するオブジェクト。それにより、型コンバーターは変換を実行できます。</param>
        <summary>返されたデータ ソース名が、候補値の除外リストであるかどうかを示す値を取得します。</summary>
        <returns>常に <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラスを派生する場合、<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter>クラスし、オーバーライド、<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A>をデータ ソース名の排他的なリストを返すメソッドをオーバーライドも、<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A>を返すメソッドを`true`データ ソースの名前リストが排他的な場合です。  
  
 `context`でパラメーターを使用しない、<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataSourceIDConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">型コンバーターにコンテキスト情報を提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> を実装するオブジェクト。それにより、型コンバーターは変換を実行できます。</param>
        <summary>リストから選択できる標準データ ソース名セットをこのオブジェクトが返すかどうかを示す値を取得します。</summary>
        <returns>常に <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `context`でパラメーターを使用しない、<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      </Docs>
    </Member>
    <Member MemberName="IsValidDataSource">
      <MemberSignature Language="C#" Value="protected virtual bool IsValidDataSource (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsValidDataSource(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsValidDataSource (component As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsValidDataSource(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member IsValidDataSource : System.ComponentModel.IComponent -&gt; bool&#xA;override this.IsValidDataSource : System.ComponentModel.IComponent -&gt; bool" Usage="dataSourceIDConverter.IsValidDataSource component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <see cref="T:System.ComponentModel.IComponent" /> インターフェイスを実装するオブジェクト。</param>
        <summary>指定したコンポーネントが有効なデータ ソースであるかどうかを示す値を取得します。</summary>
        <returns>
          <paramref name="component" /> が有効なデータ ソースである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource%2A>メソッドでは考慮、`component`を実装する場合に有効なデータ ソースのパラメーター、<xref:System.Web.UI.IDataSource>インターフェイスです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" />さらに詳しく調査コンポーネントには、標準値の一覧で返す必要があるかどうかを決定する必要があるコントロールでメソッドをオーバーライドする必要があります。たとえば、コントロールの動作とのみ<see cref="T:System.Web.UI.WebControls.XmlDataSource" />データ ソース、<see cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" />返す必要があります<see langword="true" />のみそれらのコンポーネントである<see cref="T:System.Web.UI.WebControls.XmlDataSource" />オブジェクト。</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.Web.UI.IDataSource" />
      </Docs>
    </Member>
  </Members>
</Type>