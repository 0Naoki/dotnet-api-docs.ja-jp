<Type Name="NavigationService" FullName="System.Windows.Navigation.NavigationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ada487929a3270b8b3a3f316486ea10531a71ff1" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39762299" /></Metadata><TypeSignature Language="C#" Value="public sealed class NavigationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NavigationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NavigationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationService sealed" />
  <TypeSignature Language="F#" Value="type NavigationService = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ナビゲーションをサポートするメソッド、プロパティ、およびイベントを格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService> ブラウザー スタイルのナビゲーションのコンテキスト内でコンテンツをダウンロードする機能をカプセル化します。  
  
 コンテンツは .NET Framework のオブジェクトおよび HTML ファイルの任意の型を指定します。 ページが推奨されるパッケージ コンテンツのナビゲーションする手段としてただし、一般に、(を参照してください<xref:System.Windows.Controls.Page>)。  
  
 オブジェクトのインスタンスとのオーバー ロードを呼び出すことによってにコンテンツを移動する、<xref:System.Windows.Navigation.NavigationService.Navigate%2A>オブジェクトを受け取るメソッド。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>  
  
 または、コンテンツがナビゲート可能のいずれかに相対パスまたは絶対 URI を渡すことによって、 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> URI を受け取るメソッド オーバー ロード。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=nameWithType>  
  
 コンテンツを移動する URI で<xref:System.Windows.Navigation.NavigationService>はコンテンツを格納しているオブジェクトを返します。  
  
 ナビゲーションの有効期間は、次のイベントを追跡できます。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigated>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationProgress>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationStopped>  
  
-   <xref:System.Windows.Navigation.NavigationService.LoadCompleted>  
  
-   <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>。  
  
 ナビゲーションが発生するたびにすべてのイベントが発生します。(キャンセル、停止、または失敗) ナビゲーション (コンテンツ、コンテンツ フラグメント) に発生して、ナビゲーションの完了方法の種類によって発生するイベントのセットが決まります。  
  
 次の図は、これらのイベントが発生するシーケンスを示しています。  
  
 ![ページ ナビゲーションのフロー チャート](~/add/media/navigationoverviewfigure11.png "ページ ナビゲーションのフロー チャート")  
  
 中または、ナビゲーション後<xref:System.Windows.Navigation.NavigationService>移動先のコンテンツの URI を含む、移動先のコンテンツに関する情報を提供します (<xref:System.Windows.Navigation.NavigationService.Source%2A>)、現在のコンテンツの URI (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>)、およびオブジェクトが含まれていますが、移動したコンテンツ (<xref:System.Windows.Navigation.NavigationService.Content%2A>)。  
  
 コンテンツの移動、<xref:System.Windows.Navigation.NavigationService>ナビゲーション履歴にエントリとしてナビゲーションを記録します。 ナビゲーション履歴のバックアップを作成して呼び出すことによって、いずれか、新しいナビゲーションが発生したときにエントリを追加、<xref:System.Windows.Navigation.NavigationService.Navigate%2A>メソッドを呼び出すことによって、"進む"ナビゲーション履歴内のエントリに移動して<xref:System.Windows.Navigation.NavigationService.GoForward%2A>。 呼び出すことによってナビゲーション履歴に戻るエントリに移動して"進む"ナビゲーション履歴にエントリが追加された<xref:System.Windows.Navigation.NavigationService.GoBack%2A>します。 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>あるかどうか前に、"進む"ナビゲーション履歴では、それぞれを報告します。 また、最新のエントリで戻るナビゲーション履歴を呼び出すことによって削除できます<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>します。  
  
 既定では、<xref:System.Windows.Navigation.NavigationService>コンテンツ オブジェクトのインスタンスをナビゲーション履歴を保存しません。 代わりに、<xref:System.Windows.Navigation.NavigationService>ナビゲーション履歴によるナビゲーションが毎回、コンテンツ オブジェクトの新しいインスタンスを作成します。 この動作は、膨大な数とコンテンツの大部分に移動されるときに過剰なメモリの消費を回避するために設計されています。 その結果、次に、コンテンツの状態は 1 つのナビゲーションからに記憶されません。 ただし、WPF には、ナビゲーション履歴のコンテンツの状態の一部を格納する、いくつかの方法が用意されています。  
  
 使用して<xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>、1 つのページ インスタンスの状態の複数のセットも注意してください。  
  
 <xref:System.Windows.Navigation.NavigationService> `sealed`クラスし、そのためインスタンス化できません。 代わりに、<xref:System.Windows.Navigation.NavigationService>ナビゲーターがナビゲーションを有効にするために使用します。 WPF では、2 つのナビゲーター:<xref:System.Windows.Navigation.NavigationWindow>と<xref:System.Windows.Controls.Frame>します。  
  
 視覚的に、[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]使用[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]として、ナビゲーターの統合されたユーザー エクスペリエンスを提供します。 物理的に、ただし、[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]を実際に使用<xref:System.Windows.Navigation.NavigationWindow>ナビゲーター; として、<xref:System.Windows.Application.MainWindow%2A>のプロパティ、[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]で実行されている[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]への参照を返します、<xref:System.Windows.Navigation.NavigationWindow>で管理されているナビゲーション履歴と、<xref:System.Windows.Navigation.NavigationWindow>によって管理されているナビゲーション履歴と統合されて[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]次のようにします。  
  
-   ときにコンテンツへの移動が呼び出すことによって<xref:System.Windows.Navigation.NavigationService.Navigate%2A>、 <xref:System.Windows.Navigation.NavigationService.GoBack%2A>、および<xref:System.Windows.Navigation.NavigationService.GoForward%2A>内から、 [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] 、関連するナビゲーション履歴エントリに追加されます[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]ナビゲーション履歴。  
  
-   ときのエントリ、[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]ナビゲーション[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]が選択されている[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]により<xref:System.Windows.Navigation.NavigationService>バックアップまたは転送をこれらのエントリに関連付けられているコンテンツに移動します。  
  
> [!NOTE]
>  A<xref:System.Windows.Controls.Frame>独自のナビゲーション履歴を指定するか、それをホストするナビゲーターのナビゲーション履歴を使用できます。 場合<xref:System.Windows.Controls.Frame>独自のナビゲーション履歴を提供します独自のナビゲーションを表示できる[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]ナビゲーション履歴にエントリをナビゲートするこれらのエントリは、ホストのナビゲーターのナビゲーション履歴に追加されません (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>。、 [!INCLUDE[TLA2#tla_iegeneric](~/includes/tla2sharptla-iegeneric-md.md)]) と、その結果、ナビゲーションに移動することはできません[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]それぞれの (を参照してください<xref:System.Windows.Controls.Frame.JournalOwnership%2A>)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBackEntry (state As CustomContentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBackEntry(System::Windows::Navigation::CustomContentState ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddBackEntry : System.Windows.Navigation.CustomContentState -&gt; unit" Usage="navigationService.AddBackEntry state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">特定のコンテンツ フラグメントに関連付けられたアプリケーション定義の状態を表す <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクト。</param>
        <summary><see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクトを格納しているエントリを "戻る" ナビゲーション履歴に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>、 <xref:System.Windows.Navigation.CustomContentState>、および<xref:System.Windows.Navigation.IProvideCustomContentState>の現在のコンテンツの状態のセットを複数記憶のために使用されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="state" /> が <see langword="null" /> です。<see cref="T:System.Windows.Navigation.CustomContentState" /> から <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" /> オブジェクトが返されませんでした。</exception>
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>"戻る" ナビゲーション履歴にエントリが 1 つ以上あるかどうかを示す値を取得します。</summary>
        <value>"戻る" ナビゲーション履歴にエントリが 1 つ以上ある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> "戻る"ナビゲーション履歴には少なくとも 1 つのエントリがあるかどうかを確認します。 このプロパティを呼び出す前に検査する必要があります<xref:System.Windows.Navigation.NavigationService.GoBack%2A>場合<xref:System.Windows.Navigation.NavigationService.GoBack%2A>と呼びます戻るナビゲーション履歴にエントリがないと、<xref:System.InvalidOperationException>がスローされます。  
  
> [!NOTE]
>  複数のナビゲーターがナビゲーション履歴を共有する場合 (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)、最も最近エントリ戻るナビゲーション履歴が追加されていないによって、<xref:System.Windows.Navigation.NavigationService>の現在のナビゲーター。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>"進む" ナビゲーション履歴にエントリが 1 つ以上あるかどうかを示す値を取得します。</summary>
        <value>"進む" ナビゲーション履歴にエントリが 1 つ以上ある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> "進む"ナビゲーション履歴に少なくとも 1 つのエントリがあるかどうかを確認します。 このプロパティを呼び出す前に検査する必要があります<xref:System.Windows.Navigation.NavigationService.GoForward%2A>場合<xref:System.Windows.Navigation.NavigationService.GoForward%2A>が呼び出されます"進む"ナビゲーション履歴にエントリがないと、<xref:System.InvalidOperationException>がスローされます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Navigation.NavigationService.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のコンテンツを格納しているオブジェクトへの参照を取得または設定します。</summary>
        <value>現在のコンテンツを格納しているオブジェクトへの参照であるオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンテンツは、2 つの方法で設定できます。  
  
-   オブジェクトへの参照に設定によって直接、します。  
  
-   を直接呼び出して<xref:System.Windows.Navigation.NavigationService.Navigate%2A>、 <xref:System.Windows.Navigation.NavigationService.GoBack%2A>、または<xref:System.Windows.Navigation.NavigationService.GoForward%2A>します。  
  
 設定<xref:System.Windows.Navigation.NavigationService>ナビゲーションは非同期であるために、新しいナビゲーション; を開始する<xref:System.Windows.Navigation.NavigationService.Content%2A>直後に設定されていることを検査は場合、値は返されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSource As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CurrentSource { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSource : Uri" Usage="System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最後に移動した先のコンテンツの URI を取得します。</summary>
        <value>A<see cref="T:System.Uri" />が最後に、移動先 URI を使用して移動する場合は、コンテンツの<see langword="null" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値、<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>プロパティは、別の URI への移動が正常に完了するまでは変更されません。  
  
 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> URI のフラグメントのみを設定できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberSignature Language="F#" Value="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " Usage="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツ フラグメントへのナビゲーションが開始されると発生します。目的のフラグメントが現在のコンテンツにある場合は直ちに発生し、目的のフラグメントが別のコンテンツにある場合はソース [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] コンテンツが読み込まれた後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、コンテンツ フラグメントはコンテンツの名前に含まれる<xref:System.Windows.UIElement>、これは、<xref:System.Windows.UIElement>が<xref:System.Windows.FrameworkElement.Name%2A>属性設定すると、次のような。  
  
```  
<TextBlock Name="FragmentName">...</TextBlock>  
```  
  
 移動する、[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]フラグメントは、次の形式でのサフィックスを持つ URI を提供することで。  
  
 \#*FragmentName*  
  
 コンテンツ フラグメントを参照する URI の例を次に示します。  
  
 `http://www.microsoft.com/targetpage.xaml#FragmentName`  
  
 ソース ページが読み込まれた後 (後<xref:System.Windows.Navigation.NavigationService.LoadCompleted>イベントが発生します)、フラグメント ナビゲーションが開始し、<xref:System.Windows.Navigation.NavigationService>検索しようと、[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]フラグメント。 場合、[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]フラグメントが見つかると、<xref:System.Windows.Navigation.NavigationService>コンテンツ ナビゲーターを指示します (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>) フラグメントを表示します。 この動作を変更する必要がある場合を処理できます<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>独自のフラグメント ナビゲーションの動作を提供します。 <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> 渡される、<xref:System.Windows.Navigation.FragmentNavigationEventArgs>は、この目的のための便利なプロパティを公開するパラメーターを含みます。  
  
-   このナビゲーション サービスを所有するナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)。  
  
-   フラグメントの名前。  
  
 処理できる<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>独自のカスタム実装の既定の WPF フラグメント実装をオーバーライドします。 これを行う場合を設定する必要があります<xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A>に`true`。 それ以外の動作を処理する既定の WPF フラグメントが適用されます。  
  
 内からナビゲーションを直接開始を回避する必要があります、<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>イベント ハンドラー。 <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>から新しいナビゲーションを開始する、既存の移動中に発生しますが、<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>イベント ハンドラーが引き起こす可能性のある入れ子になったナビゲーションを作成、<xref:System.ExecutionEngineException>がスローされます。 代わりに、直接開始できましていないナビゲーション項目を使用して、非同期作業を作成して、<xref:System.Windows.Threading.Dispatcher>します。  
  
> [!NOTE]
>  ときに<xref:System.Windows.Navigation.NavigationService>を発生させます<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>も生成<xref:System.Windows.Application.FragmentNavigation?displayProperty=nameWithType>上のイベント、<xref:System.Windows.Application>オブジェクト。  
  
> [!IMPORTANT]
>  フラグメント ナビゲーションはサポートされていません疎[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ページ (マークアップのみ[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]を使用するファイル`Page`ルート要素として)、次の場合。  
>   
>  • Loose 内のフラグメントに移動すると[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ページ。  
>   
>  • Loose から移動するときに[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]緩やかな別のフラグメントにページ[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ページ。  
>   
>  ただし、loose[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ページは、独自のフラグメントにナビゲートできます。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>カスタム フラグメント ナビゲーションの動作を提供します。 この場合、エラーを開く例を示します[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]ページの場合、ソースのフラグメント[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]ページが見つかりません。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetNavigationService">
      <MemberSignature Language="C#" Value="public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Navigation.NavigationService GetNavigationService(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Navigation::NavigationService ^ GetNavigationService(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetNavigationService : System.Windows.DependencyObject -&gt; System.Windows.Navigation.NavigationService" Usage="System.Windows.Navigation.NavigationService.GetNavigationService dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">ナビゲーターによってホストされるコンテンツ内の <see cref="T:System.Windows.DependencyObject" />。</param>
        <summary>指定した <see cref="T:System.Windows.Navigation.NavigationService" /> がコンテンツに含まれているナビゲーターの <see cref="T:System.Windows.DependencyObject" /> への参照を取得します。</summary>
        <returns>指定した <see cref="T:System.Windows.DependencyObject" /> がコンテンツに含まれているナビゲーターの <see cref="T:System.Windows.Navigation.NavigationService" /> への参照。場合によっては <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ナビゲーターは、<xref:System.Windows.Navigation.NavigationService>コンテンツ ナビゲーションを処理します。 WPF が 2 つのナビゲーター:<xref:System.Windows.Navigation.NavigationWindow>と<xref:System.Windows.Controls.Frame>します。 ナビゲーターのナビゲーション要求を処理し、ナビゲーションの有効期間を管理、として実装されている WPF ナビゲーション サービスを使用して、<xref:System.Windows.Navigation.NavigationService>クラス。 ナビゲーターによってホストされている内容がナビゲーターへの参照を取得できます<xref:System.Windows.Navigation.NavigationService>呼び出すことによって、<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>メソッド。  
  
 <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> 返します`null`ときに、 `dependencyObject`:  
  
-   <xref:System.Windows.Navigation.NavigationWindow>します。  
  
-   <xref:System.Windows.Controls.Frame>です。  
  
    1.  別のナビゲーターによってホストされます。  
  
    2.  その<xref:System.Windows.Controls.Frame.JournalOwnership%2A>プロパティに設定<xref:System.Windows.Navigation.JournalOwnership.UsesParentJournal>します。  
  
-   ナビゲーターによってホストされているコンテンツの一部でないです。  
  
 WPF への参照を取得するための 2 つのショートカットを提供しています、 <xref:System.Windows.Navigation.NavigationService>:  
  
-   <xref:System.Windows.Navigation.NavigationService>へのナビゲーションを処理する、<xref:System.Windows.Controls.Page>からアクセスできる、<xref:System.Windows.Controls.Page>自体の値を取得することによってその<xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=nameWithType>プロパティ。  
  
-   <xref:System.Windows.Navigation.NavigationService>によって使用される、<xref:System.Windows.Controls.Frame>の値を取得することによってアクセスできるナビゲーションを処理する、<xref:System.Windows.Controls.Frame.NavigationService%2A>プロパティ。  
  
   
  
## Examples  
 次の例はどのように、<xref:System.Windows.Controls.UserControl>ナビゲーション サービスを呼び出すことによって取得できます<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>します。  
  
 [!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]
 [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode1)]  
[!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]
[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dependencyObject" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; unit" Usage="navigationService.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>"戻る" ナビゲーション履歴の最新のエントリに移動します (エントリが存在する場合)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出しの前に<xref:System.Windows.Navigation.NavigationService.GoBack%2A>、<xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>ナビゲーション履歴にエントリがあるかどうかを決定するプロパティを検査することができます。  
  
   
  
## Examples  
 次の例では、最新のエントリに移動戻るナビゲーション履歴に存在する場合。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowbackcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowbackcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">"戻る" ナビゲーション履歴にエントリがないときに <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> が呼び出されました。</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; unit" Usage="navigationService.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>"進む" ナビゲーション履歴の最新のエントリに移動します (エントリが存在する場合)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出しの前に<xref:System.Windows.Navigation.NavigationService.GoForward%2A>、 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> "進む"ナビゲーション履歴にエントリがあるかどうかを決定するプロパティを検査することができます。  
  
   
  
## Examples  
 次の例は、1 つが存在する場合に、"進む"ナビゲーション履歴では、最新のエントリに移動します。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowforwardcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">"進む" ナビゲーション履歴にエントリがないときに <see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> が呼び出されました。</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " Usage="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>移動先のコンテンツが読み込まれ、解析されて、描画が開始されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 処理する<xref:System.Windows.Navigation.NavigationService.LoadCompleted>読み込み完了時に、ナビゲーション要求に関する情報を確認する必要がある場合。 この情報は、<xref:System.Windows.Navigation.NavigationEventArgs>オブジェクトに渡される、<xref:System.Windows.Navigation.NavigationService.LoadCompleted>イベントのハンドラーが含まれています。  
  
-   コンテンツとその URI。  
  
-   ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)。  
  
-   追加のデータはいずれかを呼び出すことによって、ナビゲーションが開始された場合、<xref:System.Windows.Navigation.NavigationService.Navigate%2A>または<xref:System.Windows.Navigation.NavigationService.Navigate%2A>します。  
  
-   応答の詳細 (を使用して、<xref:System.Net.WebResponse>オブジェクト)。  
  
 <xref:System.Windows.Navigation.NavigationService.LoadCompleted> ときに、ソース ページが見つからないか、読み込まれると、その場合は発生しません<xref:System.Windows.Navigation.NavigationService.NavigationFailed>が発生します。  
  
> [!NOTE]
>  ときに<xref:System.Windows.Navigation.NavigationService>を発生させます<xref:System.Windows.Navigation.NavigationService.LoadCompleted>も生成<xref:System.Windows.Application.LoadCompleted?displayProperty=nameWithType>上のイベント、<xref:System.Windows.Application>オブジェクト。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.LoadCompleted>します。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowloadcompletedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたソース コンテンツに非同期に移動します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj -&gt; bool" Usage="navigationService.Navigate root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">移動先のコンテンツを格納しているオブジェクト。</param>
        <summary>オブジェクトに格納されているコンテンツに非同期に移動します。</summary>
        <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> 移動しますが、<xref:System.Object>で指定された`root`次の条件に該当する場合。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>イベントがキャンセルされません。  
  
-   Web 要求 (を参照してください<xref:System.Windows.Navigation.NavigationService.Navigating>) を作成できます。  
  
 場合`root`は`null`、既存のコンテンツ (<xref:System.Windows.Navigation.NavigationService.Content%2A>) がオフになっています。  
  
> [!NOTE]
>  Web コンテンツをダウンロードするときに Web 例外が発生する可能性があります (たとえば、404: ファイルが見つかりません)。 このような例外を処理できる<xref:System.Windows.Navigation.NavigationService.NavigationFailed>します。  
  
   
  
## Examples  
 次の例に移動する方法を示しています、<xref:System.Windows.Controls.Page>ソース コンテンツのツリーを含むオブジェクト。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigateobjectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; bool" Usage="navigationService.Navigate source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">目的のコンテンツの URI で初期化された <see cref="T:System.Uri" /> オブジェクト。</param>
        <summary>URI で指定されたコンテンツに非同期に移動します。</summary>
        <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値`source`Web は、[!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)]または有効なパック URI (を参照してください[WPF におけるパック Uri](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md))。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> 指定された URI に移動します`source`次の条件に該当する場合。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>イベントがキャンセルされません。  
  
-   Web 要求 (を参照してください<xref:System.Windows.Navigation.NavigationService.Navigating>) を作成できます。  
  
 場合`source`は`null`、既存のコンテンツ (<xref:System.Windows.Navigation.NavigationService.Content%2A>) がオフになっています。  
  
> [!NOTE]
>  Web コンテンツをダウンロードするときに Web 例外が発生する可能性があります (たとえば、404: ファイルが見つかりません)。 このような例外を処理できる<xref:System.Windows.Navigation.NavigationService.NavigationFailed>します。  
  
 使用することができます<xref:System.Windows.Navigation.NavigationService.Navigate%2A>コンテンツ フラグメントに移動します。 URI で識別されるコンテンツが現在のコンテンツの場合は、これは再ダウンロードされません。  
  
   
  
## Examples  
 次の例では、URI に移動する方法を示します。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatecode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj * obj -&gt; bool" Usage="navigationService.Navigate (root, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">移動先のコンテンツを格納しているオブジェクト。</param>
        <param name="navigationState">ナビゲーション中の処理に使用するデータを格納しているオブジェクト。</param>
        <summary>オブジェクトに格納されているコンテンツに非同期に移動して、ナビゲーション中の処理に使用するデータを格納しているオブジェクトを渡します。</summary>
        <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドと同じ動作には<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>URI ではなくオブジェクトが渡されます。  
  
   
  
## Examples  
 次の例に移動する方法を示しています、<xref:System.Windows.Controls.Page>オブジェクトのソース コンテンツを格納していると、ナビゲーションの状態を渡します。  
  
 [!code-csharp[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj -&gt; bool" Usage="navigationService.Navigate (source, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">目的のコンテンツの URI で初期化された <see cref="T:System.Uri" /> オブジェクト。</param>
        <param name="navigationState">ナビゲーション中の処理に使用するデータを格納しているオブジェクト。</param>
        <summary>URI にあるソース コンテンツに非同期に移動して、ナビゲーション中の処理に使用するデータを格納しているオブジェクトを渡します。</summary>
        <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ナビゲーションは非同期であるために、複数のナビゲーションと同時に実行中である可能性があります。 たとえば、1 ページに 2 つの子フレームがある場合は、両方のフレームを移動でした。 この場合は、さまざまなナビゲーション イベントによって発生する<xref:System.Windows.Navigation.NavigationService>複数回、移動、コンテンツの各部分の 1 つ発生しては限りません、ナビゲーションが要求された順序で可能性があります。 その結果、特定のナビゲーション要求を個々 の要求に固有のデータを処理する場合は、すべてのナビゲーション要求に使用可能なデータは使用できません。 使用する代わりに、`navigationState`ナビゲーションの処理は 1 つのナビゲーション要求に固有のデータを渡す。  
  
 次のイベント引数は、ナビゲーションの状態へのアクセスを提供します。  
  
-   <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A> (に渡される、<xref:System.Windows.Navigation.NavigationService.Navigating>イベント)。  
  
-   <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A> (に渡される、 <xref:System.Windows.Navigation.NavigationService.Navigated>、 <xref:System.Windows.Navigation.NavigationService.NavigationStopped>、<xref:System.Windows.Navigation.NavigationService.LoadCompleted>イベント ハンドラー)。  
  
   
  
## Examples  
 次の例では、URI に移動し、ナビゲーションの状態を渡すことを示します。  
  
 [!code-csharp[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState, bool sandboxExternalContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object, sandboxExternalContent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj * bool -&gt; bool" Usage="navigationService.Navigate (source, navigationState, sandboxExternalContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
        <Parameter Name="sandboxExternalContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">目的のコンテンツの URI で初期化された <see cref="T:System.Uri" /> オブジェクト。</param>
        <param name="navigationState">ナビゲーション中の処理に使用するデータを格納しているオブジェクト。</param>
        <param name="sandboxExternalContent">コンテンツを (既定のインターネット ゾーン アクセス許可が設定された) 部分信頼セキュリティ サンドボックスにダウンロードする場合は <see langword="true" />。 既定値は、<see langword="false" /> です。</param>
        <summary>URI にあるソース コンテンツに非同期に移動して、ナビゲーション中の処理に使用するナビゲーションの状態を格納しているオブジェクトを渡し、コンテンツをサンドボックスに配置します。</summary>
        <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この方法は、スタンドアロン アプリケーションにのみ、[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]コンテンツ。  
  
 このメソッドと同じ動作を示す<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>、部分信頼セキュリティ サンド ボックスにダウンロードされるコンテンツが配置されるようにすることで拡張されています (既定のインターネット ゾーン アクセス許可 - がセットを参照してください[WPF 部分信頼。セキュリティ](~/docs/framework/wpf/wpf-partial-trust-security.md))。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " Usage="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>移動先のコンテンツが見つかったときに発生します。この時点で <see cref="P:System.Windows.Navigation.NavigationService.Content" /> プロパティからコンテンツを取得できますが、読み込みはまだ完了していない可能性があります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 処理する<xref:System.Windows.Navigation.NavigationService.Navigated>ダウンロードの開始時に、ナビゲーション要求に関する情報を確認する必要がある場合。 この情報は、<xref:System.Windows.Navigation.NavigationEventArgs>オブジェクトに渡される、<xref:System.Windows.Navigation.NavigationService.Navigated>イベントのハンドラーが含まれています。  
  
-   ソース ページです。 ときに<xref:System.Windows.Navigation.NavigationService.Navigated>が発生すると、少なくとも一部のソース ページの[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]ツリーを解析し、対象のコンテンツ コントロールにアタッチします。  
  
-   要求された URI。  
  
-   ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)。  
  
-   追加のデータはいずれかを呼び出すことによって、ナビゲーションが開始された場合、<xref:System.Windows.Navigation.NavigationService.Navigate%2A>または<xref:System.Windows.Navigation.NavigationService.Navigate%2A>します。  
  
-   応答の詳細 (を使用して、<xref:System.Net.WebResponse>オブジェクト)。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigated> ときに、ソース ページが見つからないか、読み込まれると、その場合は発生しません<xref:System.Windows.Navigation.NavigationService.NavigationFailed>が発生します。  
  
> [!NOTE]
>  ときに<xref:System.Windows.Navigation.NavigationService>を発生させます<xref:System.Windows.Navigation.NavigationService.NavigationFailed>も生成<xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>上のイベント、<xref:System.Windows.Application>オブジェクト。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.Navigated>します。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " Usage="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいナビゲーションが要求されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigating> 新しいナビゲーションが要求されるを含め、コンテンツが要求されたソースの前に発生します。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%2A> が呼ばれたとき。  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A> または<xref:System.Windows.Navigation.NavigationService.GoForward%2A>と呼びます (またはナビゲーションのエントリが選択されている[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)])。  
  
-   コンテンツ フラグメントにナビゲートするとします。  
  
 処理する<xref:System.Windows.Navigation.NavigationService.Navigating>ナビゲーションが開始する前に、ナビゲーション要求に関する情報を確認する必要がある場合。 この情報は、<xref:System.Windows.Navigation.NavigatingCancelEventArgs>オブジェクトに渡される、<xref:System.Windows.Navigation.NavigationService.Navigating>イベント ハンドラー。  
  
 A<xref:System.Net.WebRequest>オブジェクトのナビゲーションが作成されから使用可能な<xref:System.Windows.Navigation.NavigatingCancelEventArgs>パラメーターの場合、実際の要求は、この時点で作成されていない、ためにを再構成できます、<xref:System.Net.WebRequest>オブジェクト、必要な場合。  
  
 処理することも<xref:System.Windows.Navigation.NavigatingCancelEventArgs>設定で、必要な場合、ナビゲーションをキャンセルする<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>を true にします。 ナビゲーションをキャンセルすると、その他のナビゲーション イベントは発生しません。  
  
> [!NOTE]
>  場合は、アプリケーションは、ブラウザーでホストされている、キャンセルすることで、アプリケーションから移動からユーザーを防ぐことはできません、<xref:System.Windows.Navigation.NavigationService.Navigating>イベント。  
  
 コンテンツの最初の部分は、ナビゲーターして移動した後 (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)、各コンテンツから移動するがナビゲーション履歴に追加されます。 移動するコンテンツに関する状態情報を保存する必要がある場合にコンテンツを対応する履歴項目の状態を追加を設定して<xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A>で、<xref:System.Windows.Navigation.CustomContentState>オブジェクト。  
  
> [!NOTE]
>  ときに<xref:System.Windows.Navigation.NavigationService>を発生させます<xref:System.Windows.Navigation.NavigationService.Navigating>も生成<xref:System.Windows.Application.Navigating?displayProperty=nameWithType>上のイベント、<xref:System.Windows.Application>オブジェクト。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.Navigating>場合は、要求をキャンセルすると静的コンテンツを更新する要求が行われたかどうかを検出します。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigating>。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationFailed As NavigationFailedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberSignature Language="F#" Value="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " Usage="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求されたコンテンツへの移動中にエラーが発生すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときにいずれかを<xref:System.Net.WebException>または<xref:System.IO.IOException>、ナビゲーション中にスローされる、<xref:System.Windows.Navigation.NavigationService.NavigationFailed>イベントが発生します。 <xref:System.Windows.Navigation.NavigationService.NavigationFailed> 渡される、<xref:System.Windows.Navigation.NavigationFailedEventArgs>例外と例外の原因となったナビゲーションの詳細の両方に関する情報をカプセル化します。  
  
 例外がナビゲーションが失敗した結果が処理されないときは、表示された順に次のイベントが発生します。  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>。  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=nameWithType> または <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=nameWithType>。  
  
-   <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>。  
  
-   <xref:System.Windows.Application.DispatcherUnhandledException>。  
  
 場合、ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>) が 1 つ以上のナビゲーターによってホストされている`NavigationFailed`これらのいずれかでは発生しません。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.NavigationFailed>します。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationfailedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberSignature Language="F#" Value="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " Usage="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ナビゲーション進行状況の情報提供を目的として、ダウンロード中に定期的に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> 渡される、<xref:System.Windows.Navigation.NavigationProgressEventArgs>次の進行状況に関する情報を表示します。  
  
-   これまでにダウンロードされたバイト数 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>)。  
  
-   ダウンロードの合計バイト数 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>)。  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> コンテンツの 1024 バイトはごとにダウンロードされたらをもう一度の残りのバイト数が 1024 バイトをこれまでより小さい場合が発生します。 このため、処理<xref:System.Windows.Navigation.NavigationService.NavigationProgress>追跡および現在のダウンロードの進行状況を表示する便利な方法を提供します。  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> コンテンツ フラグメントが現在読み込まれているコンテンツにナビゲートされるときに、コンテンツの同じ部分を移動する場合など、場合によっては発生しません (つまりの値、<xref:System.Windows.Navigation.NavigationService.Content%2A>プロパティ)。  
  
 コンパイルされた XAML リソース、最後に移動すると<xref:System.Windows.Navigation.NavigationService.NavigationProgress>イベントを発生しない可能性があります。 これには、ダウンロードの末尾には、最後に報告していることを意味<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>値が等しくない場合があります、<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>値。 処理、<xref:System.Windows.Navigation.NavigationService.LoadCompleted>ナビゲーションが完了したときに通知するイベントです。  
  
> [!NOTE]
>  ときに<xref:System.Windows.Navigation.NavigationService>を発生させます<xref:System.Windows.Navigation.NavigationService.NavigationProgress>も生成<xref:System.Windows.Application.NavigationProgress?displayProperty=nameWithType>上のイベント、<xref:System.Windows.Application>オブジェクト。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.NavigationProgress>します。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationprogresscode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberSignature Language="F#" Value="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " Usage="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> メソッドが呼び出されたときや、現在のナビゲーションの進行中に新しいナビゲーションが要求されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 処理する<xref:System.Windows.Navigation.NavigationService.NavigationStopped>かどうかは、ダウンロードが停止したときに、ナビゲーション要求に関する情報を探索する必要があります。 この情報は、<xref:System.Windows.Navigation.NavigationEventArgs>オブジェクトに渡される、<xref:System.Windows.Navigation.NavigationService.NavigationStopped>イベントのハンドラーが含まれています。  
  
-   要求された URI。  
  
-   ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)。  
  
-   追加のデータはいずれかを呼び出すことによって、ナビゲーションが開始された場合、<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>または<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>します。  
  
> [!NOTE]
>  ときに<xref:System.Windows.Navigation.NavigationService>を発生させます<xref:System.Windows.Navigation.NavigationService.NavigationStopped>も生成<xref:System.Windows.Application.NavigationStopped?displayProperty=nameWithType>上のイベント、<xref:System.Windows.Application>オブジェクト。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.NavigationStopped>します。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="navigationService.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のコンテンツを再度読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、現在のコンテンツ (の値で指定された、<xref:System.Windows.Navigation.NavigationService.Source%2A>プロパティ)、もう一度への移動が<xref:System.Windows.Navigation.NavigationService>コンテンツが再度ダウンロードしません。 強制的に<xref:System.Windows.Navigation.NavigationService>再コンテンツに移動するには、呼び出す<xref:System.Windows.Navigation.NavigationService.Refresh%2A>します。  
  
 注意してください。 現在のコンテンツにナビゲートすると、もう一度呼び出すことであるかどうか<xref:System.Windows.Navigation.NavigationService.Navigate%2A>または<xref:System.Windows.Navigation.NavigationService.Refresh%2A>、ナビゲーション履歴に新しいエントリが追加されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBackEntry () As JournalEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Navigation::JournalEntry ^ RemoveBackEntry();" />
      <MemberSignature Language="F#" Value="member this.RemoveBackEntry : unit -&gt; System.Windows.Navigation.JournalEntry" Usage="navigationService.RemoveBackEntry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>"戻る" 履歴から最新の履歴項目を削除します。</summary>
        <returns>"戻る" ナビゲーション履歴の最新の <see cref="T:System.Windows.Navigation.JournalEntry" /> (存在する場合)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合 2 つ以上のナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>) 同じナビゲーション履歴を共有する、1 つのナビゲーターが使用できる<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>を別のナビゲーターで行われたナビゲーションの戻るナビゲーション履歴エントリを取得します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Navigation.NavigationService.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のコンテンツの URI (移動中の場合は移動先の新しいコンテンツの URI) を取得または設定します。</summary>
        <value>A<see cref="T:System.Uri" />現在のコンテンツまたは現在移動先のコンテンツの URI を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在表示されている 1 つのナビゲーターより別の URI にこのプロパティを設定する場合 (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)、指定された URI に移動します。  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> ナビゲーションがキャンセルされた場合を除き、ナビゲートされた URI から読み込まれたコンテンツに設定されます。  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> 、URI のフラグメントのみを設定して、に設定することができます`null`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.StopLoading" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLoading ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLoading();" />
      <MemberSignature Language="F#" Value="member this.StopLoading : unit -&gt; unit" Usage="navigationService.StopLoading " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のナビゲーション要求に対応するコンテンツのダウンロードを中止します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> 呼び出すことができるようになります<xref:System.Windows.Navigation.NavigationService.Navigate%2A>から制御が戻るし、子フレームの進行中のナビゲーションを停止します。  
  
 (<xref:System.Windows.Controls.Frame>).  
  
 呼び出す、<xref:System.Windows.Navigation.NavigationService.StopLoading%2A>メソッド発生させ、<xref:System.Windows.Navigation.NavigationService.NavigationStopped>イベント。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> ナビゲーションを開始したのと同じスレッドで呼び出す必要があります。  
  
   
  
## Examples  
 次の例では、読み込みを停止する方法を示します。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowstoploadingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
  </Members>
</Type>