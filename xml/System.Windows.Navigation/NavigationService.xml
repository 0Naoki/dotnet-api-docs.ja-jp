<Type Name="NavigationService" FullName="System.Windows.Navigation.NavigationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4d64e95223ead25be6eb0a447e2f5dd78e82b25" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36465084" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NavigationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NavigationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NavigationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationService sealed" />
  <TypeSignature Language="F#" Value="type NavigationService = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contains methods, properties, and events to support navigation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService> ブラウザー スタイルのナビゲーションのコンテキスト内でコンテンツをダウンロードする機能をカプセル化します。  
  
 コンテンツを .NET Framework オブジェクトおよび HTML ファイルの任意の型とできます。 一般は、ページがナビゲーションのパッケージ コンテンツにする方法として推奨される (を参照してください<xref:System.Windows.Controls.Page>)。  
  
 オブジェクトのインスタンスを提供することのオーバー ロードを呼び出すことによりにコンテンツを移動する、<xref:System.Windows.Navigation.NavigationService.Navigate%2A>メソッド、オブジェクトを受け取る。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>  
  
 代わりに、コンテンツに移動するのいずれかに相対パスまたは絶対 URI を渡すことによって、 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> URI を受け入れるメソッドのオーバー ロードします。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=nameWithType>  
  
 コンテンツを移動する、URI で<xref:System.Windows.Navigation.NavigationService>コンテンツを含むオブジェクトを返します。  
  
 ナビゲーションの有効期間は、次のイベントを追跡できます。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigated>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationProgress>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationStopped>  
  
-   <xref:System.Windows.Navigation.NavigationService.LoadCompleted>  
  
-   <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>。  
  
 すべてのイベントはたびに発生する、ナビゲーションが発生します。(キャンセル、停止、または失敗) は、発生するイベントのセットをナビゲーション (コンテンツまたはコンテンツ フラグメント) に発生して、ナビゲーションの完了方法の種類によって決まります。  
  
 次の図は、これらのイベントが発生するシーケンスを示しています。  
  
 ![ページ ナビゲーションのフロー チャート](~/add/media/navigationoverviewfigure11.png "ページ ナビゲーションのフロー チャート")  
  
 中またはその後、ナビゲーション<xref:System.Windows.Navigation.NavigationService>移動先のコンテンツの URI を含むに移動されているコンテンツに関する情報を提供 (<xref:System.Windows.Navigation.NavigationService.Source%2A>)、現在のコンテンツの URI (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>)、およびオブジェクトが含まれていますが、移動先のコンテンツ (<xref:System.Windows.Navigation.NavigationService.Content%2A>)。  
  
 コンテンツの移動、<xref:System.Windows.Navigation.NavigationService>ナビゲーション履歴にエントリとしてナビゲーションを記録します。 ナビゲーション履歴のバックアップを作成して呼び出すことによって、どちらか、新しいナビゲーションが発生したときに、エントリが追加、<xref:System.Windows.Navigation.NavigationService.Navigate%2A>メソッドを呼び出すことによって、"進む"ナビゲーション履歴内のエントリに移動して<xref:System.Windows.Navigation.NavigationService.GoForward%2A>です。 呼び出してナビゲーション履歴に戻るのエントリに移動して"進む"ナビゲーション履歴にエントリが追加された<xref:System.Windows.Navigation.NavigationService.GoBack%2A>です。 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> および<xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>があるか前に、"進む"ナビゲーション履歴の場合は、それぞれを報告します。 また、最新のエントリに戻るナビゲーション履歴を呼び出すことによって削除されることができます<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>です。  
  
 既定では、<xref:System.Windows.Navigation.NavigationService>ナビゲーション履歴には、コンテンツ オブジェクトのインスタンスは格納されません。 代わりに、<xref:System.Windows.Navigation.NavigationService>ナビゲーション履歴を使用して、移動するたびに、コンテンツ オブジェクトの新しいインスタンスを作成します。 この動作は数値が大きいとコンテンツの大きなデータは移動先ときに、過度なメモリ消費を避けるために設計されています。 その結果、次に、コンテンツの状態は 1 つのナビゲーションからに記憶されません。 ただし、WPF には、ナビゲーション履歴にコンテンツの状態の一部を格納する、いくつかの方法が用意されています。  
  
 使用して<xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>、単一のページ インスタンスの状態の複数のセットも覚えておいてください。  
  
 <xref:System.Windows.Navigation.NavigationService> `sealed`クラスし、そのためインスタンス化できません。 代わりに、<xref:System.Windows.Navigation.NavigationService>ナビゲーターでナビゲーションを有効にするために使用します。 Wpf では、2 つのナビゲーター:<xref:System.Windows.Navigation.NavigationWindow>と<xref:System.Windows.Controls.Frame>です。  
  
 視覚的に、[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]使用[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]として、統合されたユーザー エクスペリエンスを提供するためのナビゲーター。 物理的に、ただし、[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]を実際に使用<xref:System.Windows.Navigation.NavigationWindow>ナビゲーター; として、<xref:System.Windows.Application.MainWindow%2A>のプロパティ、[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]で実行されている[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]への参照を返す、<xref:System.Windows.Navigation.NavigationWindow>とで管理されているナビゲーション履歴、<xref:System.Windows.Navigation.NavigationWindow>で管理されているナビゲーション履歴に統合されて[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]次のようにします。  
  
-   ときにコンテンツへの移動が呼び出すことによって<xref:System.Windows.Navigation.NavigationService.Navigate%2A>、 <xref:System.Windows.Navigation.NavigationService.GoBack%2A>、および<xref:System.Windows.Navigation.NavigationService.GoForward%2A>内から、[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]関連ナビゲーション履歴エントリにも追加[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]ナビゲーション履歴。  
  
-   ときのエントリ、[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]ナビゲーション[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]が選択されている[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]により<xref:System.Windows.Navigation.NavigationService>バックアップまたは転送をこれらのエントリに関連付けられているコンテンツに移動します。  
  
> [!NOTE]
>  A<xref:System.Windows.Controls.Frame>独自ナビゲーション履歴を提供したり、そのホストであるナビゲーターのナビゲーション履歴を使用します。 場合<xref:System.Windows.Controls.Frame>独自ナビゲーション履歴には、表示できるように、独自のナビゲーション[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]ナビゲーション履歴にエントリを移動するホスト ナビゲーターのナビゲーション履歴にこれらのエントリは追加されません (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>、 [!INCLUDE[TLA2#tla_iegeneric](~/includes/tla2sharptla-iegeneric-md.md)]) と、その結果のナビゲーションに移動することはできません[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]各 (を参照してください<xref:System.Windows.Controls.Frame.JournalOwnership%2A>)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBackEntry (state As CustomContentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBackEntry(System::Windows::Navigation::CustomContentState ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddBackEntry : System.Windows.Navigation.CustomContentState -&gt; unit" Usage="navigationService.AddBackEntry state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState" /> object that represents application-defined state that is associated with a specific piece of content.</param>
        <summary>Adds an entry to back navigation history that contains a <see cref="T:System.Windows.Navigation.CustomContentState" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>、 <xref:System.Windows.Navigation.CustomContentState>、および<xref:System.Windows.Navigation.IProvideCustomContentState>、現在のコンテンツの状態のセットを複数記憶のために使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="state" /> is <see langword="null" />, and a <see cref="T:System.Windows.Navigation.CustomContentState" /> object isn't returned from <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />.</exception>
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether there is at least one entry in back navigation history.</summary>
        <value>
          <see langword="true" /> 戻るナビゲーション履歴に少なくとも 1 つのエントリがある場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> ナビゲーション履歴には、少なくとも 1 つのエントリがあるかどうかを確認します。 このプロパティを呼び出す前に検査する必要があります<xref:System.Windows.Navigation.NavigationService.GoBack%2A>以外の場合は<xref:System.Windows.Navigation.NavigationService.GoBack%2A>が呼び出された"戻る"ナビゲーション履歴にエントリがないと、<xref:System.InvalidOperationException>がスローされます。  
  
> [!NOTE]
>  ナビゲーション履歴が複数のナビゲーターで共有される場合 (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)、最も最近エントリ背面にナビゲーション履歴が追加されていないによって、<xref:System.Windows.Navigation.NavigationService>の現在のナビゲーター。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether there is at least one entry in forward navigation history.</summary>
        <value>
          <see langword="true" /> 次に進むナビゲーション履歴に少なくとも 1 つのエントリがある場合それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> 次に進むナビゲーション履歴に少なくとも 1 つのエントリがあるかどうかを確認します。 このプロパティを呼び出す前に検査する必要があります<xref:System.Windows.Navigation.NavigationService.GoForward%2A>以外の場合は<xref:System.Windows.Navigation.NavigationService.GoForward%2A>が呼び出された"進む"ナビゲーション履歴にエントリがないと、<xref:System.InvalidOperationException>がスローされます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Navigation.NavigationService.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a reference to the object that contains the current content.</summary>
        <value>現在のコンテンツを含むオブジェクトへの参照であるオブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンテンツは、2 つの方法で設定できます。  
  
-   オブジェクトへの参照を設定します。  
  
-   呼び出すことによって、直接<xref:System.Windows.Navigation.NavigationService.Navigate%2A>、 <xref:System.Windows.Navigation.NavigationService.GoBack%2A>、または<xref:System.Windows.Navigation.NavigationService.GoForward%2A>です。  
  
 設定<xref:System.Windows.Navigation.NavigationService>ナビゲーションは、非同期なので、新しいナビゲーション; を開始する<xref:System.Windows.Navigation.NavigationService.Content%2A>直後に設定されていることを検査は場合、値は返されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSource As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CurrentSource { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSource : Uri" Usage="System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the URI of the content that was last navigated to.</summary>
        <value>A<see cref="T:System.Uri" />最後に移動した、URI を使用して、移動、それ以外の場合、コンテンツの<see langword="null" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値、<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>プロパティは、別の URI への移動が正常に完了するまでは変更されません。  
  
 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> フラグメント専用の URI で設定できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberSignature Language="F#" Value="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " Usage="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] content has been loaded, if the desired fragment is in different content.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、コンテンツ フラグメントは、コンテンツに含まれている名前付き<xref:System.Windows.UIElement>、これは、<xref:System.Windows.UIElement>が<xref:System.Windows.FrameworkElement.Name%2A>属性が設定されて例。  
  
```  
<TextBlock Name="FragmentName">...</TextBlock>  
```  
  
 移動する、[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]次の形式でサフィックスに URI を提供するフラグメント。  
  
 \#*FragmentName*  
  
 コンテンツ フラグメントを参照する URI の例を次に示します。  
  
 `http://www.microsoft.com/targetpage.xaml#FragmentName`  
  
 ソース ページが読み込まれると (後<xref:System.Windows.Navigation.NavigationService.LoadCompleted>イベントが発生した)、フラグメント ナビゲーションが開始され、<xref:System.Windows.Navigation.NavigationService>特定しようと、[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]フラグメント。 場合、[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]フラグメントが見つかると、<xref:System.Windows.Navigation.NavigationService>コンテンツ ナビゲーターに指示 (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>) フラグメントを表示します。 この動作を変更する必要がある場合を処理できます<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>独自フラグメント ナビゲーション動作を提供します。 <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> 渡される、<xref:System.Windows.Navigation.FragmentNavigationEventArgs>は、この目的のための便利なプロパティを公開するパラメーターを含みます。  
  
-   このナビゲーション サービスを所有しているナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)。  
  
-   フラグメントの名前です。  
  
 処理できる<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>独自のカスタム実装を含む既定の WPF フラグメント実装をオーバーライドします。 設定する必要がある場合はこれを行うと、<xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A>に`true`、それ以外の既定の WPF フラグメントを処理動作を適用します。  
  
 内からナビゲーションを直接開始を避ける必要があります、<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>イベント ハンドラー。 <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>から新しいナビゲーションを開始する、既存の移動中に発生した、<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>イベント ハンドラーを引き起こす可能性のある入れ子になったナビゲーションを作成、<xref:System.ExecutionEngineException>がスローされます。 代わりに、直接開始できましていないナビゲーション項目を使用して、非同期操作を作成することで、<xref:System.Windows.Threading.Dispatcher>です。  
  
> [!NOTE]
>  ときに<xref:System.Windows.Navigation.NavigationService>を発生させます<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>もを発生させます<xref:System.Windows.Application.FragmentNavigation?displayProperty=nameWithType>でイベントを<xref:System.Windows.Application>オブジェクト。  
  
> [!IMPORTANT]
>  フラグメント ナビゲーションはサポートされていません疎[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ページ (マークアップのみ[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ファイルが`Page`ルート要素として) 次の場合。  
>   
>  •、緩やかにフラグメントに移動するとき[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ページ。  
>   
>  •、Loose から移動する際に[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]厳密でない別のフラグメントにページ[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ページ。  
>   
>  ただし、loose[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]ページは、独自のフラグメントに移動できます。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>カスタム フラグメント ナビゲーション動作を提供します。 ここでは、エラーの表示例では、 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]  ページで、ソースでフラグメント[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]ページが見つかりません。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetNavigationService">
      <MemberSignature Language="C#" Value="public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Navigation.NavigationService GetNavigationService(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Navigation::NavigationService ^ GetNavigationService(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetNavigationService : System.Windows.DependencyObject -&gt; System.Windows.Navigation.NavigationService" Usage="System.Windows.Navigation.NavigationService.GetNavigationService dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> in content that is hosted by a navigator.</param>
        <summary>Gets a reference to the <see cref="T:System.Windows.Navigation.NavigationService" /> for the navigator whose content contains the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>A reference to the <see cref="T:System.Windows.Navigation.NavigationService" /> for the navigator whose content contains the specified <see cref="T:System.Windows.DependencyObject" />; can be <see langword="null" /> in some cases.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ナビゲーターは、<xref:System.Windows.Navigation.NavigationService>コンテンツ ナビゲーションを処理します。 WPF が 2 つのナビゲーター:<xref:System.Windows.Navigation.NavigationWindow>と<xref:System.Windows.Controls.Frame>です。 ナビゲーション要求を処理し、ナビゲーションの有効期間を管理、ナビゲーターとして実装されている WPF ナビゲーション サービスを使用して、<xref:System.Windows.Navigation.NavigationService>クラスです。 ナビゲーターによってホストされているコンテンツがナビゲーターへの参照を取得できます<xref:System.Windows.Navigation.NavigationService>を呼び出して、<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>メソッドです。  
  
 <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> 返します`null`ときに、 `dependencyObject`:  
  
-   <xref:System.Windows.Navigation.NavigationWindow>です。  
  
-   <xref:System.Windows.Controls.Frame>です。  
  
    1.  別のナビゲーターによってホストされます。  
  
    2.  その<xref:System.Windows.Controls.Frame.JournalOwnership%2A>プロパティに設定<xref:System.Windows.Navigation.JournalOwnership.UsesParentJournal>です。  
  
-   ナビゲーターによってホストされているコンテンツの一部ではありません。  
  
 WPF への参照を取得するための 2 つのショートカットを提供しています、 <xref:System.Windows.Navigation.NavigationService>:  
  
-   <xref:System.Windows.Navigation.NavigationService>へのナビゲーションを処理する、<xref:System.Windows.Controls.Page>からアクセスできる、<xref:System.Windows.Controls.Page>自体の値を取得することによってその<xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=nameWithType>プロパティです。  
  
-   <xref:System.Windows.Navigation.NavigationService>によって使用される、<xref:System.Windows.Controls.Frame>ナビゲーションを処理するの値を取得することによってアクセスできる、<xref:System.Windows.Controls.Frame.NavigationService%2A>プロパティです。  
  
   
  
## Examples  
 例を次にどのように、<xref:System.Windows.Controls.UserControl>ナビゲーション サービスを呼び出すことによって取得できます<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>です。  
  
 [!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]
 [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode1)]  
[!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]
[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="dependencyObject" /> parameter is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; unit" Usage="navigationService.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navigates to the most recent entry in back navigation history, if there is one.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出しの前に<xref:System.Windows.Navigation.NavigationService.GoBack%2A>、<xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>ナビゲーション履歴にエントリがあるかどうかを決定するプロパティを検査することができます。  
  
   
  
## Examples  
 次の例、最新のエントリに移動背面にナビゲーション履歴に存在する場合。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowbackcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowbackcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> is called when there are no entries in back navigation history.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; unit" Usage="navigationService.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navigate to the most recent entry in forward navigation history, if there is one.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出しの前に<xref:System.Windows.Navigation.NavigationService.GoForward%2A>、 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> "進む"ナビゲーション履歴にエントリがあるかどうかを決定するプロパティを検査することができます。  
  
   
  
## Examples  
 次の例は、1 つが存在する場合に進むナビゲーション履歴の最新のエントリに移動します。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowforwardcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> is called when there are no entries in forward navigation history.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " Usage="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 処理する<xref:System.Windows.Navigation.NavigationService.LoadCompleted>読み込み完了したときに、ナビゲーション要求に関する情報を確認する必要がある場合。 この情報は、<xref:System.Windows.Navigation.NavigationEventArgs>に渡されるオブジェクト、 <xref:System.Windows.Navigation.NavigationService.LoadCompleted> 、イベント ハンドラーが含まれています。  
  
-   コンテンツとその URI。  
  
-   ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)。  
  
-   追加のデータは、ナビゲーションがいずれかを呼び出すことによって開始された場合、<xref:System.Windows.Navigation.NavigationService.Navigate%2A>または<xref:System.Windows.Navigation.NavigationService.Navigate%2A>です。  
  
-   応答の詳細 (を使用して、<xref:System.Net.WebResponse>オブジェクト)。  
  
 <xref:System.Windows.Navigation.NavigationService.LoadCompleted> ときに、元のページが見つからないか、読み込まれている場合は発生しません<xref:System.Windows.Navigation.NavigationService.NavigationFailed>が発生します。  
  
> [!NOTE]
>  ときに<xref:System.Windows.Navigation.NavigationService>を発生させます<xref:System.Windows.Navigation.NavigationService.LoadCompleted>もを発生させます<xref:System.Windows.Application.LoadCompleted?displayProperty=nameWithType>でイベントを<xref:System.Windows.Application>オブジェクト。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.LoadCompleted>です。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowloadcompletedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Navigate asynchronously to the specified source content.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj -&gt; bool" Usage="navigationService.Navigate root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">An object that contains the content to navigate to.</param>
        <summary>Navigate asynchronously to content that is contained by an object.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> 移動、<xref:System.Object>によって指定された`root`次の条件に該当する場合。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>イベントは取り消されません。  
  
-   Web 要求 (を参照してください<xref:System.Windows.Navigation.NavigationService.Navigating>) を作成できます。  
  
 場合`root`は`null`、既存のコンテンツ (<xref:System.Windows.Navigation.NavigationService.Content%2A>) がオフになっています。  
  
> [!NOTE]
>  Web コンテンツをダウンロードするときに、Web の例外が表示される可能性があります (たとえば、404: ファイルが見つかりません)。 このような例外を処理できる<xref:System.Windows.Navigation.NavigationService.NavigationFailed>です。  
  
   
  
## Examples  
 次の例に移動する方法を示しています、<xref:System.Windows.Controls.Page>ソースのコンテンツ ツリーを含むオブジェクト。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigateobjectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; bool" Usage="navigationService.Navigate source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
        <summary>Navigate asynchronously to content that is specified by a URI.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値`source`Web を指定できます[!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)]または有効な uri (を参照してください[WPF のパック Uri](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md))。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> 指定された URI に移動されます`source`次の条件に該当する場合。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>イベントは取り消されません。  
  
-   Web 要求 (を参照してください<xref:System.Windows.Navigation.NavigationService.Navigating>) を作成できます。  
  
 場合`source`は`null`、既存のコンテンツ (<xref:System.Windows.Navigation.NavigationService.Content%2A>) がオフになっています。  
  
> [!NOTE]
>  Web コンテンツをダウンロードするときに、Web の例外が表示される可能性があります (たとえば、404: ファイルが見つかりません)。 このような例外を処理できる<xref:System.Windows.Navigation.NavigationService.NavigationFailed>です。  
  
 使用することができます<xref:System.Windows.Navigation.NavigationService.Navigate%2A>コンテンツ フラグメントに移動します。 URI で識別されるコンテンツが現在のコンテンツの場合は、これは再ダウンロードされません。  
  
   
  
## Examples  
 次の例では、URI に移動する方法を示します。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatecode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj * obj -&gt; bool" Usage="navigationService.Navigate (root, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">An object that contains the content to navigate to.</param>
        <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
        <summary>Navigate asynchronously to content that is contained by an object, and pass an object that contains data to be used for processing during navigation.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドと同じ動作<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>URI ではなく、オブジェクトが渡されます。  
  
   
  
## Examples  
 次の例に移動する方法を示しています、<xref:System.Windows.Controls.Page>オブジェクトのソース コンテンツが含まれていると、ナビゲーション状態を渡すことです。  
  
 [!code-csharp[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj -&gt; bool" Usage="navigationService.Navigate (source, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
        <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
        <summary>Navigate asynchronously to source content located at a URI, and pass an object that contains data to be used for processing during navigation.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ナビゲーションは非同期にあるために、複数のナビゲーションで同時に進行中である可能性があります。 たとえば、1 ページに 2 つの子フレームがある場合両方のフレームは移動可能性があります。 この場合、によって発生するさまざまなナビゲーション イベント<xref:System.Windows.Navigation.NavigationService>複数回、それぞれの移動、コンテンツの 1 つ発生しては限りませんようにするためのナビゲーションを要求した可能性があります。 したがって、特定のナビゲーション要求は、個々 の要求に固有のデータを処理する場合、すべてのナビゲーション要求に使用可能なデータは使用できません。 使用する代わりに、`navigationState`ナビゲーション処理は 1 つのナビゲーション要求に固有のデータを渡すことです。  
  
 次のイベント引数は、ナビゲーション状態へのアクセスを提供します。  
  
-   <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A> (に渡される、<xref:System.Windows.Navigation.NavigationService.Navigating>イベント)。  
  
-   <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A> (に渡される、 <xref:System.Windows.Navigation.NavigationService.Navigated>、 <xref:System.Windows.Navigation.NavigationService.NavigationStopped>、<xref:System.Windows.Navigation.NavigationService.LoadCompleted>イベント ハンドラー)。  
  
   
  
## Examples  
 次の例では、URI に移動して、ナビゲーション状態を渡すことを示します。  
  
 [!code-csharp[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState, bool sandboxExternalContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object, sandboxExternalContent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj * bool -&gt; bool" Usage="navigationService.Navigate (source, navigationState, sandboxExternalContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
        <Parameter Name="sandboxExternalContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
        <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
        <param name="sandboxExternalContent">Download content into a partial trust security sandbox (with the default Internet zone set of permissions, if <see langword="true" />. The default is <see langword="false" />.</param>
        <summary>Navigate asynchronously to source content located at a URI, pass an object containing navigation state for processing during navigation, and sandbox the content.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドはスタンドアロン アプリケーションののみと[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]コンテンツ。  
  
 このメソッドと同じ動作が発生<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>、部分信頼セキュリティ サンド ボックスにダウンロードされているコンテンツが配置されるようにすることでそれを拡張し、(権限での既定のインターネット ゾーン セットで、次を参照してください[WPF 部分信頼。セキュリティ](~/docs/framework/wpf/wpf-partial-trust-security.md))。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " Usage="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the content that is being navigated to has been found, and is available from the <see cref="P:System.Windows.Navigation.NavigationService.Content" /> property, although it may not have completed loading.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 処理する<xref:System.Windows.Navigation.NavigationService.Navigated>ダウンロードの開始時に、ナビゲーション要求に関する情報を確認する必要がある場合。 この情報は、<xref:System.Windows.Navigation.NavigationEventArgs>に渡されるオブジェクト、 <xref:System.Windows.Navigation.NavigationService.Navigated> 、イベント ハンドラーが含まれています。  
  
-   元のページです。 ときに<xref:System.Windows.Navigation.NavigationService.Navigated>発生すると、元のページの一部には、少なくとも[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]ツリーを解析し、対象のコンテンツ コントロールにアタッチされています。  
  
-   要求の URI。  
  
-   ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)。  
  
-   追加のデータは、ナビゲーションがいずれかを呼び出すことによって開始された場合、<xref:System.Windows.Navigation.NavigationService.Navigate%2A>または<xref:System.Windows.Navigation.NavigationService.Navigate%2A>です。  
  
-   応答の詳細 (を使用して、<xref:System.Net.WebResponse>オブジェクト)。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigated> ときに、元のページが見つからないか、読み込まれている場合は発生しません<xref:System.Windows.Navigation.NavigationService.NavigationFailed>が発生します。  
  
> [!NOTE]
>  ときに<xref:System.Windows.Navigation.NavigationService>を発生させます<xref:System.Windows.Navigation.NavigationService.NavigationFailed>もを発生させます<xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>でイベントを<xref:System.Windows.Application>オブジェクト。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.Navigated>です。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " Usage="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a new navigation is requested.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigating> 新しいナビゲーションが要求されるを含め、コンテンツが要求されたソースの前に。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%2A> が呼ばれたとき。  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A> または<xref:System.Windows.Navigation.NavigationService.GoForward%2A>と呼びます (またはナビゲーションのエントリが選択されて[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)])。  
  
-   コンテンツ フラグメントに移動します。  
  
 処理する<xref:System.Windows.Navigation.NavigationService.Navigating>ナビゲーションが開始する前に、ナビゲーション要求に関する情報を確認する必要がある場合。 この情報は、<xref:System.Windows.Navigation.NavigatingCancelEventArgs>に渡されるオブジェクト、<xref:System.Windows.Navigation.NavigationService.Navigating>イベント ハンドラー。  
  
 A<xref:System.Net.WebRequest>ナビゲーションが作成されから使用可能なオブジェクト、<xref:System.Windows.Navigation.NavigatingCancelEventArgs>パラメーターであるため、実際の要求は、この時点で化されていないを再構成できます、<xref:System.Net.WebRequest>オブジェクトを必要な場合です。  
  
 処理も<xref:System.Windows.Navigation.NavigatingCancelEventArgs>設定で、必要な場合、ナビゲーションをキャンセルする<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>true に設定します。 ナビゲーションをキャンセルすると、その他のナビゲーション イベントは発生しません。  
  
> [!NOTE]
>  アプリケーションがブラウザーでホストされている場合は、取り消すと、アプリケーションから移動からユーザーを防ぐことはできません、<xref:System.Windows.Navigation.NavigationService.Navigating>イベント。  
  
 コンテンツの最初の部分がナビゲーターによってに移動した後 (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)、それぞれからコンテンツがナビゲーション履歴に追加されます。 切り替えを移動するコンテンツに関する状態情報を保存する必要がある場合する状態そのコンテンツのジャーナル エントリを設定して追加できます<xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A>で、<xref:System.Windows.Navigation.CustomContentState>オブジェクト。  
  
> [!NOTE]
>  ときに<xref:System.Windows.Navigation.NavigationService>を発生させます<xref:System.Windows.Navigation.NavigationService.Navigating>もを発生させます<xref:System.Windows.Application.Navigating?displayProperty=nameWithType>でイベントを<xref:System.Windows.Application>オブジェクト。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.Navigating>場合は、要求をキャンセルすると静的コンテンツを更新する要求が行われたかどうかを検出します。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigating>。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationFailed As NavigationFailedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberSignature Language="F#" Value="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " Usage="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when an error occurs while navigating to the requested content.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときにいずれか、<xref:System.Net.WebException>または<xref:System.IO.IOException>、ナビゲーション中にスローされた、<xref:System.Windows.Navigation.NavigationService.NavigationFailed>イベントが発生します。 <xref:System.Windows.Navigation.NavigationService.NavigationFailed> 渡される、<xref:System.Windows.Navigation.NavigationFailedEventArgs>例外と例外の原因となったナビゲーションの詳細の両方の情報をカプセル化します。  
  
 例外は、障害が発生したナビゲーションの結果し、が処理されない、この順で、次のイベントが発生します。  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>。  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=nameWithType> または <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=nameWithType>。  
  
-   <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>。  
  
-   <xref:System.Windows.Application.DispatcherUnhandledException>。  
  
 場合、ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>) が 1 つ以上のナビゲーターによってホストされる`NavigationFailed`のうちのどれでもは発生しません。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.NavigationFailed>です。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationfailedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberSignature Language="F#" Value="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " Usage="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs periodically during a download to provide navigation progress information.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> 渡される、<xref:System.Windows.Navigation.NavigationProgressEventArgs>次の進行状況に関する情報を公開します。  
  
-   これまでにダウンロードされたバイト数 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>)。  
  
-   ダウンロードする合計バイト数 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>)。  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> コンテンツの 1024 バイトごとにダウンロードされると、および 1 回以上の残りのバイト数が 1024 バイト未満であることが発生します。 このため、処理<xref:System.Windows.Navigation.NavigationService.NavigationProgress>追跡および現在のダウンロードの進行状況を表示する便利な方法を提供します。  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> 場合によっては、コンテンツの同じ部分に移動するときや、ときに、コンテンツ フラグメントへの移動が現在読み込まれているコンテンツになどで発生しません (つまりの値、<xref:System.Windows.Navigation.NavigationService.Content%2A>プロパティ)。  
  
 コンパイルされた XAML リソースでは、最後に移動するとき<xref:System.Windows.Navigation.NavigationService.NavigationProgress>イベントを発生させることがない可能性があります。 つまり、ダウンロードの最後に、最後に報告している<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>値が等しくない場合があります、<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>値。 処理、<xref:System.Windows.Navigation.NavigationService.LoadCompleted>ナビゲーションを終えたときに通知するイベントです。  
  
> [!NOTE]
>  ときに<xref:System.Windows.Navigation.NavigationService>を発生させます<xref:System.Windows.Navigation.NavigationService.NavigationProgress>もを発生させます<xref:System.Windows.Application.NavigationProgress?displayProperty=nameWithType>でイベントを<xref:System.Windows.Application>オブジェクト。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.NavigationProgress>です。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationprogresscode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberSignature Language="F#" Value="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " Usage="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> method is called, or when a new navigation is requested while a current navigation is in progress.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 処理する<xref:System.Windows.Navigation.NavigationService.NavigationStopped>かどうかは、ダウンロードを停止すると、ナビゲーション要求に関する情報を確認する必要があります。 この情報は、<xref:System.Windows.Navigation.NavigationEventArgs>に渡されるオブジェクト、 <xref:System.Windows.Navigation.NavigationService.NavigationStopped> 、イベント ハンドラーが含まれています。  
  
-   要求の URI。  
  
-   ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)。  
  
-   追加のデータは、ナビゲーションがいずれかを呼び出すことによって開始された場合、<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>または<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>です。  
  
> [!NOTE]
>  ときに<xref:System.Windows.Navigation.NavigationService>を発生させます<xref:System.Windows.Navigation.NavigationService.NavigationStopped>もを発生させます<xref:System.Windows.Application.NavigationStopped?displayProperty=nameWithType>でイベントを<xref:System.Windows.Application>オブジェクト。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています。<xref:System.Windows.Navigation.NavigationService.NavigationStopped>です。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="navigationService.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reloads the current content.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、現在のコンテンツ (の値で指定された、<xref:System.Windows.Navigation.NavigationService.Source%2A>プロパティ)、もう一度への移動が<xref:System.Windows.Navigation.NavigationService>コンテンツが再度ダウンロードしません。 強制的に<xref:System.Windows.Navigation.NavigationService>コンテンツに再度移動するを呼び出す<xref:System.Windows.Navigation.NavigationService.Refresh%2A>です。  
  
 注意してください。 現在のコンテンツへの移動がもう一度、かどうかを呼び出して<xref:System.Windows.Navigation.NavigationService.Navigate%2A>または<xref:System.Windows.Navigation.NavigationService.Refresh%2A>、ナビゲーション履歴に新しいエントリが追加されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBackEntry () As JournalEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Navigation::JournalEntry ^ RemoveBackEntry();" />
      <MemberSignature Language="F#" Value="member this.RemoveBackEntry : unit -&gt; System.Windows.Navigation.JournalEntry" Usage="navigationService.RemoveBackEntry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the most recent journal entry from back history.</summary>
        <returns>The most recent <see cref="T:System.Windows.Navigation.JournalEntry" /> in back navigation history, if there is one.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合は 2 つ以上のナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>) 同じナビゲーション履歴を共有するには、1 つのナビゲーター<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>を別のナビゲーターで行われたナビゲーションの [戻る] ナビゲーション履歴のエントリを取得します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Navigation.NavigationService.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URI of the current content, or the URI of new content that is currently being navigated to.</summary>
        <value>A<see cref="T:System.Uri" />現在のコンテンツまたはに移動されている現在のコンテンツの URI を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在表示されている 1 つのナビゲーターよりも別の URI にこのプロパティを設定する場合 (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>) が、指定された URI に移動します。  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> ナビゲーションが取り消された場合を除きに移動する URI から読み込まれているコンテンツに設定されます。  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> フラグメント専用の URI を設定してに設定することができます`null`です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.StopLoading" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLoading ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLoading();" />
      <MemberSignature Language="F#" Value="member this.StopLoading : unit -&gt; unit" Usage="navigationService.StopLoading " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops further downloading of content for the current navigation request.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> 呼び出すことができる限り早い時点に<xref:System.Windows.Navigation.NavigationService.Navigate%2A>から制御が戻るし、子フレームで進行中のナビゲーションを停止します。  
  
 (<xref:System.Windows.Controls.Frame>).  
  
 呼び出す、<xref:System.Windows.Navigation.NavigationService.StopLoading%2A>メソッドが発生し、<xref:System.Windows.Navigation.NavigationService.NavigationStopped>イベント。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> ナビゲーションを開始したのと同じスレッドで呼び出す必要があります。  
  
   
  
## Examples  
 次の例では、読み込みを停止する方法を示します。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowstoploadingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
  </Members>
</Type>