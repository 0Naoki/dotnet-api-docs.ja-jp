<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XContainer.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5975ff3e595a7e42b32687e50bd64d6eefc73e39b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">975ff3e595a7e42b32687e50bd64d6eefc73e39b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Represents a node that can contain other nodes.</source>
          <target state="translated">他のノードを格納できるノードを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This class provides functionality such as finding the next or previous sibling node, or enumerating the direct children of a node.</source>
          <target state="translated">このクラスは、次または前の兄弟ノードを検索またはノードの直接の子の列挙などの機能を提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>The two classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph> are <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
          <target state="translated">2 つのクラスから派生する<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>は<ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>と<ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Adds the specified content as children to this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">指定した内容をこの <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> に子として追加します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method adds the new content after the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">このメソッドは、既存のコンテンツの後に、新しいコンテンツを追加、<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">この関数に渡すことができる有効なコンテンツに関する詳細については、「<bpt id="p1">[</bpt>有効なコンテンツの XElement オブジェクトと XDocument オブジェクト<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">このメソッドが発生、<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>The following example creates two XML trees, and then uses this method to add the results of a query to one of them.</source>
          <target state="translated">次の例では、次の 2 つの XML ツリーを作成し、このメソッドを使用して、それらのいずれかに、クエリの結果を追加します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>A content object containing simple content or a collection of content objects to be added.</source>
          <target state="translated">追加する単純な内容またはコンテンツ オブジェクトのコレクションを格納しているコンテンツ オブジェクト。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>Adds the specified content as children of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">指定した内容をこの <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> の子として追加します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>This method adds the new content after the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">このメソッドは、既存のコンテンツの後に、新しいコンテンツを追加、<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">この関数に渡すことができる有効なコンテンツに関する詳細については、「<bpt id="p1">[</bpt>有効なコンテンツの XElement オブジェクトと XDocument オブジェクト<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">このメソッドが発生、<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>The following example creates two XML trees, and then uses this method to add an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object to one of them.</source>
          <target state="translated">次の例は、次の 2 つの XML ツリーを作成し、このメソッドを使用して、追加、<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>にそれらのいずれかのオブジェクト。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>It also adds the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query to the XML tree.</source>
          <target state="translated">結果も追加、 <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> XML ツリーをクエリします。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>A parameter list of content objects.</source>
          <target state="translated">コンテンツ オブジェクトのパラメーター リスト。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>Adds the specified content as children of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">指定した内容をこの <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> の子として追加します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>This method adds the new content after the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">このメソッドは、既存のコンテンツの後に、新しいコンテンツを追加、<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">この関数に渡すことができる有効なコンテンツに関する詳細については、「<bpt id="p1">[</bpt>有効なコンテンツの XElement オブジェクトと XDocument オブジェクト<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">このメソッドが発生、<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>The following example creates two XML trees, uses this method to add an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object to one of them.</source>
          <target state="translated">次の例は、次の 2 つの XML ツリーを作成、このメソッドを使用して追加する、<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>にそれらのいずれかのオブジェクト。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>It also adds the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query to the XML tree.</source>
          <target state="translated">結果も追加、 <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> XML ツリーをクエリします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Adds the specified content as the first children of this document or element.</source>
          <target state="translated">指定した内容をこのドキュメントまたは要素の最初の子として追加します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method adds the new content before the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">このメソッドは、既存のコンテンツの前に、新しいコンテンツを追加、<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">この関数に渡すことができる有効なコンテンツに関する詳細については、「<bpt id="p1">[</bpt>有効なコンテンツの XElement オブジェクトと XDocument オブジェクト<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">このメソッドが発生、<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>The following example creates two XML trees, and then uses this method to add the results of a query to one of them.</source>
          <target state="translated">次の例では、次の 2 つの XML ツリーを作成し、このメソッドを使用して、それらのいずれかに、クエリの結果を追加します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>A content object containing simple content or a collection of content objects to be added.</source>
          <target state="translated">追加する単純な内容またはコンテンツ オブジェクトのコレクションを格納しているコンテンツ オブジェクト。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>Adds the specified content as the first children of this document or element.</source>
          <target state="translated">指定した内容をこのドキュメントまたは要素の最初の子として追加します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>This method adds the new content before the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">このメソッドは、既存のコンテンツの前に、新しいコンテンツを追加、<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">この関数に渡すことができる有効なコンテンツに関する詳細については、「<bpt id="p1">[</bpt>有効なコンテンツの XElement オブジェクトと XDocument オブジェクト<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">このメソッドが発生、<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>The following example creates two XML trees, uses this method to add an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object as the first element to one of them.</source>
          <target state="translated">次の例は、次の 2 つの XML ツリーを作成、このメソッドを使用して追加する、<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>オブジェクトとしてそれらのいずれかに最初の要素。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>It also adds the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query to the XML tree.</source>
          <target state="translated">結果も追加、 <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> XML ツリーをクエリします。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>A parameter list of content objects.</source>
          <target state="translated">コンテンツ オブジェクトのパラメーター リスト。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>Adds the specified content as the first children of this document or element.</source>
          <target state="translated">指定した内容をこのドキュメントまたは要素の最初の子として追加します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>This method adds the new content before the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">このメソッドは、既存のコンテンツの前に、新しいコンテンツを追加、<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">この関数に渡すことができる有効なコンテンツに関する詳細については、「<bpt id="p1">[</bpt>有効なコンテンツの XElement オブジェクトと XDocument オブジェクト<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">このメソッドが発生、<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>The following example creates two XML trees, and uses this method to add an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object as the first element to one of them.</source>
          <target state="translated">次の例は、次の 2 つの XML ツリーを作成し、このメソッドを使用して追加する、<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>オブジェクトとしてそれらのいずれかに最初の要素。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>It also adds the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query to the XML tree.</source>
          <target state="translated">結果も追加、 <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> XML ツリーをクエリします。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>The parent is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">親は <ph id="ph1">&lt;see langword="null" /&gt;</ph> になります。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that can be used to add nodes to the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> にノードを追加するために使用できる <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> を作成します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that is ready to have content written to it.</source>
          <target state="translated">それに内容を書き込む準備ができている <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>While serializing, namespace prefixes are inferred from the namespace attributes in the XML tree.</source>
          <target state="translated">をシリアル化中には、名前空間プレフィックスは、XML ツリー内の名前空間属性から推論されます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>XML 名前空間の使用<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>You can use this method to perform an XSLT transformation.</source>
          <target state="translated">このメソッドを使用すると、XSLT 変換を実行します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>You can create an XML tree, create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> from the XML tree, create a new document, and create a <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> that will write into the new document.</source>
          <target state="translated">作成できます。 XML ツリーを作成、 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> XML ツリーから、新しいドキュメントを作成し、作成、<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>ですが、新しいドキュメントに書き込みます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>Then, you can invoke the XSLT transformation, passing the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> to the transform.</source>
          <target state="translated">その後、渡す、XSLT 変換を呼び出すことができます、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>変換にします。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>After the transformation successfully completes, the new XML tree is populated with the results of the transformation.</source>
          <target state="translated">変換が正常に完了すると、新しい XML ツリーに変換結果が挿入されます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>Returns a collection of the descendant nodes for this document or element, in document order.</source>
          <target state="translated">このドキュメントまたは要素の子孫ノードのコレクションをドキュメント順に返します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> containing the descendant nodes of the <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>, in document order.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> の子孫ノードをドキュメント順に格納している <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> の <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>Note that attributes are not considered to be nodes in <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, so they will not be part of the collection that is returned by this method.</source>
          <target state="translated">属性はノードになるには考慮されません<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>ので、このメソッドによって返されるコレクションの一部はできません。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>This method uses deferred execution.</source>
          <target state="translated">このメソッドは遅延実行を使用します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>The following example creates an XML tree, and then iterates through the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.DescendantNodes%2A&gt;</ph> axis.</source>
          <target state="translated">次の例は、XML ツリーを作成しを反復処理し、<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.DescendantNodes%2A&gt;</ph>軸です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Returns a collection of the descendant elements for this document or element, in document order.</source>
          <target state="translated">このドキュメントまたは要素の子孫要素のコレクションをドキュメント順に返します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method uses deferred execution.</source>
          <target state="translated">このメソッドは遅延実行を使用します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>Returns a collection of the descendant elements for this document or element, in document order.</source>
          <target state="translated">このドキュメントまたは要素の子孫要素のコレクションをドキュメント順に返します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> containing the descendant elements of the <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> の子孫要素を格納している <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> の <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>Note that this method will not return itself in the resulting <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">このメソッドを戻さないこと自体で、その結果に注意してください<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>See <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.DescendantsAndSelf%2A&gt;</ph> if you need to include the current <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> in the results.</source>
          <target state="translated">参照してください<ph id="ph1">&lt;xref:System.Xml.Linq.XElement.DescendantsAndSelf%2A&gt;</ph>現在を含める必要がある場合<ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>結果にします。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>This method uses deferred execution.</source>
          <target state="translated">このメソッドは遅延実行を使用します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>The following example creates an XML tree, and then uses this axis method to retrieve the descendants.</source>
          <target state="translated">次の例では、XML ツリーを作成し、この軸メソッドを使用して、子を取得します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">照合する <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>Returns a filtered collection of the descendant elements for this document or element, in document order.</source>
          <target state="translated">このドキュメントまたは要素の子孫要素のフィルター処理されたコレクションをドキュメント順に返します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">一致する <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> を持つ要素のみがコレクションに含められます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> containing the descendant elements of the <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that match the specified <ph id="ph4">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> に一致する <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> の子孫要素を格納している <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> の <ph id="ph4">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">このメソッドは遅延実行を使用します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>The following example prints all descendants of an element.</source>
          <target state="translated">次の例では、要素のすべての子孫を出力します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">同じ例を次に示しますが、ここで、XML が名前空間には。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>XML 名前空間の使用<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">照合する <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>Gets the first (in document order) child element with the specified <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> の最初の子要素を (ドキュメント順に) 取得します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that matches the specified <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> に一致するか、<ph id="ph3">&lt;see langword="null" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>Returns <ph id="ph1">`null`</ph> if there is no element with the specified name.</source>
          <target state="translated">返します<ph id="ph1">`null`</ph>指定した名前を持つ要素がない場合。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>Some axis methods return collections of elements or attributes.</source>
          <target state="translated">一部の軸メソッドは、要素または属性のコレクションを返します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This method returns only a single element.</source>
          <target state="translated">このメソッドは、1 つの要素のみを返します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This method returns <ph id="ph1">`null`</ph> if the element with the specified name is not found.</source>
          <target state="translated">このメソッドが戻る<ph id="ph1">`null`</ph>指定した名前を持つ要素が見つからない場合。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>All of the methods that allow you to construct elements (the constructor of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.Add%2A&gt;</ph>, and so on) accept <ph id="ph3">`null`</ph> as a valid argument.</source>
          <target state="translated">すべての要素を構築するためにできるようにする方法 (のコンス トラクター <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>、<ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.Add%2A&gt;</ph>など) を受け入れる<ph id="ph3">`null`</ph>有効な引数として。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This allows you to use a convenient idiom: you can call this method as part of functional construction, and the element is added to the XML tree being constructed if and only if the element exists in the source tree.</source>
          <target state="translated">これにより、便利な表現形式を使用して: 関数型構築の一部としてこのメソッドを呼び出すことができ、要素が、ソース ツリー内に要素が存在する場合にのみ構築される XML ツリーに追加します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>The following example shows this idiom.</source>
          <target state="translated">次の例では、この表現方法を示します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>In contrast to <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;</ph>, this method is not an axis method.</source>
          <target state="translated">対照的に<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;</ph>、このメソッドは、軸メソッドではありません。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>It does not use deferred execution; it simply returns an element when called.</source>
          <target state="translated">遅延実行を使用しません。単に、呼び出されたときに要素を返します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>The following example shows two uses of this method.</source>
          <target state="translated">次の例では、このメソッドの 2 つの使用を示します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>In one case, the method finds the element in <ph id="ph1">`srcTree`</ph>.</source>
          <target state="translated">メソッドが内の要素を検索する 1 つのケースで<ph id="ph1">`srcTree`</ph>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>In the second case, the method does not find the element in the source tree, no element is added to <ph id="ph1">`xmlTree`</ph>, and no exception is thrown.</source>
          <target state="translated">2 番目の場合は、メソッドが見つからない要素、ソース ツリーで、要素は追加されませんを<ph id="ph1">`xmlTree`</ph>、例外はスローされません。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>Note that the Visual Basic example uses the child XML property.</source>
          <target state="translated">Visual Basic の例が子 XML プロパティを使用することに注意してください。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>It is also allowable to use the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Element%2A&gt;</ph> method directly in Visual Basic.</source>
          <target state="translated">使用する許容されても、<ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Element%2A&gt;</ph>直接 Visual Basic メソッドにします。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">同じ例を次に示しますが、ここで、XML が名前空間には。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>XML 名前空間の使用<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Returns a collection of the child elements of this element or document, in document order.</source>
          <target state="translated">この要素またはドキュメントの子要素のコレクションをドキュメント順に返します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method uses deferred execution.</source>
          <target state="translated">このメソッドは遅延実行を使用します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>Returns a collection of the child elements of this element or document, in document order.</source>
          <target state="translated">この要素またはドキュメントの子要素のコレクションをドキュメント順に返します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> containing the child elements of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>, in document order.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> の子要素をドキュメント順に格納している <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> の <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>This method uses deferred execution.</source>
          <target state="translated">このメソッドは遅延実行を使用します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>The following example creates an XML tree, and then selects some elements using this axis method.</source>
          <target state="translated">次の例では、XML ツリーを作成し、この軸メソッドを使用していくつかの要素を選択します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">同じ例を次に示しますが、ここで、XML が名前空間には。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>XML 名前空間の使用<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">照合する <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>Returns a filtered collection of the child elements of this element or document, in document order.</source>
          <target state="translated">この要素またはドキュメントの子要素のフィルター処理されたコレクションをドキュメント順に返します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">一致する <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> を持つ要素のみがコレクションに含められます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> containing the children of the <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that have a matching <ph id="ph4">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, in document order.</source>
          <target state="translated">一致する <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> がある <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> の子をドキュメント順に格納している <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> の <ph id="ph4">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">このメソッドは遅延実行を使用します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>The following example creates an XML tree, and then selects several child elements using this axis method.</source>
          <target state="translated">次の例では、XML ツリーを作成し、この軸メソッドを使用していくつかの子要素を選択します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">同じ例を次に示しますが、ここで、XML が名前空間には。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>XML 名前空間の使用<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>Get the first child node of this node.</source>
          <target state="translated">このノードの最初の子ノードを取得します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> containing the first child node of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> の最初の子ノードを格納している <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>The following example creates an element that contains child elements.</source>
          <target state="translated">次の例では、子要素を含む要素を作成します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>It then gets the first child node of the parent element.</source>
          <target state="translated">親要素の最初の子ノードを取得します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>Get the last child node of this node.</source>
          <target state="translated">このノードの最後の子ノードを取得します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> containing the last child node of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> の最後の子ノードを格納している <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>The following example creates an element that contains child elements.</source>
          <target state="translated">次の例では、子要素を含む要素を作成します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>It then gets the last child node of the parent element.</source>
          <target state="translated">親要素の最後の子ノードを取得します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>Returns a collection of the child nodes of this element or document, in document order.</source>
          <target state="translated">この要素またはドキュメントの子ノードのコレクションをドキュメント順に返します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> containing the contents of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>, in document order.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> の内容をドキュメント順に格納している <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> の <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>Note that the content does not include attributes.</source>
          <target state="translated">コンテンツに属性が含まれていないことに注意してください。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>In <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, attributes are not considered to be nodes of the tree.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>ツリーのノードである属性は考慮されません。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>They are name/value pairs associated with an element.</source>
          <target state="translated">これらは、要素に関連付けられている名前と値のペアです。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>This method uses deferred execution.</source>
          <target state="translated">このメソッドは遅延実行を使用します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>The following example creates an XML tree with a variety of types of nodes.</source>
          <target state="translated">次の例では、さまざまな種類のノードの XML ツリーを作成します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>It then queries this axis method to enumerate and print the nodes.</source>
          <target state="translated">この軸メソッドを列挙し、ノードのクエリを実行します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>The following example creates an XML tree that contains a variety of types of nodes.</source>
          <target state="translated">次の例では、さまざまな種類のノードを格納する XML ツリーを作成します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>It then enumerates through portions of the tree, printing the node types.</source>
          <target state="translated">ノードの種類の印刷、ツリーの特定の部分を列挙し、します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>Removes the child nodes from this document or element.</source>
          <target state="translated">このドキュメントまたは要素から子ノードを削除します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>If you call this method on an element that contains attributes, this method will not remove the attributes.</source>
          <target state="translated">属性を含む要素でこのメソッドを呼び出すと、このメソッドは、属性を削除できません。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>To remove the attributes of an element, use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.RemoveAttributes%2A&gt;</ph>.</source>
          <target state="translated">削除するには、要素の属性を使用して<ph id="ph1">&lt;xref:System.Xml.Linq.XElement.RemoveAttributes%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A&gt;</ph> method has related functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A&gt;</ph>メソッドに関連の機能です。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>It removes the child nodes of every node in a collection.</source>
          <target state="translated">コレクション内のすべてのノードの子ノードを削除します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">このメソッドが発生、<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>The following example creates an XML tree that contains some child nodes.</source>
          <target state="translated">次の例では、いくつかの子ノードを格納する XML ツリーを作成します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>It then calls this method to remove the child nodes.</source>
          <target state="translated">子ノードを削除するには、このメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Replaces the children nodes of this document or element with the specified content.</source>
          <target state="translated">このドキュメントまたは要素の子ノードを指定された内容で置き換えます。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">この関数に渡すことができる有効なコンテンツに関する詳細については、「<bpt id="p1">[</bpt>有効なコンテンツの XElement オブジェクトと XDocument オブジェクト<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>です。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">このメソッドが発生、<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method has snapshot semantics.</source>
          <target state="translated">このメソッドのセマンティクスはスナップショットです。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>It first creates a copy of the new content.</source>
          <target state="translated">まず、新しいコンテンツのコピーを作成します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>It then removes all children nodes of this node.</source>
          <target state="translated">このノードのすべての子ノードを削除します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>Finally, it adds the new content as children nodes.</source>
          <target state="translated">最後に、子ノードとして、新しいコンテンツを追加します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This means that you can replace children nodes using a query on the children nodes themselves.</source>
          <target state="translated">つまり、子ノードの子ノードで、クエリの使用を置き換えることができます。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>The following example creates two XML trees, and then uses this method to replace the contents of one of them with the results of a query.</source>
          <target state="translated">次の例では、次の 2 つの XML ツリーを作成し、このメソッドを使用して、クエリの結果のうちの 1 つの内容を置き換えます。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>A content object containing simple content or a collection of content objects that replace the children nodes.</source>
          <target state="translated">子ノードを置き換える単純な内容またはコンテンツ オブジェクトのコレクションを格納しているコンテンツ オブジェクト。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>Replaces the children nodes of this document or element with the specified content.</source>
          <target state="translated">このドキュメントまたは要素の子ノードを指定された内容で置き換えます。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">この関数に渡すことができる有効なコンテンツに関する詳細については、「<bpt id="p1">[</bpt>有効なコンテンツの XElement オブジェクトと XDocument オブジェクト<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">このメソッドが発生、<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>This method has snapshot semantics.</source>
          <target state="translated">このメソッドのセマンティクスはスナップショットです。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>It first creates a copy of the new content.</source>
          <target state="translated">まず、新しいコンテンツのコピーを作成します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>It then removes all children nodes of this node.</source>
          <target state="translated">このノードのすべての子ノードを削除します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>Finally, it adds the new content as children nodes.</source>
          <target state="translated">最後に、子ノードとして、新しいコンテンツを追加します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>This means that you can replace children nodes using a query on the children nodes themselves.</source>
          <target state="translated">つまり、子ノードの子ノードで、クエリの使用を置き換えることができます。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>The following example creates an XML tree that contains children nodes.</source>
          <target state="translated">次の例では、子ノードを格納する XML ツリーを作成します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>It then replaces all of the children nodes with a single element.</source>
          <target state="translated">すべての子ノードの 1 つの要素で置き換えます。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>To see an example of replacing the children nodes with the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query, see <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.ReplaceNodes%2A&gt;</ph>.</source>
          <target state="translated">子ノードの結果で置き換える例を参照する、<ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph>クエリを参照してください<ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.ReplaceNodes%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>A parameter list of content objects.</source>
          <target state="translated">コンテンツ オブジェクトのパラメーター リスト。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>Replaces the children nodes of this document or element with the specified content.</source>
          <target state="translated">このドキュメントまたは要素の子ノードを指定された内容で置き換えます。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">この関数に渡すことができる有効なコンテンツに関する詳細については、「<bpt id="p1">[</bpt>有効なコンテンツの XElement オブジェクトと XDocument オブジェクト<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>です。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">このメソッドが発生、<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>と<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>This method has snapshot semantics.</source>
          <target state="translated">このメソッドのセマンティクスはスナップショットです。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>It first creates a copy of the new content.</source>
          <target state="translated">まず、新しいコンテンツのコピーを作成します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>It then removes all children nodes of this node.</source>
          <target state="translated">このノードのすべての子ノードを削除します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>Finally, it adds the new content as children nodes.</source>
          <target state="translated">最後に、子ノードとして、新しいコンテンツを追加します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>This means that you can replace children nodes using a query on the children nodes themselves.</source>
          <target state="translated">つまり、子ノードの子ノードで、クエリの使用を置き換えることができます。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>The following example creates a dictionary and an XML tree.</source>
          <target state="translated">次の例では、ディクショナリと、XML ツリーを作成します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>It then queries the dictionary, projects the results to an <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, and replaces the contents of the XML tree with the results of the query.</source>
          <target state="translated">その後、ディクショナリのクエリを実行に結果を射影、<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>の<ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>、し、クエリの結果で、XML ツリーの内容を置き換えます。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>