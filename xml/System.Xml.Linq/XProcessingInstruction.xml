<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XProcessingInstruction.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a20dce906e0589856fbebd8b88e09fd6ed6e7d9c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a20dce906e0589856fbebd8b88e09fd6ed6e7d9c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XProcessingInstruction">
          <source>Represents an XML processing instruction.</source>
          <target state="translated">XML 処理命令を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XProcessingInstruction">
          <source>You can use processing instructions in XML to indicate that an XML document can be processed by some processor, such as XSLT.</source>
          <target state="translated">Xml 処理命令を使用すると、XSLT などのいくつかのプロセッサによって XML ドキュメントを処理できることを示すです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XProcessingInstruction">
          <source>Processing instructions are nodes in the XML tree.</source>
          <target state="translated">処理命令は、XML ツリー内のノードです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XProcessingInstruction">
          <source>When a processing instruction is found in the XML being parsed, <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> creates an <ph id="ph2">&lt;xref:System.Xml.Linq.XProcessingInstruction&gt;</ph> node.</source>
          <target state="translated">処理命令が見つかった場合に解析された XML<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>を作成、<ph id="ph2">&lt;xref:System.Xml.Linq.XProcessingInstruction&gt;</ph>ノード。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XProcessingInstruction">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph> node to copy from.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph> ノード。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
          <source>This constructor is primarily used internally to make a deep copy of an XML tree.</source>
          <target state="translated">このコンス トラクターは、XML ツリーの詳細コピーを作成する、主に内部的に使用します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the target application for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> のターゲット アプリケーションを含む <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
          <source>The string data for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph> の文字列データ。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Linq.XProcessingInstruction&gt;</ph>, and specifies a target and the string data for the processing instruction.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Xml.Linq.XProcessingInstruction&gt;</ph>ターゲットと処理命令の文字列データを指定します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> or <ph id="ph2">&lt;paramref name="data" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> パラメーターまたは <ph id="ph2">&lt;paramref name="data" /&gt;</ph> パラメーターが <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> does not follow the constraints of an XML name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> は、XML 名の制約に従っていません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XProcessingInstruction.Data">
          <source>Gets or sets the string value of this processing instruction.</source>
          <target state="translated">この処理命令の文字列値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.Data">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the string value of this processing instruction.</source>
          <target state="translated">この処理命令の文字列値を含む <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.Data">
          <source>You can use this property to modify an XML tree.</source>
          <target state="translated">このプロパティを使用すると、XML ツリーを変更します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.Data">
          <source>This property will cause events to occur.</source>
          <target state="translated">このプロパティには、イベントが発生するが発生します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.Data">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.Linq.XProcessingInstruction.Data%2A&gt;</ph> property to retrieve the string value of a processing instruction.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Xml.Linq.XProcessingInstruction.Data%2A&gt;</ph>処理命令の文字列値を取得するプロパティです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.Data">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XProcessingInstruction.Data">
          <source>The string <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">文字列 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XProcessingInstruction.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">このノードのノード型を取得します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.NodeType">
          <source>The node type.</source>
          <target state="translated">ノード型。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XProcessingInstruction" /&gt;</ph> オブジェクトでは、この値は <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">すべてのクラスから派生したため<ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>を含む、<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph>プロパティの具体的なサブクラスのコレクションで動作するコードを記述することができます<ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">コードは、コレクション内の各ノードのノード型をテストできます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.NodeType">
          <source>The following example creates a processing instruction, and then prints its node type.</source>
          <target state="translated">次の例では、処理命令を作成し、そのノードの種類を出力します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XProcessingInstruction.Target">
          <source>Gets or sets a string containing the target application for this processing instruction.</source>
          <target state="translated">この処理命令のターゲット アプリケーションを含む文字列を取得または設定します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.Target">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the target application for this processing instruction.</source>
          <target state="translated">この処理命令のターゲット アプリケーションを含む <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.Target">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.Linq.XProcessingInstruction.Target%2A&gt;</ph> property to retrieve the target application for a processing instruction.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Xml.Linq.XProcessingInstruction.Target%2A&gt;</ph>処理命令のターゲット アプリケーションを取得するプロパティです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XProcessingInstruction.Target">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XProcessingInstruction.Target">
          <source>The string <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">文字列 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XProcessingInstruction.Target">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> does not follow the constraints of an XML name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> は、XML 名の制約に従っていません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write this processing instruction to.</source>
          <target state="translated">この処理命令が書き込まれる <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
          <source>Writes this processing instruction to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">この処理命令を <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> に書き込みます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
          <source>This method is primarily used internally by the methods that write an XML tree to an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">このメソッドが XML ツリーを作成する方法によって内部的に使用、主に、<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>