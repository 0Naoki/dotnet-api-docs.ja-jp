<Type Name="SmtpClient" FullName="System.Net.Mail.SmtpClient">
  <TypeSignature Language="C#" Value="public class SmtpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.SmtpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SmtpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SmtpClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("SmtpClient and its network of types are poorly designed, we strongly recommend you use https://github.com/jstedfast/MailKit and https://github.com/jstedfast/MimeKit instead")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="51c0e-101">アプリケーションが SMTP (簡易メール転送プロトコル) を使用して電子メールを送信できるようにします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-101">Allows applications to send email by using the Simple Mail Transfer Protocol (SMTP).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-102"><xref:System.Net.Mail.SmtpClient>配信用の SMTP サーバーに電子メールを送信するクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-102">The <xref:System.Net.Mail.SmtpClient> class is used to send email to an SMTP server for delivery.</span></span> <span data-ttu-id="51c0e-103">SMTP プロトコルが記載されている RFC 2821 で定義されている[ https://www.ietf.org](https://www.ietf.org/)です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-103">The SMTP protocol is defined in RFC 2821, which is available at [https://www.ietf.org](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="51c0e-104">次の表に示すようにクラスを使用して送信される電子メール メッセージを構築するため<xref:System.Net.Mail.SmtpClient>です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-104">The classes shown in the following table are used to construct email messages that can be sent using <xref:System.Net.Mail.SmtpClient>.</span></span>  
  
|<span data-ttu-id="51c0e-105">クラス</span><span class="sxs-lookup"><span data-stu-id="51c0e-105">Class</span></span>|<span data-ttu-id="51c0e-106">説明</span><span class="sxs-lookup"><span data-stu-id="51c0e-106">Description</span></span>|  
|-----------|-----------------|  
|<xref:System.Net.Mail.Attachment>|<span data-ttu-id="51c0e-107">ファイルの添付ファイルを表します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-107">Represents file attachments.</span></span> <span data-ttu-id="51c0e-108">このクラスでは、ファイル、ストリーム、またはテキストを電子メール メッセージに添付することができます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-108">This class allows you to attach files, streams, or text to an email message.</span></span>|  
|<xref:System.Net.Mail.MailAddress>|<span data-ttu-id="51c0e-109">送信者と受信者の電子メール アドレスを表します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-109">Represents the email address of the sender and recipients.</span></span>|  
|<xref:System.Net.Mail.MailMessage>|<span data-ttu-id="51c0e-110">電子メール メッセージを表します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-110">Represents an email message.</span></span>|  
  
 <span data-ttu-id="51c0e-111">構築し、を使用して電子メール メッセージを送信する<xref:System.Net.Mail.SmtpClient>、次の情報を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-111">To construct and send an email message by using <xref:System.Net.Mail.SmtpClient>, you must specify the following information:</span></span>  
  
-   <span data-ttu-id="51c0e-112">電子メールの送信に使用する SMTP ホスト サーバー。</span><span class="sxs-lookup"><span data-stu-id="51c0e-112">The SMTP host server that you use to send email.</span></span> <span data-ttu-id="51c0e-113">参照してください、<xref:System.Net.Mail.SmtpClient.Host%2A>と<xref:System.Net.Mail.SmtpClient.Port%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-113">See the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties.</span></span>  
  
-   <span data-ttu-id="51c0e-114">SMTP サーバーで必要な場合、認証の資格情報。</span><span class="sxs-lookup"><span data-stu-id="51c0e-114">Credentials for authentication, if required by the SMTP server.</span></span> <span data-ttu-id="51c0e-115"><xref:System.Net.Mail.SmtpClient.Credentials%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51c0e-115">See the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property.</span></span>  
  
-   <span data-ttu-id="51c0e-116">送信者の電子メール アドレス。</span><span class="sxs-lookup"><span data-stu-id="51c0e-116">The email address of the sender.</span></span> <span data-ttu-id="51c0e-117">参照してください、<xref:System.Net.Mail.SmtpClient.Send%2A>と<xref:System.Net.Mail.SmtpClient.SendAsync%2A>を受け取るメソッド、`from`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="51c0e-117">See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `from` parameter.</span></span> <span data-ttu-id="51c0e-118">また、<xref:System.Net.Mail.MailMessage.From%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-118">Also see the <xref:System.Net.Mail.MailMessage.From%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="51c0e-119">受信者のアドレスまたは電子メール アドレス。</span><span class="sxs-lookup"><span data-stu-id="51c0e-119">The email address or addresses of the recipients.</span></span> <span data-ttu-id="51c0e-120">参照してください、<xref:System.Net.Mail.SmtpClient.Send%2A>と<xref:System.Net.Mail.SmtpClient.SendAsync%2A>を受け取るメソッド、`recipient`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="51c0e-120">See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `recipient` parameter.</span></span> <span data-ttu-id="51c0e-121">また、<xref:System.Net.Mail.MailMessage.To%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-121">Also see the <xref:System.Net.Mail.MailMessage.To%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="51c0e-122">メッセージの内容。</span><span class="sxs-lookup"><span data-stu-id="51c0e-122">The message content.</span></span> <span data-ttu-id="51c0e-123">参照してください、<xref:System.Net.Mail.SmtpClient.Send%2A>と<xref:System.Net.Mail.SmtpClient.SendAsync%2A>を受け取るメソッド、`body`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="51c0e-123">See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `body` parameter.</span></span> <span data-ttu-id="51c0e-124">また、<xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-124">Also see the <xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="51c0e-125">電子メール メッセージの添付ファイルを含めるには、まず、添付ファイルを使用して作成、<xref:System.Net.Mail.Attachment>クラス、しを使用してメッセージに追加し、<xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-125">To include an attachment with an email message, first create the attachment by using the <xref:System.Net.Mail.Attachment> class, and then add it to the message by using the <xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="51c0e-126">添付ファイルのファイルの種類と受信者によって使用される電子メール リーダー、によって、一部の受信者は可能性があります、添付ファイルを読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-126">Depending on the email reader used by the recipients and the file type of the attachment, some recipients might not be able to read the attachment.</span></span> <span data-ttu-id="51c0e-127">元の形式で添付ファイルを表示できないクライアントでは、使用して代替ビューを指定することができます、<xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-127">For clients that cannot display the attachment in its original form, you can specify alternate views by using the <xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="51c0e-128">アプリケーションを使用する .NET framework、またはマシン構成ファイルを指定するすべてのホスト、ポート、および資格情報の値を既定<xref:System.Net.Mail.SmtpClient>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51c0e-128">In .NET Framework, you can use the application or machine configuration files to specify default host, port, and credentials values for all <xref:System.Net.Mail.SmtpClient> objects.</span></span> <span data-ttu-id="51c0e-129">詳細については、次を参照してください。 [ &lt;mailSettings&gt;要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-129">For more information, see [&lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).</span></span> <span data-ttu-id="51c0e-130">.NET core は、既定値の設定をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-130">.NET Core does not support setting defaults.</span></span> <span data-ttu-id="51c0e-131">この問題を回避するには、関連するプロパティを設定する必要があります<xref:System.Net.Mail.SmtpClient>直接です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-131">As a workaround, you must set the relevant properties on <xref:System.Net.Mail.SmtpClient> directly.</span></span>  
  
 <span data-ttu-id="51c0e-132">SMTP サーバーに送信する電子メールの待機中に、電子メール メッセージとブロックを送信する、同期のいずれかを使用して<xref:System.Net.Mail.SmtpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-132">To send the email message and block while waiting for the email to be transmitted to the SMTP server, use one of the synchronous <xref:System.Net.Mail.SmtpClient.Send%2A> methods.</span></span> <span data-ttu-id="51c0e-133">使用するように、電子メールの送信中の実行を続行する、プログラムのメイン スレッド、非同期のいずれかの<xref:System.Net.Mail.SmtpClient.SendAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-133">To allow your program's main thread to continue executing while the email is transmitted, use one of the asynchronous <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods.</span></span> <span data-ttu-id="51c0e-134"><xref:System.Net.Mail.SmtpClient.SendCompleted>イベントが発生したときに、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>操作が完了します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-134">The <xref:System.Net.Mail.SmtpClient.SendCompleted> event is raised when a <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation completes.</span></span> <span data-ttu-id="51c0e-135">このイベントを受信するには、追加する必要があります、<xref:System.Net.Mail.SendCompletedEventHandler>に委任<xref:System.Net.Mail.SmtpClient.SendCompleted>です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-135">To receive this event, you must add a <xref:System.Net.Mail.SendCompletedEventHandler> delegate to <xref:System.Net.Mail.SmtpClient.SendCompleted>.</span></span> <span data-ttu-id="51c0e-136"><xref:System.Net.Mail.SendCompletedEventHandler>デリゲートでの通知を処理するコールバック メソッドを参照する必要があります<xref:System.Net.Mail.SmtpClient.SendCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="51c0e-136">The <xref:System.Net.Mail.SendCompletedEventHandler> delegate must reference a callback method that handles notification of <xref:System.Net.Mail.SmtpClient.SendCompleted> events.</span></span> <span data-ttu-id="51c0e-137">非同期の電子メール転送を取り消す場合にを使用して、<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-137">To cancel an asynchronous email transmission, use the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51c0e-138">進行状況での電子メール送信が呼び出す場合<xref:System.Net.Mail.SmtpClient.SendAsync%2A>または<xref:System.Net.Mail.SmtpClient.Send%2A>もう一度、きます、<xref:System.InvalidOperationException>です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-138">If there is an email transmission in progress and you call <xref:System.Net.Mail.SmtpClient.SendAsync%2A> or <xref:System.Net.Mail.SmtpClient.Send%2A> again, you will receive an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="51c0e-139">現在のインスタンスによって確立された接続、<xref:System.Net.Mail.SmtpClient>アプリケーションが同じの SMTP サーバーに複数のメッセージを送信したい場合は、SMTP サーバーへのクラスを再利用可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-139">The connection established by the current instance of the <xref:System.Net.Mail.SmtpClient> class to the SMTP server may be re-used if an application wishes to send multiple messages to the same SMTP server.</span></span> <span data-ttu-id="51c0e-140">これは、認証や暗号化を使用する場合、SMTP サーバーへの接続を確立します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-140">This is particularly useful when authentication or encryption are used establish a connection to the SMTP server.</span></span> <span data-ttu-id="51c0e-141">認証および TLS セッションを確立するプロセスは、高コストな操作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-141">The process of authenticating and establishing a TLS session can be expensive operations.</span></span> <span data-ttu-id="51c0e-142">同じ SMTP サーバーに大量の電子メールを送信するときに、メッセージごとに接続を再確立するための要件は、パフォーマンスに大きな影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-142">A requirement to re-establish a connection for each message when sending a large quantity of email to the same SMTP server could have a significant impact on performance.</span></span> <span data-ttu-id="51c0e-143">大量の電子メール アプリケーションを送信する電子メール ステータスの更新、ニュースレターの配布、または電子メールのアラートの数があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-143">There are a number of high-volume email applications that send email status updates, newsletter distributions, or email alerts.</span></span> <span data-ttu-id="51c0e-144">また多くの電子メール クライアント アプリケーション オフライン モードをサポート ユーザーが SMTP サーバーへの接続が確立されたときに後で送信される多くの電子メール メッセージを組み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-144">Also many email client applications support an off-line mode where users can compose many email messages that are sent later when a connection to the SMTP server is established.</span></span> <span data-ttu-id="51c0e-145">特定の SMTP サーバー (インターネット サービス プロバイダーによって提供される) を他の SMTP サーバーにこの電子メールを転送するすべての SMTP メッセージを送信する電子メール クライアントの一般的なであります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-145">It is typical for an email client to send all SMTP messages to a specific SMTP server (provided by the Internet service provider) that then forwards this email to other SMTP servers.</span></span>  
  
 <span data-ttu-id="51c0e-146"><xref:System.Net.Mail.SmtpClient>クラスの実装は、すべてのメッセージを同じサーバーへの接続が再度確立のオーバーヘッドを回避できますに SMTP 接続をプールします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-146">The <xref:System.Net.Mail.SmtpClient> class implementation pools SMTP connections so that it can avoid the overhead of re-establishing a connection for every message to the same server.</span></span> <span data-ttu-id="51c0e-147">アプリケーションで再利用と同じことがあります<xref:System.Net.Mail.SmtpClient>同じの SMTP サーバーと多くの異なる SMTP サーバーには、多くのさまざまな電子メールを送信するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51c0e-147">An application may re-use the same <xref:System.Net.Mail.SmtpClient> object to send many different emails to the same SMTP server and to many different SMTP servers.</span></span> <span data-ttu-id="51c0e-148">その結果、アプリケーションが終了したときに決定する方法はありませんを使用して、<xref:System.Net.Mail.SmtpClient>をオブジェクトとそれをクリーンアップする必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-148">As a result, there is no way to determine when an application is finished using the <xref:System.Net.Mail.SmtpClient> object and it should be cleaned up.</span></span>  
  
 <span data-ttu-id="51c0e-149">SMTP セッションが終了し、クライアントが接続を終了する、ときにをサーバーに送信するメッセージがなくなったことを示す終了メッセージを送信にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-149">When an SMTP session is finished and the client wishes to terminate the connection, it must send a QUIT message to the server to indicate that it has no more messages to send.</span></span> <span data-ttu-id="51c0e-150">これにより、クライアントからの接続に関連付けられているリソースを解放して、クライアントによって送信されたメッセージを処理するサーバー。</span><span class="sxs-lookup"><span data-stu-id="51c0e-150">This allows the server to free up resources associated with the connection from the client and process the messages which were sent by the client.</span></span>  
  
 <span data-ttu-id="51c0e-151"><xref:System.Net.Mail.SmtpClient>クラスには いいえ`Finalize`メソッド、アプリケーションを呼び出す必要がありますので<xref:System.Net.Mail.SmtpClient.Dispose%2A>を明示的にリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-151">The <xref:System.Net.Mail.SmtpClient> class has no `Finalize` method, so an application must call <xref:System.Net.Mail.SmtpClient.Dispose%2A> to explicitly free up resources.</span></span> <span data-ttu-id="51c0e-152"><xref:System.Net.Mail.SmtpClient.Dispose%2A>メソッドがで指定された SMTP サーバーに確立されているすべての接続を反復処理、<xref:System.Net.Mail.SmtpClient.Host%2A>プロパティと、TCP 接続を正常に終了後に終了メッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-152">The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method iterates through all established connections to the SMTP server specified in the <xref:System.Net.Mail.SmtpClient.Host%2A> property and sends a QUIT message followed by gracefully ending the TCP connection.</span></span> <span data-ttu-id="51c0e-153"><xref:System.Net.Mail.SmtpClient.Dispose%2A>メソッドによって使用されるアンマネージ リソースも解放、<xref:System.Net.Sockets.Socket>オプションでマネージ リソースを破棄します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-153">The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method also releases the unmanaged resources used by the <xref:System.Net.Sockets.Socket> and optionally disposes of the managed resources.</span></span>  
  
 <span data-ttu-id="51c0e-154"><xref:System.Net.Mail.SmtpClient.Dispose%2A> を使い終わったら <xref:System.Net.Mail.SmtpClient> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-154">Call <xref:System.Net.Mail.SmtpClient.Dispose%2A> when you are finished using the <xref:System.Net.Mail.SmtpClient>.</span></span> <span data-ttu-id="51c0e-155"><xref:System.Net.Mail.SmtpClient.Dispose%2A> メソッドによって、<xref:System.Net.Mail.SmtpClient> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-155">The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method leaves the <xref:System.Net.Mail.SmtpClient> in an unusable state.</span></span> <span data-ttu-id="51c0e-156">呼び出した後<xref:System.Net.Mail.SmtpClient.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.Net.Mail.SmtpClient>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Net.Mail.SmtpClient>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="51c0e-156">After calling <xref:System.Net.Mail.SmtpClient.Dispose%2A>, you must release all references to the <xref:System.Net.Mail.SmtpClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Mail.SmtpClient> was occupying.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-157">次のコード例では、電子メール メッセージの非同期送信を示します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-157">The following code example demonstrates sending an email message asynchronously.</span></span>  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.Mime" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51c0e-158"><see cref="T:System.Net.Mail.SmtpClient" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-158">Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51c0e-159">構成ファイルの設定を使用して <see cref="T:System.Net.Mail.SmtpClient" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-159">Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class by using configuration file settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-160">このコンス トラクターを初期化します、 <xref:System.Net.Mail.SmtpClient.Host%2A>、 <xref:System.Net.Mail.SmtpClient.Credentials%2A>、および<xref:System.Net.Mail.SmtpClient.Port%2A>、新しいプロパティ<xref:System.Net.Mail.SmtpClient>アプリケーションまたはマシン構成ファイルで設定を使用しています。</span><span class="sxs-lookup"><span data-stu-id="51c0e-160">This constructor initializes the <xref:System.Net.Mail.SmtpClient.Host%2A>, <xref:System.Net.Mail.SmtpClient.Credentials%2A>, and <xref:System.Net.Mail.SmtpClient.Port%2A> properties for the new <xref:System.Net.Mail.SmtpClient> by using the settings in the application or machine configuration files.</span></span> <span data-ttu-id="51c0e-161">詳細については、次を参照してください。 [ &lt;mailSettings&gt;要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-161">For more information, see [&lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-162">次のコード例では、電子メール メッセージの送信を示します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-162">The following code example demonstrates sending an email message.</span></span>  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 <span data-ttu-id="51c0e-163">例については、 \<mailSettings > アプリケーションまたはマシン構成ファイル内のノードを参照してください[ &lt;mailSettings&gt;要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-163">For an example of the \<mailSettings> node in the application or machine configuration file, see [&lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission"><span data-ttu-id="51c0e-164">構築するために、<see cref="T:System.Net.Mail.SmtpClient" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-164">to construct an <see cref="T:System.Net.Mail.SmtpClient" />.</span></span> <span data-ttu-id="51c0e-165"><see cref="F:System.Net.Mail.SmtpAccess.Connect" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="51c0e-165">Associated enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="51c0e-166">SMTP トランザクションで使用されるホスト コンピューターの名前または IP アドレスを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-166">A <see cref="T:System.String" /> that contains the name or IP address of the host computer used for SMTP transactions.</span></span></param>
        <summary><span data-ttu-id="51c0e-167">指定した SMTP サーバーを使用して電子メールを送信する <see cref="T:System.Net.Mail.SmtpClient" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-167">Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class that sends email by using the specified SMTP server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-168">`host`パラメーターがの値を初期化するために使用される、<xref:System.Net.Mail.SmtpClient.Host%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-168">The `host` parameter is used to initialize the value of the <xref:System.Net.Mail.SmtpClient.Host%2A> property.</span></span> <span data-ttu-id="51c0e-169"><xref:System.Net.Mail.SmtpClient.Credentials%2A>と<xref:System.Net.Mail.SmtpClient.Port%2A>プロパティは、アプリケーションまたはマシン構成ファイルで設定を使用して初期化されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-169">The <xref:System.Net.Mail.SmtpClient.Credentials%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties are initialized by using the settings in the application or machine configuration files.</span></span> <span data-ttu-id="51c0e-170">場合`host`は`null`以上<xref:System.String.Empty?displayProperty=nameWithType>、<xref:System.Net.Mail.SmtpClient.Host%2A>アプリケーションまたはマシン構成ファイルの設定を使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-170">If `host` is `null` or equal to <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.SmtpClient.Host%2A> is initialized using the settings in the application or machine configuration files.</span></span>  
  
 <span data-ttu-id="51c0e-171">詳細については、アプリケーションとマシンの構成ファイルを使用して、次を参照してください。 [ &lt;mailSettings&gt;要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-171">For more information about using the application and machine configuration files, see [&lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).</span></span> <span data-ttu-id="51c0e-172">使用して情報を指定した場合<xref:System.Net.Mail.SmtpClient>コンス トラクターまたはプロパティでは、この情報は、構成ファイル設定をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-172">If information is specified using <xref:System.Net.Mail.SmtpClient> constructors or properties, this information overrides the configuration file settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-173">次のコード例では、このコンス トラクターを呼び出すことを示します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-173">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission"><span data-ttu-id="51c0e-174">構築するために、<see cref="T:System.Net.Mail.SmtpClient" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-174">to construct an <see cref="T:System.Net.Mail.SmtpClient" />.</span></span> <span data-ttu-id="51c0e-175"><see cref="F:System.Net.Mail.SmtpAccess.Connect" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="51c0e-175">Associated enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="51c0e-176">SMTP トランザクションで使用されるホストの名前または IP アドレスを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-176">A <see cref="T:System.String" /> that contains the name or IP address of the host used for SMTP transactions.</span></span></param>
        <param name="port"><span data-ttu-id="51c0e-177"><c>host</c> 上で使用されるポートを格納している 1 以上の <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-177">An <see cref="T:System.Int32" /> greater than zero that contains the port to be used on <c>host</c>.</span></span></param>
        <summary><span data-ttu-id="51c0e-178">指定した SMTP サーバーとポートを使用して電子メールを送信する <see cref="T:System.Net.Mail.SmtpClient" /> クラスのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-178">Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class that sends email by using the specified SMTP server and port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-179">`host`と`port`パラメーターの値の設定、<xref:System.Net.Mail.SmtpClient.Host%2A>と<xref:System.Net.Mail.SmtpClient.Port%2A>プロパティ、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-179">The `host` and `port` parameters set the value of the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties, respectively.</span></span> <span data-ttu-id="51c0e-180">場合`host`は`null`以上<xref:System.String.Empty?displayProperty=nameWithType>、<xref:System.Net.Mail.SmtpClient.Host%2A>アプリケーションまたはマシン構成ファイルの設定を使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-180">If `host` is `null` or equal to <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.SmtpClient.Host%2A> is initialized using the settings in the application or machine configuration files.</span></span> <span data-ttu-id="51c0e-181">場合`port`ゼロ、<xref:System.Net.Mail.SmtpClient.Port%2A>アプリケーションまたはマシン構成ファイルの設定を使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-181">If `port` is zero, <xref:System.Net.Mail.SmtpClient.Port%2A> is initialized using the settings in the application or machine configuration files.</span></span> <span data-ttu-id="51c0e-182"><xref:System.Net.Mail.SmtpClient.Credentials%2A>アプリケーションまたはマシン構成ファイルで設定を使用してプロパティを初期化します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-182">The <xref:System.Net.Mail.SmtpClient.Credentials%2A> property is initialized using the settings in the application or machine configuration files.</span></span>  
  
 <span data-ttu-id="51c0e-183">詳細については、アプリケーションとマシンの構成ファイルを使用して、次を参照してください。 [ &lt;mailSettings&gt;要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-183">For more information about using the application and machine configuration files, see [&lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).</span></span> <span data-ttu-id="51c0e-184">使用して情報を指定した場合<xref:System.Net.Mail.SmtpClient>コンス トラクターまたはプロパティでは、この情報は、構成ファイル設定をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-184">If information is specified using <xref:System.Net.Mail.SmtpClient> constructors or properties, this information overrides the configuration file settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-185">次のコード例では、このコンス トラクターを呼び出すことを示します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-185">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="51c0e-186"><paramref name="port" /> は 0 未満には設定できません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-186"><paramref name="port" /> cannot be less than zero.</span></span></exception>
        <permission cref="T:System.Net.Mail.SmtpPermission"><span data-ttu-id="51c0e-187">ポートを指定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-187">to specify the port.</span></span> <span data-ttu-id="51c0e-188"><see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="51c0e-188">Associated enumeration: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Client certificates not used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51c0e-189">SSL (Secure Sockets Layer) 接続を確立するために使用する必要のある証明書を指定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-189">Specify which certificates should be used to establish the Secure Sockets Layer (SSL) connection.</span></span></summary>
        <value><span data-ttu-id="51c0e-190">1 つ以上のクライアント証明書を保持している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-190">An <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />, holding one or more client certificates.</span></span> <span data-ttu-id="51c0e-191">既定値は、構成ファイルのメール構成属性から派生します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-191">The default value is derived from the mail configuration attributes in a configuration file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-192">クライアント証明書は、既定では省略可能です。ただし、サーバーの構成では、クライアントが最初の接続のネゴシエーションの一部として有効な証明書を提示することが必要です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-192">Client certificates are, by default, optional; however, the server configuration might require that the client present a valid certificate as part of the initial connection negotiation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51c0e-193">フレームワークでは、SSL セッションを作成するときはキャッシュ、可能であれば、新しい要求のキャッシュされているセッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-193">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="51c0e-194">フレームワークでの最初の要素を使用するときに、SSL セッションを再利用する、 <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> (かどうかがある 1 つ)、匿名のセッションを再利用を試みる<xref:System.Net.Mail.SmtpClient.ClientCertificates%2A>が空です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-194">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> is empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-195">次のコード例では、SMTP サーバーで SSL 接続を確立し、電子メールを送信する接続を使用します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-195">The following code example establishes an SSL connection with the SMTP server and uses the connection to send an email.</span></span>  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentialsByHost Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentialsByHost Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentialsByHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentialsByHost ^ Credentials { System::Net::ICredentialsByHost ^ get(); void set(System::Net::ICredentialsByHost ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialsByHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51c0e-196">差出人の認証に使用する資格情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-196">Gets or sets the credentials used to authenticate the sender.</span></span></summary>
        <value><span data-ttu-id="51c0e-197">認証に使用する資格情報を表す <see cref="T:System.Net.ICredentialsByHost" />。資格情報が指定されなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-197">An <see cref="T:System.Net.ICredentialsByHost" /> that represents the credentials to use for authentication; or <see langword="null" /> if no credentials have been specified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-198">一部の SMTP サーバーは、サーバーは自身の代わりに電子メールを送信する前にクライアントを認証することが必要です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-198">Some SMTP servers require that the client be authenticated before the server will send email on its behalf.</span></span> <span data-ttu-id="51c0e-199">既定のネットワーク資格情報を使用するのに設定することができます、<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>に`true`このプロパティを設定する代わりにします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-199">To use your default network credentials, you can set the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> to `true` instead of setting this property.</span></span> <span data-ttu-id="51c0e-200">場合、<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>プロパティに設定されている`false,`で値を設定し、<xref:System.Net.Mail.SmtpClient.Credentials%2A>プロパティがサーバーに接続するときに資格情報に使用されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-200">If the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> property is set to `false,` then the value set in the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property will be used for the credentials when connecting to the server.</span></span> <span data-ttu-id="51c0e-201">場合、<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>プロパティに設定されている`false`と<xref:System.Net.Mail.SmtpClient.Credentials%2A>プロパティが設定されていない、し、メールが匿名でのサーバーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-201">If the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> property is set to `false` and the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property has not been set, then mail is sent to the server anonymously.</span></span>  
  
 <span data-ttu-id="51c0e-202">アプリケーションとマシンの構成ファイルを使用して資格情報を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-202">Credentials information can also be specified using the application and machine configuration files.</span></span> <span data-ttu-id="51c0e-203">詳細については、次を参照してください。 [ &lt;mailSettings&gt;要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-203">For more information, see [&lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).</span></span> <span data-ttu-id="51c0e-204">使用して情報を指定した場合、<xref:System.Net.Mail.SmtpClient.Credentials%2A>プロパティ、この情報は、構成ファイルの設定をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-204">If information is specified using the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property, this information overrides the configuration file settings.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="51c0e-205">基本認証の資格情報を指定する場合は、クリア テキストでサーバーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-205">If you provide credentials for basic authentication, they are sent to the server in clear text.</span></span> <span data-ttu-id="51c0e-206">これは、ことは、資格情報を表示、または他のユーザーを使用しているためにセキュリティ上の問題にもたらします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-206">This can present a security issue because your credentials can be seen, and then used by others.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-207">次のコード例では、電子メールを送信するために使用する資格情報の設定を示しています。</span><span class="sxs-lookup"><span data-stu-id="51c0e-207">The following code example demonstrates setting the credentials used to send an email.</span></span>  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51c0e-208">電子メールが送信中の場合、このプロパティの値は変更できません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-208">You cannot change the value of this property when an email is being sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeliveryFormat">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryFormat DeliveryFormat" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryFormat As SmtpDeliveryFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryFormat DeliveryFormat { System::Net::Mail::SmtpDeliveryFormat get(); void set(System::Net::Mail::SmtpDeliveryFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51c0e-209">電子メールを送信するために <see cref="T:System.Net.Mail.SmtpClient" /> によって使用される配信形式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-209">Gets or sets the delivery format used by <see cref="T:System.Net.Mail.SmtpClient" /> to send email.</span></span></summary>
        <value><span data-ttu-id="51c0e-210"><see cref="T:System.Net.Mail.SmtpDeliveryFormat" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-210">Returns <see cref="T:System.Net.Mail.SmtpDeliveryFormat" />.</span></span>  
  
 <span data-ttu-id="51c0e-211"><see cref="T:System.Net.Mail.SmtpClient" /> で使用される配信形式。</span><span class="sxs-lookup"><span data-stu-id="51c0e-211">The delivery format used by <see cref="T:System.Net.Mail.SmtpClient" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryMethod">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryMethod DeliveryMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryMethod As SmtpDeliveryMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryMethod DeliveryMethod { System::Net::Mail::SmtpDeliveryMethod get(); void set(System::Net::Mail::SmtpDeliveryMethod value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51c0e-212">送信メッセージの処理方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-212">Specifies how outgoing email messages will be handled.</span></span></summary>
        <value><span data-ttu-id="51c0e-213">電子メール メッセージの配信方法を示す <see cref="T:System.Net.Mail.SmtpDeliveryMethod" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-213">An <see cref="T:System.Net.Mail.SmtpDeliveryMethod" /> that indicates how email messages are delivered.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-214">配信方法は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-214">Delivery methods include:</span></span>  
  
-   <span data-ttu-id="51c0e-215">SMTP サーバー。</span><span class="sxs-lookup"><span data-stu-id="51c0e-215">An SMTP server.</span></span>  
  
-   <span data-ttu-id="51c0e-216">IIS を電子メールをピックアップ ディレクトリに移動し、メッセージを提供します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-216">Moving the email into the pickup directory for IIS, which then delivers the message.</span></span>  
  
-   <span data-ttu-id="51c0e-217">指定されたディレクトリに電子メールを移す<xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>別のアプリケーションによって後で配信します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-217">Moving the email to a directory specified by <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> for later delivery by another application.</span></span>  
  
 <span data-ttu-id="51c0e-218">このプロパティの既定値は、マシン内でも設定できますまたはアプリケーション構成ファイル。</span><span class="sxs-lookup"><span data-stu-id="51c0e-218">The default value for this property can also be set in a machine or application configuration file.</span></span> <span data-ttu-id="51c0e-219">加えられた変更、<xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>プロパティは、構成ファイルの設定をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-219">Any changes made to the <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> property override the configuration file settings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51c0e-220">QUIT メッセージを SMTP サーバーに送信し、TCP 接続を適切に終了して、<see cref="T:System.Net.Mail.SmtpClient" /> クラスの現在のインスタンスで使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-220">Sends a QUIT message to the SMTP server, gracefully ends the TCP connection, and releases all resources used by the current instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-221">現在のインスタンスによって確立された接続、<xref:System.Net.Mail.SmtpClient>アプリケーションが同じの SMTP サーバーに複数のメッセージを送信したい場合は、SMTP サーバーへのクラスを再利用可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-221">The connection established by the current instance of the <xref:System.Net.Mail.SmtpClient> class to the SMTP server may be re-used if an application wishes to send multiple messages to the same SMTP server.</span></span> <span data-ttu-id="51c0e-222">これは、認証や暗号化を使用する場合、SMTP サーバーへの接続を確立します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-222">This is particularly useful when authentication or encryption are used establish a connection to the SMTP server.</span></span> <span data-ttu-id="51c0e-223">認証および TLS セッションを確立するプロセスは、高コストな操作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-223">The process of authenticating and establishing a TLS session can be expensive operations.</span></span> <span data-ttu-id="51c0e-224">同じ SMTP サーバーに大量の電子メールを送信するときに、メッセージごとに接続を再確立するための要件は、パフォーマンスに大きな影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-224">A requirement to re-establish a connection for each message when sending a large quantity of email to the same SMTP server could have a significant impact on performance.</span></span> <span data-ttu-id="51c0e-225">大量の電子メール アプリケーションを送信する電子メール ステータスの更新、ニュースレターの配布、または電子メールのアラートの数があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-225">There are a number of high-volume email applications that send email status updates, newsletter distributions, or email alerts.</span></span> <span data-ttu-id="51c0e-226">また多くの電子メール クライアント アプリケーション オフライン モードをサポート ユーザーが SMTP サーバーへの接続が確立されたときに後で送信される多くの電子メール メッセージを組み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-226">Also many email client applications support an off-line mode where users can compose many email messages that are sent later when a connection to the SMTP server is established.</span></span> <span data-ttu-id="51c0e-227">特定の SMTP サーバー (インターネット サービス プロバイダーによって提供される) を他の SMTP サーバーにこの電子メールを転送するすべての SMTP メッセージを送信する電子メール クライアントの一般的なであります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-227">It is typical for an email client to send all SMTP messages to a specific SMTP server (provided by the Internet service provider) that then forwards this email to other SMTP servers.</span></span>  
  
 <span data-ttu-id="51c0e-228"><xref:System.Net.Mail.SmtpClient>クラスの実装は、すべてのメッセージを同じサーバーへの接続が再度確立のオーバーヘッドを回避できますに SMTP 接続をプールします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-228">The <xref:System.Net.Mail.SmtpClient> class implementation pools SMTP connections so that it can avoid the overhead of re-establishing a connection for every message to the same server.</span></span> <span data-ttu-id="51c0e-229">アプリケーションで再利用と同じことがあります<xref:System.Net.Mail.SmtpClient>同じの SMTP サーバーと多くの異なる SMTP サーバーには、多くのさまざまな電子メールを送信するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51c0e-229">An application may re-use the same <xref:System.Net.Mail.SmtpClient> object to send many different emails to the same SMTP server and to many different SMTP servers.</span></span> <span data-ttu-id="51c0e-230">その結果、アプリケーションが終了したときに決定する方法はありませんを使用して、<xref:System.Net.Mail.SmtpClient>をオブジェクトとそれをクリーンアップする必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-230">As a result, there is no way to determine when an application is finished using the <xref:System.Net.Mail.SmtpClient> object and it should be cleaned up.</span></span>  
  
 <span data-ttu-id="51c0e-231">SMTP セッションが終了し、クライアントが接続を終了する、ときにをサーバーに送信するメッセージがなくなったことを示す終了メッセージを送信にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-231">When an SMTP session is finished and the client wishes to terminate the connection, it must send a QUIT message to the server to indicate that it has no more messages to send.</span></span> <span data-ttu-id="51c0e-232">これにより、クライアントからの接続に関連付けられているリソースを解放して、クライアントによって送信されたメッセージを処理するサーバー。</span><span class="sxs-lookup"><span data-stu-id="51c0e-232">This allows the server to free up resources associated with the connection from the client and process the messages which were sent by the client.</span></span>  
  
 <span data-ttu-id="51c0e-233"><xref:System.Net.Mail.SmtpClient.Dispose%2A> TCP 接続を正常に終了後にメソッドが確立されたすべての接続と各 SMTP サーバーに終了メッセージを送信を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-233">The <xref:System.Net.Mail.SmtpClient.Dispose%2A> methods iterates through all established connections and send a QUIT message to each SMTP server, followed by gracefully ending the TCP connection.</span></span> <span data-ttu-id="51c0e-234">これらのメソッドも、アンマネージ リソースを解放して使用される、<xref:System.Net.Sockets.Socket>し、必要に応じてマネージ リソースを破棄します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-234">These methods also release the unmanaged resources used by the <xref:System.Net.Sockets.Socket> and optionally dispose of the managed resources.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51c0e-235">QUIT メッセージを SMTP サーバーに送信し、TCP 接続を適切に終了して、<see cref="T:System.Net.Mail.SmtpClient" /> クラスの現在のインスタンスで使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-235">Sends a QUIT message to the SMTP server, gracefully ends the TCP connection, and releases all resources used by the current instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-236">現在のインスタンスによって確立された接続、<xref:System.Net.Mail.SmtpClient>アプリケーションが同じの SMTP サーバーに複数のメッセージを送信したい場合は、SMTP サーバーへのクラスを再利用可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-236">The connection established by the current instance of the <xref:System.Net.Mail.SmtpClient> class to the SMTP server may be re-used if an application wishes to send multiple messages to the same SMTP server.</span></span> <span data-ttu-id="51c0e-237">これは、認証や暗号化を使用する場合、SMTP サーバーへの接続を確立します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-237">This is particularly useful when authentication or encryption are used establish a connection to the SMTP server.</span></span> <span data-ttu-id="51c0e-238">認証および TLS セッションを確立するプロセスは、高コストな操作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-238">The process of authenticating and establishing a TLS session can be expensive operations.</span></span> <span data-ttu-id="51c0e-239">同じ SMTP サーバーに大量の電子メールを送信するときに、メッセージごとに接続を再確立するための要件は、パフォーマンスに大きな影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-239">A requirement to re-establish a connection for each message when sending a large quantity of email to the same SMTP server could have a significant impact on performance.</span></span> <span data-ttu-id="51c0e-240">大量の電子メール アプリケーションを送信する電子メール ステータスの更新、ニュースレターの配布、または電子メールのアラートの数があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-240">There are a number of high-volume email applications that send email status updates, newsletter distributions, or email alerts.</span></span> <span data-ttu-id="51c0e-241">また多くの電子メール クライアント アプリケーション オフライン モードをサポート ユーザーが SMTP サーバーへの接続が確立されたときに後で送信される多くの電子メール メッセージを組み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-241">Also many email client applications support an off-line mode where users can compose many email messages that are sent later when a connection to the SMTP server is established.</span></span> <span data-ttu-id="51c0e-242">特定の SMTP サーバー (インターネット サービス プロバイダーによって提供される) を他の SMTP サーバーにこの電子メールを転送するすべての SMTP メッセージを送信する電子メール クライアントの一般的なであります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-242">It is typical for an email client to send all SMTP messages to a specific SMTP server (provided by the Internet service provider) that then forwards this email to other SMTP servers.</span></span>  
  
 <span data-ttu-id="51c0e-243"><xref:System.Net.Mail.SmtpClient>クラスの実装は、すべてのメッセージを同じサーバーへの接続が再度確立のオーバーヘッドを回避できますに SMTP 接続をプールします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-243">The <xref:System.Net.Mail.SmtpClient> class implementation pools SMTP connections so that it can avoid the overhead of re-establishing a connection for every message to the same server.</span></span> <span data-ttu-id="51c0e-244">アプリケーションで再利用と同じことがあります<xref:System.Net.Mail.SmtpClient>同じの SMTP サーバーと多くの異なる SMTP サーバーには、多くのさまざまな電子メールを送信するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51c0e-244">An application may re-use the same <xref:System.Net.Mail.SmtpClient> object to send many different emails to the same SMTP server and to many different SMTP servers.</span></span> <span data-ttu-id="51c0e-245">その結果、アプリケーションが終了したときに決定する方法はありませんを使用して、<xref:System.Net.Mail.SmtpClient>をオブジェクトとそれをクリーンアップする必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-245">As a result, there is no way to determine when an application is finished using the <xref:System.Net.Mail.SmtpClient> object and it should be cleaned up.</span></span>  
  
 <span data-ttu-id="51c0e-246">SMTP セッションが終了し、クライアントが接続を終了する、ときにをサーバーに送信するメッセージがなくなったことを示す終了メッセージを送信にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-246">When an SMTP session is finished and the client wishes to terminate the connection, it must send a QUIT message to the server to indicate that it has no more messages to send.</span></span> <span data-ttu-id="51c0e-247">これにより、クライアントからの接続に関連付けられているリソースを解放して、クライアントによって送信されたメッセージを処理するサーバー。</span><span class="sxs-lookup"><span data-stu-id="51c0e-247">This allows the server to free up resources associated with the connection from the client and process the messages which were sent by the client.</span></span>  
  
 <span data-ttu-id="51c0e-248">呼び出す、<xref:System.Net.Mail.SmtpClient.Dispose%2A>メソッドを<xref:System.Net.Mail.SmtpClient>非同期で実行されているオブジェクト<xref:System.Net.Mail.SmtpClient.SendAsync%2A>操作には、送信操作は [キャンセル] かのよう、<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-248">Calling the <xref:System.Net.Mail.SmtpClient.Dispose%2A> method on a <xref:System.Net.Mail.SmtpClient> object that is executing an asynchronous <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation will cancel the send operation as though the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method had been called.</span></span>  
  
 <span data-ttu-id="51c0e-249"><xref:System.Net.Mail.SmtpClient>クラスを持たない`Finalize`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-249">The <xref:System.Net.Mail.SmtpClient> class has no `Finalize` method.</span></span> <span data-ttu-id="51c0e-250">したがって、アプリケーションを呼び出す必要があります<xref:System.Net.Mail.SmtpClient.Dispose%2A>を明示的にリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-250">So an application must call <xref:System.Net.Mail.SmtpClient.Dispose%2A> to explicitly free up resources.</span></span>  
  
 <span data-ttu-id="51c0e-251"><xref:System.Net.Mail.SmtpClient.Dispose%2A>メソッドがで指定された SMTP サーバーに確立されているすべての接続を反復処理、<xref:System.Net.Mail.SmtpClient.Host%2A>プロパティと、TCP 接続を正常に終了後に終了メッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-251">The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method iterates through all established connections to the SMTP server specified in the <xref:System.Net.Mail.SmtpClient.Host%2A> property and sends a QUIT message followed by gracefully ending the TCP connection.</span></span> <span data-ttu-id="51c0e-252"><xref:System.Net.Mail.SmtpClient.Dispose%2A>メソッドは、基になるによって使用されるアンマネージ リソースも解放<xref:System.Net.Sockets.Socket>です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-252">The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method also releases the unmanaged resources used by the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="51c0e-253"><xref:System.Net.Mail.SmtpClient.Dispose%2A> を使い終わったら <xref:System.Net.Mail.SmtpClient> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-253">Call <xref:System.Net.Mail.SmtpClient.Dispose%2A> when you are finished using the <xref:System.Net.Mail.SmtpClient>.</span></span> <span data-ttu-id="51c0e-254"><xref:System.Net.Mail.SmtpClient.Dispose%2A> メソッドによって、<xref:System.Net.Mail.SmtpClient> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-254">The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method leaves the <xref:System.Net.Mail.SmtpClient> in an unusable state.</span></span> <span data-ttu-id="51c0e-255">呼び出した後<xref:System.Net.Mail.SmtpClient.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.Net.Mail.SmtpClient>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Net.Mail.SmtpClient>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="51c0e-255">After calling <xref:System.Net.Mail.SmtpClient.Dispose%2A>, you must release all references to the <xref:System.Net.Mail.SmtpClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Mail.SmtpClient> was occupying.</span></span>  
  
 <span data-ttu-id="51c0e-256">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-256">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51c0e-257"><xref:System.Net.Mail.SmtpClient.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.Net.Mail.SmtpClient> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="51c0e-257">Always call <xref:System.Net.Mail.SmtpClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Mail.SmtpClient>.</span></span> <span data-ttu-id="51c0e-258">それ以外の場合、ガベージ コレクターがメモリを再利用できるように、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-258">Otherwise, the resources it is using will not be freed so the garbage collector can reclaim the memory.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Does nothing at the moment.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="51c0e-259">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-259"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="51c0e-260">QUIT メッセージを SMTP サーバーに送信し、TCP 接続を適切に終了して、<see cref="T:System.Net.Mail.SmtpClient" /> クラスの現在のインスタンスで使用されているすべてのリソースを解放します。オプションでマネージ リソースも破棄します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-260">Sends a QUIT message to the SMTP server, gracefully ends the TCP connection, releases all resources used by the current instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class, and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-261">現在のインスタンスによって確立された接続、<xref:System.Net.Mail.SmtpClient>アプリケーションが同じの SMTP サーバーに複数のメッセージを送信したい場合は、SMTP サーバーへのクラスを再利用可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-261">The connection established by the current instance of the <xref:System.Net.Mail.SmtpClient> class to the SMTP server may be re-used if an application wishes to send multiple messages to the same SMTP server.</span></span> <span data-ttu-id="51c0e-262">これは、認証や暗号化を使用する場合、SMTP サーバーへの接続を確立します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-262">This is particularly useful when authentication or encryption are used establish a connection to the SMTP server.</span></span> <span data-ttu-id="51c0e-263">認証および TLS セッションを確立するプロセスは、高コストな操作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-263">The process of authenticating and establishing a TLS session can be expensive operations.</span></span> <span data-ttu-id="51c0e-264">同じ SMTP サーバーに大量の電子メールを送信するときに、メッセージごとに接続を再確立するための要件は、パフォーマンスに大きな影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-264">A requirement to re-establish a connection for each message when sending a large quantity of email to the same SMTP server could have a significant impact on performance.</span></span> <span data-ttu-id="51c0e-265">大量の電子メール アプリケーションを送信する電子メール ステータスの更新、ニュースレターの配布、または電子メールのアラートの数があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-265">There are a number of high-volume email applications that send email status updates, newsletter distributions, or email alerts.</span></span> <span data-ttu-id="51c0e-266">また多くの電子メール クライアント アプリケーション オフライン モードをサポート ユーザーが SMTP サーバーへの接続が確立されたときに後で送信される多くの電子メール メッセージを組み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-266">Also many email client applications support an off-line mode where users can compose many email messages that are sent later when a connection to the SMTP server is established.</span></span> <span data-ttu-id="51c0e-267">特定の SMTP サーバー (インターネット サービス プロバイダーによって提供される) を他の SMTP サーバーにこの電子メールを転送するすべての SMTP メッセージを送信する電子メール クライアントの一般的なであります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-267">It is typical for an email client to send all SMTP messages to a specific SMTP server (provided by the Internet service provider) that then forwards this email to other SMTP servers.</span></span>  
  
 <span data-ttu-id="51c0e-268"><xref:System.Net.Mail.SmtpClient>クラスの実装は、すべてのメッセージを同じサーバーへの接続が再度確立のオーバーヘッドを回避できますに SMTP 接続をプールします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-268">The <xref:System.Net.Mail.SmtpClient> class implementation pools SMTP connections so that it can avoid the overhead of re-establishing a connection for every message to the same server.</span></span> <span data-ttu-id="51c0e-269">アプリケーションで再利用と同じことがあります<xref:System.Net.Mail.SmtpClient>同じの SMTP サーバーと多くの異なる SMTP サーバーには、多くのさまざまな電子メールを送信するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51c0e-269">An application may re-use the same <xref:System.Net.Mail.SmtpClient> object to send many different emails to the same SMTP server and to many different SMTP servers.</span></span> <span data-ttu-id="51c0e-270">その結果、アプリケーションが終了したときに決定する方法はありませんを使用して、<xref:System.Net.Mail.SmtpClient>をオブジェクトとそれをクリーンアップする必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-270">As a result, there is no way to determine when an application is finished using the <xref:System.Net.Mail.SmtpClient> object and it should be cleaned up.</span></span>  
  
 <span data-ttu-id="51c0e-271">SMTP セッションが終了し、クライアントが接続を終了する、ときにをサーバーに送信するメッセージがなくなったことを示す終了メッセージを送信にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-271">When an SMTP session is finished and the client wishes to terminate the connection, it must send a QUIT message to the server to indicate that it has no more messages to send.</span></span> <span data-ttu-id="51c0e-272">これにより、クライアントからの接続に関連付けられているリソースを解放して、クライアントによって送信されたメッセージを処理するサーバー。</span><span class="sxs-lookup"><span data-stu-id="51c0e-272">This allows the server to free up resources associated with the connection from the client and process the messages which were sent by the client.</span></span>  
  
 <span data-ttu-id="51c0e-273">呼び出す、<xref:System.Net.Mail.SmtpClient.Dispose%2A>メソッドを<xref:System.Net.Mail.SmtpClient>非同期で実行されているオブジェクト<xref:System.Net.Mail.SmtpClient.SendAsync%2A>操作には、送信操作は [キャンセル] かのよう、<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-273">Calling the <xref:System.Net.Mail.SmtpClient.Dispose%2A> method on a <xref:System.Net.Mail.SmtpClient> object that is executing an asynchronous <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation will cancel the send operation as though the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method had been called.</span></span>  
  
 <span data-ttu-id="51c0e-274"><xref:System.Net.Mail.SmtpClient>クラスを持たない`Finalize`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-274">The <xref:System.Net.Mail.SmtpClient> class has no `Finalize` method.</span></span> <span data-ttu-id="51c0e-275">したがって、アプリケーションを呼び出す必要があります<xref:System.Net.Mail.SmtpClient.Dispose%2A>を明示的にリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-275">So an application must call <xref:System.Net.Mail.SmtpClient.Dispose%2A> to explicitly free up resources.</span></span>  
  
 <span data-ttu-id="51c0e-276"><xref:System.Net.Mail.SmtpClient.Dispose%2A>メソッドがで指定された SMTP サーバーに確立されているすべての接続を反復処理、<xref:System.Net.Mail.SmtpClient.Host%2A>プロパティと、TCP 接続を正常に終了後に終了メッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-276">The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method iterates through all established connections to the SMTP server specified in the <xref:System.Net.Mail.SmtpClient.Host%2A> property and sends a QUIT message followed by gracefully ending the TCP connection.</span></span> <span data-ttu-id="51c0e-277"><xref:System.Net.Mail.SmtpClient.Dispose%2A>メソッドによって使用されるアンマネージ リソースも解放、<xref:System.Net.Sockets.Socket>オプションでマネージ リソースを破棄します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-277">The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method also releases the unmanaged resources used by the <xref:System.Net.Sockets.Socket> and optionally disposes of the managed resources.</span></span>  
  
 <span data-ttu-id="51c0e-278"><xref:System.Net.Mail.SmtpClient.Dispose%2A> を使い終わったら <xref:System.Net.Mail.SmtpClient> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-278">Call <xref:System.Net.Mail.SmtpClient.Dispose%2A> when you are finished using the <xref:System.Net.Mail.SmtpClient>.</span></span> <span data-ttu-id="51c0e-279"><xref:System.Net.Mail.SmtpClient.Dispose%2A> メソッドによって、<xref:System.Net.Mail.SmtpClient> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-279">The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method leaves the <xref:System.Net.Mail.SmtpClient> in an unusable state.</span></span> <span data-ttu-id="51c0e-280">呼び出した後<xref:System.Net.Mail.SmtpClient.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.Net.Mail.SmtpClient>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Net.Mail.SmtpClient>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="51c0e-280">After calling <xref:System.Net.Mail.SmtpClient.Dispose%2A>, you must release all references to the <xref:System.Net.Mail.SmtpClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Mail.SmtpClient> was occupying.</span></span>  
  
 <span data-ttu-id="51c0e-281">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-281">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51c0e-282"><xref:System.Net.Mail.SmtpClient.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.Net.Mail.SmtpClient> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="51c0e-282">Always call <xref:System.Net.Mail.SmtpClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Mail.SmtpClient>.</span></span> <span data-ttu-id="51c0e-283">それ以外の場合、ガベージ コレクターがメモリを再利用できるように、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-283">Otherwise, the resources it is using will not be freed so the garbage collector can reclaim the memory.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51c0e-284"><see cref="T:System.Net.Mail.SmtpClient" /> が、接続を暗号化するために SSL (Secure Sockets Layer) を使用するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-284">Specify whether the <see cref="T:System.Net.Mail.SmtpClient" /> uses Secure Sockets Layer (SSL) to encrypt the connection.</span></span></summary>
        <value>
          <span data-ttu-id="51c0e-285"><see cref="T:System.Net.Mail.SmtpClient" /> が SSL を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-285"><see langword="true" /> if the <see cref="T:System.Net.Mail.SmtpClient" /> uses SSL; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="51c0e-286">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-286">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-287"><xref:System.Net.Mail.SmtpClient.EnableSsl%2A>プロパティは、指定した SMTP メール サーバーへのアクセスに SSL が使用されるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-287">The <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> property specifies whether SSL is used to access the specified SMTP mail server.</span></span>  
  
 <span data-ttu-id="51c0e-288">このプロパティの既定値は、マシン内でも設定できますまたはアプリケーション構成ファイル。</span><span class="sxs-lookup"><span data-stu-id="51c0e-288">The default value for this property can also be set in a machine or application configuration file.</span></span> <span data-ttu-id="51c0e-289">加えられた変更、<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>プロパティは、構成ファイルの設定をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-289">Any changes made to the <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> property override the configuration file settings.</span></span>  
  
 <span data-ttu-id="51c0e-290"><xref:System.Net.Mail.SmtpClient>クラスのみがサポート SMTP サービス拡張 SMTP のセキュリティで保護されたトランスポート層セキュリティ経由での RFC 3207 で定義されています。</span><span class="sxs-lookup"><span data-stu-id="51c0e-290">The <xref:System.Net.Mail.SmtpClient> class only supports the SMTP Service Extension for Secure SMTP over Transport Layer Security as defined in RFC 3207.</span></span> <span data-ttu-id="51c0e-291">このモードでは、SMTP セッションが暗号化されていないチャネルで開始し、STARTTLS コマンドがクライアントで SSL を使用してセキュリティで保護された通信に切り替えるには、サーバーに発行します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-291">In this mode, the SMTP session begins on an unencrypted channel, then a STARTTLS command is issued by the client to the server to switch to secure communication using SSL.</span></span> <span data-ttu-id="51c0e-292">詳細についてはインターネット技術標準化委員会 (IETF) によって発行された RFC 3207 を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51c0e-292">See RFC 3207 published by the Internet Engineering Task Force (IETF) for more information.</span></span>  
  
 <span data-ttu-id="51c0e-293">代替の接続方法は、任意のプロトコル コマンドを送信する前の SSL セッションの前払いの確立です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-293">An alternate connection method is where an SSL session is established up front before any protocol commands are sent.</span></span> <span data-ttu-id="51c0e-294">この接続方法は、SMTP と SSL と呼ばれることがあります、SMTP、SSL または SMTPS と既定では、ポート 465 を使用します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-294">This connection method is sometimes called SMTP/SSL, SMTP over SSL, or SMTPS and by default uses port 465.</span></span> <span data-ttu-id="51c0e-295">SSL を使用してこの代替の接続方法は現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-295">This alternate connection method using SSL is not currently supported.</span></span>  
  
 <span data-ttu-id="51c0e-296">使用することができます<xref:System.Net.Mail.SmtpClient.ClientCertificates%2A>SSL 接続を確立するためにクライアント証明書を使用する必要がありますを指定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-296">You can use <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> to specify which client certificates should be used to establish the SSL connection.</span></span> <span data-ttu-id="51c0e-297"><xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> SMTP サーバーによって提供される証明書を拒否することができます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-297">The <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> allows you to reject the certificate provided by the SMTP server.</span></span> <span data-ttu-id="51c0e-298"><xref:System.Net.ServicePointManager.SecurityProtocol%2A>プロパティでは、使用する SSL プロトコルのバージョンを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-298">The <xref:System.Net.ServicePointManager.SecurityProtocol%2A> property allows you to specify the version of the SSL protocol to use.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51c0e-299">場合、<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>プロパティに設定されている`true`、SMTP メール サーバーが、EHLO への応答で STARTTLS コマンドは、その後への呼び出しをアドバタイズしていないと、<xref:System.Net.Mail.SmtpClient.Send%2A>または<xref:System.Net.Mail.SmtpClient.SendAsync%2A>メソッドがスローされます、<xref:System.Net.Mail.SmtpException>です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-299">If the <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> property is set to `true`, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods will throw an <xref:System.Net.Mail.SmtpException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-300">次のコード例では、SMTP サーバーで SSL 接続を確立し、電子メールを送信する接続を使用します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-300">The following code example establishes an SSL connection with the SMTP server and uses the connection to send an email.</span></span>  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.EnableSsl" />
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51c0e-301">SMTP トランザクションで使用されるホストの名前または IP アドレスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-301">Gets or sets the name or IP address of the host used for SMTP transactions.</span></span></summary>
        <value><span data-ttu-id="51c0e-302">SMTP トランザクションで使用するコンピューターの名前または IP アドレスを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-302">A <see cref="T:System.String" /> that contains the name or IP address of the computer to use for SMTP transactions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-303">値、<xref:System.Net.Mail.SmtpClient.Host%2A>プロパティは、コンス トラクターまたは、アプリケーションまたはマシン構成ファイルを使用して設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-303">The value of the <xref:System.Net.Mail.SmtpClient.Host%2A> property can also be set using constructors or the application or machine configuration file.</span></span> <span data-ttu-id="51c0e-304">詳細については、次を参照してください。 [ &lt;mailSettings&gt;要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-304">For more information, see [&lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).</span></span>  
  
 <span data-ttu-id="51c0e-305">このプロパティを使用して情報を指定すると、この情報は、構成ファイル設定を上書きします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-305">If information is specified using this property, this information overrides the configuration file settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-306">次のコード例では、ホストと、アプリケーション構成ファイルで指定されたポートを使用して電子メール メッセージの送信を示します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-306">The following code example demonstrates sending an email message by using the host and port specified in an application configuration file.</span></span>  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51c0e-307">設定操作に指定された値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-307">The value specified for a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51c0e-308">設定操作として指定した値が <see cref="F:System.String.Empty" /> ("") です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-308">The value specified for a set operation is equal to <see cref="F:System.String.Empty" /> ("").</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51c0e-309">電子メールが送信中の場合、このプロパティの値は変更できません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-309">You cannot change the value of this property when an email is being sent.</span></span></exception>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Host" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Port" />
      </Docs>
    </Member>
    <Member MemberName="OnSendCompleted">
      <MemberSignature Language="C#" Value="protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSendCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSendCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSendCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="51c0e-310">イベント データを格納している <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-310">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="51c0e-311"><see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-311">Raises the <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-312">継承するクラス、<xref:System.Net.Mail.SmtpClient>クラスをオーバーライドして、<xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A>メソッドを追加するときの操作、<xref:System.Net.Mail.SmtpClient.SendCompleted>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-312">Classes that inherit from the <xref:System.Net.Mail.SmtpClient> class can override the <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> method to perform additional tasks when the <xref:System.Net.Mail.SmtpClient.SendCompleted> event occurs.</span></span>  
  
 <span data-ttu-id="51c0e-313"><xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> 派生クラスを処理することもできます<xref:System.Net.Mail.SmtpClient.SendCompleted>デリゲートを結び付けずにします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-313"><xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> also allows derived classes to handle <xref:System.Net.Mail.SmtpClient.SendCompleted> without attaching a delegate.</span></span> <span data-ttu-id="51c0e-314">これは、処理するための手法をお勧め<xref:System.Net.Mail.SmtpClient.SendCompleted>派生クラスでします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-314">This is the preferred technique for handling <xref:System.Net.Mail.SmtpClient.SendCompleted> in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="51c0e-315">オーバーライドする場合<see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />メソッドのデリゲートを登録するための受信、<see cref="E:System.Net.Mail.SmtpClient.SendCompleted" />イベント。</span><span class="sxs-lookup"><span data-stu-id="51c0e-315">When overriding <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> method so that registered delegates receive the <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PickupDirectoryLocation">
      <MemberSignature Language="C#" Value="public string PickupDirectoryLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PickupDirectoryLocation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property PickupDirectoryLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PickupDirectoryLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51c0e-316">ローカルの SMTP サーバーによって処理される電子メール メッセージをアプリケーションが保存するフォルダーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-316">Gets or sets the folder where applications save mail messages to be processed by the local SMTP server.</span></span></summary>
        <value><span data-ttu-id="51c0e-317">メール メッセージのピックアップ ディレクトリを指定する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-317">A <see cref="T:System.String" /> that specifies the pickup directory for mail messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-318">メール メッセージをピックアップ ディレクトリには、ローカル SMTP サーバー (存在する場合)、IIS などによって自動的に送信されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-318">Mail messages in the pickup directory are automatically sent by a local SMTP server (if present), such as IIS.</span></span>  
  
 <span data-ttu-id="51c0e-319">このプロパティの既定値は、マシン内でも設定できますまたはアプリケーション構成ファイル。</span><span class="sxs-lookup"><span data-stu-id="51c0e-319">The default value for this property can also be set in a machine or application configuration file.</span></span> <span data-ttu-id="51c0e-320">加えられた変更、<xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>プロパティは、構成ファイルの設定をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-320">Any changes made to the <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> property override the configuration file settings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51c0e-321">SMTP トランザクションで使用されるポートを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-321">Gets or sets the port used for SMTP transactions.</span></span></summary>
        <value><span data-ttu-id="51c0e-322">SMTP ホスト上のポート番号を格納している <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-322">An <see cref="T:System.Int32" /> that contains the port number on the SMTP host.</span></span> <span data-ttu-id="51c0e-323">既定値は 25 です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-323">The default value is 25.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-324">値、<xref:System.Net.Mail.SmtpClient.Port%2A>プロパティは、コンス トラクターまたは、アプリケーションまたはマシン構成ファイルを使用して設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-324">The value of the <xref:System.Net.Mail.SmtpClient.Port%2A> property can also be set using constructors or the application or machine configuration file.</span></span> <span data-ttu-id="51c0e-325">構成ファイルの使用の詳細については、次を参照してください。 [ &lt;mailSettings&gt;要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-325">For more information about using configuration files, see [&lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).</span></span> <span data-ttu-id="51c0e-326">このプロパティを使用して情報を指定すると、この情報は、構成ファイル設定を上書きします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-326">If information is specified using this property, this information overrides the configuration file settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-327">次のコード例では、ホストと、アプリケーション構成ファイルで指定されたポートを使用して電子メール メッセージの送信を示します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-327">The following code example demonstrates sending an email message by using the host and port specified in an application configuration file.</span></span>  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="51c0e-328">設定操作として指定した値が 0 以下です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-328">The value specified for a set operation is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51c0e-329">電子メールが送信中の場合、このプロパティの値は変更できません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-329">You cannot change the value of this property when an email is being sent.</span></span></exception>
        <permission cref="T:System.Net.Mail.SmtpPermission"><span data-ttu-id="51c0e-330">設定する、<see cref="P:System.Net.Mail.SmtpClient.Port" />プロパティです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-330">to set the <see cref="P:System.Net.Mail.SmtpClient.Port" /> property.</span></span> <span data-ttu-id="51c0e-331"><see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="51c0e-331">Associated enumeration: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</span></span></permission>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Port" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Host" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51c0e-332">電子メール メッセージを、配信用 SMTP サーバーに送信します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-332">Sends an email message to an SMTP server for delivery.</span></span> <span data-ttu-id="51c0e-333">これらのメソッドは、メッセージの送信中はブロックします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-333">These methods block while the message is being transmitted.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As MailMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Net::Mail::MailMessage ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="51c0e-334">送信するメッセージを格納した <see cref="T:System.Net.Mail.MailMessage" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-334">A <see cref="T:System.Net.Mail.MailMessage" /> that contains the message to send.</span></span></param>
        <summary><span data-ttu-id="51c0e-335">指定したメッセージを、配信用 SMTP サーバーに送信します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-335">Sends the specified message to an SMTP server for delivery.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-336">このメソッドは、電子メールの送信中にブロックします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-336">This method blocks while the email is transmitted.</span></span> <span data-ttu-id="51c0e-337">使用してタイムアウト値を指定することができます、<xref:System.Net.Mail.SmtpClient.Timeout%2A>プロパティを指定された時間が経過した後、メソッドを返すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-337">You can specify a time-out value using the <xref:System.Net.Mail.SmtpClient.Timeout%2A> property to ensure that the method returns after a specified amount of time elapses.</span></span>  
  
 <span data-ttu-id="51c0e-338">このメソッドを呼び出す前に、<xref:System.Net.Mail.SmtpClient.Host%2A>と<xref:System.Net.Mail.SmtpClient.Port%2A>プロパティ設定する必要がいずれかの構成ファイルによって、関連するプロパティを設定するかにこの情報を渡すことによって、<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-338">Before calling this method, the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties must be set either through the configuration files by setting the relevant properties, or by passing this information into the <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="51c0e-339">非同期的に送信されるメッセージがある場合は、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-339">You cannot call this method if there is a message being sent asynchronously.</span></span>  
  
 <span data-ttu-id="51c0e-340">SMTP ホストには、資格情報が必要とする場合は、このメソッドを呼び出す前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-340">If the SMTP host requires credentials, you must set them before calling this method.</span></span> <span data-ttu-id="51c0e-341">資格情報を指定するには、使用、<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>または<xref:System.Net.Mail.SmtpClient.Credentials%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-341">To specify credentials, use the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> or <xref:System.Net.Mail.SmtpClient.Credentials%2A> properties.</span></span>  
  
 <span data-ttu-id="51c0e-342">表示された場合、<xref:System.Net.Mail.SmtpException>例外、チェック、<xref:System.Net.Mail.SmtpException.StatusCode%2A>理由を操作を確認するプロパティが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-342">If you receive an <xref:System.Net.Mail.SmtpException> exception, check the <xref:System.Net.Mail.SmtpException.StatusCode%2A> property to find the reason the operation failed.</span></span> <span data-ttu-id="51c0e-343"><xref:System.Net.Mail.SmtpException>操作失敗した理由を示す内部例外を含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-343">The <xref:System.Net.Mail.SmtpException> can also contain an inner exception that indicates the reason the operation failed.</span></span>  
  
 <span data-ttu-id="51c0e-344">電子メールを使用して送信するときに<xref:System.Net.Mail.SmtpClient.Send%2A>を複数の受信者および SMTP サーバーとして有効な一部の受信者を受け取り、他のユーザーを拒否<xref:System.Net.Mail.SmtpClient.Send%2A>受理された受信者に電子メールを送信し、<xref:System.Net.Mail.SmtpFailedRecipientsException>がスローされます (または<xref:System.Net.Mail.SmtpFailedRecipientException>1 つだけの場合受信者は拒否されます)。</span><span class="sxs-lookup"><span data-stu-id="51c0e-344">When sending email using <xref:System.Net.Mail.SmtpClient.Send%2A> to multiple recipients and the SMTP server accepts some recipients as valid and rejects others, <xref:System.Net.Mail.SmtpClient.Send%2A> sends email to the accepted recipients and then a <xref:System.Net.Mail.SmtpFailedRecipientsException> is thrown (or a <xref:System.Net.Mail.SmtpFailedRecipientException> if only one recipient is rejected).</span></span> <span data-ttu-id="51c0e-345">A<xref:System.Net.Mail.SmtpFailedRecipientsException>拒否された受信者の一覧が含まれています。</span><span class="sxs-lookup"><span data-stu-id="51c0e-345">A <xref:System.Net.Mail.SmtpFailedRecipientsException> contains a list of the recipients that were rejected.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="51c0e-346">場合、<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>プロパティに設定されている`true`、SMTP メール サーバーが、EHLO への応答で STARTTLS コマンドは、その後への呼び出しをアドバタイズしていないと、<xref:System.Net.Mail.SmtpClient.Send%2A>または<xref:System.Net.Mail.SmtpClient.SendAsync%2A>メソッドがスローされます、<xref:System.Net.Mail.SmtpException>です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-346">If the <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> property is set to `true`, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods will throw an <xref:System.Net.Mail.SmtpException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-347">次のコード例では、このメソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-347">The following code example demonstrates using this method.</span></span>  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51c0e-348"><paramref name="message" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-348"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51c0e-349">この <see cref="T:System.Net.Mail.SmtpClient" /> は、<see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> の呼び出し中です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-349">This <see cref="T:System.Net.Mail.SmtpClient" /> has a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> call in progress.</span></span>  
  
 <span data-ttu-id="51c0e-350">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-350">-or-</span></span>  
  
 <span data-ttu-id="51c0e-351"><see cref="P:System.Net.Mail.MailMessage.From" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-351"><see cref="P:System.Net.Mail.MailMessage.From" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="51c0e-352">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-352">-or-</span></span>  
  
 <span data-ttu-id="51c0e-353"><see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" />、および <see cref="P:System.Net.Mail.MailMessage.Bcc" /> の各プロパティで受信者が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-353">There are no recipients specified in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, and <see cref="P:System.Net.Mail.MailMessage.Bcc" /> properties.</span></span>  
  
 <span data-ttu-id="51c0e-354">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-354">-or-</span></span>  
  
 <span data-ttu-id="51c0e-355"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティは <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> に設定され、<see cref="P:System.Net.Mail.SmtpClient.Host" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-355"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="51c0e-356">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-356">-or-</span></span>  
  
 <span data-ttu-id="51c0e-357"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティは <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> に設定され、<see cref="P:System.Net.Mail.SmtpClient.Host" /> は空の文字列 ("") と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-357"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is equal to the empty string ("").</span></span>  
  
 <span data-ttu-id="51c0e-358">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-358">-or-</span></span>  
  
 <span data-ttu-id="51c0e-359"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティが <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> に設定され、<see cref="P:System.Net.Mail.SmtpClient.Port" /> がゼロ、負の値、または 65,535 より大きい値になっています。</span><span class="sxs-lookup"><span data-stu-id="51c0e-359"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero, a negative number, or greater than 65,535.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="51c0e-360">このオブジェクトは破棄されました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-360">This object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Mail.SmtpException"><span data-ttu-id="51c0e-361">SMTP サーバーへの接続に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-361">The connection to the SMTP server failed.</span></span>  
  
 <span data-ttu-id="51c0e-362">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-362">-or-</span></span>  
  
 <span data-ttu-id="51c0e-363">認証に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-363">Authentication failed.</span></span>  
  
 <span data-ttu-id="51c0e-364">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-364">-or-</span></span>  
  
 <span data-ttu-id="51c0e-365">操作はタイムアウトしました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-365">The operation timed out.</span></span>  
  
 <span data-ttu-id="51c0e-366">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-366">-or-</span></span>  
  
 <span data-ttu-id="51c0e-367"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> は <see langword="true" /> に設定されますが、<see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティは <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> または <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-367"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true" /> but the <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> or <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.</span></span>  
  
 <span data-ttu-id="51c0e-368">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-368">-or-</span></span>  
  
 <span data-ttu-id="51c0e-369"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> が <see langword="true," /> に設定されていますが、SMTP メール サーバーが EHLO コマンドに対する応答で STARTTLS をアドバタイズしませんでした。</span><span class="sxs-lookup"><span data-stu-id="51c0e-369"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true," /> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</span></span></exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException"><span data-ttu-id="51c0e-370"><see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" />、または <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 内の 1 人の受信者に、<paramref name="message" /> を配信できませんでした。</span><span class="sxs-lookup"><span data-stu-id="51c0e-370">The <paramref name="message" /> could not be delivered to one of the recipients in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, or <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</span></span></exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException"><span data-ttu-id="51c0e-371"><see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" />、または <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 内の複数の受信者に、<paramref name="message" /> を配信できませんでした。</span><span class="sxs-lookup"><span data-stu-id="51c0e-371">The <paramref name="message" /> could not be delivered to two or more of the recipients in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, or <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</span></span></exception>
        <permission cref="T:System.Net.Mail.SmtpPermission"><span data-ttu-id="51c0e-372">SMTP サーバーに接続します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-372">to connect to the SMTP server.</span></span> <span data-ttu-id="51c0e-373">関連する列挙。 <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></span><span class="sxs-lookup"><span data-stu-id="51c0e-373">Associated enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string from, string recipients, string subject, string body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string recipients, string subject, string body) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, recipients As String, subject As String, body As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void Send (string from, string to, string subject, string body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string to, string subject, string body) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="netframework-4.7;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, to As String, subject As String, body As String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="from"><span data-ttu-id="51c0e-374">メッセージの差出人のアドレス情報を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-374">A <see cref="T:System.String" /> that contains the address information of the message sender.</span></span></param>
        <param name="recipients">To be added.</param>
        <param name="to">To be added.</param>
        <param name="subject"><span data-ttu-id="51c0e-375">メッセージの件名を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-375">A <see cref="T:System.String" /> that contains the subject line for the message.</span></span></param>
        <param name="body"><span data-ttu-id="51c0e-376">メッセージ本文を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-376">A <see cref="T:System.String" /> that contains the message body.</span></span></param>
        <summary><span data-ttu-id="51c0e-377">指定した電子メール メッセージを、配信用 SMTP サーバーに送信します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-377">Sends the specified email message to an SMTP server for delivery.</span></span> <span data-ttu-id="51c0e-378">メッセージの差出人、受信者、件名、およびメッセージ本文は、<see cref="T:System.String" /> オブジェクトを使用して指定されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-378">The message sender, recipients, subject, and message body are specified using <see cref="T:System.String" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-379">このメソッドは、電子メールの送信中にブロックします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-379">This method blocks while the email is transmitted.</span></span> <span data-ttu-id="51c0e-380">使用してタイムアウト値を指定することができます、<xref:System.Net.Mail.SmtpClient.Timeout%2A>プロパティを指定された時間が経過した後、メソッドを返すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-380">You can specify a time-out value using the <xref:System.Net.Mail.SmtpClient.Timeout%2A> property to ensure that the method returns after a specified amount of time elapses.</span></span>  
  
 <span data-ttu-id="51c0e-381">このメソッドを呼び出す前に、<xref:System.Net.Mail.SmtpClient.Host%2A>と<xref:System.Net.Mail.SmtpClient.Port%2A>プロパティ設定する必要がいずれかの構成ファイルによって、関連するプロパティを設定するかにこの情報を渡すことによって、<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-381">Before calling this method, the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties must be set either through the configuration files by setting the relevant properties, or by passing this information into the <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="51c0e-382">非同期的に送信されるメッセージがある場合は、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-382">You cannot call this method if there is a message being sent asynchronously.</span></span>  
  
 <span data-ttu-id="51c0e-383">SMTP ホストには、資格情報が必要とする場合は、このメソッドを呼び出す前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-383">If the SMTP host requires credentials, you must set them before calling this method.</span></span> <span data-ttu-id="51c0e-384">資格情報を指定するには、使用、<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>または<xref:System.Net.Mail.SmtpClient.Credentials%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-384">To specify credentials, use the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> or <xref:System.Net.Mail.SmtpClient.Credentials%2A> properties.</span></span>  
  
 <span data-ttu-id="51c0e-385">表示された場合、<xref:System.Net.Mail.SmtpException>例外、チェック、<xref:System.Net.Mail.SmtpException.StatusCode%2A>理由を操作を確認するプロパティが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-385">If you receive an <xref:System.Net.Mail.SmtpException> exception, check the <xref:System.Net.Mail.SmtpException.StatusCode%2A> property to find the reason the operation failed.</span></span> <span data-ttu-id="51c0e-386"><xref:System.Net.Mail.SmtpException>操作失敗した理由を示す内部例外を含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-386">The <xref:System.Net.Mail.SmtpException> can also contain an inner exception that indicates the reason the operation failed.</span></span>  

 <span data-ttu-id="51c0e-387">電子メールを使用して送信するときに<xref:System.Net.Mail.SmtpClient.Send%2A>を複数の受信者および SMTP サーバーとして有効な一部の受信者を受け取り、他のユーザーを拒否<xref:System.Net.Mail.SmtpClient.Send%2A>受理された受信者に電子メールを送信し、<xref:System.Net.Mail.SmtpFailedRecipientsException>がスローされます (または<xref:System.Net.Mail.SmtpFailedRecipientException>1 つだけの場合受信者は拒否されます)。</span><span class="sxs-lookup"><span data-stu-id="51c0e-387">When sending email using <xref:System.Net.Mail.SmtpClient.Send%2A> to multiple recipients and the SMTP server accepts some recipients as valid and rejects others, <xref:System.Net.Mail.SmtpClient.Send%2A> sends email to the accepted recipients and then a <xref:System.Net.Mail.SmtpFailedRecipientsException> is thrown (or a <xref:System.Net.Mail.SmtpFailedRecipientException> if only one recipient is rejected).</span></span> <span data-ttu-id="51c0e-388">A<xref:System.Net.Mail.SmtpFailedRecipientsException>拒否された受信者の一覧が含まれています。</span><span class="sxs-lookup"><span data-stu-id="51c0e-388">A <xref:System.Net.Mail.SmtpFailedRecipientsException> contains a list of the recipients that were rejected.</span></span>
 
> [!NOTE]
>  <span data-ttu-id="51c0e-389">場合、<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>プロパティに設定されている`true`、SMTP メール サーバーが、EHLO への応答で STARTTLS コマンドは、その後への呼び出しをアドバタイズしていないと、<xref:System.Net.Mail.SmtpClient.Send%2A>または<xref:System.Net.Mail.SmtpClient.SendAsync%2A>メソッドがスローされます、<xref:System.Net.Mail.SmtpException>です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-389">If the <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> property is set to `true`, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods will throw an <xref:System.Net.Mail.SmtpException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51c0e-390"><paramref name="from" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-390"><paramref name="from" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="51c0e-391">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-391">-or-</span></span>  
  
 <span data-ttu-id="51c0e-392"><paramref name="recipients" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-392"><paramref name="recipients" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="51c0e-393"><paramref name="from" /> は <see cref="F:System.String.Empty" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-393"><paramref name="from" /> is <see cref="F:System.String.Empty" />.</span></span>  
  
 <span data-ttu-id="51c0e-394">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-394">-or-</span></span>  
  
 <span data-ttu-id="51c0e-395"><paramref name="recipients" /> は <see cref="F:System.String.Empty" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-395"><paramref name="recipients" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51c0e-396">この <see cref="T:System.Net.Mail.SmtpClient" /> は、<see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> の呼び出し中です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-396">This <see cref="T:System.Net.Mail.SmtpClient" /> has a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> call in progress.</span></span>  
  
 <span data-ttu-id="51c0e-397">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-397">-or-</span></span>  
  
 <span data-ttu-id="51c0e-398"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティは <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> に設定され、<see cref="P:System.Net.Mail.SmtpClient.Host" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-398"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="51c0e-399">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-399">-or-</span></span>  
  
 <span data-ttu-id="51c0e-400"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティは <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> に設定され、<see cref="P:System.Net.Mail.SmtpClient.Host" /> は空の文字列 ("") と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-400"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is equal to the empty string ("").</span></span>  
  
 <span data-ttu-id="51c0e-401">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-401">-or-</span></span>  
  
 <span data-ttu-id="51c0e-402"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティが <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> に設定され、<see cref="P:System.Net.Mail.SmtpClient.Port" /> がゼロ、負の値、または 65,535 より大きい値になっています。</span><span class="sxs-lookup"><span data-stu-id="51c0e-402"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero, a negative number, or greater than 65,535.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="51c0e-403">このオブジェクトは破棄されました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-403">This object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Mail.SmtpException"><span data-ttu-id="51c0e-404">SMTP サーバーへの接続に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-404">The connection to the SMTP server failed.</span></span>  
  
 <span data-ttu-id="51c0e-405">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-405">-or-</span></span>  
  
 <span data-ttu-id="51c0e-406">認証に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-406">Authentication failed.</span></span>  
  
 <span data-ttu-id="51c0e-407">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-407">-or-</span></span>  
  
 <span data-ttu-id="51c0e-408">操作はタイムアウトしました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-408">The operation timed out.</span></span>  
  
 <span data-ttu-id="51c0e-409">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-409">-or-</span></span>  
  
 <span data-ttu-id="51c0e-410"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> は <see langword="true" /> に設定されますが、<see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティは <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> または <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-410"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true" /> but the <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> or <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.</span></span>  
  
 <span data-ttu-id="51c0e-411">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-411">-or-</span></span>  
  
 <span data-ttu-id="51c0e-412"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> が <see langword="true," /> に設定されていますが、SMTP メール サーバーが EHLO コマンドに対する応答で STARTTLS をアドバタイズしませんでした。</span><span class="sxs-lookup"><span data-stu-id="51c0e-412"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true," /> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</span></span></exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException"><span data-ttu-id="51c0e-413"><see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" />、または <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 内の 1 人の受信者に、<paramref name="message" /> を配信できませんでした。</span><span class="sxs-lookup"><span data-stu-id="51c0e-413">The <paramref name="message" /> could not be delivered to one of the recipients in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, or <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</span></span></exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException"><span data-ttu-id="51c0e-414"><see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" />、または <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 内の複数の受信者に、<paramref name="message" /> を配信できませんでした。</span><span class="sxs-lookup"><span data-stu-id="51c0e-414">The <paramref name="message" /> could not be delivered to two or more of the recipients in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, or <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</span></span></exception>
        <permission cref="T:System.Net.Mail.SmtpPermission"><span data-ttu-id="51c0e-415">SMTP サーバーに接続します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-415">to connect to the SMTP server.</span></span> <span data-ttu-id="51c0e-416">関連する列挙。 <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></span><span class="sxs-lookup"><span data-stu-id="51c0e-416">Associated enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51c0e-417">電子メールを送信します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-417">Sends an email message.</span></span> <span data-ttu-id="51c0e-418">これらのメソッドは、呼び出し元のスレッドをブロックしません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-418">These methods do not block the calling thread.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.Mail.MailMessage message, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.Mail.MailMessage message, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (message As MailMessage, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::Mail::MailMessage ^ message, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="51c0e-419">送信するメッセージを格納した <see cref="T:System.Net.Mail.MailMessage" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-419">A <see cref="T:System.Net.Mail.MailMessage" /> that contains the message to send.</span></span></param>
        <param name="userToken"><span data-ttu-id="51c0e-420">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51c0e-420">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="51c0e-421">指定した電子メール メッセージを、配信用 SMTP サーバーに送信します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-421">Sends the specified email message to an SMTP server for delivery.</span></span> <span data-ttu-id="51c0e-422">このメソッドは、呼び出し元のスレッドをブロックしません。また、呼び出し元は、操作の完了時に呼び出されるメソッドにオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-422">This method does not block the calling thread and allows the caller to pass an object to the method that is invoked when the operation completes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-423">電子メールが送信されたか、操作が取り消されたときに通知を受信するには、イベント ハンドラーを追加、<xref:System.Net.Mail.SmtpClient.SendCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="51c0e-423">To receive notification when the email has been sent or the operation has been canceled, add an event handler to the <xref:System.Net.Mail.SmtpClient.SendCompleted> event.</span></span> <span data-ttu-id="51c0e-424">取り消すことができます、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>操作を呼び出して、<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-424">You can cancel a <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation by calling the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method.</span></span>  
  
 <span data-ttu-id="51c0e-425">呼び出した後<xref:System.Net.Mail.SmtpClient.SendAsync%2A>、電子メール メッセージを使用して別の送信を試行する前に完了する電子メール送信を待つ必要があります<xref:System.Net.Mail.SmtpClient.Send%2A>または<xref:System.Net.Mail.SmtpClient.SendAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-425">After calling <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, you must wait for the email transmission to complete before attempting to send another email message using <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.</span></span>  
  
 <span data-ttu-id="51c0e-426">このメソッドを呼び出す前に、<xref:System.Net.Mail.SmtpClient.Host%2A>と<xref:System.Net.Mail.SmtpClient.Port%2A>関連のプロパティを設定してまたはこの情報を渡すことによって、構成ファイルによって設定する必要があります、<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-426">Before calling this method, the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> must be set through the configuration files by setting the relevant properties, or by passing this information into the <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="51c0e-427">SMTP ホストには、資格情報が必要とする場合は、このメソッドを呼び出す前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-427">If the SMTP host requires credentials, you must set them before calling this method.</span></span> <span data-ttu-id="51c0e-428">資格情報を指定するには、使用、<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>または<xref:System.Net.Mail.SmtpClient.Credentials%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-428">To specify credentials, use the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> or <xref:System.Net.Mail.SmtpClient.Credentials%2A> properties.</span></span>  
  
 <span data-ttu-id="51c0e-429">表示された場合、<xref:System.Net.Mail.SmtpException>例外、チェック、<xref:System.Net.Mail.SmtpException.StatusCode%2A>理由を操作を確認するプロパティが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-429">If you receive an <xref:System.Net.Mail.SmtpException> exception, check the <xref:System.Net.Mail.SmtpException.StatusCode%2A> property to find the reason the operation failed.</span></span> <span data-ttu-id="51c0e-430"><xref:System.Net.Mail.SmtpException>操作失敗した理由を示す内部例外を含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-430">The <xref:System.Net.Mail.SmtpException> can also contain an inner exception that indicates the reason the operation failed.</span></span>  
  
 <span data-ttu-id="51c0e-431">電子メールを使用して送信するときに<xref:System.Net.Mail.SmtpClient.SendAsync%2A>SMTP サーバーの一部の受信者として有効なを承諾して、他のユーザーを拒否する場合、複数の受信者に、<xref:System.Net.Mail.SmtpException>がスローされ、<xref:System.NullReferenceException>内部例外の。</span><span class="sxs-lookup"><span data-stu-id="51c0e-431">When sending email using <xref:System.Net.Mail.SmtpClient.SendAsync%2A> to multiple recipients, if the SMTP server accepts some recipients as valid and rejects others, a <xref:System.Net.Mail.SmtpException> is thrown with a <xref:System.NullReferenceException> for the inner exception.</span></span> <span data-ttu-id="51c0e-432">この場合、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>受信者のいずれかに電子メールの送信に失敗します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-432">If this occurs, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> fails to send email to any of the recipients.</span></span>  
  
 <span data-ttu-id="51c0e-433">アプリケーションは、確認するには、サーバー証明書の検証エラーを検出できます、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>に渡されたプロパティ、<xref:System.Net.Mail.SendCompletedEventHandler>を委任します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-433">Your application can detect a server certificate validation error by examining the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property passed into the <xref:System.Net.Mail.SendCompletedEventHandler> delegate.</span></span>  
  
 <span data-ttu-id="51c0e-434"><xref:System.Net.Mail.SmtpClient.Timeout%2A>プロパティは、何も影響はありません、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-434">The <xref:System.Net.Mail.SmtpClient.Timeout%2A> property does not have any effect on a <xref:System.Net.Mail.SmtpClient.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="51c0e-435">SMTP サーバーに送信するときにメール、ブロックを送信するのいずれかの操作を使用して、<xref:System.Net.Mail.SmtpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-435">To send mail and block while it is transmitted to the SMTP server, use one of the <xref:System.Net.Mail.SmtpClient.Send%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51c0e-436">場合、<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>プロパティに設定されている`true`、SMTP メール サーバーが、EHLO への応答で STARTTLS コマンドは、その後への呼び出しをアドバタイズしていないと、<xref:System.Net.Mail.SmtpClient.Send%2A>または<xref:System.Net.Mail.SmtpClient.SendAsync%2A>メソッドがスローされます、<xref:System.Net.Mail.SmtpException>です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-436">If the <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> property is set to `true`, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods will throw an <xref:System.Net.Mail.SmtpException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-437">次のコード例では、このメソッドを呼び出すことを示します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-437">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51c0e-438"><paramref name="message" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-438"><paramref name="message" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="51c0e-439">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-439">-or-</span></span>  
  
 <span data-ttu-id="51c0e-440"><see cref="P:System.Net.Mail.MailMessage.From" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-440"><see cref="P:System.Net.Mail.MailMessage.From" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51c0e-441">この <see cref="T:System.Net.Mail.SmtpClient" /> は、<see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> の呼び出し中です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-441">This <see cref="T:System.Net.Mail.SmtpClient" /> has a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> call in progress.</span></span>  
  
 <span data-ttu-id="51c0e-442">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-442">-or-</span></span>  
  
 <span data-ttu-id="51c0e-443"><see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" />、および <see cref="P:System.Net.Mail.MailMessage.Bcc" /> の各プロパティで受信者が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-443">There are no recipients specified in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, and <see cref="P:System.Net.Mail.MailMessage.Bcc" /> properties.</span></span>  
  
 <span data-ttu-id="51c0e-444">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-444">-or-</span></span>  
  
 <span data-ttu-id="51c0e-445"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティは <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> に設定され、<see cref="P:System.Net.Mail.SmtpClient.Host" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-445"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="51c0e-446">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-446">-or-</span></span>  
  
 <span data-ttu-id="51c0e-447"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティは <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> に設定され、<see cref="P:System.Net.Mail.SmtpClient.Host" /> は空の文字列 ("") と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-447"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is equal to the empty string ("").</span></span>  
  
 <span data-ttu-id="51c0e-448">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-448">-or-</span></span>  
  
 <span data-ttu-id="51c0e-449"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティが <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> に設定され、<see cref="P:System.Net.Mail.SmtpClient.Port" /> がゼロ、負の値、または 65,535 より大きい値になっています。</span><span class="sxs-lookup"><span data-stu-id="51c0e-449"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero, a negative number, or greater than 65,535.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="51c0e-450">このオブジェクトは破棄されました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-450">This object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Mail.SmtpException"><span data-ttu-id="51c0e-451">SMTP サーバーへの接続に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-451">The connection to the SMTP server failed.</span></span>  
  
 <span data-ttu-id="51c0e-452">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-452">-or-</span></span>  
  
 <span data-ttu-id="51c0e-453">認証に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-453">Authentication failed.</span></span>  
  
 <span data-ttu-id="51c0e-454">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-454">-or-</span></span>  
  
 <span data-ttu-id="51c0e-455">操作はタイムアウトしました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-455">The operation timed out.</span></span>  
  
 <span data-ttu-id="51c0e-456">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-456">-or-</span></span>  
  
 <span data-ttu-id="51c0e-457"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> は <see langword="true" /> に設定されますが、<see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティは <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> または <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-457"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true" /> but the <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> or <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.</span></span>  
  
 <span data-ttu-id="51c0e-458">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-458">-or-</span></span>  
  
 <span data-ttu-id="51c0e-459"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> が <see langword="true," /> に設定されていますが、SMTP メール サーバーが EHLO コマンドに対する応答で STARTTLS をアドバタイズしませんでした。</span><span class="sxs-lookup"><span data-stu-id="51c0e-459"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true," /> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</span></span>  
  
 <span data-ttu-id="51c0e-460">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-460">-or-</span></span>  
  
 <span data-ttu-id="51c0e-461"><see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" />、または <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 内の 1 人以上の受信者に、<paramref name="message" /> を配信できませんでした。</span><span class="sxs-lookup"><span data-stu-id="51c0e-461">The <paramref name="message" /> could not be delivered to one or more of the recipients in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, or <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</span></span></exception>
        <permission cref="T:System.Net.Mail.SmtpPermission"><span data-ttu-id="51c0e-462">SMTP サーバーに接続します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-462">to connect to the SMTP server.</span></span> <span data-ttu-id="51c0e-463">関連する列挙。 <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></span><span class="sxs-lookup"><span data-stu-id="51c0e-463">Associated enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string recipients, string subject, string body, object userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string recipients, string subject, string body, object userToken) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, recipients As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string to, string subject, string body, object userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string to, string subject, string body, object userToken) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="netframework-4.7;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, to As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
        <Parameter Name="userToken" Type="System.Object" Index="4" />
      </Parameters>
      <Docs>
        <param name="from"><span data-ttu-id="51c0e-464">メッセージの差出人のアドレス情報を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-464">A <see cref="T:System.String" /> that contains the address information of the message sender.</span></span></param>
        <param name="recipients">To be added.</param>
        <param name="to">To be added.</param>
        <param name="subject"><span data-ttu-id="51c0e-465">メッセージの件名を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-465">A <see cref="T:System.String" /> that contains the subject line for the message.</span></span></param>
        <param name="body"><span data-ttu-id="51c0e-466">メッセージ本文を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-466">A <see cref="T:System.String" /> that contains the message body.</span></span></param>
        <param name="userToken"><span data-ttu-id="51c0e-467">非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51c0e-467">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="51c0e-468">電子メール メッセージを、配信用 SMTP サーバーに送信します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-468">Sends an email message to an SMTP server for delivery.</span></span> <span data-ttu-id="51c0e-469">メッセージの差出人、受信者、件名、およびメッセージ本文は、<see cref="T:System.String" /> オブジェクトを使用して指定されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-469">The message sender, recipients, subject, and message body are specified using <see cref="T:System.String" /> objects.</span></span> <span data-ttu-id="51c0e-470">このメソッドは、呼び出し元のスレッドをブロックしません。また、呼び出し元は、操作の完了時に呼び出されるメソッドにオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-470">This method does not block the calling thread and allows the caller to pass an object to the method that is invoked when the operation completes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-471">電子メールが送信されたか、操作が取り消されたときに通知を受信するには、イベント ハンドラーを追加、<xref:System.Net.Mail.SmtpClient.SendCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="51c0e-471">To receive notification when the email has been sent or the operation has been canceled, add an event handler to the <xref:System.Net.Mail.SmtpClient.SendCompleted> event.</span></span> <span data-ttu-id="51c0e-472">取り消すことができます、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>操作を呼び出して、<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-472">You can cancel a <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation by calling the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method.</span></span>  
  
 <span data-ttu-id="51c0e-473">呼び出した後<xref:System.Net.Mail.SmtpClient.SendAsync%2A>、電子メール メッセージを使用して別の送信を試行する前に完了する電子メール送信を待つ必要があります<xref:System.Net.Mail.SmtpClient.Send%2A>または<xref:System.Net.Mail.SmtpClient.SendAsync%2A>です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-473">After calling <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, you must wait for the email transmission to complete before attempting to send another email message using <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.</span></span>  
  
 <span data-ttu-id="51c0e-474">このメソッドを呼び出す前に、<xref:System.Net.Mail.SmtpClient.Host%2A>と<xref:System.Net.Mail.SmtpClient.Port%2A>構成ファイルを使用するか、プロパティを設定またはこの情報を渡すことによって、プロパティを設定する必要があります、<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-474">Before calling this method, the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties must be set either through the configuration files or by setting the properties or passing this information into the <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="51c0e-475">SMTP ホストには、資格情報が必要とする場合は、このメソッドを呼び出す前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-475">If the SMTP host requires credentials, you must set them before calling this method.</span></span> <span data-ttu-id="51c0e-476">資格情報を指定するには、使用、<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>または<xref:System.Net.Mail.SmtpClient.Credentials%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-476">To specify credentials, use the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> or <xref:System.Net.Mail.SmtpClient.Credentials%2A> property.</span></span>  
  
 <span data-ttu-id="51c0e-477">表示された場合、<xref:System.Net.Mail.SmtpException>例外、チェック、<xref:System.Net.Mail.SmtpException.StatusCode%2A>理由を操作を確認するプロパティが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-477">If you receive an <xref:System.Net.Mail.SmtpException> exception, check the <xref:System.Net.Mail.SmtpException.StatusCode%2A> property to find the reason the operation failed.</span></span> <span data-ttu-id="51c0e-478"><xref:System.Net.Mail.SmtpException>操作失敗した理由を示す内部例外を含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-478">The <xref:System.Net.Mail.SmtpException> can also contain an inner exception that indicates the reason the operation failed.</span></span>  
  
 <span data-ttu-id="51c0e-479">電子メールを使用して送信するときに<xref:System.Net.Mail.SmtpClient.SendAsync%2A>SMTP サーバーの一部の受信者として有効なを承諾して、他のユーザーを拒否する場合、複数の受信者に、<xref:System.Net.Mail.SmtpException>がスローされ、<xref:System.NullReferenceException>内部例外の。</span><span class="sxs-lookup"><span data-stu-id="51c0e-479">When sending email using <xref:System.Net.Mail.SmtpClient.SendAsync%2A> to multiple recipients, if the SMTP server accepts some recipients as valid and rejects others, a <xref:System.Net.Mail.SmtpException> is thrown with a <xref:System.NullReferenceException> for the inner exception.</span></span> <span data-ttu-id="51c0e-480">この場合、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>受信者のいずれかに電子メールの送信に失敗します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-480">If this occurs, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> fails to send email to any of the recipients.</span></span>  
  
 <span data-ttu-id="51c0e-481">アプリケーションは、確認するには、サーバー証明書の検証エラーを検出できます、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>に渡されたプロパティ、<xref:System.Net.Mail.SendCompletedEventHandler>を委任します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-481">Your application can detect a server certificate validation error by examining the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property passed into the <xref:System.Net.Mail.SendCompletedEventHandler> delegate.</span></span>  
  
 <span data-ttu-id="51c0e-482"><xref:System.Net.Mail.SmtpClient.Timeout%2A>プロパティは、何も影響はありません、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-482">The <xref:System.Net.Mail.SmtpClient.Timeout%2A> property does not have any effect on a <xref:System.Net.Mail.SmtpClient.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="51c0e-483">SMTP サーバーに送信するときにメール、ブロックを送信するのいずれかの操作を使用して、<xref:System.Net.Mail.SmtpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-483">To send mail and block while it is transmitted to the SMTP server, use one of the <xref:System.Net.Mail.SmtpClient.Send%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51c0e-484">場合、<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>プロパティに設定されている`true`、SMTP メール サーバーが、EHLO への応答で STARTTLS コマンドは、その後への呼び出しをアドバタイズしていないと、<xref:System.Net.Mail.SmtpClient.Send%2A>または<xref:System.Net.Mail.SmtpClient.SendAsync%2A>メソッドがスローされます、<xref:System.Net.Mail.SmtpException>です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-484">If the <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> property is set to `true`, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods will throw an <xref:System.Net.Mail.SmtpException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51c0e-485"><paramref name="from" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-485"><paramref name="from" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="51c0e-486">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-486">-or-</span></span>  
  
 <span data-ttu-id="51c0e-487"><paramref name="recipient" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-487"><paramref name="recipient" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="51c0e-488"><paramref name="from" /> は <see cref="F:System.String.Empty" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-488"><paramref name="from" /> is <see cref="F:System.String.Empty" />.</span></span>  
  
 <span data-ttu-id="51c0e-489">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-489">-or-</span></span>  
  
 <span data-ttu-id="51c0e-490"><paramref name="recipient" /> は <see cref="F:System.String.Empty" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-490"><paramref name="recipient" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51c0e-491">この <see cref="T:System.Net.Mail.SmtpClient" /> は、<see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> の呼び出し中です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-491">This <see cref="T:System.Net.Mail.SmtpClient" /> has a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> call in progress.</span></span>  
  
 <span data-ttu-id="51c0e-492">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-492">-or-</span></span>  
  
 <span data-ttu-id="51c0e-493"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティは <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> に設定され、<see cref="P:System.Net.Mail.SmtpClient.Host" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-493"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="51c0e-494">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-494">-or-</span></span>  
  
 <span data-ttu-id="51c0e-495"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティは <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> に設定され、<see cref="P:System.Net.Mail.SmtpClient.Host" /> は空の文字列 ("") と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-495"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is equal to the empty string ("").</span></span>  
  
 <span data-ttu-id="51c0e-496">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-496">-or-</span></span>  
  
 <span data-ttu-id="51c0e-497"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティが <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> に設定され、<see cref="P:System.Net.Mail.SmtpClient.Port" /> がゼロ、負の値、または 65,535 より大きい値になっています。</span><span class="sxs-lookup"><span data-stu-id="51c0e-497"><see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero, a negative number, or greater than 65,535.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="51c0e-498">このオブジェクトは破棄されました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-498">This object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Mail.SmtpException"><span data-ttu-id="51c0e-499">SMTP サーバーへの接続に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-499">The connection to the SMTP server failed.</span></span>  
  
 <span data-ttu-id="51c0e-500">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-500">-or-</span></span>  
  
 <span data-ttu-id="51c0e-501">認証に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-501">Authentication failed.</span></span>  
  
 <span data-ttu-id="51c0e-502">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-502">-or-</span></span>  
  
 <span data-ttu-id="51c0e-503">操作はタイムアウトしました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-503">The operation timed out.</span></span>  
  
 <span data-ttu-id="51c0e-504">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-504">-or-</span></span>  
  
 <span data-ttu-id="51c0e-505"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> は <see langword="true" /> に設定されますが、<see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> プロパティは <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> または <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-505"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true" /> but the <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> or <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.</span></span>  
  
 <span data-ttu-id="51c0e-506">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-506">-or-</span></span>  
  
 <span data-ttu-id="51c0e-507"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> が <see langword="true," /> に設定されていますが、SMTP メール サーバーが EHLO コマンドに対する応答で STARTTLS をアドバタイズしませんでした。</span><span class="sxs-lookup"><span data-stu-id="51c0e-507"><see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true," /> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</span></span>  
  
 <span data-ttu-id="51c0e-508">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-508">-or-</span></span>  
  
 <span data-ttu-id="51c0e-509"><paramref name="recipients" /> 内の 1 人以上の受信者に、メッセージを配信できませんでした。</span><span class="sxs-lookup"><span data-stu-id="51c0e-509">The message could not be delivered to one or more of the recipients in <paramref name="recipients" />.</span></span></exception>
        <permission cref="T:System.Net.Mail.SmtpPermission"><span data-ttu-id="51c0e-510">SMTP サーバーに接続します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-510">To connect to the SMTP server.</span></span> <span data-ttu-id="51c0e-511">関連する列挙。 <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></span><span class="sxs-lookup"><span data-stu-id="51c0e-511">Associated enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51c0e-512">電子メール メッセージを送信する非同期操作をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-512">Cancels an asynchronous operation to send an email message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-513">使用して、<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>をキャンセルする方法、保留中<xref:System.Net.Mail.SmtpClient.SendAsync%2A>操作します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-513">Use the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method to cancel a pending <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation.</span></span> <span data-ttu-id="51c0e-514">メールの送信を待機している場合は、このメソッドは、メールの格納に使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-514">If there is mail waiting to be sent, this method releases resources used to store the mail.</span></span> <span data-ttu-id="51c0e-515">メールの送信を待機しているがない場合は、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-515">If there is no mail waiting to be sent, this method does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-516">次のコード例では、電子メール メッセージの非同期送信を示します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-516">The following code example demonstrates sending an email message asynchronously.</span></span> <span data-ttu-id="51c0e-517">ユーザーには、送信されていない場合、メールをキャンセルするオプションがあります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-517">The user has the option to cancel the mail if it has not been sent.</span></span>  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="51c0e-518">このオブジェクトは破棄されました。</span><span class="sxs-lookup"><span data-stu-id="51c0e-518">This object has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.Mail.SendCompletedEventHandler SendCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.Mail.SendCompletedEventHandler SendCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.Mail.SmtpClient.SendCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendCompleted As SendCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::Mail::SendCompletedEventHandler ^ SendCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SendCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51c0e-519">電子メールの非同期的な送信操作が完了した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-519">Occurs when an asynchronous email send operation completes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-520"><xref:System.Net.Mail.SmtpClient.SendCompleted>イベントは電子メール メッセージは送信操作の完了時に非同期的に送信するたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-520">The <xref:System.Net.Mail.SmtpClient.SendCompleted> event is raised each time an email message is sent asynchronously when the send operation completes.</span></span> <span data-ttu-id="51c0e-521">電子メール メッセージを非同期的に送信するを使用して、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-521">To send an email message asynchronously, use the <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="51c0e-522"><xref:System.Net.Mail.SendCompletedEventHandler> デリゲートは、<xref:System.Net.Mail.SmtpClient.SendCompleted>です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-522"><xref:System.Net.Mail.SendCompletedEventHandler> is the delegate for <xref:System.Net.Mail.SmtpClient.SendCompleted>.</span></span> <span data-ttu-id="51c0e-523"><xref:System.ComponentModel.AsyncCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています。</span><span class="sxs-lookup"><span data-stu-id="51c0e-523">The <xref:System.ComponentModel.AsyncCompletedEventArgs> class provides the event handler with event data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-524">次のコード例では、電子メール メッセージの非同期送信を示します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-524">The following code example demonstrates sending an email message asynchronously.</span></span>  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendMailAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51c0e-525">非同期操作として、指定したメッセージを配信用 SMTP サーバーに送信します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-525">Sends the specified message to an SMTP server for delivery as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (message As MailMessage) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::Net::Mail::MailMessage ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="51c0e-526">送信するメッセージを格納した <see cref="T:System.Net.Mail.MailMessage" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-526">A <see cref="T:System.Net.Mail.MailMessage" /> that contains the message to send.</span></span></param>
        <summary><span data-ttu-id="51c0e-527">非同期操作として、指定したメッセージを配信用 SMTP サーバーに送信します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-527">Sends the specified message to an SMTP server for delivery as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="51c0e-528"><see cref="T:System.Threading.Tasks.Task" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-528">Returns <see cref="T:System.Threading.Tasks.Task" />.</span></span>  
  
 <span data-ttu-id="51c0e-529">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51c0e-529">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-530">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-530">This operation will not block.</span></span> <span data-ttu-id="51c0e-531">返された<xref:System.Threading.Tasks.Task>> オブジェクトは、メッセージが送信された後、完了します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-531">The returned <xref:System.Threading.Tasks.Task>> object will complete once the message has been sent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51c0e-532"><paramref name="message" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-532"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(string from, string recipients, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (from As String, recipients As String, subject As String, body As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="recipients" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from"><span data-ttu-id="51c0e-533">メッセージの差出人のアドレス情報を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-533">A <see cref="T:System.String" /> that contains the address information of the message sender.</span></span></param>
        <param name="recipients"><span data-ttu-id="51c0e-534">メッセージの送信先のアドレスを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-534">A <see cref="T:System.String" /> that contains the addresses that the message is sent to.</span></span></param>
        <param name="subject"><span data-ttu-id="51c0e-535">メッセージの件名を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-535">A <see cref="T:System.String" /> that contains the subject line for the message.</span></span></param>
        <param name="body"><span data-ttu-id="51c0e-536">メッセージ本文を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-536">A <see cref="T:System.String" /> that contains the message body.</span></span></param>
        <summary><span data-ttu-id="51c0e-537">非同期操作として、指定したメッセージを配信用 SMTP サーバーに送信します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-537">Sends the specified message to an SMTP server for delivery as an asynchronous operation.</span></span> <span data-ttu-id="51c0e-538">である必要があります。</span><span class="sxs-lookup"><span data-stu-id="51c0e-538">.</span></span> <span data-ttu-id="51c0e-539">メッセージの差出人、受信者、件名、およびメッセージ本文は、<see cref="T:System.String" /> オブジェクトを使用して指定されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-539">The message sender, recipients, subject, and message body are specified using <see cref="T:System.String" /> objects.</span></span></summary>
        <returns><span data-ttu-id="51c0e-540"><see cref="T:System.Threading.Tasks.Task" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-540">Returns <see cref="T:System.Threading.Tasks.Task" />.</span></span>  
  
 <span data-ttu-id="51c0e-541">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51c0e-541">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-542">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-542">This operation will not block.</span></span> <span data-ttu-id="51c0e-543">返された<xref:System.Threading.Tasks.Task>> オブジェクトは、メッセージが送信された後、完了します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-543">The returned <xref:System.Threading.Tasks.Task>> object will complete once the message has been sent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51c0e-544"><paramref name="from" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-544"><paramref name="from" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="51c0e-545">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-545">-or-</span></span>  
  
 <span data-ttu-id="51c0e-546"><paramref name="recipients" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-546"><paramref name="recipients" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="51c0e-547"><paramref name="from" /> は <see cref="F:System.String.Empty" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-547"><paramref name="from" /> is <see cref="F:System.String.Empty" />.</span></span>  
  
 <span data-ttu-id="51c0e-548">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-548">-or-</span></span>  
  
 <span data-ttu-id="51c0e-549"><paramref name="recipients" /> は <see cref="F:System.String.Empty" />です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-549"><paramref name="recipients" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51c0e-550">電子メール メッセージの送信に使用するネットワーク接続を取得します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-550">Gets the network connection used to transmit the email message.</span></span></summary>
        <value><span data-ttu-id="51c0e-551">SMTP で使用される <see cref="T:System.Net.ServicePoint" /> プロパティに接続する <see cref="P:System.Net.Mail.SmtpClient.Host" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-551">A <see cref="T:System.Net.ServicePoint" /> that connects to the <see cref="P:System.Net.Mail.SmtpClient.Host" /> property used for SMTP.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-552">設定、<xref:System.Net.Mail.SmtpClient.ServicePoint%2A>プロパティは、アプリケーションまたはマシン構成ファイルで指定された既定値を使用して作成され、<xref:System.Net.ServicePointManager>クラスです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-552">The settings for the <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> property are created using defaults specified in the application or machine configuration files and the <xref:System.Net.ServicePointManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-553">次のコード例へのアクセスを示しています、<xref:System.Net.Mail.SmtpClient.ServicePoint%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-553">The following code example demonstrates accessing the <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> property.</span></span>  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="51c0e-554"><see cref="P:System.Net.Mail.SmtpClient.Host" /> が <see langword="null" /> または空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-554"><see cref="P:System.Net.Mail.SmtpClient.Host" /> is <see langword="null" /> or the empty string ("").</span></span>  
  
 <span data-ttu-id="51c0e-555">- または -</span><span class="sxs-lookup"><span data-stu-id="51c0e-555">-or-</span></span>  
  
 <span data-ttu-id="51c0e-556"><see cref="P:System.Net.Mail.SmtpClient.Port" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-556"><see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string TargetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51c0e-557">拡張保護を使用するときの認証に使用するサービス プロバイダー名 (SPN: Service Provider Name) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-557">Gets or sets the Service Provider Name (SPN) to use for authentication when using extended protection.</span></span></summary>
        <value><span data-ttu-id="51c0e-558">拡張保護に使用する SPN を指定する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-558">A <see cref="T:System.String" /> that specifies the SPN to use for extended protection.</span></span> <span data-ttu-id="51c0e-559">この SPN を既定値は、の形式が"SMTPSVC/&lt;ホスト&gt;"場所&lt;ホスト&gt;が SMTP メール サーバーのホスト名です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-559">The default value for this SPN is of the form "SMTPSVC/&lt;host&gt;" where &lt;host&gt; is the hostname of the SMTP mail server.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-560"><xref:System.Net.Mail.SmtpClient.TargetName%2A>プロパティは拡張保護を使用しているとき、アプリケーションの統合 Windows 認証で使用します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-560">The <xref:System.Net.Mail.SmtpClient.TargetName%2A> property is used with integrated Windows authentication when an application is using extended protection.</span></span> <span data-ttu-id="51c0e-561"><xref:System.Net.Mail.SmtpClient>に資格情報のチャレンジ応答サービス固有の情報 (SPN) が含まれてし、必要に応じて、チャネル固有の拡張保護を提供できますし、チャネル バインディング トークン (CBT) の情報です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-561">The <xref:System.Net.Mail.SmtpClient> can then provide extended protection to ensure that credential challenge responses contain service specific information (a SPN) and, if necessary, channel specific information (a channel binding token or CBT).</span></span> <span data-ttu-id="51c0e-562">資格情報の交換にこの情報は、サービスが不正に取得した資格情報のチャレンジ応答の悪用に対する保護を強化することです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-562">With this information in the credential exchanges, services are able to better protect against malicious use of credential challenge responses that might have been improperly obtained.</span></span>  
  
 <span data-ttu-id="51c0e-563">このプロパティの既定値は、マシン内でも設定できますまたはアプリケーション構成ファイル。</span><span class="sxs-lookup"><span data-stu-id="51c0e-563">The default value for this property can also be set in a machine or application configuration file.</span></span> <span data-ttu-id="51c0e-564">加えられた変更、<xref:System.Net.Mail.SmtpClient.TargetName%2A>プロパティは、構成ファイルの設定をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-564">Any changes made to the <xref:System.Net.Mail.SmtpClient.TargetName%2A> property override the configuration file settings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51c0e-565">同期的な <see cref="Overload:System.Net.Mail.SmtpClient.Send" /> 呼び出しがタイムアウトになるまでの時間を指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-565">Gets or sets a value that specifies the amount of time after which a synchronous <see cref="Overload:System.Net.Mail.SmtpClient.Send" /> call times out.</span></span></summary>
        <value><span data-ttu-id="51c0e-566">タイムアウト値 (ミリ秒) を指定する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-566">An <see cref="T:System.Int32" /> that specifies the time-out value in milliseconds.</span></span> <span data-ttu-id="51c0e-567">既定値は 100,000 ミリ秒 (100 秒) です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-567">The default value is 100,000 (100 seconds).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-568">既定では、呼び出し、<xref:System.Net.Mail.SmtpClient.Send%2A>操作が完了するまでブロックするメソッド。</span><span class="sxs-lookup"><span data-stu-id="51c0e-568">By default, calls to the <xref:System.Net.Mail.SmtpClient.Send%2A> method block until the operation completes.</span></span> <span data-ttu-id="51c0e-569">設定した場合、<xref:System.Net.Mail.SmtpClient.Timeout%2A>正の値にプロパティと<xref:System.Net.Mail.SmtpClient.Send%2A>、割り当てられた時間で操作を完了できません、<xref:System.Net.Mail.SmtpClient>クラスがスローされます、<xref:System.Net.Mail.SmtpException>例外。</span><span class="sxs-lookup"><span data-stu-id="51c0e-569">If you set the <xref:System.Net.Mail.SmtpClient.Timeout%2A> property to a positive value, and a <xref:System.Net.Mail.SmtpClient.Send%2A> operation cannot complete in the allotted time, the <xref:System.Net.Mail.SmtpClient> class throws an <xref:System.Net.Mail.SmtpException> exception.</span></span>  
  
 <span data-ttu-id="51c0e-570">メッセージを送信し、アプリケーションのスレッドで実行を継続してを使用して、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="51c0e-570">To send a message and continue executing in the application thread, use the <xref:System.Net.Mail.SmtpClient.SendAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-571">次のコード例は、取得とタイムアウト値の設定を示します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-571">The following code example demonstrates getting and setting the time-out value.</span></span>  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="51c0e-572">設定操作として指定した値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-572">The value specified for a set operation was less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51c0e-573">電子メールが送信中の場合、このプロパティの値は変更できません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-573">You cannot change the value of this property when an email is being sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.MonoNotSupported("no DefaultCredential support in Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51c0e-574"><see cref="T:System.Boolean" /> が要求と共に送信されるかどうかを制御する <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-574">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</span></span></summary>
        <value>
          <span data-ttu-id="51c0e-575">既定の資格情報を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51c0e-575"><see langword="true" /> if the default credentials are used; otherwise <see langword="false" />.</span></span> <span data-ttu-id="51c0e-576">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-576">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51c0e-577">一部の SMTP サーバーでは、サーバーが自身の代わりに電子メールを送信する前にクライアントを認証することが必要です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-577">Some SMTP servers require that the client be authenticated before the server sends email on its behalf.</span></span> <span data-ttu-id="51c0e-578">このプロパティを設定`true`ときにこの<xref:System.Net.Mail.SmtpClient>オブジェクト認証するか、サーバーによって要求された場合、現在ログオンしているユーザーの既定の資格情報を使用しています。</span><span class="sxs-lookup"><span data-stu-id="51c0e-578">Set this property to `true` when this <xref:System.Net.Mail.SmtpClient> object should, if requested by the server, authenticate using the default credentials of the currently logged on user.</span></span> <span data-ttu-id="51c0e-579">クライアント アプリケーションでは、これはほとんどのシナリオでは、目的の動作です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-579">For client applications, this is the desired behavior in most scenarios.</span></span>  
  
 <span data-ttu-id="51c0e-580">アプリケーションとマシンの構成ファイルを使用して資格情報を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-580">Credentials information can also be specified using the application and machine configuration files.</span></span> <span data-ttu-id="51c0e-581">詳細については、次を参照してください。 [ &lt;mailSettings&gt;要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)です。</span><span class="sxs-lookup"><span data-stu-id="51c0e-581">For more information, see [&lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).</span></span>  
  
 <span data-ttu-id="51c0e-582">場合、<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>プロパティに設定されている`false,`で値を設定し、<xref:System.Net.Mail.SmtpClient.Credentials%2A>プロパティがサーバーに接続するときに資格情報に使用されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-582">If the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> property is set to `false,` then the value set in the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property will be used for the credentials when connecting to the server.</span></span> <span data-ttu-id="51c0e-583">場合、<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>プロパティに設定されている`false`と<xref:System.Net.Mail.SmtpClient.Credentials%2A>プロパティが設定されていない、し、メールが匿名でのサーバーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-583">If the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> property is set to `false` and the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property has not been set, then mail is sent to the server anonymously.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="51c0e-584">基本認証の資格情報を指定する場合は、クリア テキストでサーバーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="51c0e-584">If you provide credentials for basic authentication, they are sent to the server in clear text.</span></span> <span data-ttu-id="51c0e-585">これは、ことは、資格情報を表示、または他のユーザーを使用しているためにセキュリティ上の問題にもたらします。</span><span class="sxs-lookup"><span data-stu-id="51c0e-585">This can present a security issue because your credentials can be seen, and then used by others.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51c0e-586">次のコード例では、このプロパティの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51c0e-586">The following code example demonstrates using this property.</span></span>  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51c0e-587">電子メールが送信中の場合、このプロパティの値は変更できません。</span><span class="sxs-lookup"><span data-stu-id="51c0e-587">You cannot change the value of this property when an email is being sent.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>