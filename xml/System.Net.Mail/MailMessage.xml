<Type Name="MailMessage" FullName="System.Net.Mail.MailMessage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aee49563a805b74c938c41fa4e779b06d3367930" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53333327" /></Metadata><TypeSignature Language="C#" Value="public class MailMessage : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailMessage extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailMessage" />
  <TypeSignature Language="VB.NET" Value="Public Class MailMessage&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailMessage : IDisposable" />
  <TypeSignature Language="F#" Value="type MailMessage = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.Net.Mail.SmtpClient" /> クラスを使用して送信できる電子メール メッセージを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インスタンス、<xref:System.Net.Mail.MailMessage>クラスが配信を使用するための SMTP サーバーに送信される電子メール メッセージの構築に使用される、<xref:System.Net.Mail.SmtpClient>クラス。  
  
 送信者、受信者、件名、および電子メール メッセージの本文をパラメーターとして指定することがあるときに、<xref:System.Net.Mail.MailMessage.%23ctor%2A>を初期化するために使用する<xref:System.Net.Mail.MailMessage>オブジェクト。 これらのパラメーターも設定することがまたはのプロパティを使用してアクセス、<xref:System.Net.Mail.MailMessage>オブジェクト。  
  
 次のプロパティを使用して、プライマリ メール メッセージのヘッダーとメッセージの要素を設定できます、<xref:System.Net.Mail.MailMessage>クラス。  
  
|一部またはメール ヘッダー|プロパティ|  
|-------------------------|--------------|  
|Attachments|<xref:System.Net.Mail.MailMessage.Attachments%2A>|  
|ブラインド カーボン コピー (BCC)|<xref:System.Net.Mail.MailMessage.Bcc%2A>|  
|カーボン コピー (CC)|<xref:System.Net.Mail.MailMessage.CC%2A>|  
|Content-Type|<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  
|カスタム ヘッダーのエンコード|<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  
|メッセージ本文|<xref:System.Net.Mail.MailMessage.Body%2A>|  
|優先度|<xref:System.Net.Mail.MailMessage.Priority%2A>|  
|受信者|<xref:System.Net.Mail.MailMessage.To%2A>|  
|返信先|<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  
|送信者|<xref:System.Net.Mail.MailMessage.From%2A>|  
|Subject|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
  
 <xref:System.Net.Mail.MailMessage>クラスを使用して、メッセージのヘッダー コレクションにアクセスするアプリケーションもできるように、<xref:System.Net.Mail.MailMessage.Headers%2A>プロパティ。 このコレクションは読み取り専用 (新しいコレクションを設定できません)、カスタム ヘッダーに追加できるか、このコレクションから削除します。 追加された任意のカスタム ヘッダーが含まれる場合に、<xref:System.Net.Mail.MailMessage>インスタンスが送信されます。 ヘッダーのみが具体的にはで、このコレクションに追加して、メッセージが送信される前に、<xref:System.Net.Mail.MailMessage.Headers%2A>プロパティは、コレクションに含まれます。 後に、<xref:System.Net.Mail.MailMessage>インスタンスが送信される、<xref:System.Net.Mail.MailMessage.Headers%2A>プロパティには関連付けのプロパティを使用して設定されているヘッダーも含まれます、<xref:System.Net.Mail.MailMessage>クラスまたはパラメーターを渡すときに、<xref:System.Net.Mail.MailMessage.%23ctor%2A>を初期化するために使用、<xref:System.Net.Mail.MailMessage>オブジェクト。  
  
 一部のメール ヘッダーは形式が正しくない場合、電子メール メッセージが破損する可能性があります。 ヘッダー コレクションのプロパティを使用して設定できるため、メール ヘッダー、<xref:System.Net.Mail.MailMessage>を使用してクラスを設定する必要がありますのみ、<xref:System.Net.Mail.MailMessage>クラスのプロパティまたはパラメーターとして渡すときに、<xref:System.Net.Mail.MailMessage.%23ctor%2A>を初期化します、<xref:System.Net.Mail.MailMessage>オブジェクト。 使用して、次のヘッダーの一覧を追加できませんが、<xref:System.Net.Mail.MailMessage.Headers%2A>プロパティと値の設定を使用してこれらのヘッダー、<xref:System.Net.Mail.MailMessage.Headers%2A>プロパティを破棄またはメッセージが送信されるときに上書きされます。  
  
-   [Bcc]  
  
-   Cc  
  
-   Content-ID  
  
-   コンテンツの場所  
  
-   コンテンツ転送エンコード  
  
-   Content-Type  
  
-   日付  
  
-   From  
  
-   重要度  
  
-   MIME バージョン  
  
-   優先度  
  
-   返信先  
  
-   送信者  
  
-   終了  
  
-   優先順位の X  
  
 アプリケーションが指定はしないかどうか、送信側の X ヘッダーを使用して、<xref:System.Net.Mail.MailMessage.Headers%2A>プロパティ、<xref:System.Net.Mail.MailMessage>クラスが作成、メッセージが送信されます。  
  
 使用して、<xref:System.Net.Mail.MailMessage.AlternateViews%2A>プロパティをさまざまな形式で電子メール メッセージのコピーを指定します。 たとえば、html 形式でメッセージを送信するも場合 HTML コンテンツを表示できない電子メール リーダーを使用して、受信者のいくつかの場合は、プレーン テキスト バージョンを提供します。 代替ビューでメッセージを作成する例を参照してください<xref:System.Net.Mail.MailMessage.AlternateViews%2A>します。  
  
 使用して、<xref:System.Net.Mail.MailMessage.Attachments%2A>電子メール メッセージに添付ファイルを追加するプロパティ。 ファイルが添付されたメッセージの作成を示す例を参照してください。<xref:System.Net.Mail.MailMessage.Attachments%2A>します。  
  
 電子メール メッセージをアセンブルするには、後に送信できますを使用して、<xref:System.Net.Mail.SmtpClient.Send%2A>または<xref:System.Net.Mail.SmtpClient.SendAsync%2A>メソッド。  
  
   
  
## Examples  
 次のコード例を作成して、添付ファイルを含む電子メール メッセージを送信することを示します。  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Net.Mail.MailMessage" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Net.Mail.MailMessage" /> クラスの空のインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 MailSettings のネットワーク要素の値に設定されてから[&lt;smtp&gt;要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md)存在します場合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (System.Net.Mail.MailAddress from, System.Net.Mail.MailAddress to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Mail.MailAddress from, class System.Net.Mail.MailAddress to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As MailAddress, to As MailAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::Net::Mail::MailAddress ^ from, System::Net::Mail::MailAddress ^ to);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : System.Net.Mail.MailAddress * System.Net.Mail.MailAddress -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.Net.Mail.MailAddress" />
        <Parameter Name="to" Type="System.Net.Mail.MailAddress" />
      </Parameters>
      <Docs>
        <param name="from">電子メール メッセージの差出人のアドレスを格納している <see cref="T:System.Net.Mail.MailAddress" />。</param>
        <param name="to">電子メール メッセージの受信者のアドレスを格納している <see cref="T:System.Net.Mail.MailAddress" />。</param>
        <summary><see cref="T:System.Net.Mail.MailMessage" /> クラスのオブジェクトを指定して、<see cref="T:System.Net.Mail.MailAddress" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.From%2A>を使用してプロパティを初期化`from`と<xref:System.Net.Mail.MailMessage.To%2A>を使用してプロパティを初期化`to`します。  
  
   
  
## Examples  
 次のコード例では、このコンス トラクターの呼び出しを示しています。  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> は <see langword="null" /> です。  
  
- または - 
 <paramref name="to" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.FormatException"><paramref name="from" /> または <paramref name="to" /> の形式が正しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (string from, string to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string from, string to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As String, to As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::String ^ from, System::String ^ to);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : string * string -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">電子メール メッセージの差出人のアドレスを格納している <see cref="T:System.String" />。</param>
        <param name="to">電子メール メッセージの受信者のアドレスを格納している <see cref="T:System.String" />。 複数の電子メール アドレスは、コンマ文字 (",") で区切る必要があります。</param>
        <summary><see cref="T:System.Net.Mail.MailMessage" /> クラスのオブジェクトを指定して、<see cref="T:System.String" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.From%2A>を使用してプロパティを初期化`from`と<xref:System.Net.Mail.MailMessage.To%2A>を使用してプロパティを初期化`to`します。  
  
   
  
## Examples  
 次のコード例では、このコンス トラクターの呼び出しを示しています。  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> は <see langword="null" /> です。  
  
- または - 
 <paramref name="to" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> が <see cref="F:System.String.Empty" /> ("") です。  
  
または 
 <paramref name="to" /> が <see cref="F:System.String.Empty" /> ("") です。</exception>
        <exception cref="T:System.FormatException"><paramref name="from" /> または <paramref name="to" /> の形式が正しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (string from, string to, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string from, string to, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As String, to As String, subject As String, body As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : string * string * string * string -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to, subject, body)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">電子メール メッセージの差出人のアドレスを格納している <see cref="T:System.String" />。</param>
        <param name="to">電子メール メッセージの受信者のアドレスを格納している <see cref="T:System.String" />。 複数の電子メール アドレスは、コンマ文字 (",") で区切る必要があります。</param>
        <param name="subject">件名のテキストを格納している <see cref="T:System.String" />。</param>
        <param name="body">メッセージ本文を格納している <see cref="T:System.String" />。</param>
        <summary><see cref="T:System.Net.Mail.MailMessage" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しいプロパティ<xref:System.Net.Mail.MailMessage>オブジェクトは次のように初期化されます。  
  
|パラメーター|プロパティ|  
|---------------|--------------|  
|`from`|<xref:System.Net.Mail.MailMessage.From%2A>|  
|`to`|<xref:System.Net.Mail.MailMessage.To%2A>|  
|`subject`|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
|`body`|<xref:System.Net.Mail.MailMessage.Body%2A>|  
  
 既定では、件名と内容と見なされますローカル コンピューターの設定に基づいて既定のエンコーディングを使用します。 使用して、<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>と<xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>プロパティをさまざまなエンコーディングを指定します。  
  
   
  
## Examples  
 次のコード例では、このコンス トラクターの呼び出しを示しています。  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> は <see langword="null" /> です。  
  
- または - 
 <paramref name="to" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> が <see cref="F:System.String.Empty" /> ("") です。  
  
または 
 <paramref name="to" /> が <see cref="F:System.String.Empty" /> ("") です。</exception>
        <exception cref="T:System.FormatException"><paramref name="from" /> または <paramref name="to" /> の形式が正しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="AlternateViews">
      <MemberSignature Language="C#" Value="public System.Net.Mail.AlternateViewCollection AlternateViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.AlternateViewCollection AlternateViews" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.AlternateViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlternateViews As AlternateViewCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::AlternateViewCollection ^ AlternateViews { System::Net::Mail::AlternateViewCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternateViews : System.Net.Mail.AlternateViewCollection" Usage="System.Net.Mail.MailMessage.AlternateViews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AlternateViewCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メッセージ本文の別形式の表示内容を格納するために使用する添付データのコレクションを取得します。</summary>
        <value>書き込み可能な <see cref="T:System.Net.Mail.AlternateViewCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Net.Mail.MailMessage.AlternateViews%2A>プロパティをさまざまな形式で電子メール メッセージのコピーを指定します。 たとえば、html 形式でメッセージを送信するも場合 HTML コンテンツを表示できない電子メール リーダーを使用して、受信者のいくつかの場合は、プレーン テキスト バージョンを提供します。  
  
 代替ビューを追加する、<xref:System.Net.Mail.MailMessage>オブジェクトを作成、 <xref:System.Net.Mail.Attachment> 、ビューのによって返されるコレクションに追加し、<xref:System.Net.Mail.MailMessage.AlternateViews%2A>します。 使用して、<xref:System.Net.Mail.MailMessage.Body%2A>テキスト バージョンを指定して使用するプロパティ、<xref:System.Net.Mail.MailMessage.AlternateViews%2A>ビューを他の MIME の種類を指定するコレクション。 使用して、<xref:System.Net.Mime.MediaTypeNames>クラスのメンバーを別のビューの MIME の種類を指定します。  
  
   
  
## Examples  
 次のコード例では、作成して、プレーン テキストと HTML の代替ビューによる電子メール メッセージの送信を示します。  
  
 [!code-cpp[NclMailSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#5)]
 [!code-csharp[NclMailSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#5)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="none" />
      </Docs>
    </Member>
    <Member MemberName="Attachments">
      <MemberSignature Language="C#" Value="public System.Net.Mail.AttachmentCollection Attachments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.AttachmentCollection Attachments" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Attachments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attachments As AttachmentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::AttachmentCollection ^ Attachments { System::Net::Mail::AttachmentCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attachments : System.Net.Mail.AttachmentCollection" Usage="System.Net.Mail.MailMessage.Attachments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AttachmentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メール メッセージに添付されるデータを格納するために使用する添付データのコレクションを取得します。</summary>
        <value>書き込み可能な <see cref="T:System.Net.Mail.AttachmentCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって返されるコレクションを使用して、<xref:System.Net.Mail.MailMessage.Attachments%2A>ファイルの内容など、添付ファイルを追加するプロパティを<xref:System.IO.Stream>、この<xref:System.Net.Mail.MailMessage>します。  
  
 作成、<xref:System.Net.Mail.Attachment>が含まれていますまたは、アタッチし、追加データを参照する、<xref:System.Net.Mail.Attachment>によって返されるコレクションに<xref:System.Net.Mail.MailMessage.Attachments%2A>します。  
  
   
  
## Examples  
 次のコード例では、作成して、ファイルが添付された電子メール メッセージの送信を示します。  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="Bcc">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection Bcc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection Bcc" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Bcc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bcc As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ Bcc { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bcc : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.Bcc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メール メッセージの BCC (blind carbon copy) 受信者を格納するアドレスのコレクションを取得します。</summary>
        <value>書き込み可能な <see cref="T:System.Net.Mail.MailAddressCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 電子メール メッセージの BCC 受信者を追加するには、作成、<xref:System.Net.Mail.MailAddress>の受信者のアドレス、およびによって返されるコレクションにそのオブジェクトを追加、<xref:System.Net.Mail.MailMessage.Bcc%2A>プロパティ。  
  
 受信者、電子メール メッセージを表示するときに、<xref:System.Net.Mail.MailMessage.Bcc%2A>アドレスは通常、表示されません。  
  
   
  
## Examples  
 次のコード例では、アドレスを追加することを示します、<xref:System.Net.Mail.MailMessage.Bcc%2A>アドレスのコレクション。  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public string Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Body" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Body { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Body : string with get, set" Usage="System.Net.Mail.MailMessage.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メッセージ本文を取得または設定します。</summary>
        <value>本文テキストを格納している <see cref="T:System.String" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mime.ContentType>の<xref:System.Net.Mail.MailMessage.Body%2A>コンテンツが"text/plain"です。 本文で使用されるエンコーディングを指定、<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>プロパティ。  
  
 使用して、本文の内容の代替ビューを指定するには、本文の内容を受信者の高度なプレゼンテーション オプションを提供する別の形式で使用できる場合、<xref:System.Net.Mail.MailMessage.AlternateViews%2A>プロパティ。 たとえば、アプリケーションは、プレーン テキストの本文とメッセージ本文の HTML バージョンの両方を送信することもできます。 HTML を表示できる電子メール リーダー提示できる本文の HTML バージョン、受信者に HTML を表示できないリーダーは、メッセージのプレーン テキスト バージョンが表示される代わりにします。  
  
   
  
## Examples  
 次のコード例は、設定を示します、<xref:System.Net.Mail.MailMessage.Body%2A>プロパティ。  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding BodyEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding BodyEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.BodyEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ BodyEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BodyEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.BodyEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メッセージ本文をエンコードするために使用されるエンコーディングを取得または設定します。</summary>
        <value><see cref="T:System.Text.Encoding" /> の内容に対して適用される <see cref="P:System.Net.Mail.MailMessage.Body" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定された値、<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>プロパティは、Content-type ヘッダーで文字セットのフィールドを設定します。 既定の文字セットは`"us-ascii"`します。  
  
 設定した場合、<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>プロパティを<xref:System.Text.Encoding.UTF8%2A>、 <xref:System.Text.Encoding.Unicode%2A>、または<xref:System.Text.Encoding.UTF32%2A>、フレームワークの選択、<xref:System.Net.Mime.TransferEncoding>の<xref:System.Net.Mime.TransferEncoding.Base64>この<xref:System.Net.Mail.MailMessage>します。  
  
   
  
## Examples  
 次のコード例では、UTF8 エンコーディングを使用するメール メッセージを作成するを示します。  
  
 [!code-cpp[NclMailAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#3)]
 [!code-csharp[NclMailAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#3)]
 [!code-vb[NclMailAsync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.HeadersEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.SubjectEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="BodyTransferEncoding">
      <MemberSignature Language="C#" Value="public System.Net.Mime.TransferEncoding BodyTransferEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mime.TransferEncoding BodyTransferEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.BodyTransferEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyTransferEncoding As TransferEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mime::TransferEncoding BodyTransferEncoding { System::Net::Mime::TransferEncoding get(); void set(System::Net::Mime::TransferEncoding value); };" />
      <MemberSignature Language="F#" Value="member this.BodyTransferEncoding : System.Net.Mime.TransferEncoding with get, set" Usage="System.Net.Mail.MailMessage.BodyTransferEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mime.TransferEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メッセージ本文をエンコードするために使用される転送エンコーディングを取得または設定します。</summary>
        <value><see cref="T:System.Net.Mime.TransferEncoding" /> の内容に適用される <see cref="P:System.Net.Mail.MailMessage.Body" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CC">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection CC { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection CC" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.CC" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CC As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ CC { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CC : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.CC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メール メッセージの CC (carbon copy) 受信者を格納するアドレスのコレクションを取得します。</summary>
        <value>書き込み可能な <see cref="T:System.Net.Mail.MailAddressCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 電子メール メッセージの CC 受信者を追加するには、作成、<xref:System.Net.Mail.MailAddress>受信者のアドレスし、によって返されるコレクションにそのオブジェクトを追加、<xref:System.Net.Mail.MailMessage.CC%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例では、アドレスを追加することを示します、<xref:System.Net.Mail.MailMessage.CC%2A>アドレスのコレクション。  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="DeliveryNotificationOptions">
      <MemberSignature Language="C#" Value="public System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.DeliveryNotificationOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryNotificationOptions As DeliveryNotificationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::DeliveryNotificationOptions DeliveryNotificationOptions { System::Net::Mail::DeliveryNotificationOptions get(); void set(System::Net::Mail::DeliveryNotificationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryNotificationOptions : System.Net.Mail.DeliveryNotificationOptions with get, set" Usage="System.Net.Mail.MailMessage.DeliveryNotificationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.DeliveryNotificationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メールの配信通知を取得または設定します。</summary>
        <value>このメッセージの配信通知を格納している <see cref="T:System.Net.Mail.DeliveryNotificationOptions" /> 値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Net.Mail.MailMessage" /> で使用したリソースを解放します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="mailMessage.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Net.Mail.MailMessage" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.Dispose%2A> メソッドは、<xref:System.Net.Mail.MailMessage> の使用が完了したときに呼び出します。 <xref:System.Net.Mail.MailMessage.Dispose%2A>メソッドによって、<xref:System.Net.Mail.MailMessage> は使用不可の状態になります。 <xref:System.Net.Mail.MailMessage.Dispose%2A>呼び出し後は、<xref:System.Net.Mail.MailMessage>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Net.Mail.MailMessage> へのすべての参照を解放する必要があります。 詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。  
  
> [!NOTE]
>  <xref:System.Net.Mail.MailMessage>への最後の参照を解放する前に、必ず<xref:System.Net.Mail.MailMessage.Dispose%2A>を呼び出してください。  
  
   
  
## Examples  
 次のコード例では、破棄を示します、<xref:System.Net.Mail.MailMessage>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="mailMessage.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary><see cref="T:System.Net.Mail.MailMessage" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、パブリック`Dispose()`メソッドと<xref:System.Object.Finalize%2A>メソッド。 `Dispose()` 保護された起動`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`します。 <xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`に設定`false`します。  
  
 ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Net.Mail.MailMessage>参照。 このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。 オーバーライドするときに<see langword="Dispose(Boolean)" />の事前に呼び出したで以前破棄されたオブジェクトを参照しないように注意する<see langword="Dispose" />します。 実装する方法についての詳細は<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。  
  
詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress From" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ From { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メールの差出人アドレスを取得または設定します。</summary>
        <value>差出人アドレス情報を格納している <see cref="T:System.Net.Mail.MailAddress" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アドレスが検証されないか、現在ログオンしているユーザーに関連付けられています。  
  
   
  
## Examples  
 値を設定するコード例を次に示します、<xref:System.Net.Mail.MailMessage.From%2A>プロパティ。  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.Mail.MailMessage.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メール メッセージで送信される電子メール ヘッダーを取得します。</summary>
        <value>A<see cref="T:System.Collections.Specialized.NameValueCollection" />電子メールのヘッダーを格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.Headers%2A>プロパティにより、アプリケーションがメッセージのヘッダー コレクションにアクセスします。 このコレクションは読み取り専用 (新しいコレクションを設定できません)、カスタム ヘッダーに追加できるか、このコレクションから削除します。 追加された任意のカスタム ヘッダーが含まれる場合に、<xref:System.Net.Mail.MailMessage>インスタンスが送信されます。 ヘッダーのみが具体的にはで、このコレクションに追加して、メッセージが送信される前に、<xref:System.Net.Mail.MailMessage.Headers%2A>プロパティは、コレクションに含まれます。 後に、<xref:System.Net.Mail.MailMessage>インスタンスが送信される、<xref:System.Net.Mail.MailMessage.Headers%2A>プロパティには関連付けのプロパティを使用して設定されているヘッダーも含まれます、<xref:System.Net.Mail.MailMessage>クラスまたはパラメーターを渡すときに、<xref:System.Net.Mail.MailMessage.%23ctor%2A>を初期化するために使用、<xref:System.Net.Mail.MailMessage>オブジェクト。  
  
 一部のメール ヘッダーは形式が正しくない場合、電子メール メッセージが破損する可能性があります。 ヘッダー コレクションのプロパティを使用して設定できるため、メール ヘッダー、<xref:System.Net.Mail.MailMessage>を使用してクラスを設定する必要がありますのみ、<xref:System.Net.Mail.MailMessage>クラスのプロパティまたはパラメーターとして渡すときに、<xref:System.Net.Mail.MailMessage.%23ctor%2A>を初期化します、<xref:System.Net.Mail.MailMessage>オブジェクト。 使用して、次のヘッダーの一覧を追加できませんが、<xref:System.Net.Mail.MailMessage.Headers%2A>プロパティと値の設定を使用してこれらのヘッダー、<xref:System.Net.Mail.MailMessage.Headers%2A>プロパティを破棄またはメッセージが送信されるときに上書きされます。  
  
-   [Bcc]  
  
-   Cc  
  
-   Content-ID  
  
-   コンテンツの場所  
  
-   コンテンツ転送エンコード  
  
-   Content-Type  
  
-   日付  
  
-   From  
  
-   重要度  
  
-   MIME バージョン  
  
-   優先度  
  
-   返信先  
  
-   送信者  
  
-   終了  
  
-   優先順位の X  
  
 アプリケーションが指定はしないかどうか、送信側の X ヘッダーを使用して、<xref:System.Net.Mail.MailMessage.Headers%2A>プロパティ、<xref:System.Net.Mail.MailMessage>クラスが作成、メッセージが送信されます。  
  
 送信者、受信者、件名、および電子メール メッセージの本文をパラメーターとして指定することがあるときに、<xref:System.Net.Mail.MailMessage.%23ctor%2A>を初期化するために使用する<xref:System.Net.Mail.MailMessage>オブジェクト。 これらのパラメーターも設定することがまたはのプロパティを使用してアクセス、<xref:System.Net.Mail.MailMessage>オブジェクト。  
  
 次のプロパティを使用して、プライマリ メール メッセージのヘッダーとメッセージの要素を設定できます、<xref:System.Net.Mail.MailMessage>クラス。  
  
|一部またはメール ヘッダー|プロパティ|  
|-------------------------|--------------|  
|Attachments|<xref:System.Net.Mail.MailMessage.Attachments%2A>|  
|ブラインド カーボン コピー (BCC)|<xref:System.Net.Mail.MailMessage.Bcc%2A>|  
|カーボン コピー (CC)|<xref:System.Net.Mail.MailMessage.CC%2A>|  
|Content-Type|<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  
|カスタム ヘッダーのエンコード|<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  
|メッセージ本文|<xref:System.Net.Mail.MailMessage.Body%2A>|  
|優先度|<xref:System.Net.Mail.MailMessage.Priority%2A>|  
|受信者|<xref:System.Net.Mail.MailMessage.To%2A>|  
|返信先|<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  
|送信者|<xref:System.Net.Mail.MailMessage.From%2A>|  
|Subject|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
  
   
  
## Examples  
 次のコード例では、メール メッセージのヘッダーを表示するを示します。  
  
 [!code-cpp[NclMailSync#24](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#24)]
 [!code-csharp[NclMailSync#24](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadersEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding HeadersEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding HeadersEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.HeadersEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property HeadersEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ HeadersEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeadersEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.HeadersEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メール メッセージのユーザー定義のカスタム ヘッダーに使用されるエンコーディングを取得または設定します。</summary>
        <value>この電子メール メッセージのユーザー定義のカスタム ヘッダーに使用するエンコーディング。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値、<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>プロパティの既定値<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>します。  
  
 SMTP メッセージ ヘッダーと本文の各部分で構成されます。 SMTP の IETF Rfc では、ヘッダーと ascii ボディ部分の名前を制限します。 ただし、IETF Rfc は、ヘッダーと本文部分の値の Unicode 文字を許可します。 特定の値で非 ASCII 文字が存在しない場合値がエンコード組み合わせを使用してバイト エンコーディングで文字のエンコーディング (UTF8 または例では、Shift JIS) 後に (<xref:System.Net.Mime.TransferEncoding.Base64>または<xref:System.Net.Mime.TransferEncoding.QuotedPrintable>など)。 結果は、ASCII 文字のみがネットワーク転送のストリームでは、通常は。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.BodyEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.SubjectEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="IsBodyHtml">
      <MemberSignature Language="C#" Value="public bool IsBodyHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBodyHtml" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.IsBodyHtml" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBodyHtml As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBodyHtml { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBodyHtml : bool with get, set" Usage="System.Net.Mail.MailMessage.IsBodyHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>電子メール メッセージの本文が HTML 形式かどうかを示す値を取得または設定します。</summary>
        <value><see langword="true" /> 場合は、メッセージ本文が html 形式です。else<see langword="false" />します。 既定値は、<see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.MailPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MailPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailPriority Priority { System::Net::Mail::MailPriority get(); void set(System::Net::Mail::MailPriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Net.Mail.MailPriority with get, set" Usage="System.Net.Mail.MailMessage.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メールの優先順位を取得または設定します。</summary>
        <value>このメッセージの優先順位を格納している <see cref="T:System.Net.Mail.MailPriority" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyTo">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress ReplyTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress ReplyTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.ReplyTo" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplyTo As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ ReplyTo { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyTo : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.ReplyTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use ReplyToList instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("ReplyTo is obsoleted for this type.  Please use ReplyToList instead which can accept multiple addresses. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>電子メール メッセージの ReplyTo アドレスを取得または設定します。</summary>
        <value><see cref="P:System.Net.Mail.MailMessage.ReplyTo" /> フィールドの値を示す MailAddress。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Net.Mail.MailMessage.ReplyTo%2A>プロパティ以外のアドレスを示すために、<xref:System.Net.Mail.MailMessage.From%2A>を使用してこのメッセージに返信するアドレス。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToList">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection ReplyToList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection ReplyToList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.ReplyToList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReplyToList As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ ReplyToList { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplyToList : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.ReplyToList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>電子メール メッセージの返信先のアドレスの一覧を取得します。</summary>
        <value>電子メール メッセージの返信先のアドレスの一覧。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Net.Mail.MailMessage.ReplyToList%2A>プロパティ以外のアドレスの一覧を示すために、<xref:System.Net.Mail.MailMessage.From%2A>を使用してこのメッセージに返信するアドレス。  
  
 <xref:System.Net.Mail.MailMessage.ReplyToList%2A>プロパティに置き換えられ、<xref:System.Net.Mail.MailMessage.ReplyTo%2A>プロパティのみに応答する単一のアドレスを許可します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sender">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress Sender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress Sender" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Sender" />
      <MemberSignature Language="VB.NET" Value="Public Property Sender As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ Sender { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sender : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.Sender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メール メッセージの差出人のアドレスを取得または設定します。</summary>
        <value>差出人のアドレス情報を格納している <see cref="T:System.Net.Mail.MailAddress" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 送信者のアドレスが検証されないか、現在ログオンしているユーザーに関連付けられています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Subject : string with get, set" Usage="System.Net.Mail.MailMessage.Subject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メールの件名を取得または設定します。</summary>
        <value>件名の内容を格納している <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、件名に使用するエンコーディングを指定、<xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例は、設定を示します、<xref:System.Net.Mail.MailMessage.Subject%2A>プロパティ。  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding SubjectEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding SubjectEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.SubjectEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property SubjectEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ SubjectEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SubjectEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.SubjectEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メール メッセージの件名の内容に使用されるエンコーディングを取得または設定します。</summary>
        <value><see cref="T:System.Text.Encoding" /> プロパティのエンコードに使用した <see cref="P:System.Net.Mail.MailMessage.Subject" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メール エージェントで、問題がある場合、<xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>の<xref:System.Text.Encoding.Unicode%2A>を使用して、<xref:System.Text.Encoding.UTF8%2A>します。  
  
   
  
## Examples  
 次のコード例は、設定を示します、<xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>プロパティ。  
  
 [!code-cpp[NclMailASync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#3)]
 [!code-csharp[NclMailASync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#3)]
 [!code-vb[NclMailASync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.BodyEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.HeadersEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection To { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection To" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.To" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property To As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ To { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.To : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メール メッセージの受信者を格納するアドレスのコレクションを取得します。</summary>
        <value>書き込み可能な <see cref="T:System.Net.Mail.MailAddressCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.To%2A>プロパティを使用して、電子メール メッセージの宛先のアドレスを指定します。 電子メール メッセージには、受信者を追加するには、作成、<xref:System.Net.Mail.MailAddress>の受信者のアドレス、および、このプロパティによって返されるコレクションにそのオブジェクトを追加します。  
  
   
  
## Examples  
 次のコード例は、設定を示します、<xref:System.Net.Mail.MailMessage.To%2A>プロパティ。  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
  </Members>
</Type>