<Type Name="MailAddress" FullName="System.Net.Mail.MailAddress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ee9865fb0d2fc07d396bbbbe05ce847637024795" />
    <Meta Name="ms.sourcegitcommit" Value="01f28caab7b3f23878dd07b402a8dd48b9478c8c" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="39139902" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MailAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class MailAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailAddress" />
  <TypeSignature Language="F#" Value="type MailAddress = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dcc75-101">電子メールの差出人または受信者のアドレスを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcc75-101">Represents the address of an electronic mail sender or recipient.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="dcc75-102"><xref:System.Net.Mail.MailAddress>クラスによって使用されます、<xref:System.Net.Mail.SmtpClient>と<xref:System.Net.Mail.MailMessage>電子メール メッセージのアドレス情報を格納するクラス。</span><span class="sxs-lookup"><span data-stu-id="dcc75-102">The <xref:System.Net.Mail.MailAddress> class is used by the <xref:System.Net.Mail.SmtpClient> and <xref:System.Net.Mail.MailMessage> classes to store address information for email messages.</span></span>  
  
<span data-ttu-id="dcc75-103">メール アドレスで構成を<xref:System.Net.Mail.MailAddress.User%2A>名、<xref:System.Net.Mail.MailAddress.Host%2A>名前し、必要に応じて、<xref:System.Net.Mail.MailAddress.DisplayName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-103">A mail address is composed of a <xref:System.Net.Mail.MailAddress.User%2A> name, <xref:System.Net.Mail.MailAddress.Host%2A> name and optionally, a <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span></span> <span data-ttu-id="dcc75-104"><xref:System.Net.Mail.MailAddress.DisplayName%2A>エンコードする場合に、非 ASCII 文字を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-104">The <xref:System.Net.Mail.MailAddress.DisplayName%2A> can contain non-ASCII characters if you encode them.</span></span>  
  
<span data-ttu-id="dcc75-105"><xref:System.Net.Mail.MailAddress>クラスは、次のメール アドレスの形式をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="dcc75-105">The <xref:System.Net.Mail.MailAddress> class supports the following mail address formats:</span></span>  
  
-   <span data-ttu-id="dcc75-106">単純なアドレス形式`user@host`します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-106">A simple address format of `user@host`.</span></span> <span data-ttu-id="dcc75-107">場合、<xref:System.Net.Mail.MailAddress.DisplayName%2A>が設定された場合、これは、メール アドレスの形式が生成されていません。</span><span class="sxs-lookup"><span data-stu-id="dcc75-107">If a <xref:System.Net.Mail.MailAddress.DisplayName%2A> is not set, this is the mail address format generated.</span></span>  
  
-   <span data-ttu-id="dcc75-108">標準の引用符で囲まれた表示名の形式`"display name" <user@host>`します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-108">A standard quoted display name format of `"display name" <user@host>`.</span></span> <span data-ttu-id="dcc75-109">場合、<xref:System.Net.Mail.MailAddress.DisplayName%2A>が設定された場合、生成された形式になります。</span><span class="sxs-lookup"><span data-stu-id="dcc75-109">If a <xref:System.Net.Mail.MailAddress.DisplayName%2A> is set, this is the format generated.</span></span>  
  
-   <span data-ttu-id="dcc75-110">山かっこ周囲に追加、<xref:System.Net.Mail.MailAddress.User%2A>名、<xref:System.Net.Mail.MailAddress.Host%2A>の名前`"display name" user@host`場合、これらは含まれません。</span><span class="sxs-lookup"><span data-stu-id="dcc75-110">Angle brackets are added around the <xref:System.Net.Mail.MailAddress.User%2A> name, <xref:System.Net.Mail.MailAddress.Host%2A> name for `"display name" user@host` if these are not included.</span></span>  
  
-   <span data-ttu-id="dcc75-111">周囲に引用符が追加されて、<xref:System.Net.Mail.MailAddress.DisplayName%2A>の`display name <user@host>`に含まれていないこれらの場合は、します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-111">Quotes are added around the <xref:System.Net.Mail.MailAddress.DisplayName%2A> for `display name <user@host>`, if these are not included.</span></span>  
  
-   <span data-ttu-id="dcc75-112">Unicode 文字ではサポートされて、<xref:System.Net.Mail.MailAddress.DisplayName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="dcc75-112">Unicode characters are supported in the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property.</span></span>  
  
-   <span data-ttu-id="dcc75-113">A<xref:System.Net.Mail.MailAddress.User%2A>引用符と名前。</span><span class="sxs-lookup"><span data-stu-id="dcc75-113">A <xref:System.Net.Mail.MailAddress.User%2A> name with quotes.</span></span> <span data-ttu-id="dcc75-114">たとえば、`"user name"@host` のようにします。</span><span class="sxs-lookup"><span data-stu-id="dcc75-114">For example, `"user name"@host`.</span></span>  
  
-   <span data-ttu-id="dcc75-115">連続して、末尾のドットをユーザー名。</span><span class="sxs-lookup"><span data-stu-id="dcc75-115">Consecutive and trailing dots in user names.</span></span> <span data-ttu-id="dcc75-116">たとえば、`user...name..@host` のようにします。</span><span class="sxs-lookup"><span data-stu-id="dcc75-116">For example, `user...name..@host`.</span></span>  
  
-   <span data-ttu-id="dcc75-117">ドメインをかっこで囲まれたリテラル。</span><span class="sxs-lookup"><span data-stu-id="dcc75-117">Bracketed domain literals.</span></span> <span data-ttu-id="dcc75-118">たとえば、`<user@[my domain]>` のようにします。</span><span class="sxs-lookup"><span data-stu-id="dcc75-118">For example, `<user@[my domain]>`.</span></span>  
  
-   <span data-ttu-id="dcc75-119">コメントです。</span><span class="sxs-lookup"><span data-stu-id="dcc75-119">Comments.</span></span> <span data-ttu-id="dcc75-120">たとえば、`(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)` のようにします。</span><span class="sxs-lookup"><span data-stu-id="dcc75-120">For example, `(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`.</span></span> <span data-ttu-id="dcc75-121">コメントは、伝送する前に削除されます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-121">Comments are removed before transmission.</span></span>  
  
<span data-ttu-id="dcc75-122">メール アドレスの一覧で要素を区切るコンマが使用されます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-122">A comma is used to separate elements in a list of mail addresses.</span></span> <span data-ttu-id="dcc75-123">その結果、リスト内の引用符なしの表示名にコンマを使用する必要がありますされません。</span><span class="sxs-lookup"><span data-stu-id="dcc75-123">As a result, a comma should not be used in unquoted display names in a list.</span></span> <span data-ttu-id="dcc75-124">次のメール アドレスは許可されます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-124">The following mail addresses would be allowed:</span></span>
  
`"John, Doe" <user@host>, "Bob, Smith" <user2@host>`  
  
<span data-ttu-id="dcc75-125">次のメール アドレスができませんでした。</span><span class="sxs-lookup"><span data-stu-id="dcc75-125">The following mail address would not be allowed:</span></span>  
  
`John, Doe <user@host>, Bob, Smith <user2@host>`  
  
<span data-ttu-id="dcc75-126">引用符で囲まれた文字列に引用符を埋め込むことができますが、エスケープする必要があります。</span><span class="sxs-lookup"><span data-stu-id="dcc75-126">Quotes can be embedded in a quoted string, but they must be escaped.</span></span> <span data-ttu-id="dcc75-127">次のメール アドレスは許可されます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-127">The following mail addresses would be allowed:</span></span>
  
`"John \"Jr\" Doe" <user@host>`  
  
`"\"John \\\"Jr\\\" Doe\" <user@host>"`  
  
<span data-ttu-id="dcc75-128">次のメール アドレスができませんでした。</span><span class="sxs-lookup"><span data-stu-id="dcc75-128">The following mail address would not be allowed:</span></span>  
  
`"John "Jr" Doe" <user@host>`  
  
<span data-ttu-id="dcc75-129">注引用符で囲まれた文字列 (またはコンマ) の開始の間のすべてのテキストと、アドレスが一部と見なされ、ユーザー名は、ときに、 <xref:System.Net.Mail.MailAddress.DisplayName%2A>、コメントなど。</span><span class="sxs-lookup"><span data-stu-id="dcc75-129">When the username is note quoted, all text between the start of the string (or comma) and the address are considered part of the <xref:System.Net.Mail.MailAddress.DisplayName%2A>, including comments.</span></span> <span data-ttu-id="dcc75-130">例:</span><span class="sxs-lookup"><span data-stu-id="dcc75-130">For example:</span></span>
  
`(non comment) unquoted display (non comment) name (non comment) <user@host>`
  
<span data-ttu-id="dcc75-131">ただし、<xref:System.Net.Mail.MailAddress>クラスが有効な他のメール サーバーは、メール アドレスをそのまま使用しないと、メール アドレスを受け入れます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-131">Although the <xref:System.Net.Mail.MailAddress> class accepts a mail address as valid, other mail servers may not accept the mail address.</span></span>  
  
<span data-ttu-id="dcc75-132"><xref:System.Net.Mail.MailAddress>クラスは、次のメール アドレスの形式をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="dcc75-132">The <xref:System.Net.Mail.MailAddress> class does not support the following mail address formats:</span></span>  
  
- <span data-ttu-id="dcc75-133">引用符で囲まれた、引用符なしの表示名を混合します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-133">Mixed quoted and unquoted display names.</span></span> <span data-ttu-id="dcc75-134">たとえば、`display "name" <user@host>` のようにします。</span><span class="sxs-lookup"><span data-stu-id="dcc75-134">For example, `display "name" <user@host>`.</span></span>
  
- <span data-ttu-id="dcc75-135">グループ、3.4、IETF によって発行された RFC 2822 で定義されています。</span><span class="sxs-lookup"><span data-stu-id="dcc75-135">Groups, as defined in RFC 2822 Section 3.4 published by the IETF.</span></span>  
  
- <span data-ttu-id="dcc75-136">古い形式のユーザー名の形式の`"user"."name"@host`、`user."name"@host`または`"user".name@host`します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-136">The obsolete user name formats of `"user"."name"@host`, `user."name"@host` or `"user".name@host`.</span></span>
  
   
  
## Examples  
<span data-ttu-id="dcc75-137">次のコード例に示しますを使用して電子メール メッセージの送信、 <xref:System.Net.Mail.SmtpClient>、 <xref:System.Net.Mail.MailAddress>、および<xref:System.Net.Mail.MailMessage>クラス。</span><span class="sxs-lookup"><span data-stu-id="dcc75-137">The following code example demonstrates sending an email message by using the <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Mail.MailAddress>, and <xref:System.Net.Mail.MailMessage> classes.</span></span>  
  
[!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
[!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcc75-138">
            <see cref="T:System.Net.Mail.MailAddress" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-138">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="dcc75-139">電子メール アドレスを格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-139">A <see cref="T:System.String" /> that contains an email address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcc75-140">アドレスを指定して、<see cref="T:System.Net.Mail.MailAddress" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-140">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc75-141">`address`アドレス山かっこで囲んだ場合に、パラメーターが表示名と関連付けられた電子メール アドレスを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-141">The `address` parameter can contain a display name and the associated email address if you enclose the address in angle brackets.</span></span> <span data-ttu-id="dcc75-142">例:</span><span class="sxs-lookup"><span data-stu-id="dcc75-142">For example:</span></span>  
  
 `"Tom Smith <tsmith@contoso.com>"`  
  
 <span data-ttu-id="dcc75-143">表示名と山かっこの間の空白が許可されます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-143">White space is permitted between the display name and the angle brackets.</span></span>  
  
 <span data-ttu-id="dcc75-144">次の表に、プロパティ値を<xref:System.Net.Mail.MailAddress>前の例のアドレスを使用して構築されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcc75-144">The following table shows the property values for a <xref:System.Net.Mail.MailAddress> object constructed using the preceding example address.</span></span>  
  
|<span data-ttu-id="dcc75-145">プロパティ</span><span class="sxs-lookup"><span data-stu-id="dcc75-145">Property</span></span>|<span data-ttu-id="dcc75-146">[値]</span><span class="sxs-lookup"><span data-stu-id="dcc75-146">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`"Tom Smith"`|  
|<xref:System.Net.Mail.MailAddress.Host%2A>|`"contoso.com"`|  
|<xref:System.Net.Mail.MailAddress.User%2A>|`"tsmith"`|  
|<xref:System.Net.Mail.MailAddress.Address%2A>|`"tsmith@contoso.com"`|  
  
   
  
## Examples  
 <span data-ttu-id="dcc75-147">次のコード例を作成するこのコンス トラクターを使用して、<xref:System.Net.Mail.MailAddress>オブジェクト、<xref:System.Net.Mail.MailMessage.Bcc%2A>電子メール メッセージの受信者。</span><span class="sxs-lookup"><span data-stu-id="dcc75-147">The following code example uses this constructor to create a <xref:System.Net.Mail.MailAddress> object for the <xref:System.Net.Mail.MailMessage.Bcc%2A> recipient of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dcc75-148">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-148">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dcc75-149">
            <paramref name="address" /> が <see cref="F:System.String.Empty" /> ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-149">
              <paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="dcc75-150">
            <paramref name="address" /> が、認識されている形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-150">
              <paramref name="address" /> is not in a recognized format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="dcc75-151">電子メール アドレスを格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-151">A <see cref="T:System.String" /> that contains an email address.</span>
          </span>
        </param>
        <param name="displayName">
          <span data-ttu-id="dcc75-152">
            <c>address</c> に関連付けられた表示名を格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-152">A <see cref="T:System.String" /> that contains the display name associated with <c>address</c>.</span>
          </span>
          <span data-ttu-id="dcc75-153">このパラメーターは、<see langword="null" /> に設定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-153">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcc75-154">アドレスと表示名を指定して、<see cref="T:System.Net.Mail.MailAddress" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-154">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address and display name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc75-155">表示名の先頭および末尾の空白が保持されます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-155">Leading and trailing white space in the display name is preserved.</span></span>  
  
 <span data-ttu-id="dcc75-156">場合`displayName`、非 ASCII 文字を含む iso 8859-1 文字のセットが使用、`displayName`エンコードします。</span><span class="sxs-lookup"><span data-stu-id="dcc75-156">If `displayName` contains non-ASCII characters, the iso-8859-1 character set is used for the `displayName` encoding.</span></span> <span data-ttu-id="dcc75-157">利用可能な RFC 1522 で説明が非 ASCII 文字をエンコード[ https://www.ietf.org/](https://www.ietf.org/)します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-157">Encoding non-ASCII characters is discussed in RFC 1522, which is available at [https://www.ietf.org/](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="dcc75-158">場合`address`、表示名を格納および`displayName`は`null`が等しくないと<xref:System.String.Empty?displayProperty=nameWithType>、`displayName`で指定された値よりも優先`address`します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-158">If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` overrides the value specified in `address`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc75-159">次のコード例はこのコンス トラクターを使用して作成する<xref:System.Net.Mail.MailAddress>送信者と受信者の電子メール メッセージのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="dcc75-159">The following code example uses this constructor to create <xref:System.Net.Mail.MailAddress> instances for the sender and recipient of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dcc75-160">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-160">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dcc75-161">
            <paramref name="address" /> が <see cref="F:System.String.Empty" /> ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-161">
              <paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="dcc75-162">
            <paramref name="address" /> が、認識されている形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-162">
              <paramref name="address" /> is not in a recognized format.</span>
          </span>
          <span data-ttu-id="dcc75-163">または、<paramref name="address" /> に非 ASCII 文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-163">-or-  <paramref name="address" /> contains non-ASCII characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName, class System.Text.Encoding displayNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String, displayNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName, System::Text::Encoding ^ displayNameEncoding);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string * System.Text.Encoding -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName, displayNameEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("We don't do anything with displayNameEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="dcc75-164">電子メール アドレスを格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-164">A <see cref="T:System.String" /> that contains an email address.</span>
          </span>
        </param>
        <param name="displayName">
          <span data-ttu-id="dcc75-165">
            <c>address</c> に関連付けられた表示名を格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-165">A <see cref="T:System.String" /> that contains the display name associated with <c>address</c>.</span>
          </span>
        </param>
        <param name="displayNameEncoding">
          <span data-ttu-id="dcc75-166">
            <c>displayName</c> で使用される文字セットを定義する <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-166">The <see cref="T:System.Text.Encoding" /> that defines the character set used for <c>displayName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcc75-167">アドレス、表示名、およびエンコーディングを指定して、<see cref="T:System.Net.Mail.MailAddress" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-167">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address, display name, and encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc75-168">表示名の先頭および末尾の空白が保持されます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-168">Leading and trailing white space in the display name is preserved.</span></span>  
  
 <span data-ttu-id="dcc75-169">場合`address`、表示名を格納および`displayName`は`null`が等しくないと<xref:System.String.Empty?displayProperty=nameWithType>、`displayName`で指定された値よりも優先`address`します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-169">If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` overrides the value specified in `address`.</span></span>  
  
 <span data-ttu-id="dcc75-170"><xref:System.Net.Mail.MailAddress.%23ctor%2A>場合メソッドはチェックしません、`displayName`パラメーターは有効です。</span><span class="sxs-lookup"><span data-stu-id="dcc75-170">The <xref:System.Net.Mail.MailAddress.%23ctor%2A> method does not check if the `displayName` parameter is valid.</span></span> <span data-ttu-id="dcc75-171">このメソッドでは表示されません周囲の引用符を削除します、<xref:System.Net.Mail.MailAddress.DisplayName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="dcc75-171">This method removes surrounding quotes not displayed by the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property.</span></span> <span data-ttu-id="dcc75-172">引用符は場合を除き、伝送する前に追加する<xref:System.Text.Encoding.ASCII%2A>または<xref:System.Text.Encoding.Unicode%2A>で指定された、`displayNameEncoding`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcc75-172">Quotes will be added before transmission, except where <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter.</span></span> <span data-ttu-id="dcc75-173">指定されたエンコーディング、`displayNameEncoding`パラメーターに適用される、<xref:System.Net.Mail.MailAddress.DisplayName%2A>伝送する前にプロパティ<xref:System.Text.Encoding.ASCII%2A>または<xref:System.Text.Encoding.Unicode%2A>で指定された、`displayNameEncoding`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="dcc75-173">The encoding specified in the `displayNameEncoding` parameter will be applied to the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property before transmission <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter.</span></span> <span data-ttu-id="dcc75-174"><xref:System.Text.Encoding.UTF8%2A> 指定されていない場合にエンコードする既定値。</span><span class="sxs-lookup"><span data-stu-id="dcc75-174"><xref:System.Text.Encoding.UTF8%2A> is the default encoding if none is specified.</span></span>  
  
 <span data-ttu-id="dcc75-175">サポートされているメール アドレスの形式の詳細については、次を参照してください。<xref:System.Net.Mail.MailAddress>します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-175">For more information on supported mail address formats, see <xref:System.Net.Mail.MailAddress>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc75-176">次のコード例はこのコンス トラクターを使用して作成する<xref:System.Net.Mail.MailAddress>電子メール メッセージの送信者のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="dcc75-176">The following code example uses this constructor to create <xref:System.Net.Mail.MailAddress> instances for the sender of an email message.</span></span>  
  
 [!code-cpp[NclMailASync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#2)]
 [!code-csharp[NclMailASync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#2)]
 [!code-vb[NclMailASync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dcc75-177">
            <paramref name="address" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-177">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="dcc75-178">または、<paramref name="displayName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-178">-or-  <paramref name="displayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dcc75-179">
            <paramref name="address" /> が <see cref="F:System.String.Empty" /> ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-179">
              <paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</span>
          </span>
          <span data-ttu-id="dcc75-180">または、<paramref name="displayName" /> が <see cref="F:System.String.Empty" /> ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-180">-or-  <paramref name="displayName" /> is <see cref="F:System.String.Empty" /> ("").</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="dcc75-181">
            <paramref name="address" /> が、認識されている形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-181">
              <paramref name="address" /> is not in a recognized format.</span>
          </span>
          <span data-ttu-id="dcc75-182">または、<paramref name="address" /> に非 ASCII 文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-182">-or-  <paramref name="address" /> contains non-ASCII characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : string" Usage="System.Net.Mail.MailAddress.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcc75-183">このインスタンスが作成されたときに指定された電子メール アドレスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-183">Gets the email address specified when this instance was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcc75-184">電子メール アドレスを格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-184">A <see cref="T:System.String" /> that contains the email address.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc75-185">このプロパティによって返される値は含まれません、<xref:System.Net.Mail.MailAddress.DisplayName%2A>情報。</span><span class="sxs-lookup"><span data-stu-id="dcc75-185">The value returned by this property does not include the <xref:System.Net.Mail.MailAddress.DisplayName%2A> information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc75-186">次のコード例では、電子メール メッセージの受信者のアドレスを表示します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-186">The following code example displays the address for an email message recipient.</span></span>  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Net.Mail.MailAddress.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcc75-187">このインスタンスが作成されたときに指定された表示名とアドレス情報で構成される表示名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-187">Gets the display name composed from the display name and address information specified when this instance was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcc75-188">表示名を格納している <see cref="T:System.String" />。このインスタンスが作成されたときに表示名情報が指定されなかった場合は <see cref="F:System.String.Empty" /> ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-188">A <see cref="T:System.String" /> that contains the display name; otherwise, <see cref="F:System.String.Empty" /> ("") if no display name information was specified when this instance was created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc75-189">非 ASCII 文字が含まれている表示名は、人間が判読できる形式で返されます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-189">Display names that contain non-ASCII characters are returned in human-readable form.</span></span> <span data-ttu-id="dcc75-190">使用して、<xref:System.Net.Mail.MailAddress.ToString%2A>のエンコード形式を取得するメソッド、<xref:System.Net.Mail.MailAddress.DisplayName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-190">Use the <xref:System.Net.Mail.MailAddress.ToString%2A> method to get the encoded form of the <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span></span>  
  
 <span data-ttu-id="dcc75-191">電子メールの読み取りに使用される一部のソフトウェア プログラムの表示、<xref:System.Net.Mail.MailAddress.DisplayName%2A>プロパティ値の代わりに、またはだけでなく、電子メール アドレス。</span><span class="sxs-lookup"><span data-stu-id="dcc75-191">Some software programs that are used to read email display the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property value instead of, or in addition to, the email address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc75-192">次のコード例が表示されます、<xref:System.Net.Mail.MailAddress.DisplayName%2A>電子メール メッセージの受信者。</span><span class="sxs-lookup"><span data-stu-id="dcc75-192">The following code example displays the <xref:System.Net.Mail.MailAddress.DisplayName%2A> for the recipient of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netframework-4.7;netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="mailAddress.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dcc75-193">現在のインスタンスと比較する <see cref="T:System.Net.Mail.MailAddress" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-193">A <see cref="T:System.Net.Mail.MailAddress" /> instance to compare to the current instance.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="dcc75-194">現在のインスタンスと比較する <see cref="T:System.Net.Mail.MailAddress" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-194">A <see cref="T:System.Net.Mail.MailAddress" /> instance to compare to the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcc75-195">2 つのメール アドレスを比較します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-195">Compares two mail addresses.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcc75-196">2 つのメール アドレスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-196">
              <see langword="true" /> if the two mail addresses are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="mailAddress.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcc75-197">メール アドレスのハッシュ値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-197">Returns a hash value for a mail address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcc75-198">整数ハッシュ値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-198">An integer hash value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc75-199"><xref:System.Net.Mail.MailAddress.GetHashCode%2A>メソッドは、メール アドレスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-199">The <xref:System.Net.Mail.MailAddress.GetHashCode%2A> method returns a hash code of the mail address.</span></span> <span data-ttu-id="dcc75-200">この値は、ハッシュ テーブル内のキーとして使用できます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-200">This value can be used as a key in hash tables.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : string" Usage="System.Net.Mail.MailAddress.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcc75-201">このインスタンスが作成されたときに指定されたアドレスのホスト部分を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-201">Gets the host portion of the address specified when this instance was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcc75-202">A<see cref="T:System.String" />の電子メールを受け入れるホスト コンピューターの名前を格納している、<see cref="P:System.Net.Mail.MailAddress.User" />プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-202">A <see cref="T:System.String" /> that contains the name of the host computer that accepts email for the <see cref="P:System.Net.Mail.MailAddress.User" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc75-203">一般的な電子メール アドレスには、ホストの文字列には次すべてにはが含まれています、"`@`"記号。</span><span class="sxs-lookup"><span data-stu-id="dcc75-203">In a typical email address, the host string includes all information following the "`@`" sign.</span></span> <span data-ttu-id="dcc75-204">たとえば、 `"tsmith@contoso.com"`、ホストが`"contoso.com"`します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-204">For example, in `"tsmith@contoso.com"`, the host is `"contoso.com"`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc75-205">次のコード例では、電子メール メッセージのコピー先が表示されます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-205">The following code example displays the destination of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="mailAddress.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcc75-206">このインスタンスの文字列形式を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-206">Returns a string representation of this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcc75-207">この <see cref="T:System.String" /> の内容を格納している <see cref="T:System.Net.Mail.MailAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-207">A <see cref="T:System.String" /> that contains the contents of this <see cref="T:System.Net.Mail.MailAddress" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc75-208">このメソッドによって返される文字列は、インスタンスが作成されたときに指定された文字列は必ずしも同じではありません。</span><span class="sxs-lookup"><span data-stu-id="dcc75-208">The string returned by this method is not necessarily identical to the string specified when the instance was created.</span></span> <span data-ttu-id="dcc75-209">場合、<xref:System.Net.Mail.MailAddress.DisplayName%2A>プロパティは`null`と等しくありません<xref:System.String.Empty?displayProperty=nameWithType>("")、<xref:System.Net.Mail.MailAddress.ToString%2A>次の構文を使用して文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-209">If the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property is not `null` and not equal to <xref:System.String.Empty?displayProperty=nameWithType> (""), <xref:System.Net.Mail.MailAddress.ToString%2A> returns a string composed using the following syntax:</span></span>  
  
 <span data-ttu-id="dcc75-210"><xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>></span><span class="sxs-lookup"><span data-stu-id="dcc75-210"><xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>></span></span>  
  
 <span data-ttu-id="dcc75-211">場合<xref:System.Net.Mail.MailAddress.DisplayName%2A>は`null`と等しいか<xref:System.String.Empty?displayProperty=nameWithType>、<xref:System.Net.Mail.MailAddress.ToString%2A>の値を返します、<xref:System.Net.Mail.MailAddress.Address%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="dcc75-211">If <xref:System.Net.Mail.MailAddress.DisplayName%2A> is `null` or is equal to <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.MailAddress.ToString%2A> returns the value of the <xref:System.Net.Mail.MailAddress.Address%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc75-212">次のコード例では、電子メール メッセージのコピー先が表示されます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-212">The following code example displays the destination of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public string User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string User" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ User { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : string" Usage="System.Net.Mail.MailAddress.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcc75-213">このインスタンスが作成されたときに指定されたアドレスからユーザー情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-213">Gets the user information from the address specified when this instance was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcc75-214">
            <see cref="T:System.String" /> のユーザー名の部分を格納している <see cref="P:System.Net.Mail.MailAddress.Address" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcc75-214">A <see cref="T:System.String" /> that contains the user name portion of the <see cref="P:System.Net.Mail.MailAddress.Address" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc75-215">一般的な電子メール アドレスには、ユーザー文字列には、上記のすべての情報が含まれる、"`@`"記号。</span><span class="sxs-lookup"><span data-stu-id="dcc75-215">In a typical email address, the user string includes all information preceding the "`@`" sign.</span></span> <span data-ttu-id="dcc75-216">たとえば、 `"tsmith@contoso.com"`、ユーザーが`"tsmith"`します。</span><span class="sxs-lookup"><span data-stu-id="dcc75-216">For example, in `"tsmith@contoso.com"`, the user is `"tsmith"`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc75-217">次のコード例では、電子メール メッセージのコピー先が表示されます。</span><span class="sxs-lookup"><span data-stu-id="dcc75-217">The following code example displays the destination of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>