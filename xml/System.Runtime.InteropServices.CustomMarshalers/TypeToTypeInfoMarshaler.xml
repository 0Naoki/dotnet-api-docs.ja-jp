<Type Name="TypeToTypeInfoMarshaler" FullName="System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c71c25fa3b359d2457fb84f8db9f45986317a8f8" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37470433" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeToTypeInfoMarshaler : System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeToTypeInfoMarshaler extends System.Object implements class System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeToTypeInfoMarshaler&#xA;Implements ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeToTypeInfoMarshaler : System::Runtime::InteropServices::ICustomMarshaler" />
  <TypeSignature Language="F#" Value="type TypeToTypeInfoMarshaler = class&#xA;    interface ICustomMarshaler" />
  <AssemblyInfo>
    <AssemblyName>CustomMarshalers</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ICustomMarshaler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="55d3e-101">アンマネージド <see langword="ITypeInfo" /> インターフェイスをマネージド <see cref="T:System.Type" /> クラスにマーシャリングし、マネージド <see cref="T:System.Type" /> クラスをアンマネージド <see langword="ITypeInfo" /> インターフェイスにマーシャリングします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="55d3e-101">Marshals the unmanaged <see langword="ITypeInfo" /> interface to the managed <see cref="T:System.Type" /> class, and marshals the managed <see cref="T:System.Type" /> class to the unmanaged <see langword="ITypeInfo" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55d3e-102">`ITypeInfo` .NET 型がエクスポートされたタイプ ライブラリ内に表示されるメタデータに基づいていますが公開されるインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="55d3e-102">The `ITypeInfo` interface exposed for a .NET type is based on the metadata that would appear in an exported type library.</span></span> <span data-ttu-id="55d3e-103">同様に、<xref:System.Type>のインスタンスが公開される、`ITypeInfo`インターフェイス インポートされたアセンブリ内に表示されるメタデータに基づいています。</span><span class="sxs-lookup"><span data-stu-id="55d3e-103">Likewise, the <xref:System.Type> instance exposed for an `ITypeInfo` interface is based on the metadata that would appear in an imported assembly.</span></span>  
  
 <span data-ttu-id="55d3e-104">タイプ ライブラリ インポーター (Tlbimp.exe) マーク`ITypeInfo`と適切なパラメーター<xref:System.Runtime.InteropServices.MarshalAsAttribute>で、<xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler>列挙型のメンバーを使用する署名を変換するときに`ITypeInfo`パラメーターを使用する署名を<xref:System.Type>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="55d3e-104">The Type Library Importer (Tlbimp.exe) marks `ITypeInfo` parameters with the appropriate <xref:System.Runtime.InteropServices.MarshalAsAttribute> with the <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler> enumeration member when converting signatures that use `ITypeInfo` parameters to signatures that use <xref:System.Type> parameters.</span></span>  
  
 <span data-ttu-id="55d3e-105">同じ変換機能は、呼び出すことによって、カスタム マーシャラーなく実行できます<xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A>と<xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>します。</span><span class="sxs-lookup"><span data-stu-id="55d3e-105">The same conversion functionality can be accomplished without the custom marshaler, by calling <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> and <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".cctor">
      <MemberSignature Language="C#" Value="public TypeToTypeInfoMarshaler ();" />
      <MemberSignature Language="ILAsm" Value=".method public static specialname rtspecialname void .cctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.#cctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeToTypeInfoMarshaler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpManagedData (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpManagedData (pManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpManagedData(System::Object ^ pManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpManagedData : obj -&gt; unit&#xA;override this.CleanUpManagedData : obj -&gt; unit" Usage="typeToTypeInfoMarshaler.CleanUpManagedData pManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj">
          <span data-ttu-id="55d3e-106">破棄するマネージド オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-106">The managed object to be destroyed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55d3e-107">不要になったときに、マネージド データの必要なクリーンアップを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-107">Performs necessary cleanup of the managed data when it is no longer needed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55d3e-108">CLR で割り当てられた管理対象のデータをクリーンアップするには、このメソッドを呼び出し、<xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="55d3e-108">The CLR calls this method to clean up managed data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpNativeData : nativeint -&gt; unit&#xA;override this.CleanUpNativeData : nativeint -&gt; unit" Usage="typeToTypeInfoMarshaler.CleanUpNativeData pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData">
          <span data-ttu-id="55d3e-109">破棄するアンマネージ データを指すポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-109">A pointer to the unmanaged data to be destroyed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55d3e-110">不要になったときに、アンマネージ データの必要なクリーンアップを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-110">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55d3e-111">CLR で割り当てられたアンマネージ データをクリーンアップするには、このメソッドを呼び出し、<xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="55d3e-111">The CLR calls this method to clean up the unmanaged data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.ICustomMarshaler GetInstance (string pstrCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.ICustomMarshaler GetInstance(string pstrCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (pstrCookie As String) As ICustomMarshaler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::ICustomMarshaler ^ GetInstance(System::String ^ pstrCookie);" />
      <MemberSignature Language="F#" Value="static member GetInstance : string -&gt; System.Runtime.InteropServices.ICustomMarshaler" Usage="System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance pstrCookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ICustomMarshaler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstrCookie" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pstrCookie">
          <span data-ttu-id="55d3e-112">カスタム マーシャラーで使用できる文字列 "クッキー" パラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-112">String "cookie" parameter that can be used by the custom marshaler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55d3e-113">カスタム マーシャラーのインスタンスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-113">Returns an instance of the custom marshaler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55d3e-114">カスタム マーシャラーのインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-114">An instance of the custom marshaler.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55d3e-115">はありませんが、すべてのカスタム マーシャラーは、このメソッドを実装する必要がありますの一部、<xref:System.Runtime.InteropServices.ICustomMarshaler>インターフェイス定義です。</span><span class="sxs-lookup"><span data-stu-id="55d3e-115">All custom marshalers must implement this method, although it is not part of the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public virtual int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetNativeDataSize();" />
      <MemberSignature Language="F#" Value="abstract member GetNativeDataSize : unit -&gt; int&#xA;override this.GetNativeDataSize : unit -&gt; int" Usage="typeToTypeInfoMarshaler.GetNativeDataSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="55d3e-116">マーシャリングするアンマネージ データのサイズ (バイト単位) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-116">Returns the size in bytes of the unmanaged data to be marshaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55d3e-117">このマーシャラーが処理する型は値型ではないことを示す -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-117">-1 to indicate the type this marshaler handles is not a value type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55d3e-118">.NET framework 値型のカスタム マーシャ リングがサポートされていないために、このメソッドは常に-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="55d3e-118">Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public virtual IntPtr MarshalManagedToNative (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalManagedToNative (pManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr MarshalManagedToNative(System::Object ^ pManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member MarshalManagedToNative : obj -&gt; nativeint&#xA;override this.MarshalManagedToNative : obj -&gt; nativeint" Usage="typeToTypeInfoMarshaler.MarshalManagedToNative pManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj">
          <span data-ttu-id="55d3e-119">変換されるマネージド オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-119">The managed object to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55d3e-120">マネージド コードからアンマネージド コードにマーシャリングします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-120">Marshals an object from managed code to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55d3e-121">アンマネージ オブジェクトを指すポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-121">A pointer to the unmanaged object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55d3e-122">CLR がそのオブジェクトをマネージ コードからアンマネージ コードに変換するマネージ オブジェクトのインスタンスを指定して、このメソッドを呼び出すし、そのオブジェクトの COM ビューを表す、適切なアンマネージ オブジェクトへのポインターを返します。</span><span class="sxs-lookup"><span data-stu-id="55d3e-122">The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="55d3e-123">
            <paramref name="pManagedObj" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-123">
              <paramref name="pManagedObj" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public virtual object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member MarshalNativeToManaged : nativeint -&gt; obj&#xA;override this.MarshalNativeToManaged : nativeint -&gt; obj" Usage="typeToTypeInfoMarshaler.MarshalNativeToManaged pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData">
          <span data-ttu-id="55d3e-124">変換するアンマネージ オブジェクトを指すポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-124">A pointer to the unmanaged object to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55d3e-125">アンマネージド コードからマネージド コードにオブジェクトをマーシャリングします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-125">Marshals an object from unmanaged code to managed code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55d3e-126">マネージド オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-126">A managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55d3e-127">CLR はアンマネージ コードからそのオブジェクトをマネージ コードに変換するアンマネージ オブジェクトへの指定したポインターがこのメソッドを呼び出してし、マネージ、アンマネージ データのマネージ ビューを表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="55d3e-127">The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="55d3e-128">
            <paramref name="pNativeData" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55d3e-128">
              <paramref name="pNativeData" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>