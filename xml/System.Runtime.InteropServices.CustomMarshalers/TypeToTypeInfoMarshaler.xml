<Type Name="TypeToTypeInfoMarshaler" FullName="System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
  <TypeSignature Language="C#" Value="public class TypeToTypeInfoMarshaler : System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeToTypeInfoMarshaler extends System.Object implements class System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeToTypeInfoMarshaler&#xA;Implements ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeToTypeInfoMarshaler : System::Runtime::InteropServices::ICustomMarshaler" />
  <AssemblyInfo>
    <AssemblyName>CustomMarshalers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ICustomMarshaler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="4fada-101">アンマネージ <see langword="ITypeInfo" /> インターフェイスをマネージ <see cref="T:System.Type" /> クラスにマーシャリングし、マネージ <see cref="T:System.Type" /> クラスをアンマネージ <see langword="ITypeInfo" /> インターフェイスにマーシャリングします。</span><span class="sxs-lookup"><span data-stu-id="4fada-101">Marshals the unmanaged <see langword="ITypeInfo" /> interface to the managed <see cref="T:System.Type" /> class, and marshals the managed <see cref="T:System.Type" /> class to the unmanaged <see langword="ITypeInfo" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fada-102">`ITypeInfo`の .NET 型がエクスポートされたタイプ ライブラリに表示されるメタデータに基づいてが公開されるインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="4fada-102">The `ITypeInfo` interface exposed for a .NET type is based on the metadata that would appear in an exported type library.</span></span> <span data-ttu-id="4fada-103">同様に、<xref:System.Type>のインスタンスが公開される、`ITypeInfo`インターフェイス インポートされたアセンブリで表示されるメタデータに基づいています。</span><span class="sxs-lookup"><span data-stu-id="4fada-103">Likewise, the <xref:System.Type> instance exposed for an `ITypeInfo` interface is based on the metadata that would appear in an imported assembly.</span></span>  
  
 <span data-ttu-id="4fada-104">タイプ ライブラリ インポーター (Tlbimp.exe) 記号`ITypeInfo`と適切なパラメーター<xref:System.Runtime.InteropServices.MarshalAsAttribute>で、<xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler>列挙体のメンバーを使用する署名を変換するときに`ITypeInfo`パラメーターを使用する署名を<xref:System.Type>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="4fada-104">The Type Library Importer (Tlbimp.exe) marks `ITypeInfo` parameters with the appropriate <xref:System.Runtime.InteropServices.MarshalAsAttribute> with the <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler> enumeration member when converting signatures that use `ITypeInfo` parameters to signatures that use <xref:System.Type> parameters.</span></span>  
  
 <span data-ttu-id="4fada-105">呼び出して、カスタム マーシャラーせず、同様の変換機能を実現できます<xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A>と<xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>です。</span><span class="sxs-lookup"><span data-stu-id="4fada-105">The same conversion functionality can be accomplished without the custom marshaler, by calling <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> and <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpManagedData (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpManagedData (pManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpManagedData(System::Object ^ pManagedObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj"><span data-ttu-id="4fada-106">破棄するマネージ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fada-106">The managed object to be destroyed.</span></span></param>
        <summary><span data-ttu-id="4fada-107">不要になったときに、マネージ データの必要なクリーンアップを実行します。</span><span class="sxs-lookup"><span data-stu-id="4fada-107">Performs necessary cleanup of the managed data when it is no longer needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fada-108">CLR で割り当てられた管理対象のデータをクリーンアップするのには、このメソッドを呼び出し、<xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4fada-108">The CLR calls this method to clean up managed data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="4fada-109">破棄するアンマネージ データを指すポインター。</span><span class="sxs-lookup"><span data-stu-id="4fada-109">A pointer to the unmanaged data to be destroyed.</span></span></param>
        <summary><span data-ttu-id="4fada-110">不要になったときに、アンマネージ データの必要なクリーンアップを実行します。</span><span class="sxs-lookup"><span data-stu-id="4fada-110">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fada-111">CLR で割り当てられたアンマネージ データをクリーンアップするのには、このメソッドを呼び出し、<xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4fada-111">The CLR calls this method to clean up the unmanaged data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.ICustomMarshaler GetInstance (string pstrCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.ICustomMarshaler GetInstance(string pstrCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (pstrCookie As String) As ICustomMarshaler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::ICustomMarshaler ^ GetInstance(System::String ^ pstrCookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ICustomMarshaler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstrCookie" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pstrCookie"><span data-ttu-id="4fada-112">カスタム マーシャラーで使用できる文字列 "クッキー" パラメーター。</span><span class="sxs-lookup"><span data-stu-id="4fada-112">String "cookie" parameter that can be used by the custom marshaler.</span></span></param>
        <summary><span data-ttu-id="4fada-113">カスタム マーシャラーのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="4fada-113">Returns an instance of the custom marshaler.</span></span></summary>
        <returns><span data-ttu-id="4fada-114">カスタム マーシャラーのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="4fada-114">An instance of the custom marshaler.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fada-115">ありませんが、すべてのカスタム マーシャラーは、このメソッドを実装する必要がありますの一部、<xref:System.Runtime.InteropServices.ICustomMarshaler>インターフェイス定義です。</span><span class="sxs-lookup"><span data-stu-id="4fada-115">All custom marshalers must implement this method, although it is not part of the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public virtual int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetNativeDataSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4fada-116">マーシャリングするアンマネージ データのサイズ (バイト単位) を返します。</span><span class="sxs-lookup"><span data-stu-id="4fada-116">Returns the size in bytes of the unmanaged data to be marshaled.</span></span></summary>
        <returns><span data-ttu-id="4fada-117">このマーシャラーが処理する型は値型ではないことを示す -1。</span><span class="sxs-lookup"><span data-stu-id="4fada-117">-1 to indicate the type this marshaler handles is not a value type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fada-118">値の型のカスタム マーシャ リングは、.NET Framework ではサポートされていません、このメソッドは常に-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="4fada-118">Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public virtual IntPtr MarshalManagedToNative (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalManagedToNative (pManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr MarshalManagedToNative(System::Object ^ pManagedObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj"><span data-ttu-id="4fada-119">変換されるマネージ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fada-119">The managed object to be converted.</span></span></param>
        <summary><span data-ttu-id="4fada-120">マネージ コードからアンマネージ コードにマーシャリングします。</span><span class="sxs-lookup"><span data-stu-id="4fada-120">Marshals an object from managed code to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="4fada-121">アンマネージ オブジェクトを指すポインター。</span><span class="sxs-lookup"><span data-stu-id="4fada-121">A pointer to the unmanaged object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fada-122">CLR はそのオブジェクトをマネージ コードからアンマネージ コードに変換するマネージ オブジェクトのインスタンスを指定してこのメソッドであり、適切なアンマネージ オブジェクトに、そのオブジェクトの COM のビューを表すへのポインターを返します。</span><span class="sxs-lookup"><span data-stu-id="4fada-122">The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4fada-123"><paramref name="pManagedObj" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4fada-123"><paramref name="pManagedObj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public virtual object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="4fada-124">変換するアンマネージ オブジェクトを指すポインター。</span><span class="sxs-lookup"><span data-stu-id="4fada-124">A pointer to the unmanaged object to be converted.</span></span></param>
        <summary><span data-ttu-id="4fada-125">アンマネージ コードからマネージ コードにオブジェクトをマーシャリングします。</span><span class="sxs-lookup"><span data-stu-id="4fada-125">Marshals an object from unmanaged code to managed code.</span></span></summary>
        <returns><span data-ttu-id="4fada-126">マネージ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4fada-126">A managed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fada-127">CLR では、アンマネージ コードからマネージ コードにそのオブジェクトを変換するアンマネージ オブジェクトを指すポインターを指定してこのメソッドを呼び出しし、アンマネージ データのマネージ ビューを表すマネージ オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="4fada-127">The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4fada-128"><paramref name="pNativeData" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4fada-128"><paramref name="pNativeData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>