<Type Name="StreamContent" FullName="System.Net.Http.StreamContent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="acea017ce718c91693de240139db5281ccab762c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StreamContent : System.Net.Http.HttpContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StreamContent extends System.Net.Http.HttpContent" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.StreamContent" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamContent&#xA;Inherits HttpContent" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamContent : System::Net::Http::HttpContent" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpContent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6b789-101">ストリームに基づく HTTP コンテンツを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b789-101">Provides HTTP content based on a stream.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b789-102">
            <see cref="T:System.Net.Http.StreamContent" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-102">Creates a new instance of the <see cref="T:System.Net.Http.StreamContent" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamContent (System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamContent(System::IO::Stream ^ content);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="content">
          <span data-ttu-id="6b789-103">
            <see cref="T:System.Net.Http.StreamContent" /> の初期化に使用されるコンテンツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-103">The content used to initialize the <see cref="T:System.Net.Http.StreamContent" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b789-104">
            <see cref="T:System.Net.Http.StreamContent" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-104">Creates a new instance of the <see cref="T:System.Net.Http.StreamContent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamContent (System.IO.Stream content, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream content, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As Stream, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamContent(System::IO::Stream ^ content, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="content">
          <span data-ttu-id="6b789-105">
            <see cref="T:System.Net.Http.StreamContent" /> の初期化に使用されるコンテンツ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-105">The content used to initialize the <see cref="T:System.Net.Http.StreamContent" />.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="6b789-106">
            <see cref="T:System.Net.Http.StreamContent" /> のバッファーのサイズ (バイト単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-106">The size, in bytes, of the buffer for the <see cref="T:System.Net.Http.StreamContent" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b789-107">
            <see cref="T:System.Net.Http.StreamContent" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-107">Creates a new instance of the <see cref="T:System.Net.Http.StreamContent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6b789-108">
            <paramref name="content" /> が <see langword="null" />でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-108">The <paramref name="content" /> was <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6b789-109">
            <paramref name="bufferSize" /> の値が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-109">The <paramref name="bufferSize" /> was less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateContentReadStreamAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.IO.Stream&gt; CreateContentReadStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; CreateContentReadStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateContentReadStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ CreateContentReadStreamAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b789-110">非同期操作として HTTP ストリーム コンテンツをメモリ ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-110">Write the HTTP stream content to a memory stream as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b789-111">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-111">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b789-112">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="6b789-112">This operation will not block.</span></span> <span data-ttu-id="6b789-113">返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、すべてのコンテンツがメモリ ストリームに書き込まれた後に完了します。</span><span class="sxs-lookup"><span data-stu-id="6b789-113">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.</span></span>  
  
 <span data-ttu-id="6b789-114"><xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A>メソッドは、メモリ ストリームにコンテンツをバッファーします。</span><span class="sxs-lookup"><span data-stu-id="6b789-114">The <xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream.</span></span> <span data-ttu-id="6b789-115">派生クラスは、内容をストリームとして取得する優れた方法がある場合、この動作をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="6b789-115">Derived classes can override this behavior if there is a better way to retrieve the content as stream.</span></span> <span data-ttu-id="6b789-116">たとえば、バイト配列または文字列でしたを使用して読み取り専用の折り返しなどメソッド方法がより効率的<xref:System.IO.MemoryStream>バイトまたは文字列の周り)。</span><span class="sxs-lookup"><span data-stu-id="6b789-116">For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="6b789-117">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-117">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b789-118">
            <see cref="T:System.Net.Http.StreamContent" /> が使用しているアンマネージ リソースを解放します。オプションとして、マネージ リソースを破棄することもできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-118">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.StreamContent" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b789-119">このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6b789-119">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="6b789-120">`Dispose()` プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="6b789-120">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="6b789-121"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。ときに、`disposing`パラメーターは`true`、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Net.Http.StreamContent>参照します。</span><span class="sxs-lookup"><span data-stu-id="6b789-121"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.StreamContent> references.</span></span> <span data-ttu-id="6b789-122">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6b789-122">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="6b789-123">対象のストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-123">The target stream.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="6b789-124">トランスポート (チャネル バインディング トークンなど) について説明します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-124">Information about the transport (channel binding token, for example).</span>
          </span>
          <span data-ttu-id="6b789-125">このパラメーターは <see langword="null" /> の場合もあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-125">This parameter may be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b789-126">非同期操作として HTTP コンテンツをストリームにシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-126">Serialize the HTTP content to a stream as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b789-127">非同期操作を表すタスク オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-127">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b789-128">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="6b789-128">This operation will not block.</span></span> <span data-ttu-id="6b789-129">返された<xref:System.Threading.Tasks.Task>オブジェクトは、すべてのコンテンツは、対象のストリームにシリアル化された後に完了します。</span><span class="sxs-lookup"><span data-stu-id="6b789-129">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryComputeLength">
      <MemberSignature Language="C#" Value="protected internal override bool TryComputeLength (out long length);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool TryComputeLength([out] int64&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function TryComputeLength (ByRef length As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool TryComputeLength([Runtime::InteropServices::Out] long % length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="6b789-130">ストリーム コンテンツの長さ (バイト単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-130">The length in bytes of the stream content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b789-131">ストリーム コンテンツが有効なバイト長であるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-131">Determines whether the stream content has a valid length in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b789-132">
            <paramref name="length" /> が有効な長さの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b789-132">
              <see langword="true" /> if <paramref name="length" /> is a valid length; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b789-133"><xref:System.Net.Http.StreamContent.TryComputeLength%2A>メソッドにより、HTTP コンテンツをストリーム配信コンテンツの長さを計算します。</span><span class="sxs-lookup"><span data-stu-id="6b789-133">The <xref:System.Net.Http.StreamContent.TryComputeLength%2A> method gives HTTP stream content the ability to calculate the content length.</span></span> <span data-ttu-id="6b789-134">これは、コンテンツ タイプを簡単にコンテンツの長さを計算することがあるに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="6b789-134">This is useful for content types which are able to easily calculate the content length.</span></span> <span data-ttu-id="6b789-135">コンテンツの長さが可能でないか、高価な (は必要なシリアル化高価なや、大量のメモリを割り当てることが必要に、コンテンツ全体をバッファーに書き込むシステム) を計算するには、このメソッドは返す`false`です。</span><span class="sxs-lookup"><span data-stu-id="6b789-135">If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`.</span></span> <span data-ttu-id="6b789-136">このメソッドが戻る場合`false`、つまり、チャンク転送が必要かあるコンテンツをサーバーに送信される前にバッファーを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6b789-136">If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>