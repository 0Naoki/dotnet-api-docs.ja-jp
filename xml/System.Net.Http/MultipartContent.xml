<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MultipartContent.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50d1bfb4e5775f2b08068e63abd3e2bb1a8cf3ae7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d1bfb4e5775f2b08068e63abd3e2bb1a8cf3ae7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Http.MultipartContent">
          <source>Provides a collection of <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpContent" /&gt;</ph> objects that get serialized using the multipart/* content type specification.</source>
          <target state="translated">multipart/* のコンテンツ タイプの指定を使用してシリアル化される <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpContent" /&gt;</ph> オブジェクトのコレクションを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Net.Http.MultipartContent">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> クラスの新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> クラスの新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String)">
          <source>The subtype of the multipart content.</source>
          <target state="translated">マルチパート コンテンツのサブタイプ。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> クラスの新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="subtype" /&gt;</ph> was <ph id="ph2">&lt;see langword="null" /&gt;</ph> or contains only white space characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="subtype" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> であったか、または空白文字だけを含んでいます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>The subtype of the multipart content.</source>
          <target state="translated">マルチパート コンテンツのサブタイプ。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>The boundary string for the multipart content.</source>
          <target state="translated">マルチパート コンテンツの境界文字列。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> クラスの新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="subtype" /&gt;</ph> was <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="subtype" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> または空の文字列でした。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="boundary" /&gt;</ph> was <ph id="ph2">&lt;see langword="null" /&gt;</ph> or contains only white space characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="boundary" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> であったか、または空白文字だけを含んでいます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="boundary" /&gt;</ph> ends with a space character.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="boundary" /&gt;</ph> が空白文字で終わっています。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
          <source>The length of the <ph id="ph1">&lt;paramref name="boundary" /&gt;</ph> was greater than 70.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="boundary" /&gt;</ph> の長さが 70 を超えていました。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
          <source>The HTTP content to add to the collection.</source>
          <target state="translated">コレクションに追加する HTTP コンテンツ。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
          <source>Add multipart HTTP content to a collection of <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpContent" /&gt;</ph> objects that get serialized using the multipart/* content type specification.</source>
          <target state="translated">multipart/* のコンテンツ タイプの指定を使用してシリアル化される <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpContent" /&gt;</ph> オブジェクトのコレクションにマルチパート HTTP コンテンツを追加します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="content" /&gt;</ph> was <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="content" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph>でした。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to releases only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> and optionally disposes of the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.MultipartContent" /&gt;</ph> が使用しているアンマネージ リソースを解放します。オプションとして、マネージ リソースを破棄することもできます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.When the <ph id="ph5">`disposing`</ph> parameter is <ph id="ph6">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph7">&lt;xref:System.Net.Http.MultipartContent&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 呼び出す<ph id="ph2">`Dispose`</ph>で<ph id="ph3">`disposing`</ph>'éý'<ph id="ph4">`false`</ph>です。ときに、<ph id="ph5">`disposing`</ph>パラメーターは<ph id="ph6">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<ph id="ph7">&lt;xref:System.Net.Http.MultipartContent&gt;</ph>参照します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">`Dispose()`</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.GetEnumerator">
          <source>Returns an enumerator that iterates through the collection of <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpContent" /&gt;</ph> objects that get serialized using the multipart/* content type specification..</source>
          <target state="translated">マルチパート/* コンテンツ タイプの仕様を使用してシリアル化される <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpContent" /&gt;</ph> オブジェクトのコレクションを反復処理する列挙子を返します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.GetEnumerator">
          <source>An object that can be used to iterate through the collection.</source>
          <target state="translated">コレクションを反復処理するために使用できるオブジェクト。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.GetEnumerator">
          <source>The foreach statement of the C# language (For Each in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 言語の (Visual Basic では各) foreach ステートメントには、列挙子の複雑さが非表示にします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.GetEnumerator">
          <source>Therefore, using foreach is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">そのため、foreach の使用をお勧め、直接操作すると、列挙子の代わりにします。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>The target stream.</source>
          <target state="translated">対象のストリーム。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>Information about the transport (channel binding token, for example).</source>
          <target state="translated">トランスポート (チャネル バインディング トークンなど) について説明します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>This parameter may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">このパラメーターは <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合もあります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>Serialize the multipart HTTP content to a stream as an asynchronous operation.</source>
          <target state="translated">非同期操作としてマルチパートの HTTP コンテンツをストリームにシリアル化します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after all of the content has been serialized to the target stream.</source>
          <target state="translated">返された<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>オブジェクトは、すべてのコンテンツは、対象のストリームにシリアル化された後に完了します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
          <source>The explicit implementation of the <ph id="ph1">&lt;see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /&gt;</ph> メソッドの明示的な実装。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
          <source>An object that can be used to iterate through the collection.</source>
          <target state="translated">コレクションを反復処理するために使用できるオブジェクト。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source>The length in bytes of the HHTP content.</source>
          <target state="translated">HTTP コンテンツの長さ (バイト単位)。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source>Determines whether the HTTP multipart content has a valid length in bytes.</source>
          <target state="translated">HTTP マルチパート コンテンツが有効なバイト長であるかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is a valid length; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="length" /&gt;</ph> が有効な長さの場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.MultipartContent.TryComputeLength%2A&gt;</ph> method gives HTTP multipart content the ability to calculate the content length.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.MultipartContent.TryComputeLength%2A&gt;</ph>メソッドにより、マルチパート コンテンツの HTTP コンテンツの長さを計算します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source>This is useful for content types which are able to easily calculate the content length.</source>
          <target state="translated">これは、コンテンツ タイプを簡単にコンテンツの長さを計算することがあるに役立ちます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source>If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">コンテンツの長さが可能でないか、高価な (は必要なシリアル化高価なや、大量のメモリを割り当てることが必要に、コンテンツ全体をバッファーに書き込むシステム) を計算するには、このメソッドは返す<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
          <source>If this method returns <ph id="ph1">`false`</ph>, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</source>
          <target state="translated">このメソッドが戻る場合<ph id="ph1">`false`</ph>、つまり、チャンク転送が必要かあるコンテンツをサーバーに送信される前にバッファーを取得する必要があります。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>