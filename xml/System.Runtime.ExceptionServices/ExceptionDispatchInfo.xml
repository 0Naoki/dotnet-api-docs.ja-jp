<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExceptionDispatchInfo.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c9705c7cab056ffd2d3a6a05962a03c0ae933d19.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9705c7cab056ffd2d3a6a05962a03c0ae933d19</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
          <source>Represents an exception whose state is captured at a certain point in code.</source>
          <target state="translated">コード中の特定の時点で状態がキャプチャされる例外を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> object stores the stack trace information and Watson information that the exception contains at the point where it is captured.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph>オブジェクトは、スタック トレース情報およびキャプチャされた時点では、例外が含まれている Watson 情報を格納します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
          <source>The exception can be thrown at another time and possibly on another thread by calling the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">例外はスローされる別の時に、可能性のある別のスレッドで呼び出すことによって、<ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
          <source>The exception is thrown as if it had flowed from the point where it was captured to the point where the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A&gt;</ph> method is called.</source>
          <target state="translated">ポイントにキャプチャされた時点からフローしてくることが場合と、例外がスローされた場所、<ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
          <source><ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> cannot be serialized and is not intended to cross application domain boundaries.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> シリアル化することはできませんし、アプリケーション ドメインの境界を越えるものではありません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source>The exception whose state is captured, and which is represented by the returned object.</source>
          <target state="translated">状態がキャプチャされ、返されたオブジェクトによって表される例外。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /&gt;</ph> object that represents the specified exception at the current point in code.</source>
          <target state="translated">コード内の現在の点で指定された例外を表す <ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /&gt;</ph> オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source>An object that represents the specified exception at the current point in code.</source>
          <target state="translated">コード内の現在の地点に指定された例外を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> object that is returned by this method at another time and possibly on another thread to rethrow the specified exception, as if the exception had flowed from this point where it was captured to the point where it is rethrown.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph>メソッドによって返されるこの別時および可能性のある指定された例外を再スローする別のスレッドで例外が再スローされるポイントにキャプチャされたこのポイントからフローされた場合、オブジェクトです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source>If the exception is active when it is captured, the current stack trace information and Watson information that is contained in the exception is stored.</source>
          <target state="translated">例外はアクティブがキャプチャされるときに、現在のスタック トレース情報およびワトソン情報に含まれている場合は、例外が格納されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source>If it is inactive, that is, if it has not been thrown, it will not have any stack trace information or Watson information.</source>
          <target state="translated">アクティブになっていない場合は、スローされていない場合に、ありません、スタック トレース情報またはワトソン情報。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
          <source>Gets the exception that is represented by the current instance.</source>
          <target state="translated">現在のインスタンスで表される例外を取得します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
          <source>The exception that is represented by the current instance.</source>
          <target state="translated">現在のインスタンスで表される例外。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
          <source>This property is used by the Task Parallel Library, for example, to combine multiple exceptions in an <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> object.</source>
          <target state="translated">このプロパティは使用、タスク並列ライブラリによってなどの複数の例外を結合する、<ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
          <source>It is not intended to be used by application code.</source>
          <target state="translated">アプリケーション コードで使用することはありません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A&gt;</ph> method to restore the state of the captured exception and throw it.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A&gt;</ph>キャプチャされた例外の状態を復元し、それをスローするメソッド。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw">
          <source>Throws the exception that is represented by the current <ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /&gt;</ph> object, after restoring the state that was saved when the exception was captured.</source>
          <target state="translated">例外をキャプチャしたときに保存された状態を復元した後に、現在の <ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /&gt;</ph> オブジェクトで表される例外をスローします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw">
          <source>When the exception is restored, the following string is inserted in the stack trace to indicate the restore point: "End of stack trace from the previous location where the exception was thrown".</source>
          <target state="translated">復元ポイントを指定するスタック トレースで、次の文字列が挿入された、例外が復旧し次第、:「例外がスローした以前の場所からスタック トレースの終わり」です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw">
          <source>This is similar to the way inner exceptions or marshaled exceptions are indicated in stack traces.</source>
          <target state="translated">これは、内部例外またはマーシャ リング例外がスタック トレースに示されているのと同様です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>