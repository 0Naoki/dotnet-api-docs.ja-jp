<Type Name="FirstChanceExceptionEventArgs" FullName="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b82b33fd434c2b4d5434a6080b2c61d46168149" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30477956" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FirstChanceExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FirstChanceExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FirstChanceExceptionEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0b502-101">マネージ例外が最初に発生したときに発生する通知イベントのデータを、共通言語ランタイムによるイベント ハンドラーの検索が開始される前に提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b502-101">Provides data for the notification event that is raised when a managed exception first occurs, before the common language runtime begins searching for event handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b502-102">このクラスの例外ハンドラーを提供する、<xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType>例外へのアクセス権を持つイベント。</span><span class="sxs-lookup"><span data-stu-id="0b502-102">This class provides the exception handler for the <xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType> event with access to the exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b502-103">次の例では、アプリケーション ドメインがという名前の系列`Child_0`を通じて`Child_3`で、`Worker`各アプリケーション ドメイン内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0b502-103">The following example creates a series of application domains named `Child_0` through `Child_3`, with a `Worker` object in each application domain.</span></span> <span data-ttu-id="0b502-104">各`Worker`オブジェクトへの参照には、`Worker`を除き、[次へ] のアプリケーション ドメイン内のオブジェクト、`Worker`最後のアプリケーション ドメインでします。</span><span class="sxs-lookup"><span data-stu-id="0b502-104">Each `Worker` object has a reference to the `Worker` object in the next application domain, except for the `Worker` in the last application domain.</span></span> <span data-ttu-id="0b502-105"><xref:System.AppDomain.FirstChanceException>を除くすべてのアプリケーション ドメインでイベントを処理`Child_1`です。</span><span class="sxs-lookup"><span data-stu-id="0b502-105">The <xref:System.AppDomain.FirstChanceException> event is handled in all application domains except `Child_1`.</span></span>  
  
 <span data-ttu-id="0b502-106">アプリケーション ドメインが作成されると、既定のアプリケーション ドメインを呼び出す、`TestException`メソッドの最初の子アプリケーション ドメイン。</span><span class="sxs-lookup"><span data-stu-id="0b502-106">When the application domains have been created, the default application domain calls the `TestException` method for the first child application domain.</span></span> <span data-ttu-id="0b502-107">各`Worker`オブジェクトの呼び出し、`TestException`最後まで、次のメソッド`Worker`が処理または未処理の例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="0b502-107">Each `Worker` object calls the `TestException` method for the next, until the last `Worker` throws an exception that is either handled or unhandled.</span></span> <span data-ttu-id="0b502-108">現在のスレッドが、すべてのアプリケーション ドメインを通過するため、および`TestException`が各アプリケーション ドメイン内のスタックに追加します。</span><span class="sxs-lookup"><span data-stu-id="0b502-108">Thus, the current thread passes through all the application domains, and `TestException` is added to the stack in each application domain.</span></span>  
  
 <span data-ttu-id="0b502-109">ときに、最後`Worker`オブジェクト、例外を処理する、<xref:System.AppDomain.FirstChanceException>イベントは、アプリケーションの最後のドメインでのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="0b502-109">When the last `Worker` object handles the exception, the <xref:System.AppDomain.FirstChanceException> event is raised only in the last application domain.</span></span> <span data-ttu-id="0b502-110">他のアプリケーション ドメインでは、イベントが発生していないために、例外を処理するされなくなります。</span><span class="sxs-lookup"><span data-stu-id="0b502-110">The other application domains never get a chance to handle the exception, so the event is not raised.</span></span>  
  
 <span data-ttu-id="0b502-111">ときに、最後`Worker`オブジェクトが例外を処理していない、<xref:System.AppDomain.FirstChanceException>をイベント ハンドラーを持つアプリケーション ドメインごとにイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0b502-111">When the last `Worker` object does not handle the exception, the <xref:System.AppDomain.FirstChanceException> event is raised in each application domain that has an event handler.</span></span> <span data-ttu-id="0b502-112">各イベント ハンドラーが完了したら、既定のアプリケーション ドメインによって、例外がキャッチされるまでをアンワインドするスタックが続行されます。</span><span class="sxs-lookup"><span data-stu-id="0b502-112">After each event handler has finished, the stack continues to unwind until the exception is caught by the default application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0b502-113">ようにこのイベントは近くの履歴の表示の成長と既定のアプリケーション ドメインに近いを表示する変更`e.Exception.Message`に`e.Exception`で、`FirstChanceHandler`イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="0b502-113">To see how the stack display grows as the event is raised closer and closer to the default application domain, change `e.Exception.Message` to `e.Exception` in the `FirstChanceHandler` event handlers.</span></span> <span data-ttu-id="0b502-114">場合に`TestException`と呼ばれるアプリケーション ドメインの境界を越えて 2 回表示されます。 プロキシとスタブの 1 回です。</span><span class="sxs-lookup"><span data-stu-id="0b502-114">Notice that when `TestException` is called across application domain boundaries, it appears twice: once for the proxy and once for the stub.</span></span>  
  
 [!code-csharp[System.AppDomain.FirstChanceException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/cs/example.cs#1)]
 [!code-vb[System.AppDomain.FirstChanceException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.FirstChanceException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FirstChanceExceptionEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FirstChanceExceptionEventArgs(Exception ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="0b502-115">マネージ コードによってスローされ、<see cref="E:System.AppDomain.UnhandledException" /> イベントによって調べられることになる例外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b502-115">The exception that was just thrown by managed code, and that will be examined by the <see cref="E:System.AppDomain.UnhandledException" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b502-116">指定した例外を使用して、<see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b502-116">Initializes a new instance of the <see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /> class with a specified exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b502-117">このコンス トラクターは、アプリケーション コードではなく、共通言語ランタイムによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0b502-117">This constructor is called by the common language runtime, not by application code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b502-118">マネージ コードによってスローされる例外に対応するマネージ例外オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b502-118">The managed exception object that corresponds to the exception thrown in managed code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b502-119">新しくスローされた例外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b502-119">The newly thrown exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b502-120">処理するメソッド、<xref:System.AppDomain.UnhandledException?displayProperty=nameWithType>イベントが、例外を確認し、適切なログ記録やその他の通知サービスを実行できます。</span><span class="sxs-lookup"><span data-stu-id="0b502-120">The method that handles the <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> event can examine the exception and perform appropriate logging or other notification services.</span></span>  
  
 <span data-ttu-id="0b502-121">コード例については、「<xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0b502-121">For example code, see <xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>