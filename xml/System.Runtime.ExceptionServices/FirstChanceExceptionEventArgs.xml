<Type Name="FirstChanceExceptionEventArgs" FullName="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="169bae8320df5ccab499f54dc4a4009bcb8b6dfc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69271891" /></Metadata><TypeSignature Language="C#" Value="public class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FirstChanceExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FirstChanceExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FirstChanceExceptionEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d641b-101">マネージド例外が最初に発生したときに発生する通知イベントのデータを、共通言語ランタイムによるイベント ハンドラーの検索が開始される前に提供します。</span><span class="sxs-lookup"><span data-stu-id="d641b-101">Provides data for the notification event that is raised when a managed exception first occurs, before the common language runtime begins searching for event handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d641b-102">このクラスは、例外にアクセスする<xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType>イベントの例外ハンドラーを提供します。</span><span class="sxs-lookup"><span data-stu-id="d641b-102">This class provides the exception handler for the <xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType> event with access to the exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d641b-103">次の例では、を使用して`Child_0` `Child_3`という名前の`Worker`一連のアプリケーションドメインを作成し、各アプリケーションドメインにオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="d641b-103">The following example creates a series of application domains named `Child_0` through `Child_3`, with a `Worker` object in each application domain.</span></span> <span data-ttu-id="d641b-104">各`Worker`オブジェクトには、次の`Worker`アプリケーションドメイン内のオブジェクトへの参照があり`Worker`ます。ただし、最後のアプリケーションドメインのは除きます。</span><span class="sxs-lookup"><span data-stu-id="d641b-104">Each `Worker` object has a reference to the `Worker` object in the next application domain, except for the `Worker` in the last application domain.</span></span> <span data-ttu-id="d641b-105">イベント<xref:System.AppDomain.FirstChanceException>は、を除く`Child_1`すべてのアプリケーションドメインで処理されます。</span><span class="sxs-lookup"><span data-stu-id="d641b-105">The <xref:System.AppDomain.FirstChanceException> event is handled in all application domains except `Child_1`.</span></span>  
  
 <span data-ttu-id="d641b-106">アプリケーションドメインが作成されると、既定のアプリケーションドメインは、 `TestException`最初の子アプリケーションドメインに対してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d641b-106">When the application domains have been created, the default application domain calls the `TestException` method for the first child application domain.</span></span> <span data-ttu-id="d641b-107">各`Worker`オブジェクトは、 `TestException`次のメソッドを呼び出します。最後`Worker`に、が処理されるか処理されない例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d641b-107">Each `Worker` object calls the `TestException` method for the next, until the last `Worker` throws an exception that is either handled or unhandled.</span></span> <span data-ttu-id="d641b-108">したがって、現在のスレッドはすべてのアプリケーションドメインを通過`TestException`し、各アプリケーションドメインのスタックに追加されます。</span><span class="sxs-lookup"><span data-stu-id="d641b-108">Thus, the current thread passes through all the application domains, and `TestException` is added to the stack in each application domain.</span></span>  
  
 <span data-ttu-id="d641b-109">最後`Worker`のオブジェクトが例外を処理するとき<xref:System.AppDomain.FirstChanceException> 、イベントは最後のアプリケーションドメインでのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="d641b-109">When the last `Worker` object handles the exception, the <xref:System.AppDomain.FirstChanceException> event is raised only in the last application domain.</span></span> <span data-ttu-id="d641b-110">他のアプリケーションドメインは例外を処理する機会を得られないため、イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="d641b-110">The other application domains never get a chance to handle the exception, so the event is not raised.</span></span>  
  
 <span data-ttu-id="d641b-111">最後`Worker`のオブジェクトが例外を処理しない場合は<xref:System.AppDomain.FirstChanceException> 、イベントハンドラーを持つ各アプリケーションドメインでイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="d641b-111">When the last `Worker` object does not handle the exception, the <xref:System.AppDomain.FirstChanceException> event is raised in each application domain that has an event handler.</span></span> <span data-ttu-id="d641b-112">各イベントハンドラーが完了すると、既定のアプリケーションドメインによって例外がキャッチされるまで、スタックは引き続きアンワインドされます。</span><span class="sxs-lookup"><span data-stu-id="d641b-112">After each event handler has finished, the stack continues to unwind until the exception is caught by the default application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d641b-113">イベントが発生したときにスタックの表示がどのように拡大し、既定のアプリケーションドメインに`e.Exception.Message`近い`e.Exception`かを`FirstChanceHandler`確認するには、イベントハンドラーでをに変更します。</span><span class="sxs-lookup"><span data-stu-id="d641b-113">To see how the stack display grows as the event is raised closer and closer to the default application domain, change `e.Exception.Message` to `e.Exception` in the `FirstChanceHandler` event handlers.</span></span> <span data-ttu-id="d641b-114">がアプリケーションドメイン`TestException`の境界を越えて呼び出されると、2回表示されます。1回はプロキシ用、もう1回はスタブ用です。</span><span class="sxs-lookup"><span data-stu-id="d641b-114">Notice that when `TestException` is called across application domain boundaries, it appears twice: once for the proxy and once for the stub.</span></span>  
  
 [!code-csharp[System.AppDomain.FirstChanceException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/cs/example.cs#1)]
 [!code-vb[System.AppDomain.FirstChanceException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.FirstChanceException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FirstChanceExceptionEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FirstChanceExceptionEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs : Exception -&gt; System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" Usage="new System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="d641b-115">マネージド コードによってスローされ、<see cref="E:System.AppDomain.UnhandledException" /> イベントによって調べられることになる例外。</span><span class="sxs-lookup"><span data-stu-id="d641b-115">The exception that was just thrown by managed code, and that will be examined by the <see cref="E:System.AppDomain.UnhandledException" /> event.</span></span></param>
        <summary><span data-ttu-id="d641b-116">指定した例外を使用して、<see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d641b-116">Initializes a new instance of the <see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /> class with a specified exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d641b-117">このコンストラクターは、アプリケーションコードではなく、共通言語ランタイムによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d641b-117">This constructor is called by the common language runtime, not by application code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d641b-118">マネージド コードによってスローされる例外に対応するマネージド例外オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d641b-118">The managed exception object that corresponds to the exception thrown in managed code.</span></span></summary>
        <value><span data-ttu-id="d641b-119">新しくスローされた例外。</span><span class="sxs-lookup"><span data-stu-id="d641b-119">The newly thrown exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d641b-120"><xref:System.AppDomain.UnhandledException?displayProperty=nameWithType>イベントを処理するメソッドは、例外を調べて、適切なログ記録やその他の通知サービスを実行できます。</span><span class="sxs-lookup"><span data-stu-id="d641b-120">The method that handles the <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> event can examine the exception and perform appropriate logging or other notification services.</span></span>  
  
 <span data-ttu-id="d641b-121">コード例については、「 <xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d641b-121">For example code, see <xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
