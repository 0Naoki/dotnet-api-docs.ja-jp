<Type Name="FirstChanceExceptionEventArgs" FullName="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b82b33fd434c2b4d5434a6080b2c61d46168149" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30477956" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FirstChanceExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FirstChanceExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FirstChanceExceptionEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>マネージ例外が最初に発生したときに発生する通知イベントのデータを、共通言語ランタイムによるイベント ハンドラーの検索が開始される前に提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスの例外ハンドラーを提供する、<xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType>例外へのアクセス権を持つイベント。  
  
   
  
## Examples  
 次の例では、アプリケーション ドメインがという名前の系列`Child_0`を通じて`Child_3`で、`Worker`各アプリケーション ドメイン内のオブジェクト。 各`Worker`オブジェクトへの参照には、`Worker`を除き、[次へ] のアプリケーション ドメイン内のオブジェクト、`Worker`最後のアプリケーション ドメインでします。 <xref:System.AppDomain.FirstChanceException>を除くすべてのアプリケーション ドメインでイベントを処理`Child_1`です。  
  
 アプリケーション ドメインが作成されると、既定のアプリケーション ドメインを呼び出す、`TestException`メソッドの最初の子アプリケーション ドメイン。 各`Worker`オブジェクトの呼び出し、`TestException`最後まで、次のメソッド`Worker`が処理または未処理の例外をスローします。 現在のスレッドが、すべてのアプリケーション ドメインを通過するため、および`TestException`が各アプリケーション ドメイン内のスタックに追加します。  
  
 ときに、最後`Worker`オブジェクト、例外を処理する、<xref:System.AppDomain.FirstChanceException>イベントは、アプリケーションの最後のドメインでのみ発生します。 他のアプリケーション ドメインでは、イベントが発生していないために、例外を処理するされなくなります。  
  
 ときに、最後`Worker`オブジェクトが例外を処理していない、<xref:System.AppDomain.FirstChanceException>をイベント ハンドラーを持つアプリケーション ドメインごとにイベントが発生します。 各イベント ハンドラーが完了したら、既定のアプリケーション ドメインによって、例外がキャッチされるまでをアンワインドするスタックが続行されます。  
  
> [!NOTE]
>  ようにこのイベントは近くの履歴の表示の成長と既定のアプリケーション ドメインに近いを表示する変更`e.Exception.Message`に`e.Exception`で、`FirstChanceHandler`イベント ハンドラー。 場合に`TestException`と呼ばれるアプリケーション ドメインの境界を越えて 2 回表示されます。 プロキシとスタブの 1 回です。  
  
 [!code-csharp[System.AppDomain.FirstChanceException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/cs/example.cs#1)]
 [!code-vb[System.AppDomain.FirstChanceException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.FirstChanceException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FirstChanceExceptionEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FirstChanceExceptionEventArgs(Exception ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">マネージ コードによってスローされ、<see cref="E:System.AppDomain.UnhandledException" /> イベントによって調べられることになる例外。</param>
        <summary>指定した例外を使用して、<see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターは、アプリケーション コードではなく、共通言語ランタイムによって呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マネージ コードによってスローされる例外に対応するマネージ例外オブジェクト。</summary>
        <value>新しくスローされた例外。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 処理するメソッド、<xref:System.AppDomain.UnhandledException?displayProperty=nameWithType>イベントが、例外を確認し、適切なログ記録やその他の通知サービスを実行できます。  
  
 コード例については、「<xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>