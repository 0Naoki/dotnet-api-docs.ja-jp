<Type Name="SrgsToken" FullName="System.Speech.Recognition.SrgsGrammar.SrgsToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d0525f7aec4eab02be807b6114596360a7291d4" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37610734" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SrgsToken : System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsToken extends System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsToken&#xA;Inherits SrgsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsToken : System::Speech::Recognition::SrgsGrammar::SrgsElement" />
  <TypeSignature Language="F#" Value="type SrgsToken = class&#xA;    inherit SrgsElement" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.SrgsGrammar.SrgsElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>認識できる単語または短い語句を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メンバーを使用して、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>クラス、3 つの単語の形式を指定することができます。<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>フォーム、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>フォーム、およびカスタム<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>という単語。  
  
 1 つの複数の単語が格納されている場合<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>オブジェクト、内部、および結果の別のトークンとして扱われますがそれぞれします。  
  
 このクラスを表す、 `token` World Wide Web Consortium (W3C) によって定義される要素[Speech Recognition Grammar Specification (SRGS) バージョン 1.0。](http://go.microsoft.com/fwlink/?LinkId=201761)します。 については、SRGS`token`要素と system.speech の違い、によってそのサポートの詳細については、次を参照してください。[トークン要素](http://msdn.microsoft.com/library/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632)します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsToken (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsToken(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsToken : string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsToken" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsToken text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">新しい <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> クラス インスタンスのテキスト。</param>
        <summary>
          <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> クラスの新しいインスタンスを初期化して、認識されるテキストを指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作成、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>オブジェクト<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>の値にプロパティが最初に設定された、`text`パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="text" /> が空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public string Display { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Display" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />
      <MemberSignature Language="VB.NET" Value="Public Property Display As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Display { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Display : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>読み上げられるテキストの表示形式を取得または設定します。</summary>
        <value>トークンの表示形式の表現。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、同じ値を表す、ですが、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>フォームが異なる場合があります、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>の単語または語句を<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>。 たとえば、フォームの表示は頭字語、"USA"などとを読み上げられるテキストの中に可能性があります、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> 「アメリカ合衆国」には、適用されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" /> を <see langword="null" /> に設定しようとしました。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">空の文字列を <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" /> に割り当てようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Pronunciation">
      <MemberSignature Language="C#" Value="public string Pronunciation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pronunciation" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />
      <MemberSignature Language="VB.NET" Value="Public Property Pronunciation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pronunciation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pronunciation : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トークンの発音を定義する文字列を取得または設定します。</summary>
        <value>
          <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet" /> で指定された発音記号から音素を含む文字列を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スマート フォンは文字または音声のサウンドを表す記号です。 System.speech の違いは、カスタム発音を指定するための 3 つの発音をサポートしています。 汎用音素セット (UPS)、電話の音声認識 API (SAPI) のセット、および、国際音声記号 (IPA)。 指定された電話<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>で指定された発音に一致する必要があります<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>します。 参照してください[辞書と発音](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51)詳細についてはします。  
  
 指定された電話<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>を示す方法の内容<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>の認識が顕著にする必要があります。  音声認識エンジンがで指定された発音を使用して<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>の音声入力とに含まれている文字列を返します。 一致するように<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>認識結果。  
  
 認識エンジンに含まれる単語の有効な読み方として指定された発音を認識しない場合は、スマート フォンがスペースで区切られたでないか、認識されていない電話が指定した文字列に含まれています、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>します。  
  
 指定された発音<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>文法または認識エンジンに関連付けられた辞書で指定された発音より優先されます。 も、発音、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>プロパティに含まれる語句の 1 つにのみに適用される<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>します。  
  
   
  
## Examples  
 次の例では、文法スラング語を含むし、一般的な単語があります:"whatchamacallit"。 カスタム、インラインの読み方を使用して、追加、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>のプロパティ、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>クラスは、"whatchamacallit"も含まれている全フレーズと word の認識の精度を向上させることができます。 例では、スマート フォンから、Microsoft 汎用音素セット (UPS) を使用して、カスタム発音を定義します。  
  
```  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an instance of the in-process recognizer.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine(new System.Globalization.CultureInfo("en-US")))  
      {  
  
        // Build the SrgsOneOf objects with alternative choices for the slang phrase.  
        SrgsOneOf gimme = new SrgsOneOf(  
          new string[] { "give me", "gimme", "hand me", "ha'me" });  
        SrgsOneOf the = new SrgsOneOf(new string[] { "the", "duh" });  
  
        // Build the one-of element that contains the pronunciation.  
        SrgsItem thing = new SrgsItem("thingamajig");  
        SrgsItem whatcha = new SrgsItem();  
        SrgsToken callit = new SrgsToken("whatchamacallit");  
        callit.Pronunciation = "W AE T CH AE M AE K AA L IH T";  
        whatcha.Add(callit);  
        SrgsOneOf what = new SrgsOneOf(new SrgsItem[] {thing, whatcha});  
  
        // Create the rule from the SrgsOneOf objects.  
        SrgsRule slangRule = new SrgsRule("slang", gimme, the, what);  
  
        // Build an SrgsDocument object from the rule and set the phonetic alphabet.  
        SrgsDocument tokenPron = new SrgsDocument(slangRule);  
        tokenPron.PhoneticAlphabet = SrgsPhoneticAlphabet.Ups;  
  
        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  
        Grammar g_Slang = new Grammar(tokenPron);  
        g_Slang.Name = ("Slang Pronunciation");  
        recognizer.LoadGrammarAsync(g_Slang);  
  
        // Configure recognizer input.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Start asynchronous recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Recognized phrase: " + e.Result.Text);  
      Console.WriteLine("Confidence: " + e.Result.Confidence);  
      Console.WriteLine("  Word summary: ");  
      foreach (RecognizedWordUnit word in e.Result.Words)  
      {  
        Console.WriteLine(  
          "    Lexical form ({1})" +  
          " Pronunciation ({0})" +  
          " Confidence ({2})",  
          word.Pronunciation, word.LexicalForm, word.Confidence);  
      }  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" /> を <see langword="null" /> に設定しようとしました。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">空の文字列を <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" /> に割り当てようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>読み上げが必要な単語の記述形式を取得または設定します。</summary>
        <value>
          <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> クラス インスタンスに含まれるテキスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、同じ値を表す、ですが、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>フォームが異なる場合があります、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>の単語または語句を<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>。 たとえば、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>の形式は、頭字語、"USA"などとを読み上げられるテキストの中に、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> 「アメリカ合衆国」には、適用されます。  
  
 既定値、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>プロパティが空の文字列:""です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" /> を <see langword="null" /> に設定しようとしました。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">空の文字列を <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" /> に割り当てようとしました。</exception>
        <exception cref="T:System.ArgumentException">引用符 (") を含む文字列を <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" /> に割り当てようとしました。</exception>
      </Docs>
    </Member>
  </Members>
</Type>