<Type Name="SrgsDocument" FullName="System.Speech.Recognition.SrgsGrammar.SrgsDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c4ac644ee8fc8699919d2ad2dd1014c24614713" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55362269" /></Metadata><TypeSignature Language="C#" Value="public class SrgsDocument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsDocument extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsDocument" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsDocument" />
  <TypeSignature Language="F#" Value="type SrgsDocument = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see href="https://www.w3.org/TR/speech-grammar/">Speech Recognition Grammar Specification (SRGS) Version 1.0</see> に準拠する、厳密に型指定されたランタイムの文法のビルドに使用されるデザイン時オブジェクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ことができます、空の構築<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>インスタンス化し、文法をなど、SRGS 要素を表すクラスのインスタンスを追加してビルド<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>、<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag>、および<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>します。 構築することも、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>のインスタンスから、既存の SRGS 準拠の XML 文法ファイルからインスタンス<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>、またはのインスタンスから<xref:System.Speech.Recognition.GrammarBuilder>します。  
  
 後に、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>オブジェクトが作成されるに読み込むことが、<xref:System.Speech.Recognition.Grammar>オブジェクトまたはによってコンパイル<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>、有効にすることによって読み取られる、<xref:System.Speech.Recognition.Grammar>オブジェクト。  
  
 参照してください[文法を使用して SrgsGrammar の作成](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14))で、 [.NET Framework のシステム音声プログラミング ガイド](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361625(v%3doffice.14))詳細と例。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">SrgsGrammar を使用して文法を作成します</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンス トラクターを使用して、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>クラスのインスタンスを作成する<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>から、 <xref:System.Speech.Recognition.GrammarBuilder>、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>、または<xref:System.Xml.XmlReader>XML 形式の文法へのパスを含む文字列からオブジェクトまたは空のインスタンスを開始します。<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターは、空を作成します。<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>インスタンス。 空の文章校正を構築する<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>インスタンスなどの SRGS の要素を表すクラスのインスタンスを追加<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>、<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>と<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>します。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>オブジェクトし、という名前の公開規則を作成し、`winnerRule`します。 作成し、<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>文字列で構成される"ワールド カップを勝ち抜いている民族:"、この項目を追加します、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A>ルールのプロパティ。 さらに 2 つのルールを作成し (`ruleEurope`と`ruleSAmerica`)、それぞれは、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> 3 種類を含むオブジェクト<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>オブジェクト。 その後、もう 1 つ<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>を含むオブジェクトが作成された<xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>を参照するオブジェクト`ruleEurope`と`ruleSAmerica`します。 新しい<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>オブジェクトに追加し、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A>プロパティの`winnerRule`します。 次に、3 つすべての規則 (`winnerRule`、 `ruleEurope`、および`ruleSAmerica`) に追加されます、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A>プロパティの<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>します。 最後に、3 つの規則は、文法のバイナリ表現にコンパイルされます。  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
  
  String fileName = Path.GetTempFileName();  
  using (FileStream stream = new FileStream(fileName, FileMode.Create))   
  {   
  
    // Compile the grammar to a binary format.  
    SrgsGrammarCompiler.Compile(document, stream);   
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsDocument(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsDocument : System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.SrgsGrammar.SrgsDocument" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsDocument builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:System.Speech.Recognition.GrammarBuilder" /> インスタンスを作成するために使用した <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> オブジェクト。</param>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> オブジェクトから <see cref="T:System.Speech.Recognition.GrammarBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例で、文法のビルド、<xref:System.Speech.Recognition.GrammarBuilder>インスタンスを使用して<xref:System.Speech.Recognition.Choices>オブジェクト。 これは、後、作成、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>から、<xref:System.Speech.Recognition.GrammarBuilder>オブジェクト。  
  
```csharp  
GrammarBuilder builder = null;  
  
// Create new Choices objects and add countries, and create GrammarBuilder objects.  
Choices choicesEurope = new Choices(new string[] { "England", "France", "Germany", "Italy" });  
GrammarBuilder europe = new GrammarBuilder(choicesEurope);  
  
Choices choicesSAmerica = new Choices(new string[] { "Argentina", "Brazil", "Uruguay" });  
GrammarBuilder sAmerica = new GrammarBuilder(choicesSAmerica);  
  
Choices worldCupWinnerChoices = new Choices(new GrammarBuilder[] {choicesEurope, choicesSAmerica});  
  
// Create new GrammarBuilder from a Choices object.  
builder = new GrammarBuilder(worldCupWinnerChoices);  
  
// Create an SrgsDocument object from a GrammarBuilder object.  
SrgsDocument document = new SrgsDocument(builder);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="builder" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument (System.Speech.Recognition.SrgsGrammar.SrgsRule grammarRootRule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsRule grammarRootRule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (grammarRootRule As SrgsRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsDocument(System::Speech::Recognition::SrgsGrammar::SrgsRule ^ grammarRootRule);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsDocument : System.Speech.Recognition.SrgsGrammar.SrgsRule -&gt; System.Speech.Recognition.SrgsGrammar.SrgsDocument" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsDocument grammarRootRule" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="grammarRootRule" Type="System.Speech.Recognition.SrgsGrammar.SrgsRule" />
      </Parameters>
      <Docs>
        <param name="grammarRootRule"><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> オブジェクト内の <see langword="root rule" />。</param>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスの新しいインスタンスを初期化し、文法のルート規則である <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> オブジェクトを指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターに指定されたルールの追加、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection>の<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>オブジェクトし、設定として、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root%2A>文法については、ルール。  
  
   
  
## Examples  
 次の例では、2 つの規則を作成します (`chooseCities`と`destCities`) のフライトの都市で配信元と変換先を選択します。 例では、初期化、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>インスタンスを使用して、`chooseCities`を引数としてルール。 例は、規則コレクションの内容と、ルート ルールの名前をコンソールに書き込みます。  
  
```csharp  
// Create a rule that contains a list of destination cities.  
SrgsRule destCities = new SrgsRule("Destination");  
SrgsOneOf toCities = new SrgsOneOf(new string[] { "New York", "Seattle", "Denver" });  
destCities.Add(toCities);  
  
// Create a list of origin cities and supporting phrases.  
SrgsOneOf fromCities = new SrgsOneOf(new SrgsItem[] {   
  new SrgsItem("Dallas"), new SrgsItem("Miami"), new SrgsItem("Chicago") });  
SrgsItem intro = new SrgsItem("I want to fly from");  
SrgsItem to = new SrgsItem("to");  
  
// Create the root rule of the grammar, and assemble the components.  
SrgsRule chooseCities = new SrgsRule("Trip");  
chooseCities.Add(intro);  
chooseCities.Add(fromCities);  
chooseCities.Add(to);  
chooseCities.Add(new SrgsRuleRef(destCities));  
  
// Create the SrgsDocument and specify the root rule to add.  
SrgsDocument bookFlight = new SrgsDocument(chooseCities);  
  
// Add the rule for the destination cities to the document's rule collection.  
bookFlight.Rules.Add(new SrgsRule[] { destCities });  
  
// Display the contents of the Rules collection and the name of the root rule.  
foreach (SrgsRule rule in bookFlight.Rules)  
{  
  Console.WriteLine("Rule " + rule.Id + " is in the rules collection");  
}  
Console.WriteLine("Root Rule " + bookFlight.Root.Id);  
  
// Create a Grammar object and load it to the recognizer.  
Grammar g = new Grammar(bookFlight);  
g.Name = ("City Chooser");  
recognizer.LoadGrammarAsync(g);  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="grammarRootRule" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsDocument(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsDocument : string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsDocument" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsDocument path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">SRGS XML ファイルの場所。</param>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> インスタンスの入力に使用する XML ドキュメントの場所を指定して、<see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、作成、新しい<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>"srgsDocumentFile.xml"という名前のファイルから。  
  
```csharp  
string srgsDocumentFile = Path.Combine(Path.GetTempPath(), "srgsDocumentFile.xml");  
SrgsDocument document = null;  
  
if (File.Exists(srgsDocumentFile))  
   document = new SrgsDocument(srgsDocumentFile);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="path" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="path" /> が空の文字列です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument (System.Xml.XmlReader srgsGrammar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader srgsGrammar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (srgsGrammar As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsDocument(System::Xml::XmlReader ^ srgsGrammar);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsDocument : System.Xml.XmlReader -&gt; System.Speech.Recognition.SrgsGrammar.SrgsDocument" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsGrammar" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="srgsGrammar" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="srgsGrammar"><see cref="T:System.Xml.XmlReader" /> XML インスタンスで作成された <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> オブジェクト。</param>
        <summary>XML 形式の文法ファイルを参照する <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> のインスタンスから、<see cref="T:System.Xml.XmlReader" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、の新しいインスタンスを作成します。<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>のインスタンスから<xref:System.Xml.XmlReader>"srgsDocumentFile.xml"ファイルを参照します。  
  
```csharp  
string srgsDocumentFile = Path.Combine(Path.GetTempPath(), "srgsDocumentFile.xml");  
SrgsDocument document = null;  
  
if (File.Exists(srgsDocumentFile))  
{  
  XmlReader reader = XmlReader.Create(srgsDocumentFile);  
  document = new SrgsDocument(reader);  
  reader.Close();  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="srgsGrammar" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AssemblyReferences">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; AssemblyReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; AssemblyReferences" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyReferences As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ AssemblyReferences { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyReferences : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> インスタンスのアセンブリの参照情報を取得します。</summary>
        <value><see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences" /> プロパティは、アセンブリ参照の一覧を含む文字列コレクションを返します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBehind">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; CodeBehind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; CodeBehind" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeBehind As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ CodeBehind { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeBehind : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> インスタンスの分離コードの情報を取得します。</summary>
        <value><see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind" /> プロパティは、ドキュメントの分離コードの一覧を含む文字列コレクションを返します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> インスタンスのカルチャ情報を取得または設定します。</summary>
        <value><see cref="T:System.Globalization.CultureInfo" /> 向けに現在のカルチャ情報を格納している <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Microsoft Windows と System.Speech API は、有効なすべての言語、国コードをそのまま使用します。 指定された言語を使用して、音声認識を実行する、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture%2A>プロパティ、言語、国コードをインストールする必要がありますをサポートする音声認識エンジン。 Microsoft Windows 7 に同梱されている音声認識エンジンは、次の言語、国コードで動作します。  
  
-   en GB。 English (United Kingdom)  
  
-   en-us (英語)。 英語 (米国)  
  
-   de-de などがあります。 ドイツ語 (ドイツ)  
  
-   ES-ES します。 スペイン語 (スペイン)  
  
-   個 フランス語 (フランス)  
  
-   JA-JP します。 日本語 (日本)  
  
-   ZH-CN します。 中国語 (中国)  
  
-   zh-tw があります。 中国語 (台湾)  
  
 "En"、"fr"などの 2 文字の言語コードまたは"es"も使用できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" /> に代入される値は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" /> に代入される値は <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Debug">
      <MemberSignature Language="C#" Value="public bool Debug { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Debug" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug" />
      <MemberSignature Language="VB.NET" Value="Public Property Debug As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Debug { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Debug : bool with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インライン スクリプトに行番号を追加するかどうかを取得または設定します。</summary>
        <value><see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug" /> プロパティは、行番号がデバッグ目的で追加された場合に <see langword="true" /> を返し、それ以外の場合は <see langword="false" /> を返します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportNamespaces">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; ImportNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; ImportNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportNamespaces As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ ImportNamespaces { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportNamespaces : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> の現在のインスタンスに関連する名前空間を取得します。</summary>
        <value><see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces" /> プロパティは、<see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> インスタンス内の関連名前空間の一覧を含む文字列コレクションを返します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Language : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラス内のインライン コードに使用されるプログラミング言語を取得または設定します。</summary>
        <value><see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language" /> プロパティは <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> が現在設定されているプログラミング言語を返します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As SrgsGrammarMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SrgsGrammar::SrgsGrammarMode Mode { System::Speech::Recognition::SrgsGrammar::SrgsGrammarMode get(); void set(System::Speech::Recognition::SrgsGrammar::SrgsGrammarMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスのモードを取得または設定します。</summary>
        <value><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> の認識モード。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode%2A>プロパティのメンバーを返します、<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode>入力の種類を決定する、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>が必要です。 2 つの有効な値は`Voice`音声入力、および`Dtmf`の電話に通常関連付けられている音がデュアル トーン多重周波数 (DTMF) の入力。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスの名前空間を取得または設定します。</summary>
        <value><see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace" /> プロパティは、現在の <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> の名前空間を返します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneticAlphabet">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet PhoneticAlphabet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet PhoneticAlphabet" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet" />
      <MemberSignature Language="VB.NET" Value="Public Property PhoneticAlphabet As SrgsPhoneticAlphabet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SrgsGrammar::SrgsPhoneticAlphabet PhoneticAlphabet { System::Speech::Recognition::SrgsGrammar::SrgsPhoneticAlphabet get(); void set(System::Speech::Recognition::SrgsGrammar::SrgsPhoneticAlphabet value); };" />
      <MemberSignature Language="F#" Value="member this.PhoneticAlphabet : System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスの発音記号を取得または設定します。</summary>
        <value><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> オブジェクトにカスタム発音を指定するために使用する必要がある発音記号を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 発音は、文字、数字、または組み合わせの場合がありますの文字で構成されるスマート フォンで構成されます。 各電話では、音声の一意のサウンドについて説明します。 これは、ラテン アルファベットとは対照的任意の文字が複数の音声サウンドを表す場合があります。 単語"thing"と「、」単語"candy"と「中止」、文字"c"の別の発音や文字の組み合わせのさまざまな発音"th"を検討します。  
  
 System.Speech ではカスタム発音を指定するのに 3 つの発音のいずれかを使用できます。国際電話 (IPA) や汎用音素セット (UPS)、SAPI は電話セットです。 指定された発音のインライン発音の定義に使用されるどの電話設定を決定します<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>オブジェクト。 指定された電話<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>で指定された発音に一致する必要があります<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>します。  
  
 参照してください[辞書と発音](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14))詳細についてはします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsRule Root { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.SrgsGrammar.SrgsRule Root" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root" />
      <MemberSignature Language="VB.NET" Value="Public Property Root As SrgsRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SrgsGrammar::SrgsRule ^ Root { System::Speech::Recognition::SrgsGrammar::SrgsRule ^ get(); void set(System::Speech::Recognition::SrgsGrammar::SrgsRule ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.Speech.Recognition.SrgsGrammar.SrgsRule with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスのルート ルールを取得または設定します。</summary>
        <value><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> のルート規則として指定された規則を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>オブジェクトは、ドキュメントに既にあります<xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection>に設定する前に、**ルート ルール**します。  
  
 ルート ルールを設定することも、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>オブジェクトを使用して、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>オブジェクトへの引数として、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>コンス トラクター。  
  
   
  
## Examples  
 次の例では、という名前の規則を作成する`winnerRule`、し、作成、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>という名前のオブジェクト`document`します。 例を呼び出して、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add%2A>ドキュメントにルールを追加します。 最後に、ドキュメントの設定例では、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root%2A>プロパティを`winnerRule`ため、これを行う、`root rule`によって定義されている文法については、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>オブジェクト。  
  
```csharp  
SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
winnerRule.Scope = SrgsRuleScope.Public;  
  
SrgsDocument document = new SrgsDocument();  
  
document.Rules.Add(winnerRule);  
document.Root = winnerRule;   
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />
      </Docs>
    </Member>
    <Member MemberName="Rules">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection Rules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection Rules" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rules As SrgsRulesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SrgsGrammar::SrgsRulesCollection ^ Rules { System::Speech::Recognition::SrgsGrammar::SrgsRulesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rules : System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" Usage="System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスに対して現在定義されている規則のコレクションを取得します。</summary>
        <value><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> オブジェクトに定義された規則を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加することができます<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>オブジェクトを<xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection>を使用して、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add%2A>メソッドを<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A>プロパティ。 初期化する場合、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>オブジェクトし、指定、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>オブジェクトを引数として、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>が自動的に追加、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection>の<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>します。  
  
   
  
## Examples  
 次の例は、フレーズを認識する文法を作成後に「は、ワールド カップを勝ち抜いて民族」ワールド カップが勝利した国の名前。 例は、作成、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>オブジェクト、およびという名前の公開規則を作成し、`winnerRule`します。 ルールに文字列を追加した後は`winnerRule`、例では、さらに 2 つのルールを作成します (`ruleEurope`と`ruleSAmerica`)、それぞれの国の一覧を含むです。 使用して、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add%2A>メソッドの例では、3 つすべての規則を追加します (`winnerRule`、 `ruleEurope`、および`ruleSAmerica`) に、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A>のプロパティ、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>します。  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" />
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public string Script { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Script" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" />
      <MemberSignature Language="VB.NET" Value="Public Property Script As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Script { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Script : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスの .NET スクリプト言語を取得または設定します。</summary>
        <value><see langword="Script" /> プロパティは、<see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスの現在の .NET スクリプト言語を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  このプロパティは非推奨とされました。 使用は推奨されなくなりました。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" /> プロパティを null に設定しようとしました。</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" /> プロパティを空の文字列に設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSrgs">
      <MemberSignature Language="C#" Value="public void WriteSrgs (System.Xml.XmlWriter srgsGrammar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteSrgs(class System.Xml.XmlWriter srgsGrammar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteSrgs (srgsGrammar As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteSrgs(System::Xml::XmlWriter ^ srgsGrammar);" />
      <MemberSignature Language="F#" Value="member this.WriteSrgs : System.Xml.XmlWriter -&gt; unit" Usage="srgsDocument.WriteSrgs srgsGrammar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srgsGrammar" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="srgsGrammar"><see cref="T:System.Xml.XmlWriter" /> インスタンスの書き込みに使用する <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />。</param>
        <summary>[音声認識文法仕様 (SRGS) バージョン 1.0](https://go.microsoft.com/fwlink/?LinkId=201761) に準拠する XML 形式の文法ファイルに <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> オブジェクトの内容を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、作成、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>オブジェクト、およびという名前の公開規則を作成し、`winnerRule`します。 作成し、<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>文字列で構成される"ワールド カップを勝ち抜いている民族:"、この項目を追加します、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A>ルールのプロパティ。 さらに 2 つのルールを作成し (`ruleEurope`と`ruleSAmerica`)、それぞれは、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> 3 種類を含むオブジェクト<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>オブジェクト。 その後、もう 1 つ<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>を含むオブジェクトが作成された<xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>を参照するオブジェクト`ruleEurope`と`ruleSAmerica`します。 新しい<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>オブジェクトに追加し、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A>プロパティの`winnerRule`します。 次に、3 つすべての規則 (`winnerRule`、 `ruleEurope`、および`ruleSAmerica`) に追加されます、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A>のプロパティ、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>します。 例がのインスタンスと空の XML ファイルを作成する最後に、<xref:System.Xml.XmlWriter>します。  <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs%2A>メソッドは、<xref:System.Xml.XmlWriter>インスタンスの内容を記述する、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> XML ファイルにします。  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
  
  // Create a string object with the path to the file to use.  
  string srgsDocumentFile = Path.Combine(Path.GetTempPath(), "srgsDocumentFile.xml");  
  
  // Create an XmlWriter object and pass the file path.  
  XmlWriter writer = XmlWriter.Create(srgsDocumentFile);  
  
  // Write the contents of the XmlWriter object to an SRGS-compatible XML file.  
  document.WriteSrgs(writer);  
  writer.Close();  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="srgsGrammar" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlBase">
      <MemberSignature Language="C#" Value="public Uri XmlBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri XmlBase" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlBase As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ XmlBase { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlBase : Uri with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスのベース URI を取得または設定します。</summary>
        <value><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> の現在のベース URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase%2A> プロパティ内の相対 Uri を解決するために使用する値を取得、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>オブジェクト。 値があるとします<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase%2A>は"http://www.contoso.com/"および<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>など、別のドキュメントへの相対的なルール参照が含まれています`SrgsRuleRef("ExternalGrammar.grxml")`します。 これは、外部のドキュメントへの絶対パスを作成します:`http://www.contoso.com/ExternalGrammar.grxml`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>