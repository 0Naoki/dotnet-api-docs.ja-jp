<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AutomationPeer.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54010b40cec462a00ecf4ff708ba7fdd2d76a04c1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4010b40cec462a00ecf4ff708ba7fdd2d76a04c1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.Peers.AutomationPeer">
          <source>Provides a base class that exposes an element to UI Automation.</source>
          <target state="translated">UI オートメーションに要素を公開する基本クラスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Peers.AutomationPeer">
          <source>When <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> queries the root of a <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> application about an element, the root returns the <ph id="ph3">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> peer for that element.</source>
          <target state="translated">ときに<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>のルートのクエリ、<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>要素に関するアプリケーションのルートを返します、<ph id="ph3">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>その要素のピアです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Peers.AutomationPeer">
          <source>The peer also responds to <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> queries about its corresponding element.</source>
          <target state="translated">対応して、ピア<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>クエリについて、対応する要素。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.#ctor">
          <source>Provides initialization for base class values when they are called by the constructor of a derived class.</source>
          <target state="translated">派生クラスのコンストラクターによって呼び出されるときに、基本クラスの値を初期化します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> that is reported to the automation client as a source for all the events that come from this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> に由来するすべてのイベントのソースとして、オートメーション クライアントに報告される <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> を取得または設定します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> that is the source of events.</source>
          <target state="translated">イベントのソースである <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey">
          <source>Gets the accelerator key combinations for the element that is associated with the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> peer.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> ピアに関連付けられている要素の、アクセラレータ キーの組み合わせを取得します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey">
          <source>The accelerator key.</source>
          <target state="translated">アクセラレータ キー。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore">
          <source>The accelerator key.</source>
          <target state="translated">アクセラレータ キー。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore">
          <source>If an application responds to keyboard events to provide shortcut key behavior, it should return a string that contains the keyboard shortcut combination.</source>
          <target state="translated">アプリケーションは、ショートカット キーの動作を提供するキーボード イベントに応答する場合は、キーボード ショートカットの組み合わせを表す文字列を返します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore">
          <source>For example, for an element that can copy text to the clipboard, this attached property might be set to the value "CTRL+C".</source>
          <target state="translated">たとえば、テキストをクリップボードにコピーする要素は、この添付プロパティを値"CTRL + C"に設定可能性があります。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey">
          <source>Gets the access key for the element that is associated with the automation peer.</source>
          <target state="translated">オートメーション ピアに関連付けられている要素のアクセス キーを取得します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey">
          <source>The string that contains the access key.</source>
          <target state="translated">アクセス キーを含む文字列。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKeyCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKeyCore">
          <source>The string that contains the access key.</source>
          <target state="translated">アクセス キーを含む文字列。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKeyCore">
          <source>An access key (sometimes referred to as a keyboard shortcut or mnemonic) is a character in the text of a menu, menu item, or label of a control such as a button that invokes the associated menu function.</source>
          <target state="translated">(キーボード ショートカットまたはニーモニックとも呼ばれます) のアクセス キーは、メニューのメニュー項目または関連付けられたメニュー関数を呼び出すボタンなどのコントロールのラベルのテキストの文字です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKeyCore">
          <source>For example, to provide a shortcut way to open the <ph id="ph1">`File`</ph> menu (for which the access key is typically F), an element might have this attached property set to "ALT+F".</source>
          <target state="translated">たとえば、ショートカットを表示する方法を提供するため、<ph id="ph1">`File`</ph>メニュー (アクセス キーは通常 F)、要素がありますこの添付プロパティを"alt キーを押しながら F"に設定します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType">
          <source>Gets the control type for the element that is associated with the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> peer.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> ピアに関連付けられている要素のコントロール型を取得します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType">
          <source>The control type.</source>
          <target state="translated">コントロール型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlTypeCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlTypeCore">
          <source>The control type.</source>
          <target state="translated">コントロール型。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /&gt;</ph> of the element that is associated with the automation peer.</source>
          <target state="translated">オートメーション ピアに関連付けられている要素の <ph id="ph1">&lt;see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId">
          <source>The identifier.</source>
          <target state="translated">識別子。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId">
          <source>The value of the automation identifier is the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;</ph> property.</source>
          <target state="translated">オートメーション識別子の値は、<ph id="ph1">&lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId">
          <source>If that property is not set, the value is the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> property.</source>
          <target state="translated">そのプロパティが設定されていない場合、値は、<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationIdCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationIdCore">
          <source>The string that contains the identifier.</source>
          <target state="translated">識別子を格納する文字列。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationIdCore">
          <source>The value of the automation identifier is the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;</ph> property.</source>
          <target state="translated">オートメーション識別子の値は、<ph id="ph1">&lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationIdCore">
          <source>If that property is not set, the value is the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> property.</source>
          <target state="translated">そのプロパティが設定されていない場合、値は、<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> object that represents the screen coordinates of the element that is associated with the automation peer.</source>
          <target state="translated">オートメーション ピアに関連付けられている要素の画面座標を表す <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle">
          <source>The bounding rectangle.</source>
          <target state="translated">外接する四角形。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangleCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangleCore">
          <source>The bounding rectangle.</source>
          <target state="translated">外接する四角形。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren">
          <source>Gets the collection of <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /&gt;</ph> elements that are represented in the UI Automation tree as immediate child elements of the automation peer.</source>
          <target state="translated">UI オートメーション ツリーでオートメーション ピアの直接の子要素として表現される <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /&gt;</ph> 要素のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren">
          <source>The collection of child elements.</source>
          <target state="translated">子要素のコレクション。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore">
          <source>The collection of child elements.</source>
          <target state="translated">子要素のコレクション。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName">
          <source>Gets a name that is used with <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationControlType" /&gt;</ph>, to differentiate the control that is represented by this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationControlType" /&gt;</ph> で表されるコントロールと区別するために <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> で使用される名前を取得します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName">
          <source>The class name.</source>
          <target state="translated">クラス名。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClassNameCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClassNameCore">
          <source>The class name.</source>
          <target state="translated">クラス名。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> on the element that is associated with the automation peer that responds to a mouse click.</source>
          <target state="translated">マウスのクリックに応答するオートメーション ピアに関連付けられている要素上の <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint">
          <source>A point in the clickable area of the element.</source>
          <target state="translated">要素のクリック可能な領域内のポイント。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint">
          <source>For example, if the element represents a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>, a clickable point is any point in the visible client area of the <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> that issues the command that the button represents when it is clicked by the mouse.</source>
          <target state="translated">たとえば、次の要素を表します、 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>、クリック可能なポイントは、表示されているクライアント領域の任意の時点、<ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>をマウスでクリックしてされたときに、ボタンが表すコマンドを発行します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePointCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePointCore">
          <source>A point within the clickable area of the element.</source>
          <target state="translated">要素のクリック可能な領域内のポイント。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText">
          <source>Gets text that describes the functionality of the control that is associated with the automation peer.</source>
          <target state="translated">オートメーション ピアに関連付けられているコントロールの機能を説明するテキストを取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText">
          <source>The help text.</source>
          <target state="translated">ヘルプ テキスト。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText">
          <source>The returned string typically provides the same text that is provided by the tooltip for the control.</source>
          <target state="translated">返される文字列は、通常、コントロールのツールヒントによって提供されるのと同じテキストを提供します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpTextCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpTextCore">
          <source>The help text.</source>
          <target state="translated">ヘルプ テキスト。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>Tells <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> where in the <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> tree to place the <ph id="ph3">&lt;see langword="hwnd" /&gt;</ph> being hosted by a <ph id="ph4">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> element.</source>
          <target state="translated"><ph id="ph4">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> 要素によってホストされている <ph id="ph3">&lt;see langword="hwnd" /&gt;</ph> を配置する、<ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> ツリー内の場所を <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> に指示します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>This method returns the hosted <ph id="ph1">&lt;see langword="hwnd" /&gt;</ph> to <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> for controls that host <ph id="ph3">&lt;see langword="hwnd" /&gt;</ph> objects.</source>
          <target state="translated">このメソッドは、ホストされている <ph id="ph1">&lt;see langword="hwnd" /&gt;</ph> を、<ph id="ph3">&lt;see langword="hwnd" /&gt;</ph> オブジェクトをホストするコントロールの <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> に返します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>This method returns the hosted <ph id="ph1">`hwnd`</ph> to <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> for controls that host <ph id="ph3">`hwnd`</ph> objects.</source>
          <target state="translated">このメソッドは、ホストされている <ph id="ph1">`hwnd`</ph> を、<ph id="ph3">`hwnd`</ph> オブジェクトをホストするコントロールの <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> に返します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> that is associated with an element that immediately hosts an <ph id="ph2">`hwnd`</ph> must override this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph>直ちにをホストしている要素に関連付けられている、<ph id="ph2">`hwnd`</ph>このメソッドをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>If this method is not overridden, <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> places the <ph id="ph2">`hwnd`</ph> as a child element of the <ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> that hosts the whole application.</source>
          <target state="translated">このメソッドがオーバーライドされていない場合<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>配置、<ph id="ph2">`hwnd`</ph>の子要素として、<ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>全体のアプリケーションをホストします。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>Typically, you want to override this default behavior and set <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> to position the hosted <ph id="ph2">`hwnd`</ph> parallel to the place where it is located in the <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> logical tree.</source>
          <target state="translated">通常、この既定の動作をオーバーライドし、設定を選択<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>ホストを配置する<ph id="ph2">`hwnd`</ph>並列に配置されている場所に、<ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>論理ツリー。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>Except in hosting scenarios, do not allow <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> types to override this method.</source>
          <target state="translated">ホストのシナリオでは、許可しない<ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph>このメソッドをオーバーライドする型。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>In addition to overriding this method, the <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> types that are associated with an element that immediately hosts an <ph id="ph2">`hwnd`</ph> must return the <ph id="ph3">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> that is cast to <ph id="ph4">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;</ph> in response to WM_GETOBJECT coming to the hosted <ph id="ph5">`hwnd`</ph>.</source>
          <target state="translated">このメソッドをオーバーライドするだけでなく、<ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph>直ちにをホストしている要素に関連付けられている型、<ph id="ph2">`hwnd`</ph>返す必要があります、<ph id="ph3">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph>にキャストする<ph id="ph4">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;</ph>WM_GETOBJECT で受信するホストへの応答<ph id="ph5">`hwnd`</ph>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>To get a pointer to <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;</ph>, call <ph id="ph2">&lt;xref:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle%2A&gt;</ph>.</source>
          <target state="translated">ポインターを取得する<ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;</ph>、呼び出す<ph id="ph2">&lt;xref:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus">
          <source>Gets text that conveys the visual status of the element that is associated with this automation peer.</source>
          <target state="translated">オートメーション ピアに関連付けられている要素の表示状態を表すテキストを取得します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus">
          <source>The status.</source>
          <target state="translated">ステータス。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus">
          <source>For example, the status of a messenger contact might be "Busy" or "Online".</source>
          <target state="translated">たとえば、「ビジー」または"Online"messenger の連絡先の状態があります。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatusCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatusCore">
          <source>The status.</source>
          <target state="translated">ステータス。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType">
          <source>Gets a string that describes what kind of item an object represents.</source>
          <target state="translated">オブジェクトが表す項目の種類を説明する文字列を取得します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType">
          <source>The kind of item.</source>
          <target state="translated">項目の種類。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType">
          <source>Examples of the returned string are "Mail Message", "Contact", and "Document".</source>
          <target state="translated">返される文字列には、「メッセージ」、"Contact"、"Document"などがあります。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemTypeCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemTypeCore">
          <source>The kind of item.</source>
          <target state="translated">項目の種類。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph> that is targeted to the element.</source>
          <target state="translated">要素を対象とする <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph> の <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /&gt;</ph> for the element that is targeted by the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph> によりターゲットとされる要素の <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>For example, if the element is a <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy%2A&gt;</ph> method gets the <ph id="ph3">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> for the <ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph> that is associated with the <ph id="ph5">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>.</source>
          <target state="translated">たとえば、次の要素が、<ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>コントロール、<ph id="ph2">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy%2A&gt;</ph>メソッドを取得、<ph id="ph3">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph>の<ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph>と関連付けられている、<ph id="ph5">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>In the following image, the <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> "Themes" is targeted to the <ph id="ph2">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>; therefore the <ph id="ph3">&lt;xref:System.Windows.Controls.AccessText.AccessKey%2A&gt;</ph> for the <ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph> also targets the <ph id="ph5">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>.</source>
          <target state="translated">次の図に、 <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> 「テーマ」を対象とする、<ph id="ph2">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>です。 そのため、<ph id="ph3">&lt;xref:System.Windows.Controls.AccessText.AccessKey%2A&gt;</ph>の、<ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph>もターゲット、<ph id="ph5">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>When the user presses <bpt id="p1">**</bpt>ALT<ept id="p1">**</ept><ph id="ph1">+</ph><bpt id="p2">**</bpt>T<ept id="p2">**</ept>, the <ph id="ph2">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> gets focus instead of the <ph id="ph3">&lt;xref:System.Windows.Controls.Label&gt;</ph>.</source>
          <target state="translated">押されたとき<bpt id="p1">**</bpt>ALT<ept id="p1">**</ept><ph id="ph1">+</ph><bpt id="p2">**</bpt>T<ept id="p2">**</ept>、<ph id="ph2">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>の代わりにフォーカスを取得、<ph id="ph3">&lt;xref:System.Windows.Controls.Label&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source><bpt id="p1">![</bpt>Display properties shows labeled by usage<ept id="p1">]</ept><bpt id="p2">(~/add/media/labeledby.JPG "</bpt>Display properties shows labeled by usage<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>使用してラベルの付いた表示プロパティを示しています<ept id="p1">]</ept><bpt id="p2">(~/add/media/labeledby.JPG "</bpt>を使用してラベルの付いた表示プロパティを示しています<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy%2A&gt;</ph> method for <ph id="ph2">&lt;xref:System.Windows.Automation.Peers.ComboBoxAutomationPeer&gt;</ph> returns the <ph id="ph3">&lt;xref:System.Windows.Automation.Peers.LabelAutomationPeer&gt;</ph> for the corresponding <ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy%2A&gt;</ph>メソッド<ph id="ph2">&lt;xref:System.Windows.Automation.Peers.ComboBoxAutomationPeer&gt;</ph>を返します、<ph id="ph3">&lt;xref:System.Windows.Automation.Peers.LabelAutomationPeer&gt;</ph>対応の<ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>This enables an automation client to get the text string that describes the <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>.</source>
          <target state="translated">これにより、オートメーション クライアントで説明するテキスト文字列を取得する、<ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledByCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledByCore">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /&gt;</ph> for the element that is targeted by the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph> によりターゲットとされる要素の <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSetting">
          <source>Gets the notification characteristics of a live region that is associated with this automation peer.</source>
          <target state="translated">このオートメーション ピアと関連付けられたライブ領域の通知特性を取得します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSetting">
          <source>The notification characteristics.</source>
          <target state="translated">通知特性。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSetting">
          <source>This method calls the derived implementation of <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore&gt;</ph>.</source>
          <target state="translated">このメソッドは派生の実装を呼び出して<ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore">
          <source>When overridden in a derived class, returns the notification characteristics of a live region.</source>
          <target state="translated">派生クラスでオーバーライドされると、ライブ領域の通知特性を返します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore">
          <source>Called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSetting" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSetting" /&gt;</ph> メソッドによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore">
          <source>The notification characteristics of a live region.</source>
          <target state="translated">ライブ領域の通知特性。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType">
          <source>Gets a human-readable localized string that represents the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationControlType" /&gt;</ph> value for the control that is associated with this automation peer.</source>
          <target state="translated">このオートメーション ピアに関連付けられているコントロールの <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationControlType" /&gt;</ph> の値を、ユーザーが判読できるローカライズされた文字列の形で取得します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType">
          <source>The type of the control.</source>
          <target state="translated">コントロールの型。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlTypeCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlTypeCore">
          <source>The type of the control.</source>
          <target state="translated">コントロールの型。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetName">
          <source>Gets text that describes the element that is associated with this automation peer.</source>
          <target state="translated">このオートメーション ピアに関連付けられている要素を説明するテキストを取得します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetName">
          <source>The name.</source>
          <target state="translated">名前。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetName">
          <source>This method calls the derived implementation of <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetNameCore%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは派生の実装を呼び出して<ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetNameCore%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>The string that contains the label.</source>
          <target state="translated">ラベルを含む文字列。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>You can think of this value as a string that users use to explain the control they are referring to.</source>
          <target state="translated">ユーザーを使用して参照しているコントロールの説明を文字列として、この値を考えることができます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>This property is used by tools such as Narrator to tell the user what the control is.</source>
          <target state="translated">このプロパティは、コントロールの内容をユーザーに伝えるためナレーターなどのツールによって使用されます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>For example, a button with a string "OK" should return "OK".</source>
          <target state="translated">たとえば、文字列"OK"のボタンは、"OK"を返す必要があります。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> control that lets users select a color might return "Colors".</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>の色を選択できるようにするコントロールは、「色」を返す場合があります。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>Make sure that you have assigned a name to all controls in the <ph id="ph1">[!INCLUDE[TLA#tla_gui](~/includes/tlasharptla-gui-md.md)]</ph> so that accessibility tools such as screen readers can refer to each control in a localized manner.</source>
          <target state="translated">すべてのコントロールに名前を割り当てることを確認してください、<ph id="ph1">[!INCLUDE[TLA#tla_gui](~/includes/tlasharptla-gui-md.md)]</ph>ユーザー補助ツールなど、スクリーン リーダーは、ローカライズされた方法で各コントロールを参照できるようにします。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation">
          <source>Gets a value that indicates the explicit control orientation, if any.</source>
          <target state="translated">コントロールの向きが明示的に設定されている場合にその向きを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation">
          <source>The orientation of the control.</source>
          <target state="translated">コントロールの向きです。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientationCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientationCore">
          <source>The orientation of the control.</source>
          <target state="translated">コントロールの向きです。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetParent">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> that is the parent of this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> の親である <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetParent">
          <source>The parent automation peer.</source>
          <target state="translated">親オートメーション ピア。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.PatternInterface" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.PatternInterface" /&gt;</ph> 列挙体の値。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
          <source>When overridden in a derived class, gets the control pattern that is associated with the specified <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.PatternInterface" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定された <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.PatternInterface" /&gt;</ph> に関連付けられているコントロール パターンを取得します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
          <source>The object that implements the pattern interface; <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this peer does not support this interface.</source>
          <target state="translated">パターン インターフェイスを実装するオブジェクト。このインターフェイスがこのピアでサポートされていない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint(System.Windows.Point)">
          <source>The position on the screen to get the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> を取得するための画面上の位置。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint(System.Windows.Point)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> from the specified point.</source>
          <target state="translated">指定したポイントから <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint(System.Windows.Point)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> at the specified point.</source>
          <target state="translated">指定したポイントにある <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPointCore(System.Windows.Point)">
          <source>The position on the screen to get the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> を取得するための画面上の位置。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPointCore(System.Windows.Point)">
          <source>When overridden in a derived class, is called from <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint(System.Windows.Point)" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint(System.Windows.Point)" /&gt;</ph> から呼び出されます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPointCore(System.Windows.Point)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> at the specified point.</source>
          <target state="translated">指定したポイントにある <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus">
          <source>Gets a value that indicates whether the element that is associated with this automation peer currently has keyboard focus.</source>
          <target state="translated">このオートメーション ピアに関連付けられている要素に現在キーボード フォーカスがあるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element has keyboard focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素にキーボード フォーカスがある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocusCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocusCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element has keyboard focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素にキーボード フォーカスがある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>Triggers recalculation of the main properties of the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> and raises the <ph id="ph2">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> notification to the Automation Client if the properties changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> のメイン プロパティの再計算をトリガーし、プロパティが変更された場合はオートメーション クライアントへの <ph id="ph2">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> 通知を発生させます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>Examples of main properties include, but are not limited to, <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.LogicalChildren%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;</ph>.</source>
          <target state="translated">主要なプロパティの例に限定されない<ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.LogicalChildren%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>Typically, updates and notifications happen automatically after the update of the layout in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">通常、更新および通知自動的に行われますでレイアウトの更新後<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>(The update occurs in response to the <ph id="ph1">&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;</ph> event.) Sometimes, however, properties change without raising the <ph id="ph2">&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;</ph> event.</source>
          <target state="translated">(への応答が発生した更新プログラム、<ph id="ph1">&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;</ph>イベントです)。場合によっては、ただし、プロパティ変更を発生させず、<ph id="ph2">&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>For example, when the whole <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> moves, the <ph id="ph2">&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;</ph> event is not raised.</source>
          <target state="translated">たとえば、全体<ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>に移動、<ph id="ph2">&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;</ph>イベントは発生しません。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>In this example, the set of <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;</ph> objects change because the objects are expressed in screen coordinates.</source>
          <target state="translated">この例では、一連の<ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;</ph>オブジェクトのオブジェクトは画面座標で表されているために変更します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> must call <ph id="ph2">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer%2A&gt;</ph> on its peer on <ph id="ph3">&lt;xref:System.Windows.Automation.Peers.WindowAutomationPeer&gt;</ph>.</source>
          <target state="translated">したがって、<ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>呼び出す必要があります<ph id="ph2">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer%2A&gt;</ph>、ピア上で<ph id="ph3">&lt;xref:System.Windows.Automation.Peers.WindowAutomationPeer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
          <source>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user.</source>
          <target state="translated">この Automation Peer に関連付けられている要素が、ユーザーに提示されるデータを含むかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is a content element; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素がコンテンツ要素である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
          <source>A content element contains data that is presented to the user.</source>
          <target state="translated">コンテンツの要素には、ユーザーに表示されるデータが含まれています。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
          <source>An example of a content element is an item in a list box or a button in a dialog box.</source>
          <target state="translated">コンテンツ要素の例は、リスト ボックス内のアイテムまたはダイアログ ボックスのボタンです。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
          <source>You typically use non-content elements (which are also referred to as peripheral elements) to work with the content in a composite control.</source>
          <target state="translated">通常、非コンテンツ要素 (これとも呼びます周辺要素) を使用するには、複合コントロールのコンテンツを操作します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
          <source>An example of a non-content element is the button in a drop-down control.</source>
          <target state="translated">非コンテンツ要素の例は、ドロップダウン コントロールのボタンです。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElementCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElementCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is a content element; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素がコンテンツ要素である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement">
          <source>Gets a value that indicates whether the element is understood by the user as interactive or as contributing to the logical structure of the control in the <ph id="ph1">[!INCLUDE[TLA2#tla_gui](~/includes/tla2sharptla-gui-md.md)]</ph>.</source>
          <target state="translated">要素がユーザーに対話的に認識されるか、または <ph id="ph1">[!INCLUDE[TLA2#tla_gui](~/includes/tla2sharptla-gui-md.md)]</ph> のコントロールの論理構造を構成するものであるかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is a control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素がコントロールである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElementCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElementCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is a control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素がコントロールである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled">
          <source>Gets a value that indicates whether the element associated with this automation peer supports interaction.</source>
          <target state="translated">このオートメーション ピアに関連付けられている要素で対話がサポートされるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element supports interaction; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素で対話がサポートされる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabledCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabledCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the automation peer can receive and send events; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">オートメーション ピアがイベントを送受信できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Peers.AutomationPeer.IsHwndHost">
          <source>Gets a value that indicates whether the element that is associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> hosts <ph id="ph2">&lt;see langword="hwnds" /&gt;</ph> in <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> に関連付けられている要素が <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> で <ph id="ph2">&lt;see langword="hwnds" /&gt;</ph> をホストしているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Peers.AutomationPeer.IsHwndHost">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element that is associated with this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> hosts <ph id="ph3">&lt;see langword="hwnds" /&gt;</ph> in <ph id="ph4">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> が <ph id="ph4">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> で <ph id="ph1">&lt;see langword="true" /&gt;</ph> をホストしている場合は <ph id="ph3">&lt;see langword="hwnds" /&gt;</ph>。それ以外の場合は <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Peers.AutomationPeer.IsHwndHost">
          <source>Two examples of elements that host <ph id="ph1">`hwnds`</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> are <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">ホストしている要素の 2 つの例<ph id="ph1">`hwnds`</ph>で<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>は<ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph>と<ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Peers.AutomationPeer.IsHwndHost">
          <source>These peers must also override <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore%2A&gt;</ph>.</source>
          <target state="translated">これらのピアをオーバーライドする必要がありますも<ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable">
          <source>Gets a value that indicates whether the element can accept keyboard focus.</source>
          <target state="translated">要素がキーボード フォーカスを受け入れることができるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element can accept keyboard focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素がキーボード フォーカスを受け入れることができる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusableCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusableCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element can accept keyboard focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素がキーボード フォーカスを受け入れることができる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
          <source>Gets a value that indicates whether an element is off the screen.</source>
          <target state="translated">要素が画面から外れているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is not on the screen; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素が画面上にない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
          <source>This property does not indicate whether the element is visible.</source>
          <target state="translated">このプロパティは、要素が表示されているかどうかを示すものではありません。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
          <source>In some circumstances, an element is on the screen but is still not visible.</source>
          <target state="translated">状況によっては、要素は、画面には表示されていないです。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
          <source>For example, if the element is on the screen but obscured by other elements, it might not be visible.</source>
          <target state="translated">たとえば、要素が他の要素によって非表示になるが、画面上にある場合は、これは表示されません。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
          <source>In this case, the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">この場合、メソッドを返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreenCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreenCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is not on the screen; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素が画面上にない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword">
          <source>Gets a value that indicates whether the element contains sensitive content.</source>
          <target state="translated">機密情報が要素に格納されているかどうか示す値を取得します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element contains sensitive content such as a password; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">パスワードなどの機密情報が要素に格納されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsPasswordCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsPasswordCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element contains sensitive content; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">機密情報が要素に格納されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm">
          <source>Gets a value that indicates whether the element that is associated with this peer must be completed on a form.</source>
          <target state="translated">このピアに関連付けられている要素がフォームの必須要素かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element must be completed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素が必須要素の場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForFormCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForFormCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is must be completed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素が入力を必要とする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source>One of the enumeration values.</source>
          <target state="translated">列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source>Gets a value that indicates whether <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> is listening for the specified event.</source>
          <target state="translated">指定したイベントを <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>がリッスンしているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source>A <ph id="ph1">&lt;see langword="boolean" /&gt;</ph> that indicates whether <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> is listening for the event.</source>
          <target state="translated">該当するイベントを <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>がリッスンしているかどうかを示す <ph id="ph1">&lt;see langword="boolean" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source>Typically, you call this method before creating the <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> that raises the event.</source>
          <target state="translated">通常、作成する前にこのメソッドを呼び出す、<ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph>イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source>This method is a performance measure because if <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> does not listen for the event, it does not make sense to create a peer to raise one.</source>
          <target state="translated">このメソッドは、パフォーマンスの基準場合<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>はリッスンしません、イベントのことは無意味にピアを発生させるを作成します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source>This method is static and only answers if a delegate listens for the specified event in <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>, not for an event on a specific element.</source>
          <target state="translated">このメソッドは静的であり、デリゲートがで指定したイベントをリッスンする場合にのみ応答<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>ではなく、イベントの特定の要素。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> can create broadcast listeners; therefore the per-element information is irrelevant.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> ブロードキャストのリスナーを作成できます。そのため、要素ごとの情報は無効です。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.PeerFromProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)">
          <source>The class that implements <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph> を実装するクラス。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.PeerFromProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> for the specified <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph> proxy.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> プロキシの <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.PeerFromProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> for the specified <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph> proxy.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> プロキシの <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ProviderFromPeer(System.Windows.Automation.Peers.AutomationPeer)">
          <source>The automation peer.</source>
          <target state="translated">オートメーション ピア。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ProviderFromPeer(System.Windows.Automation.Peers.AutomationPeer)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph> for the specified <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ProviderFromPeer(System.Windows.Automation.Peers.AutomationPeer)">
          <source>The proxy.</source>
          <target state="translated">プロキシ。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAsyncContentLoadedEvent(System.Windows.Automation.AsyncContentLoadedEventArgs)">
          <source>The event data.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAsyncContentLoadedEvent(System.Windows.Automation.AsyncContentLoadedEventArgs)">
          <source>Called by the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> to raise the <ph id="ph2">&lt;see cref="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> によって呼び出され、<ph id="ph2">&lt;see cref="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAutomationEvent(System.Windows.Automation.Peers.AutomationEvents)">
          <source>The event identifier.</source>
          <target state="translated">イベント識別子。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAutomationEvent(System.Windows.Automation.Peers.AutomationEvents)">
          <source>Raises an automation event.</source>
          <target state="translated">オートメーション イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(System.Windows.Automation.AutomationProperty,System.Object,System.Object)">
          <source>The property that changed.</source>
          <target state="translated">変更されたプロパティ。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(System.Windows.Automation.AutomationProperty,System.Object,System.Object)">
          <source>The previous value of the property.</source>
          <target state="translated">プロパティの以前の値。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(System.Windows.Automation.AutomationProperty,System.Object,System.Object)">
          <source>The new value of the property.</source>
          <target state="translated">プロパティの新しい値。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(System.Windows.Automation.AutomationProperty,System.Object,System.Object)">
          <source>Raises an event to notify the automation client of a changed property value.</source>
          <target state="translated">変更されたプロパティ値をオートメーション クライアントに通知するイベントを発生させます。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ResetChildrenCache">
          <source>Synchronously resets the tree of child elements by calling <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore" /&gt;</ph> を呼び出すことによって子要素のツリーを同期的にリセットします。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.ResetChildrenCache">
          <source>Use this method in certain peer implementations that change the set of child elements in response to a call to a control pattern interface.</source>
          <target state="translated">コントロール パターン インターフェイスへの呼び出しに応答内の子要素のセットを変更する特定のピア実装では、このメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.ResetChildrenCache">
          <source>An example is <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>, which can change the child elements of the peer by moving the <ph id="ph2">&lt;xref:System.Windows.Documents.TextRange&gt;</ph>.</source>
          <target state="translated">例としては<ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>、移動することによって、ピアの子要素を変更することができます、<ph id="ph2">&lt;xref:System.Windows.Documents.TextRange&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus">
          <source>Sets the keyboard focus on the element that is associated with this automation peer.</source>
          <target state="translated">このオートメーション ピアに関連付けられている要素にキーボード フォーカスを設定します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.SetFocusCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>