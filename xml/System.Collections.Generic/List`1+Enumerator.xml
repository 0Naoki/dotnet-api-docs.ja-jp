<Type Name="List&lt;T&gt;+Enumerator" FullName="System.Collections.Generic.List&lt;T&gt;+Enumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="329cf0e6fd8349fd996a2a07ddab3d47fabed2a6" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/13/2018" />
    <Meta Name="ms.locfileid" Value="35417148" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct List&lt;T&gt;.Enumerator : System.Collections.Generic.IEnumerator&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit List`1/Enumerator&lt;T&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;!T&gt;, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.List`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure List(Of T).Enumerator&#xA;Implements IEnumerator(Of T)" />
  <TypeSignature Language="C++ CLI" Value="public: value class List&lt;T&gt;::Enumerator : System::Collections::Generic::IEnumerator&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="6739c-101">
        <see cref="T:System.Collections.Generic.List`1" /> の要素を列挙します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6739c-101">Enumerates the elements of a <see cref="T:System.Collections.Generic.List`1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6739c-102">`foreach` C# 言語のステートメント (`for each` C++ では、 `For Each` Visual basic) 列挙子の複雑さです。</span><span class="sxs-lookup"><span data-stu-id="6739c-102">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="6739c-103">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="6739c-103">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="6739c-104">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="6739c-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="6739c-105">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="6739c-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="6739c-106">この位置では、<xref:System.Collections.Generic.List%601.Enumerator.Current%2A> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="6739c-106">At this position, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="6739c-107">そのため、<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.Generic.List%601.Enumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="6739c-107">Therefore, you must call <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="6739c-108"><xref:System.Collections.Generic.List%601.Enumerator.Current%2A> は、<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="6739c-108"><xref:System.Collections.Generic.List%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="6739c-109"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> は、<xref:System.Collections.Generic.List%601.Enumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="6739c-109"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="6739c-110">場合<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="6739c-110">If <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="6739c-111">列挙子がこの位置では、後続の呼び出しの場合<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="6739c-111">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="6739c-112">最後の呼び出し場合<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>返される`false`、<xref:System.Collections.Generic.List%601.Enumerator.Current%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="6739c-112">If the last call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="6739c-113"><xref:System.Collections.Generic.List%601.Enumerator.Current%2A> を、再度、コレクションの最初の要素に設定することはできません。列挙子の新しいインスタンスを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6739c-113">You cannot set <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="6739c-114">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="6739c-114">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="6739c-115">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="6739c-115">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="6739c-116">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="6739c-116">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="6739c-117">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="6739c-117">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="6739c-118">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6739c-118">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="6739c-119">既定の実装のコレクションの<xref:System.Collections.Generic?displayProperty=nameWithType>が同期されていません。</span><span class="sxs-lookup"><span data-stu-id="6739c-119">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Current { T get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6739c-120">列挙子の現在位置の要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6739c-120">Gets the element at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6739c-121">
            <see cref="T:System.Collections.Generic.List`1" /> のうち、列挙子の現在位置にある要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6739c-121">The element in the <see cref="T:System.Collections.Generic.List`1" /> at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6739c-122"><xref:System.Collections.Generic.List%601.Enumerator.Current%2A> 次の条件のいずれかで定義されていません。</span><span class="sxs-lookup"><span data-stu-id="6739c-122"><xref:System.Collections.Generic.List%601.Enumerator.Current%2A> is undefined under any of the following conditions:</span></span>  
  
- <span data-ttu-id="6739c-123">列挙子はコレクションの最初の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="6739c-123">The enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="6739c-124">列挙子を作成した後、または後に発生する、<xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6739c-124">That happens after an enumerator is created or after the <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> method is called.</span></span> <span data-ttu-id="6739c-125"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>列挙子の値を読み取る前に、コレクションの最初の要素に進めるメソッドを呼び出す必要があります、<xref:System.Collections.Generic.List%601.Enumerator.Current%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="6739c-125">The <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> property.</span></span>  
  
- <span data-ttu-id="6739c-126">最後に呼び出した<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>返される`false`コレクションの末尾を示す、列挙子がコレクションの最後の要素の後に配置します。</span><span class="sxs-lookup"><span data-stu-id="6739c-126">The last call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the collection and that the enumerator is positioned after the last element of the collection.</span></span>

- <span data-ttu-id="6739c-127">列挙子は、追加、変更、または削除する要素など、コレクションで行われた変更により無効になりました。</span><span class="sxs-lookup"><span data-stu-id="6739c-127">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>

 <span data-ttu-id="6739c-128"><xref:System.Collections.Generic.List%601.Enumerator.Current%2A> 連続して呼び出すと、列挙子の位置を移動しません<xref:System.Collections.Generic.List%601.Enumerator.Current%2A>されるまで、同じオブジェクトを返す<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>または<xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="6739c-128"><xref:System.Collections.Generic.List%601.Enumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> return the same object until either <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6739c-129">
            <see cref="T:System.Collections.Generic.List`1.Enumerator" /> によって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6739c-129">Releases all resources used by the <see cref="T:System.Collections.Generic.List`1.Enumerator" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6739c-130">列挙子を <see cref="T:System.Collections.Generic.List`1" /> の次の要素に進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6739c-130">Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6739c-131">列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6739c-131">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6739c-132">コレクション、および最初の呼び出しの最初の要素の前に、列挙子が配置されている列挙子を作成したら、<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>列挙子をコレクションの最初の要素に進めます。</span><span class="sxs-lookup"><span data-stu-id="6739c-132">After an enumerator is created, the enumerator is positioned before the first element in the collection, and the first call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> advances the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="6739c-133">場合<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="6739c-133">If <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="6739c-134">列挙子がこの位置では、後続の呼び出しの場合<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="6739c-134">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> also return `false`.</span></span>  
  
 <span data-ttu-id="6739c-135">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="6739c-135">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="6739c-136">追加、変更、要素、削除など、コレクションに変更された場合の列挙子が無効になり回復できなくなります。</span><span class="sxs-lookup"><span data-stu-id="6739c-136">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6739c-137">コレクションは、列挙子の作成後に変更されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6739c-137">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.List`1.Enumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6739c-138">列挙子の現在位置の要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6739c-138">Gets the element at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6739c-139">
            <see cref="T:System.Collections.Generic.List`1" /> のうち、列挙子の現在位置にある要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6739c-139">The element in the <see cref="T:System.Collections.Generic.List`1" /> at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6739c-140"><xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> 次の条件のいずれかで定義されていません。</span><span class="sxs-lookup"><span data-stu-id="6739c-140"><xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> is undefined under any of the following conditions:</span></span>  
  
- <span data-ttu-id="6739c-141">列挙子はコレクションの最初の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="6739c-141">The enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="6739c-142">列挙子を作成した後、または後に発生する、<xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6739c-142">That happens after an enumerator is created or after the <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> method is called.</span></span> <span data-ttu-id="6739c-143"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>列挙子の値を読み取る前に、コレクションの最初の要素に進めるメソッドを呼び出す必要があります、<xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="6739c-143">The <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> property.</span></span>  
  
- <span data-ttu-id="6739c-144">最後に呼び出した<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>返される`false`コレクションの末尾を示す、列挙子がコレクションの最後の要素の後に配置します。</span><span class="sxs-lookup"><span data-stu-id="6739c-144">The last call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the collection and that the enumerator is positioned after the last element of the collection.</span></span>

- <span data-ttu-id="6739c-145">列挙子は、追加、変更、または削除する要素など、コレクションで行われた変更により無効になりました。</span><span class="sxs-lookup"><span data-stu-id="6739c-145">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>

 <span data-ttu-id="6739c-146"><xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> 連続して呼び出すと、列挙子の位置を移動しません<xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A>されるまで、同じオブジェクトを返す<xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>または<xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="6739c-146"><xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> return the same object until either <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6739c-147">列挙子を初期位置、つまりコレクションの最初の要素の前に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6739c-147">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6739c-148">呼び出した後<xref:System.Collections.IEnumerator.Reset%2A>、呼び出す必要があります<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子の値を読み取る前に、コレクションの最初の要素に進める<xref:System.Collections.IEnumerator.Current%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6739c-148">After calling <xref:System.Collections.IEnumerator.Reset%2A>, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="6739c-149">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="6739c-149">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="6739c-150">追加、変更、要素、削除など、コレクションに変更された場合の列挙子が無効になり回復できなくなります。</span><span class="sxs-lookup"><span data-stu-id="6739c-150">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6739c-151">コレクションは、列挙子の作成後に変更されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6739c-151">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>