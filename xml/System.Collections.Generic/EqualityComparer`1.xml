<Type Name="EqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.EqualityComparer&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class EqualityComparer&lt;T&gt; : System.Collections.Generic.IEqualityComparer&lt;T&gt;, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EqualityComparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt;, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.EqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EqualityComparer(Of T)&#xA;Implements IEqualityComparer, IEqualityComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class EqualityComparer abstract : System::Collections::Generic::IEqualityComparer&lt;T&gt;, System::Collections::IEqualityComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="ba7f7-101">比較するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="ba7f7-102"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> ジェネリック インターフェイスの実装のための基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba7f7-103">カスタム実装を提供するには、このクラスから派生して、<xref:System.Collections.Generic.IEqualityComparer%601>コレクションで使用するためのジェネリック インターフェイスなどのクラス、<xref:System.Collections.Generic.Dictionary%602>ジェネリック クラスは、やなどのメソッドと<xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface for use with collection classes such as the <xref:System.Collections.Generic.Dictionary%602> generic class, or with methods such as <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba7f7-104"><xref:System.Collections.Generic.EqualityComparer%601.Default%2A>プロパティのチェックを入力するかどうか`T`を実装する、<xref:System.IEquatable%601?displayProperty=nameWithType>ジェネリック インターフェイスと、必要な場合を返します、<xref:System.Collections.Generic.EqualityComparer%601>の実装を呼び出す、<xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-104">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that invokes the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ba7f7-105">返しますそれ以外の場合、<xref:System.Collections.Generic.EqualityComparer%601>によって提供されるように、`T`です。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-105">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601>, as provided by `T`.</span></span>  
  
 <span data-ttu-id="ba7f7-106">派生させることをお勧め、<xref:System.Collections.Generic.EqualityComparer%601>クラスの実装ではなく、<xref:System.Collections.Generic.IEqualityComparer%601>ため、インターフェイス、<xref:System.Collections.Generic.EqualityComparer%601>等しいかどうかを使用するためのテストのクラス、<xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType>メソッドの代わりに、<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-106">We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method instead of the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ba7f7-107">これは、同じ、 `Contains`、 `IndexOf`、 `LastIndexOf`、および`Remove`のメソッド、<xref:System.Collections.Generic.Dictionary%602>クラスやその他のジェネリック コレクション。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-107">This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba7f7-108">次の例では、型のオブジェクトのディクショナリ コレクション`Box`等値比較子を使用します。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-108">The following example creates a dictionary collection of objects of type `Box` with an equality comparer.</span></span> <span data-ttu-id="ba7f7-109">2 つのボックスは、そのディメンションが同じ場合、等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-109">Two boxes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="ba7f7-110">コレクションへのボックスを追加します。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-110">It then adds the boxes to the collection.</span></span>  
  
 <span data-ttu-id="ba7f7-111">ディクショナリは別の方法で等しいかどうかを定義する等値比較子で再作成します。 2 つのボックスは、ボリュームは、同じ場合、等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-111">The dictionary is recreated with an equality comparer that defines equality in a different way: Two boxes are considered equal if their volumes are the same.</span></span>  
  
 [!code-csharp[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EqualityComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EqualityComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba7f7-112"><see cref="T:System.Collections.Generic.EqualityComparer`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-112">Initializes a new instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.EqualityComparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.EqualityComparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.EqualityComparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As EqualityComparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::EqualityComparer&lt;T&gt; ^ Default { System::Collections::Generic::EqualityComparer&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.EqualityComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba7f7-113">汎用引数で指定された型に対して、等値であるかどうかを比較するための既定の比較子を返します。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-113">Returns a default equality comparer for the type specified by the generic argument.</span></span></summary>
        <value><span data-ttu-id="ba7f7-114"><typeparamref name="T" /> 型の <see cref="T:System.Collections.Generic.EqualityComparer`1" /> クラスの既定のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-114">The default instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class for type <typeparamref name="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba7f7-115"><xref:System.Collections.Generic.EqualityComparer%601.Default%2A>プロパティのチェックを入力するかどうか`T`を実装する、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイスし、必要な場合を返します、<xref:System.Collections.Generic.EqualityComparer%601>その実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-115">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses that implementation.</span></span> <span data-ttu-id="ba7f7-116">返しますそれ以外の場合、<xref:System.Collections.Generic.EqualityComparer%601>の上書きを使用する<xref:System.Object.Equals%2A?displayProperty=nameWithType>と<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>によって提供される`T`です。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-116">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses the overrides of <xref:System.Object.Equals%2A?displayProperty=nameWithType> and <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> provided by `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba7f7-117">次の例では、次の 2 つのディクショナリ コレクション型の`Box`します。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-117">The following example creates two dictionary collections of type `Box`.</span></span> <span data-ttu-id="ba7f7-118">両方の辞書を受け取るコンス トラクターで作成された、<xref:System.Collections.Generic.EqualityComparer%601>をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-118">Both dictionaries are created with the constructor that takes an <xref:System.Collections.Generic.EqualityComparer%601> as a parameter.</span></span>  
  
 <span data-ttu-id="ba7f7-119">ディクショナリのキーが等しいかどうかを決定する、`boxesByDim`ディクショナリは、等値比較子を使用して (`BoxEqDimensions`) の実装を使用する、<xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType>メソッドで、`Box`クラスです。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-119">To determine the equality of dictionary keys, the `boxesByDim` dictionary uses an equality comparer (`BoxEqDimensions`) that uses the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method in the `Box` class.</span></span> <span data-ttu-id="ba7f7-120">2 つのボックスは、そのディメンションが同じ場合、等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-120">Two boxes are considered equal if their dimensions are the same.</span></span>  
  
 <span data-ttu-id="ba7f7-121">`boxesByVol`ディクショナリは、等値比較子を使用して (`BoxEqVolume`) ボリュームが等しいかどうかを定義します。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-121">The `boxesByVol` dictionary uses an equality comparer (`BoxEqVolume`) that defines equality by volume.</span></span> <span data-ttu-id="ba7f7-122">2 つのボックスは、それらのボリュームが同じ場合、等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-122">Two boxes are considered equal if their volumes are the same.</span></span>  
  
 [!code-cpp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cpp/program.cpp#1)]
 [!code-csharp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
        <altmember cref="T:System.IEquatable`1" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(T x, T y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="ba7f7-123">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-123">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="ba7f7-124">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-124">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="ba7f7-125">派生クラスでオーバーライドされた場合、<typeparamref name="T" /> 型の 2 つのオブジェクトが等しいかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-125">When overridden in a derived class, determines whether two objects of type <typeparamref name="T" /> are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="ba7f7-126">指定したオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-126"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba7f7-127"><xref:System.Collections.Generic.EqualityComparer%601.Equals%2A>メソッドが再帰的、対称、推移的です。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-127">The <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> method is reflexive, symmetric, and transitive.</span></span> <span data-ttu-id="ba7f7-128">つまり、返します`true`自体を持つオブジェクトを比較に使用する場合`true` 2 つのオブジェクトの`x`と`y`である場合`true`の`y`と`x`; と`true`2 つのオブジェクトの`x`と`z`である場合`true`の`x`と`y`、さらに`true`の`y`と`z`です。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-128">That is, it returns `true` if used to compare an object with itself; `true` for two objects `x` and `y` if it is `true` for `y` and `x`; and `true` for two objects `x` and `z` if it is `true` for `x` and `y` and also `true` for `y` and `z`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="ba7f7-129">実装が確認された場合に必要な<see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />メソッドを返します<see langword="true" />2 つのオブジェクトの<c>x</c>と<c>y</c>、によって返される値、 <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> メソッド<c>。x</c>に対して返される値でなければなりません。 <c>y</c>です。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-129">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <c>x</c> and <c>y</c>, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <c>x</c> must equal the value returned for <c>y</c>.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(T obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ba7f7-130">ハッシュ コードを取得する対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-130">The object for which to get a hash code.</span></span></param>
        <summary><span data-ttu-id="ba7f7-131">派生クラスでオーバーライドされた場合、ハッシュ アルゴリズムや、ハッシュ テーブルなどのデータ構造体の指定したオブジェクトに使用するハッシュ関数として機能します。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-131">When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="ba7f7-132">指定したオブジェクトのハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-132">A hash code for the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba7f7-133"><paramref name="obj" /> の型が参照型で、<paramref name="obj" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-133">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="ba7f7-134">実装が確認された場合に必要な<see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />メソッドを返します<see langword="true" />2 つのオブジェクトの<c>x</c>と<c>y</c>、によって返される値、 <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> メソッド<c>。x</c>に対して返される値でなければなりません。 <c>y</c>です。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-134">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <c>x</c> and <c>y</c>, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <c>x</c> must equal the value returned for <c>y</c>.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="ba7f7-135">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-135">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="ba7f7-136">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-136">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="ba7f7-137">指定したオブジェクトが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-137">Determines whether the specified objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="ba7f7-138">指定したオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-138"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba7f7-139">このメソッドは、用のラッパー、<xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29>メソッドのため、`obj`汎用引数で指定された型にキャストする必要があります`T`現在のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-139">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="ba7f7-140">キャストできない場合`T`、<xref:System.ArgumentException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-140">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="ba7f7-141">比較する`null`が許可され、例外を生成しません。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-141">Comparing `null` is allowed and does not generate an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba7f7-142"><paramref name="x" /> または <paramref name="y" /> が、<typeparamref name="T" /> 型にキャストできない型です。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-142"><paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ba7f7-143">ハッシュ コードが返される対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-143">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="ba7f7-144">指定したオブジェクトのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-144">Returns a hash code for the specified object.</span></span></summary>
        <returns><span data-ttu-id="ba7f7-145">指定したオブジェクトのハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-145">A hash code for the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba7f7-146">このメソッドは、用のラッパー、<xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29>メソッドのため、 `obj` 、ジェネリック型引数で指定された型にキャストできる型である必要があります`T`現在のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-146">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> method, so `obj` must be a type that can be cast to the type specified by the generic type argument `T` of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba7f7-147"><paramref name="obj" /> の型が参照型で、<paramref name="obj" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-147">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="ba7f7-148">- または -</span><span class="sxs-lookup"><span data-stu-id="ba7f7-148">-or-</span></span>  
  
 <span data-ttu-id="ba7f7-149"><paramref name="obj" /> が、<typeparamref name="T" /> 型にキャストできない型です。</span><span class="sxs-lookup"><span data-stu-id="ba7f7-149"><paramref name="obj" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>