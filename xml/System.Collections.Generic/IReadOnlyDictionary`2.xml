<Type Name="IReadOnlyDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="302cc3aebe7228f5593fad2149f02b4a1318409f" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51322924" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IReadOnlyDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReadOnlyDictionary`2&lt;TKey, TValue&gt; implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IReadOnlyDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReadOnlyDictionary(Of TKey, TValue)&#xA;Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public interface class IReadOnlyDictionary : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;" />
  <TypeSignature Language="F#" Value="type IReadOnlyDictionary&lt;'Key, 'Value&gt; = interface&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="9f55f-101">読み取り専用ディクショナリ内のキーの型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f55f-101">The type of keys in the read-only dictionary.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="9f55f-102">読み取り専用ディクショナリ内の値の型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f55f-102">The type of values in the read-only dictionary.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="9f55f-103">キーと値のペアの読み取り専用ジェネリック コレクションを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f55f-103">Represents a generic read-only collection of key/value pairs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f55f-104">各要素に格納されているキー/値ペアは、<xref:System.Collections.Generic.KeyValuePair%602>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9f55f-104">Each element is a key/value pair that is stored in a <xref:System.Collections.Generic.KeyValuePair%602> object.</span></span>  
  
 <span data-ttu-id="9f55f-105">各ペアには、一意キーを持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="9f55f-105">Each pair must have a unique key.</span></span> <span data-ttu-id="9f55f-106">許可するかどうかのキーを指定することで実装が異なります`null`します。</span><span class="sxs-lookup"><span data-stu-id="9f55f-106">Implementations can vary in whether they allow you to specify a key that is `null`.</span></span> <span data-ttu-id="9f55f-107">値を指定できます`null`が一意であるとします。</span><span class="sxs-lookup"><span data-stu-id="9f55f-107">The value can be `null` and does not have to be unique.</span></span> <span data-ttu-id="9f55f-108"><xref:System.Collections.Generic.IDictionary%602>インターフェイスにより、格納されているキーと値を列挙するが、特定の並べ替え順序は意味しません。</span><span class="sxs-lookup"><span data-stu-id="9f55f-108">The <xref:System.Collections.Generic.IDictionary%602> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</span></span>  
  
 <span data-ttu-id="9f55f-109">`foreach` C# 言語のステートメント (`For Each` Visual basic で`for each`C++ で)、コレクション内の各要素の型が必要です。</span><span class="sxs-lookup"><span data-stu-id="9f55f-109">The `foreach` statement of the C# language (`For Each` in Visual Basic, `for each` in C++) requires the type of each element in the collection.</span></span> <span data-ttu-id="9f55f-110">の各要素、<xref:System.Collections.Generic.IReadOnlyDictionary%602>インターフェイスは、キー/値ペアで、要素の型がないと、キーの型または値の型。</span><span class="sxs-lookup"><span data-stu-id="9f55f-110">Because each element of the <xref:System.Collections.Generic.IReadOnlyDictionary%602> interface is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="9f55f-111">要素の型は、代わりに、 <xref:System.Collections.Generic.KeyValuePair%602>、次の例に示すようにします。</span><span class="sxs-lookup"><span data-stu-id="9f55f-111">Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>, as the following example illustrates.</span></span>  
  
 [!code-cpp[Generic.IDictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source2.cpp#11)]
 [!code-csharp[Generic.IDictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source2.cs#11)]
 [!code-vb[Generic.IDictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source2.vb#11)]  
  
 <span data-ttu-id="9f55f-112">`foreach`ステートメントは、列挙子のラッパーです。 コレクションを記述しないコレクションからの読み取りのみを許可します。</span><span class="sxs-lookup"><span data-stu-id="9f55f-112">The `foreach` statement is a wrapper around the enumerator; it allows only reading from the collection, not writing to the collection.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsKey(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : 'Key -&gt; bool" Usage="iReadOnlyDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9f55f-113">検索するキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-113">The key to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f55f-114">指定されたキーを持つ要素が読み取り専用ディクショナリに格納されているかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-114">Determines whether the read-only dictionary contains an element that has the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f55f-115">指定したキーを持つ要素が読み取り専用ディクショナリに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-115">
              <see langword="true" /> if the read-only dictionary contains an element that has the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f55f-116">オブジェクトが等しいかどうかを判断する方法で実装が異なります実装するクラスなど、<xref:System.Collections.Generic.IReadOnlyDictionary%602>を使用して、<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>プロパティ、またはそれを実装できますが、<xref:System.Collections.Generic.IComparer%601>メソッド。</span><span class="sxs-lookup"><span data-stu-id="9f55f-116">Implementations can vary in how they determine the equality of objects; for example, the class that implements <xref:System.Collections.Generic.IReadOnlyDictionary%602> might use the <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property, or it might implement the <xref:System.Collections.Generic.IComparer%601> method.</span></span>  
  
 <span data-ttu-id="9f55f-117">実装できるかどうかによって異なります`key`する`null`します。</span><span class="sxs-lookup"><span data-stu-id="9f55f-117">Implementations can vary in whether they allow `key` to be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f55f-118">
            <paramref name="key" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-118">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Value" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;'Key, 'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9f55f-119">検索するキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-119">The key to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f55f-120">読み取り専用ディクショナリに指定されたキーを持つ要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-120">Gets the element that has the specified key in the read-only dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f55f-121">読み取り専用ディクショナリに指定されたキーを持つ要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-121">The element that has the specified key in the read-only dictionary.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f55f-122">このプロパティでは、次の構文を使用して、コレクション内の特定の要素にアクセスできます: `myCollection[key]` (`myCollection(key)` Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="9f55f-122">This property lets you access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="9f55f-123">オブジェクトが等しいかどうかを判断する方法で実装が異なります: を実装するクラスなど、<xref:System.Collections.Generic.IReadOnlyDictionary%602>を使用して、<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>プロパティ、またはそれを実装できますが、<xref:System.Collections.Generic.IComparer%601>メソッド。</span><span class="sxs-lookup"><span data-stu-id="9f55f-123">Implementations can vary in how they determine the equality of objects: for example, the class that implements <xref:System.Collections.Generic.IReadOnlyDictionary%602> might use the <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property, or it might implement the <xref:System.Collections.Generic.IComparer%601> method.</span></span>  
  
 <span data-ttu-id="9f55f-124">実装できるかどうかによって異なります`key`する`null`します。</span><span class="sxs-lookup"><span data-stu-id="9f55f-124">Implementations can vary in whether they allow `key` to be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f55f-125">
            <paramref name="key" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-125">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="9f55f-126">プロパティは取得されますが、<paramref name="key" /> が見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-126">The property is retrieved and <paramref name="key" /> is not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TKey&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IEnumerable(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : seq&lt;'Key&gt;" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;'Key, 'Value&gt;.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f55f-127">読み取り専用のディクショナリのキーを含む列挙可能なコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-127">Gets an enumerable collection that contains the keys in the read-only dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f55f-128">読み取り専用のディクショナリのキーを含む列挙可能なコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-128">An enumerable collection that contains the keys in the read-only dictionary.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f55f-129">列挙可能なコレクション内のキーの順序は指定しませんが、実装がによって返される列挙可能なコレクションの対応する値と同じ順序でキーは、ことを保証する必要があります、<xref:System.Collections.Generic.IReadOnlyDictionary%602.Values%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="9f55f-129">The order of the keys in the enumerable collection is unspecified, but the implementation must guarantee that the keys are in the same order as the corresponding values in the enumerable collection that is returned by the <xref:System.Collections.Generic.IReadOnlyDictionary%602.Values%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : 'Key *  -&gt; bool" Usage="iReadOnlyDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9f55f-130">検索するキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-130">The key to locate.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9f55f-131">このメソッドが返ったときに、キーが見つかった場合は、指定したキーに関連付けられている値、それ以外の場合は <c>value</c> パラメーターの型に対する既定の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-131">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <c>value</c> parameter.</span>
          </span>
          <span data-ttu-id="9f55f-132">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-132">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f55f-133">指定されたキーに関連付けられている値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-133">Gets the value that is associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f55f-134">
            <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> インターフェイスを実装するオブジェクトに、指定されたキーを持つ要素が含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-134">
              <see langword="true" /> if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> interface contains an element that has the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f55f-135">このメソッドには、機能が組み合わされて、<xref:System.Collections.Generic.IReadOnlyDictionary%602.ContainsKey%2A>メソッドと<xref:System.Collections.Generic.IReadOnlyDictionary%602.Item%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="9f55f-135">This method combines the functionality of the <xref:System.Collections.Generic.IReadOnlyDictionary%602.ContainsKey%2A> method and the <xref:System.Collections.Generic.IReadOnlyDictionary%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="9f55f-136">キーが見つからない場合、`value`パラメーター型の適切な既定値を取得する`TValue`: などの整数型は、0 (ゼロ)`false`ブール型の場合と`null`参照型。</span><span class="sxs-lookup"><span data-stu-id="9f55f-136">If the key is not found, the `value` parameter gets the appropriate default value for the type `TValue`: for example, 0 (zero) for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9f55f-137">
            <paramref name="key" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-137">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IReadOnlyDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IEnumerable(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : seq&lt;'Value&gt;" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;'Key, 'Value&gt;.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f55f-138">読み取り専用のディクショナリの値を含む列挙可能なコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-138">Gets an enumerable collection that contains the values in the read-only dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f55f-139">読み取り専用のディクショナリの値を含む列挙可能なコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f55f-139">An enumerable collection that contains the values in the read-only dictionary.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f55f-140">列挙可能なコレクション内の値の順序は指定しませんが、実装は、によって返される列挙可能なコレクション内の対応するキーと同じ順序で値が保証する必要があります、<xref:System.Collections.Generic.IReadOnlyDictionary%602.Keys%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="9f55f-140">The order of the values in the enumerable collection is unspecified, but the implementation must guarantee that the values are in the same order as the corresponding keys in the enumerable collection that is returned by the <xref:System.Collections.Generic.IReadOnlyDictionary%602.Keys%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>