<Type Name="Comparer&lt;T&gt;" FullName="System.Collections.Generic.Comparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="26fe0404b5f04bc1e12bf98c6cad3f1ecb47f3e7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36713232" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Comparer&lt;T&gt; : System.Collections.Generic.IComparer&lt;T&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Comparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Comparer(Of T)&#xA;Implements IComparer, IComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Comparer abstract : System::Collections::Generic::IComparer&lt;T&gt;, System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type Comparer&lt;'T&gt; = class&#xA;    interface IComparer&#xA;    interface IComparer&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="ada91-101">比較するオブジェクトの型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ada91-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="ada91-102">
        <see cref="T:System.Collections.Generic.IComparer`1" /> ジェネリック インターフェイスの実装のための基本クラスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ada91-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ada91-103">カスタム実装を提供するには、このクラスから派生して、<xref:System.Collections.Generic.IComparer%601>インターフェイスのコレクション クラスで使用するよう、<xref:System.Collections.Generic.SortedList%602>と<xref:System.Collections.Generic.SortedDictionary%602>ジェネリック クラスです。</span><span class="sxs-lookup"><span data-stu-id="ada91-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IComparer%601> interface for use with collection classes such as the <xref:System.Collections.Generic.SortedList%602> and <xref:System.Collections.Generic.SortedDictionary%602> generic classes.</span></span>  
  
 <span data-ttu-id="ada91-104">派生することの違い、<xref:System.Collections.Generic.Comparer%601>クラスと実装、<xref:System.IComparable?displayProperty=nameWithType>インターフェイスは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="ada91-104">The difference between deriving from the <xref:System.Collections.Generic.Comparer%601> class and implementing the <xref:System.IComparable?displayProperty=nameWithType> interface is as follows:</span></span>  
  
-   <span data-ttu-id="ada91-105">指定する方法、既定では、2 つのオブジェクトを比較する必要があります、実装、<xref:System.IComparable?displayProperty=nameWithType>クラスのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="ada91-105">To specify how two objects should be compared by default, implement the <xref:System.IComparable?displayProperty=nameWithType> interface in your class.</span></span> <span data-ttu-id="ada91-106">これにより、並べ替え操作が指定されている既定の比較コードを使用します。</span><span class="sxs-lookup"><span data-stu-id="ada91-106">This ensures that sort operations will use the default comparison code that you provided.</span></span>  
  
-   <span data-ttu-id="ada91-107">派生して既定の比較子の代わりに使用する比較子を定義する、<xref:System.Collections.Generic.Comparer%601>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ada91-107">To define a comparer to use instead of the default comparer, derive from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="ada91-108">パラメーターとしての比較子を受け取る並べ替え操作で、この比較演算子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ada91-108">You can then use this comparer in sort operations that take a comparer as a parameter.</span></span>  
  
 <span data-ttu-id="ada91-109">によって返されるオブジェクト、<xref:System.Collections.Generic.Comparer%601.Default%2A>プロパティの使用、<xref:System.IComparable%601?displayProperty=nameWithType>ジェネリック インターフェイス (`IComparable<T>` 、C# の場合は、 `IComparable(Of T)` Visual Basic で) を 2 つのオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="ada91-109">The object returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A> property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="ada91-110">場合型`T`を実装しません、 <xref:System.IComparable%601?displayProperty=nameWithType> 、ジェネリック インターフェイス、<xref:System.Collections.Generic.Comparer%601.Default%2A>プロパティから返される、<xref:System.Collections.Generic.Comparer%601>を使用して、<xref:System.IComparable?displayProperty=nameWithType>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="ada91-110">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the <xref:System.Collections.Generic.Comparer%601.Default%2A> property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ada91-111">次の例は、クラスを派生`BoxLengthFirst`から、<xref:System.Collections.Generic.Comparer%601>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ada91-111">The following example derives a class, `BoxLengthFirst`, from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="ada91-112">この比較演算子は、型の 2 つのオブジェクトを比較`Box`です。</span><span class="sxs-lookup"><span data-stu-id="ada91-112">This comparer compares two objects of type `Box`.</span></span> <span data-ttu-id="ada91-113">並べ替えて最初の長さ、し、高さで順で幅。</span><span class="sxs-lookup"><span data-stu-id="ada91-113">It sorts them first by length, then by height, and then by width.</span></span> <span data-ttu-id="ada91-114">`Box`クラスが実装する、<xref:System.IComparable%601>を 2 つの既定の比較を制御するインターフェイス`Box`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ada91-114">The `Box` class implements the <xref:System.IComparable%601> interface to control the default comparison between two `Box` objects.</span></span> <span data-ttu-id="ada91-115">この既定の実装は、高さ、によって、長さ、リング幅ではまずに並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="ada91-115">This default implementation sorts first by height, then by length, and then by width.</span></span> <span data-ttu-id="ada91-116">例では、一覧を並べ替えることで、次の 2 つの比較の違いを示しています`Box`最初を使用してオブジェクト、`BoxLengthFirst`比較演算子と、既定の比較子を使用しています。</span><span class="sxs-lookup"><span data-stu-id="ada91-116">The example shows the differences between the two comparisons by sorting a list of `Box` objects first by using the `BoxLengthFirst` comparer and then by using the default comparer.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.BoxCompare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="ada91-117">
        <para>
          <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> および<see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />カルチャの区別および大文字小文字の区別に関して動作が異なる場合があります。文字列比較のため、<see cref="T:System.StringComparer" />経由でクラスをお勧め<c>比較子&lt;文字列&gt;</c>です。プロパティ、<see cref="T:System.StringComparer" />クラスは、カルチャの区別および大文字小文字の区別のさまざまな組み合わせで文字列比較を実行する定義済みのインスタンスを返します。大文字小文字の区別とカルチャの区別は、同じメンバーの間で一貫性のある<see cref="T:System.StringComparer" />インスタンス。カルチャ固有の比較の詳細については、次を参照してください。、<see cref="N:System.Globalization" />名前空間と [グローバリゼーションと Localization](~/docs/standard/globalization-localization/index.md) です。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="ada91-117">
          <para>
            <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> may behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.StringComparer" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Comparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Comparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ada91-118">
            <see cref="T:System.Collections.Generic.Comparer`1" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-118">Initializes a new instance of the <see cref="T:System.Collections.Generic.Comparer`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(T x, T y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : 'T * 'T -&gt; int" Usage="comparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ada91-119">比較する最初のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-119">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ada91-120">比較する 2 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-120">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ada91-121">派生クラスでオーバーライドされると、同じ型の 2 つのオブジェクトに対する比較を実行し、一方のオブジェクトが他方よりも小さいか、等しいか、大きいかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-121">When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ada91-122">
            <paramref name="x" /> と <paramref name="y" /> の相対値を示す符号付き整数。次の表を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-122">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="ada91-123">
            <list type="table">
              <listheader>
                <term> 値  </term>
                <description> 意味  </description>
              </listheader>
              <item>
                <term> 0 より小さい  </term>
                <description>
                  <paramref name="x" /> は <paramref name="y" /> より小さい値です。</description>
              </item>
              <item>
                <term> 0 </term>
                <description>
                  <paramref name="x" /> は <paramref name="y" /> と等価です。</description>
              </item>
              <item>
                <term> 0 より大きい  </term>
                <description>
                  <paramref name="x" /> は <paramref name="y" /> より大きい値です。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-123">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ada91-124">カスタマイズするのには、このメソッドを実装する型の比較で順序を並べ替える`T`です。</span><span class="sxs-lookup"><span data-stu-id="ada91-124">Implement this method to provide a customized sort order comparison for type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ada91-125">次の例の比較子を定義する`Box`既定の比較子の代わりに使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ada91-125">The following example defines a comparer of `Box` objects that can be used instead of the default comparer.</span></span> <span data-ttu-id="ada91-126">この例に示されている例の一部である、<xref:System.Collections.Generic.Comparer%601>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ada91-126">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#5)]
 [!code-vb[System.Collections.Generic.BoxCompare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ada91-127">
            <paramref name="T" /> 型が、<see cref="T:System.IComparable`1" /> ジェネリック インターフェイスと <see cref="T:System.IComparable" /> インターフェイスのいずれも実装していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-127">Type <paramref name="T" /> does not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ada91-128">
            <para>比較する<see langword="null" />任意の参照を持つ型が許可され、例外を生成しません。Null 参照が null でない未満である任意の参照であると見なされます。カルチャ固有の比較については、次を参照してください。、<see cref="N:System.Globalization" />名前空間と [グローバリゼーションと Localization](~/docs/standard/globalization-localization/index.md) です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-128">
              <para>Comparing <see langword="null" /> with any reference type is allowed and does not generate an exception. A null reference is considered to be less than any reference that is not null.  For information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Create (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Comparer`1&lt;!T&gt; Create(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (comparison As Comparison(Of T)) As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::Comparer&lt;T&gt; ^ Create(Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="static member Create : Comparison&lt;'T&gt; -&gt; System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Create comparison" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="ada91-129">使用する比較。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-129">The comparison to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ada91-130">指定した比較を使用して比較子を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-130">Creates a comparer by using the specified comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ada91-131">新しい比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-131">The new comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.Comparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Comparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::Comparer&lt;T&gt; ^ Default { System::Collections::Generic::Comparer&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ada91-132">汎用引数で指定された型に対して、既定の並べ替え順序比較子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-132">Returns a default sort order comparer for the type specified by the generic argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ada91-133">
            <see cref="T:System.Collections.Generic.Comparer`1" /> を継承し、<paramref name="T" /> 型の並べ替え順序の比較子として機能するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-133">An object that inherits <see cref="T:System.Collections.Generic.Comparer`1" /> and serves as a sort order comparer for type <paramref name="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ada91-134"><xref:System.Collections.Generic.Comparer%601>このプロパティによって返されるを使用して、<xref:System.IComparable%601?displayProperty=nameWithType>ジェネリック インターフェイス (`IComparable<T>` 、C# の場合は、 `IComparable(Of T)` Visual Basic で) を 2 つのオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="ada91-134">The <xref:System.Collections.Generic.Comparer%601> returned by this property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="ada91-135">場合型`T`を実装しません、<xref:System.IComparable%601?displayProperty=nameWithType>ジェネリック インターフェイスは、このプロパティを返します、<xref:System.Collections.Generic.Comparer%601>を使用して、<xref:System.IComparable?displayProperty=nameWithType>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="ada91-135">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, this property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ada91-136">次の例を使用する方法を示しています、<xref:System.Collections.Generic.Comparer%601.Default%2A>は既定の比較を実行するオブジェクトを取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ada91-136">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.Default%2A> property to get an object that performs the default comparison.</span></span> <span data-ttu-id="ada91-137">この例に示されている例の一部である、<xref:System.Collections.Generic.Comparer%601>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ada91-137">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxCompare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="ada91-138">
            <para>文字列比較のため、<see cref="T:System.StringComparer" />経由でクラスをお勧め<c>比較子&lt;文字列&gt;</c> (<c>(文字列の) の比較子</c>Visual Basic で)。プロパティ、<see cref="T:System.StringComparer" />クラスは、カルチャの区別および大文字小文字の区別のさまざまな組み合わせで文字列比較を実行する定義済みのインスタンスを返します。大文字小文字の区別とカルチャの区別は、同じメンバーの間で一貫性のある<see cref="T:System.StringComparer" />インスタンス。カルチャ固有の比較の詳細については、次を参照してください。、<see cref="N:System.Globalization" />名前空間と [グローバリゼーションと Localization](~/docs/standard/globalization-localization/index.md) です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-138">
              <para>For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c> (<c>Comparer(Of String)</c> in Visual Basic).  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ada91-139">比較する最初のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-139">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ada91-140">比較する 2 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-140">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ada91-141">2 つのオブジェクトを比較して、一方が他方より小さいか、同じか、または大きいかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-141">Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ada91-142">
            <paramref name="x" /> と <paramref name="y" /> の相対値を示す符号付き整数。次の表を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-142">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="ada91-143">
            <list type="table">
              <listheader>
                <term> 値  </term>
                <description> 意味  </description>
              </listheader>
              <item>
                <term> 0 より小さい  </term>
                <description>
                  <paramref name="x" /> は <paramref name="y" /> より小さい値です。</description>
              </item>
              <item>
                <term> 0 </term>
                <description>
                  <paramref name="x" /> は <paramref name="y" /> と等価です。</description>
              </item>
              <item>
                <term> 0 より大きい  </term>
                <description>
                  <paramref name="x" /> は <paramref name="y" /> より大きい値です。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-143">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ada91-144">このメソッドは、用のラッパー、<xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29>メソッドのため、`obj`汎用引数で指定された型にキャストする必要があります`T`現在のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="ada91-144">This method is a wrapper for the <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="ada91-145">キャストできない場合`T`、<xref:System.ArgumentException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ada91-145">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="ada91-146">比較する`null`任意の参照を持つ型が許可され、例外を生成しません。</span><span class="sxs-lookup"><span data-stu-id="ada91-146">Comparing `null` with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="ada91-147">ソート時`null`未満であるその他のオブジェクトと見なされます。</span><span class="sxs-lookup"><span data-stu-id="ada91-147">When sorting, `null` is considered to be less than any other object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ada91-148">次の例を使用する方法を示しています、 <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> 2 つのオブジェクトを比較するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ada91-148">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> method to compare two objects.</span></span> <span data-ttu-id="ada91-149">この例に示されている例の一部である、<xref:System.Collections.Generic.Comparer%601>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ada91-149">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#4)]
 [!code-vb[System.Collections.Generic.BoxCompare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ada91-150">
            <paramref name="x" /> または <paramref name="y" /> が、<paramref name="T" /> 型にキャストできない型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-150">
              <paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <paramref name="T" />.</span>
          </span>
          <span data-ttu-id="ada91-151">または、<paramref name="x" /> および <paramref name="y" /> が、<see cref="T:System.IComparable`1" /> ジェネリック インターフェイスと <see cref="T:System.IComparable" /> インターフェイスのいずれも実装していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-151">-or-  <paramref name="x" /> and <paramref name="y" /> do not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="ada91-152">
            <para>
              <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> および<see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />カルチャの区別および大文字小文字の区別に関して動作が異なる。文字列比較のため、<see cref="T:System.StringComparer" />経由でクラスをお勧め<c>比較子&lt;文字列&gt;</c>です。プロパティ、<see cref="T:System.StringComparer" />クラスは、カルチャの区別および大文字小文字の区別のさまざまな組み合わせで文字列比較を実行する定義済みのインスタンスを返します。大文字小文字の区別とカルチャの区別は、同じメンバーの間で一貫性のある<see cref="T:System.StringComparer" />インスタンス。カルチャ固有の比較の詳細については、次を参照してください。、<see cref="N:System.Globalization" />名前空間と [グローバリゼーションと Localization](~/docs/standard/globalization-localization/index.md) です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ada91-152">
              <para>
                <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>