<Type Name="PersistenceIOParticipant" FullName="System.Activities.Persistence.PersistenceIOParticipant">
  <TypeSignature Language="C#" Value="public abstract class PersistenceIOParticipant : System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceIOParticipant extends System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Persistence.PersistenceIOParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceIOParticipant&#xA;Inherits PersistenceParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceIOParticipant abstract : System::Activities::Persistence::PersistenceParticipant" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Persistence.PersistenceParticipant</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6b405-101">永続プロセスを介したワークフロー インスタンスの永続化と読み込みに加え、入出力操作を行うメソッドを使用する <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> クラスの派生 vclass。</span><span class="sxs-lookup"><span data-stu-id="6b405-101">A derived vclass of the <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> class with methods that perform input and output operations in addition to the persisting and loading of workflow instances through the persistence process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b405-102">ホストは、インスタンスの永続化時に次の手順 (または段階) を実行します。</span><span class="sxs-lookup"><span data-stu-id="6b405-102">A host executes the following steps (or stages) when persisting an instance:</span></span>  
  
1.  <span data-ttu-id="6b405-103">永続化する値を収集します。</span><span class="sxs-lookup"><span data-stu-id="6b405-103">Collects values to be persisted.</span></span>  
  
2.  <span data-ttu-id="6b405-104">モノリシック構造値のフィールドを個々の値にマップします。</span><span class="sxs-lookup"><span data-stu-id="6b405-104">Maps fields of monolithic structured values to individual values.</span></span>  
  
3.  <span data-ttu-id="6b405-105"><xref:System.Activities.DurableInstancing.SaveWorkflowCommand> を永続化プロバイダーに発行します。</span><span class="sxs-lookup"><span data-stu-id="6b405-105">Issues the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> to the persistence provider.</span></span>  
  
4.  <span data-ttu-id="6b405-106">永続性トランザクションの下で I/O を実行します。</span><span class="sxs-lookup"><span data-stu-id="6b405-106">Performs I/O under the persistence transaction.</span></span>  
  
 <span data-ttu-id="6b405-107">ホストは、段階を完了してから次の段階を開始します。</span><span class="sxs-lookup"><span data-stu-id="6b405-107">A host completes a stage before beginning the next stage.</span></span> <span data-ttu-id="6b405-108">たとえば永続化時は、ホストは、2 番目の段階に進む前に、すべての永続参加要素から値を収集します。</span><span class="sxs-lookup"><span data-stu-id="6b405-108">For example when persisting, the host collects values from all the persistence participants before moving to the second stage.</span></span> <span data-ttu-id="6b405-109">2 番目の段階では、ホストは、マップを行うために、最初の段階で収集したすべての値を 2 番目の段階のすべての永続参加要素に提供します。</span><span class="sxs-lookup"><span data-stu-id="6b405-109">In the second stage, the host provides all the values collected in the first stage to all persistence participants in the second stage for mapping.</span></span> <span data-ttu-id="6b405-110">3 番目の段階では、ホストは、<xref:System.Activities.DurableInstancing.SaveWorkflowCommand> の起動時に、最初の段階および 2 番目の段階で収集したすべての値を永続化プロバイダーに提供します。</span><span class="sxs-lookup"><span data-stu-id="6b405-110">In the third stage, the host provides all the collected values in the first and second stages to the persistence provider when invoking the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>.</span></span> <span data-ttu-id="6b405-111">次に、4 番目の段階では、ホストは、収集したすべての値を永続性トランザクションの下で永続 IO 参加要素に提供します。</span><span class="sxs-lookup"><span data-stu-id="6b405-111">Then in the fourth stage, the host provides all the collected values to all the persistence IO participants under the persistence transaction.</span></span>  
  
 <span data-ttu-id="6b405-112">ホストは、永続化インスタンスの読み込み時に次の段階を実行します。</span><span class="sxs-lookup"><span data-stu-id="6b405-112">A host executes the following stages when loading a persistence instance:</span></span>  
  
1.  <span data-ttu-id="6b405-113"><xref:System.Activities.DurableInstancing.LoadWorkflowCommand> および <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> を永続化プロバイダーに発行します。</span><span class="sxs-lookup"><span data-stu-id="6b405-113">Issues the <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> and <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> to the persistence provider.</span></span>  
  
2.  <span data-ttu-id="6b405-114">永続性トランザクションの下で I/O を実行します。</span><span class="sxs-lookup"><span data-stu-id="6b405-114">Performs I/O under the persistence transaction.</span></span>  
  
3.  <span data-ttu-id="6b405-115">読み込まれた値を発行します。</span><span class="sxs-lookup"><span data-stu-id="6b405-115">Publishes the loaded values.</span></span>  
  
 <span data-ttu-id="6b405-116">最上位レベルでは、<xref:System.Activities.Persistence.PersistenceParticipant> クラスから派生するワークフロー インスタンス拡張機能は、永続化プロセスの最初の段階 (Collect) および 2 番目の段階 (Map) と、読み込みプロセスの 3 番目の段階 (Publish) に参加できます。</span><span class="sxs-lookup"><span data-stu-id="6b405-116">At the highest level, workflow instance extensions that derive from the <xref:System.Activities.Persistence.PersistenceParticipant> class can participate in the first (Collect) and second (Map) stages of persisting process and the third stage (Publish) of loading process.</span></span>  <span data-ttu-id="6b405-117">PersistenceIOParticipant クラスから派生するワークフロー インスタンス拡張機能は、さらに、永続化プロセスの 4 番目の段階と、読み込みプロセス (I/O) の 2 番目の段階に参加できます。</span><span class="sxs-lookup"><span data-stu-id="6b405-117">Workflow instance extensions deriving from the PersistenceIOParticipant class can additionally participate in the fourth stage of the persisting process and the second stage of the loading process (I/O).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceIOParticipant (bool isSaveTransactionRequired, bool isLoadTransactionRequired);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isSaveTransactionRequired, bool isLoadTransactionRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (isSaveTransactionRequired As Boolean, isLoadTransactionRequired As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceIOParticipant(bool isSaveTransactionRequired, bool isLoadTransactionRequired);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isSaveTransactionRequired" Type="System.Boolean" />
        <Parameter Name="isLoadTransactionRequired" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isSaveTransactionRequired">
          <span data-ttu-id="6b405-118">トランザクションで保存操作が必要な場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="6b405-118"><see langword="true" /> if a transaction is required for the Save operation.</span></span> <span data-ttu-id="6b405-119">このパラメーターを <see langword="true" /> に設定して <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> オブジェクトを作成すると、Transaction.Current は BeginOnSave の起動時に必ず設定されます。</span><span class="sxs-lookup"><span data-stu-id="6b405-119">If the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> object is created with this parameter set to <see langword="true" />,  Transaction.Current is guaranteed to be set when BeginOnSave is invoked.</span></span> <span data-ttu-id="6b405-120">トランザクションは、永続化プロバイダー、すべての PersistenceIOParticipant 拡張機能、およびその他のトランザクション参加要素の間で共有されます。</span><span class="sxs-lookup"><span data-stu-id="6b405-120">The transaction is shared between the persistence provider, all PersistenceIOParticipant extensions, and potentially other transaction participants.</span></span></param>
        <param name="isLoadTransactionRequired">
          <span data-ttu-id="6b405-121">読み込み操作でトランザクションが必要な場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="6b405-121"><see langword="true" /> if a transaction is required for the Load operation.</span></span> <span data-ttu-id="6b405-122">このパラメーターを <see langword="true" /> に設定して <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> オブジェクトを作成すると、Transaction.Current は BeginOnLoad の起動時に必ず設定されます。</span><span class="sxs-lookup"><span data-stu-id="6b405-122">If the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> object is created with this parameter set to <see langword="true" />,  Transaction.Current is guaranteed to be set  when BeginOnLoad is invoked.</span></span> <span data-ttu-id="6b405-123">トランザクションは、永続化プロバイダー、すべての PersistenceIOParticipant 拡張機能、およびその他のトランザクション参加要素の間で共有されます。</span><span class="sxs-lookup"><span data-stu-id="6b405-123">The transaction is shared between the persistence provider, all PersistenceIOParticipant extensions, and potentially other transaction participants.</span></span></param>
        <summary><span data-ttu-id="6b405-124">
          <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> クラスのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6b405-124">Initializes an instance of the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected abstract void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.Abort" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b405-125">保留中の IO (読み込みまたは保存) 操作を中止します。</span><span class="sxs-lookup"><span data-stu-id="6b405-125">Aborts the pending IO (Load or Save) operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b405-126">BeginOnSave または BeginOnLoad をオーバーライドした後に、すぐに完了しないことがある派生クラスは、Abort をオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="6b405-126">Derived classes that override BeginOnSave or BeginOnLoad and might not always complete immediately must override Abort.</span></span> <span data-ttu-id="6b405-127">Abort を起動したら、保留中の IO 操作を取り消す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6b405-127">If Abort is invoked, any pending IO operations must be canceled.</span></span> <span data-ttu-id="6b405-128">この方法で操作を取り消した場合、対応する End メソッドは OperationCanceledException をスローします。</span><span class="sxs-lookup"><span data-stu-id="6b405-128">If an operation is canceled in this way, the corresponding End method should throw OperationCanceledException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnLoad">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnLoad (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnLoad(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnLoad(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginOnLoad (readWriteValues As IDictionary(Of XName, Object), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginOnLoad(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues"><span data-ttu-id="6b405-129">永続化プロバイダーによって読み込まれる読み取り/書き込み値のディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="6b405-129">A dictionary of read-write values loaded by the persistence provider.</span></span> <span data-ttu-id="6b405-130">これは、このインスタンスの最新の永続化で BeginOnSave に渡される読み取り/書き込み値のセットに対応します。</span><span class="sxs-lookup"><span data-stu-id="6b405-130">This corresponds to the set of read-write values passed to BeginOnSave in the most recent persistence episode for this instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="6b405-131">タイムアウトせずに操作を完了する必要がある期間。</span><span class="sxs-lookup"><span data-stu-id="6b405-131">The time span within which the operation should be completed without timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="6b405-132">非同期の読み込み操作の完了通知を受信する非同期コールバック デリゲート。</span><span class="sxs-lookup"><span data-stu-id="6b405-132">The asynchronous callback delegate that receives notification of the completion of the asynchronous Load operation.</span></span></param>
        <param name="state"><span data-ttu-id="6b405-133">非同期操作に関連付けられた状態情報。</span><span class="sxs-lookup"><span data-stu-id="6b405-133">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="6b405-134">インスタンス ストアから読み込むインスタンスと共に追加の状態を読み込むための非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="6b405-134">Begins an asynchronous operation to load additional state in conjunction with an instance being loaded from the instance store.</span></span></summary>
        <returns><span data-ttu-id="6b405-135">非同期操作のステータス。</span><span class="sxs-lookup"><span data-stu-id="6b405-135">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnSave">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnSave (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnSave(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginOnSave (readWriteValues As IDictionary(Of XName, Object), writeOnlyValues As IDictionary(Of XName, Object), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginOnSave(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues"><span data-ttu-id="6b405-136">CollectValues および MapValues 段階で収集される読み取り/書き込み値のディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="6b405-136">A dictionary of read-write values collected in the CollectValues and MapValues stages.</span></span></param>
        <param name="writeOnlyValues"><span data-ttu-id="6b405-137">CollectValues および MapValues 段階で収集される書き込み専用値のディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="6b405-137">A dictionary of write-only values collected in the CollectValues and MapValues stages.</span></span></param>
        <param name="timeout"><span data-ttu-id="6b405-138">タイムアウトせずに操作を完了する必要がある期間。</span><span class="sxs-lookup"><span data-stu-id="6b405-138">The time span within which the operation should be completed without timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="6b405-139">非同期操作完了の通知を受信する非同期コールバック デリゲート。</span><span class="sxs-lookup"><span data-stu-id="6b405-139">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="6b405-140">非同期操作に関連付けられた状態情報。</span><span class="sxs-lookup"><span data-stu-id="6b405-140">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="6b405-141">インスタンス ストアに永続化されるインスタンスと共に追加の状態を保存するための非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="6b405-141">Begins an asynchronous operation to save additional state in conjunction with an instance being persisted to the instance store.</span></span></summary>
        <returns><span data-ttu-id="6b405-142">非同期操作のステータス。</span><span class="sxs-lookup"><span data-stu-id="6b405-142">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnLoad">
      <MemberSignature Language="C#" Value="protected virtual void EndOnLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndOnLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndOnLoad(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="6b405-143"><see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> メソッドの呼び出しにより返される非同期の結果。</span><span class="sxs-lookup"><span data-stu-id="6b405-143">The asynchronous result returned by a call to the <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="6b405-144">非同期の読み込み操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="6b405-144">Completes the asynchronous Load operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnSave">
      <MemberSignature Language="C#" Value="protected virtual void EndOnSave (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnSave(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnSave(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndOnSave (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndOnSave(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="6b405-145"><see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> メソッドの呼び出しにより返される非同期の結果。</span><span class="sxs-lookup"><span data-stu-id="6b405-145">The asynchronous result returned by a call to the <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="6b405-146">非同期の保存操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="6b405-146">Completes the asynchronous Save operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>