<Type Name="HwndHost" FullName="System.Windows.Interop.HwndHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6dc36677f7a569385c3c29dd72651b1f7cf3b5c9" />
    <Meta Name="ms.sourcegitcommit" Value="af562076243cb1c2c1d8518e9f1b489f858cc658" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/15/2018" />
    <Meta Name="ms.locfileid" Value="35652319" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HwndHost : System.Windows.FrameworkElement, IDisposable, System.Windows.Interop.IKeyboardInputSink, System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract HwndHost extends System.Windows.FrameworkElement implements class System.IDisposable, class System.Windows.Interop.IKeyboardInputSink, class System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.HwndHost" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HwndHost&#xA;Inherits FrameworkElement&#xA;Implements IDisposable, IKeyboardInputSink, IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class HwndHost abstract : System::Windows::FrameworkElement, IDisposable, System::Windows::Interop::IKeyboardInputSink, System::Windows::Interop::IWin32Window" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IKeyboardInputSink</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bd297-101">Windows Presentation Foundation (WPF) のコンテンツ内の要素を Win32 ウィンドウとしてホストします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd297-101">Hosts a Win32 window as an element within Windows Presentation Foundation (WPF) content.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd297-102">ホストに、 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]  ウィンドウから派生するクラスを作成する<xref:System.Windows.Interop.HwndHost>です。</span><span class="sxs-lookup"><span data-stu-id="bd297-102">To host a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window, create a class that derives from <xref:System.Windows.Interop.HwndHost>.</span></span> <span data-ttu-id="bd297-103">上書き、<xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A>メソッドを作成し、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]ウィンドウには、メソッドに渡される親ウィンドウの子として。</span><span class="sxs-lookup"><span data-stu-id="bd297-103">Override the <xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A> method and create your [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window as a child of the parent window that is passed into the method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="bd297-104"><xref:System.Windows.Interop.HwndHost>から派生<xref:System.Windows.FrameworkElement>のさまざまなプロパティ<xref:System.Windows.Interop.HwndHost>から取得した<xref:System.Windows.FrameworkElement>などの他の中間クラス<xref:System.Windows.UIElement>できるだけに一般的にマップされていない[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]対応します。</span><span class="sxs-lookup"><span data-stu-id="bd297-104">Although <xref:System.Windows.Interop.HwndHost> derives from <xref:System.Windows.FrameworkElement>, various properties of <xref:System.Windows.Interop.HwndHost> that come from <xref:System.Windows.FrameworkElement> and other intermediate classes such as <xref:System.Windows.UIElement> are not generally mapped to possible [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] equivalents.</span></span> <span data-ttu-id="bd297-105">また、すべて<xref:System.Windows.FrameworkElement>  /  <xref:System.Windows.UIElement>相互運用の境界を越えてイベント転送を入力します。</span><span class="sxs-lookup"><span data-stu-id="bd297-105">Also, not all <xref:System.Windows.FrameworkElement> / <xref:System.Windows.UIElement> input events transfer across the interoperation boundary.</span></span> <span data-ttu-id="bd297-106"><xref:System.Windows.Interop.HwndHost> 派生した<xref:System.Windows.FrameworkElement>、主にできるように、<xref:System.Windows.Interop.HwndHost>のインスタンスは、可能なコンテンツ モデルでは、最も広範な挿入することができする既定のため<xref:System.Windows.FrameworkElement>レイアウト特性を適用できます。</span><span class="sxs-lookup"><span data-stu-id="bd297-106"><xref:System.Windows.Interop.HwndHost> derives from <xref:System.Windows.FrameworkElement> primarily so that an <xref:System.Windows.Interop.HwndHost> instance can be inserted into the widest variety of possible content models, and so that default <xref:System.Windows.FrameworkElement> layout characteristics can apply.</span></span> <span data-ttu-id="bd297-107">詳細については<xref:System.Windows.Interop.HwndHost>を参照してください[WPF および Win32 の相互運用](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)です。</span><span class="sxs-lookup"><span data-stu-id="bd297-107">For more details on <xref:System.Windows.Interop.HwndHost>, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HwndHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HwndHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd297-108">
            <see cref="T:System.Windows.Interop.HwndHost" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-108">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndHost" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="bd297-109">この型またはメンバーはインターネット ゾーンのセキュリティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="bd297-109">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildWindowCore">
      <MemberSignature Language="C#" Value="protected abstract System.Runtime.InteropServices.HandleRef BuildWindowCore (System.Runtime.InteropServices.HandleRef hwndParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype System.Runtime.InteropServices.HandleRef hwndParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function BuildWindowCore (hwndParent As HandleRef) As HandleRef" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Runtime::InteropServices::HandleRef BuildWindowCore(System::Runtime::InteropServices::HandleRef hwndParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.HandleRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwndParent" Type="System.Runtime.InteropServices.HandleRef" />
      </Parameters>
      <Docs>
        <param name="hwndParent">
          <span data-ttu-id="bd297-110">親ウィンドウのウィンドウ ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-110">The window handle of the parent window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-111">派生クラスでオーバーライドされると、ホストされるウィンドウを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-111">When overridden in a derived class, creates the window to be hosted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-112">作成する子 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] ウィンドウのハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-112">The handle to the child [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window to create.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd297-113">このメソッドの実装は、内の内部実装から呼び出される<xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A>です。</span><span class="sxs-lookup"><span data-stu-id="bd297-113">This method's implementation is called from within the internal implementation of <xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A>.</span></span>  
  
 <span data-ttu-id="bd297-114">子ウィンドウは、ウィンドウが呼び出し元のスレッドによって所有されている場合にのみ作成されます。</span><span class="sxs-lookup"><span data-stu-id="bd297-114">The child window will be created only if the window is owned by the calling thread.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bd297-115">
            <para>ホストされているウィンドウを作成するには、このメソッドをオーバーライドします。返す ウィンドウで指定されたウィンドウの子である必要があります<paramref name="hwndParent" />です。さらに、子ウィンドウは、ウィンドウが呼び出し元のスレッドによって所有されている場合にのみ作成されます。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-115">
              <para>Override this method to build the window being hosted.  The window that you return must be a child of the window specified by <paramref name="hwndParent" />.  In addition, the child window will only be created if the window is owned by the calling thread.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DestroyWindowCore">
      <MemberSignature Language="C#" Value="protected abstract void DestroyWindowCore (System.Runtime.InteropServices.HandleRef hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DestroyWindowCore(valuetype System.Runtime.InteropServices.HandleRef hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DestroyWindowCore (hwnd As HandleRef)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DestroyWindowCore(System::Runtime::InteropServices::HandleRef hwnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.Runtime.InteropServices.HandleRef" />
      </Parameters>
      <Docs>
        <param name="hwnd">
          <span data-ttu-id="bd297-116">ウィンドウ ハンドルを格納する構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-116">A structure that contains the window handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-117">派生クラスでオーバーライドされると、ホストされているウィンドウを破棄します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-117">When overridden in a derived class, destroys the hosted window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="bd297-118">この型またはメンバーはインターネット ゾーンのセキュリティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="bd297-118">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bd297-119">
            <para>によって作成され、ホスト型のウィンドウを破棄するには、このメソッドをオーバーライド<see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />です。<paramref name="hwnd" />パラメーターは、によって返されるハンドルにする必要があります<see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-119">
              <para>Override this method to destroy the hosted window as created by <see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />. The <paramref name="hwnd" /> parameter should be the handle as returned by <see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bd297-120">オブジェクトが保持していたシステム リソースを直ちに解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-120">Immediately frees any system resources that the object might hold.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="bd297-121">この型またはメンバーはインターネット ゾーンのセキュリティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="bd297-121">This type or member is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="bd297-122">派生クラスは、このメソッドをオーバーライドできます (によって、<xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29>署名) その他のクリーンアップを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="bd297-122">Derived classes can override this method (by the <xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29> signature) if they need to do additional cleanup.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd297-123">オブジェクトが保持していたシステム リソースを直ちに解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-123">Immediately frees any system resources that the object might hold.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="bd297-124">この型またはメンバーはインターネット ゾーンのセキュリティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="bd297-124">This type or member is not available in the Internet security zone.</span></span>  
>   
>  <span data-ttu-id="bd297-125">このメソッドをオーバーライドすることができますが、この署名ではありません。</span><span class="sxs-lookup"><span data-stu-id="bd297-125">This method can be overridden, but not by this signature.</span></span> <span data-ttu-id="bd297-126">参照してください<xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29>のオーバーライド可能な署名します。</span><span class="sxs-lookup"><span data-stu-id="bd297-126">See <xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29> for the overridable signature.</span></span> <span data-ttu-id="bd297-127">このパラメーターなしのシグネチャは、インターフェイス コントラクトに必要なものであり、アクティブな<xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29>実装`disposing`される`true`です。</span><span class="sxs-lookup"><span data-stu-id="bd297-127">This parameterless signature is the one required by the interface contract, and it effectively calls the active <xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29> implementation with `disposing` being `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="bd297-128">明示的な破棄要求元から呼び出された場合は <see langword="true" /> に設定します。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-128">Set to <see langword="true" /> if called from an explicit disposer and <see langword="false" /> otherwise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-129">オブジェクトが保持していたシステム リソースを直ちに解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-129">Immediately frees any system resources that the object might hold.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="bd297-130">この型またはメンバーはインターネット ゾーンのセキュリティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="bd297-130">This type or member is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="bd297-131">派生クラスは、その他のクリーンアップを実行する必要がある場合、このメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="bd297-131">Derived classes can override this method if they need to do additional cleanup.</span></span> <span data-ttu-id="bd297-132">ただし、すべてのリソースは解放されていることを確認する基本実装を呼び出す、ことも必要があります。</span><span class="sxs-lookup"><span data-stu-id="bd297-132">However, they should also call the base implementation to ensure that all resources are freed.</span></span> <span data-ttu-id="bd297-133">基本の実装では、相当の作業を基底クラスに認識されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="bd297-133">The base implementation does fairly substantial work to free resources that are known to the base class.</span></span>  
  
 <span data-ttu-id="bd297-134">ウィンドウがホストされている場合は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="bd297-134">If a window is being hosted, it will be destroyed.</span></span>  
  
 <span data-ttu-id="bd297-135">呼び出し元のスレッドは、ディスパッチャーと同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="bd297-135">The calling thread must be the same as the dispatcher.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndHost.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd297-136">HwndHost が表示されている画面の DPI が変更されたあとに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-136">Occurs after the DPI of the screen on which the HwndHost is displayed changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DpiChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DpiChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Interop.HwndHost.DpiChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DpiChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DpiChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd297-137">画面 HwndHost の DPI が変更中であるときの <see cref="T:System.Windows.RoutedEvent" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-137">A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the HwndHost is on changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~HwndHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!HwndHost ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd297-138">ガベージ コレクターがオブジェクトを破棄する前に、最後のクリーンアップを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-138">Performs the final cleanup before the garbage collector destroys the object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd297-139">ほとんどのファイナライザーのように呼び出される`Dispose(false)`です。</span><span class="sxs-lookup"><span data-stu-id="bd297-139">Like most finalizers, this calls `Dispose(false)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndHost.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Interop.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd297-140">ホストされたウィンドウのウィンドウ ハンドルを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-140">Gets the window handle  of the hosted window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd297-141">ウィンドウ ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-141">The window handle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bd297-142">このオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-142">to get this object.</span>
          </span>
          <span data-ttu-id="bd297-143">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-143">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="HasFocusWithinCore">
      <MemberSignature Language="C#" Value="protected virtual bool HasFocusWithinCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HasFocusWithinCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.HasFocusWithinCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasFocusWithinCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HasFocusWithinCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd297-144">シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがあるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-144">Gets a value that indicates whether the sink or one of its contained components has focus.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-145">シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-145">
              <see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">
          <span data-ttu-id="bd297-146">
            <see cref="T:System.Windows.Interop.HwndHost" /> オブジェクトのサイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-146">The size of the <see cref="T:System.Windows.Interop.HwndHost" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-147">レイアウト エンジンの操作が要求する、<see cref="T:System.Windows.Interop.HwndHost" /> オブジェクトによって表されるウィンドウのサイズを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-147">Returns the size of the window represented by the <see cref="T:System.Windows.Interop.HwndHost" /> object, as requested by layout engine operations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-148">
            <see cref="T:System.Windows.Interop.HwndHost" /> オブジェクトのサイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-148">The size of the <see cref="T:System.Windows.Interop.HwndHost" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="bd297-149">この型またはメンバーはインターネット ゾーンのセキュリティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="bd297-149">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bd297-150">レイアウトを調整するために (レイアウト エンジンによってホストされるリージョンに対して操作を実行) します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-150">in order to adjust the layout (by having the layout engine act upon the hosted region).</span>
          </span>
          <span data-ttu-id="bd297-151">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-151">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <span data-ttu-id="bd297-152">
            <para>[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]、ウィンドウは、ウィンドウの作成時にレイアウトによって要求されたサイズがあると想定します。派生クラスは、必要なウィンドウ サイズに関する追加情報を持っている場合のみ、このメソッドをオーバーライドする必要があります。特定の実装をここでは、オーバーライドでは既に、<see cref="T:System.Windows.FrameworkElement" />仮想メンバー、ウィンドウ ハンドルのサイズの制約の基本し、ゼロの値を 1 つまたは複数のディメンションで、制約以外として扱います。<see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />クラスも上書き、<see cref="M:System.Windows.Forms.Integration.WindowsFormsHost.MeasureOverride(System.Windows.Size)" />大きすぎる場合に、フォームのクリップの原因となる実装します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-152">
              <para>In [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)], a window is expected to be the size requested by layout at the time the window is created. Derived classes should override this method only if they have additional information regarding required window size.  The specific implementation here is already an override of the <see cref="T:System.Windows.FrameworkElement" /> virtual member, which bases size constraints on the window handle and treats a zero value in one or more dimensions as a non-constraint. The <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> class also overrides a <see cref="M:System.Windows.Forms.Integration.WindowsFormsHost.MeasureOverride(System.Windows.Size)" /> implementation that will result in a clip of the form if it is too large.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MessageHook">
      <MemberSignature Language="C#" Value="public event System.Windows.Interop.HwndSourceHook MessageHook;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Interop.HwndSourceHook MessageHook" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndHost.MessageHook" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MessageHook As HwndSourceHook " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Interop::HwndSourceHook ^ MessageHook;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndSourceHook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd297-153">ホストされたウィンドウで受信される未処理のメッセージごとに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-153">Occurs for each unhandled message that is received by the hosted window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="bd297-154">この型またはメンバーはインターネット ゾーンのセキュリティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="bd297-154">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bd297-155">追加またはこのイベントのハンドラーを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-155">to add or remove handlers of this event.</span>
          </span>
          <span data-ttu-id="bd297-156">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-156">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd297-157">
            <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Interop.HwndHost" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-157">Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for <see cref="T:System.Windows.Interop.HwndHost" /> .</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-158">型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-158">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd297-159">このメソッドの実装は、通常、特定のコンス トラクターを呼び出す<xref:System.Windows.Automation.Peers.AutomationPeer>実装し、戻り値として返します。</span><span class="sxs-lookup"><span data-stu-id="bd297-159">The implementation of this method is typically to call the constructor of a specific <xref:System.Windows.Automation.Peers.AutomationPeer> implementation, and return it as the return value.</span></span> <span data-ttu-id="bd297-160"><xref:System.Windows.Interop.HwndHost>の実装<xref:System.Windows.Interop.HwndHost.OnCreateAutomationPeer%2A>内部クラスは、返されるオートメーション ピアが、これを行います。</span><span class="sxs-lookup"><span data-stu-id="bd297-160">The <xref:System.Windows.Interop.HwndHost> implementation of <xref:System.Windows.Interop.HwndHost.OnCreateAutomationPeer%2A> does this, but the automation peer that it returns is an internal class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.Peers.AutomationPeer" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected override void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" />
      </Parameters>
      <Docs>
        <param name="oldDpi">
          <span data-ttu-id="bd297-161">元の DPI スケール設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-161">The original DPI scale setting.</span>
          </span>
        </param>
        <param name="newDpi">
          <span data-ttu-id="bd297-162">新規の DPI スケール設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-162">The new DPI scale setting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-163">この HwndHost が表示される DPI が変更されるときに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-163">Called when the DPI at which this HwndHost is rendered changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bd297-164">イベントのデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-164">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-165">ホストされたウィンドウが、[WM_KEYDOWN](http://go.microsoft.com/fwlink/?LinkId=161282) メッセージを受け取るときに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-165">Called when the hosted window receives a [WM_KEYDOWN](http://go.microsoft.com/fwlink/?LinkId=161282) message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="bd297-166">この型またはメンバーはインターネット ゾーンのセキュリティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="bd297-166">This type or member is not available in the Internet security zone.</span></span>  
>   
>  <span data-ttu-id="bd297-167">これは、クラス ハンドラーのオーバーライド<xref:System.Windows.UIElement.OnKeyDown%2A>変換の動作を提供し、[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]にメッセージ、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]イベント、イベントを適切なときに処理済みとしてマークします。</span><span class="sxs-lookup"><span data-stu-id="bd297-167">This is an override of the class handler <xref:System.Windows.UIElement.OnKeyDown%2A> and provides the behavior of translating the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] message into a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] event, marking the event as handled whenever appropriate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bd297-168">イベントのデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-168">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-169">ホストされたウィンドウが、[WM_KEYUP](http://go.microsoft.com/fwlink/?LinkId=161283) メッセージを受け取るときに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-169">Called when the hosted window receives a [WM_KEYUP](http://go.microsoft.com/fwlink/?LinkId=161283) message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="bd297-170">この型またはメンバーはインターネット ゾーンのセキュリティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="bd297-170">This type or member is not available in the Internet security zone.</span></span>  
>   
>  <span data-ttu-id="bd297-171">これは、クラス ハンドラーのオーバーライド<xref:System.Windows.UIElement.OnKeyUp%2A>変換の動作を提供し、[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]にメッセージ、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]イベント、イベントを適切なときに処理済みとしてマークします。</span><span class="sxs-lookup"><span data-stu-id="bd297-171">This is an override of the class handler <xref:System.Windows.UIElement.OnKeyUp%2A> and provides the behavior of translating the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] message into a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] event, marking the event as handled whenever appropriate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMnemonicCore">
      <MemberSignature Language="C#" Value="protected virtual bool OnMnemonicCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMnemonicCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMnemonicCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnMnemonicCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="bd297-172">ニーモニック用のメッセージおよび関連付けられたデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-172">The message for the mnemonic and associated data.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="bd297-173">変換キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-173">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-174">このシンクのニーモニック (アクセス キー) のいずれかが起動されたときに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-174">Called when one of the mnemonics (access keys) for this sink is invoked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-175">常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-175">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnWindowPositionChanged (System.Windows.Rect rcBoundingBox);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWindowPositionChanged(valuetype System.Windows.Rect rcBoundingBox) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWindowPositionChanged (rcBoundingBox As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWindowPositionChanged(System::Windows::Rect rcBoundingBox);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rcBoundingBox" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rcBoundingBox">
          <span data-ttu-id="bd297-176">ウィンドウの位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-176">The window's position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-177">ホストされたウィンドウの位置が変わると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-177">Called when the hosted window's position changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="bd297-178">この型またはメンバーはインターネット ゾーンのセキュリティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="bd297-178">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bd297-179">
            <para>サブクラスの寸法に合わせてウィンドウのサイズを変更するには、このメソッドをオーバーライドできます<paramref name="rcBoundingBox" />です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-179">
              <para>Subclasses can override this method to resize the window based on the provided dimensions of <paramref name="rcBoundingBox" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSinkCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RegisterKeyboardInputSinkCore (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSinkCore(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">
          <span data-ttu-id="bd297-180">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> シンク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-180">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-181">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> インターフェイスを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-181">Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-182">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> サイト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-182">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Function HasFocusWithin () As Boolean Implements IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() = System::Windows::Interop::IKeyboardInputSink::HasFocusWithin;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd297-183">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-183">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-184">シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-184">
              <see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd297-185">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bd297-185">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bd297-186">これは、<xref:System.Windows.Interop.HwndHost> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bd297-186">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value=" Property KeyboardInputSite As IKeyboardInputSite Implements IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd297-187">このメンバーの詳細については、「<see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-187">For a description of this member, see <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd297-188">コンテナーの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> インターフェイスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-188">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd297-189">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bd297-189">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bd297-190">これは、<xref:System.Windows.Interop.HwndHost> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bd297-190">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bd297-191">このメソッドを呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-191">to call this method.</span>
          </span>
          <span data-ttu-id="bd297-192">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-192">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.OnMnemonic">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.OnMnemonic" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::OnMnemonic;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="bd297-193">ニーモニック用のメッセージおよび関連付けられたデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-193">The message for the mnemonic and associated data.</span>
          </span>
          <span data-ttu-id="bd297-194">このメッセージ構造を変更しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-194">Do not modify this message structure.</span>
          </span>
          <span data-ttu-id="bd297-195">パフォーマンス上の理由から、これは参照渡しのみです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-195">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="bd297-196">変換キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-196">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-197">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-197">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-198">メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-198">
              <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd297-199">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bd297-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bd297-200">これは、<xref:System.Windows.Interop.HwndHost> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bd297-200">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite IKeyboardInputSink.RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite Implements IKeyboardInputSink.RegisterKeyboardInputSink" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink) = System::Windows::Interop::IKeyboardInputSink::RegisterKeyboardInputSink;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">
          <span data-ttu-id="bd297-201">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> シンク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-201">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-202">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-202">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-203">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> サイト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-203">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd297-204">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bd297-204">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bd297-205">これは、<xref:System.Windows.Interop.HwndHost> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bd297-205">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="bd297-206">このメソッドを呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-206">to call this method.</span>
          </span>
          <span data-ttu-id="bd297-207">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-207">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TabInto">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Function TabInto (request As TraversalRequest) As Boolean Implements IKeyboardInputSink.TabInto" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TabInto(System::Windows::Input::TraversalRequest ^ request) = System::Windows::Interop::IKeyboardInputSink::TabInto;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="bd297-208">フォーカスを最初と最後のどちらのタブ位置に設定するかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-208">Specifies whether focus should be set to the first or the last tab stop.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-209">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-209">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-210">フォーカスが要求どおりに設定された場合は <see langword="true" />。タブ位置が存在しない場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-210">
              <see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd297-211">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bd297-211">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bd297-212">これは、<xref:System.Windows.Interop.HwndHost> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bd297-212">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="bd297-213">このメソッドを呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-213">to call this method.</span>
          </span>
          <span data-ttu-id="bd297-214">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-214">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateAccelerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateAccelerator;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="bd297-215">メッセージおよび関連付けられたデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-215">The message and associated data.</span>
          </span>
          <span data-ttu-id="bd297-216">この構造体を変更しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-216">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="bd297-217">パフォーマンス上の理由から、これは参照渡しのみです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-217">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="bd297-218">変換キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-218">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-219">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-219">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-220">メッセージがメソッドの実装によって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-220">
              <see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd297-221">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bd297-221">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bd297-222">これは、<xref:System.Windows.Interop.HwndHost> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bd297-222">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bd297-223">このメソッドを呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-223">to call this method.</span>
          </span>
          <span data-ttu-id="bd297-224">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-224">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateChar">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateChar;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="bd297-225">メッセージおよび関連付けられたデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-225">The message and associated data.</span>
          </span>
          <span data-ttu-id="bd297-226">この構造体を変更しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-226">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="bd297-227">パフォーマンス上の理由から、これは参照渡しのみです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-227">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="bd297-228">変換キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-228">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-229">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-229">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-230">メッセージが処理されたため <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> を呼び出さない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-230">
              <see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd297-231">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="bd297-231">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bd297-232">これは、<xref:System.Windows.Interop.HwndHost> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="bd297-232">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIntoCore">
      <MemberSignature Language="C#" Value="protected virtual bool TabIntoCore (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TabIntoCore(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TabIntoCore (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TabIntoCore(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="bd297-233">フォーカスを最初と最後のどちらのタブ位置に設定するかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-233">Specifies whether focus should be set to the first or the last tab stop.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-234">フォーカスをシンクの最初のタブ位置または最後のタブ位置のいずれかに設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-234">Sets focus on either the first tab stop or the last tab stop of the sink.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-235">常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-235">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateAcceleratorCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateAcceleratorCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateAcceleratorCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateAcceleratorCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="bd297-236">メッセージおよび関連付けられたデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-236">The message and associated data.</span>
          </span>
          <span data-ttu-id="bd297-237">この構造体を変更しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-237">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="bd297-238">パフォーマンス上の理由から、これは参照渡しのみです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-238">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="bd297-239">変換キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-239">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-240">キー押下メッセージのレベルでキーボード入力を処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-240">Processes keyboard input at the keydown message level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-241">常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-241">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateCharCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateCharCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateCharCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateCharCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateCharCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="bd297-242">メッセージおよび関連付けられたデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-242">The message and associated data.</span>
          </span>
          <span data-ttu-id="bd297-243">この構造体を変更しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-243">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="bd297-244">パフォーマンス上の理由から、これは参照渡しのみです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-244">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="bd297-245">変換キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-245">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-246">
            <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> メソッドの呼び出し前に、WM_CHAR、WM_SYSCHAR、WM_DEADCHAR、および WM_SYSDEADCHAR 入力メッセージを処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-246">Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> method is called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-247">常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-247">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateWindowPos">
      <MemberSignature Language="C#" Value="public void UpdateWindowPos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateWindowPos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.UpdateWindowPos" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateWindowPos ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateWindowPos();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd297-248">要素の現在の状態に合わせて、子ウィンドウのサイズ、可視性、および位置を更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-248">Updates the child window's size, visibility, and position to reflect the current state of the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="bd297-249">この型またはメンバーはインターネット ゾーンのセキュリティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="bd297-249">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual IntPtr WndProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int WndProc(native int hwnd, int32 msg, native int wParam, native int lParam, bool&amp; handled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function WndProc (hwnd As IntPtr, msg As Integer, wParam As IntPtr, lParam As IntPtr, ByRef handled As Boolean) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, bool % handled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wParam" Type="System.IntPtr" />
        <Parameter Name="lParam" Type="System.IntPtr" />
        <Parameter Name="handled" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="hwnd">
          <span data-ttu-id="bd297-250">ホストされたウィンドウのウィンドウ ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-250">The window handle of the hosted window.</span>
          </span>
        </param>
        <param name="msg">
          <span data-ttu-id="bd297-251">アクションの対象となるメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-251">The message to act upon.</span>
          </span>
        </param>
        <param name="wParam">
          <span data-ttu-id="bd297-252">メッセージの処理に関連する可能性のある情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-252">Information that may be relevant to handling the message.</span>
          </span>
          <span data-ttu-id="bd297-253">通常、これは、フラグなどの小規模の情報を格納するために使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-253">This is typically used to store small pieces of information, such as flags.</span>
          </span>
        </param>
        <param name="lParam">
          <span data-ttu-id="bd297-254">メッセージの処理に関連する可能性のある情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-254">Information that may be relevant to handling the message.</span>
          </span>
          <span data-ttu-id="bd297-255">通常、これは、オブジェクトの参照に使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-255">This is typically used to reference an object.</span>
          </span>
        </param>
        <param name="handled">
          <span data-ttu-id="bd297-256">イベント結果を処理済みとしてマークするかどうか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-256">Whether events resulting should be marked handled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd297-257">派生クラスでオーバーライドされると、ホストされた子ウィンドウのウィンドウ プロセス (ハンドル) にアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-257">When overridden in a derived class, accesses the window process (handle) of the hosted child window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd297-258">子ウィンドウのウィンドウ ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-258">The window handle of the child window.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="bd297-259">この型またはメンバーはインターネット ゾーンのセキュリティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="bd297-259">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bd297-260">このメソッドを呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-260">to call this method.</span>
          </span>
          <span data-ttu-id="bd297-261">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-261">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <span data-ttu-id="bd297-262">
            <para>基本実装<see cref="T:System.Windows.Interop.HwndHost" />は現実的なプロセスが戻ります<c>IntPtr.Zero</c>フェイル セーフとして、します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bd297-262">
              <para>The base implementation in <see cref="T:System.Windows.Interop.HwndHost" /> does not return a practical process, but will return <c>IntPtr.Zero</c> as a failsafe.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>