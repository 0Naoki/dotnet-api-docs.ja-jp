<Type Name="HwndSource" FullName="System.Windows.Interop.HwndSource">
  <TypeSignature Language="C#" Value="public class HwndSource : System.Windows.PresentationSource, IDisposable, System.Windows.Interop.IKeyboardInputSink, System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HwndSource extends System.Windows.PresentationSource implements class System.IDisposable, class System.Windows.Interop.IKeyboardInputSink, class System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.HwndSource" />
  <TypeSignature Language="VB.NET" Value="Public Class HwndSource&#xA;Inherits PresentationSource&#xA;Implements IDisposable, IKeyboardInputSink, IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class HwndSource : System::Windows::PresentationSource, IDisposable, System::Windows::Interop::IKeyboardInputSink, System::Windows::Interop::IWin32Window" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.PresentationSource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IKeyboardInputSink</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3c823-101">Win32 ウィンドウで Windows Presentation Foundation (WPF) コンテンツを表します。</span><span class="sxs-lookup"><span data-stu-id="3c823-101">Presents Windows Presentation Foundation (WPF) content in a Win32 window.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c823-102">インターネットのセキュリティ ゾーンでは、このクラスの多くのメンバーを使用できません。</span><span class="sxs-lookup"><span data-stu-id="3c823-102">Many members of this class are unavailable in the Internet security zone.</span></span>  
  
 <span data-ttu-id="3c823-103"><xref:System.Windows.Interop.HwndSource>を実装する、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]含めることができるウィンドウ[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]コンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3c823-103">An <xref:System.Windows.Interop.HwndSource> implements a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window that can contain [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span> <span data-ttu-id="3c823-104">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]ウィンドウにコンテンツが配置されている、評価しレンダリングされ、対話形式を入力します。</span><span class="sxs-lookup"><span data-stu-id="3c823-104">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content in the window is arranged, measured, and rendered; and is interactive to input.</span></span> <span data-ttu-id="3c823-105"><xref:System.Windows.Interop.HwndSource>と相互運用する特化[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]、このクラスでは、いくつかの低レベルでは公開[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]機能します。</span><span class="sxs-lookup"><span data-stu-id="3c823-105">Because the <xref:System.Windows.Interop.HwndSource> is specifically designed to interoperate with [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)], this class exposes several low-level [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] features.</span></span> <span data-ttu-id="3c823-106">このクラスを使用すると、次の操作を行います。</span><span class="sxs-lookup"><span data-stu-id="3c823-106">You can use this class to do the following:</span></span>  
  
-   <span data-ttu-id="3c823-107">ウィンドウ クラス スタイルのウィンドウ スタイルを指定して、拡張ウィンドウ スタイル。</span><span class="sxs-lookup"><span data-stu-id="3c823-107">Specify window styles, window class styles, and extended window styles.</span></span>  
  
-   <span data-ttu-id="3c823-108">ウィンドウ プロシージャをフックします。</span><span class="sxs-lookup"><span data-stu-id="3c823-108">Hook the window procedure.</span></span>  
  
-   <span data-ttu-id="3c823-109">ウィンドウ ハンドル (HWND) へのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="3c823-109">Provide access to the window handle (HWND).</span></span>  
  
-   <span data-ttu-id="3c823-110">ウィンドウを破棄します。</span><span class="sxs-lookup"><span data-stu-id="3c823-110">Destroy the window.</span></span>  
  
 <span data-ttu-id="3c823-111"><xref:System.Windows.Interop.HwndSource>クラスの一般的な相互運用性を目的し、マネージ HWND ラッパーとして設計されていません。</span><span class="sxs-lookup"><span data-stu-id="3c823-111">The <xref:System.Windows.Interop.HwndSource> class is designed for general interoperability and is not designed as a managed HWND wrapper.</span></span> <span data-ttu-id="3c823-112">一般に、ウィンドウまたはプロパティの状態を調べることを操作するための管理対象のメソッドは提供しません。</span><span class="sxs-lookup"><span data-stu-id="3c823-112">In general, it does not provide managed methods for manipulating the window or properties for inspecting its state.</span></span> <span data-ttu-id="3c823-113">代わりに、<xref:System.Windows.Interop.HwndSource>クラスへのアクセスを提供する、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]ウィンドウ ハンドル (HWND)) を通じて、<xref:System.Windows.Interop.HwndSource.Handle%2A>プロパティを渡すことができますをする方法は PInvoke を使用して[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)][!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]ウィンドウを操作するためにします。</span><span class="sxs-lookup"><span data-stu-id="3c823-113">Instead, the <xref:System.Windows.Interop.HwndSource> class provides access to the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window handle (HWND) through the <xref:System.Windows.Interop.HwndSource.Handle%2A> property, which can be passed by means of PInvoke techniques to [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in order to manipulate the window.</span></span>  
  
 <span data-ttu-id="3c823-114">**構築**</span><span class="sxs-lookup"><span data-stu-id="3c823-114">**Construction**</span></span>  
  
 <span data-ttu-id="3c823-115">多くの側面、<xref:System.Windows.Interop.HwndSource>構築時にのみ指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c823-115">Many aspects of the <xref:System.Windows.Interop.HwndSource> can only be specified at construction time.</span></span> <span data-ttu-id="3c823-116">作成する、 <xref:System.Windows.Interop.HwndSource>、最初に作成、<xref:System.Windows.Interop.HwndSourceParameters>を構造化し、目的のパラメーターを設定します。</span><span class="sxs-lookup"><span data-stu-id="3c823-116">To create an <xref:System.Windows.Interop.HwndSource>, first create an <xref:System.Windows.Interop.HwndSourceParameters> structure and populate it with the desired parameters.</span></span> <span data-ttu-id="3c823-117">これらのパラメーターを以下に示します。</span><span class="sxs-lookup"><span data-stu-id="3c823-117">These parameters include the following:</span></span>  
  
-   <span data-ttu-id="3c823-118">クラス、ウィンドウ、および拡張ウィンドウ スタイル。</span><span class="sxs-lookup"><span data-stu-id="3c823-118">The class, window, and extended window styles.</span></span> <span data-ttu-id="3c823-119">PInvoke を使用して、ウィンドウが作成された後にスタイルを変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3c823-119">You must use PInvoke to change the styles after the window is created.</span></span> <span data-ttu-id="3c823-120">ウィンドウを作成した後、すべてのスタイルを変更できます。</span><span class="sxs-lookup"><span data-stu-id="3c823-120">Not all styles can be changed after the window is created.</span></span> <span data-ttu-id="3c823-121">参照してください、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]ウィンドウ スタイルを変更する前にドキュメント。</span><span class="sxs-lookup"><span data-stu-id="3c823-121">Consult the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] documentation before changing window styles.</span></span>  
  
-   <span data-ttu-id="3c823-122">ウィンドウの最初の位置。</span><span class="sxs-lookup"><span data-stu-id="3c823-122">The initial position of the window.</span></span>  
  
-   <span data-ttu-id="3c823-123">サイズが指定されているかの決定されるサイズから決定する必要があるかどうかが含まれています ウィンドウの初期サイズ、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]コンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3c823-123">The initial size of the window, which includes whether the size is specified or should be determined from the determined size of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span>  
  
-   <span data-ttu-id="3c823-124">親ウィンドウを指定します。</span><span class="sxs-lookup"><span data-stu-id="3c823-124">The parent window.</span></span>  
  
-   <span data-ttu-id="3c823-125"><xref:System.Windows.Interop.HwndSourceHook>ウィンドウ プロシージャのチェーンに含める。</span><span class="sxs-lookup"><span data-stu-id="3c823-125">The <xref:System.Windows.Interop.HwndSourceHook> to include in the window procedure chain.</span></span> <span data-ttu-id="3c823-126">構築時にフックを指定する場合は、ウィンドウのすべてのメッセージを受信します。</span><span class="sxs-lookup"><span data-stu-id="3c823-126">If you specify a hook at construction time, it receives all messages for the window.</span></span> <span data-ttu-id="3c823-127">使用することができます<xref:System.Windows.Interop.HwndSource.AddHook%2A>ウィンドウが作成された後にフックを追加します。</span><span class="sxs-lookup"><span data-stu-id="3c823-127">You can use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to add a hook after the window is created.</span></span>  
  
-   <span data-ttu-id="3c823-128">透過性の設定。</span><span class="sxs-lookup"><span data-stu-id="3c823-128">The transparency settings.</span></span> <span data-ttu-id="3c823-129">Blend のピクセルごとに透明度に従ってデスクトップ上の他のウィンドウとするトップレベル ウィンドウを構成できます、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]コンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3c823-129">A top-level window can be configured to blend with the other windows on the desktop according to the per-pixel transparency of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span> <span data-ttu-id="3c823-130">これを有効にするには設定、<xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A>プロパティに、<xref:System.Windows.Interop.HwndSourceParameters>に`true`です。</span><span class="sxs-lookup"><span data-stu-id="3c823-130">To enable this, set the <xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> property in the <xref:System.Windows.Interop.HwndSourceParameters> to `true`.</span></span> <span data-ttu-id="3c823-131">構築時に、を通してのみ、このプロパティを指定することができますのみ、<xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29>コンス トラクターのシグネチャとそのいくつかの制限が生じます。</span><span class="sxs-lookup"><span data-stu-id="3c823-131">This property can only be specified at construction time, and only through the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor signature, and it imposes several limitations.</span></span>  
  
 <span data-ttu-id="3c823-132">設定した後、<xref:System.Windows.Interop.HwndSourceParameters>構造体に渡すこと、<xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29>のコンス トラクター、<xref:System.Windows.Interop.HwndSource>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-132">After you populate the <xref:System.Windows.Interop.HwndSourceParameters> structure, pass it to the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor for the <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 <span data-ttu-id="3c823-133">**オブジェクトの有効期間**</span><span class="sxs-lookup"><span data-stu-id="3c823-133">**Object Lifetime**</span></span>  
  
 <span data-ttu-id="3c823-134"><xref:System.Windows.Interop.HwndSource> 、通常は、[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]オブジェクト、およびその有効期間は、ガベージ コレクターによって管理されます。</span><span class="sxs-lookup"><span data-stu-id="3c823-134">An <xref:System.Windows.Interop.HwndSource> is a regular [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, and its lifetime is managed by the garbage collector.</span></span> <span data-ttu-id="3c823-135"><xref:System.Windows.Interop.HwndSource> 、アンマネージ リソースを表す<xref:System.Windows.Interop.HwndSource>実装<xref:System.IDisposable>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-135">Because the <xref:System.Windows.Interop.HwndSource> represents an unmanaged resource, <xref:System.Windows.Interop.HwndSource> implements <xref:System.IDisposable>.</span></span> <span data-ttu-id="3c823-136">同期的に呼び出して<xref:System.Windows.Interop.HwndSource.Dispose%2A>を即座に破棄、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]ウィンドウ所有者スレッドから呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="3c823-136">Synchronously calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> immediately destroys the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window if called from the owner thread.</span></span> <span data-ttu-id="3c823-137">別のスレッドから呼び出された場合、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]ウィンドウが非同期的に破棄します。</span><span class="sxs-lookup"><span data-stu-id="3c823-137">If called from another thread, the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window is destroyed asynchronously.</span></span> <span data-ttu-id="3c823-138">呼び出す<xref:System.Windows.Interop.HwndSource.Dispose%2A>明示的に相互運用コードから必要があります、特定の相互運用シナリオです。</span><span class="sxs-lookup"><span data-stu-id="3c823-138">Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios.</span></span>  
  
 <span data-ttu-id="3c823-139">**ウィンドウ プロシージャ**</span><span class="sxs-lookup"><span data-stu-id="3c823-139">**Window Procedures**</span></span>  
  
 <span data-ttu-id="3c823-140"><xref:System.Windows.Interop.HwndSource>クラスは、独自のウィンドウ プロシージャを実装します。</span><span class="sxs-lookup"><span data-stu-id="3c823-140">The <xref:System.Windows.Interop.HwndSource> class implements its own window procedure.</span></span> <span data-ttu-id="3c823-141">このウィンドウ プロシージャが、レイアウト、レンダリングに関連するものなどの重要なウィンドウ メッセージを処理するために使用し、入力します。</span><span class="sxs-lookup"><span data-stu-id="3c823-141">This window procedure is used to process important window messages, such as those related to layout, rendering, and input.</span></span> <span data-ttu-id="3c823-142">ただし、独自のウィンドウ プロシージャをフックすることもできます。</span><span class="sxs-lookup"><span data-stu-id="3c823-142">However, you can also hook the window procedure for your own use.</span></span> <span data-ttu-id="3c823-143">構築時に、独自のフックを設定して指定できます、<xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType>プロパティを使用するかも<xref:System.Windows.Interop.HwndSource.AddHook%2A>と<xref:System.Windows.Interop.HwndSource.RemoveHook%2A>を追加して、ウィンドウを作成した後、フック関数を削除します。</span><span class="sxs-lookup"><span data-stu-id="3c823-143">You can specify your own hook during construction by setting the <xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType> property, or you can also use <xref:System.Windows.Interop.HwndSource.AddHook%2A> and <xref:System.Windows.Interop.HwndSource.RemoveHook%2A> to add and remove hooks after the window is created.</span></span> <span data-ttu-id="3c823-144">後入れ先出しの順序にフックを組み込みの処理の前に実行できるように、フックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3c823-144">The hooks are called by last-in first-out order, which enables your hooks to execute before the built-in processing.</span></span> <span data-ttu-id="3c823-145">実際のフック関数は、弱い参照によって保持されます。</span><span class="sxs-lookup"><span data-stu-id="3c823-145">The actual hooks are held by a weak reference.</span></span> <span data-ttu-id="3c823-146">したがって、フック デリゲートの有効期間を管理することを確認します。</span><span class="sxs-lookup"><span data-stu-id="3c823-146">Therefore, make sure that you manage the lifetime of your hook delegate.</span></span>  
  
 <span data-ttu-id="3c823-147">詳細については<xref:System.Windows.Interop.HwndSource>し、その他の相互運用のクラスを参照してください[WPF および Win32 の相互運用](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)です。</span><span class="sxs-lookup"><span data-stu-id="3c823-147">For more information about <xref:System.Windows.Interop.HwndSource> and other interoperation classes, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md).</span></span>  
  
 <span data-ttu-id="3c823-148">通知方法のコンス トラクター<xref:System.Windows.Interop.HwndSource>のパラメーターのようにパラメーターを受け取る[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]などの関数[について](http://go.microsoft.com/fwlink/?LinkID=98462)です。</span><span class="sxs-lookup"><span data-stu-id="3c823-148">Notice how the constructors for <xref:System.Windows.Interop.HwndSource> take parameters that resemble the parameters for [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] functions such as [CreateWindowEx](http://go.microsoft.com/fwlink/?LinkID=98462).</span></span>  
  
 <span data-ttu-id="3c823-149">スケール変換を適用する必要があります、<xref:System.Windows.Interop.HwndSource.RootVisual%2A>の<xref:System.Windows.Interop.HwndSource>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-149">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource>.</span></span> <span data-ttu-id="3c823-150">「解説」を参照してください<xref:System.Windows.Interop.HwndSource.RootVisual%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-150">See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c823-151"><see cref="T:System.Windows.Interop.HwndSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3c823-151">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c823-152">インターネット ゾーンのセキュリティは、このメソッドを使用できません。</span><span class="sxs-lookup"><span data-stu-id="3c823-152">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (System.Windows.Interop.HwndSourceParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Interop.HwndSourceParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As HwndSourceParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(System::Windows::Interop::HwndSourceParameters parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="3c823-153">ウィンドウを作成するために必要なパラメーターを格納している構造体。</span><span class="sxs-lookup"><span data-stu-id="3c823-153">A structure that contains the parameters that are required to create the window.</span></span></param>
        <summary><span data-ttu-id="3c823-154">初期設定を格納している構造体を使用して、<see cref="T:System.Windows.Interop.HwndSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3c823-154">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class by using a structure that contains the initial settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c823-155">インターネット ゾーンのセキュリティは、このメソッドを使用できません。</span><span class="sxs-lookup"><span data-stu-id="3c823-155">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="3c823-156">既定の構造には、いくつかの適切な既定の初期値が含まれているために、このコンス トラクターのシグネチャが特定の状況で方が便利な可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3c823-156">This constructor signature might be more convenient in certain situations, because the default structure contains some appropriate initial default values.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c823-157">この署名を使用する場合、既定値は使用しないでください<xref:System.Windows.Interop.HwndSourceParameters>構築するコンス トラクター、<xref:System.Windows.Interop.HwndSourceParameters>の構造体、`parameters`値。</span><span class="sxs-lookup"><span data-stu-id="3c823-157">If you use this signature, do not use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor to construct the <xref:System.Windows.Interop.HwndSourceParameters> structure for the `parameters` value.</span></span> <span data-ttu-id="3c823-158">使用する必要があります、<xref:System.Windows.Interop.HwndSourceParameters>コンス トラクター [初期] ウィンドウの名前を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="3c823-158">You must use the <xref:System.Windows.Interop.HwndSourceParameters> constructor that enables you to specify an initial window name.</span></span> <span data-ttu-id="3c823-159">既定値を使用する場合<xref:System.Windows.Interop.HwndSourceParameters>コンス トラクターを作成し、 <xref:System.Windows.Interop.HwndSource> 、いる<xref:System.Windows.Interop.HwndSource>初期ウィンドウ名が表現されている HWND の構築要件のためには表示されません。</span><span class="sxs-lookup"><span data-stu-id="3c823-159">If you use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor and create an <xref:System.Windows.Interop.HwndSource> with it, that <xref:System.Windows.Interop.HwndSource> does not display because an initial window name is a construction requirement for the represented HWND.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-160">このクラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3c823-160">to create instances of this class.</span></span> <span data-ttu-id="3c823-161">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-161">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, string name, IntPtr parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, string name, native int parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, name As String, parent As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, System::String ^ name, IntPtr parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="3c823-162">ウィンドウの [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] クラスのスタイル。</span><span class="sxs-lookup"><span data-stu-id="3c823-162">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="3c823-163">ウィンドウの [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] スタイル。</span><span class="sxs-lookup"><span data-stu-id="3c823-163">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="3c823-164">ウィンドウの拡張 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] スタイル。</span><span class="sxs-lookup"><span data-stu-id="3c823-164">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="3c823-165">ウィンドウの左端の位置。</span><span class="sxs-lookup"><span data-stu-id="3c823-165">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="3c823-166">ウィンドウの上端の位置。</span><span class="sxs-lookup"><span data-stu-id="3c823-166">The position of the window's upper edge.</span></span></param>
        <param name="name"><span data-ttu-id="3c823-167">ウィンドウの名前。</span><span class="sxs-lookup"><span data-stu-id="3c823-167">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="3c823-168">ウィンドウの親ウィンドウのハンドル。</span><span class="sxs-lookup"><span data-stu-id="3c823-168">The handle of the window's parent window.</span></span></param>
        <summary><span data-ttu-id="3c823-169">クラス スタイル、スタイル、拡張スタイル、x-y 位置、名前、および親ウィンドウを指定して、<see cref="T:System.Windows.Interop.HwndSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3c823-169">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, name, and parent window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c823-170">インターネット ゾーンのセキュリティは、このメソッドを使用できません。</span><span class="sxs-lookup"><span data-stu-id="3c823-170">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-171">このクラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3c823-171">to create instances of this class.</span></span> <span data-ttu-id="3c823-172">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-172">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, int32 width, int32 height, string name, native int parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, width As Integer, height As Integer, name As String, parent As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, int width, int height, System::String ^ name, IntPtr parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="3c823-173">ウィンドウの [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] クラスのスタイル。</span><span class="sxs-lookup"><span data-stu-id="3c823-173">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="3c823-174">ウィンドウの [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] スタイル。</span><span class="sxs-lookup"><span data-stu-id="3c823-174">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="3c823-175">ウィンドウの拡張 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] スタイル。</span><span class="sxs-lookup"><span data-stu-id="3c823-175">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="3c823-176">ウィンドウの左端の位置。</span><span class="sxs-lookup"><span data-stu-id="3c823-176">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="3c823-177">ウィンドウの上端の位置。</span><span class="sxs-lookup"><span data-stu-id="3c823-177">The position of the window's upper edge.</span></span></param>
        <param name="width"><span data-ttu-id="3c823-178">ウィンドウの幅。</span><span class="sxs-lookup"><span data-stu-id="3c823-178">The width of the window.</span></span></param>
        <param name="height"><span data-ttu-id="3c823-179">ウィンドウの高さ。</span><span class="sxs-lookup"><span data-stu-id="3c823-179">The height of the window.</span></span></param>
        <param name="name"><span data-ttu-id="3c823-180">ウィンドウの名前。</span><span class="sxs-lookup"><span data-stu-id="3c823-180">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="3c823-181">ウィンドウの親ウィンドウのハンドル。</span><span class="sxs-lookup"><span data-stu-id="3c823-181">The handle of the window's parent window.</span></span></param>
        <summary><span data-ttu-id="3c823-182">クラス スタイル、スタイル、拡張スタイル、x-y 位置、幅、高さ、名前、および親ウィンドウを指定して、<see cref="T:System.Windows.Interop.HwndSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3c823-182">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c823-183">インターネット ゾーンのセキュリティは、このメソッドを使用できません。</span><span class="sxs-lookup"><span data-stu-id="3c823-183">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-184">このクラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3c823-184">to create instances of this class.</span></span> <span data-ttu-id="3c823-185">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-185">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent, bool adjustSizingForNonClientArea);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, int32 width, int32 height, string name, native int parent, bool adjustSizingForNonClientArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, width As Integer, height As Integer, name As String, parent As IntPtr, adjustSizingForNonClientArea As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, int width, int height, System::String ^ name, IntPtr parent, bool adjustSizingForNonClientArea);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
        <Parameter Name="adjustSizingForNonClientArea" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="3c823-186">ウィンドウの [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] クラスのスタイル。</span><span class="sxs-lookup"><span data-stu-id="3c823-186">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="3c823-187">ウィンドウの [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] スタイル。</span><span class="sxs-lookup"><span data-stu-id="3c823-187">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="3c823-188">ウィンドウの拡張 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] スタイル。</span><span class="sxs-lookup"><span data-stu-id="3c823-188">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="3c823-189">ウィンドウの左端の位置。</span><span class="sxs-lookup"><span data-stu-id="3c823-189">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="3c823-190">ウィンドウの上端の位置。</span><span class="sxs-lookup"><span data-stu-id="3c823-190">The position of the window's upper edge.</span></span></param>
        <param name="width"><span data-ttu-id="3c823-191">ウィンドウの幅。</span><span class="sxs-lookup"><span data-stu-id="3c823-191">The width of the window.</span></span></param>
        <param name="height"><span data-ttu-id="3c823-192">ウィンドウの高さ。</span><span class="sxs-lookup"><span data-stu-id="3c823-192">The height of the window.</span></span></param>
        <param name="name"><span data-ttu-id="3c823-193">ウィンドウの名前。</span><span class="sxs-lookup"><span data-stu-id="3c823-193">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="3c823-194">ウィンドウの親ウィンドウのハンドル。</span><span class="sxs-lookup"><span data-stu-id="3c823-194">The handle of the window's parent window.</span></span></param>
        <param name="adjustSizingForNonClientArea">
          <span data-ttu-id="3c823-195">レイアウト マネージャーのサイズ設定に非クライアント領域を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-195"><see langword="true" /> to have the layout manager include the non-client area for sizing; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3c823-196">指定したクラス スタイル、スタイル、拡張スタイル、x-y 位置、幅、高さ、名前、および親ウィンドウを使用し、さらに、ウィンドウでサイズが自動調整されるかどうかを指定して、<see cref="T:System.Windows.Interop.HwndSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3c823-196">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window, and by specifying whether the window is autosized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c823-197">インターネット ゾーンのセキュリティは、このメソッドを使用できません。</span><span class="sxs-lookup"><span data-stu-id="3c823-197">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-198">このクラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3c823-198">to create instances of this class.</span></span> <span data-ttu-id="3c823-199">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-199">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public bool AcquireHwndFocusInMenuMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcquireHwndFocusInMenuMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-200">この <see cref="T:System.Windows.Interop.HwndSource" /> のウィンドウを含む WPF の Win32 フォーカスを取得するかどうかを決定する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c823-200">Gets the value that determines whether to acquire Win32 focus for the WPF containing window for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value>
          <span data-ttu-id="3c823-201">ユーザーがメニューを操作するときにウィンドウを含む WPF の Win32 フォーカスを取得する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-201"><see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-202">この設定は作成するときに、<xref:System.Windows.Interop.HwndSource>を設定して、<xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="3c823-202">This value is set when you create the <xref:System.Windows.Interop.HwndSource> by setting the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> parameter.</span></span>  
  
 <span data-ttu-id="3c823-203">既定値は、によって決まりますが、<xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3c823-203">The default value is determined by the <xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHook">
      <MemberSignature Language="C#" Value="public void AddHook (System.Windows.Interop.HwndSourceHook hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHook(class System.Windows.Interop.HwndSourceHook hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHook (hook As HwndSourceHook)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHook(System::Windows::Interop::HwndSourceHook ^ hook);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="System.Windows.Interop.HwndSourceHook" />
      </Parameters>
      <Docs>
        <param name="hook"><span data-ttu-id="3c823-204">ウィンドウ メッセージを受け取るハンドラー実装 (<see cref="T:System.Windows.Interop.HwndSourceHook" /> デリゲートに基づく実装)。</span><span class="sxs-lookup"><span data-stu-id="3c823-204">The handler implementation (based on the <see cref="T:System.Windows.Interop.HwndSourceHook" /> delegate) that receives the window messages.</span></span></param>
        <summary><span data-ttu-id="3c823-205">すべてのウィンドウ メッセージを受け取るイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="3c823-205">Adds an event handler that receives all window messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c823-206">インターネット ゾーンのセキュリティは、このメソッドを使用できません。</span><span class="sxs-lookup"><span data-stu-id="3c823-206">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="3c823-207">ほとんど[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]に到達したメッセージ、<xref:System.Windows.Interop.HwndSource>概算値がある[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]と同等です。</span><span class="sxs-lookup"><span data-stu-id="3c823-207">Most [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] messages that reach the <xref:System.Windows.Interop.HwndSource> have an approximate [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] equivalent.</span></span> <span data-ttu-id="3c823-208">使用する<xref:System.Windows.Interop.HwndSource.AddHook%2A>メッセージがない場合を処理する[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]と同等です。</span><span class="sxs-lookup"><span data-stu-id="3c823-208">You use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to handle the cases where the message has no [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] equivalent.</span></span>  
  
 <span data-ttu-id="3c823-209"><xref:System.Windows.Interop.HwndSourceHook>デリゲートのパラメーターのプロファイルのようになります、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]メイン ウィンドウ プロシージャ。</span><span class="sxs-lookup"><span data-stu-id="3c823-209">The <xref:System.Windows.Interop.HwndSourceHook> delegate resembles the parameter profile of a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] main window procedure.</span></span> <span data-ttu-id="3c823-210">メッセージのすべてのウィンドウのメイン ウィンドウ プロシージャ、<xref:System.Windows.Interop.HwndSource>親ウィンドウに転送されても、<xref:System.Windows.Interop.HwndSourceHook>デリゲート。</span><span class="sxs-lookup"><span data-stu-id="3c823-210">All window messages that the main window procedure of the <xref:System.Windows.Interop.HwndSource> parent window receives are also forwarded to the <xref:System.Windows.Interop.HwndSourceHook> delegates.</span></span>  
  
 <span data-ttu-id="3c823-211">フック関数は、追加された順序で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="3c823-211">Hooks are called in the order that they were added.</span></span> <span data-ttu-id="3c823-212">いずれかのフックを返します場合、 `handled` = `true`メッセージは、呼び出しの順序で後にフック関数が呼び出されないとメッセージに対応します。</span><span class="sxs-lookup"><span data-stu-id="3c823-212">If any hook returns `handled`=`true` for a message, the hooks after it in the call order are not called for that message.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-213">処理を追加します。</span><span class="sxs-lookup"><span data-stu-id="3c823-213">to add handling.</span></span> <span data-ttu-id="3c823-214">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-214">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.HwndSourceHook" />
        <altmember cref="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
      </Docs>
    </Member>
    <Member MemberName="AutoResized">
      <MemberSignature Language="C#" Value="public event System.Windows.AutoResizedEventHandler AutoResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.AutoResizedEventHandler AutoResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.AutoResized" />
      <MemberSignature Language="VB.NET" Value="Public Event AutoResized As AutoResizedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::AutoResizedEventHandler ^ AutoResized;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.AutoResizedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-215">レイアウトによって <see cref="T:System.Windows.Interop.HwndSource" /> のサイズが自動調整されると発生します。</span><span class="sxs-lookup"><span data-stu-id="3c823-215">Occurs when layout causes the <see cref="T:System.Windows.Interop.HwndSource" /> to automatically resize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-216">ネイティブの動作<xref:System.Windows.Interop.HwndSource>コンテンツおよびから報告された変更に基づいてウィンドウ領域に自動的にサイズを変更するには、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]レイアウト システムです。</span><span class="sxs-lookup"><span data-stu-id="3c823-216">The native behavior of <xref:System.Windows.Interop.HwndSource> is to automatically resize content and the window region based on changes reported through the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] layout system.</span></span> <span data-ttu-id="3c823-217">ウィンドウが現在最小化した場合、またはサイズ変更されない<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>に設定されている<xref:System.Windows.SizeToContent.Manual>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-217">The window does not resize if it is currently minimized or if <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Manual>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildKeyboardInputSinks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Interop.IKeyboardInputSink&gt; ChildKeyboardInputSinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Interop.IKeyboardInputSink&gt; ChildKeyboardInputSinks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.ChildKeyboardInputSinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildKeyboardInputSinks As IEnumerable(Of IKeyboardInputSink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Interop::IKeyboardInputSink ^&gt; ^ ChildKeyboardInputSinks { System::Collections::Generic::IEnumerable&lt;System::Windows::Interop::IKeyboardInputSink ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__29))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Interop.IKeyboardInputSink&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-218">登録された入力シンクのシーケンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c823-218">Gets a sequence of registered input sinks.</span></span></summary>
        <value><span data-ttu-id="3c823-219">キーボード入力シンクの列挙値。</span><span class="sxs-lookup"><span data-stu-id="3c823-219">An enumeration of keyboard input sinks.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.HwndTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.HwndTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As HwndTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::HwndTarget ^ CompositionTarget { System::Windows::Interop::HwndTarget ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-220">ホストされたウィンドウのビジュアル マネージャーを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c823-220">Gets the visual manager for the hosted window.</span></span></summary>
        <value><span data-ttu-id="3c823-221">ビジュアル マネージャー。</span><span class="sxs-lookup"><span data-stu-id="3c823-221">The visual manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-222">オーバーライド<xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A>値をオーバーライドするためを<xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>を返します。</span><span class="sxs-lookup"><span data-stu-id="3c823-222">Override <xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A> in order to override the value that <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A> returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandleRef">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.HandleRef CreateHandleRef ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.InteropServices.HandleRef CreateHandleRef() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.CreateHandleRef" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHandleRef () As HandleRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::InteropServices::HandleRef CreateHandleRef();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.HandleRef</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c823-223"><see cref="T:System.Windows.Interop.HwndSource" /> のウィンドウ ハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c823-223">Gets the window handle for the <see cref="T:System.Windows.Interop.HwndSource" />.</span></span> <span data-ttu-id="3c823-224">ウィンドウ ハンドルは <see cref="T:System.Runtime.InteropServices.HandleRef" /> 構造体の一部としてパッケージ化されます。</span><span class="sxs-lookup"><span data-stu-id="3c823-224">The window handle is packaged as part of a <see cref="T:System.Runtime.InteropServices.HandleRef" /> structure.</span></span></summary>
        <returns><span data-ttu-id="3c823-225">この <see cref="T:System.Windows.Interop.HwndSource" /> のウィンドウ ハンドルを格納する構造体。</span><span class="sxs-lookup"><span data-stu-id="3c823-225">A structure that contains the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-226">取得されるハンドルを使用することができます<xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A>参照に、<xref:System.Windows.Interop.HwndSource>から[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]コード。</span><span class="sxs-lookup"><span data-stu-id="3c823-226">You can use the handle that is obtained from <xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A> to reference the <xref:System.Windows.Interop.HwndSource> from [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] code.</span></span> <span data-ttu-id="3c823-227">メッセージの処理やウィンドウの動作などの操作には、ハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="3c823-227">Use the handle for operations such as message handling and window behavior.</span></span>  
  
 <span data-ttu-id="3c823-228">同様のハンドルを取得する<xref:System.Windows.Interop.HwndSource.Handle%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-228">To get just the handle, use <xref:System.Windows.Interop.HwndSource.Handle%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSource.Handle" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public static bool DefaultAcquireHwndFocusInMenuMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DefaultAcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultAcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool DefaultAcquireHwndFocusInMenuMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-229"><see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /> の新しいインスタンスの既定の <see cref="T:System.Windows.Interop.HwndSource" /> の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3c823-229">Gets or sets the default <see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /> value for new instances of <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value>
          <span data-ttu-id="3c823-230">ユーザーがメニューを操作するときにウィンドウを含む WPF の Win32 フォーカスを取得する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-230"><see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3c823-231">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="3c823-231">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-232">新しいインスタンス<xref:System.Windows.Interop.HwndSource>が<xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A>へのパラメーターとして別の値が渡されていない限り、この既定値に設定、<xref:System.Windows.Interop.HwndSource>コンス トラクターを使用して、特定のインスタンスに対して、<xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3c823-232">New instances of <xref:System.Windows.Interop.HwndSource> have <xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A> set to this default value, unless a different value is passed as a parameter to the <xref:System.Windows.Interop.HwndSource> constructor for a specific instance, by using the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="3c823-233">このプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c823-233">to get this property.</span></span> <span data-ttu-id="3c823-234">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="3c823-234">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c823-235"><see cref="T:System.Windows.Interop.HwndSource" /> によって使用されているすべてのマネージ リソースを解放し、<see cref="E:System.Windows.Interop.HwndSource.Disposed" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="3c823-235">Releases all managed resources that are used by the <see cref="T:System.Windows.Interop.HwndSource" />, and raises the <see cref="E:System.Windows.Interop.HwndSource.Disposed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c823-236">インターネット ゾーンのセキュリティは、このメソッドを使用できません。</span><span class="sxs-lookup"><span data-stu-id="3c823-236">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="3c823-237"><xref:System.Windows.Interop.HwndSource.Dispose%2A> HWND のクリーンアップ作業を開始に関連します。</span><span class="sxs-lookup"><span data-stu-id="3c823-237"><xref:System.Windows.Interop.HwndSource.Dispose%2A> initiates related cleanup work for the HWND.</span></span> <span data-ttu-id="3c823-238">場合<xref:System.Windows.Interop.HwndSource.Dispose%2A>と呼ばれますが、メイン UI スレッドにポストするまでメイン UI スレッドとは異なるスレッドからクリーンアップ作業を延期する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3c823-238">If <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</span></span>  
  
 <span data-ttu-id="3c823-239">呼び出す<xref:System.Windows.Interop.HwndSource.Dispose%2A>明示的に相互運用コードから可能性があります、特定の相互運用シナリオでは、必要なため、<xref:System.Windows.Interop.HwndSource>いくつかの相互運用シナリオで適切なガベージ コレクションを妨げる可能性のある相互運用の境界を越えてへの参照をいくつかを生成できます。</span><span class="sxs-lookup"><span data-stu-id="3c823-239">Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios, because an <xref:System.Windows.Interop.HwndSource> in some interoperation scenarios can generate several references to it across the interoperation boundaries that might prevent timely garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSource.IsDisposed" />
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-240">このオブジェクトで <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> メソッドが呼び出されると発生します。</span><span class="sxs-lookup"><span data-stu-id="3c823-240">Occurs when the <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> method is called on this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-241"><xref:System.Windows.Interop.HwndSource.Disposed>によってされたリソースを解放する前に、イベントが発生した、<xref:System.Windows.Interop.HwndSource>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-241">The <xref:System.Windows.Interop.HwndSource.Disposed> event is raised before any resources are released by the <xref:System.Windows.Interop.HwndSource>.</span></span> <span data-ttu-id="3c823-242"><xref:System.Windows.Interop.HwndSource.Disposed>イベントは、イベントを発生させるオブジェクトの期限をすべての参照を削除することを示します。</span><span class="sxs-lookup"><span data-stu-id="3c823-242">The <xref:System.Windows.Interop.HwndSource.Disposed> event indicates that the object that raises the event is about to have all references to it removed.</span></span>  
  
 <span data-ttu-id="3c823-243">使用して<xref:System.Windows.Interop.HwndSource.Disposed>と<xref:System.Windows.Interop.HwndSource.IsDisposed%2A>プロパティを呼び出すことを回避する<xref:System.Windows.Interop.HwndSource.Dispose%2A>2 回 (例外が発生する)。</span><span class="sxs-lookup"><span data-stu-id="3c823-243">Use <xref:System.Windows.Interop.HwndSource.Disposed> and the <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> property to avoid calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> twice (which raises an exception).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.HwndDpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.HwndDpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DpiChanged As HwndDpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::HwndDpiChangedEventHandler ^ DpiChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.HwndDpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-244">この Hwnd のモニターの DPI が変更された場合、または Hwnd がさまざまな DPI のモニターに移動された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="3c823-244">Occurs when the DPI of the monitor of this Hwnd has changed, or the Hwnd is moved to a monitor with a different DPI.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHwnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Interop.HwndSource FromHwnd (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Interop.HwndSource FromHwnd(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHwnd (hwnd As IntPtr) As HwndSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Interop::HwndSource ^ FromHwnd(IntPtr hwnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd"><span data-ttu-id="3c823-245">指定したウィンドウ ハンドル。</span><span class="sxs-lookup"><span data-stu-id="3c823-245">The provided window handle.</span></span></param>
        <summary><span data-ttu-id="3c823-246">指定したウィンドウの <see cref="T:System.Windows.Interop.HwndSource" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3c823-246">Returns the <see cref="T:System.Windows.Interop.HwndSource" /> object of the specified window.</span></span></summary>
        <returns><span data-ttu-id="3c823-247"><paramref name="hwnd" /> ウィンドウ ハンドルで指定したウィンドウの <see cref="T:System.Windows.Interop.HwndSource" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3c823-247">The <see cref="T:System.Windows.Interop.HwndSource" /> object for the window that is specified by the <paramref name="hwnd" /> window handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c823-248">このメソッドは使用できません、インターネットのセキュリティ ゾーンまたは部分信頼の一般にします。</span><span class="sxs-lookup"><span data-stu-id="3c823-248">This method is not available in the Internet security zone, or for partial trust in general.</span></span>  
  
 <span data-ttu-id="3c823-249">このメソッドを使用するを返す、<xref:System.Windows.Interop.HwndSource>明示的に相互運用のウィンドウではないウィンドウのです。</span><span class="sxs-lookup"><span data-stu-id="3c823-249">You can use this method to return an <xref:System.Windows.Interop.HwndSource> for a window that is not explicitly an interoperation window.</span></span> <span data-ttu-id="3c823-250">この手順です。</span><span class="sxs-lookup"><span data-stu-id="3c823-250">The procedure for this is:</span></span>  
  
1.  <span data-ttu-id="3c823-251">作成、<xref:System.Windows.Interop.WindowInteropHelper>インスタンス (メインを提供する<xref:System.Windows.Window>コンス トラクターのパラメーターとして)。</span><span class="sxs-lookup"><span data-stu-id="3c823-251">Create a <xref:System.Windows.Interop.WindowInteropHelper> instance (providing the main <xref:System.Windows.Window> as a constructor parameter).</span></span>  
  
2.  <span data-ttu-id="3c823-252">値を取得、<xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>プロパティをから<xref:System.Windows.Interop.WindowInteropHelper>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="3c823-252">Get the value of the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property from that <xref:System.Windows.Interop.WindowInteropHelper> instance.</span></span>  
  
3.  <span data-ttu-id="3c823-253">その HWND 値へのパラメーターとして渡す<xref:System.Windows.Interop.HwndSource.FromHwnd%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-253">Pass that HWND value as a parameter to <xref:System.Windows.Interop.HwndSource.FromHwnd%2A>.</span></span>  
  
 <span data-ttu-id="3c823-254">この方法は、[全般] を追加する場合に便利です、<xref:System.Windows.Interop.HwndSource.AddHook%2A>メッセージ ウィンドウに処理します。</span><span class="sxs-lookup"><span data-stu-id="3c823-254">This technique can be useful if you then want to add general <xref:System.Windows.Interop.HwndSource.AddHook%2A> message processing to the window.</span></span> <span data-ttu-id="3c823-255">ただし、ときに作成する、 <xref:System.Windows.Interop.HwndSource>、破棄を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="3c823-255">However, whenever you create an <xref:System.Windows.Interop.HwndSource>, you are also responsible for destroying it.</span></span> <span data-ttu-id="3c823-256">これは、true の場合でも、<xref:System.Windows.Application>アプリケーションのオブジェクト<xref:System.Windows.Interop.HwndSource>が破棄されます。</span><span class="sxs-lookup"><span data-stu-id="3c823-256">This is true even if the <xref:System.Windows.Application> object for an application <xref:System.Windows.Interop.HwndSource> is disposed.</span></span> <span data-ttu-id="3c823-257">詳細についてで「解説」を参照してください。<xref:System.Windows.Interop.HwndSource>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-257">For more information, see Remarks on <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-258">このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3c823-258">to call this method.</span></span> <span data-ttu-id="3c823-259">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-259">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.WindowInteropHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c823-260">ウィンドウのビジュアル ターゲットを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c823-260">Gets the visual target of the window.</span></span></summary>
        <returns><span data-ttu-id="3c823-261">ウィンドウのビジュアル ターゲットを返します。</span><span class="sxs-lookup"><span data-stu-id="3c823-261">Returns the visual target of the window.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-262">既定の実装と同じ結果が返されます<xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-262">The default implementation returns the same result as <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3c823-263">型固有のビジュアルのターゲットを返すには、このメソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="3c823-263">Implement this method to return a type-specific visual target.</span></span> <span data-ttu-id="3c823-264"><see cref="T:System.Windows.Interop.HwndSource" /> 返すには、このメソッドを実装<see cref="T:System.Windows.Interop.HwndTarget" />です。</span><span class="sxs-lookup"><span data-stu-id="3c823-264"><see cref="T:System.Windows.Interop.HwndSource" /> implements this method to return <see cref="T:System.Windows.Interop.HwndTarget" />.</span></span></para>
        </block>
        <altmember cref="T:System.Windows.Media.CompositionTarget" />
        <altmember cref="P:System.Windows.Interop.HwndSource.CompositionTarget" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Interop.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-265">この <see cref="T:System.Windows.Interop.HwndSource" /> のウィンドウ ハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c823-265">Gets the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="3c823-266">ウィンドウ ハンドル。</span><span class="sxs-lookup"><span data-stu-id="3c823-266">The window handle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c823-267">このプロパティはインターネット ゾーンのセキュリティは使用できません。</span><span class="sxs-lookup"><span data-stu-id="3c823-267">This property is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-268">このポインターにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="3c823-268">to access this pointer.</span></span> <span data-ttu-id="3c823-269">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-269">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="HasFocusWithinCore">
      <MemberSignature Language="C#" Value="protected virtual bool HasFocusWithinCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HasFocusWithinCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.HasFocusWithinCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasFocusWithinCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HasFocusWithinCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c823-270">シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがあるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c823-270">Gets a value that indicates whether the sink or one of its contained components has focus.</span></span></summary>
        <returns>
          <span data-ttu-id="3c823-271">シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-271"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public override bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-272">この <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> で <see cref="T:System.Windows.Interop.HwndSource" /> が呼び出されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c823-272">Gets a value that indicates whether <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> has been called on this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value>
          <span data-ttu-id="3c823-273">このオブジェクトで <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> が呼び出された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-273"><see langword="true" /> if the object has had <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> called on it; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-274"><xref:System.Windows.Interop.HwndSource.Dispose%2A> HWND のクリーンアップ作業を開始に関連します。</span><span class="sxs-lookup"><span data-stu-id="3c823-274"><xref:System.Windows.Interop.HwndSource.Dispose%2A> initiates related cleanup work for the HWND.</span></span> <span data-ttu-id="3c823-275">場合<xref:System.Windows.Interop.HwndSource.Dispose%2A>と呼ばれますが、メイン UI スレッドにポストするまでメイン UI スレッドとは異なるスレッドからクリーンアップ作業を延期する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3c823-275">If <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</span></span> <span data-ttu-id="3c823-276"><xref:System.Windows.Interop.HwndSource.Disposed>イベントが発生し、値<xref:System.Windows.Interop.HwndSource.IsDisposed%2A>なります`false`とすぐに<xref:System.Windows.Interop.HwndSource.Dispose%2A>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="3c823-276">The <xref:System.Windows.Interop.HwndSource.Disposed> event is raised and the value of <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> becomes `false` as soon as <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called.</span></span> <span data-ttu-id="3c823-277">呼び出す場合は、この期間中に<xref:System.Windows.Interop.HwndSource.Dispose%2A>もう一度、<xref:System.Windows.Interop.HwndSource.Dispose%2A>例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="3c823-277">During this time, if you call <xref:System.Windows.Interop.HwndSource.Dispose%2A> again, <xref:System.Windows.Interop.HwndSource.Dispose%2A> raises an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSiteCore">
      <MemberSignature Language="C#" Value="protected System.Windows.Interop.IKeyboardInputSite KeyboardInputSiteCore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSiteCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore" />
      <MemberSignature Language="VB.NET" Value="Protected Property KeyboardInputSiteCore As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSiteCore { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-278">コンポーネントのコンテナーの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> インターフェイスへの参照を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3c823-278">Gets or sets a reference to the component's container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></summary>
        <value><span data-ttu-id="3c823-279">コンテナーの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> インターフェイスへの参照。サイトが割り当てられていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-279">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface; or <see langword="null" /> if no site is assigned.</span></span> <span data-ttu-id="3c823-280">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3c823-280">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-281">このプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="3c823-281">to set this property.</span></span> <span data-ttu-id="3c823-282">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-282">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.HwndDpiChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(class System.Windows.HwndDpiChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (e As HwndDpiChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::HwndDpiChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.HwndDpiChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3c823-283">イベント引数</span><span class="sxs-lookup"><span data-stu-id="3c823-283">The event arguments</span></span></param>
        <summary><span data-ttu-id="3c823-284">ウィンドウの DPI が変更されるときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="3c823-284">Called when the DPI is going to change for the window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-285">WPF のユーザーは、このイベントを処理する場合に、ビジュアルが拡張しません。</span><span class="sxs-lookup"><span data-stu-id="3c823-285">If the user handles this event,         WPF does not scale any visuals.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c823-286">このメソッドは、重要なデータをアクセスする<xref:System.Windows.Interop.HwndTarget>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-286">This method accesses critical data <xref:System.Windows.Interop.HwndTarget>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMnemonicCore">
      <MemberSignature Language="C#" Value="protected virtual bool OnMnemonicCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMnemonicCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMnemonicCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnMnemonicCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="3c823-287">ニーモニック用のメッセージおよび関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="3c823-287">The message for the mnemonic and associated data.</span></span></param>
        <param name="modifiers"><span data-ttu-id="3c823-288">変換キー。</span><span class="sxs-lookup"><span data-stu-id="3c823-288">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="3c823-289">このシンクのニーモニック (アクセス キー) のいずれかが起動されたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="3c823-289">Called when one of the mnemonics (access keys) for this sink is invoked.</span></span></summary>
        <returns>
          <span data-ttu-id="3c823-290">メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-290"><see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3c823-291"><paramref name="msg" /> は、WM_KEYDOWN、WM_SYSKEYDOWN、WM_CHAR、または WM_DEADCHAR ではありません。</span><span class="sxs-lookup"><span data-stu-id="3c823-291"><paramref name="msg" /> is not WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, or WM_DEADCHAR.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-292">このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3c823-292">to call this method.</span></span> <span data-ttu-id="3c823-293">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-293">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSinkCore">
      <MemberSignature Language="C#" Value="protected System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RegisterKeyboardInputSinkCore (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSinkCore(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="3c823-294">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> シンク。</span><span class="sxs-lookup"><span data-stu-id="3c823-294">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="3c823-295">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> インターフェイスを登録します。</span><span class="sxs-lookup"><span data-stu-id="3c823-295">Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</span></span></summary>
        <returns><span data-ttu-id="3c823-296">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> サイト。</span><span class="sxs-lookup"><span data-stu-id="3c823-296">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-297">このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3c823-297">to call this method.</span></span> <span data-ttu-id="3c823-298">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-298">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHook">
      <MemberSignature Language="C#" Value="public void RemoveHook (System.Windows.Interop.HwndSourceHook hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHook(class System.Windows.Interop.HwndSourceHook hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveHook (hook As HwndSourceHook)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHook(System::Windows::Interop::HwndSourceHook ^ hook);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="System.Windows.Interop.HwndSourceHook" />
      </Parameters>
      <Docs>
        <param name="hook"><span data-ttu-id="3c823-299">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="3c823-299">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c823-300"><see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" /> によって追加されたイベント ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="3c823-300">Removes the event handlers that were added by <see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c823-301">インターネット ゾーンのセキュリティは、このメソッドを使用できません。</span><span class="sxs-lookup"><span data-stu-id="3c823-301">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-302">ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="3c823-302">to remove handlers.</span></span> <span data-ttu-id="3c823-303">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-303">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
        <altmember cref="T:System.Windows.Interop.HwndSourceHook" />
      </Docs>
    </Member>
    <Member MemberName="RestoreFocusMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.RestoreFocusMode RestoreFocusMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.RestoreFocusMode RestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.RestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::RestoreFocusMode RestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-304">ウィンドウの <see cref="T:System.Windows.Input.RestoreFocusMode" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c823-304">Gets the <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</span></span></summary>
        <value><span data-ttu-id="3c823-305">ウィンドウの <see cref="T:System.Windows.Input.RestoreFocusMode" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-305">The <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-306">のみこのプロパティを設定することができます、<xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType>コンス トラクターを使用して、<xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="3c823-306">This property can be set only in the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType> constructor by using the <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public override System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-307">ウィンドウの <see cref="P:System.Windows.Media.CompositionTarget.RootVisual" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3c823-307">Gets or sets the <see cref="P:System.Windows.Media.CompositionTarget.RootVisual" /> of the window.</span></span></summary>
        <value><span data-ttu-id="3c823-308">ウィンドウのルート ビジュアル オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3c823-308">The root visual object of the window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-309">このプロパティを使用して接続する、<xref:System.Windows.Controls.Page>またはビジュアルを別のルート、<xref:System.Windows.Interop.HwndSource>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-309">Use this property to connect a <xref:System.Windows.Controls.Page> or another root visual to the <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 <span data-ttu-id="3c823-310">スケール変換を適用する必要があります、<xref:System.Windows.Interop.HwndSource.RootVisual%2A>の<xref:System.Windows.Interop.HwndSource>これを無効にすることができますので<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>動作します。</span><span class="sxs-lookup"><span data-stu-id="3c823-310">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource> because this can disable <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> behavior.</span></span> <span data-ttu-id="3c823-311">コンテンツは拡大縮小が外側のウィンドウは表示されません。</span><span class="sxs-lookup"><span data-stu-id="3c823-311">The content will scale, but the enclosing window will not.</span></span> <span data-ttu-id="3c823-312">あるオブジェクトへの変換を適用する代わりに、<xref:System.Windows.Interop.HwndSource.RootVisual%2A>の子要素であるオブジェクトに変換を適用、<xref:System.Windows.Interop.HwndSource.RootVisual%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-312">Instead of applying the transformation to the object that is the <xref:System.Windows.Interop.HwndSource.RootVisual%2A>, apply the transformation to an object that is a child element of the <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span> <span data-ttu-id="3c823-313">それを囲む要素を追加する必要があります、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]スケーリング可能なオブジェクトを提供するために、パネルなどのコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3c823-313">You might need to add an extra enclosing element to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content, such as a panel, in order to provide a scaleable object.</span></span>  
  
 <span data-ttu-id="3c823-314">追加することができます、 <xref:System.Windows.Window> (WS_OVERLAPPED) のトップレベル ウィンドウとしてのみが、子ウィンドウとしてではなく、ルート visual として。</span><span class="sxs-lookup"><span data-stu-id="3c823-314">You can add a <xref:System.Windows.Window> as the root visual, but only as a top-level window (with WS_OVERLAPPED), not as a child window.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-315">このプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="3c823-315">to set this property.</span></span> <span data-ttu-id="3c823-316">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-316">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Interop.HwndTarget.RootVisual" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public System.Windows.SizeToContent SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.SizeToContent SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As SizeToContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SizeToContent SizeToContent { System::Windows::SizeToContent get(); void set(System::Windows::SizeToContent value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeToContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-317">ウィンドウのサイズをコンテンツに合わせて調整するかどうか、およびどのように調整するかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3c823-317">Get or sets whether and how the window is sized to its content.</span></span></summary>
        <value><span data-ttu-id="3c823-318">列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3c823-318">One of the enumeration values.</span></span> <span data-ttu-id="3c823-319">既定値は <see cref="F:System.Windows.SizeToContent.Manual" /> です。これは、ウィンドウのサイズをコンテンツに合わせて調整しないように指定します。</span><span class="sxs-lookup"><span data-stu-id="3c823-319">The default value is <see cref="F:System.Windows.SizeToContent.Manual" />, which specifies that the window is not sized to its content.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-320">エンドユーザーが間接的に設定アプリケーション UI を使用してこのプロパティ場合機能は、アプリケーションによって公開されています。</span><span class="sxs-lookup"><span data-stu-id="3c823-320">End users might indirectly set this property through application UI, if that functionality is exposed by the application.</span></span>  
  
 <span data-ttu-id="3c823-321">スケール変換を適用する必要があります、<xref:System.Windows.Interop.HwndSource.RootVisual%2A>の<xref:System.Windows.Interop.HwndSource>これを無効にすることができますので、<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>動作します。</span><span class="sxs-lookup"><span data-stu-id="3c823-321">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource>, because this can disable <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> behavior.</span></span> <span data-ttu-id="3c823-322">「解説」を参照してください<xref:System.Windows.Interop.HwndSource.RootVisual%2A>です。</span><span class="sxs-lookup"><span data-stu-id="3c823-322">See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.SizeToContent" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeToContentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeToContentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.SizeToContentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SizeToContentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SizeToContentChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-323"><see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /> プロパティの値が変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="3c823-323">Occurs when the value of the <see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-324"><xref:System.Windows.Interop.HwndSource.SizeToContentChanged>ユーザー操作によって、変更したときにのみ、イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="3c823-324">The <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> event is only raised when user interaction causes the change.</span></span> <span data-ttu-id="3c823-325">設定した場合<xref:System.Windows.Window.SizeToContent%2A>コードでは、<xref:System.Windows.Interop.HwndSource.SizeToContentChanged>イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="3c823-325">If you set <xref:System.Windows.Window.SizeToContent%2A> in code, the <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Interop.HwndSource.AutoResized" />
        <altmember cref="P:System.Windows.Interop.HwndSource.SizeToContent" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Function HasFocusWithin () As Boolean Implements IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() = System::Windows::Interop::IKeyboardInputSink::HasFocusWithin;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c823-326">このメンバーの詳細については、「<see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3c823-326">For a description of this member, see <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3c823-327">シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-327"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-328">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3c823-328">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c823-329">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3c823-329">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value=" Property KeyboardInputSite As IKeyboardInputSite Implements IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-330">このメンバーの詳細については、「<see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3c823-330">For a description of this member, see <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />.</span></span></summary>
        <value><span data-ttu-id="3c823-331">コンテナーの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> インターフェイスへの参照。</span><span class="sxs-lookup"><span data-stu-id="3c823-331">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-332">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3c823-332">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c823-333">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3c823-333">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c823-334">このプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="3c823-334">to set this property.</span></span> <span data-ttu-id="3c823-335">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c823-335">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.OnMnemonic">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.OnMnemonic" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::OnMnemonic;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="3c823-336">ニーモニック用のメッセージおよび関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="3c823-336">The message for the mnemonic and associated data.</span></span> <span data-ttu-id="3c823-337">このメッセージ構造を変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="3c823-337">Do not modify this message structure.</span></span> <span data-ttu-id="3c823-338">パフォーマンス上の理由から、これは参照渡しのみです。</span><span class="sxs-lookup"><span data-stu-id="3c823-338">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="3c823-339">変換キー。</span><span class="sxs-lookup"><span data-stu-id="3c823-339">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="3c823-340">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3c823-340">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3c823-341">メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-341"><see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-342">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3c823-342">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c823-343">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3c823-343">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite IKeyboardInputSink.RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite Implements IKeyboardInputSink.RegisterKeyboardInputSink" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink) = System::Windows::Interop::IKeyboardInputSink::RegisterKeyboardInputSink;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="3c823-344">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> シンク。</span><span class="sxs-lookup"><span data-stu-id="3c823-344">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="3c823-345">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3c823-345">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />.</span></span></summary>
        <returns><span data-ttu-id="3c823-346">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> サイト。</span><span class="sxs-lookup"><span data-stu-id="3c823-346">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-347">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3c823-347">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c823-348">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3c823-348">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-349">このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3c823-349">to call this method.</span></span> <span data-ttu-id="3c823-350">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-350">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TabInto">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Function TabInto (request As TraversalRequest) As Boolean Implements IKeyboardInputSink.TabInto" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TabInto(System::Windows::Input::TraversalRequest ^ request) = System::Windows::Interop::IKeyboardInputSink::TabInto;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="3c823-351">フォーカスを最初と最後のどちらのタブ位置に設定するかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3c823-351">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="3c823-352">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3c823-352">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3c823-353">フォーカスが要求どおりに設定された場合は <see langword="true" />。タブ位置が存在しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-353"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-354">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3c823-354">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c823-355">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3c823-355">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-356">このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3c823-356">to call this method.</span></span> <span data-ttu-id="3c823-357">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-357">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateAccelerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateAccelerator;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="3c823-358">メッセージおよび関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="3c823-358">The message and associated data.</span></span> <span data-ttu-id="3c823-359">この構造体を変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="3c823-359">Do not modify this structure.</span></span> <span data-ttu-id="3c823-360">パフォーマンス上の理由から、これは参照渡しのみです。</span><span class="sxs-lookup"><span data-stu-id="3c823-360">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="3c823-361">変換キー。</span><span class="sxs-lookup"><span data-stu-id="3c823-361">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="3c823-362">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3c823-362">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3c823-363">メッセージがメソッドの実装によって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-363"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-364">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3c823-364">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c823-365">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3c823-365">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c823-366">このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3c823-366">to call this method.</span></span> <span data-ttu-id="3c823-367">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c823-367">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateChar">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateChar;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="3c823-368">メッセージおよび関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="3c823-368">The message and associated data.</span></span> <span data-ttu-id="3c823-369">この構造体を変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="3c823-369">Do not modify this structure.</span></span> <span data-ttu-id="3c823-370">パフォーマンス上の理由から、これは参照渡しのみです。</span><span class="sxs-lookup"><span data-stu-id="3c823-370">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="3c823-371">変換キー。</span><span class="sxs-lookup"><span data-stu-id="3c823-371">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="3c823-372">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3c823-372">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3c823-373">メッセージが処理されたため <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> を呼び出さない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-373"><see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-374">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3c823-374">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c823-375">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3c823-375">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIntoCore">
      <MemberSignature Language="C#" Value="protected virtual bool TabIntoCore (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TabIntoCore(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TabIntoCore (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TabIntoCore(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="3c823-376">フォーカスを最初と最後のどちらのタブ位置に設定するかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3c823-376">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="3c823-377">フォーカスをシンクの最初のタブ位置または最後のタブ位置のいずれかに設定します。</span><span class="sxs-lookup"><span data-stu-id="3c823-377">Sets focus on either the first tab stop or the last tab stop of the sink.</span></span></summary>
        <returns>
          <span data-ttu-id="3c823-378">フォーカスが要求どおりに設定された場合は <see langword="true" />。タブ位置が存在しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-378"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c823-379"><paramref name="request" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="3c823-379"><paramref name="request" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateAcceleratorCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateAcceleratorCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateAcceleratorCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateAcceleratorCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="3c823-380">メッセージおよび関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="3c823-380">The message and associated data.</span></span> <span data-ttu-id="3c823-381">この構造体を変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="3c823-381">Do not modify this structure.</span></span> <span data-ttu-id="3c823-382">パフォーマンス上の理由から、これは参照渡しのみです。</span><span class="sxs-lookup"><span data-stu-id="3c823-382">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="3c823-383">変換キー。</span><span class="sxs-lookup"><span data-stu-id="3c823-383">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="3c823-384">キー押下メッセージのレベルでキーボード入力を処理します。</span><span class="sxs-lookup"><span data-stu-id="3c823-384">Processes keyboard input at the key-down message level.</span></span></summary>
        <returns>
          <span data-ttu-id="3c823-385">メッセージがメソッドの実装によって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-385"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-386">このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3c823-386">to call this method.</span></span> <span data-ttu-id="3c823-387">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-387">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateCharCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateCharCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateCharCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateCharCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateCharCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="3c823-388">メッセージおよび関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="3c823-388">The message and associated data.</span></span> <span data-ttu-id="3c823-389">この構造体を変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="3c823-389">Do not modify this structure.</span></span> <span data-ttu-id="3c823-390">パフォーマンス上の理由から、これは参照渡しのみです。</span><span class="sxs-lookup"><span data-stu-id="3c823-390">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="3c823-391">変換キー。</span><span class="sxs-lookup"><span data-stu-id="3c823-391">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="3c823-392"><see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> メソッドの呼び出し前に、WM_CHAR、WM_SYSCHAR、WM_DEADCHAR、および WM_SYSDEADCHAR 入力メッセージを処理します。</span><span class="sxs-lookup"><span data-stu-id="3c823-392">Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> method is called.</span></span></summary>
        <returns>
          <span data-ttu-id="3c823-393">メッセージが処理されたため <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> を呼び出さない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-393"><see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c823-394">このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3c823-394">to call this method.</span></span> <span data-ttu-id="3c823-395">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c823-395">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelOpacity">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelOpacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsesPerPixelOpacity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelOpacity { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c823-396">ソース ウィンドウ コンテンツのピクセルごとの不透明度を使用するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c823-396">Gets a value that declares whether the per-pixel opacity of the source window content is respected.</span></span></summary>
        <value>
          <span data-ttu-id="3c823-397">システムでピクセルごとの不透明度を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c823-397"><see langword="true" /> if the system uses per-pixel opacity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c823-398">ピクセルごとの不透明度を有効にすると、システムは不要になった非クライアント領域を描画します。</span><span class="sxs-lookup"><span data-stu-id="3c823-398">When you enable per-pixel opacity, the system no longer draws the non-client area.</span></span> <span data-ttu-id="3c823-399">これは、ための本来の目的<xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A>は相互運用シナリオで動作する四角形以外の最上位レベルの UI を表示します。</span><span class="sxs-lookup"><span data-stu-id="3c823-399">This is because the intended purpose of <xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A> is to show non-rectangular top-level UI that works in interoperation scenarios.</span></span> <span data-ttu-id="3c823-400">そのため、そのような目的の四角形の非クライアント領域損なわを表示します。</span><span class="sxs-lookup"><span data-stu-id="3c823-400">Therefore, showing the rectangular non-client area defeats that purpose.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>