<Type Name="HwndSourceParameters" FullName="System.Windows.Interop.HwndSourceParameters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4c0313304fce5b84028d0eee28310c4d875b771a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct HwndSourceParameters" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HwndSourceParameters extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.HwndSourceParameters" />
  <TypeSignature Language="VB.NET" Value="Public Structure HwndSourceParameters" />
  <TypeSignature Language="C++ CLI" Value="public value class HwndSourceParameters" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1150a-101">
        <see cref="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" /> コンストラクターを使用して <see cref="T:System.Windows.Interop.HwndSource" /> オブジェクトを作成するために使用されるパラメーターを格納します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1150a-101">Contains the parameters that are used to create an <see cref="T:System.Windows.Interop.HwndSource" /> object using the <see cref="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" /> constructor.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-102">この構造体がでのみ使用される、<xref:System.Windows.Interop.HwndSource>オブジェクトのコンス トラクターの呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="1150a-102">This structure is used only in the <xref:System.Windows.Interop.HwndSource> object constructor call.</span></span>  
  
 <span data-ttu-id="1150a-103">この構造体によって設定されます。 値を持つプロパティがに直接公開されない<xref:System.Windows.Interop.HwndSource>インスタンスの場合、<xref:System.Windows.Interop.HwndSource>を構築します。</span><span class="sxs-lookup"><span data-stu-id="1150a-103">The properties whose values are established by this structure are not directly exposed on <xref:System.Windows.Interop.HwndSource> instances when an <xref:System.Windows.Interop.HwndSource> is constructed.</span></span> <span data-ttu-id="1150a-104">ただしの値、<xref:System.Windows.Interop.HwndSourceParameters>構造に通常影響全般[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]「高さ」と「幅」ホスト型の特定のオブジェクトに存在するなどのプロパティとその[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="1150a-104">However, the values of the <xref:System.Windows.Interop.HwndSourceParameters> structure typically affect general [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] properties such as "Height" and "Width" that might exist in specific hosted objects and their [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1150a-105">既定の (パラメーターなし) コンス トラクターを使用してこの構造体のインスタンスを作成しないでください。</span><span class="sxs-lookup"><span data-stu-id="1150a-105">Do not construct instances of this structure using the default (parameterless) constructor.</span></span> <span data-ttu-id="1150a-106"><xref:System.Windows.Interop.HwndSourceParameters>で結果を既定のコンス トラクターによって作成されるインスタンス<xref:System.Windows.Interop.HwndSourceParameters>を割り当てることができません、 <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (場合でも、<xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A>を設定するプロパティが表示されます)。</span><span class="sxs-lookup"><span data-stu-id="1150a-106">An <xref:System.Windows.Interop.HwndSourceParameters> instance that is created by the default constructor results in <xref:System.Windows.Interop.HwndSourceParameters> that cannot be assigned a <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (even though the <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> property appears to be settable).</span></span> <span data-ttu-id="1150a-107">パラメーターとしてこのようなインスタンスが適用されるかどうか、<xref:System.Windows.Interop.HwndSource>コンス トラクターを結果として得られる<xref:System.Windows.Interop.HwndSource>ウィンドウを表示することはできません。</span><span class="sxs-lookup"><span data-stu-id="1150a-107">If such an instance is applied as the parameters for an <xref:System.Windows.Interop.HwndSource> constructor, the resulting <xref:System.Windows.Interop.HwndSource> cannot display a window.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-108">
            <see cref="T:System.Windows.Interop.HwndSourceParameters" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-108">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class.</span>
          </span>
          <span data-ttu-id="1150a-109">
            <see cref="T:System.Windows.Interop.HwndSourceParameters" /> の既定のコンストラクターは使用しないでください。「解説」を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-109">Do not use the default constructor for <see cref="T:System.Windows.Interop.HwndSourceParameters" />; see Remarks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1150a-110">既定の (パラメーターなし) コンス トラクターを使用してこの構造体のインスタンスを作成しないでください。</span><span class="sxs-lookup"><span data-stu-id="1150a-110">Do not construct instances of this structure using the default (parameterless) constructor.</span></span> <span data-ttu-id="1150a-111"><xref:System.Windows.Interop.HwndSourceParameters>で結果を既定のコンス トラクターによって作成されるインスタンス<xref:System.Windows.Interop.HwndSourceParameters>を割り当てることができません、 <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (場合でも、<xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A>を設定するプロパティが表示されます)。</span><span class="sxs-lookup"><span data-stu-id="1150a-111">An <xref:System.Windows.Interop.HwndSourceParameters> instance that is created by the default constructor results in <xref:System.Windows.Interop.HwndSourceParameters> that cannot be assigned a <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (even though the <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> property appears to be settable).</span></span> <span data-ttu-id="1150a-112">パラメーターとしてこのようなインスタンスが適用されるかどうか、<xref:System.Windows.Interop.HwndSource>コンス トラクターを結果として得られる<xref:System.Windows.Interop.HwndSource>ウィンドウを表示することはできません。</span><span class="sxs-lookup"><span data-stu-id="1150a-112">If such an instance is applied as the parameters for an <xref:System.Windows.Interop.HwndSource> constructor, the resulting <xref:System.Windows.Interop.HwndSource> cannot display a window.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSourceParameters (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSourceParameters(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1150a-113">ウィンドウの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-113">The window's name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1150a-114">指定したウィンドウ名を使用して、<see cref="T:System.Windows.Interop.HwndSourceParameters" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-114">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class with a specified window name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSourceParameters (string name, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSourceParameters(System::String ^ name, int width, int height);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1150a-115">ウィンドウの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-115">The window's name.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="1150a-116">ウィンドウの幅 (ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-116">The window's width, in pixels.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="1150a-117">ウィンドウの高さ (ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-117">The window's height, in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1150a-118">指定したウィンドウ名と初期サイズを使用して、<see cref="T:System.Windows.Interop.HwndSourceParameters" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-118">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class with a specified window name and initial size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-119">いずれかの 0 (ゼロ) を渡さないでください、`width`または`height`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="1150a-119">Do not pass 0 (zero) for either the `width` or `height` parameters.</span></span> <span data-ttu-id="1150a-120">メソッドは成功しますが、0 を渡した場合でも、ですが、大幅なパフォーマンスの低下が発生します。</span><span class="sxs-lookup"><span data-stu-id="1150a-120">Although the method eventually succeeds, even if you do pass 0, a significant performance penalty occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="AcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public bool AcquireHwndFocusInMenuMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcquireHwndFocusInMenuMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-121">
            <see cref="T:System.Windows.Interop.HwndSource" /> が作成されるときにウィンドウを含む WPF の Win32 フォーカスを取得するかどうかを決定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-121">Gets or sets the value that determines whether to acquire Win32 focus for the WPF containing window when an <see cref="T:System.Windows.Interop.HwndSource" /> is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-122">ユーザーがメニューを操作するときにウィンドウを含む WPF の Win32 フォーカスを取得する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-122">
              <see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1150a-123">
            <see cref="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" /> の値を使用する場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-123">
              <see langword="null" /> to use the value of <see cref="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustSizingForNonClientArea">
      <MemberSignature Language="C#" Value="public bool AdjustSizingForNonClientArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustSizingForNonClientArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.AdjustSizingForNonClientArea" />
      <MemberSignature Language="VB.NET" Value="Public Property AdjustSizingForNonClientArea As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AdjustSizingForNonClientArea { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-124">非クライアント領域をサイズ設定に含めるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-124">Gets or sets a value that indicates whether to include the nonclient area for sizing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-125">レイアウト マネージャーのサイズ変更ロジックに非クライアント領域を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-125">
              <see langword="true" /> if the layout manager sizing logic should include the nonclient area; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1150a-126">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-126">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-127"><xref:System.Windows.Window>クラスでは、このパラメーターを設定`true`の一部として内部的には、この構造体を使用する場合、[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]ウィンドウ作成プロセス。</span><span class="sxs-lookup"><span data-stu-id="1150a-127">The <xref:System.Windows.Window> class sets this parameter to `true` when using this structure internally, as part of its [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] window-creation process.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.PositionX" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.PositionY" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-128">指定した構造体がこの構造体と等しいかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-128">Determines whether this structure is equal to a specified structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1150a-129">等しいかどうかをテストするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-129">The objects to be tested for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1150a-130">指定したオブジェクトがこの構造体と等しいかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-130">Determines whether this structure is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1150a-131">等しいという比較結果が出た場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-131">
              <see langword="true" /> if the comparison is equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-132">この実装では、正確な値の等価性の両方の構造体のすべてのメンバー (パブリックおよびプライベート) を確認します。</span><span class="sxs-lookup"><span data-stu-id="1150a-132">This implementation checks all members (public and private) of both structures for exact value equality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Interop.HwndSourceParameters obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Interop.HwndSourceParameters obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As HwndSourceParameters) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Interop::HwndSourceParameters obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1150a-133">等しいかどうかをテストする構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-133">The structure to be tested for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1150a-134">指定した <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 構造体がこの構造体と等しいかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-134">Determines whether this structure is equal to a specified <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1150a-135">構造体が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-135">
              <see langword="true" /> if the structures are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-136">この実装では、正確な値の等価性の両方の構造体のすべてのメンバー (パブリックおよびプライベート) を確認します。</span><span class="sxs-lookup"><span data-stu-id="1150a-136">This implementation checks all members (public and private) of both structures for exact value equality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedWindowStyle">
      <MemberSignature Language="C#" Value="public int ExtendedWindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExtendedWindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.ExtendedWindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedWindowStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExtendedWindowStyle { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-137">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] の拡張ウィンドウ スタイルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-137">Gets or sets the extended [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] styles for the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-138">拡張ウィンドウ スタイル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-138">The extended window styles.</span>
          </span>
          <span data-ttu-id="1150a-139">参照してください[について](http://go.microsoft.com/fwlink/?LinkId=98462)これらのスタイルの一覧についてはします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-139">See [CreateWindowEx](http://go.microsoft.com/fwlink/?LinkId=98462) for a list of these styles.</span>
          </span>
          <span data-ttu-id="1150a-140">既定値は 0 (拡張ウィンドウ スタイルなし) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-140">The default is 0 (no extended window styles).</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1150a-141">この <see cref="T:System.Windows.Interop.HwndSourceParameters" /> インスタンスのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-141">Returns the hash code for this <see cref="T:System.Windows.Interop.HwndSourceParameters" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1150a-142">32 ビット符号付き整数ハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-142">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-143">この実装では、GetHashCode のオブジェクトの実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="1150a-143">This implementation uses the Object implementation of GetHashCode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAssignedSize">
      <MemberSignature Language="C#" Value="public bool HasAssignedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAssignedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.HasAssignedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAssignedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAssignedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-144">サイズが割り当てられたかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-144">Gets a value that indicates whether a size was assigned.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-145">ウィンドウ サイズが割り当てられている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-145">
              <see langword="true" /> if the window size was assigned; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1150a-146">既定値は <see langword="false" /> です。ただし、幅と高さを指定して構造体が作成された場合、値は <see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-146">The default is <see langword="false" />, unless the structure was created with provided height and width, in which case the value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-147">サイズが割り当てられていない場合、そのウィンドウが既定のサイズにします。</span><span class="sxs-lookup"><span data-stu-id="1150a-147">If a size was not assigned, the window has the default size.</span></span>  
  
 <span data-ttu-id="1150a-148">呼び出す<xref:System.Windows.Interop.HwndSourceParameters.SetSize%2A>設定または<xref:System.Windows.Interop.HwndSourceParameters.Width%2A>または<xref:System.Windows.Interop.HwndSourceParameters.Height%2A>すべてしている、このプロパティになります`true`です。</span><span class="sxs-lookup"><span data-stu-id="1150a-148">Calls to <xref:System.Windows.Interop.HwndSourceParameters.SetSize%2A> or setting <xref:System.Windows.Interop.HwndSourceParameters.Width%2A> or <xref:System.Windows.Interop.HwndSourceParameters.Height%2A> all result in this property being `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-149">ウィンドウの高さを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-149">Gets or sets a value that indicates the height of the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-150">ウィンドウの高さ (デバイス ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-150">The height of the window, in device pixels.</span>
          </span>
          <span data-ttu-id="1150a-151">既定値は 1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-151">The default value is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-152">四角形の画面領域の大きさを受け取るほとんどのメソッドとは異なり[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]、標準的なデバイスに依存しない単位ではなく、デバイスのピクセル単位でこのウィンドウのサイズを指定します。</span><span class="sxs-lookup"><span data-stu-id="1150a-152">Unlike most methods that take rectangle screen-region measures in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], you specify this window size in device pixels, not the typical device-independent units.</span></span> <span data-ttu-id="1150a-153">そのコンテンツをウィンドウのサイズをする場合は、設定<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>に`true`です。</span><span class="sxs-lookup"><span data-stu-id="1150a-153">If you need to size your window to its content, set <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> to `true`.</span></span>  
  
 <span data-ttu-id="1150a-154">設定しない<xref:System.Windows.Interop.HwndSourceParameters.Height%2A>を 0 (ゼロ)。</span><span class="sxs-lookup"><span data-stu-id="1150a-154">Do not set <xref:System.Windows.Interop.HwndSourceParameters.Height%2A> to 0 (zero).</span></span> <span data-ttu-id="1150a-155">これにより低下大幅なパフォーマンス表示にします。</span><span class="sxs-lookup"><span data-stu-id="1150a-155">Doing so incurs a significant performance penalty in rendering.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
        <altmember cref="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HwndSourceHook">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.HwndSourceHook HwndSourceHook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.HwndSourceHook HwndSourceHook" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.HwndSourceHook" />
      <MemberSignature Language="VB.NET" Value="Public Property HwndSourceHook As HwndSourceHook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::HwndSourceHook ^ HwndSourceHook { System::Windows::Interop::HwndSourceHook ^ get(); void set(System::Windows::Interop::HwndSourceHook ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndSourceHook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-156">ウィンドウのメッセージ フックを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-156">Gets or sets the message hook for the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-157">ウィンドウのメッセージ フック。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-157">The message hook for the window.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-158">前にこのメッセージ フックが有効になっている`CreateWindow`が呼び出されると、すべてのウィンドウ作成メッセージを受信します。</span><span class="sxs-lookup"><span data-stu-id="1150a-158">This message hook is enabled before `CreateWindow` is called so that it receives all the window creation messages.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Interop.HwndSourceParameters a, System.Windows.Interop.HwndSourceParameters b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Interop.HwndSourceParameters a, valuetype System.Windows.Interop.HwndSourceParameters b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.op_Equality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As HwndSourceParameters, b As HwndSourceParameters) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Interop::HwndSourceParameters a, System::Windows::Interop::HwndSourceParameters b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Windows.Interop.HwndSourceParameters" />
        <Parameter Name="b" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="1150a-159">比較する最初の <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-159">The first <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="1150a-160">比較する 2 番目の <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-160">The second <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1150a-161">
            <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 構造体が別の <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 構造体と等しいかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-161">Determines whether an <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure is equal to another <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1150a-162">構造体が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-162">
              <see langword="true" /> if the structures are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-163">この実装を呼び出す、<xref:System.Windows.Interop.HwndSourceParameters.Equals%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1150a-163">This implementation calls the <xref:System.Windows.Interop.HwndSourceParameters.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Interop.HwndSourceParameters a, System.Windows.Interop.HwndSourceParameters b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Interop.HwndSourceParameters a, valuetype System.Windows.Interop.HwndSourceParameters b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.op_Inequality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As HwndSourceParameters, b As HwndSourceParameters) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Interop::HwndSourceParameters a, System::Windows::Interop::HwndSourceParameters b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Windows.Interop.HwndSourceParameters" />
        <Parameter Name="b" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="1150a-164">比較する最初の <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-164">The first <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="1150a-165">比較する 2 番目の <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-165">The second <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1150a-166">
            <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 構造体が別の <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 構造体と等しくないかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-166">Determines whether an <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure is not equal to another <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1150a-167">構造体が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-167">
              <see langword="true" /> if the structures are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-168">この実装を呼び出す、<xref:System.Windows.Interop.HwndSourceParameters.Equals%2A>メソッドと、結果を反転します。</span><span class="sxs-lookup"><span data-stu-id="1150a-168">This implementation calls the <xref:System.Windows.Interop.HwndSourceParameters.Equals%2A> method and inverts the result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindow">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.ParentWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindow As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindow { IntPtr get(); void set(IntPtr value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-169">作成されたウィンドウの親ウィンドウ ハンドル (HWND) を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-169">Gets or sets the window handle (HWND) of the parent for the created window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-170">親ウィンドウの HWND。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-170">The HWND of the parent window.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="PositionX">
      <MemberSignature Language="C#" Value="public int PositionX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.PositionX" />
      <MemberSignature Language="VB.NET" Value="Public Property PositionX As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PositionX { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-171">ウィンドウの左端の位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-171">Gets or sets the left-edge position of the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-172">ウィンドウの左端の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-172">The left-edge position of the window.</span>
          </span>
          <span data-ttu-id="1150a-173">既定値で処理される CW_USEDEFAULT、 <c>CreateWindow</c>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-173">The default is CW_USEDEFAULT, as processed by <c>CreateWindow</c>.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.HwndSourceParameters.SetPosition(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="PositionY">
      <MemberSignature Language="C#" Value="public int PositionY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.PositionY" />
      <MemberSignature Language="VB.NET" Value="Public Property PositionY As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PositionY { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-174">ウィンドウの上端の位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-174">Gets or sets the upper-edge position of the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-175">ウィンドウの上端の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-175">The upper-edge position of the window.</span>
          </span>
          <span data-ttu-id="1150a-176">既定値で処理される CW_USEDEFAULT、 <c>CreateWindow</c>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-176">The default is CW_USEDEFAULT, as processed by <c>CreateWindow</c>.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="RestoreFocusMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.RestoreFocusMode RestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.RestoreFocusMode RestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::RestoreFocusMode RestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-177">WPF がウィンドウにフォーカスを戻す方法を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-177">Gets or sets how WPF handles restoring focus to the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-178">WPF がウィンドウのフォーカスを戻す方法を指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-178">One of the enumeration values that specifies how WPF handles restoring focus for the window.</span>
          </span>
          <span data-ttu-id="1150a-179">既定値は、<see cref="F:System.Windows.Input.RestoreFocusMode.Auto" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-179">The default is <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-180">WPF は自動的にない限り、ウィンドウにフォーカスを復元しよう<xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A>に設定されている<xref:System.Windows.Input.RestoreFocusMode.None>です。</span><span class="sxs-lookup"><span data-stu-id="1150a-180">WPF automatically tries to restore focus to the window unless <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A> is set to <xref:System.Windows.Input.RestoreFocusMode.None>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPosition">
      <MemberSignature Language="C#" Value="public void SetPosition (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPosition(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.SetPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPosition (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPosition(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="1150a-181">ウィンドウの左端の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-181">The position of the left edge of the window.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="1150a-182">ウィンドウの上端の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-182">The position of the upper edge of the window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1150a-183">
            <see cref="T:System.Windows.Interop.HwndSource" /> のウィンドウの画面位置として使用される値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-183">Sets the values that are used for the screen position of the window for the <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="SetSize">
      <MemberSignature Language="C#" Value="public void SetSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSize(int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="1150a-184">ウィンドウの幅 (デバイス ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-184">The width of the window, in device pixels.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="1150a-185">ウィンドウの高さ (デバイス ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-185">The height of the window, in device pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1150a-186">
            <see cref="T:System.Windows.Interop.HwndSource" /> のウィンドウ サイズとして使用される値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-186">Sets the values that are used for the window size of the <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-187">四角形の画面領域の大きさを受け取るほとんどのメソッドとは異なり[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]、標準的なデバイスに依存しない単位ではなく、デバイスのピクセル単位で、このウィンドウのサイズを指定します。</span><span class="sxs-lookup"><span data-stu-id="1150a-187">Unlike most methods that take rectangle screen-region measures in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], you specify this window size in device pixels, not in the typical device-independent units.</span></span> <span data-ttu-id="1150a-188">そのコンテンツをウィンドウのサイズをする場合は、設定<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>に`true`です。</span><span class="sxs-lookup"><span data-stu-id="1150a-188">If you need to size your window to its content, set <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> to `true`.</span></span>  
  
 <span data-ttu-id="1150a-189">いずれかの 0 (ゼロ) を渡さないでください、`width`または`height`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="1150a-189">Do not pass 0 (zero) for either the `width` or `height` parameters.</span></span> <span data-ttu-id="1150a-190">メソッドは、最終的に、0 を渡した場合でも成功しますが、大幅なパフォーマンスの低下が発生します。</span><span class="sxs-lookup"><span data-stu-id="1150a-190">Although the method eventually succeeds even if you do pass 0, a substantial performance penalty occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.Height" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.Width" />
      </Docs>
    </Member>
    <Member MemberName="TreatAncestorsAsNonClientArea">
      <MemberSignature Language="C#" Value="public bool TreatAncestorsAsNonClientArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TreatAncestorsAsNonClientArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.TreatAncestorsAsNonClientArea" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatAncestorsAsNonClientArea As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TreatAncestorsAsNonClientArea { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-191">
            <see cref="T:System.Windows.Interop.HwndSource" /> の親ウィンドウをレイアウト パスの間にウィンドウの非クライアント領域と見なす必要があるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-191">Gets or sets a value that indicates whether the parent windows of the <see cref="T:System.Windows.Interop.HwndSource" /> should be considered the non-client area of the window during layout passes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-192">レイアウト パスの間に、<see cref="T:System.Windows.Interop.HwndSource" /> の親ウィンドウをウィンドウの非クライアント領域と見なす必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-192">
              <see langword="true" /> if parent windows of the <see cref="T:System.Windows.Interop.HwndSource" /> should be considered the non-client area of the window during layout passes.; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1150a-193">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-193">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TreatAsInputRoot">
      <MemberSignature Language="C#" Value="public bool TreatAsInputRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TreatAsInputRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.TreatAsInputRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatAsInputRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TreatAsInputRoot { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-194">
            <see cref="T:System.Windows.Interop.HwndSource" /> がメッセージ ポンプによって生成されたウィンドウ メッセージを <see cref="T:System.Windows.Interop.ComponentDispatcher" /> を介して受け取る必要があるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-194">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Interop.HwndSource" /> should receive window messages raised by the message pump via the <see cref="T:System.Windows.Interop.ComponentDispatcher" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-195">
            <see cref="T:System.Windows.Interop.HwndSource" /> がメッセージ ポンプによって生成されたウィンドウ メッセージを <see cref="T:System.Windows.Interop.ComponentDispatcher" /> を介して受け取る必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-195">
              <see langword="true" /> if the <see cref="T:System.Windows.Interop.HwndSource" /> should receive window messages raised by the message pump via the <see cref="T:System.Windows.Interop.ComponentDispatcher" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1150a-196">
            <see cref="T:System.Windows.Interop.HwndSource" /> がトップレベル ウィンドウに対応する場合の既定値は <see langword="true" />、それ以外の場合の既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-196">The default is <see langword="true" /> if the <see cref="T:System.Windows.Interop.HwndSource" /> corresponds to a top-level window; otherwise, the default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelOpacity">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelOpacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesPerPixelOpacity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelOpacity { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-197">ソース ウィンドウ コンテンツのピクセルごとの不透明度を使用するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-197">Gets a value that declares whether the per-pixel opacity of the source window content is respected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-198">ピクセルごとの不透明度を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-198">
              <see langword="true" /> if using per-pixel opacity; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-199">ピクセルごとの不透明度を有効にすると、システムでは、非クライアント領域が不要になったを描画します。</span><span class="sxs-lookup"><span data-stu-id="1150a-199">By enabling per-pixel opacity, the system no longer draws the non-client area.</span></span>  
  
 <span data-ttu-id="1150a-200">デスクトップで、ウィンドウが描画されると、不透明度が使用される (その最終的なレンダリングのステップを表しますが表示されない共同作成者として、プロパティの値など<xref:System.Windows.UIElement.Opacity%2A>)。</span><span class="sxs-lookup"><span data-stu-id="1150a-200">The opacity is used when the window is drawn on the desktop (it represents a final rendering step and does not appear as a contributor to property values such as <xref:System.Windows.UIElement.Opacity%2A>).</span></span>  
  
 <span data-ttu-id="1150a-201"><xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> 最上位のウィンドウにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="1150a-201"><xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> applies only to top-level windows.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelTransparency">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesPerPixelTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelTransparency { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-202">ソース ウィンドウ コンテンツのピクセルごとに透明度を使用するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-202">Gets a value that declares whether the per-pixel transparency of the source window content is respected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-203">ピクセルごとに透明度を使用する場合は <see langword="true" />。それ以外の場合 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-203">
              <see langword="true" /> if using per-pixel transparency; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-204">ウィンドウの幅を示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-204">Gets or sets a value that indicates the width of the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-205">ウィンドウの幅 (デバイス ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-205">The window width, in device pixels.</span>
          </span>
          <span data-ttu-id="1150a-206">既定値は 1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-206">The default value is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-207">四角形の画面領域の大きさを受け取るほとんどのメソッドとは異なり[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]デバイスのピクセル単位ではなく通常のデバイスに依存しない単位にこのウィンドウのサイズを指定します。</span><span class="sxs-lookup"><span data-stu-id="1150a-207">Unlike most methods that take rectangle screen region measures in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], you specify this window's size in device pixels, not in the usual device-independent units.</span></span> <span data-ttu-id="1150a-208">そのコンテンツをウィンドウのサイズをする場合は、設定<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>に`true`です。</span><span class="sxs-lookup"><span data-stu-id="1150a-208">If you need to size your window to its content, set <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> to `true`.</span></span>  
  
 <span data-ttu-id="1150a-209">設定しない<xref:System.Windows.Interop.HwndSourceParameters.Width%2A>を 0 (ゼロ)。</span><span class="sxs-lookup"><span data-stu-id="1150a-209">Do not set <xref:System.Windows.Interop.HwndSourceParameters.Width%2A> to 0 (zero).</span></span> <span data-ttu-id="1150a-210">これによりペナルティがパフォーマンスが大幅に表示します。</span><span class="sxs-lookup"><span data-stu-id="1150a-210">Doing so incurs a substantial performance penalty in rendering.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WindowClassStyle">
      <MemberSignature Language="C#" Value="public int WindowClassStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowClassStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.WindowClassStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowClassStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WindowClassStyle { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-211">ウィンドウの [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] クラスのスタイルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-211">Gets or sets the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] class style for the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-212">ウィンドウのクラスのスタイル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-212">The window class style.</span>
          </span>
          <span data-ttu-id="1150a-213">参照してください[ウィンドウ クラス スタイル](http://go.microsoft.com/fwlink/?LinkId=178417)詳細です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-213">See [Window Class Styles](http://go.microsoft.com/fwlink/?LinkId=178417) for detailed information.</span>
          </span>
          <span data-ttu-id="1150a-214">既定値は 0 です (ウィンドウ クラス スタイルなし)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-214">The default is 0 (no window class style).</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="WindowName">
      <MemberSignature Language="C#" Value="public string WindowName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WindowName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.WindowName" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WindowName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-215">ウィンドウの名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-215">Gets or sets the name of the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-216">ウィンドウの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-216">The window name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1150a-217">既定の (パラメーターなし) コンス トラクターを使用してこの構造体のインスタンスを作成しないでください。</span><span class="sxs-lookup"><span data-stu-id="1150a-217">Do not construct instances of this structure using the default (parameterless) constructor.</span></span> <span data-ttu-id="1150a-218"><xref:System.Windows.Interop.HwndSourceParameters>で結果を既定のコンス トラクターによって作成されるインスタンス<xref:System.Windows.Interop.HwndSourceParameters>を割り当てることができません、 <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (場合でも、<xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A>を設定するプロパティが表示されます)。</span><span class="sxs-lookup"><span data-stu-id="1150a-218">An <xref:System.Windows.Interop.HwndSourceParameters> instance that is created by the default constructor results in <xref:System.Windows.Interop.HwndSourceParameters> that cannot be assigned a <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (even though the <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> property appears to be settable).</span></span> <span data-ttu-id="1150a-219">パラメーターとしてこのようなインスタンスが適用されるかどうか、<xref:System.Windows.Interop.HwndSource>コンス トラクターを結果として得られる<xref:System.Windows.Interop.HwndSource>ウィンドウを表示することはできません。</span><span class="sxs-lookup"><span data-stu-id="1150a-219">If such an instance is applied as the parameters for an <xref:System.Windows.Interop.HwndSource> constructor, the resulting <xref:System.Windows.Interop.HwndSource> cannot display a window.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public int WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WindowStyle { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1150a-220">ウィンドウのスタイルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-220">Gets or sets the style for the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1150a-221">ウィンドウ スタイル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-221">The window style.</span>
          </span>
          <span data-ttu-id="1150a-222">参照してください、[について](http://go.microsoft.com/fwlink/?LinkId=98462)関数スタイルのビットの完全な一覧についてはします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-222">See the [CreateWindowEx](http://go.microsoft.com/fwlink/?LinkId=98462) function for a complete list of style bits.</span>
          </span>
          <span data-ttu-id="1150a-223">既定値: WS_VISIBLE WS_CAPTION、WS_SYSMENU、WS_THICKFRAME、WS_MINIMIZEBOX、WS_MAXIMIZEBOX WS_CLIPCHILDREN</span>
          <span class="sxs-lookup">
            <span data-stu-id="1150a-223">Defaults: WS_VISIBLE, WS_CAPTION, WS_SYSMENU, WS_THICKFRAME, WS_MINIMIZEBOX, WS_MAXIMIZEBOX, WS_CLIPCHILDREN</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1150a-224">既定で、次のビットを構造の作成時に設定されます: WS_VISIBLE です。WS_CAPTION です。WS_SYSMENU です。WS_THICKFRAME です。WS_MINIMIZEBOX です。WS_MAXIMIZEBOX です。WS_CLIPCHILDREN です。</span><span class="sxs-lookup"><span data-stu-id="1150a-224">By default, the following bits are set when the structure is created: WS_VISIBLE; WS_CAPTION; WS_SYSMENU; WS_THICKFRAME; WS_MINIMIZEBOX; WS_MAXIMIZEBOX; WS_CLIPCHILDREN.</span></span>  
  
 <span data-ttu-id="1150a-225">標準のウィンドウの WS_CLIPCHILDREN ビットを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1150a-225">For a standard window, you must set the WS_CLIPCHILDREN bit.</span></span> <span data-ttu-id="1150a-226">このスタイルのビットは、コード自体で適用されます。このフラグを設定する省略すると、どのような値を入力する WPF 追加します。</span><span class="sxs-lookup"><span data-stu-id="1150a-226">This style bit is enforced in the code itself; if you omit to set this flag, WPF adds it to whatever value you provide.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
  </Members>
</Type>