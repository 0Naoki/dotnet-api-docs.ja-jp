<Type Name="D3DImage" FullName="System.Windows.Interop.D3DImage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7c61f02ac2c5dc3b0e3bc8d542bcdce21fef3dc" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48628089" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class D3DImage : System.Windows.Media.ImageSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi D3DImage extends System.Windows.Media.ImageSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.D3DImage" />
  <TypeSignature Language="VB.NET" Value="Public Class D3DImage&#xA;Inherits ImageSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class D3DImage : System::Windows::Media::ImageSource" />
  <TypeSignature Language="F#" Value="type D3DImage = class&#xA;    inherit ImageSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.ImageSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="37e83-101">ユーザーが作成した Direct3D サーフェイスを表示する <see cref="T:System.Windows.Media.ImageSource" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="37e83-101">An <see cref="T:System.Windows.Media.ImageSource" /> that displays a user-created Direct3D surface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-102">使用して、 <xref:System.Windows.Interop.D3DImage> Windows Presentation Foundation (WPF) アプリケーションで Direct3D コンテンツをホストするクラス。</span><span class="sxs-lookup"><span data-stu-id="37e83-102">Use the <xref:System.Windows.Interop.D3DImage> class to host Direct3D content in a Windows Presentation Foundation (WPF) application.</span></span>  
  
 <span data-ttu-id="37e83-103">呼び出す、<xref:System.Windows.Interop.D3DImage.Lock%2A>によって表示される Direct3D の内容を変更するメソッドを<xref:System.Windows.Interop.D3DImage>します。</span><span class="sxs-lookup"><span data-stu-id="37e83-103">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the Direct3D content displayed by the <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="37e83-104">呼び出す、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>を Direct3D サーフェイスを割り当てるメソッドを<xref:System.Windows.Interop.D3DImage>します。</span><span class="sxs-lookup"><span data-stu-id="37e83-104">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to a <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="37e83-105">呼び出す、 <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> Direct3D サーフェイスへの更新プログラムを追跡するメソッド。</span><span class="sxs-lookup"><span data-stu-id="37e83-105">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to track updates to the Direct3D surface.</span></span> <span data-ttu-id="37e83-106">呼び出す、<xref:System.Windows.Interop.D3DImage.Unlock%2A>変更された領域を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="37e83-106">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to display the changed areas.</span></span>  
  
 <span data-ttu-id="37e83-107"><xref:System.Windows.Interop.D3DImage>クラスは、2 つ表示バッファーと呼ばれる、管理、*バック バッファー*と*フロント バッファー*します。</span><span class="sxs-lookup"><span data-stu-id="37e83-107">The <xref:System.Windows.Interop.D3DImage> class manages two display buffers, which are called the *back buffer* and the *front buffer*.</span></span> <span data-ttu-id="37e83-108">バック バッファーでは、Direct3D サーフェイスです。</span><span class="sxs-lookup"><span data-stu-id="37e83-108">The back buffer is your Direct3D surface.</span></span>  <span data-ttu-id="37e83-109">バック バッファーへの変更にコピーされますフォワード フロント バッファーを呼び出すとき、<xref:System.Windows.Interop.D3DImage.Unlock%2A>メソッド、ハードウェアで表示されます。</span><span class="sxs-lookup"><span data-stu-id="37e83-109">Changes to the back buffer are copied forward to the front buffer when you call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method, where it is displayed on the hardware.</span></span> <span data-ttu-id="37e83-110">場合によっては、フロント バッファーが使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="37e83-110">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="37e83-111">画面のロック、排他 Direct3D アプリケーションを全画面表示、ユーザーの切り替え、またはその他のシステム アクティビティによって、この可用性が不足している可能性があります。</span><span class="sxs-lookup"><span data-stu-id="37e83-111">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="37e83-112">処理することによって WPF アプリケーションに通知このエラーが発生したとき、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="37e83-112">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="37e83-113">アプリケーションが利用できなくなるフロント バッファーに応答する方法は、ソフトウェア レンダリングにフォールバックする WPF が有効になっているかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="37e83-113">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="37e83-114"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッドは、WPF ソフトウェア レンダリングにフォールバックするかどうかを指定するパラメーターを受け取るオーバー ロードを持ちます。</span><span class="sxs-lookup"><span data-stu-id="37e83-114">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-does-not-fall-back-to-software-rendering"></a><span data-ttu-id="37e83-115">WPF はフォールバックされないソフトウェア レンダリングを使用できないフロント バッファー応答</span><span class="sxs-lookup"><span data-stu-id="37e83-115">Responding to an Unavailable Front Buffer when WPF Does not Fall Back to Software Rendering</span></span>  
 <span data-ttu-id="37e83-116">呼び出すと、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29>オーバー ロードを呼び出したり、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>オーバー ロード、`enableSoftwareFallback`パラメーターに設定`false`、フロント バッファーが使用できなくなったとは何もレンダリング システムがバック バッファーへの参照を解放表示されます。</span><span class="sxs-lookup"><span data-stu-id="37e83-116">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="37e83-117">フロント バッファーが再び使用可能、レンダリング システムが発生、 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> WPF アプリケーションに通知するイベントです。</span><span class="sxs-lookup"><span data-stu-id="37e83-117">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="37e83-118">イベント ハンドラーを作成することができます、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>イベントを有効な Direct3D サーフェイスを使用してレンダリングを再起動します。</span><span class="sxs-lookup"><span data-stu-id="37e83-118">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="37e83-119">レンダリングを再起動して、呼び出す必要がある<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>します。</span><span class="sxs-lookup"><span data-stu-id="37e83-119">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-falls-back-to-software-rendering"></a><span data-ttu-id="37e83-120">ソフトウェア レンダリングを WPF には該当する場合、使用できないフロント バッファーへの応答</span><span class="sxs-lookup"><span data-stu-id="37e83-120">Responding to an Unavailable Front Buffer when WPF Falls Back to Software Rendering</span></span>  
 <span data-ttu-id="37e83-121">呼び出すと、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>オーバー ロード、`enableSoftwareFallback`パラメーターに設定`true`、レンダリング システムを呼び出す必要がないフロント バッファーが使用不能になったときにバック バッファーへの参照を保持<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>と前面バッファーが再び使用可能です。</span><span class="sxs-lookup"><span data-stu-id="37e83-121">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="37e83-122">場所、ユーザーのデバイスが使用できなくなった状況である可能性があります。</span><span class="sxs-lookup"><span data-stu-id="37e83-122">There may be situations where the user’s device becomes unavailable.</span></span>  <span data-ttu-id="37e83-123">発生すると、呼び出す<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>バック バッファーへの WPF の参照を解放します。</span><span class="sxs-lookup"><span data-stu-id="37e83-123">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF’s reference to the back buffer.</span></span>  <span data-ttu-id="37e83-124">デバイスをリセットする必要がある場合は、呼び出す<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>で、`backBuffer`パラメーターに設定`null`を呼び出して<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>でもう一度`backBuffer`Direct3D サーフェイスを有効に設定します。</span><span class="sxs-lookup"><span data-stu-id="37e83-124">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with the `backBuffer` parameter set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37e83-125">パフォーマンスは、Direct3D サーフェイスの設定に大きく依存します。</span><span class="sxs-lookup"><span data-stu-id="37e83-125">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="37e83-126">詳細については、次を参照してください。 [Direct3D9 および WPF の相互運用性のパフォーマンスに関する考慮事項](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)します。</span><span class="sxs-lookup"><span data-stu-id="37e83-126">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37e83-127"><xref:System.Windows.Interop.D3DImage>クラスはコンテンツが表示されない Direct3D WPF ソフトウェアでレンダリングなど、リモート デスクトップ接続を経由するときを呼び出さない限り、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>指定`true`の`enableSoftwareFallback`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="37e83-127">The <xref:System.Windows.Interop.D3DImage> class does not display Direct3D content when WPF renders in software, such as over a Remote Desktop connection, unless you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> and specify `true` for the `enableSoftwareFallback` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37e83-128">次のコード例は、宣言する方法を示します、 <xref:System.Windows.Interop.D3DImage> XAML でします。</span><span class="sxs-lookup"><span data-stu-id="37e83-128">The following code example shows how to declare a <xref:System.Windows.Interop.D3DImage> in XAML.</span></span> <span data-ttu-id="37e83-129">マップする必要があります、<xref:System.Windows.Interop>名前空間は、既定の XAML 名前空間には含まれませんので。</span><span class="sxs-lookup"><span data-stu-id="37e83-129">You must map the <xref:System.Windows.Interop> namespace, because it is not included in the default XAML namespaces.</span></span> <span data-ttu-id="37e83-130">詳細については、次を参照してください。[チュートリアル: WPF で Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)します。</span><span class="sxs-lookup"><span data-stu-id="37e83-130">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-xaml[System.Windows.Interop.D3DImage#10](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="37e83-131">アンマネージ リソースにアクセスします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="37e83-131">for access to unmanaged resources.</span>
      </span>
      <span data-ttu-id="37e83-132">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="37e83-132">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="37e83-133">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="37e83-133">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="37e83-134">
            <see cref="T:System.Windows.Interop.D3DImage" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-134">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37e83-135">
            <see cref="T:System.Windows.Interop.D3DImage" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-135">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-136">既定のディスプレイの解像度は、1/96 インチです。</span><span class="sxs-lookup"><span data-stu-id="37e83-136">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="37e83-137">アンマネージ リソースにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-137">for access to unmanaged resources.</span>
          </span>
          <span data-ttu-id="37e83-138">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-138">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="37e83-139">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-139">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage (double dpiX, double dpiY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 dpiX, float64 dpiY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dpiX As Double, dpiY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage(double dpiX, double dpiY);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.D3DImage : double * double -&gt; System.Windows.Interop.D3DImage" Usage="new System.Windows.Interop.D3DImage (dpiX, dpiY)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dpiX" Type="System.Double" />
        <Parameter Name="dpiY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dpiX">
          <span data-ttu-id="37e83-140">x 軸の表示解像度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-140">The display resolution on the x-axis.</span>
          </span>
        </param>
        <param name="dpiY">
          <span data-ttu-id="37e83-141">y 軸の表示解像度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-141">The display resolution on the y-axis.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37e83-142">
            <see cref="T:System.Windows.Interop.D3DImage" /> クラスの新しいインスタンスを、指定された表示解像度で初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-142">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class with the specified display resolution.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-143">既定のディスプレイの解像度は、1/96 インチです。</span><span class="sxs-lookup"><span data-stu-id="37e83-143">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="37e83-144">
            <paramref name="dpiX" /> または <paramref name="dpiY" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-144">
              <paramref name="dpiX" /> or <paramref name="dpiY" /> is less than zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="37e83-145">アンマネージ リソースにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-145">for access to unmanaged resources.</span>
          </span>
          <span data-ttu-id="37e83-146">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-146">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="37e83-147">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-147">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
      </Docs>
    </Member>
    <Member MemberName="AddDirtyRect">
      <MemberSignature Language="C#" Value="public void AddDirtyRect (System.Windows.Int32Rect dirtyRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDirtyRect(valuetype System.Windows.Int32Rect dirtyRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDirtyRect (dirtyRect As Int32Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDirtyRect(System::Windows::Int32Rect dirtyRect);" />
      <MemberSignature Language="F#" Value="member this.AddDirtyRect : System.Windows.Int32Rect -&gt; unit" Usage="d3DImage.AddDirtyRect dirtyRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirtyRect" Type="System.Windows.Int32Rect" />
      </Parameters>
      <Docs>
        <param name="dirtyRect">
          <span data-ttu-id="37e83-148">変更される領域を表す <see cref="T:System.Windows.Int32Rect" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-148">An <see cref="T:System.Windows.Int32Rect" /> that represents the area that changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37e83-149">変更されるバック バッファーの領域を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-149">Specifies the area of the back buffer that changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-150">呼び出す、<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>メソッドをコードがバック バッファーに加えられた変更を示します。</span><span class="sxs-lookup"><span data-stu-id="37e83-150">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to indicate changes your code has made to the back buffer.</span></span> <span data-ttu-id="37e83-151">レンダリングするには、バック バッファーに変更された領域対応する変更された領域をいる必要があります、<xref:System.Windows.Interop.D3DImage>します。</span><span class="sxs-lookup"><span data-stu-id="37e83-151">To be rendered, the changed area on the back buffer must have a corresponding changed area on the <xref:System.Windows.Interop.D3DImage>.</span></span>  
  
 <span data-ttu-id="37e83-152">呼び出す、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>と<xref:System.Windows.Interop.D3DImage.Lock%2A>メソッドを呼び出す前に、<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="37e83-152">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> and <xref:System.Windows.Interop.D3DImage.Lock%2A> methods before calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="37e83-153">呼び出す、<xref:System.Windows.Interop.D3DImage.Unlock%2A>フロント バッファーに変更された領域をコピーする方法。</span><span class="sxs-lookup"><span data-stu-id="37e83-153">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the changed areas to the front buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37e83-154">いくつかの呼び出し後、<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>メソッドでは、変更された領域は、1 つの領域にマージされます。</span><span class="sxs-lookup"><span data-stu-id="37e83-154">After a few calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method, the changed areas are merged into a single area.</span></span> <span data-ttu-id="37e83-155">つまり、変更された領域の外部で有効なデータがある必要があります。</span><span class="sxs-lookup"><span data-stu-id="37e83-155">This means you must have valid data outside of the changed areas.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37e83-156">次のコード例を呼び出す方法を示しています、<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>バック バッファーに変更されたリージョンを指定します。</span><span class="sxs-lookup"><span data-stu-id="37e83-156">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to specify the changed region in the back buffer.</span></span> <span data-ttu-id="37e83-157">詳細については、次を参照してください。[チュートリアル: WPF で Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)します。</span><span class="sxs-lookup"><span data-stu-id="37e83-157">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37e83-158">
            <see cref="M:System.Windows.Interop.D3DImage.Lock" /> メソッドまたは <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> メソッドへの呼び出しによりロックされなかったビットマップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-158">The bitmap has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span>
          </span>
          <span data-ttu-id="37e83-159">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-159">-or-</span>
          </span>
          <span data-ttu-id="37e83-160">
            <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> メソッドへの呼び出しにより割り当てられていないバック バッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-160">The back buffer has not been assigned by a call to the <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="37e83-161">次の条件の 1 つ以上が true であること。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-161">One or more of the following conditions is true.</span>
          </span>
          <span data-ttu-id="37e83-162">
            <paramref name="dirtyRect.X" />&lt; 0</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-162">
              <paramref name="dirtyRect.X" /> &lt; 0</span>
          </span>
          <span data-ttu-id="37e83-163">
            <paramref name="dirtyRect.Y" />&lt; 0</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-163">
              <paramref name="dirtyRect.Y" /> &lt; 0</span>
          </span>
          <span data-ttu-id="37e83-164">
            <paramref name="dirtyRect.Width" /> &lt; 0 または <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 または <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-164">
              <paramref name="dirtyRect.Width" /> &lt; 0 or <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 or <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="37e83-165">アンマネージ リソースにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-165">for access to unmanaged resources.</span>
          </span>
          <span data-ttu-id="37e83-166">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-166">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="37e83-167">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-167">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Interop.D3DImage" Usage="d3DImage.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37e83-168">この <see cref="T:System.Windows.Interop.D3DImage" /> オブジェクトの変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-168">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="37e83-169">このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-169">When copying dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37e83-170">現在のオブジェクトの変更可能な複製。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-170">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="37e83-171">複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> であった場合でも、<see langword="false" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-171">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-172">このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="37e83-172">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="37e83-173">便宜上は、このメソッドは、厳密に型指定された実装と継承したバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="37e83-173">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="37e83-174">詳細については、「<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="37e83-174">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="37e83-175">複製する対象のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-175">The object to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37e83-176">基本 (アニメーション化されていない) プロパティ値を使用して、インスタンスを、指定した <see cref="T:System.Windows.Freezable" /> の複製 (詳細コピー) にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-176">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Interop.D3DImage" Usage="d3DImage.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37e83-177">この <see cref="T:System.Windows.Interop.D3DImage" /> オブジェクトの変更可能な複製を作成し、このオブジェクトの現在値の詳細コピーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-177">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="37e83-178">リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-178">Resource references, data bindings, and animations are not copied, but their current values are copied.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37e83-179">現在のオブジェクトの変更可能な複製。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-179">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="37e83-180">複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see langword="false" /> プロパティが <see cref="P:System.Windows.Freezable.IsFrozen" /> であった場合でも、<see langword="true" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-180">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-181">このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="37e83-181">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="37e83-182">便宜上は、このメソッドは、厳密に型指定された実装と継承したバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="37e83-182">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="37e83-183">詳細については、「<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="37e83-183">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="37e83-184">複製する <see cref="T:System.Windows.Freezable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-184">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37e83-185">現在のプロパティ値を使用して、インスタンスを、指定した <see cref="T:System.Windows.Freezable" /> の変更可能な複製 (詳細コピー) にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-185">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CopyBackBuffer">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Imaging.BitmapSource CopyBackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Imaging.BitmapSource CopyBackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CopyBackBuffer" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CopyBackBuffer () As BitmapSource" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Imaging::BitmapSource ^ CopyBackBuffer();" />
      <MemberSignature Language="F#" Value="abstract member CopyBackBuffer : unit -&gt; System.Windows.Media.Imaging.BitmapSource&#xA;override this.CopyBackBuffer : unit -&gt; System.Windows.Media.Imaging.BitmapSource" Usage="d3DImage.CopyBackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37e83-186">
            <see cref="T:System.Windows.Interop.D3DImage" /> のソフトウェア コピーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-186">Creates a software copy of the <see cref="T:System.Windows.Interop.D3DImage" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37e83-187">バック バッファーの現在の状態のソフトウェア コピーである <see cref="T:System.Windows.Media.Imaging.BitmapSource" />、バック バッファーを読み込むことができない場合は、<see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-187">A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is a software copy of the current state of the back buffer; otherwise, <see langword="null" /> if the back buffer cannot be read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-188"><xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A>メソッドは、印刷システムなどのクライアントから呼び出されると、<xref:System.Windows.Media.Imaging.RenderTargetBitmap>クラス。</span><span class="sxs-lookup"><span data-stu-id="37e83-188">The <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method is called by clients such as the printing system and the <xref:System.Windows.Media.Imaging.RenderTargetBitmap> class.</span></span>  
  
 <span data-ttu-id="37e83-189">必要に応じてオーバーライドして、<xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A>メソッドはカスタム ロジックの実装を返す別<xref:System.Windows.Media.Imaging.BitmapSource>します。</span><span class="sxs-lookup"><span data-stu-id="37e83-189">Optionally override the <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method to implement custom logic and return a different <xref:System.Windows.Media.Imaging.BitmapSource>.</span></span> <span data-ttu-id="37e83-190">たとえば、プレース ホルダーを返すことができます<xref:System.Windows.Media.Imaging.BitmapSource>場合既定<xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A>の実装を返します`null`します。</span><span class="sxs-lookup"><span data-stu-id="37e83-190">For example, you can return a placeholder <xref:System.Windows.Media.Imaging.BitmapSource> if the default <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="37e83-191">アンマネージ リソースにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-191">for access to unmanaged resources.</span>
          </span>
          <span data-ttu-id="37e83-192">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-192">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="37e83-193">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-193">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="d3DImage.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37e83-194">派生クラスで実装された場合、<see cref="T:System.Windows.Interop.D3DImage" /> 派生クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-194">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37e83-195">新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-195">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-196">派生する場合、<xref:System.Windows.Interop.D3DImage>クラスがオーバーライドする必要があります、<xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A>適切な複製を有効にするメソッド。</span><span class="sxs-lookup"><span data-stu-id="37e83-196">If you derive from the <xref:System.Windows.Interop.D3DImage> class, you must override the <xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A> method to enable correct cloning.</span></span> <span data-ttu-id="37e83-197">既定の実装を実行する`return new D3DImage()`インスタンスが別のクラスである場合は、正しいこれはできません。</span><span class="sxs-lookup"><span data-stu-id="37e83-197">The default implementation performs a `return new D3DImage()`, which will not be correct if the instance is a different class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!D3DImage ()" />
      <MemberSignature Language="F#" Value="abstract member Finalize : unit -&gt; unit&#xA;override this.Finalize : unit -&gt; unit" Usage="d3DImage.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37e83-198">
            <see cref="T:System.Windows.Interop.D3DImage" /> がガベージ コレクションによって回収される前にリソースを解放し、その他のクリーンアップ操作を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-198">Frees resources and performs other cleanup operations before the <see cref="T:System.Windows.Interop.D3DImage" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-199">このメソッドは、<xref:System.Object.Finalize%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="37e83-199">This method overrides <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="37e83-200">アプリケーション コードは、このメソッドを呼び出さないでください。オブジェクトの`Finalize`への呼び出しによって、ガベージ コレクターによって終了処理が無効になっている場合を除き、ガベージ コレクション中にメソッドが自動的に起動、<xref:System.GC.SuppressFinalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="37e83-200">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="37e83-201">詳細については、次を参照してください。 [Finalize メソッドおよびデストラクター](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)、および[Finalize メソッドをオーバーライドする](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))します。</span><span class="sxs-lookup"><span data-stu-id="37e83-201">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="37e83-202">アンマネージ リソースにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-202">for access to unmanaged resources.</span>
          </span>
          <span data-ttu-id="37e83-203">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-203">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="37e83-204">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-204">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override sealed bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="d3DImage.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="37e83-205">実行されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-205">Has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37e83-206">
            <see cref="T:System.Windows.Interop.D3DImage" /> を変更不可能な状態にするか、変更不可能な状態にできるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-206">Makes the <see cref="T:System.Windows.Interop.D3DImage" /> unmodifiable or determines whether it can be made unmodifiable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37e83-207">常に <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-207">
              <see langword="false" /> in all cases.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-208"><xref:System.Windows.Interop.D3DImage>クラスは変更は、常にフロント バッファーの可用性のために可能なため、固定を許可しません。</span><span class="sxs-lookup"><span data-stu-id="37e83-208">The <xref:System.Windows.Interop.D3DImage> class does not allow freezing because changes are always possible due to front buffer availability.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="37e83-209">コピーするインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-209">The instance to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37e83-210">基本プロパティ値 (アニメーション化されていない値) を使用して、インスタンスを、指定した <see cref="T:System.Windows.Freezable" /> の固定された複製にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-210">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="37e83-211">コピーし、固定する <see cref="T:System.Windows.Freezable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-211">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37e83-212">現在のインスタンスを、指定した <see cref="T:System.Windows.Freezable" /> の固定された複製にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-212">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="37e83-213">オブジェクトに、アニメーション化された依存関係プロパティが存在する場合、現在アニメーション化されている値がコピーされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-213">If the object has animated dependency properties, their current animated values are copied.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override sealed double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : double" Usage="System.Windows.Interop.D3DImage.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37e83-214">
            <see cref="T:System.Windows.Interop.D3DImage" /> の高さを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-214">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37e83-215">
            <see cref="T:System.Windows.Interop.D3DImage" /> の高さ (測定単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-215">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span>
          </span>
          <span data-ttu-id="37e83-216">測定単位は 1/96 インチです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-216">A measure unit is 1/96th inch.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-217">値<xref:System.Windows.Interop.D3DImage.Height%2A>への呼び出しで新しいバック バッファーが割り当てられている場合を変更することができます、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="37e83-217">The value of <xref:System.Windows.Interop.D3DImage.Height%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailable">
      <MemberSignature Language="C#" Value="public bool IsFrontBufferAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrontBufferAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrontBufferAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrontBufferAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFrontBufferAvailable : bool" Usage="System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37e83-218">フロント バッファーが存在するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-218">Gets a value that indicates whether a front buffer exists.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37e83-219">フロント バッファーが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-219">
              <see langword="true" /> if a front buffer exists; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-220">場合によっては、フロント バッファーが使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="37e83-220">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="37e83-221">画面のロック、排他 Direct3D アプリケーションを全画面表示、ユーザーの切り替え、またはその他のシステム アクティビティによって、この可用性が不足している可能性があります。</span><span class="sxs-lookup"><span data-stu-id="37e83-221">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="37e83-222">処理することによって WPF アプリケーションに通知このエラーが発生したとき、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="37e83-222">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="37e83-223">アプリケーションが利用できなくなるフロント バッファーに応答する方法は、ソフトウェア レンダリングにフォールバックする WPF が有効になっているかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="37e83-223">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="37e83-224"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッドは、WPF ソフトウェア レンダリングにフォールバックするかどうかを指定するパラメーターを受け取るオーバー ロードを持ちます。</span><span class="sxs-lookup"><span data-stu-id="37e83-224">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="37e83-225">詳細についてで「解説」を参照してください、<xref:System.Windows.Interop.D3DImage>クラス。</span><span class="sxs-lookup"><span data-stu-id="37e83-225">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
<a name="dependencyPropertyInfo_IsFrontBufferAvailable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="37e83-226">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="37e83-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="37e83-227">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="37e83-227">Identifier field</span></span>|<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty>|  
|<span data-ttu-id="37e83-228">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="37e83-228">Metadata properties set to `true`</span></span>|<span data-ttu-id="37e83-229">なし</span><span class="sxs-lookup"><span data-stu-id="37e83-229">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="37e83-230">次のコード例を確認する方法を示しています、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A>合成ターゲットを表示するときにプロパティ。</span><span class="sxs-lookup"><span data-stu-id="37e83-230">The following code example shows how to check the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A> property when rendering the composition target.</span></span> <span data-ttu-id="37e83-231">詳細については、次を参照してください。[チュートリアル: WPF で Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)します。</span><span class="sxs-lookup"><span data-stu-id="37e83-231">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
        <altmember cref="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsFrontBufferAvailableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="F#" Value="member this.IsFrontBufferAvailableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsFrontBufferAvailableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37e83-232">
            <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> プロパティが変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-232">Occurs when the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-233">処理、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>フロント バッファーの状態が変更されたときに通知します。</span><span class="sxs-lookup"><span data-stu-id="37e83-233">Handle the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> to be notified when the status of the front buffer changes.</span></span> <span data-ttu-id="37e83-234">アプリケーションが利用できなくなるフロント バッファーに応答する方法は、ソフトウェア レンダリングにフォールバックする WPF が有効になっているかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="37e83-234">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="37e83-235"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッドは、WPF ソフトウェア レンダリングにフォールバックするかどうかを指定するパラメーターを受け取るオーバー ロードを持ちます。</span><span class="sxs-lookup"><span data-stu-id="37e83-235">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="37e83-236">詳細についてで「解説」を参照してください、<xref:System.Windows.Interop.D3DImage>クラス。</span><span class="sxs-lookup"><span data-stu-id="37e83-236">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFrontBufferAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFrontBufferAvailableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFrontBufferAvailableProperty : System.Windows.DependencyProperty" Usage="System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37e83-237">
            <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-237">Identifies the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Lock();" />
      <MemberSignature Language="F#" Value="member this.Lock : unit -&gt; unit" Usage="d3DImage.Lock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37e83-238">
            <see cref="T:System.Windows.Interop.D3DImage" /> をロックし、バック バッファーでの操作を有効にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-238">Locks the <see cref="T:System.Windows.Interop.D3DImage" /> and enables operations on the back buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-239">呼び出す、<xref:System.Windows.Interop.D3DImage.Lock%2A>メソッドを呼び出すことによって、バック バッファーを変更する、<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>と<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="37e83-239">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the back buffer by calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> and <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> methods.</span></span> <span data-ttu-id="37e83-240">中に、<xref:System.Windows.Interop.D3DImage>がロックされているアプリケーションもにレンダリングできますが、バック バッファーに割り当てられている Direct3D サーフェイス。</span><span class="sxs-lookup"><span data-stu-id="37e83-240">While the <xref:System.Windows.Interop.D3DImage> is locked, your application can also render to the Direct3D surface assigned to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37e83-241"><xref:System.Windows.Interop.D3DImage.Lock%2A>メソッドはレンダリング システムが前面のバッファーを更新するバック バッファーを読み取るときに、ブロックします。</span><span class="sxs-lookup"><span data-stu-id="37e83-241">The <xref:System.Windows.Interop.D3DImage.Lock%2A> method blocks when the rendering system is reading the back buffer to update the front buffer.</span></span> <span data-ttu-id="37e83-242">使用して、<xref:System.Windows.Interop.D3DImage.TryLock%2A>無期限にブロックを回避する方法。</span><span class="sxs-lookup"><span data-stu-id="37e83-242">Use the <xref:System.Windows.Interop.D3DImage.TryLock%2A> method to avoid blocking indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37e83-243">次のコード例を呼び出す方法を示しています、<xref:System.Windows.Interop.D3DImage.Lock%2A>バック バッファーへの更新を有効にするメソッド。</span><span class="sxs-lookup"><span data-stu-id="37e83-243">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to enable updates to the back buffer.</span></span> <span data-ttu-id="37e83-244">詳細については、次を参照してください。[チュートリアル: WPF で Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)します。</span><span class="sxs-lookup"><span data-stu-id="37e83-244">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37e83-245">ロック カウントが <see cref="F:System.UInt32.MaxValue" /> と等しい。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-245">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.Media.ImageMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Metadata As ImageMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageMetadata ^ Metadata { System::Windows::Media::ImageMetadata ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Windows.Media.ImageMetadata" Usage="System.Windows.Interop.D3DImage.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37e83-246">イメージ ソースに関連付けられているメタデータを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-246">Gets the metadata associated with the image source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37e83-247">常に <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-247">
              <see langword="null" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelHeight">
      <MemberSignature Language="C#" Value="public int PixelHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PixelHeight : int" Usage="System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37e83-248">
            <see cref="T:System.Windows.Interop.D3DImage" /> の高さ (ピクセル単位) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-248">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37e83-249">
            <see cref="T:System.Windows.Interop.D3DImage" /> の高さ (ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-249">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-250">値<xref:System.Windows.Interop.D3DImage.PixelHeight%2A>への呼び出しで新しいバック バッファーが割り当てられている場合を変更することができます、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="37e83-250">The value of <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37e83-251">次のコード例を使用する方法を示しています、<xref:System.Windows.Interop.D3DImage.PixelHeight%2A>バック バッファーの変更の領域を指定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="37e83-251">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="37e83-252">詳細については、次を参照してください。[チュートリアル: WPF で Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)します。</span><span class="sxs-lookup"><span data-stu-id="37e83-252">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelWidth" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PixelWidth">
      <MemberSignature Language="C#" Value="public int PixelWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PixelWidth : int" Usage="System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37e83-253">
            <see cref="T:System.Windows.Interop.D3DImage" /> の幅 (ピクセル単位) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-253">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37e83-254">
            <see cref="T:System.Windows.Interop.D3DImage" /> の幅 (ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-254">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-255">値<xref:System.Windows.Interop.D3DImage.PixelWidth%2A>への呼び出しで新しいバック バッファーが割り当てられている場合を変更することができます、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="37e83-255">The value of <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37e83-256">次のコード例を使用する方法を示しています、<xref:System.Windows.Interop.D3DImage.PixelWidth%2A>バック バッファーの変更の領域を指定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="37e83-256">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="37e83-257">詳細については、次を参照してください。[チュートリアル: WPF で Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)します。</span><span class="sxs-lookup"><span data-stu-id="37e83-257">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelHeight" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBackBuffer">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="37e83-258">バック バッファーのソースとして、Direct3D サーフェイスを割り当てます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-258">Assigns a Direct3D surface as the source of the back buffer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="F#" Value="member this.SetBackBuffer : System.Windows.Interop.D3DResourceType * nativeint -&gt; unit" Usage="d3DImage.SetBackBuffer (backBufferType, backBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" />
        <Parameter Name="backBuffer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="backBufferType">
          <span data-ttu-id="37e83-259">Direct3D サーフェイスの種類です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-259">The type of Direct3D surface.</span>
          </span>
          <span data-ttu-id="37e83-260">有効な <see cref="T:System.Windows.Interop.D3DResourceType" /> を指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-260">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span>
          </span>
        </param>
        <param name="backBuffer">
          <span data-ttu-id="37e83-261">バック バッファーとして割り当てるための Direct3D サーフェイス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-261">The Direct3D surface to assign as the back buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37e83-262">バック バッファーのソースとして、Direct3D サーフェイスを割り当てます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-262">Assigns a Direct3D surface as the source of the back buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-263">呼び出す、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>バック バッファーを Direct3D サーフェイスを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="37e83-263">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37e83-264">パフォーマンスは、Direct3D サーフェイスの設定に大きく依存します。</span><span class="sxs-lookup"><span data-stu-id="37e83-264">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="37e83-265">詳細については、次を参照してください。 [Direct3D9 および WPF の相互運用性のパフォーマンスに関する考慮事項](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)します。</span><span class="sxs-lookup"><span data-stu-id="37e83-265">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
 <span data-ttu-id="37e83-266">呼び出す、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29>オーバー ロードが呼び出し元と同じですが、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>オーバー ロード、`enableSoftwareFallback`パラメーターに設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="37e83-266">Calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload is identical to calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`.</span></span> <span data-ttu-id="37e83-267">呼び出すと<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29>呼び出したり<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>で、`enableSoftwareFallback`パラメーターに設定`false`、レンダリング システムは、フロント バッファーが使用できなくなったとは何も表示したときにバック バッファーへの参照を解放します。</span><span class="sxs-lookup"><span data-stu-id="37e83-267">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> or call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="37e83-268">フロント バッファーが再び使用可能、レンダリング システムが発生、 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> WPF アプリケーションに通知するイベントです。</span><span class="sxs-lookup"><span data-stu-id="37e83-268">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="37e83-269">イベント ハンドラーを作成することができます、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>イベントを有効な Direct3D サーフェイスを使用してレンダリングを再起動します。</span><span class="sxs-lookup"><span data-stu-id="37e83-269">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="37e83-270">レンダリングを再起動して、呼び出す必要がある<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>します。</span><span class="sxs-lookup"><span data-stu-id="37e83-270">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="37e83-271">次の一覧が必要なバック バッファーの設定を示しています、`IDirect3DSurface9`型。</span><span class="sxs-lookup"><span data-stu-id="37e83-271">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="37e83-272">`D3DFMT_A8R8G8B8` または `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="37e83-272">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="37e83-273">上のマルチ サンプリングが許可されている`IDirect3DSurface9Ex`のみ表示されます。</span><span class="sxs-lookup"><span data-stu-id="37e83-273">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37e83-274">次のコード例を呼び出す方法を示しています、 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Direct3D サーフェイスを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="37e83-274">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface.</span></span> <span data-ttu-id="37e83-275">詳細については、次を参照してください。[チュートリアル: WPF で Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)します。</span><span class="sxs-lookup"><span data-stu-id="37e83-275">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37e83-276">
            <see cref="T:System.Windows.Interop.D3DImage" /> は <see cref="M:System.Windows.Interop.D3DImage.Lock" /> メソッドまたは <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> メソッドへの呼び出しにより、ロックされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-276">The <see cref="T:System.Windows.Interop.D3DImage" /> has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="37e83-277">
            <paramref name="backBufferType" /> は有効な <see cref="T:System.Windows.Interop.D3DResourceType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-277">
              <paramref name="backBufferType" /> is not a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37e83-278">
            <paramref name="backBuffer" /> の作成パラメーターが <paramref name="backBufferType" /> の要求を満たしていない、または <paramref name="backBuffer" /> デバイスが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-278">The creation parameters for <paramref name="backBuffer" /> do not meet the requirements for the <paramref name="backBufferType" />-or-The <paramref name="backBuffer" /> device is not valid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="37e83-279">アンマネージ リソースにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-279">for access to unmanaged resources.</span>
          </span>
          <span data-ttu-id="37e83-280">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-280">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="37e83-281">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-281">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer, bool enableSoftwareFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr, enableSoftwareFallback As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="F#" Value="member this.SetBackBuffer : System.Windows.Interop.D3DResourceType * nativeint * bool -&gt; unit" Usage="d3DImage.SetBackBuffer (backBufferType, backBuffer, enableSoftwareFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" />
        <Parameter Name="backBuffer" Type="System.IntPtr" />
        <Parameter Name="enableSoftwareFallback" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="backBufferType">
          <span data-ttu-id="37e83-282">Direct3D サーフェイスの種類です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-282">The type of Direct3D surface.</span>
          </span>
          <span data-ttu-id="37e83-283">有効な <see cref="T:System.Windows.Interop.D3DResourceType" /> を指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-283">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span>
          </span>
        </param>
        <param name="backBuffer">
          <span data-ttu-id="37e83-284">バック バッファーとして割り当てるための Direct3D サーフェイス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-284">The Direct3D surface to assign as the back buffer.</span>
          </span>
        </param>
        <param name="enableSoftwareFallback">
          <span data-ttu-id="37e83-285">ソフトウェア レンダリングでフォールバックする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-285">
              <see langword="true" /> to fall back on software rendering; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37e83-286">バック バッファーのソースとして、Direct3D サーフェイスを割り当てます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-286">Assigns a Direct3D surface as the source of the back buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-287">呼び出すと、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29>オーバー ロードを呼び出したり、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>オーバー ロード、`enableSoftwareFallback`パラメーターに設定`false`、フロント バッファーが使用できなくなったとは何もレンダリング システムがバック バッファーへの参照を解放表示されます。</span><span class="sxs-lookup"><span data-stu-id="37e83-287">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="37e83-288">フロント バッファーが再び使用可能、レンダリング システムが発生、 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> WPF アプリケーションに通知するイベントです。</span><span class="sxs-lookup"><span data-stu-id="37e83-288">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="37e83-289">イベント ハンドラーを作成することができます、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>イベントを有効な Direct3D サーフェイスを使用してレンダリングを再起動します。</span><span class="sxs-lookup"><span data-stu-id="37e83-289">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="37e83-290">レンダリングを再起動して、呼び出す必要がある<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>します。</span><span class="sxs-lookup"><span data-stu-id="37e83-290">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="37e83-291">呼び出すと<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>で、`enableSoftwareFallback`パラメーターに設定`true`、レンダリング システムを呼び出す必要がないフロント バッファーが使用不能になったときにバック バッファーへの参照を保持<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>フロント バッファーが場合使用可能なもう一度です。</span><span class="sxs-lookup"><span data-stu-id="37e83-291">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="37e83-292">場所、ユーザーのデバイスが使用できなくなった状況である可能性があります。</span><span class="sxs-lookup"><span data-stu-id="37e83-292">There may be situations where the user’s device becomes unavailable.</span></span>  <span data-ttu-id="37e83-293">発生すると、呼び出す<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>バック バッファーへの WPF の参照を解放します。</span><span class="sxs-lookup"><span data-stu-id="37e83-293">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF’s reference to the back buffer.</span></span>  <span data-ttu-id="37e83-294">デバイスをリセットする必要がある場合は、呼び出す<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>で`backBuffer`に設定`null`を呼び出して<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>でもう一度`backBuffer`Direct3D サーフェイスを有効に設定します。</span><span class="sxs-lookup"><span data-stu-id="37e83-294">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with `backBuffer` set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
 <span data-ttu-id="37e83-295">次の一覧が必要なバック バッファーの設定を示しています、`IDirect3DSurface9`型。</span><span class="sxs-lookup"><span data-stu-id="37e83-295">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="37e83-296">`D3DFMT_A8R8G8B8` または `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="37e83-296">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="37e83-297">上のマルチ サンプリングが許可されている`IDirect3DSurface9Ex`のみ表示されます。</span><span class="sxs-lookup"><span data-stu-id="37e83-297">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryLock">
      <MemberSignature Language="C#" Value="public bool TryLock (System.Windows.Duration timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryLock(valuetype System.Windows.Duration timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryLock (timeout As Duration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryLock(System::Windows::Duration timeout);" />
      <MemberSignature Language="F#" Value="member this.TryLock : System.Windows.Duration -&gt; bool" Usage="d3DImage.TryLock timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="37e83-298">取得したロックを待機する期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-298">The duration to wait for the lock to be acquired.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37e83-299">
            <see cref="T:System.Windows.Interop.D3DImage" /> のロックを試行し、指定された期間待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-299">Attempts to lock the <see cref="T:System.Windows.Interop.D3DImage" /> and waits for the specified duration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37e83-300">ロックが取得された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-300">
              <see langword="true" /> if the lock was acquired; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="37e83-301">
            <paramref name="timeout" /> が <see cref="P:System.Windows.Duration.Automatic" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-301">
              <paramref name="timeout" /> is set to <see cref="P:System.Windows.Duration.Automatic" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37e83-302">ロック カウントが <see cref="F:System.UInt32.MaxValue" /> と等しい。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-302">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public void Unlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Unlock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unlock();" />
      <MemberSignature Language="F#" Value="member this.Unlock : unit -&gt; unit" Usage="d3DImage.Unlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37e83-303">
            <see cref="T:System.Windows.Interop.D3DImage" /> のロック カウントをデクリメントします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-303">Decrements the lock count for the <see cref="T:System.Windows.Interop.D3DImage" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-304">ロック カウントをすると、<xref:System.Windows.Interop.D3DImage>がゼロになる、<xref:System.Windows.Interop.D3DImage>完全にロックが解除されます。</span><span class="sxs-lookup"><span data-stu-id="37e83-304">When the lock count for the <xref:System.Windows.Interop.D3DImage> reaches zero, the <xref:System.Windows.Interop.D3DImage> is fully unlocked.</span></span> <span data-ttu-id="37e83-305"><xref:System.Windows.Interop.D3DImage>イメージには、前の呼び出しで指定された領域が変更された場合は、レンダリングのマークが付いて、<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="37e83-305">The <xref:System.Windows.Interop.D3DImage> is marked for rendering if the image has changed areas that were specified by previous calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="37e83-306">変更をコミットしてレンダリングが発生した、追加の呼び出し、<xref:System.Windows.Interop.D3DImage.Lock%2A>レンダーのスレッドが前面のバッファーにバック バッファーの内容をコピーするまでブロックするメソッド。</span><span class="sxs-lookup"><span data-stu-id="37e83-306">When the changes are committed and rendering occurs, additional calls to the <xref:System.Windows.Interop.D3DImage.Lock%2A> method block until the render thread has copied the contents of the back buffer to the front buffer.</span></span> <span data-ttu-id="37e83-307">この同期は、解除を行うなどの表示の成果物を回避できます。</span><span class="sxs-lookup"><span data-stu-id="37e83-307">This synchronization avoids display artifacts, such as tearing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37e83-308">中に、Direct3D サーフェイスを更新すれば、<xref:System.Windows.Interop.D3DImage>ロックが解除されます。</span><span class="sxs-lookup"><span data-stu-id="37e83-308">Do not update the Direct3D surface while the <xref:System.Windows.Interop.D3DImage> is unlocked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37e83-309">次のコード例を呼び出す方法を示しています、<xref:System.Windows.Interop.D3DImage.Unlock%2A>フロント バッファーに更新されたバック バッファーをコピーする方法。</span><span class="sxs-lookup"><span data-stu-id="37e83-309">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the updated back buffer to the front buffer.</span></span> <span data-ttu-id="37e83-310">詳細については、次を参照してください。[チュートリアル: WPF で Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)します。</span><span class="sxs-lookup"><span data-stu-id="37e83-310">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override sealed double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : double" Usage="System.Windows.Interop.D3DImage.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37e83-311">
            <see cref="T:System.Windows.Interop.D3DImage" /> の幅を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-311">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37e83-312">
            <see cref="T:System.Windows.Interop.D3DImage" /> の幅 (測定単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-312">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span>
          </span>
          <span data-ttu-id="37e83-313">測定単位は 1/96 インチです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37e83-313">A measure unit is 1/96th inch.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37e83-314">値<xref:System.Windows.Interop.D3DImage.Width%2A>への呼び出しで新しいバック バッファーが割り当てられている場合を変更することができます、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="37e83-314">The value of <xref:System.Windows.Interop.D3DImage.Width%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
  </Members>
</Type>