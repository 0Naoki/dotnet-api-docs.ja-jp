<Type Name="D3DImage" FullName="System.Windows.Interop.D3DImage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c504bb6231c89c4de2fdfed533ebc10be146f539" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36504247" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class D3DImage : System.Windows.Media.ImageSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi D3DImage extends System.Windows.Media.ImageSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.D3DImage" />
  <TypeSignature Language="VB.NET" Value="Public Class D3DImage&#xA;Inherits ImageSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class D3DImage : System::Windows::Media::ImageSource" />
  <TypeSignature Language="F#" Value="type D3DImage = class&#xA;    inherit ImageSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.ImageSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="25bc8-101">An <see cref="T:System.Windows.Media.ImageSource" /> that displays a user-created Direct3D surface.</span>
      <span class="sxs-lookup">
        <span data-stu-id="25bc8-101">An <see cref="T:System.Windows.Media.ImageSource" /> that displays a user-created Direct3D surface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-102">使用して、 <xref:System.Windows.Interop.D3DImage> Windows Presentation Foundation (WPF) アプリケーションで Direct3D コンテンツをホストするクラス。</span><span class="sxs-lookup"><span data-stu-id="25bc8-102">Use the <xref:System.Windows.Interop.D3DImage> class to host Direct3D content in a Windows Presentation Foundation (WPF) application.</span></span>  
  
 <span data-ttu-id="25bc8-103">呼び出す、<xref:System.Windows.Interop.D3DImage.Lock%2A>によって表示される Direct3D の内容を変更するメソッドを<xref:System.Windows.Interop.D3DImage>です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-103">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the Direct3D content displayed by the <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="25bc8-104">呼び出す、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>する Direct3D のサーフェイスを割り当てる方法、<xref:System.Windows.Interop.D3DImage>です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-104">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to a <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="25bc8-105">呼び出す、 <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> Direct3D サーフェイスへの更新プログラムを追跡するメソッド。</span><span class="sxs-lookup"><span data-stu-id="25bc8-105">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to track updates to the Direct3D surface.</span></span> <span data-ttu-id="25bc8-106">呼び出す、<xref:System.Windows.Interop.D3DImage.Unlock%2A>変更された領域を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="25bc8-106">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to display the changed areas.</span></span>  
  
 <span data-ttu-id="25bc8-107"><xref:System.Windows.Interop.D3DImage>クラスと呼ばれる 2 つのディスプレイ バッファーを管理、*バック バッファー*と*フロント バッファー*です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-107">The <xref:System.Windows.Interop.D3DImage> class manages two display buffers, which are called the *back buffer* and the *front buffer*.</span></span> <span data-ttu-id="25bc8-108">バック バッファーは、Direct3D サーフェイスです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-108">The back buffer is your Direct3D surface.</span></span>  <span data-ttu-id="25bc8-109">バック バッファーへの変更はフォワード バッファーにコピー フロントを呼び出すとき、<xref:System.Windows.Interop.D3DImage.Unlock%2A>メソッド、ハードウェアで表示されます。</span><span class="sxs-lookup"><span data-stu-id="25bc8-109">Changes to the back buffer are copied forward to the front buffer when you call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method, where it is displayed on the hardware.</span></span> <span data-ttu-id="25bc8-110">場合によっては、フロントのバッファーが使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="25bc8-110">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="25bc8-111">この可用性の欠如は、画面のロック、排他 Direct3D アプリケーションの全画面表示、ユーザーの切り替え、または他のシステム アクティビティによって可能性があります。</span><span class="sxs-lookup"><span data-stu-id="25bc8-111">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="25bc8-112">処理することにより、WPF アプリケーションが通知これが発生した場合、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="25bc8-112">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="25bc8-113">アプリケーションが利用できなくなるフロントのバッファーに応答する方法は、ソフトウェア レンダリングにフォールバックする WPF が有効になっているかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="25bc8-113">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="25bc8-114"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッドは、WPF ソフトウェア レンダリングにフォールバックするかどうかを指定するパラメーターを受け取るオーバー ロードを持ちます。</span><span class="sxs-lookup"><span data-stu-id="25bc8-114">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-does-not-fall-back-to-software-rendering"></a><span data-ttu-id="25bc8-115">WPF はフォールバックされないソフトウェア レンダリング時に使用できなくなったフロント バッファーへの応答</span><span class="sxs-lookup"><span data-stu-id="25bc8-115">Responding to an Unavailable Front Buffer when WPF Does not Fall Back to Software Rendering</span></span>  
 <span data-ttu-id="25bc8-116">呼び出すと、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29>オーバー ロードを呼び出したり、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>を持つオーバー ロード、`enableSoftwareFallback`パラメーターに設定`false`、フロントのバッファーが使用できなくなったとは何もレンダリング システムがバック バッファーへの参照を解放表示されます。</span><span class="sxs-lookup"><span data-stu-id="25bc8-116">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="25bc8-117">レンダリング システムを発生させますフロントのバッファーを再度使用できる場合、 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> WPF アプリケーションに通知するイベントです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-117">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="25bc8-118">イベント ハンドラーを作成することができます、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>イベントを有効な Direct3D 画面を使用してレンダリングを再起動します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-118">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="25bc8-119">再起動するレンダリングを呼び出す必要があります<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-119">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-falls-back-to-software-rendering"></a><span data-ttu-id="25bc8-120">WPF がバックアップ ソフトウェア レンダリング時に使用できなくなったフロント バッファーへの応答</span><span class="sxs-lookup"><span data-stu-id="25bc8-120">Responding to an Unavailable Front Buffer when WPF Falls Back to Software Rendering</span></span>  
 <span data-ttu-id="25bc8-121">呼び出すと、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>を持つオーバー ロード、`enableSoftwareFallback`パラメーターに設定`true`、レンダリング時に維持バック バッファーへの参照を呼び出す必要はありませんので、フロントのバッファーが使用できなくなった、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>とき前面バッファーが再び使用可能です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-121">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="25bc8-122">ユーザーのデバイスが使用できなくなった状況である可能性があります。</span><span class="sxs-lookup"><span data-stu-id="25bc8-122">There may be situations where the user’s device becomes unavailable.</span></span>  <span data-ttu-id="25bc8-123">発生すると、呼び出す<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>バック バッファーへの WPF の参照を解放します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-123">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF’s reference to the back buffer.</span></span>  <span data-ttu-id="25bc8-124">デバイスをリセットする必要がある場合は、呼び出す<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>で、`backBuffer`パラメーターに設定`null`、およびを呼び出す<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>でもう一度`backBuffer`Direct3D 画面を有効に設定します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-124">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with the `backBuffer` parameter set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25bc8-125">パフォーマンスは、Direct3D 画面の設定に大幅に依存します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-125">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="25bc8-126">詳細については、次を参照してください。 [Direct3D9 と WPF の相互運用性のパフォーマンスに関する考慮事項](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-126">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25bc8-127"><xref:System.Windows.Interop.D3DImage>クラスに表示されない Direct3D コンテンツ WPF ソフトウェアでレンダリングなど、リモート デスクトップ接続経由でない限り、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>指定と`true`の`enableSoftwareFallback`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="25bc8-127">The <xref:System.Windows.Interop.D3DImage> class does not display Direct3D content when WPF renders in software, such as over a Remote Desktop connection, unless you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> and specify `true` for the `enableSoftwareFallback` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25bc8-128">次のコード例は、宣言する方法を示します、 <xref:System.Windows.Interop.D3DImage> XAML でします。</span><span class="sxs-lookup"><span data-stu-id="25bc8-128">The following code example shows how to declare a <xref:System.Windows.Interop.D3DImage> in XAML.</span></span> <span data-ttu-id="25bc8-129">マップする必要があります、<xref:System.Windows.Interop>名前空間、既定の XAML 名前空間に含まれていないためです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-129">You must map the <xref:System.Windows.Interop> namespace, because it is not included in the default XAML namespaces.</span></span> <span data-ttu-id="25bc8-130">詳細については、次を参照してください。[チュートリアル: wpf Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-130">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-xaml[System.Windows.Interop.D3DImage#10](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="25bc8-131">アンマネージ リソースにアクセスします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="25bc8-131">for access to unmanaged resources.</span>
      </span>
      <span data-ttu-id="25bc8-132">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span>
      <span class="sxs-lookup">
        <span data-stu-id="25bc8-132">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="25bc8-133">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="25bc8-133">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-134">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-134">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-135">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-135">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-136">既定のディスプレイの解像度は、1/96 インチです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-136">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="25bc8-137">アンマネージ リソースにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-137">for access to unmanaged resources.</span>
          </span>
          <span data-ttu-id="25bc8-138">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-138">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="25bc8-139">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-139">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage (double dpiX, double dpiY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 dpiX, float64 dpiY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dpiX As Double, dpiY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage(double dpiX, double dpiY);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.D3DImage : double * double -&gt; System.Windows.Interop.D3DImage" Usage="new System.Windows.Interop.D3DImage (dpiX, dpiY)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dpiX" Type="System.Double" />
        <Parameter Name="dpiY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dpiX">
          <span data-ttu-id="25bc8-140">The display resolution on the x-axis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-140">The display resolution on the x-axis.</span>
          </span>
        </param>
        <param name="dpiY">
          <span data-ttu-id="25bc8-141">The display resolution on the y-axis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-141">The display resolution on the y-axis.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25bc8-142">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class with the specified display resolution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-142">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class with the specified display resolution.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-143">既定のディスプレイの解像度は、1/96 インチです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-143">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="25bc8-144">
            <paramref name="dpiX" /> or <paramref name="dpiY" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-144">
              <paramref name="dpiX" /> or <paramref name="dpiY" /> is less than zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="25bc8-145">アンマネージ リソースにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-145">for access to unmanaged resources.</span>
          </span>
          <span data-ttu-id="25bc8-146">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-146">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="25bc8-147">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-147">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
      </Docs>
    </Member>
    <Member MemberName="AddDirtyRect">
      <MemberSignature Language="C#" Value="public void AddDirtyRect (System.Windows.Int32Rect dirtyRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDirtyRect(valuetype System.Windows.Int32Rect dirtyRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDirtyRect (dirtyRect As Int32Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDirtyRect(System::Windows::Int32Rect dirtyRect);" />
      <MemberSignature Language="F#" Value="member this.AddDirtyRect : System.Windows.Int32Rect -&gt; unit" Usage="d3DImage.AddDirtyRect dirtyRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirtyRect" Type="System.Windows.Int32Rect" />
      </Parameters>
      <Docs>
        <param name="dirtyRect">
          <span data-ttu-id="25bc8-148">An <see cref="T:System.Windows.Int32Rect" /> that represents the area that changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-148">An <see cref="T:System.Windows.Int32Rect" /> that represents the area that changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25bc8-149">Specifies the area of the back buffer that changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-149">Specifies the area of the back buffer that changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-150">呼び出す、<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>メソッドをコードがバック バッファーに加えられた変更を示します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-150">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to indicate changes your code has made to the back buffer.</span></span> <span data-ttu-id="25bc8-151">レンダリングするバック バッファーの変更の領域対応する変更領域をいる必要があります、<xref:System.Windows.Interop.D3DImage>です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-151">To be rendered, the changed area on the back buffer must have a corresponding changed area on the <xref:System.Windows.Interop.D3DImage>.</span></span>  
  
 <span data-ttu-id="25bc8-152">呼び出す、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>と<xref:System.Windows.Interop.D3DImage.Lock%2A>メソッドを呼び出す前に、<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-152">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> and <xref:System.Windows.Interop.D3DImage.Lock%2A> methods before calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="25bc8-153">呼び出す、<xref:System.Windows.Interop.D3DImage.Unlock%2A>フロント バッファーに変更された領域をコピーします。</span><span class="sxs-lookup"><span data-stu-id="25bc8-153">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the changed areas to the front buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25bc8-154">いくつかの呼び出し後、<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>メソッド、変更された領域は、1 つの領域にマージされます。</span><span class="sxs-lookup"><span data-stu-id="25bc8-154">After a few calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method, the changed areas are merged into a single area.</span></span> <span data-ttu-id="25bc8-155">つまり、有効なデータ変更された領域の外部でする必要があります。</span><span class="sxs-lookup"><span data-stu-id="25bc8-155">This means you must have valid data outside of the changed areas.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25bc8-156">次のコード例を呼び出す方法を示します、<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>バック バッファーに変更された領域を指定します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-156">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to specify the changed region in the back buffer.</span></span> <span data-ttu-id="25bc8-157">詳細については、次を参照してください。[チュートリアル: wpf Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-157">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25bc8-158">The bitmap has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-158">The bitmap has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span>
          </span>
          <span data-ttu-id="25bc8-159">-or-  The back buffer has not been assigned by a call to the <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-159">-or-  The back buffer has not been assigned by a call to the <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="25bc8-160">One or more of the following conditions is true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-160">One or more of the following conditions is true.</span>
          </span>
          <span data-ttu-id="25bc8-161">
            <paramref name="dirtyRect.X" /> &lt; 0  <paramref name="dirtyRect.Y" /> &lt; 0  <paramref name="dirtyRect.Width" /> &lt; 0 or <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 or <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-161">
              <paramref name="dirtyRect.X" /> &lt; 0  <paramref name="dirtyRect.Y" /> &lt; 0  <paramref name="dirtyRect.Width" /> &lt; 0 or <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 or <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="25bc8-162">アンマネージ リソースにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-162">for access to unmanaged resources.</span>
          </span>
          <span data-ttu-id="25bc8-163">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-163">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="25bc8-164">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-164">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Interop.D3DImage" Usage="d3DImage.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-165">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-165">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="25bc8-166">When copying dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-166">When copying dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25bc8-167">A modifiable clone of the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-167">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="25bc8-168">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-168">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-169">変更可能なコピーを生成するためにこのメソッドが使用される固定された<xref:System.Windows.Freezable>オブジェクト (または any<xref:System.Windows.Freezable>オブジェクト)。</span><span class="sxs-lookup"><span data-stu-id="25bc8-169">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="25bc8-170">便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="25bc8-170">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="25bc8-171">詳細については、「<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="25bc8-171">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="25bc8-172">The object to clone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-172">The object to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25bc8-173">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-173">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Interop.D3DImage" Usage="d3DImage.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-174">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-174">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="25bc8-175">Resource references, data bindings, and animations are not copied, but their current values are copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-175">Resource references, data bindings, and animations are not copied, but their current values are copied.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25bc8-176">A modifiable clone of the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-176">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="25bc8-177">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-177">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-178">変更可能なコピーを生成するためにこのメソッドが使用される固定された<xref:System.Windows.Freezable>オブジェクト (または any<xref:System.Windows.Freezable>オブジェクト)。</span><span class="sxs-lookup"><span data-stu-id="25bc8-178">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="25bc8-179">便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="25bc8-179">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="25bc8-180">詳細については、「<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="25bc8-180">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="25bc8-181">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-181">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25bc8-182">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-182">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CopyBackBuffer">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Imaging.BitmapSource CopyBackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Imaging.BitmapSource CopyBackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CopyBackBuffer" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CopyBackBuffer () As BitmapSource" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Imaging::BitmapSource ^ CopyBackBuffer();" />
      <MemberSignature Language="F#" Value="abstract member CopyBackBuffer : unit -&gt; System.Windows.Media.Imaging.BitmapSource&#xA;override this.CopyBackBuffer : unit -&gt; System.Windows.Media.Imaging.BitmapSource" Usage="d3DImage.CopyBackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-183">Creates a software copy of the <see cref="T:System.Windows.Interop.D3DImage" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-183">Creates a software copy of the <see cref="T:System.Windows.Interop.D3DImage" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25bc8-184">A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is a software copy of the current state of the back buffer; otherwise, <see langword="null" /> if the back buffer cannot be read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-184">A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is a software copy of the current state of the back buffer; otherwise, <see langword="null" /> if the back buffer cannot be read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-185"><xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A>メソッドは、印刷システムなどのクライアントと<xref:System.Windows.Media.Imaging.RenderTargetBitmap>クラスです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-185">The <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method is called by clients such as the printing system and the <xref:System.Windows.Media.Imaging.RenderTargetBitmap> class.</span></span>  
  
 <span data-ttu-id="25bc8-186">必要に応じてオーバーライドして、<xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A>をカスタム ロジックを実装し、異なるを返すメソッドを<xref:System.Windows.Media.Imaging.BitmapSource>です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-186">Optionally override the <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method to implement custom logic and return a different <xref:System.Windows.Media.Imaging.BitmapSource>.</span></span> <span data-ttu-id="25bc8-187">たとえば、プレース ホルダーを返すことができます<xref:System.Windows.Media.Imaging.BitmapSource>場合、既定<xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A>実装を返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-187">For example, you can return a placeholder <xref:System.Windows.Media.Imaging.BitmapSource> if the default <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="25bc8-188">アンマネージ リソースにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-188">for access to unmanaged resources.</span>
          </span>
          <span data-ttu-id="25bc8-189">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-189">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="25bc8-190">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-190">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="d3DImage.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-191">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-191">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25bc8-192">The new instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-192">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-193">派生した場合、<xref:System.Windows.Interop.D3DImage>クラスがオーバーライドする必要があります、<xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A>正しい複製を有効にします。</span><span class="sxs-lookup"><span data-stu-id="25bc8-193">If you derive from the <xref:System.Windows.Interop.D3DImage> class, you must override the <xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A> method to enable correct cloning.</span></span> <span data-ttu-id="25bc8-194">既定の実装を実行、`return new D3DImage()`インスタンスが別のクラスである場合は、正しいこれはできません。</span><span class="sxs-lookup"><span data-stu-id="25bc8-194">The default implementation performs a `return new D3DImage()`, which will not be correct if the instance is a different class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!D3DImage ()" />
      <MemberSignature Language="F#" Value="abstract member Finalize : unit -&gt; unit&#xA;override this.Finalize : unit -&gt; unit" Usage="d3DImage.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-195">Frees resources and performs other cleanup operations before the <see cref="T:System.Windows.Interop.D3DImage" /> is reclaimed by garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-195">Frees resources and performs other cleanup operations before the <see cref="T:System.Windows.Interop.D3DImage" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-196">このメソッドは<xref:System.Object.Finalize%2A>します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-196">This method overrides <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="25bc8-197">アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの`Finalize`への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、ガベージ コレクション中にメソッドが自動的に起動、<xref:System.GC.SuppressFinalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-197">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="25bc8-198">詳細については、次を参照してください。 [Finalize メソッドおよびデストラクター](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)、および[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-198">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="25bc8-199">アンマネージ リソースにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-199">for access to unmanaged resources.</span>
          </span>
          <span data-ttu-id="25bc8-200">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-200">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="25bc8-201">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-201">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override sealed bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="d3DImage.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="25bc8-202">Has no effect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-202">Has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25bc8-203">Makes the <see cref="T:System.Windows.Interop.D3DImage" /> unmodifiable or determines whether it can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-203">Makes the <see cref="T:System.Windows.Interop.D3DImage" /> unmodifiable or determines whether it can be made unmodifiable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25bc8-204">
            <see langword="false" /> in all cases.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-204">
              <see langword="false" /> in all cases.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-205"><xref:System.Windows.Interop.D3DImage>クラスにために変更が可能フロント バッファーの可用性のため常に固定することができません。</span><span class="sxs-lookup"><span data-stu-id="25bc8-205">The <xref:System.Windows.Interop.D3DImage> class does not allow freezing because changes are always possible due to front buffer availability.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="25bc8-206">The instance to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-206">The instance to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25bc8-207">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-207">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="25bc8-208">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-208">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25bc8-209">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-209">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="25bc8-210">If the object has animated dependency properties, their current animated values are copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-210">If the object has animated dependency properties, their current animated values are copied.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override sealed double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : double" Usage="System.Windows.Interop.D3DImage.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-211">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-211">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25bc8-212">高さ、<see cref="T:System.Windows.Interop.D3DImage" />の単位を測定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-212">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span>
          </span>
          <span data-ttu-id="25bc8-213">測定単位は、1/96 インチです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-213">A measure unit is 1/96th inch.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-214">値<xref:System.Windows.Interop.D3DImage.Height%2A>への呼び出しによって新しいバック バッファーが割り当てられている場合を変更することができます、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-214">The value of <xref:System.Windows.Interop.D3DImage.Height%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailable">
      <MemberSignature Language="C#" Value="public bool IsFrontBufferAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrontBufferAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrontBufferAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrontBufferAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFrontBufferAvailable : bool" Usage="System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-215">Gets a value that indicates whether a front buffer exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-215">Gets a value that indicates whether a front buffer exists.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25bc8-216">
            <see langword="true" /> フロント バッファーが存在する場合それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-216">
              <see langword="true" /> if a front buffer exists; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-217">場合によっては、フロントのバッファーが使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="25bc8-217">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="25bc8-218">この可用性の欠如は、画面のロック、排他 Direct3D アプリケーションの全画面表示、ユーザーの切り替え、または他のシステム アクティビティによって可能性があります。</span><span class="sxs-lookup"><span data-stu-id="25bc8-218">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="25bc8-219">処理することにより、WPF アプリケーションが通知これが発生した場合、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="25bc8-219">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="25bc8-220">アプリケーションが利用できなくなるフロントのバッファーに応答する方法は、ソフトウェア レンダリングにフォールバックする WPF が有効になっているかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="25bc8-220">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="25bc8-221"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッドは、WPF ソフトウェア レンダリングにフォールバックするかどうかを指定するパラメーターを受け取るオーバー ロードを持ちます。</span><span class="sxs-lookup"><span data-stu-id="25bc8-221">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="25bc8-222">詳細についてで「解説」を参照してください、<xref:System.Windows.Interop.D3DImage>クラスです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-222">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
<a name="dependencyPropertyInfo_IsFrontBufferAvailable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="25bc8-223">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="25bc8-223">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="25bc8-224">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="25bc8-224">Identifier field</span></span>|<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty>|  
|<span data-ttu-id="25bc8-225">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="25bc8-225">Metadata properties set to `true`</span></span>|<span data-ttu-id="25bc8-226">なし</span><span class="sxs-lookup"><span data-stu-id="25bc8-226">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="25bc8-227">次のコード例を確認する方法を示しています、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A>プロパティ構成のターゲットを表示するときにします。</span><span class="sxs-lookup"><span data-stu-id="25bc8-227">The following code example shows how to check the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A> property when rendering the composition target.</span></span> <span data-ttu-id="25bc8-228">詳細については、次を参照してください。[チュートリアル: wpf Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-228">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
        <altmember cref="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsFrontBufferAvailableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="F#" Value="member this.IsFrontBufferAvailableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsFrontBufferAvailableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-229">Occurs when the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-229">Occurs when the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-230">処理、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>フロント バッファーの状態が変わるときに通知します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-230">Handle the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> to be notified when the status of the front buffer changes.</span></span> <span data-ttu-id="25bc8-231">アプリケーションが利用できなくなるフロントのバッファーに応答する方法は、ソフトウェア レンダリングにフォールバックする WPF が有効になっているかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="25bc8-231">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="25bc8-232"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッドは、WPF ソフトウェア レンダリングにフォールバックするかどうかを指定するパラメーターを受け取るオーバー ロードを持ちます。</span><span class="sxs-lookup"><span data-stu-id="25bc8-232">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="25bc8-233">詳細についてで「解説」を参照してください、<xref:System.Windows.Interop.D3DImage>クラスです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-233">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFrontBufferAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFrontBufferAvailableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFrontBufferAvailableProperty : System.Windows.DependencyProperty" Usage="System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-234">Identifies the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-234">Identifies the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Lock();" />
      <MemberSignature Language="F#" Value="member this.Lock : unit -&gt; unit" Usage="d3DImage.Lock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-235">Locks the <see cref="T:System.Windows.Interop.D3DImage" /> and enables operations on the back buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-235">Locks the <see cref="T:System.Windows.Interop.D3DImage" /> and enables operations on the back buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-236">呼び出す、<xref:System.Windows.Interop.D3DImage.Lock%2A>バック バッファーを呼び出すことによって変更するメソッドを<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>と<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-236">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the back buffer by calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> and <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> methods.</span></span> <span data-ttu-id="25bc8-237">中に、<xref:System.Windows.Interop.D3DImage>がロックされているアプリケーションも表示できるバック バッファーに割り当てられている Direct3D 画面にします。</span><span class="sxs-lookup"><span data-stu-id="25bc8-237">While the <xref:System.Windows.Interop.D3DImage> is locked, your application can also render to the Direct3D surface assigned to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25bc8-238"><xref:System.Windows.Interop.D3DImage.Lock%2A>メソッドは、レンダリング システムが前面のバッファーを更新するバック バッファーを読み取るときに、ブロックします。</span><span class="sxs-lookup"><span data-stu-id="25bc8-238">The <xref:System.Windows.Interop.D3DImage.Lock%2A> method blocks when the rendering system is reading the back buffer to update the front buffer.</span></span> <span data-ttu-id="25bc8-239">使用して、<xref:System.Windows.Interop.D3DImage.TryLock%2A>無期限にブロックされないようにするメソッド。</span><span class="sxs-lookup"><span data-stu-id="25bc8-239">Use the <xref:System.Windows.Interop.D3DImage.TryLock%2A> method to avoid blocking indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25bc8-240">次のコード例を呼び出す方法を示します、<xref:System.Windows.Interop.D3DImage.Lock%2A>バック バッファーへの更新を有効にするメソッド。</span><span class="sxs-lookup"><span data-stu-id="25bc8-240">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to enable updates to the back buffer.</span></span> <span data-ttu-id="25bc8-241">詳細については、次を参照してください。[チュートリアル: wpf Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-241">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25bc8-242">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-242">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.Media.ImageMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Metadata As ImageMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageMetadata ^ Metadata { System::Windows::Media::ImageMetadata ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Windows.Media.ImageMetadata" Usage="System.Windows.Interop.D3DImage.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-243">Gets the metadata associated with the image source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-243">Gets the metadata associated with the image source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25bc8-244">常に <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-244">
              <see langword="null" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelHeight">
      <MemberSignature Language="C#" Value="public int PixelHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PixelHeight : int" Usage="System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-245">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-245">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25bc8-246">高さ、 <see cref="T:System.Windows.Interop.D3DImage" />、(ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-246">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-247">値<xref:System.Windows.Interop.D3DImage.PixelHeight%2A>への呼び出しによって新しいバック バッファーが割り当てられている場合を変更することができます、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-247">The value of <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25bc8-248">次のコード例を使用する方法を示しています、<xref:System.Windows.Interop.D3DImage.PixelHeight%2A>バック バッファーの変更の領域を指定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-248">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="25bc8-249">詳細については、次を参照してください。[チュートリアル: wpf Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-249">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelWidth" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PixelWidth">
      <MemberSignature Language="C#" Value="public int PixelWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PixelWidth : int" Usage="System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-250">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-250">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25bc8-251">幅、 <see cref="T:System.Windows.Interop.D3DImage" />、(ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-251">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-252">値<xref:System.Windows.Interop.D3DImage.PixelWidth%2A>への呼び出しによって新しいバック バッファーが割り当てられている場合を変更することができます、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-252">The value of <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25bc8-253">次のコード例を使用する方法を示しています、<xref:System.Windows.Interop.D3DImage.PixelWidth%2A>バック バッファーの変更の領域を指定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-253">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="25bc8-254">詳細については、次を参照してください。[チュートリアル: wpf Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-254">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelHeight" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBackBuffer">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-255">Assigns a Direct3D surface as the source of the back buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-255">Assigns a Direct3D surface as the source of the back buffer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="F#" Value="member this.SetBackBuffer : System.Windows.Interop.D3DResourceType * nativeint -&gt; unit" Usage="d3DImage.SetBackBuffer (backBufferType, backBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" />
        <Parameter Name="backBuffer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="backBufferType">
          <span data-ttu-id="25bc8-256">The type of Direct3D surface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-256">The type of Direct3D surface.</span>
          </span>
          <span data-ttu-id="25bc8-257">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-257">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span>
          </span>
        </param>
        <param name="backBuffer">
          <span data-ttu-id="25bc8-258">The Direct3D surface to assign as the back buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-258">The Direct3D surface to assign as the back buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25bc8-259">Assigns a Direct3D surface as the source of the back buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-259">Assigns a Direct3D surface as the source of the back buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-260">呼び出す、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>バック バッファーに Direct3D サーフェイスを割り当てる方法です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-260">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25bc8-261">パフォーマンスは、Direct3D 画面の設定に大幅に依存します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-261">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="25bc8-262">詳細については、次を参照してください。 [Direct3D9 と WPF の相互運用性のパフォーマンスに関する考慮事項](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-262">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
 <span data-ttu-id="25bc8-263">呼び出す、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29>はのオーバー ロードを呼び出すことと同じ、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>を持つオーバー ロード、`enableSoftwareFallback`パラメーターに設定`false`です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-263">Calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload is identical to calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`.</span></span> <span data-ttu-id="25bc8-264">呼び出すと<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29>呼び出したり<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>で、`enableSoftwareFallback`パラメーターに設定`false`、レンダリング システムは、フロント バッファーが使用できなくなり、何も表示したときにバック バッファーへの参照を解放します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-264">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> or call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="25bc8-265">レンダリング システムを発生させますフロントのバッファーを再度使用できる場合、 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> WPF アプリケーションに通知するイベントです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-265">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="25bc8-266">イベント ハンドラーを作成することができます、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>イベントを有効な Direct3D 画面を使用してレンダリングを再起動します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-266">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="25bc8-267">再起動するレンダリングを呼び出す必要があります<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-267">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="25bc8-268">次の一覧が必要なバック バッファーの設定を示しています、`IDirect3DSurface9`型です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-268">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="25bc8-269">`D3DFMT_A8R8G8B8` または `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="25bc8-269">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="25bc8-270">マルチ サンプリングが許可されて`IDirect3DSurface9Ex`のみを表示します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-270">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25bc8-271">次のコード例を呼び出す方法を示します、 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Direct3D サーフェイスを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="25bc8-271">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface.</span></span> <span data-ttu-id="25bc8-272">詳細については、次を参照してください。[チュートリアル: wpf Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-272">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25bc8-273">The <see cref="T:System.Windows.Interop.D3DImage" /> has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-273">The <see cref="T:System.Windows.Interop.D3DImage" /> has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="25bc8-274">
            <paramref name="backBufferType" /> is not a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-274">
              <paramref name="backBufferType" /> is not a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="25bc8-275">The creation parameters for <paramref name="backBuffer" /> do not meet the requirements for the <paramref name="backBufferType" />-or-The <paramref name="backBuffer" /> device is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-275">The creation parameters for <paramref name="backBuffer" /> do not meet the requirements for the <paramref name="backBufferType" />-or-The <paramref name="backBuffer" /> device is not valid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="25bc8-276">アンマネージ リソースにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-276">for access to unmanaged resources.</span>
          </span>
          <span data-ttu-id="25bc8-277">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-277">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="25bc8-278">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-278">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer, bool enableSoftwareFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr, enableSoftwareFallback As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="F#" Value="member this.SetBackBuffer : System.Windows.Interop.D3DResourceType * nativeint * bool -&gt; unit" Usage="d3DImage.SetBackBuffer (backBufferType, backBuffer, enableSoftwareFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" />
        <Parameter Name="backBuffer" Type="System.IntPtr" />
        <Parameter Name="enableSoftwareFallback" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="backBufferType">
          <span data-ttu-id="25bc8-279">The type of Direct3D surface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-279">The type of Direct3D surface.</span>
          </span>
          <span data-ttu-id="25bc8-280">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-280">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span>
          </span>
        </param>
        <param name="backBuffer">
          <span data-ttu-id="25bc8-281">The Direct3D surface to assign as the back buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-281">The Direct3D surface to assign as the back buffer.</span>
          </span>
        </param>
        <param name="enableSoftwareFallback">
          <span data-ttu-id="25bc8-282">
            <see langword="true" /> to fall back on software rendering; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-282">
              <see langword="true" /> to fall back on software rendering; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25bc8-283">Assigns a Direct3D surface as the source of the back buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-283">Assigns a Direct3D surface as the source of the back buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-284">呼び出すと、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29>オーバー ロードを呼び出したり、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>を持つオーバー ロード、`enableSoftwareFallback`パラメーターに設定`false`、フロントのバッファーが使用できなくなったとは何もレンダリング システムがバック バッファーへの参照を解放表示されます。</span><span class="sxs-lookup"><span data-stu-id="25bc8-284">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="25bc8-285">レンダリング システムを発生させますフロントのバッファーを再度使用できる場合、 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> WPF アプリケーションに通知するイベントです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-285">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="25bc8-286">イベント ハンドラーを作成することができます、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>イベントを有効な Direct3D 画面を使用してレンダリングを再起動します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-286">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="25bc8-287">再起動するレンダリングを呼び出す必要があります<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-287">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="25bc8-288">呼び出すと<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>で、`enableSoftwareFallback`パラメーターに設定`true`、レンダリング時に維持バック バッファーへの参照を呼び出す必要はありませんので、フロントのバッファーが使用できなくなった、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>フロントのバッファーがの場合使用可能なもう一度です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-288">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="25bc8-289">ユーザーのデバイスが使用できなくなった状況である可能性があります。</span><span class="sxs-lookup"><span data-stu-id="25bc8-289">There may be situations where the user’s device becomes unavailable.</span></span>  <span data-ttu-id="25bc8-290">発生すると、呼び出す<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>バック バッファーへの WPF の参照を解放します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-290">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF’s reference to the back buffer.</span></span>  <span data-ttu-id="25bc8-291">デバイスをリセットする必要がある場合は、呼び出す<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>で`backBuffer`に設定`null`、およびを呼び出す<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>でもう一度`backBuffer`Direct3D 画面を有効に設定します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-291">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with `backBuffer` set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
 <span data-ttu-id="25bc8-292">次の一覧が必要なバック バッファーの設定を示しています、`IDirect3DSurface9`型です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-292">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="25bc8-293">`D3DFMT_A8R8G8B8` または `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="25bc8-293">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="25bc8-294">マルチ サンプリングが許可されて`IDirect3DSurface9Ex`のみを表示します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-294">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryLock">
      <MemberSignature Language="C#" Value="public bool TryLock (System.Windows.Duration timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryLock(valuetype System.Windows.Duration timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryLock (timeout As Duration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryLock(System::Windows::Duration timeout);" />
      <MemberSignature Language="F#" Value="member this.TryLock : System.Windows.Duration -&gt; bool" Usage="d3DImage.TryLock timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="25bc8-295">The duration to wait for the lock to be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-295">The duration to wait for the lock to be acquired.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25bc8-296">Attempts to lock the <see cref="T:System.Windows.Interop.D3DImage" /> and waits for the specified duration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-296">Attempts to lock the <see cref="T:System.Windows.Interop.D3DImage" /> and waits for the specified duration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25bc8-297">
            <see langword="true" /> if the lock was acquired; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-297">
              <see langword="true" /> if the lock was acquired; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="25bc8-298">
            <paramref name="timeout" /> is set to <see cref="P:System.Windows.Duration.Automatic" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-298">
              <paramref name="timeout" /> is set to <see cref="P:System.Windows.Duration.Automatic" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25bc8-299">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-299">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public void Unlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Unlock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unlock();" />
      <MemberSignature Language="F#" Value="member this.Unlock : unit -&gt; unit" Usage="d3DImage.Unlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-300">Decrements the lock count for the <see cref="T:System.Windows.Interop.D3DImage" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-300">Decrements the lock count for the <see cref="T:System.Windows.Interop.D3DImage" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-301">ロックをカウントする場合、<xref:System.Windows.Interop.D3DImage>がゼロに達すると、<xref:System.Windows.Interop.D3DImage>が完全にロック解除します。</span><span class="sxs-lookup"><span data-stu-id="25bc8-301">When the lock count for the <xref:System.Windows.Interop.D3DImage> reaches zero, the <xref:System.Windows.Interop.D3DImage> is fully unlocked.</span></span> <span data-ttu-id="25bc8-302"><xref:System.Windows.Interop.D3DImage>イメージには、前の呼び出しによって指定されている領域が変更された場合は、レンダリングのマークが付いて、<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-302">The <xref:System.Windows.Interop.D3DImage> is marked for rendering if the image has changed areas that were specified by previous calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="25bc8-303">変更をコミットしてレンダリングが発生したときに、追加の呼び出し、<xref:System.Windows.Interop.D3DImage.Lock%2A>メソッド ブロックをレンダーのスレッドは、フロントのバッファーにバック バッファーの内容をコピーするまでです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-303">When the changes are committed and rendering occurs, additional calls to the <xref:System.Windows.Interop.D3DImage.Lock%2A> method block until the render thread has copied the contents of the back buffer to the front buffer.</span></span> <span data-ttu-id="25bc8-304">この同期は、設定解除を行うなど、表示の成果物を回避できます。</span><span class="sxs-lookup"><span data-stu-id="25bc8-304">This synchronization avoids display artifacts, such as tearing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25bc8-305">更新しないと、Direct3D 画面中に、<xref:System.Windows.Interop.D3DImage>ロックが解除されています。</span><span class="sxs-lookup"><span data-stu-id="25bc8-305">Do not update the Direct3D surface while the <xref:System.Windows.Interop.D3DImage> is unlocked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25bc8-306">次のコード例を呼び出す方法を示します、<xref:System.Windows.Interop.D3DImage.Unlock%2A>フロント バッファーに更新されたバック バッファーをコピーします。</span><span class="sxs-lookup"><span data-stu-id="25bc8-306">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the updated back buffer to the front buffer.</span></span> <span data-ttu-id="25bc8-307">詳細については、次を参照してください。[チュートリアル: wpf Direct3D9 のコンテンツをホストしている](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)です。</span><span class="sxs-lookup"><span data-stu-id="25bc8-307">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override sealed double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : double" Usage="System.Windows.Interop.D3DImage.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25bc8-308">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-308">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25bc8-309">幅、<see cref="T:System.Windows.Interop.D3DImage" />の単位を測定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-309">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span>
          </span>
          <span data-ttu-id="25bc8-310">測定単位は、1/96 インチです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25bc8-310">A measure unit is 1/96th inch.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25bc8-311">値<xref:System.Windows.Interop.D3DImage.Width%2A>への呼び出しによって新しいバック バッファーが割り当てられている場合を変更することができます、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="25bc8-311">The value of <xref:System.Windows.Interop.D3DImage.Width%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
  </Members>
</Type>