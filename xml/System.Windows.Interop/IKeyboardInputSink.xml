<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IKeyboardInputSink.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53120cf880fee3bfbee4ccce673b07364bc06400a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3120cf880fee3bfbee4ccce673b07364bc06400a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source>Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs.</source>
          <target state="translated">相互運用の境界を越えて複数の HWND にわたって、Tab キーによる移動、アクセラレータ、およびニーモニックを管理するコンポーネントに対し、キーボード シンクを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source>This interface implements keyboard message management in WPF-Win32 interoperation scenarios.</source>
          <target state="translated">このインターフェイスは、WPF-Win32 の相互運用シナリオにおいてキーボード メッセージ管理を実装します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source>A keyboard sink handles input from particular subsets of the overall keyboard input model for <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.</source>
          <target state="translated">キーボード シンクの全般的なキーボードの入力モデルの特定のサブセットから入力を処理する<ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph>と<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>、でき、一部はキーボード入力を処理して、現在のキーボード フォーカスを持つ 1 つ以外 Hwnd に送られます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source>If your component contains other components, and maintains a tab order, your component must also implement <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSite&gt;</ph> and keep track of which component has focus.</source>
          <target state="translated">コンポーネントが、他のコンポーネントが含まれています、タブの順序を維持する場合は、コンポーネントを実装する必要がありますも<ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSite&gt;</ph>のどのコンポーネントがフォーカスを追跡することです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source>For a discussion of the input architecture specifically implemented for <ph id="ph1">[!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]</ph> interop, see <bpt id="p1">[</bpt>Windows Forms and WPF Interoperability Input Architecture<ept id="p1">](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md)</ept>.</source>
          <target state="translated">については、入力のアーキテクチャを具体的には実装されている<ph id="ph1">[!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]</ph>相互運用性を参照してください<bpt id="p1">[</bpt>Windows フォームと WPF の相互運用性入力アーキテクチャ<ept id="p1">](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> each implement the <ph id="ph3">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface, through explicit interface definitions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> および<ph id="ph2">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>各実装、<ph id="ph3">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph>インターフェイスは、明示的なインターフェイスの定義を使用します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.IKeyboardInputSink">
          <source>The explicit definitions supply default behaviors, and can also be accessed if necessary through an <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface cast of <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>.</source>
          <target state="translated">明示的な定義は、既定の動作を指定で必要な場合にもアクセスできると、<ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph>のインターフェイスにキャスト<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>または<ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
          <source>Gets a value that indicates whether the sink or one of its contained components has focus.</source>
          <target state="translated">シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがあるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the sink or one of its contained components has focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
          <source>This method is necessary for forwarding <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> calls to child components with focus from within the <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> implementation.</source>
          <target state="translated">このメソッドは、転送するために必要な<ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph>内からフォーカスを持つ子コンポーネントへの呼び出し、<ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A&gt;</ph> recursively until you reach the level of specific focus and forward <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> there.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A&gt;</ph>特定フォーカスと転送のレベルに到達するまで再帰的に<ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph>があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
          <source>Gets or sets a reference to the component's container's <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> interface.</source>
          <target state="translated">コンポーネントのコンテナーの <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> インターフェイスへの参照を取得または設定します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
          <source>A reference to the container's <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> interface.</source>
          <target state="translated">コンテナーの <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> インターフェイスへの参照。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
          <source>This property should initially be set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">このプロパティに最初に設定する必要があります<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
          <source>Any container that adds the sink to its components list will set <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A&gt;</ph> before any other methods are called, and it can be set multiple times after that.</source>
          <target state="translated">シンク コンポーネント リストを追加するすべてのコンテナーは、設定<ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A&gt;</ph>他のメソッドが呼び出され、その後複数回を設定できる前にします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
          <source>You should set the property to <ph id="ph1">`null`</ph> again before disposal.</source>
          <target state="translated">プロパティを設定する必要があります<ph id="ph1">`null`</ph>処分する前にもう一度です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message for the mnemonic and associated data.</source>
          <target state="translated">ニーモニック用のメッセージおよび関連付けられたデータ。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this message structure.</source>
          <target state="translated">このメッセージ構造を変更しないでください。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">パフォーマンス上の理由から、これは参照渡しのみです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">変換キー。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Called when one of the mnemonics (access keys) for this sink is invoked.</source>
          <target state="translated">このシンクのニーモニック (アクセス キー) のいずれかが起動されたときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was handled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">メッセージが処理された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]</ph> message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]</ph> WM_CHAR、wm_syschar です、WM_DEADCHAR または WM_SYSDEADCHAR メッセージがある必要があります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>If the component has contained components, the message must be passed in your implementation by calling each contained component's <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph> method.</source>
          <target state="translated">コンポーネントでは、含まれている各呼び出すことによって実装の場合は、コンポーネントには、コンポーネントが含まれているが、メッセージを渡す必要があります<ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>An interface that returns <ph id="ph1">`true`</ph> from <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> will not call <ph id="ph3">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph>.</source>
          <target state="translated">返すインターフェイス<ph id="ph1">`true`</ph>から<ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph>を呼び出しません<ph id="ph3">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Implementations can choose to perform all specific key combination handling in <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A&gt;</ph>.and bypass <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph>.</source>
          <target state="translated">実装がすべて特定のキーの組み合わせでの処理を実行するを選択できます<ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A&gt;</ph>グループ 1 をバイパス<ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> sink of the contained component.</source>
          <target state="translated">格納されているコンポーネントの <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> シンク。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>Registers the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> interface of a contained component.</source>
          <target state="translated">格納されているコンポーネントの <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> インターフェイスを登録します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> site of the contained component.</source>
          <target state="translated">格納されているコンポーネントの <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> サイト。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site.</source>
          <target state="translated">子コンポーネントとコンポーネントは、サイトの内部コレクションを保持し、このメソッドを使用して新しいシンクを追加および新しいサイトを返す必要があります。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>You only need to maintain the site collection, because the sink can be obtained from the site.</source>
          <target state="translated">だけで済みますサイト コレクションを維持するため、シンクは、サイトから取得することができます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
          <source>Specifies whether focus should be set to the first or the last tab stop.</source>
          <target state="translated">フォーカスを最初と最後のどちらのタブ位置に設定するかを指定します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
          <source>Sets focus on either the first tab stop or the last tab stop of the sink.</source>
          <target state="translated">フォーカスをシンクの最初のタブ位置または最後のタブ位置のいずれかに設定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the focus has been set as requested; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, if there are no tab stops.</source>
          <target state="translated">フォーカスが要求どおりに設定された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。タブ位置が存在しない場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.FocusNavigationDirection.First&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.FocusNavigationDirection.Last&gt;</ph> are the only relevant values that should be passed to this method in the <ph id="ph3">&lt;xref:System.Windows.Input.TraversalRequest&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.FocusNavigationDirection.First&gt;</ph> および<ph id="ph2">&lt;xref:System.Windows.Input.FocusNavigationDirection.Last&gt;</ph>でこのメソッドに渡す必要があるだけに関連する値が格納されて、<ph id="ph3">&lt;xref:System.Windows.Input.TraversalRequest&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">メッセージおよび関連付けられたデータ。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">この構造体を変更しないでください。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">パフォーマンス上の理由から、これは参照渡しのみです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">変換キー。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Processes keyboard input at the keydown message level.</source>
          <target state="translated">キー押下メッセージのレベルでキーボード入力を処理します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was handled by the method implementation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">メッセージがメソッドの実装によって処理された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.</source>
          <target state="translated">WM_KEYDOWN または WM_SYSKEYDOWN メッセージでなければなりません。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>If the component is unable to handle the input translations and has child components that might have translations, it typically calls <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> method on the child component that holds the current focus before returning a result.</source>
          <target state="translated">コンポーネントが入力の変換を処理するようになっていて、翻訳を含めることがありますの子コンポーネントが場合、通常、呼び出します<ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph>メソッド結果を返す前に、現在のフォーカスを保持している子コンポーネントにします。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>If the message cannot be handled immediately, you can re-dispatch it from within the <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> implementation if necessary, and then return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">場合は、メッセージは、すぐに処理できない場合、再ディスパッチできる、内から、<ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph>実装が必要であれば、戻って<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A&gt;</ph> to a child component, or to call <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A&gt;</ph> on the parent site because the tab sequence has reached the beginning or end bounds.</source>
          <target state="translated">アクセラレータ キーを変換するための主なシナリオが VK_TAB keydown メッセージを処理しを呼び出して、コンポーネント内でフォーカスを設定するかどうかを決定する<ph id="ph1">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A&gt;</ph>子コンポーネントにまたは呼び出しを行う<ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A&gt;</ph>親サイト タブ シーケンス境界の先頭または末尾に達したためです。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Certain components may choose to not handle the tab key in this fashion.</source>
          <target state="translated">特定のコンポーネントは、この方法で tab キーを処理できないことができます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">メッセージおよび関連付けられたデータ。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">この構造体を変更しないでください。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">パフォーマンス上の理由から、これは参照渡しのみです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">変換キー。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> の呼び出し前に、WM_CHAR、WM_SYSCHAR、WM_DEADCHAR、および WM_SYSDEADCHAR 入力メッセージを処理します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed and <ph id="ph2">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> should not be called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">メッセージが処理されたため <ph id="ph2">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> を呼び出さない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>If you implement this method to return <ph id="ph1">`true`</ph>, the input architecture will not call <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph> for that key message.</source>
          <target state="translated">返すには、このメソッドを実装する場合<ph id="ph1">`true`</ph>、入力のアーキテクチャを呼び出しません<ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph>キー メッセージに対応します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>