<Type Name="IKeyboardInputSink" FullName="System.Windows.Interop.IKeyboardInputSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3120cf880fee3bfbee4ccce673b07364bc06400a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30658676" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IKeyboardInputSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyboardInputSink" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.IKeyboardInputSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyboardInputSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyboardInputSink" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>相互運用の境界を越えて複数の HWND にわたって、Tab キーによる移動、アクセラレータ、およびニーモニックを管理するコンポーネントに対し、キーボード シンクを提供します。 このインターフェイスは、WPF-Win32 の相互運用シナリオにおいてキーボード メッセージ管理を実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 キーボード シンクの全般的なキーボードの入力モデルの特定のサブセットから入力を処理する[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]と[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]、でき、一部はキーボード入力を処理して、現在のキーボード フォーカスを持つ 1 つ以外 Hwnd に送られます。  
  
 コンポーネントが、他のコンポーネントが含まれています、タブの順序を維持する場合は、コンポーネントを実装する必要がありますも<xref:System.Windows.Interop.IKeyboardInputSite>のどのコンポーネントがフォーカスを追跡することです。  
  
 については、入力のアーキテクチャを具体的には実装されている[!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]相互運用性を参照してください[Windows フォームと WPF の相互運用性入力アーキテクチャ](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md)です。  
  
 <xref:System.Windows.Interop.HwndSource> および<xref:System.Windows.Interop.HwndHost>各実装、<xref:System.Windows.Interop.IKeyboardInputSink>インターフェイスは、明示的なインターフェイスの定義を使用します。 明示的な定義は、既定の動作を指定で必要な場合にもアクセスできると、<xref:System.Windows.Interop.IKeyboardInputSink>のインターフェイスにキャスト<xref:System.Windows.Interop.HwndSource>または<xref:System.Windows.Interop.HwndHost>です。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <Member MemberName="HasFocusWithin">
      <MemberSignature Language="C#" Value="public bool HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFocusWithin () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFocusWithin();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがあるかどうかを示す値を取得します。</summary>
        <returns>
          シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、転送するために必要な<xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A>内からフォーカスを持つ子コンポーネントへの呼び出し、<xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A>実装します。 呼び出す<xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A>特定フォーカスと転送のレベルに到達するまで再帰的に<xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A>があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSite">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardInputSite As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンポーネントのコンテナーの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> インターフェイスへの参照を取得または設定します。</summary>
        <value>コンテナーの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> インターフェイスへの参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに最初に設定する必要があります`null`です。 シンク コンポーネント リストを追加するすべてのコンテナーは、設定<xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A>他のメソッドが呼び出され、その後複数回を設定できる前にします。 プロパティを設定する必要があります`null`処分する前にもう一度です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="OnMnemonic">
      <MemberSignature Language="C#" Value="public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">ニーモニック用のメッセージおよび関連付けられたデータ。 このメッセージ構造を変更しないでください。 パフォーマンス上の理由から、これは参照渡しのみです。</param>
        <param name="modifiers">変換キー。</param>
        <summary>このシンクのニーモニック (アクセス キー) のいずれかが起動されたときに呼び出されます。</summary>
        <returns>
          メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] WM_CHAR、wm_syschar です、WM_DEADCHAR または WM_SYSDEADCHAR メッセージがある必要があります。  
  
 コンポーネントでは、含まれている各呼び出すことによって実装の場合は、コンポーネントには、コンポーネントが含まれているが、メッセージを渡す必要があります<xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>メソッドです。  
  
 返すインターフェイス`true`から<xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A>を呼び出しません<xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>です。 実装がすべて特定のキーの組み合わせでの処理を実行するを選択できます<xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>グループ 1 をバイパス<xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> シンク。</param>
        <summary>格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> インターフェイスを登録します。</summary>
        <returns>格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> サイト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 子コンポーネントとコンポーネントは、サイトの内部コレクションを保持し、このメソッドを使用して新しいシンクを追加および新しいサイトを返す必要があります。 だけで済みますサイト コレクションを維持するため、シンクは、サイトから取得することができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabInto">
      <MemberSignature Language="C#" Value="public bool TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function TabInto (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TabInto(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">フォーカスを最初と最後のどちらのタブ位置に設定するかを指定します。</param>
        <summary>フォーカスをシンクの最初のタブ位置または最後のタブ位置のいずれかに設定します。</summary>
        <returns>
          フォーカスが要求どおりに設定された場合は <see langword="true" />。タブ位置が存在しない場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.FocusNavigationDirection.First> および<xref:System.Windows.Input.FocusNavigationDirection.Last>でこのメソッドに渡す必要があるだけに関連する値が格納されて、<xref:System.Windows.Input.TraversalRequest>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAccelerator">
      <MemberSignature Language="C#" Value="public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">メッセージおよび関連付けられたデータ。 この構造体を変更しないでください。 パフォーマンス上の理由から、これは参照渡しのみです。</param>
        <param name="modifiers">変換キー。</param>
        <summary>キー押下メッセージのレベルでキーボード入力を処理します。</summary>
        <returns>
          メッセージがメソッドの実装によって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WM_KEYDOWN または WM_SYSKEYDOWN メッセージでなければなりません。  
  
 コンポーネントが入力の変換を処理するようになっていて、翻訳を含めることがありますの子コンポーネントが場合、通常、呼び出します<xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A>メソッド結果を返す前に、現在のフォーカスを保持している子コンポーネントにします。  
  
 場合は、メッセージは、すぐに処理できない場合、再ディスパッチできる、内から、<xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A>実装が必要であれば、戻って`false`です。  
  
 アクセラレータ キーを変換するための主なシナリオが VK_TAB keydown メッセージを処理しを呼び出して、コンポーネント内でフォーカスを設定するかどうかを決定する<xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>子コンポーネントにまたは呼び出しを行う<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>親サイト タブ シーケンス境界の先頭または末尾に達したためです。 特定のコンポーネントは、この方法で tab キーを処理できないことができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateChar">
      <MemberSignature Language="C#" Value="public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">メッセージおよび関連付けられたデータ。 この構造体を変更しないでください。 パフォーマンス上の理由から、これは参照渡しのみです。</param>
        <param name="modifiers">変換キー。</param>
        <summary>
          <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> の呼び出し前に、WM_CHAR、WM_SYSCHAR、WM_DEADCHAR、および WM_SYSDEADCHAR 入力メッセージを処理します。</summary>
        <returns>
          メッセージが処理されたため <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> を呼び出さない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返すには、このメソッドを実装する場合`true`、入力のアーキテクチャを呼び出しません<xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>キー メッセージに対応します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>