<Type Name="ComponentDispatcher" FullName="System.Windows.Interop.ComponentDispatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c067685c2dbbcf8aa6b9cb1639c9f41d07b7466" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ComponentDispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed ComponentDispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.ComponentDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentDispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentDispatcher abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e995e-101">相互運用シナリオで、Win32 と WPF の間でメッセージ ポンプの制御を共有できるようにします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e995e-101">Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e995e-102">静的では、クラス自体はのすべてのメンバー<xref:System.Windows.Interop.ComponentDispatcher>は特定のスレッドに固有です。</span><span class="sxs-lookup"><span data-stu-id="e995e-102">Although the class itself is static, all members of <xref:System.Windows.Interop.ComponentDispatcher> are specific to a particular thread.</span></span> <span data-ttu-id="e995e-103">値を確認する場合など、 <xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A> 、2 つの異なるスレッドに異なる値が取得する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e995e-103">For example, if you examine the value of <xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A> on two different threads, you might get different values.</span></span>  
  
 <span data-ttu-id="e995e-104">メソッドは静的ですがスレッドごとのデータ構造でのバックアップがします。</span><span class="sxs-lookup"><span data-stu-id="e995e-104">The methods are static but they are backed by per-thread data structures.</span></span>  <span data-ttu-id="e995e-105">静的メソッドは、単一のアクセスを許可するが、<xref:System.Windows.Interop.ComponentDispatcher>スレッドごとの適切な操作を並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="e995e-105">The static methods allow singleton access but the <xref:System.Windows.Interop.ComponentDispatcher> is sorting out the appropriate per-thread operations.</span></span>  
  
 <span data-ttu-id="e995e-106">呼び出すコードによってメッセージ ポンプの所有者が定義されている、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]関数[GetMessage](http://msdn.microsoft.com/library/ms644936.aspx)です。</span><span class="sxs-lookup"><span data-stu-id="e995e-106">The owner of the message pump is defined by the code that calls the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] function  [GetMessage](http://msdn.microsoft.com/library/ms644936.aspx).</span></span> <span data-ttu-id="e995e-107">所有者呼び出し<xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A>キーボード メッセージごとにします。</span><span class="sxs-lookup"><span data-stu-id="e995e-107">The owner calls <xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A> for every keyboard message.</span></span> <span data-ttu-id="e995e-108">このメソッドを発生させる、<xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage>イベントのデータが含まれてし、メッセージ イベントには。</span><span class="sxs-lookup"><span data-stu-id="e995e-108">This method raises the <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage> event with the messages contained in the event data.</span></span> <span data-ttu-id="e995e-109">そのイベントが処理されない場合は、所有者が、<xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage>イベントの引数に含まれるイベント メッセージを使用します。</span><span class="sxs-lookup"><span data-stu-id="e995e-109">If that event is not handled, the owner raises the <xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage> event with the messages contained in the event argument.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e995e-110">キーボード メッセージのみがサポートされます。</span><span class="sxs-lookup"><span data-stu-id="e995e-110">Only keyboard messages are supported.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">
      <span data-ttu-id="e995e-111">このクラスの任意のメンバーにアクセスします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e995e-111">to access any member of this class.</span>
      </span>
      <span data-ttu-id="e995e-112">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="e995e-112">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      </span>
    </permission>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
  </Docs>
  <Members>
    <Member MemberName="CurrentKeyboardMessage">
      <MemberSignature Language="C#" Value="public static System.Windows.Interop.MSG CurrentKeyboardMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Interop.MSG CurrentKeyboardMessage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentKeyboardMessage As MSG" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Interop::MSG CurrentKeyboardMessage { System::Windows::Interop::MSG get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.MSG</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e995e-113">最後に発生したメッセージを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-113">Gets the last message that was raised.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e995e-114">最後のメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-114">The last message.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e995e-115">このクラスの任意のメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-115">to access any member of this class.</span>
          </span>
          <span data-ttu-id="e995e-116">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-116">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
      </Docs>
    </Member>
    <Member MemberName="EnterThreadModal">
      <MemberSignature Language="C#" Value="public static event EventHandler EnterThreadModal;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnterThreadModal" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event EnterThreadModal As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ EnterThreadModal;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e995e-117">スレッドがモーダルになったときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-117">Occurs when a thread becomes modal.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e995e-118">このクラスの任意のメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-118">to access any member of this class.</span>
          </span>
          <span data-ttu-id="e995e-119">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-119">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadModal">
      <MemberSignature Language="C#" Value="public static bool IsThreadModal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsThreadModal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsThreadModal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsThreadModal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e995e-120">スレッドがモーダルかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-120">Gets a value that indicates whether the thread is modal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e995e-121">スレッドがモーダルの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-121">
              <see langword="true" /> if the thread is modal; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e995e-122">このクラスの任意のメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-122">to access any member of this class.</span>
          </span>
          <span data-ttu-id="e995e-123">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-123">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      </Docs>
    </Member>
    <Member MemberName="LeaveThreadModal">
      <MemberSignature Language="C#" Value="public static event EventHandler LeaveThreadModal;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LeaveThreadModal" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LeaveThreadModal As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ LeaveThreadModal;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e995e-124">モーダル スレッドが非モーダルになったときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-124">Occurs when a modal thread becomes nonmodal.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e995e-125">このクラスの任意のメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-125">to access any member of this class.</span>
          </span>
          <span data-ttu-id="e995e-126">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-126">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      </Docs>
    </Member>
    <Member MemberName="PopModal">
      <MemberSignature Language="C#" Value="public static void PopModal ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PopModal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PopModal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PopModal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e995e-127">モーダル スレッドがモーダルでなくなったことを示すために呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-127">Called to indicate that a modal thread is no longer modal.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e995e-128">このクラスの任意のメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-128">to access any member of this class.</span>
          </span>
          <span data-ttu-id="e995e-129">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-129">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal" />
      </Docs>
    </Member>
    <Member MemberName="PushModal">
      <MemberSignature Language="C#" Value="public static void PushModal ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushModal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushModal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushModal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e995e-130">スレッドがモーダルであることを示すために呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-130">Called to indicate that the thread is modal.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e995e-131">このクラスのすべてのメンバーが必要な<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-131">All members of this class require <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permission.</span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal" />
      </Docs>
    </Member>
    <Member MemberName="RaiseIdle">
      <MemberSignature Language="C#" Value="public static void RaiseIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RaiseIdle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RaiseIdle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e995e-132">スレッドがアイドル状態であることを示すために呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-132">Called to indicate that a thread is idle.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e995e-133">このクラスの任意のメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-133">to access any member of this class.</span>
          </span>
          <span data-ttu-id="e995e-134">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-134">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle" />
      </Docs>
    </Member>
    <Member MemberName="RaiseThreadMessage">
      <MemberSignature Language="C#" Value="public static bool RaiseThreadMessage (ref System.Windows.Interop.MSG msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RaiseThreadMessage(valuetype System.Windows.Interop.MSG&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RaiseThreadMessage (ByRef msg As MSG) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RaiseThreadMessage(System::Windows::Interop::MSG % msg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="e995e-135">メッセージおよびそれに関連付けられたデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-135">The message and its associated data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e995e-136">処理できる新しいメッセージがあることを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-136">Indicates that a new message is available for possible handling.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e995e-137">メッセージ ループをリッスンしているモジュールのいずれかがメッセージを処理した場合は <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-137">
              <see langword="true" />, if one of the modules listening to the message loop processed the message.</span>
          </span>
          <span data-ttu-id="e995e-138">この場合、メッセージ ループの所有者はこのメッセージを無視します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-138">The owner of the message loop should ignore the message.</span>
          </span>
          <span data-ttu-id="e995e-139">メッセージが処理されなかった場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-139">
              <see langword="false" />, if the message was not processed.</span>
          </span>
          <span data-ttu-id="e995e-140">この場合は、メッセージ ポンプの所有者は、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 関数 [TranslateMessage](http://msdn.microsoft.com/library/ms644955.aspx) と、これに続いて [DispatchMessage](http://msdn.microsoft.com/library/ms644934.aspx) を呼び出す必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-140">In this case, the owner of the message pump should call the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] function [TranslateMessage](http://msdn.microsoft.com/library/ms644955.aspx) followed by [DispatchMessage](http://msdn.microsoft.com/library/ms644934.aspx).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e995e-141">メッセージ ポンプの所有者は、キーボード メッセージごとに、このメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e995e-141">The owner of the message pump should call this method for every keyboard message.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e995e-142">このクラスの任意のメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-142">to access any member of this class.</span>
          </span>
          <span data-ttu-id="e995e-143">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-143">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
      </Docs>
    </Member>
    <Member MemberName="ThreadFilterMessage">
      <MemberSignature Language="C#" Value="public static event System.Windows.Interop.ThreadMessageEventHandler ThreadFilterMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Interop.ThreadMessageEventHandler ThreadFilterMessage" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadFilterMessage As ThreadMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Interop::ThreadMessageEventHandler ^ ThreadFilterMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.ThreadMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e995e-144">メッセージ ポンプがキーボード メッセージを受信すると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-144">Occurs when the message pump receives a keyboard message.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e995e-145">このクラスの任意のメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-145">to access any member of this class.</span>
          </span>
          <span data-ttu-id="e995e-146">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-146">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
      </Docs>
    </Member>
    <Member MemberName="ThreadIdle">
      <MemberSignature Language="C#" Value="public static event EventHandler ThreadIdle;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ThreadIdle" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadIdle As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ ThreadIdle;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e995e-147">スレッドがアイドル状態のときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-147">Occurs when the thread is idle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e995e-148">キューにメッセージがないかどうかは、アイドル状態にアナウンスされる、<xref:System.Windows.Interop.ComponentDispatcher.ThreadIdle>イベントが処理を実行するための効率的な時間。</span><span class="sxs-lookup"><span data-stu-id="e995e-148">If there are no messages in the queue, then the idle state announced by the <xref:System.Windows.Interop.ComponentDispatcher.ThreadIdle> event is an efficient time to do processing.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e995e-149">このクラスの任意のメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-149">to access any member of this class.</span>
          </span>
          <span data-ttu-id="e995e-150">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-150">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle" />
      </Docs>
    </Member>
    <Member MemberName="ThreadPreprocessMessage">
      <MemberSignature Language="C#" Value="public static event System.Windows.Interop.ThreadMessageEventHandler ThreadPreprocessMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Interop.ThreadMessageEventHandler ThreadPreprocessMessage" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadPreprocessMessage As ThreadMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Interop::ThreadMessageEventHandler ^ ThreadPreprocessMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.ThreadMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e995e-151">メッセージ ポンプがキーボード メッセージを受信すると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-151">Occurs when the message pump receives a keyboard message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e995e-152">後にこのイベントを発生させるか<xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage>、そのイベントが処理されない場合。</span><span class="sxs-lookup"><span data-stu-id="e995e-152">This event should be raised after <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage>, if that event is not handled.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e995e-153">このクラスの任意のメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-153">to access any member of this class.</span>
          </span>
          <span data-ttu-id="e995e-154">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e995e-154">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" />
      </Docs>
    </Member>
  </Members>
</Type>