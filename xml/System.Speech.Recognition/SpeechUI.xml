<Type Name="SpeechUI" FullName="System.Speech.Recognition.SpeechUI">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1f02302a0595556843ce02485a48eb3b3665db7" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52225936" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SpeechUI" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SpeechUI extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SpeechUI" />
  <TypeSignature Language="VB.NET" Value="Public Class SpeechUI" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechUI" />
  <TypeSignature Language="F#" Value="type SpeechUI = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b355c-101">音声プラットフォームのユーザー インターフェイスに表示する認識操作でテキストおよびステータス情報を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b355c-101">Provides text and status information on recognition operations to be displayed in the Speech platform user interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b355c-102">メンバー、<xref:System.Speech.Recognition.SpeechUI>を音声認識のユーザー インターフェイスをエンドユーザーに正確なフィードバックを示すためにクラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="b355c-102">The members of the <xref:System.Speech.Recognition.SpeechUI> class can be used to indicate exact feedback to the end user through the speech recognition user interface.</span></span> <span data-ttu-id="b355c-103">アプリケーションには、任意のテキストのこのクラスを使用して成功/失敗情報を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="b355c-103">An application can return arbitrary text and success/failure information using this class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b355c-104">次の例は、ハンドラー、<xref:System.Speech.Recognition.Grammar.SpeechRecognized>イベント。</span><span class="sxs-lookup"><span data-stu-id="b355c-104">The following example is a handler for the <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event.</span></span> <span data-ttu-id="b355c-105">このイベントを使用して、 <xref:System.Speech.Recognition.Grammar> 「自分のパスワードは...」の形式でパスワードの入力を処理するために意図して設計されています。</span><span class="sxs-lookup"><span data-stu-id="b355c-105">This event is used by a <xref:System.Speech.Recognition.Grammar> that is designed to handle password input in the form "My password is …".</span></span>  
  
 <span data-ttu-id="b355c-106">場合は、パスワードが存在するか、無効、<xref:System.Speech.Recognition.SpeechUI.SendTextFeedback%2A>音声プラットフォーム ユーザー インターフェイスにエラー情報を送信します。</span><span class="sxs-lookup"><span data-stu-id="b355c-106">If a password is not present, or not valid, <xref:System.Speech.Recognition.SpeechUI.SendTextFeedback%2A> sends error information to the Speech platform user interface.</span></span>  
  
```  
  
grammar.SpeechRecognized +=   
delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
{  
  SemanticValue semantics = eventArgs.Result.Semantics;  
  RecognitionResult result=eventArgs.Result;  
  
  if (!semantics.ContainsKey("Password"))   
  {  
    SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
  }  
  else   
  {  
    RecognizedAudio pwdAudio = result.GetAudioForWordRange(  
                  result.Words[3],  
                  result.Words[result.Words.Count - 1]);  
    MemoryStream pwdMemoryStream = new MemoryStream();  
    pwdAudio.WriteToAudioStream(pwdMemoryStream);  
    if (!IsValidPwd(pwdMemoryStream))   
    {  
      string badPwd = System.IO.Path.GetTempPath() +   
              "BadPwd" + (new Random()).Next().ToString() + ".wav";  
      FileStream waveStream = new FileStream(badPwd, FileMode.Create);  
      pwdAudio.WriteToWaveStream(waveStream);  
      waveStream.Flush();  
      waveStream.Close();  
      SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);  
    }  
  }  
};  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SendTextFeedback">
      <MemberSignature Language="C#" Value="public static bool SendTextFeedback (System.Speech.Recognition.RecognitionResult result, string feedback, bool isSuccessfulAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SendTextFeedback(class System.Speech.Recognition.RecognitionResult result, string feedback, bool isSuccessfulAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SpeechUI.SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SendTextFeedback (result As RecognitionResult, feedback As String, isSuccessfulAction As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SendTextFeedback(System::Speech::Recognition::RecognitionResult ^ result, System::String ^ feedback, bool isSuccessfulAction);" />
      <MemberSignature Language="F#" Value="static member SendTextFeedback : System.Speech.Recognition.RecognitionResult * string * bool -&gt; bool" Usage="System.Speech.Recognition.SpeechUI.SendTextFeedback (result, feedback, isSuccessfulAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.Speech.Recognition.RecognitionResult" />
        <Parameter Name="feedback" Type="System.String" />
        <Parameter Name="isSuccessfulAction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="b355c-107">有効な <see cref="T:System.Speech.Recognition.RecognitionResult" /> のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b355c-107">A valid <see cref="T:System.Speech.Recognition.RecognitionResult" /> instance.</span>
          </span>
        </param>
        <param name="feedback">
          <span data-ttu-id="b355c-108">
            <see cref="T:System.String" />
            <paramref name="result" /> を生成した認識操作に関するコメントを含む <see cref="T:System.Speech.Recognition.RecognitionResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b355c-108">A <see cref="T:System.String" /> containing a comment about the recognition operation that produced the <see cref="T:System.Speech.Recognition.RecognitionResult" /><paramref name="result" />.</span>
          </span>
        </param>
        <param name="isSuccessfulAction">
          <span data-ttu-id="b355c-109">アプリケーションが認識操作を成功と判断したかどうかを示す <see langword="bool" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b355c-109">A <see langword="bool" /> indicating whether the application deemed the recognition operation a success.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b355c-110">認識操作の状態について、音声プラットフォーム ユーザー インターフェイスに状態と説明テキストを送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b355c-110">Sends status and descriptive text to the Speech platform user interface about the status of a recognition operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b355c-111">メソッドに提供された情報 (<paramref name="Feedback" />、および <paramref name="isSuccessfulAction" />) が Speech プラットフォームのユーザー インターフェイスに対して正常に公開された場合は <see langword="true" />、操作に失敗した場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b355c-111">
              <see langword="true" /> if the information provided to the method (<paramref name="Feedback" />, and <paramref name="isSuccessfulAction" />) was successfully made available to the Speech platform user interface, and <see langword="false" /> if the operation failed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b355c-112"><xref:System.Speech.Recognition.SpeechUI.SendTextFeedback%2A> 入力が認識された場合でも、特定の条件を満たすために認識操作が失敗したことを示すために使用できます。</span><span class="sxs-lookup"><span data-stu-id="b355c-112"><xref:System.Speech.Recognition.SpeechUI.SendTextFeedback%2A> can be used to indicate that a recognition operation failed to meet certain criteria, even if the input was recognized.</span></span>  
  
 <span data-ttu-id="b355c-113">例では、セキュリティ コードについては、入力が認識された完全が検証情報が間違っていたの検証です。</span><span class="sxs-lookup"><span data-stu-id="b355c-113">An example is the verification of security code information, where the input was fully recognized, but the verification information was wrong.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b355c-114">次の例は、ハンドラー、<xref:System.Speech.Recognition.Grammar.SpeechRecognized>イベント。</span><span class="sxs-lookup"><span data-stu-id="b355c-114">The following example is a handler for a <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event.</span></span> <span data-ttu-id="b355c-115">このイベントを使用して、<xref:System.Speech.Recognition.Grammar>形式のパスワードの入力を処理するために設計された、「自分のパスワードは...」です。</span><span class="sxs-lookup"><span data-stu-id="b355c-115">This event is used by a <xref:System.Speech.Recognition.Grammar> that is designed to handle password input of the form, "My password is …".</span></span>  
  
 <span data-ttu-id="b355c-116">場合は、パスワードが存在するか、無効、 **SendTextFeedback**音声プラットフォーム ユーザー インターフェイスにエラー情報を送信するために使用します。</span><span class="sxs-lookup"><span data-stu-id="b355c-116">If a password is not present, or not valid, **SendTextFeedback** is used to send error information to the Speech platform user interface.</span></span>  
  
```  
  
grammar.SpeechRecognized +=  
delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
{  
  SemanticValue semantics = eventArgs.Result.Semantics;  
  RecognitionResult result=eventArgs.Result;  
  
  if (!semantics.ContainsKey("Password"))   
  {  
    SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
  }  
  else  
  {  
    RecognizedAudio pwdAudio = result.GetAudioForWordRange(  
              result.Words[3],  
              result.Words[result.Words.Count - 1]);  
    MemoryStream pwdMemoryStream = new MemoryStream();  
    pwdAudio.WriteToAudioStream(pwdMemoryStream);  
    if (!IsValidPwd(pwdMemoryStream))   
    {  
      string badPwd = System.IO.Path.GetTempPath() + "BadPwd" +   
               (new Random()).Next().ToString() + ".wav";  
      FileStream waveStream = new FileStream(badPwd, FileMode.Create);  
      pwdAudio.WriteToWaveStream(waveStream);  
      waveStream.Flush();  
      waveStream.Close();  
      SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);  
    }  
  }  
};  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>