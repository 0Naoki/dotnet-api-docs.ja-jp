<Type Name="RecognizerInfo" FullName="System.Speech.Recognition.RecognizerInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62fbe48c536992f2a76cfb912ff403e55087a065" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30528756" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RecognizerInfo : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RecognizerInfo extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.RecognizerInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class RecognizerInfo&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RecognizerInfo : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> または <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> インスタンスに関する情報を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初期化された認識エンジンを使用して、識別情報を取得できる<xref:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo%2A?displayProperty=nameWithType>の<xref:System.Speech.Recognition.SpeechRecognizer>オブジェクトまたは<xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo%2A?displayProperty=nameWithType>の<xref:System.Speech.Recognition.SpeechRecognitionEngine>オブジェクト。  
  
 インスタンスで、情報が返されます<xref:System.Speech.Recognition.RecognizerInfo>から取得した、<xref:System.Speech.Recognition.SpeechRecognizer>の設定によって決まりますが、**音声プロパティ**のメンバー、**コントロール パネル**です。  
  
 インスタンスを使用して<xref:System.Speech.Recognition.RecognizerInfo>の特定の構成を構築するために<xref:System.Speech.Recognition.SpeechRecognitionEngine>を使用して、<xref:System.Speech.Recognition.SpeechRecognitionEngine.%23ctor%28System.Speech.Recognition.RecognizerInfo%29>コンス トラクターです。  
  
 静的メソッド<xref:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers%2A>使用可能なすべての一覧を返します<xref:System.Speech.Recognition.SpeechRecognitionEngine>として構成<xref:System.Speech.Recognition.RecognizerInfo>インスタンス。  
  
   
  
## Examples  
 次の例は、検証、指定された<xref:System.Globalization.CultureInfo>と識別子の文字列に対して、許可されている<xref:System.Speech.Recognition.SpeechRecognitionEngine>構成では、一覧として表される<xref:System.Speech.Recognition.RecognizerInfo>オブジェクト。  
  
 場合、<xref:System.Globalization.CultureInfo>と識別子の文字列が有効では、例では、新しいインスタンスを作成する<xref:System.Speech.Recognition.SpeechRecognitionEngine>を使用して、<xref:System.Speech.Recognition.RecognizerInfo>インスタンスを引数として。  
  
```csharp  
  
private SpeechRecognitionEngine SelectRecognizer(CultureInfo requiredCulture, string requiredId)   
{  
  // Select based on a specific recognizer configuration  
  SpeechRecognitionEngine speechRecognitionEngine=null;  
  foreach (RecognizerInfo config in SpeechRecognitionEngine.InstalledRecognizers())   
  {  
    if (config.Culture.Equals(requiredCulture) && config.Id== requiredId)   
    {  
      speechRecognitionEngine = new SpeechRecognitionEngine(config);  
      break;  
    }  
  }  
  return speechRecognitionEngine;  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
  </Docs>
  <Members>
    <Member MemberName="AdditionalInfo">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; AdditionalInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; AdditionalInfo" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizerInfo.AdditionalInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdditionalInfo As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ AdditionalInfo { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> または <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> インスタンスの追加情報を取得します。</summary>
        <value>
          <see cref="T:System.Collections.Generic.IDictionary`2" /> または <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> オブジェクトの構成に関する情報を含む <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> のインスタンスを返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例の実装内のすべての情報を表示するボタンをクリック、<xref:System.Speech.Recognition.RecognizerInfo>内のオブジェクト、<xref:System.Windows.Forms.MessageBox>です。  
  
 含まれているキー/値ペアの<xref:System.Collections.Generic.IDictionary%602>によって返されるインスタンス<xref:System.Speech.Recognition.RecognizerInfo.AdditionalInfo%2A>テキスト テーブルに連結されます。  
  
```csharp  
private void recognizerInfoButton_Click(object sender, EventArgs e)   
{  
  RecognizerInfo info = _recognizer.RecognizerInfo;  
  string AudioFormats = "";  
  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   
  {  
    AudioFormats += String.Format("       {0}\n", fmt.EncodingFormat.ToString());  
  }  
  string AdditionalInfo = "";  
  foreach (string key in info.AdditionalInfo.Keys)   
  {  
    AdditionalInfo += String.Format("      {0}: {1}\n", key, info.AdditionalInfo[key]);  
  }  
  MessageBox.Show(String.Format(  
                     "Name:                 {0 } \n" +  
                     "Description:          {1} \n" +  
                     "SupportedAudioFormats:\n" +  
                     " {2} " +  
                     "Culture:              {3} \n" +  
                     "AdditionalInfo:       \n" +  
                     " {4}\n",  
                     info.Name.ToString(),  
                     info.Description.ToString(),  
                     AudioFormats,  
                     info.Culture.ToString(),  
                     AdditionalInfo));  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizerInfo.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> インスタンスまたは <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> インスタンスでサポートされるカルチャを取得します。</summary>
        <value>特定の <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> または <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> によってサポートされるカルチャに関する情報を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Globalization.CultureInfo>オブジェクトは、カルチャ、関連付けられている言語、国/地域、使用する暦、および日付形式や文字列の並べ替え方法の名前を含めることができます。  
  
   
  
## Examples  
 次の例の実装内のすべての情報を表示するボタンのクリック、<xref:System.Speech.Recognition.RecognizerInfo>インスタンス。 この例では、<xref:System.Speech.Recognition.RecognizerInfo.Culture%2A>の特定を取得するプロパティが文字列、<xref:System.Globalization.CultureInfo>認識エンジンの構成で使用します。  
  
```csharp  
private void recognizerInfoButton_Click(object sender, EventArgs e)   
{  
  RecognizerInfo info = _recognizer.RecognizerInfo;  
  string AudioFormats = "";  
  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   
  {  
    AudioFormats += String.Format("       {0}\n", fmt.EncodingFormat.ToString());  
  }  
  string AdditionalInfo = "";  
  foreach (string key in info.AdditionalInfo.Keys)   
  {  
    AdditionalInfo += String.Format("      {0}: {1}\n", key, info.AdditionalInfo[key]);  
  }  
  MessageBox.Show(String.Format(  
                     "Name:                 {0 }\n" +  
                     "Description:          {1} \n" +  
                     "SupportedAudioFormats:\n" +  
                     "{2} " +  
                     "Culture:              {3} \n" +  
                     "AdditionalInfo:       \n" +  
                     " {4}\n",  
                     info.Name.ToString(),  
                     info.Description.ToString(),  
                     AudioFormats,  
                     info.Culture.ToString(),  
                     AdditionalInfo));  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizerInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> インスタンスまたは <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> インスタンスの説明を取得します。</summary>
        <value>特定の <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> または <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> インスタンスの構成を記述する <see langword="string" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例を次の実装内のすべての情報を表示するボタンをクリック、<xref:System.Speech.Recognition.RecognizerInfo>インスタンス。 この例では、<xref:System.Speech.Recognition.RecognizerInfo.Description%2A>音声認識エンジンの構成の説明を取得するプロパティで表示、<xref:System.Windows.Forms.MessageBox>です。  
  
```csharp  
private void recognizerInfoButton_Click(object sender, EventArgs e)   
{  
  RecognizerInfo info = _recognizer.RecognizerInfo;  
  string AudioFormats = "";  
  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   
  {  
    AudioFormats += String.Format("       {0}\n", fmt.EncodingFormat.ToString());  
  }  
  string AdditionalInfo = "";  
  foreach (string key in info.AdditionalInfo.Keys)   
  {  
    AdditionalInfo += String.Format("      {0}: {1}\n", key, info.AdditionalInfo[key]);  
  }  
  MessageBox.Show(String.Format(  
                     "Name:                 {0 }\n" +  
                     "Description:          {1} \n" +  
                     "SupportedAudioFormats:\n" +  
                     "{2} " +  
                     "Culture:              {3} \n" +  
                     "AdditionalInfo:       \n" +  
                     " {4}\n",  
                     info.Name.ToString(),  
                     info.Description.ToString(),  
                     AudioFormats,  
                     info.Culture.ToString(),  
                     AdditionalInfo));  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.RecognizerInfo.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <c>RecognizerInfo</c> オブジェクトを破棄します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizerInfo.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> インスタンスまたは <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> インスタンスの識別子を取得します。</summary>
        <value>特定の <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> または <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> インスタンスの識別子を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって返された識別子、<xref:System.Speech.Recognition.RecognizerInfo.Id%2A>プロパティは、Windows レジストリ内で認識エンジンのトークンの名前と同じです。  
  
   
  
## Examples  
 次の例の実装内のすべての情報を表示するボタンのクリック、<xref:System.Speech.Recognition.RecognizerInfo>インスタンス。 この例では、<xref:System.Speech.Recognition.RecognizerInfo.Id%2A>認識エンジンの構成の識別子の文字列を取得するプロパティで表示、<xref:System.Windows.Forms.MessageBox>です。  
  
```  
private void recognizerInfoButton_Click(object sender, EventArgs e)   
{  
  RecognizerInfo info = _recognizer.RecognizerInfo;  
  string AudioFormats = "";  
  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   
  {  
    AudioFormats += String.Format("       {0}\n",  fmt.EncodingFormat.ToString());  
  }  
  string AdditionalInfo = "";  
  foreach (string key in info.AdditionalInfo.Keys)   
  {  
    AdditionalInfo += String.Format("      {0}: {1}\n", key, info.AdditionalInfo[key]);  
  }  
  MessageBox.Show(String.Format(  
                           "Name:                 {0 }\n" +  
                           "Description:          {1} \n" +  
                           "SupportedAudioFormats:\n" +  
                           "{2} " +  
                           "Culture:              {3} \n" +  
                           "AdditionalInfo:       \n" +  
                           " {4}\n",  
                           info.Name.ToString(),  
                           info.Description.ToString(),  
                           AudioFormats,  
                           info.Culture.ToString(),  
                           AdditionalInfo));  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizerInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> インスタンスまたは <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> インスタンスのフレンドリ名を取得します。</summary>
        <value>特定の <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> または <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> インスタンスのフレンドリ名を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例の実装内のすべての情報を表示するボタンのクリック、<xref:System.Speech.Recognition.RecognizerInfo>インスタンス。 この例では、<xref:System.Speech.Recognition.RecognizerInfo.Name%2A>認識エンジンの構成のフレンドリ名を取得するプロパティで表示、<xref:System.Windows.Forms.MessageBox>です。  
  
```  
private void recognizerInfoButton_Click(object sender, EventArgs e)   
{  
  RecognizerInfo info = _recognizer.RecognizerInfo;  
  string AudioFormats = "";  
  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   
  {  
    AudioFormats += String.Format("       {0}\n", fmt.EncodingFormat.ToString());  
  }  
  string AdditionalInfo = "";  
  foreach (string key in info.AdditionalInfo.Keys)   
  {  
    AdditionalInfo += String.Format("      {0}: {1}\n", key, info.AdditionalInfo[key]);  
  }  
  MessageBox.Show(String.Format(  
                           "Name:                 {0 }\n" +  
                           "Description:          {1} \n" +  
                           "SupportedAudioFormats:\n" +  
                           "{2} " +  
                           "Culture:              {3} \n" +  
                           "AdditionalInfo:       \n" +  
                           " {4}\n",  
                           info.Name.ToString(),  
                           info.Description.ToString(),  
                           AudioFormats,  
                           info.Culture.ToString(),  
                           AdditionalInfo));  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="SupportedAudioFormats">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.AudioFormat.SpeechAudioFormatInfo&gt; SupportedAudioFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.AudioFormat.SpeechAudioFormatInfo&gt; SupportedAudioFormats" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedAudioFormats As ReadOnlyCollection(Of SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::AudioFormat::SpeechAudioFormatInfo ^&gt; ^ SupportedAudioFormats { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::AudioFormat::SpeechAudioFormatInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.AudioFormat.SpeechAudioFormatInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> インスタンスまたは <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> インスタンスでサポートされるオーディオ形式を取得します。</summary>
        <value>特定の <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> または <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> インスタンスによってサポートされるオーディオ形式の一覧を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例の実装内のすべての情報を表示するボタンのクリック、<xref:System.Speech.Recognition.RecognizerInfo>インスタンス。 この例では、<xref:System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats%2A>のエンコード形式を取得するプロパティが認識エンジンの構成でサポートされているしでそれを表示、<xref:System.Windows.Forms.MessageBox>です。  
  
```  
private void recognizerInfoButton_Click(object sender, EventArgs e)   
{  
  RecognizerInfo info = _recognizer.RecognizerInfo;  
  string AudioFormats = "";  
  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   
  {  
    AudioFormats += String.Format("       {0}\n", fmt.EncodingFormat.ToString());  
  }  
  string AdditionalInfo = "";  
  foreach (string key in info.AdditionalInfo.Keys)   
  {  
    AdditionalInfo += String.Format("      {0}: {1}\n", key, info.AdditionalInfo[key]);  
  }  
  MessageBox.Show(String.Format(  
                           "Name:                 {0 }\n" +  
                           "Description:          {1} \n" +  
                           "SupportedAudioFormats:\n" +  
                           "{2} " +  
                           "Culture:              {3} \n" +  
                           "AdditionalInfo:       \n" +  
                           " {4}\n",  
                           info.Name.ToString(),  
                           info.Description.ToString(),  
                           AudioFormats,  
                           info.Culture.ToString(),  
                           AdditionalInfo));  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Docs>
    </Member>
  </Members>
</Type>