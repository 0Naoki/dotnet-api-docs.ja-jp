<Type Name="SemanticResultValue" FullName="System.Speech.Recognition.SemanticResultValue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="653a138a06a6f44dd5fd94ba82b6a4bf339e421e" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48732700" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SemanticResultValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultValue" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultValue" />
  <TypeSignature Language="F#" Value="type SemanticResultValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_tag.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3bf88-101">セマンティクス値を表し、必要に応じて、音声認識文法のコンポーネントに値を関連付けます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3bf88-101">Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bf88-102">使用<xref:System.Speech.Recognition.SemanticResultValue>と<xref:System.Speech.Recognition.SemanticResultKey>と共に、オブジェクト<xref:System.Speech.Recognition.GrammarBuilder>と<xref:System.Speech.Recognition.Choices>のセマンティックの構造を設計する最も簡単な方法は、<xref:System.Speech.Recognition.Grammar>します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-102">Use of <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="3bf88-103">インスタンスを取得することによって、フレーズのセマンティック情報にアクセス<xref:System.Speech.Recognition.SemanticValue>を使用して、<xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A>プロパティ<xref:System.Speech.Recognition.RecognizedPhrase>します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-103">Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3bf88-104">値によって管理される<xref:System.Speech.Recognition.SemanticResultValue>によってオブジェクトが定義されている<xref:System.Object>インスタンスが、コンス トラクターに渡されます。</span><span class="sxs-lookup"><span data-stu-id="3bf88-104">Values managed by <xref:System.Speech.Recognition.SemanticResultValue> objects are defined by <xref:System.Object> instances passed to their constructors.</span></span> <span data-ttu-id="3bf88-105">基になる型<xref:System.Object>あります`bool`、 `int`、 `float`、または`string`します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-105">The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`.</span></span> <span data-ttu-id="3bf88-106">構築により、その他の種類、<xref:System.Speech.Recognition.Grammar>インスタンス、<xref:System.Speech.Recognition.SemanticResultValue>します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-106">Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="3bf88-107">一般的な使用、<xref:System.Speech.Recognition.SemanticResultValue>インスタンスの認識可能なコンポーネントのインスタンスに関連付けます、 <xref:System.Speech.Recognition.Grammar>、語句、ルールなど、<xref:System.Speech.Recognition.Choices>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bf88-107">The typical use of a <xref:System.Speech.Recognition.SemanticResultValue> instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object.</span></span> <span data-ttu-id="3bf88-108">認識操作の一部として関連付けられているコンポーネントが使用されている場合、<xref:System.Speech.Recognition.SemanticResultValue>返された語句のセマンティクスに値を定義するために使用します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-108">If the associated component is used as part of a recognition operation, the <xref:System.Speech.Recognition.SemanticResultValue> is used to define a value in the semantics of the returned phrase.</span></span>  
  
 <span data-ttu-id="3bf88-109">関連付けるための 2 つの基本的な方法がある、<xref:System.Speech.Recognition.SemanticResultValue>インスタンスを作成するために使用するコンス トラクターに応じての文法要素を持つ、<xref:System.Speech.Recognition.SemanticResultValue>します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-109">There are two basic methods for associating a <xref:System.Speech.Recognition.SemanticResultValue> instance with a grammar element, depending on the constructor used to create the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
-   <span data-ttu-id="3bf88-110">だけの場合、値 (のインスタンスで指定された<xref:System.Object>) を構築するために使用、<xref:System.Speech.Recognition.SemanticResultValue>オブジェクト、<xref:System.Speech.Recognition.SemanticResultValue>に加え、先行する文法コンポーネントに関連付けられて、<xref:System.Speech.Recognition.GrammarBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bf88-110">If only the value (specified by an instance of <xref:System.Object>) is used to construct a <xref:System.Speech.Recognition.SemanticResultValue> object, the <xref:System.Speech.Recognition.SemanticResultValue> is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
     <span data-ttu-id="3bf88-111">たとえば、次のコード フラグメントで、<xref:System.Speech.Recognition.Grammar>これを使用して構築<xref:System.Speech.Recognition.GrammarBuilder>インスタンスは、単語"background"の値を認識`true`認識された語句セマンティクスで設定されます。</span><span class="sxs-lookup"><span data-stu-id="3bf88-111">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
    ```csharp  
    GrammarBuilder backgroundGB=new GrammarBuilder("background");  
    backgroundGB.Append(new SemanticResultValue(true));  
    ```  
  
     <span data-ttu-id="3bf88-112">詳細については、<xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29> の説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3bf88-112">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span>  
  
-   <span data-ttu-id="3bf88-113">文字列値の語句または特定の場合<xref:System.Speech.Recognition.GrammarBuilder>インスタンスが使用されていると共に、<xref:System.Object>を指定する、<xref:System.Speech.Recognition.SemanticResultValue>値、値が文字列値という句で自動的に関連付けられていること、または<xref:System.Speech.Recognition.GrammarBuilder>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="3bf88-113">If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a <xref:System.Speech.Recognition.SemanticResultValue> value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.</span></span>  <span data-ttu-id="3bf88-114">場合は、語句または<xref:System.Speech.Recognition.GrammarBuilder>認識プロセスでオブジェクトを使用して、認識された語句のセマンティクスに、値が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="3bf88-114">If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.</span></span>  
  
     <span data-ttu-id="3bf88-115">次の例は、このし、は機能的には、前の例を明示的に呼び出すのために使用<xref:System.Speech.Recognition.GrammarBuilder.Append%2A>と<xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-115">The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span> <span data-ttu-id="3bf88-116">認識ロジックは語"background"値を使ってかどうか`true`認識されたセマンティクスに追加されます。</span><span class="sxs-lookup"><span data-stu-id="3bf88-116">If the recognition logic uses the word "background", the value `true` will be added to the recognized semantics.</span></span>  
  
    ```csharp  
    fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background", true));  
    ```  
  
     <span data-ttu-id="3bf88-117">詳細については、の説明を参照してください。<xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29>と<xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-117">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span></span>  
  
 <span data-ttu-id="3bf88-118">使用される、<xref:System.Speech.Recognition.Grammar>認識では、すべて<xref:System.Speech.Recognition.SemanticResultValue>インスタンスは、のいずれかに関連付ける必要がある、<xref:System.Speech.Recognition.SemanticValue>をで使用されるオブジェクト<xref:System.Speech.Recognition.Grammar>します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-118">To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all <xref:System.Speech.Recognition.SemanticResultValue> instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="3bf88-119">セマンティクス キーを関連付けることによってこれは、<xref:System.Speech.Recognition.SemanticResultValue>します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-119">This is done by associating a semantic key with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="3bf88-120">セマンティック キーを明示的に接続できる、<xref:System.Speech.Recognition.SemanticResultValue>を使用して、<xref:System.Speech.Recognition.SemanticResultKey>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bf88-120">Semantic keys can be explicitly attached to a <xref:System.Speech.Recognition.SemanticResultValue>, using a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  <span data-ttu-id="3bf88-121"><xref:System.Speech.Recognition.SemanticResultValue> インスタンス キーに明示的にアタッチされているが、既定のルート キーに関連付けられている<xref:System.Speech.Recognition.SemanticValue>します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-121"><xref:System.Speech.Recognition.SemanticResultValue> instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.</span></span>  
  
 <span data-ttu-id="3bf88-122">後に、<xref:System.Speech.Recognition.SemanticResultValue>設定に使用されている、<xref:System.Speech.Recognition.SemanticValue.Value%2A>タグ付けされた既定のルート キー、または、特定であるかどうか、 <xref:System.Speech.Recognition.SemanticResultKey>、その値を変更する必要がない、または認識操作中に例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-122">After a <xref:System.Speech.Recognition.SemanticResultValue> has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.</span></span>  
  
 <span data-ttu-id="3bf88-123">設定し、ルートを変更し、ために、次の例の例外が発生する<xref:System.Speech.Recognition.SemanticValue.Value%2A>の<xref:System.Speech.Recognition.Grammar>します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-123">The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
```csharp  
GrammarBuilder gb=new GrammarBuilder();  
gb.Append(new SemanticResultValue("One"));  
gb.Append(new SemanticResultValue("Two"));  
```  
  
 <span data-ttu-id="3bf88-124">その一方で、次の例のコードが許可されます。</span><span class="sxs-lookup"><span data-stu-id="3bf88-124">On the other hand, the code in the following example is permitted.</span></span> <span data-ttu-id="3bf88-125">複数のインスタンスを定義しています。 <xref:System.Speech.Recognition.SemanticResultValue>、に含まれる、<xref:System.Speech.Recognition.Choices>オブジェクト、およびキーの値の設定に使用される 1 つだけが`bgOrfgText`します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-125">Although it defines multiple instances of <xref:System.Speech.Recognition.SemanticResultValue>, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.</span></span>  
  
```csharp  
Choices fgOrbgChoice = new Choices();  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background"));  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground"));  
SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgText", fgOrbgChoice);  
```
  
## Examples  
 <span data-ttu-id="3bf88-126">次の例を返します、 <xref:System.Speech.Recognition.Grammar> "設定/変更/変更の前景色や背景... コマンドを認識します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-126">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="3bf88-127">[色 の一覧]"。</span><span class="sxs-lookup"><span data-stu-id="3bf88-127">[color list]".</span></span>  <span data-ttu-id="3bf88-128"><xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.SemanticResultKey>インスタンス (と共に<xref:System.Speech.Recognition.Choices>と<xref:System.Speech.Recognition.GrammarBuilder>オブジェクト) 認識を解析できる形式を定義するために使用します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-128"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="3bf88-129">解析のセマンティクスは、どの色が要求されたおよび変更する前景色または背景が決定します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-129">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(new SemanticResultValue(introGB, String.Format("Command: {0}", introString)));  
  }    
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
        (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                       cmdIntro,  
                       new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361587(v%3doffice.14)">
      <span data-ttu-id="3bf88-130">SemanticResultKey を使用して、SemanticResultValue を抽出するには</span>
      <span class="sxs-lookup">
        <span data-stu-id="3bf88-130">Using a SemanticResultKey to Extract a SemanticResultValue</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3bf88-131">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-131">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bf88-132">`SemanticResultValue`コンス トラクターの指定がサポートする<xref:System.Object>基になるデータ型のインスタンスで`bool`、 `int`、 `float`、または`string`します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-132">The `SemanticResultValue` constructors support specifying an <xref:System.Object> instance with an underlying data type of `bool`, `int`, `float`, or `string`.</span></span>  
  
 <span data-ttu-id="3bf88-133">コンス トラクターを作成できる、`SemanticResultValue`で 2 つの状況のいずれかのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="3bf88-133">A constructor can create a `SemanticResultValue` instance in either of two circumstances:</span></span>  
  
-   <span data-ttu-id="3bf88-134">`SemanticResultValue`を使用する場合、インスタンスが文法要素で明示的に関連付ける必要があります、<xref:System.Speech.Recognition.GrammarBuilder>を構築する、<xref:System.Speech.Recognition.Grammar>します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-134">The `SemanticResultValue` instance must be explicitly associated with a grammar element when using a <xref:System.Speech.Recognition.GrammarBuilder> to construct a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
-   <span data-ttu-id="3bf88-135">`SemanticResultValue`文字列値の語句に関連付けられて、<xref:System.Speech.Recognition.GrammarBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bf88-135">The `SemanticResultValue` is already associated with a string value phrase or a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3bf88-136">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> で管理された値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-136">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="3bf88-137">
            <see langword="bool" /> 型、<see langword="int" /> 型、<see langword="float" /> 型、または <see langword="string" /> 型である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-137">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3bf88-138">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> クラスの新しいインスタンスを初期化して、セマンティクス値を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-138">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and specifies a semantic value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bf88-139">A`SemanticResultValue`これによって返されるコンス トラクターは、特定の文法要素に関連付けられていません。</span><span class="sxs-lookup"><span data-stu-id="3bf88-139">A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element.</span></span> <span data-ttu-id="3bf88-140">関連付け行う必要があります明示的なのインスタンスを使用して`SemanticResultValue`と共に<xref:System.Speech.Recognition.GrammarBuilder>します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-140">The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3bf88-141">たとえば、次のコード フラグメントで、<xref:System.Speech.Recognition.Grammar>これを使用して構築<xref:System.Speech.Recognition.GrammarBuilder>インスタンスは、単語"background"の値を認識`true`認識された語句セマンティクスで設定されます。</span><span class="sxs-lookup"><span data-stu-id="3bf88-141">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
```csharp  
GrammarBuilder backgroundGB=new GrammarBuilder("background");  
backgroundGB.Append(new SemanticResultValue(true));  
```  
  
   
  
## Examples  
 <span data-ttu-id="3bf88-142">次の例を返します、 <xref:System.Speech.Recognition.Grammar> "設定/変更/変更の前景色や背景... コマンドを認識します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-142">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="3bf88-143">[色 の一覧]"。</span><span class="sxs-lookup"><span data-stu-id="3bf88-143">[color list]".</span></span> <span data-ttu-id="3bf88-144"><xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.SemanticResultKey>インスタンス (と共に<xref:System.Speech.Recognition.Choices>と<xref:System.Speech.Recognition.GrammarBuilder>オブジェクト) 認識を解析できる形式を定義するために使用します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-144"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="3bf88-145">解析のセマンティクスは、どの色が要求されたおよび変更する前景色または背景が決定します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-145">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
        cmdIntro,   
        new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Speech::Recognition::GrammarBuilder ^ builder, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : System.Speech.Recognition.GrammarBuilder * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (builder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3bf88-146">認識で使用される文法コンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-146">A grammar component to be used in recognition.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="3bf88-147">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> で管理された値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-147">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="3bf88-148">
            <see langword="bool" /> 型、<see langword="int" /> 型、<see langword="float" /> 型、または <see langword="string" /> 型である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-148">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3bf88-149">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> クラスの新しいインスタンスを初期化して、セマンティクス値と <see cref="T:System.Speech.Recognition.GrammarBuilder" /> オブジェクトを関連付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bf88-150">文法要素を指定して場合<xref:System.Speech.Recognition.GrammarBuilder>は認識のロジックで使用`value`は認識されている出力のセマンティクスで設定されます。</span><span class="sxs-lookup"><span data-stu-id="3bf88-150">If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="3bf88-151">次のコード フラグメントで認識ロジックの構築と、<xref:System.Speech.Recognition.GrammarBuilder>インスタンス (`myGb`) を使用して、<xref:System.Speech.Recognition.Choices>オブジェクト (`myChoice`) を識別する値を入力、`true`認識されたセマンティクスに追加されます。</span><span class="sxs-lookup"><span data-stu-id="3bf88-151">In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue(myChoice, true);  
```  
  
 <span data-ttu-id="3bf88-152">として<xref:System.Speech.Recognition.GrammarBuilder>の暗黙的な変換をサポートして<xref:System.Speech.Recognition.Choices>、 `SemanticResultValue`、および<xref:System.Speech.Recognition.SemanticResultKey>、このコンス トラクターはそれらのオブジェクトも使用できます。</span><span class="sxs-lookup"><span data-stu-id="3bf88-152">As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bf88-153">次の例を返します、 <xref:System.Speech.Recognition.Grammar> "設定/変更/変更の前景色や背景... コマンドを認識します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-153">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="3bf88-154">[色 の一覧]"。</span><span class="sxs-lookup"><span data-stu-id="3bf88-154">[color list]".</span></span> <span data-ttu-id="3bf88-155"><xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.SemanticResultKey>インスタンス (と共に<xref:System.Speech.Recognition.Choices>と<xref:System.Speech.Recognition.GrammarBuilder>オブジェクト) 認識を解析できる形式を定義するために使用します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-155"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="3bf88-156">解析のセマンティクスは、どの色が要求されたおよび変更する前景色または背景が決定します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-156">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
    }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                      cmdIntro,  
                      new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (string phrase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::String ^ phrase, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : string * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (phrase, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3bf88-157">認識で使用される語句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-157">A phrase to be used in recognition.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="3bf88-158">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> で管理された値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-158">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="3bf88-159">
            <see langword="bool" /> 型、<see langword="int" /> 型、<see langword="float" /> 型、または <see langword="string" /> 型である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-159">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3bf88-160">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> クラスの新しいインスタンスを初期化して、セマンティクス値と <see cref="T:System.String" /> オブジェクトを関連付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-160">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bf88-161">によって、文字列が指定されている場合`phrase`は認識のロジックで使用`value`は認識されている出力のセマンティクスで設定されます。</span><span class="sxs-lookup"><span data-stu-id="3bf88-161">If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="3bf88-162">認識ロジックを使用して構築する場合は次のコード フラグメントで、<xref:System.Speech.Recognition.GrammarBuilder>インスタンス (`myGb`) 文字列「住宅ローン」を使用して識別するために値を入力、`true`認識されたセマンティクスに追加されます。</span><span class="sxs-lookup"><span data-stu-id="3bf88-162">In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string "my mortgage" to identify input, the value `true` will be added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue("my mortgage", true);  
```  
  
   
  
## Examples  
 <span data-ttu-id="3bf88-163">次の例を返します、 <xref:System.Speech.Recognition.Grammar> "設定/変更/変更の前景色や背景... コマンドを認識します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-163">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="3bf88-164">[色 の一覧]"。</span><span class="sxs-lookup"><span data-stu-id="3bf88-164">[color list]".</span></span> <span data-ttu-id="3bf88-165"><xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.SemanticResultKey>インスタンス (と共に<xref:System.Speech.Recognition.Choices>と<xref:System.Speech.Recognition.GrammarBuilder>オブジェクト) 認識を解析できる形式を定義するために使用します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-165"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="3bf88-166">解析のセマンティクスは、どの色が要求されたおよび変更する前景色または背景が決定します。</span><span class="sxs-lookup"><span data-stu-id="3bf88-166">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }  
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(cmdIntro,  
                         new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="semanticResultValue.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3bf88-167">現在の <see cref="T:System.Speech.Recognition.GrammarBuilder" /> インスタンスから構築された <see cref="T:System.Speech.Recognition.SemanticResultValue" /> のインスタンスを返します </span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-167">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3bf88-168">現在の <see cref="T:System.Speech.Recognition.GrammarBuilder" /> インスタンスから構築された <see cref="T:System.Speech.Recognition.SemanticResultValue" /> のインスタンスを返します </span>
          <span class="sxs-lookup">
            <span data-stu-id="3bf88-168">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bf88-169">使用<xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A>を使用すると、<xref:System.Speech.Recognition.GrammarBuilder>を受け取るコンス トラクター、<xref:System.Speech.Recognition.SemanticResultValue>を引数として (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>)。</span><span class="sxs-lookup"><span data-stu-id="3bf88-169">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bf88-170">次の例では、作成<xref:System.Speech.Recognition.Grammar>背景色を変更するためのコマンドをサポートするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3bf88-170">The following example creates <xref:System.Speech.Recognition.Grammar> objects that support commands to change the background color.</span></span>  
  
 <span data-ttu-id="3bf88-171">A<xref:System.Speech.Recognition.Choices>オブジェクト (`colorChoice`) を使用して入力の背景色のオプションの一覧を含む、<xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29>メソッド<xref:System.Speech.Recognition.GrammarBuilder>インスタンスから取得した、<xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder>メソッドを`SemanticResultValue`作成されたオブジェクト色の文字列。</span><span class="sxs-lookup"><span data-stu-id="3bf88-171">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances that are obtained from the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the `SemanticResultValue` objects created from color strings.</span></span>  
  
 <span data-ttu-id="3bf88-172">A<xref:System.Speech.Recognition.GrammarBuilder>呼び出すことによって取得し、<xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder>上、<xref:System.Speech.Recognition.SemanticResultKey>インスタンスで、セマンティックの選択肢をキーに使用される、`colorChoice`インスタンス。</span><span class="sxs-lookup"><span data-stu-id="3bf88-172">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in the `colorChoice` instance.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RBG.  
  // Choices constructors do not take a SemanticResultValue parameter, so  
  // cast SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    SemanticResultValue colorValue =   
        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
    colorChoice.Add(colorValue.ToGrammarBuilder());  
  }  
  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with an introductory phrase and the  
  // color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the final grammar, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  
  grammar.Name = "Set Background Color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>