<Type Name="SemanticResultValue" FullName="System.Speech.Recognition.SemanticResultValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73739246a3d34b754f871bb66457c788887dd0b4" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70560263" /></Metadata><TypeSignature Language="C#" Value="public class SemanticResultValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultValue" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultValue" />
  <TypeSignature Language="F#" Value="type SemanticResultValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_tag.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f682e-101">セマンティクス値を表し、必要に応じて、音声認識文法のコンポーネントに値を関連付けます。</span><span class="sxs-lookup"><span data-stu-id="f682e-101">Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f682e-102"><xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.SemanticResultKey>およびオブジェクト <xref:System.Speech.Recognition.Choices> の使用は、のセマンティック構造を設計する最も簡単な方法です。 <xref:System.Speech.Recognition.Grammar> <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="f682e-102">Use of <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="f682e-103">句のセマンティック情報にアクセスする<xref:System.Speech.Recognition.SemanticValue> <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A>には、のプロパティ<xref:System.Speech.Recognition.RecognizedPhrase>を使用して、のインスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="f682e-103">Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f682e-104">オブジェクトによっ<xref:System.Speech.Recognition.SemanticResultValue>て管理される<xref:System.Object>値は、コンストラクターに渡されるインスタンスによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="f682e-104">Values managed by <xref:System.Speech.Recognition.SemanticResultValue> objects are defined by <xref:System.Object> instances passed to their constructors.</span></span> <span data-ttu-id="f682e-105">この<xref:System.Object>の基になる型は`bool`、 `int` `float`、、、 `string`またはである必要があります。</span><span class="sxs-lookup"><span data-stu-id="f682e-105">The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`.</span></span> <span data-ttu-id="f682e-106">それ以外の型の場合は、 <xref:System.Speech.Recognition.Grammar> <xref:System.Speech.Recognition.SemanticResultValue>を使用してインスタンスを構築できません。</span><span class="sxs-lookup"><span data-stu-id="f682e-106">Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="f682e-107"><xref:System.Speech.Recognition.SemanticResultValue>インスタンスの一般的な使用では、句、規則、 <xref:System.Speech.Recognition.Choices>オブジェクトなど、 <xref:System.Speech.Recognition.Grammar>の認識可能なコンポーネントにインスタンスを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="f682e-107">The typical use of a <xref:System.Speech.Recognition.SemanticResultValue> instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object.</span></span> <span data-ttu-id="f682e-108">関連付けられているコンポーネントが認識操作の一部として<xref:System.Speech.Recognition.SemanticResultValue>使用されている場合は、を使用して、返された語句のセマンティクスに値が定義されます。</span><span class="sxs-lookup"><span data-stu-id="f682e-108">If the associated component is used as part of a recognition operation, the <xref:System.Speech.Recognition.SemanticResultValue> is used to define a value in the semantics of the returned phrase.</span></span>  
  
 <span data-ttu-id="f682e-109">インスタンスを<xref:System.Speech.Recognition.SemanticResultValue>文法要素に関連付けるには、の<xref:System.Speech.Recognition.SemanticResultValue>作成に使用されるコンストラクターに応じて、2つの基本的な方法があります。</span><span class="sxs-lookup"><span data-stu-id="f682e-109">There are two basic methods for associating a <xref:System.Speech.Recognition.SemanticResultValue> instance with a grammar element, depending on the constructor used to create the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
-   <span data-ttu-id="f682e-110">の<xref:System.Object>インスタンスによって指定された値のみがオブジェクトの<xref:System.Speech.Recognition.SemanticResultValue>構築に使用される<xref:System.Speech.Recognition.SemanticResultValue>場合、は、 <xref:System.Speech.Recognition.GrammarBuilder>オブジェクトに加えて、その前にある文法コンポーネントに関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="f682e-110">If only the value (specified by an instance of <xref:System.Object>) is used to construct a <xref:System.Speech.Recognition.SemanticResultValue> object, the <xref:System.Speech.Recognition.SemanticResultValue> is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
     <span data-ttu-id="f682e-111">たとえば、次のコード片で、この<xref:System.Speech.Recognition.Grammar> <xref:System.Speech.Recognition.GrammarBuilder>インスタンスを使用して構築されたが "background" という語`true`を認識している場合、の値は認識された句のセマンティクスで設定されます。</span><span class="sxs-lookup"><span data-stu-id="f682e-111">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
    ```csharp  
    GrammarBuilder backgroundGB=new GrammarBuilder("background");  
    backgroundGB.Append(new SemanticResultValue(true));  
    ```  
  
     <span data-ttu-id="f682e-112">詳細については、<xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29> の説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f682e-112">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span>  
  
-   <span data-ttu-id="f682e-113">値を指定<xref:System.Speech.Recognition.GrammarBuilder> <xref:System.Object>すると共に文字列値の句または特定のインスタンスが使用されている場合は、その値が文字列値の<xref:System.Speech.Recognition.GrammarBuilder>句またはインスタンスに自動的に関連付けられます。 <xref:System.Speech.Recognition.SemanticResultValue></span><span class="sxs-lookup"><span data-stu-id="f682e-113">If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a <xref:System.Speech.Recognition.SemanticResultValue> value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.</span></span>  <span data-ttu-id="f682e-114">語句または<xref:System.Speech.Recognition.GrammarBuilder>オブジェクトが認識プロセスで使用されている場合、値は認識された語句のセマンティクスに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="f682e-114">If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.</span></span>  
  
     <span data-ttu-id="f682e-115">次の例は、これを示しています。これは、 <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>と<xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>の明示的な呼び出しを使用する前の例と機能的には同じです。</span><span class="sxs-lookup"><span data-stu-id="f682e-115">The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span> <span data-ttu-id="f682e-116">認識ロジックで "background" という単語が使用され`true`ている場合は、認識されたセマンティクスに値が追加されます。</span><span class="sxs-lookup"><span data-stu-id="f682e-116">If the recognition logic uses the word "background", the value `true` will be added to the recognized semantics.</span></span>  
  
    ```csharp  
    fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background", true));  
    ```  
  
     <span data-ttu-id="f682e-117">詳細については、「」 <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29>および<xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>「」の説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f682e-117">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span></span>  
  
 <span data-ttu-id="f682e-118"><xref:System.Speech.Recognition.Grammar>によって使用されるには、 <xref:System.Speech.Recognition.SemanticResultValue>すべてのインスタンスが、その<xref:System.Speech.Recognition.Grammar>によっ<xref:System.Speech.Recognition.SemanticValue>て使用されるいずれかのオブジェクトに関連付けられている必要があります。</span><span class="sxs-lookup"><span data-stu-id="f682e-118">To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all <xref:System.Speech.Recognition.SemanticResultValue> instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="f682e-119">これは、 <xref:System.Speech.Recognition.SemanticResultValue>セマンティックキーをに関連付けることによって行われます。</span><span class="sxs-lookup"><span data-stu-id="f682e-119">This is done by associating a semantic key with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="f682e-120">オブジェクト <xref:System.Speech.Recognition.SemanticResultKey> を使用して、セマンティックキー <xref:System.Speech.Recognition.SemanticResultValue>を明示的ににアタッチすることができます。</span><span class="sxs-lookup"><span data-stu-id="f682e-120">Semantic keys can be explicitly attached to a <xref:System.Speech.Recognition.SemanticResultValue>, using a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  <span data-ttu-id="f682e-121"><xref:System.Speech.Recognition.SemanticResultValue>キーに明示的にアタッチされていないインスタンスは、既定<xref:System.Speech.Recognition.SemanticValue>のルートキーにアタッチされます。</span><span class="sxs-lookup"><span data-stu-id="f682e-121"><xref:System.Speech.Recognition.SemanticResultValue> instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.</span></span>  
  
 <span data-ttu-id="f682e-122">を<xref:System.Speech.Recognition.SemanticResultValue>使用してを<xref:System.Speech.Recognition.SemanticValue.Value%2A>設定した後、既定のルート<xref:System.Speech.Recognition.SemanticResultKey>キーを使用してタグ付けされているかどうかにかかわらず、その値を変更する必要がないか、認識操作中に例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="f682e-122">After a <xref:System.Speech.Recognition.SemanticResultValue> has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.</span></span>  
  
 <span data-ttu-id="f682e-123">次の例では、 <xref:System.Speech.Recognition.SemanticValue.Value%2A> <xref:System.Speech.Recognition.Grammar>のルートを設定してから変更するため、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="f682e-123">The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
```csharp  
GrammarBuilder gb=new GrammarBuilder();  
gb.Append(new SemanticResultValue("One"));  
gb.Append(new SemanticResultValue("Two"));  
```  
  
 <span data-ttu-id="f682e-124">一方、次の例のコードは許可されています。</span><span class="sxs-lookup"><span data-stu-id="f682e-124">On the other hand, the code in the following example is permitted.</span></span> <span data-ttu-id="f682e-125">の複数の<xref:System.Speech.Recognition.SemanticResultValue>インスタンスが定義されていますが<xref:System.Speech.Recognition.Choices> 、オブジェクトに含まれており、1つだけがキー `bgOrfgText`の値を設定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="f682e-125">Although it defines multiple instances of <xref:System.Speech.Recognition.SemanticResultValue>, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.</span></span>  
  
```csharp  
Choices fgOrbgChoice = new Choices();  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background"));  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground"));  
SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgText", fgOrbgChoice);  
```
  
## Examples  
 <span data-ttu-id="f682e-126">次の例では<xref:System.Speech.Recognition.Grammar> 、コマンド "Set/Change/Alter 前景/Background..." を認識するを返します。</span><span class="sxs-lookup"><span data-stu-id="f682e-126">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="f682e-127">[カラーリスト]。</span><span class="sxs-lookup"><span data-stu-id="f682e-127">[color list]".</span></span>  <span data-ttu-id="f682e-128"><xref:System.Speech.Recognition.SemanticResultValue>および<xref:System.Speech.Recognition.SemanticResultKey>インスタンス ( <xref:System.Speech.Recognition.Choices>および<xref:System.Speech.Recognition.GrammarBuilder>オブジェクトと共に) を使用して、認識時に解析できるセマンティクスを定義します。</span><span class="sxs-lookup"><span data-stu-id="f682e-128"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="f682e-129">解析されたセマンティクスは、要求された色と、前景色または背景色を変更するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f682e-129">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(new SemanticResultValue(introGB, String.Format("Command: {0}", introString)));  
  }    
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
        (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                       cmdIntro,  
                       new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361587(v%3doffice.14)"><span data-ttu-id="f682e-130">SemanticResultKey を使用して SemanticResultValue を抽出する</span><span class="sxs-lookup"><span data-stu-id="f682e-130">Using a SemanticResultKey to Extract a SemanticResultValue</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f682e-131"><see cref="T:System.Speech.Recognition.SemanticResultValue" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f682e-131">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f682e-132">コンストラクター `SemanticResultValue`は、 <xref:System.Object> `float` 、、 `bool` 、または `string` の基になるデータ型のインスタンスの指定をサポートします。 `int`</span><span class="sxs-lookup"><span data-stu-id="f682e-132">The `SemanticResultValue` constructors support specifying an <xref:System.Object> instance with an underlying data type of `bool`, `int`, `float`, or `string`.</span></span>  
  
 <span data-ttu-id="f682e-133">コンストラクターは、次の`SemanticResultValue` 2 つの状況のいずれかでインスタンスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="f682e-133">A constructor can create a `SemanticResultValue` instance in either of two circumstances:</span></span>  
  
-   <span data-ttu-id="f682e-134">を`SemanticResultValue` <xref:System.Speech.Recognition.Grammar>使用してを構築する場合、インスタンスは、文法要素に明示的に関連付けられている必要があります。 <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="f682e-134">The `SemanticResultValue` instance must be explicitly associated with a grammar element when using a <xref:System.Speech.Recognition.GrammarBuilder> to construct a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
-   <span data-ttu-id="f682e-135">は`SemanticResultValue` 、既に文字列値の語句<xref:System.Speech.Recognition.GrammarBuilder>またはオブジェクトに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="f682e-135">The `SemanticResultValue` is already associated with a string value phrase or a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f682e-136"><see cref="T:System.Speech.Recognition.SemanticResultValue" /> で管理された値。</span><span class="sxs-lookup"><span data-stu-id="f682e-136">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="f682e-137"><see langword="bool" /> 型、<see langword="int" /> 型、<see langword="float" /> 型、または <see langword="string" /> 型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="f682e-137">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="f682e-138"><see cref="T:System.Speech.Recognition.SemanticResultValue" /> クラスの新しいインスタンスを初期化して、セマンティクス値を指定します。</span><span class="sxs-lookup"><span data-stu-id="f682e-138">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and specifies a semantic value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f682e-139">この`SemanticResultValue`コンストラクターによって返されたは、特定の文法要素に関連付けられていません。</span><span class="sxs-lookup"><span data-stu-id="f682e-139">A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element.</span></span> <span data-ttu-id="f682e-140">`SemanticResultValue` と <xref:System.Speech.Recognition.GrammarBuilder> 共にのインスタンスを使用して、アソシエーションを明示的に行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="f682e-140">The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="f682e-141">たとえば、次のコード片で、この<xref:System.Speech.Recognition.Grammar> <xref:System.Speech.Recognition.GrammarBuilder>インスタンスを使用して構築されたが "background" という語`true`を認識している場合、の値は認識された句のセマンティクスで設定されます。</span><span class="sxs-lookup"><span data-stu-id="f682e-141">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
```csharp  
GrammarBuilder backgroundGB=new GrammarBuilder("background");  
backgroundGB.Append(new SemanticResultValue(true));  
```  
  
   
  
## Examples  
 <span data-ttu-id="f682e-142">次の例では<xref:System.Speech.Recognition.Grammar> 、コマンド "Set/Change/Alter 前景/Background..." を認識するを返します。</span><span class="sxs-lookup"><span data-stu-id="f682e-142">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="f682e-143">[カラーリスト]。</span><span class="sxs-lookup"><span data-stu-id="f682e-143">[color list]".</span></span> <span data-ttu-id="f682e-144"><xref:System.Speech.Recognition.SemanticResultValue>および<xref:System.Speech.Recognition.SemanticResultKey>インスタンス ( <xref:System.Speech.Recognition.Choices>および<xref:System.Speech.Recognition.GrammarBuilder>オブジェクトと共に) を使用して、認識時に解析できるセマンティクスを定義します。</span><span class="sxs-lookup"><span data-stu-id="f682e-144"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="f682e-145">解析されたセマンティクスは、要求された色と、前景色または背景色を変更するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f682e-145">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
        cmdIntro,   
        new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Speech::Recognition::GrammarBuilder ^ builder, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : System.Speech.Recognition.GrammarBuilder * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (builder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="f682e-146">認識で使用される文法コンポーネント。</span><span class="sxs-lookup"><span data-stu-id="f682e-146">A grammar component to be used in recognition.</span></span></param>
        <param name="value"><span data-ttu-id="f682e-147"><see cref="T:System.Speech.Recognition.SemanticResultValue" /> で管理された値。</span><span class="sxs-lookup"><span data-stu-id="f682e-147">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="f682e-148"><see langword="bool" /> 型、<see langword="int" /> 型、<see langword="float" /> 型、または <see langword="string" /> 型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="f682e-148">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="f682e-149"><see cref="T:System.Speech.Recognition.SemanticResultValue" /> クラスの新しいインスタンスを初期化して、セマンティクス値と <see cref="T:System.Speech.Recognition.GrammarBuilder" /> オブジェクトを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="f682e-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f682e-150">によって指定され<xref:System.Speech.Recognition.GrammarBuilder>た文法要素が認識ロジックで`value`使用されている場合、は認識される出力のセマンティクスで設定されます。</span><span class="sxs-lookup"><span data-stu-id="f682e-150">If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="f682e-151">次のコード<xref:System.Speech.Recognition.GrammarBuilder>片では、インスタンス (`myGb`) を使用して構築された<xref:System.Speech.Recognition.Choices>認識ロジック`myChoice`がオブジェクト () を使用し`true`て入力を識別すると、その値が認識されるセマンティクスに追加されます。</span><span class="sxs-lookup"><span data-stu-id="f682e-151">In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue(myChoice, true);  
```  
  
 <span data-ttu-id="f682e-152">で<xref:System.Speech.Recognition.GrammarBuilder>は、、 <xref:System.Speech.Recognition.Choices> `SemanticResultValue`、および <xref:System.Speech.Recognition.SemanticResultKey> の暗黙的な変換がサポートされているため、このコンストラクターでもこれらのオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="f682e-152">As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f682e-153">次の例では<xref:System.Speech.Recognition.Grammar> 、コマンド "Set/Change/Alter 前景/Background..." を認識するを返します。</span><span class="sxs-lookup"><span data-stu-id="f682e-153">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="f682e-154">[カラーリスト]。</span><span class="sxs-lookup"><span data-stu-id="f682e-154">[color list]".</span></span> <span data-ttu-id="f682e-155"><xref:System.Speech.Recognition.SemanticResultValue>および<xref:System.Speech.Recognition.SemanticResultKey>インスタンス ( <xref:System.Speech.Recognition.Choices>および<xref:System.Speech.Recognition.GrammarBuilder>オブジェクトと共に) を使用して、認識時に解析できるセマンティクスを定義します。</span><span class="sxs-lookup"><span data-stu-id="f682e-155"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="f682e-156">解析されたセマンティクスは、要求された色と、前景色または背景色を変更するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f682e-156">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
    }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                      cmdIntro,  
                      new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (string phrase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::String ^ phrase, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : string * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (phrase, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="f682e-157">認識で使用される語句。</span><span class="sxs-lookup"><span data-stu-id="f682e-157">A phrase to be used in recognition.</span></span></param>
        <param name="value"><span data-ttu-id="f682e-158"><see cref="T:System.Speech.Recognition.SemanticResultValue" /> で管理された値。</span><span class="sxs-lookup"><span data-stu-id="f682e-158">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="f682e-159"><see langword="bool" /> 型、<see langword="int" /> 型、<see langword="float" /> 型、または <see langword="string" /> 型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="f682e-159">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="f682e-160"><see cref="T:System.Speech.Recognition.SemanticResultValue" /> クラスの新しいインスタンスを初期化して、セマンティクス値と <see cref="T:System.String" /> オブジェクトを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="f682e-160">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.String" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f682e-161">によって指定さ`phrase`れた文字列が認識ロジックで`value`使用されている場合、は認識される出力のセマンティクスで設定されます。</span><span class="sxs-lookup"><span data-stu-id="f682e-161">If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="f682e-162">次のコード片では、 <xref:System.Speech.Recognition.GrammarBuilder>インスタンス (`myGb`) を使用して構築された認識ロジックが文字列 "my 抵当" を使用し`true`て入力を識別すると、その値が認識されるセマンティクスに追加されます。</span><span class="sxs-lookup"><span data-stu-id="f682e-162">In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string "my mortgage" to identify input, the value `true` will be added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue("my mortgage", true);  
```  
  
   
  
## Examples  
 <span data-ttu-id="f682e-163">次の例では<xref:System.Speech.Recognition.Grammar> 、コマンド "Set/Change/Alter 前景/Background..." を認識するを返します。</span><span class="sxs-lookup"><span data-stu-id="f682e-163">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="f682e-164">[カラーリスト]。</span><span class="sxs-lookup"><span data-stu-id="f682e-164">[color list]".</span></span> <span data-ttu-id="f682e-165"><xref:System.Speech.Recognition.SemanticResultValue>および<xref:System.Speech.Recognition.SemanticResultKey>インスタンス ( <xref:System.Speech.Recognition.Choices>および<xref:System.Speech.Recognition.GrammarBuilder>オブジェクトと共に) を使用して、認識時に解析できるセマンティクスを定義します。</span><span class="sxs-lookup"><span data-stu-id="f682e-165"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="f682e-166">解析されたセマンティクスは、要求された色と、前景色または背景色を変更するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f682e-166">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }  
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(cmdIntro,  
                         new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="semanticResultValue.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f682e-167">現在の <see cref="T:System.Speech.Recognition.GrammarBuilder" /> インスタンスから構築された <see cref="T:System.Speech.Recognition.SemanticResultValue" /> のインスタンスを返します</span><span class="sxs-lookup"><span data-stu-id="f682e-167">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span></span></summary>
        <returns><span data-ttu-id="f682e-168">現在の <see cref="T:System.Speech.Recognition.GrammarBuilder" /> インスタンスから構築された <see cref="T:System.Speech.Recognition.SemanticResultValue" /> のインスタンスを返します</span><span class="sxs-lookup"><span data-stu-id="f682e-168">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f682e-169">の<xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A>使用は、を<xref:System.Speech.Recognition.SemanticResultValue>引数とし<xref:System.Speech.Recognition.GrammarBuilder>て受け取るコンストラクターを使用することと<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>同じです ()。</span><span class="sxs-lookup"><span data-stu-id="f682e-169">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f682e-170">次の例で<xref:System.Speech.Recognition.Grammar>は、背景色を変更するコマンドをサポートするオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="f682e-170">The following example creates <xref:System.Speech.Recognition.Grammar> objects that support commands to change the background color.</span></span>  
  
 <span data-ttu-id="f682e-171">`colorChoice` <xref:System.Speech.Recognition.GrammarBuilder> <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> `SemanticResultValue`背景色のオプションの一覧を含む<xref:System.Speech.Recognition.Choices>オブジェクト () は、メソッドを使用して、作成されたオブジェクトのメソッドから取得されたインスタンスを <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> 格納します。色の文字列から。</span><span class="sxs-lookup"><span data-stu-id="f682e-171">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances that are obtained from the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the `SemanticResultValue` objects created from color strings.</span></span>  
  
 <span data-ttu-id="f682e-172">次<xref:System.Speech.Recognition.GrammarBuilder>に、 <xref:System.Speech.Recognition.SemanticResultKey>インスタンスでを<xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder>呼び出すことによって、が取得されます。これは`colorChoice` 、インスタンスのセマンティック選択にキーを指定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="f682e-172">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in the `colorChoice` instance.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RBG.  
  // Choices constructors do not take a SemanticResultValue parameter, so  
  // cast SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    SemanticResultValue colorValue =   
        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
    colorChoice.Add(colorValue.ToGrammarBuilder());  
  }  
  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with an introductory phrase and the  
  // color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the final grammar, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  
  grammar.Name = "Set Background Color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
