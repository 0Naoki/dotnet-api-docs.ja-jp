<Type Name="BaseControlArray" FullName="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="899df63c31493793f8ab9a9a73c79dd418f9a419" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53504598" /></Metadata><TypeSignature Language="C#" Value="public abstract class BaseControlArray : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BaseControlArray extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseControlArray&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseControlArray abstract : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type BaseControlArray = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="abd00-101">Visual Basic 6.0 からアップグレードされたアプリケーション内のコントロール配列に共通の基本的な機能を実装します。</span><span class="sxs-lookup"><span data-stu-id="abd00-101">Implements the basic functionality common to control arrays in applications upgraded from Visual Basic 6.0.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-102">通常から継承していない`BaseControlArray`します。</span><span class="sxs-lookup"><span data-stu-id="abd00-102">You do not typically inherit from `BaseControlArray`.</span></span> <span data-ttu-id="abd00-103">独自のコントロール配列を作成するでのコントロール配列クラスのいずれかから継承、`Microsoft.VisualBasic.Compatibility.VB6`名前空間。</span><span class="sxs-lookup"><span data-stu-id="abd00-103">To create your own control array, inherit from one of the control array classes in the `Microsoft.VisualBasic.Compatibility.VB6` namespace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-104"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-104">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-105">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-105">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-106">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-106">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="abd00-107"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="abd00-107">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray ();" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abd00-108"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="abd00-108">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-109"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-109">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="abd00-110">クラスのインスタンスを作成するこのクラスが通常使用しないため、このコンス トラクターは通常直接呼び出されることがなくは、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="abd00-110">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-111"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-111">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-112">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-112">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-113">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-113">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray (System.ComponentModel.IContainer Container);" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer Container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (Container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray(System::ComponentModel::IContainer ^ Container);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray : System.ComponentModel.IContainer -&gt; Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" Usage="new Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray Container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="Container"><span data-ttu-id="abd00-114">コントロール配列をホストする <see cref="T:System.ComponentModel.IContainer" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-114">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</span></span></param>
        <summary><span data-ttu-id="abd00-115"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> クラスの新しいインスタンスを初期化します。必要に応じてコンテナーを指定します。</span><span class="sxs-lookup"><span data-stu-id="abd00-115">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class, optionally specifying a container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-116"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-116">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="abd00-117">クラスのインスタンスを作成するこのクラスが通常使用しないため、このコンス トラクターは通常直接呼び出されることがなくは、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="abd00-117">Because this class is not typically used to create an instance of the class, this constructor is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-118"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-118">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-119">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-119">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-120">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-120">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCanExtend">
      <MemberSignature Language="C#" Value="protected bool BaseCanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseCanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseCanExtend (target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseCanExtend(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.BaseCanExtend : obj -&gt; bool" Usage="baseControlArray.BaseCanExtend target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="abd00-121">テスト対象の <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-121">The <see cref="T:System.Windows.Forms.Control" /> to test.</span></span></param>
        <summary><span data-ttu-id="abd00-122">コントロールがコントロール配列のメンバーかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="abd00-122">Gets a value that indicates whether a control is a member of a control array.</span></span></summary>
        <returns><span data-ttu-id="abd00-123">そのコントロールがコントロール配列のメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-123"><see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-124"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-124">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="abd00-125">このクラスは、通常はクラスのインスタンスの作成に使用されないため、この `Protected` メソッドは通常直接呼び出されることはなく、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="abd00-125">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-126"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-126">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-127">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-127">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-128">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-128">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="abd00-129">クラスを派生できるようにしてください<paramref name="target" />コントロール配列の適切な型します。</span><span class="sxs-lookup"><span data-stu-id="abd00-129">Derived classes should make sure that <paramref name="target" /> is of the correct type for the control array.</span></span>  
  
<span data-ttu-id="abd00-130">オーバーライドする場合<see langword="BaseCanExtend" />、派生クラスで呼び出さないでください、<see langword="BaseCanExtend" />基本クラスのメソッド。</span><span class="sxs-lookup"><span data-stu-id="abd00-130">When you override <see langword="BaseCanExtend" /> in a derived class, do not call the <see langword="BaseCanExtend" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetIndex">
      <MemberSignature Language="C#" Value="protected short BaseGetIndex (object ctl);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance int16 BaseGetIndex(object ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetIndex (ctl As Object) As Short" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; short BaseGetIndex(System::Object ^ ctl);" />
      <MemberSignature Language="F#" Value="member this.BaseGetIndex : obj -&gt; int16" Usage="baseControlArray.BaseGetIndex ctl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="abd00-131">インデックスを取得する対象の <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-131">The <see cref="T:System.Windows.Forms.Control" /> for which you want to retrieve the index.</span></span></param>
        <summary><span data-ttu-id="abd00-132">コントロール配列内のコントロールのインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="abd00-132">Gets the index of a control in a control array.</span></span></summary>
        <returns><span data-ttu-id="abd00-133">コントロール配列内のコントロールのインデックスを表す <see langword="Short" /> 整数。</span><span class="sxs-lookup"><span data-stu-id="abd00-133">A <see langword="Short" /> integer representing the index of the control in the control array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-134"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-134">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="abd00-135">このクラスは、通常はクラスのインスタンスの作成に使用されないため、この `Protected` メソッドは通常直接呼び出されることはなく、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="abd00-135">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-136"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-136">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-137">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-137">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-138">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-138">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="abd00-139">オーバーライドする場合<see langword="BaseGetIndex" />、派生クラスで呼び出さないでください、<see langword="BaseGetIndex" />基本クラスのメソッド。</span><span class="sxs-lookup"><span data-stu-id="abd00-139">When you override <see langword="BaseGetIndex" /> in a derived class, do not call the <see langword="BaseGetIndex" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetItem">
      <MemberSignature Language="C#" Value="protected object BaseGetItem (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance object BaseGetItem(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetItem (Index As Short) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ BaseGetItem(short Index);" />
      <MemberSignature Language="F#" Value="member this.BaseGetItem : int16 -&gt; obj" Usage="baseControlArray.BaseGetItem Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="abd00-140">コントロール配列内のコントロールのインデックスを表す整数。</span><span class="sxs-lookup"><span data-stu-id="abd00-140">An integer that represents the index of the control in the control array.</span></span></param>
        <summary><span data-ttu-id="abd00-141">コントロール配列内の指定されたインデックスに対するコントロールを取得します。</span><span class="sxs-lookup"><span data-stu-id="abd00-141">Gets the control for a specified index in a control array.</span></span></summary>
        <returns><span data-ttu-id="abd00-142">指定した <paramref name="Index" /> にある <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-142">The <see cref="T:System.Windows.Forms.Control" /> at the specified <paramref name="Index" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-143"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-143">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="abd00-144">このクラスは、通常はクラスのインスタンスの作成に使用されないため、この `Protected` メソッドは通常直接呼び出されることはなく、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="abd00-144">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-145"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-145">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-146">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-146">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-147">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-147">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="abd00-148">オーバーライドする場合<see langword="BaseGetItem" />、派生クラスで呼び出さないでください、<see langword="BaseGetItem" />基本クラスのメソッド。</span><span class="sxs-lookup"><span data-stu-id="abd00-148">When you override <see langword="BaseGetItem" /> in a derived class, do not call the <see langword="BaseGetItem" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseResetIndex">
      <MemberSignature Language="C#" Value="protected void BaseResetIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseResetIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseResetIndex (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseResetIndex(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.BaseResetIndex : obj -&gt; unit" Usage="baseControlArray.BaseResetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="abd00-149"><see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-149">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="abd00-150"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> クラスではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="abd00-150">Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-151">このメソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="abd00-151">This method is not supported.</span></span>  
  
 <span data-ttu-id="abd00-152"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-152">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> -  
  
> [!NOTE]
>  <span data-ttu-id="abd00-153"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-153">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-154">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-154">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-155">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-155">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseSetIndex">
      <MemberSignature Language="C#" Value="protected void BaseSetIndex (object ctl, short Index, bool fIsDynamic = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseSetIndex(object ctl, int16 Index, bool fIsDynamic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseSetIndex (ctl As Object, Index As Short, Optional fIsDynamic As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.BaseSetIndex : obj * int16 * bool -&gt; unit" Usage="baseControlArray.BaseSetIndex (ctl, Index, fIsDynamic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
        <Parameter Name="Index" Type="System.Int16" />
        <Parameter Name="fIsDynamic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="abd00-156">インデックスを設定する対象の <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-156">The <see cref="T:System.Windows.Forms.Control" /> for which you want to set the index.</span></span></param>
        <param name="Index"><span data-ttu-id="abd00-157">コントロールのインデックスを表す <see langword="Short" /> 整数。</span><span class="sxs-lookup"><span data-stu-id="abd00-157">A <see langword="Short" /> integer that represents the index for the control.</span></span></param>
        <param name="fIsDynamic"><span data-ttu-id="abd00-158">任意。</span><span class="sxs-lookup"><span data-stu-id="abd00-158">Optional.</span></span> <span data-ttu-id="abd00-159">コントロールが作成されたのが、デザイン時 (<see langword="Boolean" />) か実行時 (<see langword="false" />) かを示す <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-159">A <see langword="Boolean" /> specifying whether the control was created at design time (<see langword="false" />) or at run time (<see langword="true" />).</span></span></param>
        <summary><span data-ttu-id="abd00-160">コントロール配列内のコントロールのインデックスを設定します。</span><span class="sxs-lookup"><span data-stu-id="abd00-160">Sets the index for a control in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-161"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-161">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="abd00-162">このクラスは、通常はクラスのインスタンスの作成に使用されないため、この `Protected` メソッドは通常直接呼び出されることはなく、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="abd00-162">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-163"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-163">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-164">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-164">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-165">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-165">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="abd00-166">オーバーライドする場合<see langword="BaseSetIndex" />、派生クラスで呼び出さないでください、<see langword="BaseSetIndex" />基本クラスのメソッド。</span><span class="sxs-lookup"><span data-stu-id="abd00-166">When you override <see langword="BaseSetIndex" /> in a derived class, do not call the <see langword="BaseSetIndex" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseShouldSerializeIndex">
      <MemberSignature Language="C#" Value="protected bool BaseShouldSerializeIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseShouldSerializeIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseShouldSerializeIndex (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseShouldSerializeIndex(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.BaseShouldSerializeIndex : obj -&gt; bool" Usage="baseControlArray.BaseShouldSerializeIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="abd00-167"><see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-167">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="abd00-168">コントロールがコントロール配列のメンバーかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="abd00-168">Returns a value that indicates whether a control is a member of a control array.</span></span></summary>
        <returns><span data-ttu-id="abd00-169">そのコントロールがコントロール配列のメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-169"><see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-170"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-170">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="abd00-171">このクラスは、通常、クラスのインスタンスを作成には使用されないため、この`Protected`メソッドは通常直接呼び出されることは、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="abd00-171">Because this class is not typically used to create an instance of the class, this `Protected` method is usually  not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-172"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-172">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-173">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-173">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-174">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-174">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="abd00-175">オーバーライドする場合<see langword="BaseShouldSerialiazeIndex" />、派生クラスで呼び出さないでください、<see langword="BaseShouldSerialiazeIndex" />基本クラスのメソッド。</span><span class="sxs-lookup"><span data-stu-id="abd00-175">When you override <see langword="BaseShouldSerialiazeIndex" /> in a derived class, do not call the <see langword="BaseShouldSerialiazeIndex" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="components">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.IContainer components;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.ComponentModel.IContainer components" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components" />
      <MemberSignature Language="VB.NET" Value="Protected components As IContainer " />
      <MemberSignature Language="C++ CLI" Value="protected: System::ComponentModel::IContainer ^ components;" />
      <MemberSignature Language="F#" Value="val mutable components : System.ComponentModel.IContainer" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abd00-176">コントロール配列のコンテナーを格納します。</span><span class="sxs-lookup"><span data-stu-id="abd00-176">Stores the container for a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-177"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-177">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-178"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-178">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-179">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-179">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-180">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-180">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controlAddedAtDesignTime">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controlAddedAtDesignTime;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controlAddedAtDesignTime" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime" />
      <MemberSignature Language="VB.NET" Value="Protected controlAddedAtDesignTime As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controlAddedAtDesignTime;" />
      <MemberSignature Language="F#" Value="val mutable controlAddedAtDesignTime : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abd00-181">コントロール配列内のコントロールが作成されたのが、デザイン時か実行時かを追跡する値を格納します。</span><span class="sxs-lookup"><span data-stu-id="abd00-181">Stores values to track whether a control in a control array was created at design time or at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-182"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-182">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-183"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-183">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-184">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-184">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-185">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-185">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controls">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controls;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controls" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls" />
      <MemberSignature Language="VB.NET" Value="Protected controls As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controls;" />
      <MemberSignature Language="F#" Value="val mutable controls : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abd00-186">コントロール配列内のコントロールを表す値を格納します。</span><span class="sxs-lookup"><span data-stu-id="abd00-186">Stores values that represent the controls in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-187"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-187">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-188"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-188">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-189">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-189">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-190">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-190">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public short Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count" />
      <MemberSignature Language="VB.NET" Value="Public Function Count () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short Count();" />
      <MemberSignature Language="F#" Value="member this.Count : unit -&gt; int16" Usage="baseControlArray.Count " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abd00-191">コントロール配列内のコントロール数を返します。</span><span class="sxs-lookup"><span data-stu-id="abd00-191">Returns the number of controls in a control array.</span></span></summary>
        <returns><span data-ttu-id="abd00-192">コントロールの数を格納する短整数。</span><span class="sxs-lookup"><span data-stu-id="abd00-192">A Short that contains the number of controls.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-193">このプロパティを使用することができます、[をしています.次のステートメントの](~/docs/visual-basic/language-reference/statements/for-next-statement.md)コントロール配列内のコントロールの操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="abd00-193">You can use this property in a [For...Next Statement](~/docs/visual-basic/language-reference/statements/for-next-statement.md) to perform an operation on the controls in a control array.</span></span>  
  
 <span data-ttu-id="abd00-194"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-194">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-195"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-195">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-196">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-196">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-197">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-197">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="baseControlArray.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="abd00-198">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-198"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="abd00-199">コントロール配列内のコントロールによって使用されるアンマネージド リソースを解放します。オプションでマネージド リソースも解放できます。</span><span class="sxs-lookup"><span data-stu-id="abd00-199">Releases the unmanaged resources that are used by a control in a control array and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-200">このメソッドは、パブリック`Dispose()`メソッドと<xref:System.Object.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="abd00-200">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="abd00-201">`Dispose()` 保護された起動`Dispose(Boolean)`メソッドは、disposing パラメーターを設定して`true`。</span><span class="sxs-lookup"><span data-stu-id="abd00-201">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="abd00-202"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`、disposing パラメーターを設定して`false`します。</span><span class="sxs-lookup"><span data-stu-id="abd00-202"><xref:System.Object.Finalize%2A> invokes `Dispose` with the disposing parameter set to `false`.</span></span>  
  
 <span data-ttu-id="abd00-203">Disposing パラメーターがの場合`true`、このメソッドは、このコントロールを参照するすべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="abd00-203">When the disposing parameter is `true`, this method releases all resources held by any managed objects that this control references.</span></span> <span data-ttu-id="abd00-204">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="abd00-204">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="abd00-205">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="abd00-205">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="abd00-206">オーバーライドする場合<see langword="Dispose(Boolean)" />への以前の呼び出しで以前破棄されたオブジェクトを参照しないことを確認<see langword="Dispose" />します。</span><span class="sxs-lookup"><span data-stu-id="abd00-206">When you override <see langword="Dispose(Boolean)" />, make sure not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="abd00-207">実装する方法についての詳細は<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span><span class="sxs-lookup"><span data-stu-id="abd00-207">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span> <span data-ttu-id="abd00-208">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))します。</span><span class="sxs-lookup"><span data-stu-id="abd00-208">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="fIsEndInitCalled">
      <MemberSignature Language="C#" Value="protected bool fIsEndInitCalled;" />
      <MemberSignature Language="ILAsm" Value=".field family bool fIsEndInitCalled" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled" />
      <MemberSignature Language="VB.NET" Value="Protected fIsEndInitCalled As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected: bool fIsEndInitCalled;" />
      <MemberSignature Language="F#" Value="val mutable fIsEndInitCalled : bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abd00-209">コントロール配列のコンテナーの初期化コードが実行を完了したかどうかを示す値を格納します。</span><span class="sxs-lookup"><span data-stu-id="abd00-209">Stores a value indicating whether the initialization code for a control array's container has finished executing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-210"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-210">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-211"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-211">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-212">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-212">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-213">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-213">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlInstanceType">
      <MemberSignature Language="C#" Value="protected abstract Type GetControlInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance class System.Type GetControlInstanceType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetControlInstanceType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Type ^ GetControlInstanceType();" />
      <MemberSignature Language="F#" Value="abstract member GetControlInstanceType : unit -&gt; Type" Usage="baseControlArray.GetControlInstanceType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abd00-214">コントロール配列内のコントロールの型を返します。</span><span class="sxs-lookup"><span data-stu-id="abd00-214">Returns the type of a control in a control array.</span></span></summary>
        <returns><span data-ttu-id="abd00-215">このメソッドはオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="abd00-215">This method must be overridden.</span></span>  
  
<span data-ttu-id="abd00-216"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-216">The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="abd00-217">このクラスは、通常はクラスのインスタンスの作成に使用されないため、この <see langword="Protected" /> メソッドは通常直接呼び出されることはなく、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="abd00-217">Because this class is not typically used to create an instance of the class, this <see langword="Protected" /> method is usually not called directly but is instead called by a derived class.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="abd00-218"><see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-218">Functions and objects in the <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-219">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-219">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-220">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-220">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
</para></block></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="abd00-221">オーバーライドする場合<see langword="GetControlInstanceType" />、派生クラスで呼び出さないでください、<see langword="GetControlInstanceType" />基本クラスのメソッド。</span><span class="sxs-lookup"><span data-stu-id="abd00-221">When you override <see langword="GetControlInstanceType" /> in a derived class, do not call the <see langword="GetControlInstanceType" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="baseControlArray.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abd00-222">コントロール配列に対する反復処理に使用する、列挙子オブジェクトへの参照を返します。</span><span class="sxs-lookup"><span data-stu-id="abd00-222">Returns a reference to an enumerator object, which is used to iterate over a control array.</span></span></summary>
        <returns><span data-ttu-id="abd00-223"><see cref="T:System.Collections.IEnumerator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="abd00-223">A <see cref="T:System.Collections.IEnumerator" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-224"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-224">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-225"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-225">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-226">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-226">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-227">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-227">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookUpControlEvents">
      <MemberSignature Language="C#" Value="protected abstract void HookUpControlEvents (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void HookUpControlEvents(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub HookUpControlEvents (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void HookUpControlEvents(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member HookUpControlEvents : obj -&gt; unit" Usage="baseControlArray.HookUpControlEvents o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="abd00-228"><see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-228">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="abd00-229">コントロール配列内のコントロールのイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="abd00-229">Adds event handlers for a control in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-230">このメソッドはオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="abd00-230">This method must be overridden.</span></span>  
  
 <span data-ttu-id="abd00-231"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-231">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-232"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-232">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-233">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-233">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-234">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-234">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="abd00-235">オーバーライドする場合<see langword="HookUpControlEvents" />、派生クラスで呼び出さないでください、<see langword="HookUpControlEvents" />基本クラスのメソッド。</span><span class="sxs-lookup"><span data-stu-id="abd00-235">When you override <see langword="HookUpControlEvents" /> in a derived class, do not call the <see langword="HookUpControlEvents" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="indices">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable indices;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable indices" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices" />
      <MemberSignature Language="VB.NET" Value="Protected indices As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ indices;" />
      <MemberSignature Language="F#" Value="val mutable indices : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abd00-236">コントロール配列のインデックスを格納します。</span><span class="sxs-lookup"><span data-stu-id="abd00-236">Stores the indices for a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-237"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-237">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-238"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-238">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-239">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-239">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-240">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-240">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public short LBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 LBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound" />
      <MemberSignature Language="VB.NET" Value="Public Function LBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short LBound();" />
      <MemberSignature Language="F#" Value="member this.LBound : unit -&gt; int16" Usage="baseControlArray.LBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abd00-241">コントロール配列の最も小さいインデックスを格納する <see langword="Short" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="abd00-241">Returns a <see langword="Short" /> that contains the smallest available subscript for a control array.</span></span></summary>
        <returns><span data-ttu-id="abd00-242">コントロール配列の下限を格納する <see langword="Short" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-242">A <see langword="Short" /> that contains the lower bounds of a control array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-243">`LBound`関数を併用、<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A>コントロール配列のサイズを決定する関数。</span><span class="sxs-lookup"><span data-stu-id="abd00-243">The `LBound` function is used with the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A> function to determine the size of a control array.</span></span>  
  
 <span data-ttu-id="abd00-244"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-244">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-245"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-245">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-246">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-246">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-247">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-247">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Load(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(short Index);" />
      <MemberSignature Language="F#" Value="member this.Load : int16 -&gt; unit" Usage="baseControlArray.Load Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="abd00-248">新規のコントロールのインデックスを表す <see langword="Short" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-248">A <see langword="Short" /> that represents the index of the new control.</span></span></param>
        <summary><span data-ttu-id="abd00-249">コントロール配列内に要素を新規作成します。</span><span class="sxs-lookup"><span data-stu-id="abd00-249">Creates a new element in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-250">このメソッドは、Visual Basic 6.0 のと同じ`Load`新しいコントロール配列の要素を動的に作成するための関数。</span><span class="sxs-lookup"><span data-stu-id="abd00-250">This method is the equivalent of the Visual Basic 6.0 `Load` function for dynamically creating a new control array element.</span></span>  
  
 <span data-ttu-id="abd00-251"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-251">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-252"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-252">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-253">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-253">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-254">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-254">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit" ExplicitInterfaceMemberName="BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abd00-255">コントロールの初期化を開始します。</span><span class="sxs-lookup"><span data-stu-id="abd00-255">Begins the initialization of the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-256">デザイン環境では、通常、このメソッドを使用してフォームまたはその他のコンポーネントで使用するコンポーネントの初期化を開始します。</span><span class="sxs-lookup"><span data-stu-id="abd00-256">Design environments typically use this method to start the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="abd00-257"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit>メソッドは、初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="abd00-257">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> method ends the initialization.</span></span> <span data-ttu-id="abd00-258">使用して、`BeginInit`と<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit>メソッドにより、コントロールは完全に初期化される前に使用されているからです。</span><span class="sxs-lookup"><span data-stu-id="abd00-258">Using the `BeginInit` and <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> methods prevents the control from being used before it is fully initialized.</span></span> <span data-ttu-id="abd00-259">初期化は実行時に発生します。</span><span class="sxs-lookup"><span data-stu-id="abd00-259">The initialization occurs at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-260"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-260">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-261">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-261">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-262">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-262">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit" ExplicitInterfaceMemberName="EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abd00-263">コントロールの初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="abd00-263">Ends the initialization of a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-264">デザイン環境では、通常、このメソッドを使用してフォームまたはその他のコンポーネントで使用するコンポーネントの初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="abd00-264">Design environments typically use this method to finish the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="abd00-265">`EndInit`メソッドは、初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="abd00-265">The `EndInit` method ends the initialization.</span></span> <span data-ttu-id="abd00-266">使用して、<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A>と`EndInit`メソッドにより、コントロールは完全に初期化される前に使用されているからです。</span><span class="sxs-lookup"><span data-stu-id="abd00-266">Using the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A> and `EndInit` methods prevents the control from being used before it is fully initialized.</span></span> <span data-ttu-id="abd00-267">初期化は実行時に発生します。</span><span class="sxs-lookup"><span data-stu-id="abd00-267">The initialization occurs at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-268"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-268">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-269">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-269">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-270">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-270">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public short UBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 UBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound" />
      <MemberSignature Language="VB.NET" Value="Public Function UBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short UBound();" />
      <MemberSignature Language="F#" Value="member this.UBound : unit -&gt; int16" Usage="baseControlArray.UBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abd00-271">コントロール配列の最も大きいインデックスを格納する <see langword="Short" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="abd00-271">Returns a <see langword="Short" /> that contains the largest available subscript for a control array.</span></span></summary>
        <returns><span data-ttu-id="abd00-272">コントロール配列の上限を格納する <see langword="Short" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-272">A <see langword="Short" /> that contains the upper bounds of a control array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-273">`UBound`関数を併用、<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A>コントロール配列のサイズを決定する関数。</span><span class="sxs-lookup"><span data-stu-id="abd00-273">The `UBound` function is used with the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A> function to determine the size of a control array.</span></span>  
  
 <span data-ttu-id="abd00-274"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-274">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-275"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-275">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-276">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-276">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-277">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-277">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Unload(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(short Index);" />
      <MemberSignature Language="F#" Value="member this.Unload : int16 -&gt; unit" Usage="baseControlArray.Unload Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="abd00-278">削除するコントロールのインデックスを表す <see langword="Short" />。</span><span class="sxs-lookup"><span data-stu-id="abd00-278">A <see langword="Short" /> that represents the index of the control to remove.</span></span></param>
        <summary><span data-ttu-id="abd00-279">コントロール配列からコントロールを削除します。</span><span class="sxs-lookup"><span data-stu-id="abd00-279">Removes a control from a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd00-280">このメソッドは、Visual Basic 6.0 のと同じ`Unload`コントロール配列の要素を動的に削除する関数。</span><span class="sxs-lookup"><span data-stu-id="abd00-280">This method is the equivalent of the Visual Basic 6.0 `Unload` function for dynamically removing a control array element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-281">使用して動的に追加されたコントロールのみ、<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A>メソッドは、コントロールの配列から削除できます。</span><span class="sxs-lookup"><span data-stu-id="abd00-281">Only controls that were added dynamically by using the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> method can be removed from the control array.</span></span>  
  
 <span data-ttu-id="abd00-282"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="abd00-282">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd00-283"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="abd00-283">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="abd00-284">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="abd00-284">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="abd00-285">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="abd00-285">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>