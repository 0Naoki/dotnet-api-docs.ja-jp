<Type Name="SqlDataReader" FullName="System.Data.SqlClient.SqlDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eee6ef36ceb81ac6ec30548493633ed5ac9c8b07" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452412" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataReader : System.Data.Common.DbDataReader, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataReader extends System.Data.Common.DbDataReader implements class System.Data.IDataReader, class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataReader&#xA;Inherits DbDataReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataReader : System::Data::Common::DbDataReader, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="84c5a-101">SQL Server データベースから行の前方向ストリームを読み取る方法を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="84c5a-101">Provides a way of reading a forward-only stream of rows from a SQL Server database.</span>
      </span>
      <span data-ttu-id="84c5a-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="84c5a-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-103">作成する、 <xref:System.Data.SqlClient.SqlDataReader>、呼び出す必要があります、<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>のメソッド、<xref:System.Data.SqlClient.SqlCommand>コンス トラクターを直接使用する代わりに、オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="84c5a-103">To create a <xref:System.Data.SqlClient.SqlDataReader>, you must call the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method of the <xref:System.Data.SqlClient.SqlCommand> object, instead of directly using a constructor.</span></span>  
  
 <span data-ttu-id="84c5a-104">中に、<xref:System.Data.SqlClient.SqlDataReader>が使用されている、関連付けられた<xref:System.Data.SqlClient.SqlConnection>がビジー状態であるサービス、<xref:System.Data.SqlClient.SqlDataReader>とで実行できるその他の操作がありません、<xref:System.Data.SqlClient.SqlConnection>閉じる以外です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-104">While the <xref:System.Data.SqlClient.SqlDataReader> is being used, the associated <xref:System.Data.SqlClient.SqlConnection> is busy serving the <xref:System.Data.SqlClient.SqlDataReader>, and no other operations can be performed on the <xref:System.Data.SqlClient.SqlConnection> other than closing it.</span></span> <span data-ttu-id="84c5a-105">これは、まで続きます、<xref:System.Data.SqlClient.SqlDataReader.Close%2A>のメソッド、<xref:System.Data.SqlClient.SqlDataReader>と呼びます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-105">This is the case until the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method of the <xref:System.Data.SqlClient.SqlDataReader> is called.</span></span> <span data-ttu-id="84c5a-106">呼び出した後にまでの出力パラメーターを取得することはできませんなど<xref:System.Data.SqlClient.SqlDataReader.Close%2A>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-106">For example, you cannot retrieve output parameters until after you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span></span>  
  
 <span data-ttu-id="84c5a-107">結果データの読み取り中に、別のプロセスまたはスレッドがセットに加えられた変更は、のユーザーに表示される可能性があります、`SqlDataReader`です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-107">Changes made to a result set by another process or thread while data is being read may be visible to the user of the `SqlDataReader`.</span></span> <span data-ttu-id="84c5a-108">ただし、正確な動作、タイミングによって決まります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-108">However, the precise behavior is timing dependent.</span></span>  
  
 <span data-ttu-id="84c5a-109"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> および<xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>後に呼び出すことができる唯一のプロパティは、<xref:System.Data.SqlClient.SqlDataReader>が閉じられます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-109"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span> <span data-ttu-id="84c5a-110"><xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>プロパティにアクセスできるときに、<xref:System.Data.SqlClient.SqlDataReader>存在する場合、常に呼び出す<xref:System.Data.SqlClient.SqlDataReader.Close%2A>の値を返す前に<xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>正確な戻り値を保証するためにします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-110">Although the <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property may be accessed while the <xref:System.Data.SqlClient.SqlDataReader> exists, always call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> before returning the value of <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> to guarantee an accurate return value.</span></span>  
  
 <span data-ttu-id="84c5a-111">順次アクセスを使用する場合 (<xref:System.Data.CommandBehavior.SequentialAccess?displayProperty=nameWithType>)、<xref:System.InvalidOperationException>場合に生成されます、<xref:System.Data.SqlClient.SqlDataReader>位置を進められ、他の読み取り前の列で操作が試行されます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-111">When using sequential access (<xref:System.Data.CommandBehavior.SequentialAccess?displayProperty=nameWithType>), an <xref:System.InvalidOperationException> will be raised if the <xref:System.Data.SqlClient.SqlDataReader> position is advanced and another read operation is attempted on the previous column.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84c5a-112">最適なパフォーマンス、<xref:System.Data.SqlClient.SqlDataReader>不要なオブジェクトを作成またはデータの不要なコピーを作ることを回避できます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-112">For optimal performance, <xref:System.Data.SqlClient.SqlDataReader> avoids creating unnecessary objects or making unnecessary copies of data.</span></span> <span data-ttu-id="84c5a-113">そのため、何度も呼び出すメソッドになど<xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>同じオブジェクトへの参照を返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-113">Therefore, multiple calls to methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> return a reference to the same object.</span></span> <span data-ttu-id="84c5a-114">などのメソッドによって返されるオブジェクトの基になる値を変更する場合は、注意を使用して<xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-114">Use caution if you are modifying the underlying value of the objects returned by methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84c5a-115">次の例を作成、 <xref:System.Data.SqlClient.SqlConnection>、 <xref:System.Data.SqlClient.SqlCommand>、および<xref:System.Data.SqlClient.SqlDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-115">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="84c5a-116">例は、コンソール ウィンドウに書き出し、データを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-116">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="84c5a-117">コードが終了し、<xref:System.Data.SqlClient.SqlDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-117">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="84c5a-118"><xref:System.Data.SqlClient.SqlConnection>はの最後に自動的に閉じ、`using`コード ブロック。</span><span class="sxs-lookup"><span data-stu-id="84c5a-118">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84c5a-119">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> オブジェクトを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-119">Closes the <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-120">明示的に呼び出す必要があります、<xref:System.Data.SqlClient.SqlDataReader.Close%2A>メソッドを使用しているときに、<xref:System.Data.SqlClient.SqlDataReader>を使用して、関連付けられている<xref:System.Data.SqlClient.SqlConnection>他の目的。</span><span class="sxs-lookup"><span data-stu-id="84c5a-120">You must explicitly call the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method when you are through using the <xref:System.Data.SqlClient.SqlDataReader> to use the associated <xref:System.Data.SqlClient.SqlConnection> for any other purpose.</span></span>  
  
 <span data-ttu-id="84c5a-121">`Close`メソッドの出力パラメーター、戻り値の値を入力および`RecordsAffected`、終了するまでにかかる時間を長く、`SqlDataReader`大規模または複雑なクエリの処理に使用されました。</span><span class="sxs-lookup"><span data-stu-id="84c5a-121">The `Close` method fills in the values for output parameters, return values and `RecordsAffected`, increasing the time that it takes to close a `SqlDataReader` that was used to process a large or complex query.</span></span> <span data-ttu-id="84c5a-122">場合、戻り値と、クエリによって影響を受けたレコードの数は意味を持ちません、終了するまでにかかる時間、`SqlDataReader`を呼び出すことによって、減少、<xref:System.Data.SqlClient.SqlCommand.Cancel%2A>関連付けられているメソッド<xref:System.Data.SqlClient.SqlCommand>オブジェクトを呼び出す前に、`Close`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="84c5a-122">When the return values and the number of records affected by a query are not significant, the time that it takes to close the `SqlDataReader` can be reduced by calling the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method of the associated <xref:System.Data.SqlClient.SqlCommand> object before calling the `Close` method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="84c5a-123">呼び出す必要はありません`Close`または`Dispose`接続、DataReader、または その他のマネージ オブジェクトで、`Finalize`クラスのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="84c5a-123">Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="84c5a-124">ファイナライザーで、クラスが直接所有されているアンマネージ リソースだけを解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-124">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="84c5a-125">クラスがアンマネージ リソースを所有していない場合は、クラス定義に `Finalize` メソッドを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="84c5a-125">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="84c5a-126">詳細については、次を参照してください。[ガベージ コレクション](~/docs/standard/garbage-collection/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-126">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84c5a-127">次の例を作成、 <xref:System.Data.SqlClient.SqlConnection>、 `SqlCommand`、および<xref:System.Data.SqlClient.SqlDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-127">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a `SqlCommand`, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="84c5a-128">例は、コンソール ウィンドウに書き出し、データを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-128">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="84c5a-129">コードが終了し、<xref:System.Data.SqlClient.SqlDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-129">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="84c5a-130"><xref:System.Data.SqlClient.SqlConnection>はの最後に自動的に閉じ、`using`コード ブロック。</span><span class="sxs-lookup"><span data-stu-id="84c5a-130">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="protected System.Data.SqlClient.SqlConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Connection" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84c5a-131">
            <see cref="T:System.Data.SqlClient.SqlConnection" /> に関連付けられている <see cref="T:System.Data.SqlClient.SqlDataReader" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-131">Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> associated with the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c5a-132">
            <see cref="T:System.Data.SqlClient.SqlConnection" /> に関連付けられている <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-132">The <see cref="T:System.Data.SqlClient.SqlConnection" /> associated with the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.Depth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84c5a-133">現在の行の入れ子の深さを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-133">Gets a value that indicates the depth of nesting for the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c5a-134">現在の行の入れ子の深さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-134">The depth of nesting for the current row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-135">最も外側のテーブルは深さ 0 です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-135">The outermost table has a depth of zero.</span></span> <span data-ttu-id="84c5a-136">.NET Framework Data Provider for SQL Server では、入れ子構造をサポートしていませんし、常に 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-136">The .NET Framework Data Provider for SQL Server does not support nesting and always returns zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.FieldCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84c5a-137">現在の行の列の数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-137">Gets the number of columns in the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c5a-138">有効なレコードセットに位置していない場合は 0。それ以外の場合は現在の行の列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-138">When not positioned in a valid recordset, 0; otherwise the number of columns in the current row.</span>
          </span>
          <span data-ttu-id="84c5a-139">既定値は -1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-139">The default is -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-140">設定で、その性質上返しません (DELETE クエリの場合) などの行をクエリを実行する<xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A>を 0 にします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-140">Executing a query that, by its nature, does not return rows (such as a DELETE query), sets <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> to 0.</span></span> <span data-ttu-id="84c5a-141">ただしです。</span><span class="sxs-lookup"><span data-stu-id="84c5a-141">However.</span></span> <span data-ttu-id="84c5a-142">この混同しないように 0 行を返すクエリを使用して (SELECT など \* FROM*テーブル*場所 1 = 2) 後者<xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A>を非表示フィールドを含むテーブルで列の数を返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-142">this should not be confused with a query that returns 0 rows (such as SELECT \* FROM *table* WHERE 1 = 2) in which case <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> returns the number of columns in the table, including hidden fields.</span></span> <span data-ttu-id="84c5a-143">非表示フィールドを除外するには、<xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-143">Use <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="84c5a-144">SQL Server のインスタンスへの現在の接続がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-144">There is no current connection to an instance of SQL Server.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBoolean(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-145">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-145">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-146">指定された列の値を Boolean として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-146">Gets the value of the specified column as a Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-147">列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-147">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-148">変換は実行されません。そのため、取得されたデータには、ブール値が既にあります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-148">No conversions are performed; therefore, the data retrieved must already be a Boolean, or an exception is generated.</span></span>  
  
 <span data-ttu-id="84c5a-149">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-149">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-150">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-150">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetByte(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-151">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-151">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-152">指定された列の値をバイトとして取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-152">Gets the value of the specified column as a byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-153">指定した列のバイト型の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-153">The value of the specified column as a byte.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-154">変換は実行されません。そのため、取得されたデータでは、バイトが既にあります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-154">No conversions are performed; therefore, the data retrieved must already be a byte.</span></span>  
  
 <span data-ttu-id="84c5a-155">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-155">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-156">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-156">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-157">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-157">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="84c5a-158">読み取り操作を開始するフィールド内のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-158">The index within the field from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="84c5a-159">バイトのストリームを読み込むバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-159">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="84c5a-160">書き込み操作を開始する<c>バッファー</c>内のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-160">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="84c5a-161">バッファーにコピーする最大長。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-161">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-162">指定した列オフセットからのバイト ストリームを、配列としてバッファーに読み込みます。読み込みは、指定したバッファー オフセットから開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-162">Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-163">実際に読み取られたバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-163">The actual number of bytes read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-164"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> フィールドに使用できるバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-164"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="84c5a-165">ほとんどの場合これは、フィールドの正確な長さです。</span><span class="sxs-lookup"><span data-stu-id="84c5a-165">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="84c5a-166">ただし、返される数値フィールドの実際の長さよりも小さい場合あります`GetBytes`バイトを取得するフィールドからは既に使用されています。</span><span class="sxs-lookup"><span data-stu-id="84c5a-166">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="84c5a-167">これは、場合がありますなどの場合、<xref:System.Data.SqlClient.SqlDataReader>バッファーへの大規模なデータ構造体の読み込みがします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-167">This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="84c5a-168">詳細については、次を参照してください。、`SequentialAccess`設定<xref:System.Data.CommandBehavior>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-168">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="84c5a-169">バッファーを渡した場合`null`、<xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A>バッファー オフセット パラメーターに基づく残りサイズではなくバイト単位で全体のフィールドの長さを返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-169">If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="84c5a-170">変換は実行されません。そのため、取得されたデータでは、バイト配列が既にあります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-170">No conversions are performed; therefore, the data retrieved must already be a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChar(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-171">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-171">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-172">指定された列の値を単一の文字として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-172">Gets the value of the specified column as a single character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-173">指定された列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-173">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-174"><xref:System.Data.SqlClient> ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-174">Not supported for <xref:System.Data.SqlClient>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-175">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-175">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-176">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-176">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="84c5a-177">読み取り操作を開始するフィールド内のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-177">The index within the field from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="84c5a-178">バイトのストリームを読み込むバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-178">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="84c5a-179">書き込み操作を開始する<c>バッファー</c>内のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-179">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="84c5a-180">バッファーにコピーする最大長。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-180">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-181">指定した列オフセットからの文字ストリームを、配列としてバッファーに読み込みます。読み込みは、指定したバッファー オフセットから開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-181">Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-182">実際に読み取られた文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-182">The actual number of characters read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-183"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> フィールドに使用できる文字数を返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-183"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="84c5a-184">多くの場合、これは、フィールドの正確な長さです。</span><span class="sxs-lookup"><span data-stu-id="84c5a-184">Frequently this is the exact length of the field.</span></span> <span data-ttu-id="84c5a-185">ただし、返される数値フィールドの実際の長さよりも小さい場合あります`GetChars`フィールドから文字を取得するは既に使用されています。</span><span class="sxs-lookup"><span data-stu-id="84c5a-185">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span> <span data-ttu-id="84c5a-186">これは、場合がありますなどの場合、<xref:System.Data.SqlClient.SqlDataReader>バッファーへの大規模なデータ構造体の読み込みがします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-186">This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="84c5a-187">詳細については、次を参照してください。、`SequentialAccess`設定<xref:System.Data.CommandBehavior>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-187">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="84c5a-188">実際に読み取られた文字数は、フィールドの末尾に達した場合、要求された長さよりも小さいできます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-188">The actual number of characters read can be less than the requested length, if the end of the field is reached.</span></span> <span data-ttu-id="84c5a-189">バッファーを渡した場合`null`、<xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>文字バッファー オフセット パラメーターに基づく残りサイズではなく全体のフィールドの長さを返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-189">If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="84c5a-190">変換は実行されません。そこで。</span><span class="sxs-lookup"><span data-stu-id="84c5a-190">No conversions are performed; therefore.</span></span> <span data-ttu-id="84c5a-191">取得されたデータでは、文字配列が既にあります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-191">the data retrieved must already be a character array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84c5a-192"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>場合は 0 を返します`dataIndex`が負の値。</span><span class="sxs-lookup"><span data-stu-id="84c5a-192">The <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> method returns 0 when `dataIndex` is negative.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDataTypeName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-193">検索する列の、0 から始まる序数位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-193">The zero-based ordinal position of the column to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-194">指定した列のデータ型を示す文字列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-194">Gets a string representing the data type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-195">指定した列のデータ型を示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-195">The string representing the data type of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-196">バックエンドのデータ型の名前を返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-196">Returns the name of the back-end data type.</span></span>  
  
 <span data-ttu-id="84c5a-197">`numeric` 用の SQL Server でシノニムは、`decimal`データ型。</span><span class="sxs-lookup"><span data-stu-id="84c5a-197">`numeric` is a synonym in SQL Server for the `decimal` data type.</span></span> <span data-ttu-id="84c5a-198">`GetDataTypeName` 10 進数または数値のいずれかとして定義されている列の"decimal"を返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-198">`GetDataTypeName` will return "decimal" for a column defined as either decimal or numeric.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDateTime(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-199">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-199">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-200">指定された列の値を <see cref="T:System.DateTime" /> オブジェクトとして取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-200">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-201">指定された列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-201">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-202">変換は実行されません。そのため、取得されたデータおく必要があります、<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="84c5a-202">No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object.</span></span>  
  
 <span data-ttu-id="84c5a-203">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-203">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-204">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-204">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeOffset">
      <MemberSignature Language="C#" Value="public virtual DateTimeOffset GetDateTimeOffset (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTimeOffset GetDateTimeOffset(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDateTimeOffset (i As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTimeOffset GetDateTimeOffset(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-205">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-205">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-206">指定した列の値を <see cref="T:System.DateTimeOffset" /> オブジェクトとして取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-206">Retrieves the value of the specified column as a <see cref="T:System.DateTimeOffset" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-207">指定された列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-207">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-208">変換は実行されません。そのため、取得されたデータおく必要があります、<xref:System.DateTimeOffset>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="84c5a-208">No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTimeOffset> object.</span></span>  
  
 <span data-ttu-id="84c5a-209">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-209">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-210">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-210">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDecimal(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-211">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-211">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-212">指定された列の値を <see cref="T:System.Decimal" /> オブジェクトとして取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-212">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-213">指定された列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-213">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-214">変換は実行されません。そのため、取得されたデータおく必要があります、<xref:System.Decimal>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="84c5a-214">No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object.</span></span>  
  
 <span data-ttu-id="84c5a-215">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-215">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-216">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-216">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDouble(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-217">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-217">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-218">指定された列の値を倍精度浮動小数点値として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-218">Gets the value of the specified column as a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-219">指定された列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-219">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-220">変換は実行されません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-220">No conversions are performed.</span></span> <span data-ttu-id="84c5a-221">そのため、取得されたデータでは、倍精度浮動小数点数が既にあります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-221">Therefore, the data retrieved must already be a double-precision floating point number.</span></span>  
  
 <span data-ttu-id="84c5a-222">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-222">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-223">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-223">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84c5a-224">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> を反復処理する <see cref="T:System.Collections.IEnumerator" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-224">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-225">
            <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-225">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-226">このメソッドを使用して、明示的な列挙子を取得することができます、言語をサポートする、`foreach`構築、データ リーダー内の行を反復処理するために直接ループ構造を使用する方が簡単です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-226">Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFieldType(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-227">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-227">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-228">オブジェクトのデータ型である <see cref="T:System.Type" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-228">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-229">オブジェクトのデータ型である <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-229">The <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
          <span data-ttu-id="84c5a-230">データベースから返されたユーザー定義型 (UDT) に関しては、このデータ型がクライアント上に存在しない場合、**GetFieldType** は null を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-230">If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, **GetFieldType** returns null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetFieldValue&lt;T&gt; (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetFieldValue&lt;T&gt;(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldValue(Of T) (i As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; override T GetFieldValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="84c5a-231">返される値の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-231">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="i">
          <span data-ttu-id="84c5a-232">取得する列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-232">The column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-233">指定された列の値を型として同期的に取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-233">Synchronously gets the value of the specified column as a type.</span>
          </span>
          <span data-ttu-id="84c5a-234">
            <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> は、このメソッドの非同期バージョンです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-234">
              <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> is the asynchronous version of this method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-235">返された型オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-235">The returned type object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-236">`T` 次の種類のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-236">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="84c5a-237">ブール型</span><span class="sxs-lookup"><span data-stu-id="84c5a-237">Boolean</span></span>|<span data-ttu-id="84c5a-238">Byte</span><span class="sxs-lookup"><span data-stu-id="84c5a-238">Byte</span></span>|<span data-ttu-id="84c5a-239">Char</span><span class="sxs-lookup"><span data-stu-id="84c5a-239">Char</span></span>|<span data-ttu-id="84c5a-240">DateTime</span><span class="sxs-lookup"><span data-stu-id="84c5a-240">DateTime</span></span>|  
|<span data-ttu-id="84c5a-241">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="84c5a-241">DateTimeOffset</span></span>|<span data-ttu-id="84c5a-242">Decimal (10 進数型)</span><span class="sxs-lookup"><span data-stu-id="84c5a-242">Decimal</span></span>|<span data-ttu-id="84c5a-243">倍精度浮動小数点型</span><span class="sxs-lookup"><span data-stu-id="84c5a-243">Double</span></span>|<span data-ttu-id="84c5a-244">Float</span><span class="sxs-lookup"><span data-stu-id="84c5a-244">Float</span></span>|  
|<span data-ttu-id="84c5a-245">GUID</span><span class="sxs-lookup"><span data-stu-id="84c5a-245">Guid</span></span>|<span data-ttu-id="84c5a-246">Int16</span><span class="sxs-lookup"><span data-stu-id="84c5a-246">Int16</span></span>|<span data-ttu-id="84c5a-247">Int32</span><span class="sxs-lookup"><span data-stu-id="84c5a-247">Int32</span></span>|<span data-ttu-id="84c5a-248">Int64</span><span class="sxs-lookup"><span data-stu-id="84c5a-248">Int64</span></span>|  
|<span data-ttu-id="84c5a-249">SqlBoolean</span><span class="sxs-lookup"><span data-stu-id="84c5a-249">SqlBoolean</span></span>|<span data-ttu-id="84c5a-250">SqlByte</span><span class="sxs-lookup"><span data-stu-id="84c5a-250">SqlByte</span></span>|<span data-ttu-id="84c5a-251">SqlDateTime</span><span class="sxs-lookup"><span data-stu-id="84c5a-251">SqlDateTime</span></span>|<span data-ttu-id="84c5a-252">SqlDecimal</span><span class="sxs-lookup"><span data-stu-id="84c5a-252">SqlDecimal</span></span>|  
|<span data-ttu-id="84c5a-253">SqlDouble</span><span class="sxs-lookup"><span data-stu-id="84c5a-253">SqlDouble</span></span>|<span data-ttu-id="84c5a-254">SqlGuid</span><span class="sxs-lookup"><span data-stu-id="84c5a-254">SqlGuid</span></span>|<span data-ttu-id="84c5a-255">SqlInt16</span><span class="sxs-lookup"><span data-stu-id="84c5a-255">SqlInt16</span></span>|<span data-ttu-id="84c5a-256">SqlInt32</span><span class="sxs-lookup"><span data-stu-id="84c5a-256">SqlInt32</span></span>|  
|<span data-ttu-id="84c5a-257">SqlInt64</span><span class="sxs-lookup"><span data-stu-id="84c5a-257">SqlInt64</span></span>|<span data-ttu-id="84c5a-258">SqlMoney</span><span class="sxs-lookup"><span data-stu-id="84c5a-258">SqlMoney</span></span>|<span data-ttu-id="84c5a-259">SqlSingle</span><span class="sxs-lookup"><span data-stu-id="84c5a-259">SqlSingle</span></span>|<span data-ttu-id="84c5a-260">SqlString</span><span class="sxs-lookup"><span data-stu-id="84c5a-260">SqlString</span></span>|  
|<span data-ttu-id="84c5a-261">String</span><span class="sxs-lookup"><span data-stu-id="84c5a-261">String</span></span>|<span data-ttu-id="84c5a-262">マークされた任意の CLR 型にすることができる UDT<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-262">UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.</span></span>|||  
  
 <span data-ttu-id="84c5a-263">詳細については、次を参照してください。 [SqlClient ストリーミング サポート](~/docs/framework/data/adonet/sqlclient-streaming-support.md)です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-263">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84c5a-264">データの取得中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-264">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="84c5a-265">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> は、データの取得時に閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-265">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="84c5a-266">読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> は呼び出されなかったか、false を返しました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-266">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="84c5a-267">以前に読み取られた列をシーケンシャル モードで読み取ろうとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-267">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="84c5a-268">非同期操作が進行中でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-268">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="84c5a-269">シーケンシャル モードで実行中、これはすべての Get\* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-269">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="84c5a-270">存在しない列を読み取ろうとしています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-270">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
          <span data-ttu-id="84c5a-271">列の値は null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />) で、非 SQL 型を取得しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-271">The value of the column was null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />), retrieving a non-SQL type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-272">
            <paramref name="T" /> は SQL Server によって返される型を一致させたり、キャストできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-272">
              <paramref name="T" /> doesn’t match the type returned by SQL Server or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int i, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 i, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; override System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int i, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="84c5a-273">返される値の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-273">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="i">
          <span data-ttu-id="84c5a-274">取得する列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-274">The column to be retrieved.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="84c5a-275">操作を取り消すことを示す通知を反映する取り消し命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-275">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="84c5a-276">これは取り消しを保証しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-276">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="84c5a-277">
            <see langword="CancellationToken.None" /> の設定は、このメソッドを <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> と同じにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-277">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="84c5a-278">返されたタスクを取り消し済みとしてマークする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-278">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-279">指定された列の値を型として非同期的に取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-279">Asynchronously gets the value of the specified column as a type.</span>
          </span>
          <span data-ttu-id="84c5a-280">
            <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" /> は、このメソッドの同期バージョンです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-280">
              <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" /> is the synchronous version of this method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-281">返された型オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-281">The returned type object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-282">`T` 次の種類のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-282">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="84c5a-283">ブール型</span><span class="sxs-lookup"><span data-stu-id="84c5a-283">Boolean</span></span>|<span data-ttu-id="84c5a-284">Byte</span><span class="sxs-lookup"><span data-stu-id="84c5a-284">Byte</span></span>|<span data-ttu-id="84c5a-285">Char</span><span class="sxs-lookup"><span data-stu-id="84c5a-285">Char</span></span>|<span data-ttu-id="84c5a-286">DateTime</span><span class="sxs-lookup"><span data-stu-id="84c5a-286">DateTime</span></span>|  
|<span data-ttu-id="84c5a-287">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="84c5a-287">DateTimeOffset</span></span>|<span data-ttu-id="84c5a-288">Decimal (10 進数型)</span><span class="sxs-lookup"><span data-stu-id="84c5a-288">Decimal</span></span>|<span data-ttu-id="84c5a-289">倍精度浮動小数点型</span><span class="sxs-lookup"><span data-stu-id="84c5a-289">Double</span></span>|<span data-ttu-id="84c5a-290">Float</span><span class="sxs-lookup"><span data-stu-id="84c5a-290">Float</span></span>|  
|<span data-ttu-id="84c5a-291">GUID</span><span class="sxs-lookup"><span data-stu-id="84c5a-291">Guid</span></span>|<span data-ttu-id="84c5a-292">Int16</span><span class="sxs-lookup"><span data-stu-id="84c5a-292">Int16</span></span>|<span data-ttu-id="84c5a-293">Int32</span><span class="sxs-lookup"><span data-stu-id="84c5a-293">Int32</span></span>|<span data-ttu-id="84c5a-294">Int64</span><span class="sxs-lookup"><span data-stu-id="84c5a-294">Int64</span></span>|  
|<span data-ttu-id="84c5a-295">SqlBoolean</span><span class="sxs-lookup"><span data-stu-id="84c5a-295">SqlBoolean</span></span>|<span data-ttu-id="84c5a-296">SqlByte</span><span class="sxs-lookup"><span data-stu-id="84c5a-296">SqlByte</span></span>|<span data-ttu-id="84c5a-297">SqlDateTime</span><span class="sxs-lookup"><span data-stu-id="84c5a-297">SqlDateTime</span></span>|<span data-ttu-id="84c5a-298">SqlDecimal</span><span class="sxs-lookup"><span data-stu-id="84c5a-298">SqlDecimal</span></span>|  
|<span data-ttu-id="84c5a-299">SqlDouble</span><span class="sxs-lookup"><span data-stu-id="84c5a-299">SqlDouble</span></span>|<span data-ttu-id="84c5a-300">SqlGuid</span><span class="sxs-lookup"><span data-stu-id="84c5a-300">SqlGuid</span></span>|<span data-ttu-id="84c5a-301">SqlInt16</span><span class="sxs-lookup"><span data-stu-id="84c5a-301">SqlInt16</span></span>|<span data-ttu-id="84c5a-302">SqlInt32</span><span class="sxs-lookup"><span data-stu-id="84c5a-302">SqlInt32</span></span>|  
|<span data-ttu-id="84c5a-303">SqlInt64</span><span class="sxs-lookup"><span data-stu-id="84c5a-303">SqlInt64</span></span>|<span data-ttu-id="84c5a-304">SqlMoney</span><span class="sxs-lookup"><span data-stu-id="84c5a-304">SqlMoney</span></span>|<span data-ttu-id="84c5a-305">SqlSingle</span><span class="sxs-lookup"><span data-stu-id="84c5a-305">SqlSingle</span></span>|<span data-ttu-id="84c5a-306">SqlString</span><span class="sxs-lookup"><span data-stu-id="84c5a-306">SqlString</span></span>|  
|<span data-ttu-id="84c5a-307">String</span><span class="sxs-lookup"><span data-stu-id="84c5a-307">String</span></span>|<span data-ttu-id="84c5a-308">マークされた任意の CLR 型にすることができる UDT<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-308">UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.</span></span>|||  
  
 <span data-ttu-id="84c5a-309">詳細については、次を参照してください。 [SqlClient ストリーミング サポート](~/docs/framework/data/adonet/sqlclient-streaming-support.md)です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-309">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84c5a-310">データの取得中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-310">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="84c5a-311">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> は、データの取得時に閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-311">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="84c5a-312">読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> は呼び出されなかったか、false を返しました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-312">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="84c5a-313">以前に読み取られた列をシーケンシャル モードで読み取ろうとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-313">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="84c5a-314">非同期操作が進行中でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-314">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="84c5a-315">シーケンシャル モードで実行中、これはすべての Get\* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-315">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
          <span data-ttu-id="84c5a-316">
            <see langword="Context Connection=true" /> は接続文字列で指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-316">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="84c5a-317">存在しない列を読み取ろうとしています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-317">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
          <span data-ttu-id="84c5a-318">列の値は null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />) で、非 SQL 型を取得しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-318">The value of the column was null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />), retrieving a non-SQL type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-319">
            <paramref name="T" /> は SQL Server によって返される型を一致させたり、キャストできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-319">
              <paramref name="T" /> doesn’t match the type returned by SQL Server or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFloat(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-320">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-320">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-321">指定された列の値を単精度浮動小数点値として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-321">Gets the value of the specified column as a single-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-322">指定された列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-322">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-323">変換は実行されません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-323">No conversions are performed.</span></span> <span data-ttu-id="84c5a-324">そのため、取得されたデータでは、単精度浮動小数点数が既にあります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-324">Therefore, the data retrieved must already be a single-precision floating point number.</span></span>  
  
 <span data-ttu-id="84c5a-325">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-325">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-326">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-326">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetGuid(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-327">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-327">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-328">指定した列の値をグローバル一意識別子 (GUID) として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-328">Gets the value of the specified column as a globally unique identifier (GUID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-329">指定された列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-329">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-330">変換は実行されません。そのため、取得されたデータでは、GUID が既にあります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-330">No conversions are performed; therefore, the data retrieved must already be a GUID.</span></span>  
  
 <span data-ttu-id="84c5a-331">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-331">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-332">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-332">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt16(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-333">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-333">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-334">指定した列の値を 16 ビット符号付き整数として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-334">Gets the value of the specified column as a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-335">指定された列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-335">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-336">変換は実行されません。そのため、取得されたデータでは、16 ビット符号付き整数が既にあります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-336">No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.</span></span>  
  
 <span data-ttu-id="84c5a-337">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-337">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-338">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-338">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt32(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-339">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-339">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-340">指定された列の値を 32 ビット符号付き整数として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-340">Gets the value of the specified column as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-341">指定された列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-341">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-342">変換は実行されません。そのため、取得されたデータでは、32 ビット符号付き整数が既にあります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-342">No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="84c5a-343">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-343">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-344">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-344">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt64(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-345">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-345">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-346">指定された列の値を 64 ビット符号付き整数として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-346">Gets the value of the specified column as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-347">指定された列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-347">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-348">変換は実行されません。そのため、取得されたデータでは、64 ビット符号付き整数が既にあります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-348">No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.</span></span>  
  
 <span data-ttu-id="84c5a-349">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-349">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-350">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-350">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-351">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-351">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-352">指定した列の名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-352">Gets the name of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-353">指定された列の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-353">The name of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetOrdinal(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="84c5a-354">列の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-354">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-355">列の名前を指定して、列の序数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-355">Gets the column ordinal, given the name of the column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-356">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-356">The zero-based column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-357">`GetOrdinal` 最初に区別する検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-357">`GetOrdinal` performs a case-sensitive lookup first.</span></span> <span data-ttu-id="84c5a-358">大文字と小文字が発生したが失敗した場合、秒、(大文字と小文字の比較が行われデータベースの照合順序を使用して)。</span><span class="sxs-lookup"><span data-stu-id="84c5a-358">If it fails, a second, case-insensitive search occurs (a case-insensitive comparison is done using the database collation).</span></span> <span data-ttu-id="84c5a-359">予期しない結果は、比較がカルチャに固有の大文字と小文字の規則によって影響を受けるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-359">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="84c5a-360">たとえば、トルコ語では次の例間違った結果が生成トルコ語で、ファイル システムは、文字 'i' の言語の文字種の規則を使用しないので"file"にします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-360">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</span></span> <span data-ttu-id="84c5a-361">メソッドをスロー、 `IndexOutOfRange` 0 から始まる列序数が見つからない場合に例外です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-361">The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.</span></span>  
  
 <span data-ttu-id="84c5a-362">`GetOrdinal` カタカナの全角区別されません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-362">`GetOrdinal` is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="84c5a-363">呼び出す効率的ではありません序数に基づく参照は、名前による参照よりも効率的であるため`GetOrdinal`ループ内で。</span><span class="sxs-lookup"><span data-stu-id="84c5a-363">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop.</span></span> <span data-ttu-id="84c5a-364">呼び出すことによって、時間を節約`GetOrdinal`ループ内で使用する整数の変数に結果を割り当てるとします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-364">Save time by calling `GetOrdinal` once and assigning the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84c5a-365"><xref:System.Data.SqlClient.SqlDataReader.GetOrdinal%2A> メソッドの使用方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-365">The following example demonstrates how to use the <xref:System.Data.SqlClient.SqlDataReader.GetOrdinal%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="84c5a-366">指定された名前は、有効な列名ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-366">The name specified is not a valid column name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-367">列の序数を表す <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-367">An <see cref="T:System.Int32" /> representing the column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-368">基になるプロバイダー固有フィールド型の内部表現である <see langword="Object" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-368">Gets an <see langword="Object" /> that is a representation of the underlying provider-specific field type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-369">基になるプロバイダー固有フィールド型の内部表現である <see cref="T:System.Object" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-369">Gets an <see cref="T:System.Object" /> that is a representation of the underlying provider-specific field type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-370">列の序数を表す <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-370">An <see cref="T:System.Int32" /> representing the column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-371">基になるプロバイダー固有の値の内部表現である <see langword="Object" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-371">Gets an <see langword="Object" /> that is a representation of the underlying provider specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-372">基になるプロバイダー固有の値の内部表現である <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-372">An <see cref="T:System.Object" /> that is a representation of the underlying provider specific value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="84c5a-373">列の値のコピー先の <see cref="T:System.Object" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-373">An array of <see cref="T:System.Object" /> into which to copy the column values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-374">基になるプロバイダー固有の値の内部表現であるオブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-374">Gets an array of objects that are a representation of the underlying provider specific values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-375">基になるプロバイダー固有の値の内部表現であるオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-375">The array of objects that are a representation of the underlying provider specific values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84c5a-376">
            <see cref="T:System.Data.DataTable" /> の列メタデータを記述する <see cref="T:System.Data.SqlClient.SqlDataReader" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-376">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-377">列メタデータを記述する <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-377">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-378"><xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A>メソッドは、次の順序で各列に関するメタデータを返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-378">For the <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="84c5a-379">DataReader 列</span><span class="sxs-lookup"><span data-stu-id="84c5a-379">DataReader column</span></span>|<span data-ttu-id="84c5a-380">説明</span><span class="sxs-lookup"><span data-stu-id="84c5a-380">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="84c5a-381">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="84c5a-381">AllowDBNull</span></span>|<span data-ttu-id="84c5a-382">コンシューマーは、null 値に列を設定できる場合、またはプロバイダーでは、コンシューマーが列を null 値に設定できるかどうかを判断できない場合に設定します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-382">Set if the consumer can set the column to a null value or if the provider cannot determine whether the consumer can set the column to a null value.</span></span> <span data-ttu-id="84c5a-383">それ以外の場合、設定されていません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-383">Otherwise, not set.</span></span> <span data-ttu-id="84c5a-384">Null 値に設定することはできない場合でも、列は、null 値を含む可能性があります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-384">A column may contain null values, even if it cannot be set to a null value.</span></span>|  
|<span data-ttu-id="84c5a-385">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="84c5a-385">BaseCatalogName</span></span>|<span data-ttu-id="84c5a-386">列を含むデータ ストア内のカタログの名前。</span><span class="sxs-lookup"><span data-stu-id="84c5a-386">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="84c5a-387">ベースのカタログ名を特定できない場合は NULL です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-387">NULL if the base catalog name cannot be determined.</span></span> <span data-ttu-id="84c5a-388">この列の既定値は、null 値です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-388">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="84c5a-389">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="84c5a-389">BaseColumnName</span></span>|<span data-ttu-id="84c5a-390">データ ストア内での列名。</span><span class="sxs-lookup"><span data-stu-id="84c5a-390">The name of the column in the data store.</span></span> <span data-ttu-id="84c5a-391">これは、エイリアスが使用されたかどうか、[ColumnName] 列で、列名が返されては異なる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-391">This might be different than the column name returned in the ColumnName column if an alias was used.</span></span> <span data-ttu-id="84c5a-392">ベースの列名を特定できない場合や行セットの列が派生したと一致しない、データの列ストアの場合は、null 値。</span><span class="sxs-lookup"><span data-stu-id="84c5a-392">A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</span></span> <span data-ttu-id="84c5a-393">この列の既定値は、null 値です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-393">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="84c5a-394">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="84c5a-394">BaseSchemaName</span></span>|<span data-ttu-id="84c5a-395">列を含むデータ ストア内のスキーマの名前です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-395">The name of the schema in the data store that contains the column.</span></span> <span data-ttu-id="84c5a-396">ベース スキーマ名を特定できない場合は、null 値です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-396">A null value if the base schema name cannot be determined.</span></span> <span data-ttu-id="84c5a-397">この列の既定値は、null 値です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-397">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="84c5a-398">BaseServerName</span><span class="sxs-lookup"><span data-stu-id="84c5a-398">BaseServerName</span></span>|<span data-ttu-id="84c5a-399">によって使用される Microsoft SQL Server のインスタンスの名前、<xref:System.Data.SqlClient.SqlDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-399">The name of the instance of Microsoft SQL Server used by the <xref:System.Data.SqlClient.SqlDataReader>.</span></span>|  
|<span data-ttu-id="84c5a-400">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="84c5a-400">BaseTableName</span></span>|<span data-ttu-id="84c5a-401">テーブルまたは列を含むデータ ストア内のビューの名前。</span><span class="sxs-lookup"><span data-stu-id="84c5a-401">The name of the table or view in the data store that contains the column.</span></span> <span data-ttu-id="84c5a-402">ベース テーブル名を特定できない場合は、null 値です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-402">A null value if the base table name cannot be determined.</span></span> <span data-ttu-id="84c5a-403">この列の既定値は、null 値です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-403">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="84c5a-404">ColumnName</span><span class="sxs-lookup"><span data-stu-id="84c5a-404">ColumnName</span></span>|<span data-ttu-id="84c5a-405">列の名前これは一意でない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-405">The name of the column; this might not be unique.</span></span> <span data-ttu-id="84c5a-406">これを特定できない場合は、null 値が返されます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-406">If this cannot be determined, a null value is returned.</span></span> <span data-ttu-id="84c5a-407">この名前は、常に、現在のビューまたはコマンド テキスト内の列の最も最近使用した名前の変更が反映されます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-407">This name always reflects the most recent renaming of the column in the current view or command text.</span></span>|  
|<span data-ttu-id="84c5a-408">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="84c5a-408">ColumnOrdinal</span></span>|<span data-ttu-id="84c5a-409">列の 0 から始まる序数。</span><span class="sxs-lookup"><span data-stu-id="84c5a-409">The zero-based ordinal of the column.</span></span> <span data-ttu-id="84c5a-410">この列は、null 値を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-410">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="84c5a-411">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="84c5a-411">ColumnSize</span></span>|<span data-ttu-id="84c5a-412">列の値の可能な最大長。</span><span class="sxs-lookup"><span data-stu-id="84c5a-412">The maximum possible length of a value in the column.</span></span> <span data-ttu-id="84c5a-413">固定長データ型を使用する列でのデータ型のサイズです。</span><span class="sxs-lookup"><span data-stu-id="84c5a-413">For columns that use a fixed-length data type, this is the size of the data type.</span></span> <span data-ttu-id="84c5a-414">`nvarchar(MAX)`、 `varchar(MAX)`、および`varbinary(MAX)`最大サイズ、SQL Server データベースに格納されている列が 2 GB です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-414">For `nvarchar(MAX)`, `varchar(MAX)`, and `varbinary(MAX)` columns stored in a SQL Server database, the maximum size is 2GB.</span></span> <span data-ttu-id="84c5a-415">これらの列では、格納され、ファイルとしてアクセスすることが場合、ファイル システムで最大サイズの制限が課せられます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-415">If these columns are stored and accessed as files, the limit on maximum size is imposed by the file system.</span></span> <span data-ttu-id="84c5a-416">使用する場合、この値が変更された、`Type System Version`接続文字列キーワードでします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-416">This value changes when using the `Type System Version` keyword in the connection string.</span></span>  <span data-ttu-id="84c5a-417">新しい種類の下位レベルの種類として表されます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-417">For new types they are represented as downlevel types.</span></span> <span data-ttu-id="84c5a-418">MAX データ型を返すための標準の 4 k`nvarchar`につき 8,000`varchar`です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-418">The MAX data types return the normal 4k for `nvarchar` and 8000 for `varchar`.</span></span> <span data-ttu-id="84c5a-419">詳細については、SQL Server オンライン ブックで TRANSACT-SQL リファレンスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="84c5a-419">For more information, see the Transact-SQL reference in SQL Server Books Online.</span></span>|  
|<span data-ttu-id="84c5a-420">DataTypeName</span><span class="sxs-lookup"><span data-stu-id="84c5a-420">DataTypeName</span></span>|<span data-ttu-id="84c5a-421">指定された列のデータ型を表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-421">Returns a string representing the data type of the specified column.</span></span>|  
|<span data-ttu-id="84c5a-422">IsAliased</span><span class="sxs-lookup"><span data-stu-id="84c5a-422">IsAliased</span></span>|<span data-ttu-id="84c5a-423">`true`: 列名は、エイリアスです。</span><span class="sxs-lookup"><span data-stu-id="84c5a-423">`true`: The column name is an alias.</span></span><br /><br /> <span data-ttu-id="84c5a-424">`false`: 列名は、エイリアスではありません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-424">`false`: The column name is not an alias.</span></span>|  
|<span data-ttu-id="84c5a-425">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="84c5a-425">IsAutoIncrement</span></span>|<span data-ttu-id="84c5a-426">`true`: 列は、固定された増分で新しい行に値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-426">`true`: The column assigns values to new rows in fixed increments.</span></span><br /><br /> <span data-ttu-id="84c5a-427">`false`: 列は、固定された増分で新しい行に値を割り当てられません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-427">`false`: The column does not assign values to new rows in fixed increments.</span></span> <span data-ttu-id="84c5a-428">この列の既定値は`false`します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-428">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="84c5a-429">IsColumnSet</span><span class="sxs-lookup"><span data-stu-id="84c5a-429">IsColumnSet</span></span>|<span data-ttu-id="84c5a-430">`true`列は列セットのメンバーであるスパース列です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-430">`true`: The column is a sparse column that is a member of a column set.</span></span>|  
|<span data-ttu-id="84c5a-431">IsExpression</span><span class="sxs-lookup"><span data-stu-id="84c5a-431">IsExpression</span></span>|<span data-ttu-id="84c5a-432">`true`: 列は、式です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-432">`true`: The column is an expression.</span></span><br /><br /> <span data-ttu-id="84c5a-433">`false`: 列は、式ではありません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-433">`false`: The column is not an expression.</span></span>|  
|<span data-ttu-id="84c5a-434">IsHidden</span><span class="sxs-lookup"><span data-stu-id="84c5a-434">IsHidden</span></span>|<span data-ttu-id="84c5a-435">`true`: 列は表示されません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-435">`true`: The column is hidden.</span></span><br /><br /> <span data-ttu-id="84c5a-436">`false`: 列は非表示にします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-436">`false`: The column is not hidden.</span></span>|  
|<span data-ttu-id="84c5a-437">IsIdentity</span><span class="sxs-lookup"><span data-stu-id="84c5a-437">IsIdentity</span></span>|<span data-ttu-id="84c5a-438">`true`: 列は、id 列です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-438">`true`: The column is an identity column.</span></span><br /><br /> <span data-ttu-id="84c5a-439">`false`列は、id 列ではありません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-439">`false`: The column is not an identity column.</span></span>|  
|<span data-ttu-id="84c5a-440">IsKey</span><span class="sxs-lookup"><span data-stu-id="84c5a-440">IsKey</span></span>|<span data-ttu-id="84c5a-441">`true`: 列は、行セット内の列のセットの 1 つをまとめると、行を一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-441">`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</span></span> <span data-ttu-id="84c5a-442">列のセット`IsKey`'éý'`true`行セット内の行を一意に識別する必要があります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-442">The set of columns with `IsKey` set to `true` must uniquely identify a row in the rowset.</span></span> <span data-ttu-id="84c5a-443">この列のセットが列の最小セットである必要はありません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-443">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="84c5a-444">この列のセットは、ベース テーブルの主キー、unique 制約または一意のインデックスから生成される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-444">This set of columns may be generated from a base table primary key, a unique constraint or a unique index.</span></span><br /><br /> <span data-ttu-id="84c5a-445">`false`: 列は、行を一意に識別する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-445">`false`: The column is not required to uniquely identify the row.</span></span>|  
|<span data-ttu-id="84c5a-446">IsLong</span><span class="sxs-lookup"><span data-stu-id="84c5a-446">IsLong</span></span>|<span data-ttu-id="84c5a-447">`true`: 列には、非常に長いデータを含むバイナリ長オブジェクト (BLOB) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="84c5a-447">`true`: The column contains a Binary Long Object (BLOB) that contains very long data.</span></span> <span data-ttu-id="84c5a-448">非常に長いデータの定義は、プロバイダー固有です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-448">The definition of very long data is provider-specific.</span></span><br /><br /> <span data-ttu-id="84c5a-449">`false`: 列に非常に長いデータを含むバイナリ長オブジェクト (BLOB) が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-449">`false`: The column does not contain a Binary Long Object (BLOB) that contains very long data.</span></span>|  
|<span data-ttu-id="84c5a-450">IsReadOnly</span><span class="sxs-lookup"><span data-stu-id="84c5a-450">IsReadOnly</span></span>|<span data-ttu-id="84c5a-451">`true`: 列を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-451">`true`: The column cannot be modified.</span></span><br /><br /> <span data-ttu-id="84c5a-452">`false`: 列を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-452">`false`: The column can be modified.</span></span>|  
|<span data-ttu-id="84c5a-453">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="84c5a-453">IsRowVersion</span></span>|<span data-ttu-id="84c5a-454">`true`: 列は、、書き込むことができない永続的な行識別子を含む、意味を持たない値以外の id に、行があります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-454">`true`: The column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span><br /><br /> <span data-ttu-id="84c5a-455">`false`: 列は、書き込むことができない永続的な行識別子が含まれていないと、意味を持つ値を除く行を識別します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-455">`false`: The column does not contain a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span>|  
|<span data-ttu-id="84c5a-456">IsUnique</span><span class="sxs-lookup"><span data-stu-id="84c5a-456">IsUnique</span></span>|<span data-ttu-id="84c5a-457">`true`: 列は型`timestamp`です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-457">`true`: Column is of type `timestamp`.</span></span><br /><br /> <span data-ttu-id="84c5a-458">`false`: 列の型ではありません`timestamp`です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-458">`false`: Column is not of type `timestamp`.</span></span>|  
|<span data-ttu-id="84c5a-459">NonVersionedProviderType</span><span class="sxs-lookup"><span data-stu-id="84c5a-459">NonVersionedProviderType</span></span>|<span data-ttu-id="84c5a-460">関係なく、現在の列の型`Type System Version`接続文字列で指定します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-460">The type of the column irrespective of the current `Type System Version` specified in the connection string.</span></span> <span data-ttu-id="84c5a-461">返される値からでは、<xref:System.Data.SqlDbType>列挙します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-461">The returned value is from the <xref:System.Data.SqlDbType> enumeration.</span></span>|  
|<span data-ttu-id="84c5a-462">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="84c5a-462">NumericPrecision</span></span>|<span data-ttu-id="84c5a-463">場合`ProviderType`数値データ型は、これは、列の最大有効桁数です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-463">If `ProviderType` is a numeric data type, this is the maximum precision of the column.</span></span> <span data-ttu-id="84c5a-464">精度は、列の定義に依存します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-464">The precision depends on the definition of the column.</span></span> <span data-ttu-id="84c5a-465">場合`ProviderType`数値データ型ではない 255 です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-465">If `ProviderType` is not a numeric data type, this is 255.</span></span>|  
|<span data-ttu-id="84c5a-466">NumericScale</span><span class="sxs-lookup"><span data-stu-id="84c5a-466">NumericScale</span></span>|<span data-ttu-id="84c5a-467">場合`ProviderType`DBTYPE_DECIMAL または DBTYPE_NUMERIC、小数点の右側にある数字の数。</span><span class="sxs-lookup"><span data-stu-id="84c5a-467">If `ProviderType` is DBTYPE_DECIMAL or DBTYPE_NUMERIC, the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="84c5a-468">それ以外の場合、これは 255 です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-468">Otherwise, this is 255.</span></span>|  
|<span data-ttu-id="84c5a-469">ProviderSpecificDataType</span><span class="sxs-lookup"><span data-stu-id="84c5a-469">ProviderSpecificDataType</span></span>|<span data-ttu-id="84c5a-470">に基づいて、列のプロバイダーに固有のデータ型を返します、`Type System Version`接続文字列キーワードでします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-470">Returns the provider-specific data type of the column based on the `Type System Version` keyword in the connection string.</span></span>|  
|<span data-ttu-id="84c5a-471">ProviderType</span><span class="sxs-lookup"><span data-stu-id="84c5a-471">ProviderType</span></span>|<span data-ttu-id="84c5a-472">列のデータ型のインジケーター。</span><span class="sxs-lookup"><span data-stu-id="84c5a-472">The indicator of the column's data type.</span></span> <span data-ttu-id="84c5a-473">列のデータ型は、行ごとに変化する場合は、オブジェクトこのなければなりません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-473">If the data type of the column varies from row to row, this must be Object.</span></span> <span data-ttu-id="84c5a-474">この列は、null 値を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-474">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="84c5a-475">UdtAssemblyQualifiedName</span><span class="sxs-lookup"><span data-stu-id="84c5a-475">UdtAssemblyQualifiedName</span></span>|<span data-ttu-id="84c5a-476">これは、1、UDT のアセンブリの修飾名、列がユーザー定義型 (UDT) の場合は、<xref:System.Type.AssemblyQualifiedName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-476">If the column is a user-defined type (UDT), this is the qualified name of the UDT's assembly as per <xref:System.Type.AssemblyQualifiedName%2A>.</span></span> <span data-ttu-id="84c5a-477">列が UDT ではない場合は null です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-477">If the column is not a UDT, this is null.</span></span>|  
|<span data-ttu-id="84c5a-478">XmlSchemaCollectionDatabase</span><span class="sxs-lookup"><span data-stu-id="84c5a-478">XmlSchemaCollectionDatabase</span></span>|<span data-ttu-id="84c5a-479">この XML インスタンスのスキーマ コレクションが置かれている行に XML 列についての情報が含まれている場合、データベースの名前。</span><span class="sxs-lookup"><span data-stu-id="84c5a-479">The name of the database where the schema collection for this XML instance is located, if the row contains information about an XML column.</span></span> <span data-ttu-id="84c5a-480">この値は`null`(`Nothing` Visual Basic で) コレクションが現在のデータベース内で定義されている場合。</span><span class="sxs-lookup"><span data-stu-id="84c5a-480">This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database.</span></span> <span data-ttu-id="84c5a-481">存在しない場合、スキーマ コレクションの場合は null も、`XmlSchemaCollectionName`と`XmlSchemaCollectionOwningSchema`も null にします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-481">It is also null if there is no schema collection, in which case the `XmlSchemaCollectionName` and `XmlSchemaCollectionOwningSchema` columns are also null.</span></span>|  
|<span data-ttu-id="84c5a-482">XmlSchemaCollectionName</span><span class="sxs-lookup"><span data-stu-id="84c5a-482">XmlSchemaCollectionName</span></span>|<span data-ttu-id="84c5a-483">行に XML 列についての情報が含まれている場合、この XML インスタンスのスキーマ コレクションの名前。</span><span class="sxs-lookup"><span data-stu-id="84c5a-483">The name of the schema collection for this XML instance, if the row contains information about an XML column.</span></span> <span data-ttu-id="84c5a-484">この値は`null`(`Nothing` Visual Basic で) 関連付けられているスキーマ コレクションが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="84c5a-484">This value is `null` (`Nothing` in Visual Basic) if there is no associated schema collection.</span></span> <span data-ttu-id="84c5a-485">値が null の場合、`XmlSchemaCollectionDatabase`と`XmlSchemaCollectionOwningSchema`も null にします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-485">If the value is null, the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionOwningSchema` columns are also null.</span></span>|  
|<span data-ttu-id="84c5a-486">XmlSchemaCollectionOwningSchema</span><span class="sxs-lookup"><span data-stu-id="84c5a-486">XmlSchemaCollectionOwningSchema</span></span>|<span data-ttu-id="84c5a-487">この XML インスタンスのスキーマ コレクションが置かれている行に XML 列についての情報が含まれている場合、所有リレーショナル スキーマ。</span><span class="sxs-lookup"><span data-stu-id="84c5a-487">The owning relational schema where the schema collection for this XML instance is located, if the row contains information about an XML column.</span></span> <span data-ttu-id="84c5a-488">この値は`null`(`Nothing` Visual Basic で) コレクションが現在のデータベース内で定義されている場合。</span><span class="sxs-lookup"><span data-stu-id="84c5a-488">This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database.</span></span> <span data-ttu-id="84c5a-489">存在しない場合、スキーマ コレクションの場合は null も、`XmlSchemaCollectionDatabase`と`XmlSchemaCollectionName`も null にします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-489">It is also null if there is no schema collection, in which case the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionName` columns are also null.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="84c5a-490">メタデータ列は、正しい情報を返すことは、呼び出す必要があるかどうかを確認する<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>で、`behavior`パラメーターに設定`KeyInfo`です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-490">To make sure that metadata columns return the correct information, you must call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`.</span></span> <span data-ttu-id="84c5a-491">それ以外の場合、既定値、null、または不適切なデータを返すスキーマ テーブルの列のいくつか可能性があります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-491">Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84c5a-492">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> が閉じています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-492">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBinary">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBinary GetSqlBinary (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlBinary GetSqlBinary(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBinary (i As Integer) As SqlBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBinary GetSqlBinary(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-493">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-493">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-494">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlBinary" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-494">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-495">
            <see cref="T:System.Data.SqlTypes.SqlBinary" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-495">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-496">変換は実行されません。したがってバイナリ構造が既に取得したデータがあります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-496">No conversions are performed; therefore the data retrieved must already be a binary structure or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBoolean">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBoolean GetSqlBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlBoolean GetSqlBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBoolean (i As Integer) As SqlBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBoolean GetSqlBoolean(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-497">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-497">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-498">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-498">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-499">列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-499">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-500">変換は実行されません。そのため、取得されたデータにはブール値が既にあります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-500">No conversions are performed; therefore, the data retrieved must already be a Boolean or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlByte">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlByte GetSqlByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlByte GetSqlByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlByte (i As Integer) As SqlByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlByte GetSqlByte(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-501">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-501">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-502">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlByte" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-502">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlByte" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-503">
            <see cref="T:System.Data.SqlTypes.SqlByte" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-503">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-504">変換は実行されません。したがって取得されたデータには、バイトがある必要があります既にまたは例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-504">No conversions are performed; therefore the data retrieved must already be a byte, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBytes">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBytes GetSqlBytes (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlBytes GetSqlBytes(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBytes (i As Integer) As SqlBytes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBytes ^ GetSqlBytes(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBytes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-505">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-505">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-506">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlBytes" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-506">Gets the value of the specified column as <see cref="T:System.Data.SqlTypes.SqlBytes" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-507">
            <see cref="T:System.Data.SqlTypes.SqlBytes" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-507">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlChars">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlChars GetSqlChars (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlChars GetSqlChars(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlChars (i As Integer) As SqlChars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlChars ^ GetSqlChars(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlChars</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-508">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-508">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-509">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlChars" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-509">Gets the value of the specified column as <see cref="T:System.Data.SqlTypes.SqlChars" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-510">
            <see cref="T:System.Data.SqlTypes.SqlChars" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-510">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlChars" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDateTime">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDateTime GetSqlDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDateTime GetSqlDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDateTime (i As Integer) As SqlDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDateTime GetSqlDateTime(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-511">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-511">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-512">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlDateTime" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-512">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-513">
            <see cref="T:System.Data.SqlTypes.SqlDateTime" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-513">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-514">変換は実行されません。そのため、取得されたデータの日付/時刻値が既にあります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-514">No conversions are performed; therefore, the data retrieved must already be a date/time value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDecimal">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDecimal GetSqlDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDecimal GetSqlDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDecimal (i As Integer) As SqlDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDecimal GetSqlDecimal(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-515">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-515">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-516">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-516">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-517">
            <see cref="T:System.Data.SqlTypes.SqlDecimal" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-517">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-518">変換は実行されません。そのため、取得されたデータの 10 進数の値が既にあります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-518">No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDouble">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDouble GetSqlDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDouble GetSqlDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDouble (i As Integer) As SqlDouble" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDouble GetSqlDouble(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDouble</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-519">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-519">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-520">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlDouble" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-520">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-521">
            <see cref="T:System.Data.SqlTypes.SqlDouble" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-521">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlDouble" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-522">変換は実行されません。そのため、取得されたデータを倍精度浮動小数点数、おく必要があります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-522">No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlGuid">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlGuid GetSqlGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlGuid GetSqlGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlGuid (i As Integer) As SqlGuid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlGuid GetSqlGuid(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlGuid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-523">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-523">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-524">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlGuid" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-524">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-525">
            <see cref="T:System.Data.SqlTypes.SqlGuid" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-525">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlGuid" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-526">変換は実行されません。そのため、取得されたデータを GUID、おく必要があります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-526">No conversions are performed; therefore, the data retrieved must already be a GUID, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt16">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt16 GetSqlInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt16 GetSqlInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt16 (i As Integer) As SqlInt16" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt16 GetSqlInt16(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-527">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-527">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-528">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlInt16" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-528">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-529">
            <see cref="T:System.Data.SqlTypes.SqlInt16" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-529">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-530">変換は実行されません。そのため、取得されたデータを 16 ビット符号付き整数の場合、おく必要があります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-530">No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt32">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt32 GetSqlInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt32 GetSqlInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt32 (i As Integer) As SqlInt32" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt32 GetSqlInt32(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-531">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-531">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-532">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlInt32" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-532">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-533">
            <see cref="T:System.Data.SqlTypes.SqlInt32" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-533">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-534">変換は実行されません。したがって取得されたデータには、32 ビット符号付き整数がある必要があります既にまたは例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-534">No conversions are performed; therefore the data retrieved must already be a 32-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt64">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt64 GetSqlInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt64 GetSqlInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt64 (i As Integer) As SqlInt64" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt64 GetSqlInt64(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-535">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-535">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-536">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlInt64" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-536">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-537">
            <see cref="T:System.Data.SqlTypes.SqlInt64" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-537">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-538">変換は実行されません。そのため、取得されたデータを 64 ビットの符号付き整数おく必要があります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-538">No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlMoney">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlMoney GetSqlMoney (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlMoney GetSqlMoney(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlMoney (i As Integer) As SqlMoney" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlMoney GetSqlMoney(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlMoney</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-539">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-539">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-540">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlMoney" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-540">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-541">
            <see cref="T:System.Data.SqlTypes.SqlMoney" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-541">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-542">変換は実行されません。そのため、取得されたデータの 10 進数の値が既にあります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-542">No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlSingle">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlSingle GetSqlSingle (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlSingle GetSqlSingle(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlSingle (i As Integer) As SqlSingle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlSingle GetSqlSingle(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlSingle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-543">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-543">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-544">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlSingle" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-544">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-545">
            <see cref="T:System.Data.SqlTypes.SqlSingle" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-545">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-546">変換は実行されません。そのため、取得されたデータを単精度浮動小数点数、おく必要があります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-546">No conversions are performed; therefore, the data retrieved must already be a single precision floating point number, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlString">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlString GetSqlString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlString GetSqlString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlString (i As Integer) As SqlString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlString GetSqlString(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-547">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-547">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-548">指定した列の値を <see cref="T:System.Data.SqlTypes.SqlString" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-548">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlString" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-549">
            <see cref="T:System.Data.SqlTypes.SqlString" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-549">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-550">変換は実行されません。そのため、取得されたデータには、文字列が既にあります。 または例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-550">No conversions are performed; therefore, the data retrieved must already be a string, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlValue">
      <MemberSignature Language="C#" Value="public virtual object GetSqlValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSqlValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSqlValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-551">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-551">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-552">指定した列のデータ値を SQL Server 型として返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-552">Returns the data value in the specified column as a SQL Server type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-553">
            <see cref="T:System.Data.SqlDbType" /> として表現される列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-553">The value of the column expressed as a <see cref="T:System.Data.SqlDbType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-554"><xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> SQL Server のネイティブ型を使用してデータを返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-554"><xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> returns data using the native SQL Server types.</span></span> <span data-ttu-id="84c5a-555">.NET Framework の型を使用してデータを取得するには、次を参照してください。<xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-555">To retrieve data using the .NET Framework types, see <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlValues">
      <MemberSignature Language="C#" Value="public virtual int GetSqlValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSqlValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetSqlValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="84c5a-556">値のコピー先の <see cref="T:System.Object" /> の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-556">An array of <see cref="T:System.Object" /> into which to copy the values.</span>
          </span>
          <span data-ttu-id="84c5a-557">列の値は、SQL Server のデータ型として表現されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-557">The column values are expressed as SQL Server types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-558">レコードを構成するすべての列について、SQL Server のデータ型で表現されている値を含む <see cref="T:System.Object" /> の配列に格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-558">Fills an array of <see cref="T:System.Object" /> that contains the values for all the columns in the record, expressed as SQL Server types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-559">コピーされる列の数を示す整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-559">An integer indicating the number of columns copied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-560">CLR 型システムではなく、SQL 型システムを使用して、1 回の呼び出しでレコードのすべての列の値を返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-560">Returns the values for all the columns in the record in a single call, using the SQL type system instead of the CLR type system.</span></span> <span data-ttu-id="84c5a-561">長さ、<xref:System.Object>配列は、レコード内の列の数と一致する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-561">The length of the <xref:System.Object> array does not need to match the number of columns in the record.</span></span> <span data-ttu-id="84c5a-562">渡すことができます、<xref:System.Object>レコードに含まれる列数より少ないを格納する配列。</span><span class="sxs-lookup"><span data-stu-id="84c5a-562">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the record.</span></span> <span data-ttu-id="84c5a-563">データの量のみ、<xref:System.Object>配列は、列序数に基づく、0 から始まる、配列にコピーを保持します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-563">Only the amount of data the <xref:System.Object> array holds is copied to the array, starting at the column with ordinal 0.</span></span> <span data-ttu-id="84c5a-564">渡すことも、<xref:System.Object>配列の長さが、結果の行に含まれる列の数を超えています。</span><span class="sxs-lookup"><span data-stu-id="84c5a-564">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="84c5a-565">残りの列は、影響されません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-565">Any remaining columns are untouched.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="84c5a-566">
            <paramref name="values" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-566">
              <paramref name="values" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlXml">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlXml GetSqlXml (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlXml GetSqlXml(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlXml (i As Integer) As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlXml ^ GetSqlXml(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-567">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-567">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-568">指定した列の値を XML 値として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-568">Gets the value of the specified column as an XML value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-569">対応するフィールドに格納された XML を保持する <see cref="T:System.Data.SqlTypes.SqlXml" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-569">A <see cref="T:System.Data.SqlTypes.SqlXml" /> value that contains the XML stored within the corresponding field.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-570">変換は実行されません。そのため、取得されたデータでは、XML 値が既にあります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-570">No conversions are performed; therefore, the data retrieved must already be an XML value.</span></span>  
  
 <span data-ttu-id="84c5a-571">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-571">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="84c5a-572">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-572">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84c5a-573">閉じている <see cref="T:System.Data.SqlClient.SqlDataReader" /> の列を読み取るかアクセスしようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-573">An attempt was made to read or access columns in a closed <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-574">取得したデータは、<see cref="T:System.Data.SqlTypes.SqlXml" /> 型と互換性がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-574">The retrieved data is not compatible with the <see cref="T:System.Data.SqlTypes.SqlXml" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetStream (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetStream(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStream (i As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetStream(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-575">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-575">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-576">バイナリ、イメージ、varbinary、UDT およびバリアント データ型を <see cref="T:System.IO.Stream" /> として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-576">Retrieves binary, image, varbinary, UDT, and variant data types as a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-577">ストリーム オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-577">A stream object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-578"><xref:System.IO.Stream.ReadTimeout%2A> 既定値は、値の<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; を変更できますが、<xref:System.IO.Stream.ReadTimeout%2A>を介して<xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-578"><xref:System.IO.Stream.ReadTimeout%2A> defaults to the value of <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; but you can modify <xref:System.IO.Stream.ReadTimeout%2A> via <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>.</span></span>  
  
 <span data-ttu-id="84c5a-579">Null 値は空 (0 バイト) として返されます<xref:System.IO.Stream>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-579">Null values will be returned as an empty (zero bytes) <xref:System.IO.Stream>.</span></span>  
  
 <span data-ttu-id="84c5a-580"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> 生成されます、<xref:System.InvalidOperationException>例外によって返されるオブジェクトで使用すると<xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>とき<xref:System.Data.CommandBehavior.SequentialAccess>が有効になっています。</span><span class="sxs-lookup"><span data-stu-id="84c5a-580"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="84c5a-581"><xref:System.Data.SqlClient.SqlException> 例外が発生した<xref:System.IO.Stream>としてスロー<xref:System.IO.IOException>例外の内部例外を確認して、<xref:System.Data.SqlClient.SqlException>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-581"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.Stream> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="84c5a-582">次<xref:System.IO.Stream>メンバーがによって返されるオブジェクトのご利用いただけません<xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:</span><span class="sxs-lookup"><span data-stu-id="84c5a-582">The following <xref:System.IO.Stream> members are not available for objects returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:</span></span>  
  
-   <span data-ttu-id="84c5a-583">BeginWrite</span><span class="sxs-lookup"><span data-stu-id="84c5a-583">BeginWrite</span></span>  
  
-   <span data-ttu-id="84c5a-584">EndWrite</span><span class="sxs-lookup"><span data-stu-id="84c5a-584">EndWrite</span></span>  
  
-   <span data-ttu-id="84c5a-585">長さ</span><span class="sxs-lookup"><span data-stu-id="84c5a-585">Length</span></span>  
  
-   <span data-ttu-id="84c5a-586">位置</span><span class="sxs-lookup"><span data-stu-id="84c5a-586">Position</span></span>  
  
-   <span data-ttu-id="84c5a-587">シーク</span><span class="sxs-lookup"><span data-stu-id="84c5a-587">Seek</span></span>  
  
-   <span data-ttu-id="84c5a-588">SetLength</span><span class="sxs-lookup"><span data-stu-id="84c5a-588">SetLength</span></span>  
  
-   <span data-ttu-id="84c5a-589">Write</span><span class="sxs-lookup"><span data-stu-id="84c5a-589">Write</span></span>  
  
-   <span data-ttu-id="84c5a-590">WriteByte</span><span class="sxs-lookup"><span data-stu-id="84c5a-590">WriteByte</span></span>  
  
-   <span data-ttu-id="84c5a-591">WriteTimeout</span><span class="sxs-lookup"><span data-stu-id="84c5a-591">WriteTimeout</span></span>  
  
 <span data-ttu-id="84c5a-592">ときに、接続プロパティ`ContextConnection=true`、<xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>シーケンシャルの両方の同期のデータの取得のみがサポート (<xref:System.Data.CommandBehavior.SequentialAccess>) と連続していない (<xref:System.Data.CommandBehavior.Default>) アクセスします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-592">When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.</span></span>  
  
 <span data-ttu-id="84c5a-593">詳細については、次を参照してください。 [SqlClient ストリーミング サポート](~/docs/framework/data/adonet/sqlclient-streaming-support.md)です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-593">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84c5a-594">データの取得中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-594">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="84c5a-595">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> は、データの取得時に閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-595">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="84c5a-596">読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> は呼び出されなかったか、false を返しました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-596">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="84c5a-597">以前に読み取られた列をシーケンシャル モードで読み取ろうとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-597">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="84c5a-598">非同期操作が進行中でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-598">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="84c5a-599">シーケンシャル モードで実行中、これはすべての Get\* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-599">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="84c5a-600">存在しない列を読み取ろうとしています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-600">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-601">返された型は、次のどの型でもありませんでした。  -    binary  -   image  -   varbinary  -   udt</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-601">The returned type was not one of the types below:  -   binary  -   image  -   varbinary  -   udt</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetString(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-602">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-602">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-603">指定した列の値を文字列として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-603">Gets the value of the specified column as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-604">指定された列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-604">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-605">変換は実行されません。そのため、取得されたデータでは、文字列が既にあります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-605">No conversions are performed; therefore, the data retrieved must already be a string.</span></span>  
  
 <span data-ttu-id="84c5a-606">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-606">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-607">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-607">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextReader">
      <MemberSignature Language="C#" Value="public override System.IO.TextReader GetTextReader (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.TextReader GetTextReader(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTextReader (i As Integer) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::TextReader ^ GetTextReader(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-608">取得する列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-608">The column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-609">Char、Nchar、Ntext、Nvarchar、テキスト、varchar および VARIANT データ型を <see cref="T:System.IO.TextReader" />として取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-609">Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-610">返されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-610">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-611"><xref:System.Data.SqlClient.SqlException> 例外が発生した<xref:System.IO.TextReader>としてスロー<xref:System.IO.IOException>例外の内部例外を確認して、<xref:System.Data.SqlClient.SqlException>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-611"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.TextReader> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="84c5a-612">Null 値は空 (0 バイト) として返されます<xref:System.IO.TextReader>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-612">Null values will be returned as an empty (zero bytes) <xref:System.IO.TextReader>.</span></span>  
  
 <span data-ttu-id="84c5a-613"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> 生成されます、<xref:System.InvalidOperationException>例外によって返されるオブジェクトで使用すると<xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A>とき<xref:System.Data.CommandBehavior.SequentialAccess>が有効になっています。</span><span class="sxs-lookup"><span data-stu-id="84c5a-613"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="84c5a-614">ときに、接続プロパティ`ContextConnection=true`、<xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A>シーケンシャルの両方の同期のデータの取得のみがサポート (<xref:System.Data.CommandBehavior.SequentialAccess>) と連続していない (<xref:System.Data.CommandBehavior.Default>) アクセスします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-614">When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.</span></span>  
  
 <span data-ttu-id="84c5a-615">詳細については、次を参照してください。 [SqlClient ストリーミング サポート](~/docs/framework/data/adonet/sqlclient-streaming-support.md)です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-615">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84c5a-616">データの取得中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-616">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="84c5a-617">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> は、データの取得時に閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-617">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="84c5a-618">読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> は呼び出されなかったか、false を返しました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-618">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="84c5a-619">以前に読み取られた列をシーケンシャル モードで読み取ろうとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-619">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="84c5a-620">非同期操作が進行中でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-620">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="84c5a-621">シーケンシャル モードで実行中、これはすべての Get\* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-621">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="84c5a-622">存在しない列を読み取ろうとしています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-622">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-623">返された型は、次のどの型でもありませんでした。  -   char  -   nchar  -   ntext  -   nvarchar  -   text  -   varchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-623">The returned type was not one of the types below:  -   char  -   nchar  -   ntext  -   nvarchar  -   text  -   varchar</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public virtual TimeSpan GetTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan GetTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTimeSpan (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TimeSpan GetTimeSpan(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-624">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-624">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-625">指定した列の値を <see cref="T:System.TimeSpan" /> オブジェクトとして取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-625">Retrieves the value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-626">指定された列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-626">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-627">変換は実行されません。そのため、取得されたデータおく必要があります、<xref:System.TimeSpan>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="84c5a-627">No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object.</span></span>  
  
 <span data-ttu-id="84c5a-628">呼び出す<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>このメソッドを呼び出す前に null 値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-628">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-629">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-629">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValue(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-630">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-630">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-631">指定した列の値をネイティブ形式で取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-631">Gets the value of the specified column in its native format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-632">null データベース列の場合は、<see cref="T:System.DBNull" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-632">This method returns <see cref="T:System.DBNull" /> for null database columns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-633"><xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> .NET Framework の型を使用してデータを返します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-633"><xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> returns data using the .NET Framework types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValues(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="84c5a-634">属性列のコピー先の <see cref="T:System.Object" /> の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-634">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-635">オブジェクトの配列に現在行の列値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-635">Populates an array of objects with the column values of the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-636">配列に含まれる <see cref="T:System.Object" /> のインスタンスの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-636">The number of instances of <see cref="T:System.Object" /> in the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-637">ほとんどのアプリケーションは、このメソッドは、各列を個別に取得する代わりに、すべての列を取得するための効率的な手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-637">For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span>  
  
 <span data-ttu-id="84c5a-638">渡すことができます、<xref:System.Object>結果の行に含まれる列数より少ないを格納する配列。</span><span class="sxs-lookup"><span data-stu-id="84c5a-638">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="84c5a-639">データの量のみ、<xref:System.Object>配列では、配列にコピーを保持します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-639">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="84c5a-640">渡すことも、<xref:System.Object>配列の長さが、結果の行に含まれる列の数を超えています。</span><span class="sxs-lookup"><span data-stu-id="84c5a-640">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span>  
  
 <span data-ttu-id="84c5a-641">null データベース列の場合は、<xref:System.DBNull> が返されます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-641">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84c5a-642">次の例で正しいサイズ配列を使用して、指定された現在の行からすべての値を読み取れ<xref:System.Data.SqlClient.SqlDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-642">The following example demonstrates using a correctly sized  array  to read all values from the current row in the supplied <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="84c5a-643">さらに、使用可能な列の数より大きいか小さい可能性のある固定サイズの配列を使用するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-643">In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#2)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlReader">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader GetXmlReader (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader GetXmlReader(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlReader (i As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlReader ^ GetXmlReader(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-644">指定された列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-644">The value of the specified column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-645">
            <see cref="T:System.Xml.XmlReader" />として XML 型のデータを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-645">Retrieves data of type XML as an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-646">返されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-646">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-647"><xref:System.Xml.XmlReader>によって返されるオブジェクト<xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A>非同期操作をサポートしません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-647">The <xref:System.Xml.XmlReader> object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> does not support asynchronous operations.</span></span> <span data-ttu-id="84c5a-648">非同期操作を必要とする場合、<xref:System.Xml.XmlReader>サーバーで、nvarchar (max) に XML 列をキャスト、および使用<xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A>で<xref:System.Xml.XmlReader.Create%2A>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-648">If you require asynchronous operations on an <xref:System.Xml.XmlReader>, cast the XML column to an NVARCHAR(MAX) on the server and use <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> with <xref:System.Xml.XmlReader.Create%2A>.</span></span>  
  
 <span data-ttu-id="84c5a-649"><xref:System.Data.SqlClient.SqlException> 例外が発生した<xref:System.Xml.XmlReader>としてスロー<xref:System.Xml.XmlException>例外の内部例外を確認して、<xref:System.Data.SqlClient.SqlException>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-649"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.Xml.XmlReader> are thrown as <xref:System.Xml.XmlException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="84c5a-650"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> 生成されます、<xref:System.InvalidOperationException>例外によって返されるオブジェクトで使用すると<xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A>とき<xref:System.Data.CommandBehavior.SequentialAccess>が有効になっています。</span><span class="sxs-lookup"><span data-stu-id="84c5a-650"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="84c5a-651">詳細については、次を参照してください。 [SqlClient ストリーミング サポート](~/docs/framework/data/adonet/sqlclient-streaming-support.md)です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-651">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84c5a-652">データの取得中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-652">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="84c5a-653">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> は、データの取得時に閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-653">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="84c5a-654">読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> は呼び出されなかったか、false を返しました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-654">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="84c5a-655">以前に読み取られた列をシーケンシャル モードで読み取ろうとしています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-655">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="84c5a-656">非同期操作が進行中でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-656">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="84c5a-657">シーケンシャル モードで実行中、これはすべての Get\* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-657">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="84c5a-658">存在しない列を読み取ろうとしています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-658">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="84c5a-659">返される型は xml ではありませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-659">The returned type was not xml.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84c5a-660">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> に 1 行以上の行が格納されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-660">Gets a value that indicates whether the <see cref="T:System.Data.SqlClient.SqlDataReader" /> contains one or more rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c5a-661">1 行以上の行が <see cref="T:System.Data.SqlClient.SqlDataReader" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-661">
              <see langword="true" /> if the <see cref="T:System.Data.SqlClient.SqlDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.IsClosed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84c5a-662">指定した <see cref="T:System.Data.SqlClient.SqlDataReader" /> インスタンスが閉じているかどうかを示すブール値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-662">Retrieves a Boolean value that indicates whether the specified <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance has been closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c5a-663">指定した <see cref="T:System.Data.SqlClient.SqlDataReader" /> インスタンスが閉じている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-663">
              <see langword="true" /> if the specified <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance is closed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-664">読み取ることはできません、<xref:System.Data.SqlClient.SqlDataReader>閉じられているインスタンス。</span><span class="sxs-lookup"><span data-stu-id="84c5a-664">It is not possible to read from a <xref:System.Data.SqlClient.SqlDataReader> instance that is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCommandBehavior">
      <MemberSignature Language="C#" Value="protected bool IsCommandBehavior (System.Data.CommandBehavior condition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsCommandBehavior(valuetype System.Data.CommandBehavior condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsCommandBehavior (condition As CommandBehavior) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsCommandBehavior(System::Data::CommandBehavior condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="84c5a-665">
            <see cref="T:System.Data.CommandBehavior" /> 列挙値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-665">A <see cref="T:System.Data.CommandBehavior" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-666">指定した <see cref="T:System.Data.CommandBehavior" /> が <see cref="T:System.Data.SqlClient.SqlDataReader" /> の動作と一致するかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-666">Determines whether the specified <see cref="T:System.Data.CommandBehavior" /> matches that of the <see cref="T:System.Data.SqlClient.SqlDataReader" /> .</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-667">指定した <see cref="T:System.Data.CommandBehavior" /> が true の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-667">
              <see langword="true" /> if the specified <see cref="T:System.Data.CommandBehavior" /> is true, <see langword="false" /> otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-668">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="84c5a-668">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.IsDBNull(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-669">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-669">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-670">列に格納されている値が存在しない値または欠損値かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-670">Gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-671">指定した列の値が <see cref="T:System.DBNull" /> と等価である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-671">
              <see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-672">チェック、型指定されたを呼び出す前に null 列値は get メソッドには、このメソッドを呼び出す (たとえば、 <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>、<xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>など)、エラーの発生を防ぐためにします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-672">Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
 [!code-csharp[SqlDataReader_IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqldatareader_isdbnull/cs/source.cs#1)]
 [!code-vb[SqlDataReader_IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqldatareader_isdbnull/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int i, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 i, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int i, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-673">取得する、0 から始まる列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-673">The zero-based column to be retrieved.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="84c5a-674">操作を取り消すことを示す通知を反映する取り消し命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-674">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="84c5a-675">これは取り消しを保証しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-675">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="84c5a-676">
            <see langword="CancellationToken.None" /> の設定は、このメソッドを <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> と同じにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-676">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="84c5a-677">返されたタスクを取り消し済みとしてマークする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-677">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-678">列に格納されている値が存在しない値または欠損値かどうかを示す値を取得する <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> の非同期バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-678">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
          <span data-ttu-id="84c5a-679">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-679">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="84c5a-680">例外は、返されたタスク オブジェクトによって報告されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-680">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-681">指定した列の値が <see langword="true" /> と等価である場合は <see langword="DBNull" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-681">
              <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-682">詳細については、次を参照してください。 [SqlClient ストリーミング サポート](~/docs/framework/data/adonet/sqlclient-streaming-support.md)です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-682">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84c5a-683">データの取得中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-683">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="84c5a-684">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> は、データの取得時に閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-684">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="84c5a-685">読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> は呼び出されなかったか、false を返しました)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-685">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="84c5a-686">以前に読み取られた列をシーケンシャル モードで読み取ろうとしています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-686">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="84c5a-687">非同期操作が進行中でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-687">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="84c5a-688">シーケンシャル モードで実行中、これはすべての Get\* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-688">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
          <span data-ttu-id="84c5a-689">
            <see langword="Context Connection=true" /> は接続文字列で指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-689">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="84c5a-690">存在しない列を読み取ろうとしています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-690">Trying to read a column that does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="84c5a-691">特定の列の値をネイティブ形式で取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-691">Gets the value of a column in its native format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-692">0 から始まる列序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-692">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-693">列の序数によって指定した列の値をネイティブ形式で取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-693">Gets the value of the specified column in its native format given the column ordinal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c5a-694">指定した列のネイティブ形式での値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-694">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="84c5a-695">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-695">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="84c5a-696">列の名前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-696">The column name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-697">列名によって指定した列の値をネイティブ形式で取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-697">Gets the value of the specified column in its native format given the column name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c5a-698">指定した列のネイティブ形式での値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-698">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-699">大文字小文字を区別ルックアップが最初に実行されます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-699">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="84c5a-700">2 番目の検索が行われた、失敗した場合は (大文字と小文字の比較が行われデータベース照合順序を使用)。</span><span class="sxs-lookup"><span data-stu-id="84c5a-700">If it fails, a second case-insensitive search is made (a case-insensitive comparison is done using the database collation).</span></span> <span data-ttu-id="84c5a-701">予期しない結果は、比較がカルチャに固有の大文字と小文字の規則によって影響を受けるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-701">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="84c5a-702">たとえば、トルコ語では次の例間違った結果が生成トルコ語で、ファイル システムは、文字 'i' の言語の文字種の規則を使用しないので"file"にします。</span><span class="sxs-lookup"><span data-stu-id="84c5a-702">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</span></span>  
  
 <span data-ttu-id="84c5a-703">このメソッドは、カタカナの全角を区別します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-703">This method is kana-width insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="84c5a-704">指定された名前の列は見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-704">No column with the specified name was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.NextResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84c5a-705">バッチ Transact-SQL ステートメントの結果を読み込むときに、データ リーダーを次の結果に進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-705">Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-706">次の結果セットがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-706">
              <see langword="true" /> if there are more result sets; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-707">TRANSACT-SQL バッチのステートメントを実行することによって生成される複数の結果を処理するために使用します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-707">Used to process multiple results, which can be generated by executing batch Transact-SQL statements.</span></span>  
  
 <span data-ttu-id="84c5a-708">既定では、データ リーダーは、最初の結果に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-708">By default, the data reader is positioned on the first result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="84c5a-709">取り消し命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-709">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-710">バッチ [!INCLUDE[tsql](~/includes/tsql-md.md)] ステートメントの結果を読み込むときに、データ リーダーを次の結果に進める <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" /> の非同期バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-710">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" />, which advances the data reader to the next result, when reading the results of batch [!INCLUDE[tsql](~/includes/tsql-md.md)] statements.</span>
          </span>
          <span data-ttu-id="84c5a-711">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-711">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="84c5a-712">例外は、返されたタスク オブジェクトによって報告されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-712">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-713">非同期操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-713">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-714">.NET Framework Data Provider for SQL Server の非同期プログラミングの詳細については、次を参照してください。[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-714">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84c5a-715">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" /> を複数回呼び出しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-715">Calling <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="84c5a-716">
            <see langword="Context Connection=true" /> は接続文字列で指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-716">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="84c5a-717">SQL Server がコマンド テキストの実行中にエラーを返しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-717">SQL Server returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Read</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84c5a-718">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> を次のレコードに進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-718">Advances the <see cref="T:System.Data.SqlClient.SqlDataReader" /> to the next record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-719">次の行が存在する場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-719">
              <see langword="true" /> if there are more rows; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-720">既定の位置、<xref:System.Data.SqlClient.SqlDataReader>最初のレコードの前に、です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-720">The default position of the <xref:System.Data.SqlClient.SqlDataReader> is before the first record.</span></span> <span data-ttu-id="84c5a-721">そのため、呼び出す必要があります<xref:System.Data.SqlClient.SqlDataReader.Read%2A>データへのアクセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-721">Therefore, you must call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> to begin accessing any data.</span></span>  
  
 <span data-ttu-id="84c5a-722">1 つだけ`SqlDataReader`ごとに関連付けられている<xref:System.Data.SqlClient.SqlConnection>時に、開いている可能性があります最初の 1 つが閉じられるまでを開くには別の試行は失敗します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-722">Only one `SqlDataReader` per associated <xref:System.Data.SqlClient.SqlConnection> may be open at a time, and any attempt to open another will fail until the first one is closed.</span></span> <span data-ttu-id="84c5a-723">同様に、`SqlDataReader`が使用されている、関連付けられた`SqlConnection`機能を提供するまで、呼び出しがビジー<xref:System.Data.SqlClient.SqlDataReader.Close%2A>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-723">Similarly, while the `SqlDataReader` is being used, the associated `SqlConnection` is busy serving it until you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84c5a-724">次の例を作成、 <xref:System.Data.SqlClient.SqlConnection>、 <xref:System.Data.SqlClient.SqlCommand>、および<xref:System.Data.SqlClient.SqlDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-724">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="84c5a-725">例は、コンソール ウィンドウに書き出し、データを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-725">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="84c5a-726">コードが終了し、<xref:System.Data.SqlClient.SqlDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-726">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="84c5a-727"><xref:System.Data.SqlClient.SqlConnection>はの最後に自動的に閉じ、`using`コード ブロック。</span><span class="sxs-lookup"><span data-stu-id="84c5a-727">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="84c5a-728">SQL Server がコマンド テキストの実行中にエラーを返しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-728">SQL Server returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; ReadAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="84c5a-729">取り消し命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-729">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-730">次のレコードに <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> を進める <see cref="T:System.Data.SqlClient.SqlDataReader" /> の非同期バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-730">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />, which advances the <see cref="T:System.Data.SqlClient.SqlDataReader" /> to the next record.</span>
          </span>
          <span data-ttu-id="84c5a-731">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-731">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="84c5a-732">例外は、返されたタスク オブジェクトによって報告されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-732">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-733">非同期操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-733">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-734">場合、`behavior`のパラメーター<xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A>に設定されている`Default`、<xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A>タスクを返す前に行全体を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-734">If the `behavior` parameter of <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A> is set to `Default`, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A> reads the entire row before returning the Task.</span></span>  
  
 <span data-ttu-id="84c5a-735">.NET Framework Data Provider for SQL Server の非同期プログラミングの概要のコード サンプルを含む詳細については、次を参照してください。[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-735">For more information, including code samples, about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="84c5a-736">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> を複数回呼び出しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-736">Calling <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="84c5a-737">
            <see langword="Context Connection=true" /> は接続文字列で指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-737">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="84c5a-738">SQL Server がコマンド テキストの実行中にエラーを返しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-738">SQL Server returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.RecordsAffected</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84c5a-739">Transact-SQL ステートメントによって変更、挿入、または削除された行数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-739">Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c5a-740">変更、挿入、または削除された行の数。影響を受けた行がない、またはステートメントが失敗した場合は 0。SELECT ステートメントの場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-740">The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-741"><xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>プロパティが設定されていないすべての行が読み取られ、<xref:System.Data.SqlClient.SqlDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-741">The <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.SqlClient.SqlDataReader>.</span></span>  
  
 <span data-ttu-id="84c5a-742">このプロパティの値は、累積的なです。</span><span class="sxs-lookup"><span data-stu-id="84c5a-742">The value of this property is cumulative.</span></span> <span data-ttu-id="84c5a-743">たとえば、バッチ モードの値で 2 つのレコードが挿入された`RecordsAffected`2 になります。</span><span class="sxs-lookup"><span data-stu-id="84c5a-743">For example, if two records are inserted in batch mode, the value of `RecordsAffected` will be two.</span></span>  
  
 <span data-ttu-id="84c5a-744"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> および<xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>後に呼び出すことができる唯一のプロパティは、<xref:System.Data.SqlClient.SqlDataReader>が閉じられます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-744"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (i As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int i) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="84c5a-745">列の序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-745">A column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84c5a-746">指定された列序数の <see cref="T:System.Data.IDataReader" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-746">Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84c5a-747">指定した列序数の <see cref="T:System.Data.IDataReader" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-747">The <see cref="T:System.Data.IDataReader" /> instance for the specified column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-748">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="84c5a-748">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="84c5a-749">これは、<xref:System.Data.SqlClient.SqlDataReader> のインスタンスが <xref:System.Data.IDataRecord> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-749">It can be used only when the <xref:System.Data.SqlClient.SqlDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public override int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84c5a-750">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> 内の表示フィールドの数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-750">Gets the number of fields in the <see cref="T:System.Data.SqlClient.SqlDataReader" /> that are not hidden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84c5a-751">表示フィールドの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="84c5a-751">The number of fields that are not hidden.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84c5a-752">この値は、<xref:System.Data.SqlClient.SqlDataReader> 内の表示フィールドの数を調べるために使用します。</span><span class="sxs-lookup"><span data-stu-id="84c5a-752">This value is used to determine how many fields in the <xref:System.Data.SqlClient.SqlDataReader> are visible.</span></span> <span data-ttu-id="84c5a-753">たとえば、部分的な主キーに対して SELECT を実行すると、キーの残りの部分が非表示フィールドとして返されます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-753">For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.</span></span> <span data-ttu-id="84c5a-754">非表示フィールドは、常に表示フィールドの後ろに追加されます。</span><span class="sxs-lookup"><span data-stu-id="84c5a-754">The hidden fields are always appended behind the visible fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>