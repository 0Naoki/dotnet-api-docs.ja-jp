<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlCommandBuilder.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51d6c2a42dc06d05c2f30996ed8802e30cd2597f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d6c2a42dc06d05c2f30996ed8802e30cd2597f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Automatically generates single-table commands that are used to reconcile changes made to a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the associated SQL Server database.</source>
          <target state="translated">SQL Server データベースに関連付けられた <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> への変更を調整するための単一テーブル コマンドを自動的に生成します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> does not automatically generate the Transact-SQL statements required to reconcile changes made to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the associated instance of SQL Server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>に加えられた変更を調整するために必要な TRANSACT-SQL ステートメントを自動的に生成しない、<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>関連付けられている SQL Server のインスタンスにします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> object to automatically generate Transact-SQL statements for single-table updates if you set the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">ただし、作成することができます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>設定した場合、1 つのテーブルの更新プログラム用の TRANSACT-SQL ステートメントを自動的に生成するオブジェクト、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Then, any additional Transact-SQL statements that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">次に、追加の Transact SQL ステートメントを設定しないことがによって生成される、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events whenever you set the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>自体のリスナーとして登録<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph>を設定する場合に、イベント、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can only associate one <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> object with each other at one time.</source>
          <target state="translated">関連付けることができますのみ<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>互いにオブジェクトを一度に 1 つです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>To generate INSERT, UPDATE, or DELETE statements, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property to retrieve a required set of metadata automatically.</source>
          <target state="translated">INSERT、UPDATE、または DELETE のステートメントを生成する、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>自動的に必要な一連のメタデータを取得するプロパティです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>If you change the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> after the metadata has been retrieved, such as after the first update, you should call the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method to update the metadata.</source>
          <target state="translated">変更した場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>呼び出す必要があります最初の更新の後など、メタデータが取得された後、<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>にメタデータを更新する方法です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">`SelectCommand`</ph> must also return at least one primary key or unique column.</source>
          <target state="translated"><ph id="ph1">`SelectCommand`</ph> は少なくとも 1 つの主キーまたは一意の列を返す必要があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>If none are present, an <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept> exception is generated, and the commands are not generated.</source>
          <target state="translated">存在しない場合、 <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept>例外が生成され、コマンドは生成されません。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> also uses the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> properties referenced by the <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>も使用して、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph>プロパティによって参照される、<ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The user should call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if one or more of these properties are modified, or if the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> itself is replaced.</source>
          <target state="translated">ユーザーが呼び出す必要があります<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>1 つ以上のこれらのプロパティを変更すると場合、または、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>自体は置き換えられます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> properties retain their previous values.</source>
          <target state="translated">それ以外の場合、 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph>プロパティは、前回の値を保持します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>If you call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> is disassociated from the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, and the generated commands are no longer used.</source>
          <target state="translated">呼び出す場合<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>関連付けが解除され、 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>、され、生成されたコマンドは使用されなくです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, along <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, to select rows from a data source.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>と共に、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>と<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>、データ ソースから行を選択します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The example is passed a connection string, a query string that is a Transact-SQL SELECT statement, and a string that is the name of the database table.</source>
          <target state="translated">例には、接続文字列は、TRANSACT-SQL SELECT ステートメントでは、クエリ文字列と、データベース テーブルの名前を指定する文字列が渡されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The example then creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">作成し、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> の名前。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class with the associated <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> object.</source>
          <target state="translated">関連付ける <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> オブジェクトを指定して、<ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>自体のリスナーとして登録<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph>によって生成されるイベント、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>このプロパティで指定します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is released.</source>
          <target state="translated">新しいインスタンスを作成する場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>、既存<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>これに関連付けられている<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>を解放します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogLocation">
          <source>Sets or gets the <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> for an instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> クラスのインスタンスの <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> を設定または取得します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator">
          <source>Sets or gets a string used as the catalog separator for an instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> クラスのインスタンスのカタログの区切り記号として使用する文字列を設定または取得します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator">
          <source>A string that indicates the catalog separator for use with an instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> クラスのインスタンスで使用するカタログ区切り記号を示す文字列。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> object for which Transact-SQL statements are automatically generated.</source>
          <target state="translated">Transact-SQL ステートメントを自動生成する対象の <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> オブジェクトを取得または設定します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>自体のリスナーとして登録<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph>によって生成されるイベント、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>このプロパティで指定します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is released.</source>
          <target state="translated">新しいインスタンスを作成する場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>、既存<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>これに関連付けられている<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>を解放します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> referencing the stored procedure from which the parameter information is to be derived.</source>
          <target state="translated">パラメーター情報の取得対象となるストアド プロシージャを参照する <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>The derived parameters are added to the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> collection of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">取得したパラメーターは、<ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> コレクションに追加されます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>Retrieves parameter information from the stored procedure specified in the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and populates the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> collection of the specified <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> で指定したストアド プロシージャからパラメーター情報を取得し、指定した <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> オブジェクトの <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> コレクションにパラメーターを格納します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source><ph id="ph1">`DeriveParameters`</ph> overwrites any existing parameter information for the <ph id="ph2">`SqlDbCommand`</ph>.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph> 既存のパラメーター情報を上書き、<ph id="ph2">`SqlDbCommand`</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source><ph id="ph1">`DeriveParameters`</ph> requires an additional call to the database to obtain the information.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph> 情報を取得するデータベースに追加の呼び出しが必要です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</source>
          <target state="translated">パラメーター情報が事前にわかっている場合は、情報を明示的に設定して、パラメーター コレクションを設定する方が効率的です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>You can only use <ph id="ph1">`DeriveParameters`</ph> with stored procedures.</source>
          <target state="translated">使用できるだけ<ph id="ph1">`DeriveParameters`</ph>ストアド プロシージャを使用します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> with extended stored procedures.</source>
          <target state="translated">使用することはできません<ph id="ph1">`DeriveParameters`</ph>拡張ストアド プロシージャでします。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> to populate the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</source>
          <target state="translated">使用することはできません<ph id="ph1">`DeriveParameters`</ph>を設定する、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph>パラメーター化された SELECT ステートメントなど、任意の TRANSACT-SQL ステートメントを使用します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>構成パラメーターとパラメーターのデータ型<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>The command text is not a valid stored procedure name.</source>
          <target state="translated">コマンド テキストが有効なストアド プロシージャ名ではありません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          <target state="translated">データベースで削除処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>および変更、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>値に設定してで明示的に設定する、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">SQL ステートメントは、アプリケーションがいずれかの<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          <target state="translated">データベースで削除処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">削除を実行するための自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>および変更、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>値に設定してで明示的に設定する、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">SQL ステートメントは、アプリケーションがいずれかの<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names if possible.</source>
          <target state="translated">可能であれば、列名に一致するパラメーター名を生成する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、<ph id="ph2">@p1</ph>、<ph id="ph3">@p2</ph> のように生成します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform deletions on the database.</source>
          <target state="translated">データベースで削除処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform deletions.</source>
          <target state="translated">削除を実行するための自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>および変更、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>値に設定してで明示的に設定する、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">SQL ステートメントは、アプリケーションがいずれかの<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">使用するパラメーター名を生成するときに、既定の動作は、 <ph id="ph1">@p1</ph>、 <ph id="ph2">@p2</ph>、さまざまなパラメーターについてです。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">渡す<ph id="ph1">`true`</ph>の<ph id="ph2">`useColumnsForParameterNames`</ph>パラメーターさせることができます、<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>を代わりに、列名に基づいたパラメーターを生成します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">次は、次の条件が満たされた場合にのみ成功します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph>から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>コレクションが指定されており、その長さが、生成されたパラメーター名以上になるとします。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.</source>
          <target state="translated">生成されたパラメーター名で指定した条件を満たしている、<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph>から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>正規表現のコレクション。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph>から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>コレクションを指定します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform insertions on the database.</source>
          <target state="translated">データベースで挿入処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>および変更、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>値に設定してで明示的に設定する、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります: TRANSACT-SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">TRANSACT-SQL ステートメントは、アプリケーションがいずれかの<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform insertions on the database.</source>
          <target state="translated">データベースで挿入処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">挿入を実行するための自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>および変更、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>値に設定してで明示的に設定する、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります: TRANSACT-SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">TRANSACT-SQL ステートメントは、アプリケーションがいずれかの<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names if possible.</source>
          <target state="translated">可能であれば、列名に一致するパラメーター名を生成する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、<ph id="ph2">@p1</ph>、<ph id="ph3">@p2</ph> のように生成します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform insertions on the database.</source>
          <target state="translated">データベースで挿入処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform insertions.</source>
          <target state="translated">挿入を実行するための自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>および変更、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>値に設定してで明示的に設定する、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります: TRANSACT-SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">TRANSACT-SQL ステートメントは、アプリケーションがいずれかの<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">使用するパラメーター名を生成するときに、既定の動作は、 <ph id="ph1">@p1</ph>、 <ph id="ph2">@p2</ph>、さまざまなパラメーターについてです。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">渡す<ph id="ph1">`true`</ph>の<ph id="ph2">`useColumnsForParameterNames`</ph>パラメーターさせることができます、<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>を代わりに、列名に基づいたパラメーターを生成します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">次は、次の条件が満たされた場合にのみ成功します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph>から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>コレクションが指定されており、その長さが、生成されたパラメーター名以上になるとします。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.</source>
          <target state="translated">生成されたパラメーター名で指定した条件を満たしている、<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph>から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>正規表現のコレクション。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph>から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>コレクションを指定します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">データベースで更新処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>および変更、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>値に設定してで明示的に設定する、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります: TRANSACT-SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">TRANSACT-SQL ステートメントは、アプリケーションがいずれかの<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">データベースで更新処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform updates.</source>
          <target state="translated">更新を実行するための自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>および変更、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>値に設定してで明示的に設定する、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります: TRANSACT-SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">TRANSACT-SQL ステートメントは、アプリケーションがいずれかの<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names if possible.</source>
          <target state="translated">可能であれば、列名に一致するパラメーター名を生成する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、<ph id="ph2">@p1</ph>、<ph id="ph3">@p2</ph> のように生成します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">データベースで更新処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">更新を実行するための自動生成された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>および変更、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>値に設定してで明示的に設定する、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります: TRANSACT-SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">TRANSACT-SQL ステートメントは、アプリケーションがいずれかの<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">使用するパラメーター名を生成するときに、既定の動作は、 <ph id="ph1">@p1</ph>、 <ph id="ph2">@p2</ph>、さまざまなパラメーターについてです。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">渡す<ph id="ph1">`true`</ph>の<ph id="ph2">`useColumnsForParameterNames`</ph>パラメーターさせることができます、<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>を代わりに、列名に基づいたパラメーターを生成します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">次は、次の条件が満たされた場合にのみ成功します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph>から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>コレクションが指定されており、その長さが、生成されたパラメーター名以上になるとします。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.</source>
          <target state="translated">生成されたパラメーター名で指定した条件を満たしている、<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph>から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>正規表現のコレクション。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph>から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>コレクションを指定します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>The original unquoted identifier.</source>
          <target state="translated">引用符で囲まれていない元の ID。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</source>
          <target state="translated">カタログの大文字小文字を正しく区別して引用符で囲まれていない ID を指定し、正しく引用符で囲まれた形式でその ID を返します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>This includes correctly escaping any embedded quotes in the identifier.</source>
          <target state="translated">ID に埋め込まれている引用符は、正しくエスケープされます。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>The quoted version of the identifier.</source>
          <target state="translated">引用符で囲まれたバージョンの ID。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>Embedded quotes within the identifier are correctly escaped.</source>
          <target state="translated">ID 内に埋め込まれている引用符は、正しくエスケープされます。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">名前に空白や予約済みトークンなどの文字を含む SQL Server データベース オブジェクト (テーブル、列など) を指定するための開始文字を取得または設定します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>The starting character or characters to use.</source>
          <target state="translated">使用する 1 つ以上の開始文字。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>The default is an empty string.</source>
          <target state="translated">既定値は空の文字列です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a DataAdapter.</source>
          <target state="translated">変更することはできません、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph>、挿入後のプロパティを更新、または削除コマンドが生成されて、その設定を変更するには呼び出した後、 <ph id="ph3">`Update`</ph> DataAdapter のメソッドです。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated.</source>
          <target state="translated">このプロパティは、INSERT、UPDATE、または DELETE の各コマンドの生成後には変更できません。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">名前に空白や予約済みトークンなどの文字を含む SQL Server データベース オブジェクト (テーブル、列など) を指定するための終了文字を取得または設定します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>The ending character or characters to use.</source>
          <target state="translated">使用する終了文字。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>The default is an empty string.</source>
          <target state="translated">既定値は空の文字列です。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete operation has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a DataAdapter.</source>
          <target state="translated">変更することはできません、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph>、挿入後のプロパティを更新、または削除操作が生成されて、その設定を変更するには呼び出した後、 <ph id="ph3">`Update`</ph> DataAdapter のメソッドです。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>This property cannot be changed after an insert, update, or delete command has been generated.</source>
          <target state="translated">このプロパティは、挿入、更新、または削除コマンドの生成後には変更できません。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          <target state="translated">スキーマ識別子と他の識別子との間の区切り記号として使用される文字列を取得または設定します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">スキーマ区切り記号として使用される文字列。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">一般に、データベース サーバーは、いくつかの文字を持つ id からスキーマ名を区切ることによって、識別子のスキーマを示します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>For example, SQL Server uses a period, creating complete identifiers such as Person.CustomerName, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">たとえば、SQL Server はピリオド、Person.CustomerName、"Person"、スキーマ名があり、識別子は、"CustomerName"などの完全な識別子を作成します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>Setting this property lets developers modify this behavior.</source>
          <target state="translated">このプロパティの設定には、開発者はこの動作を変更することができます。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">埋め込まれている引用符が削除される ID。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier.</source>
          <target state="translated">引用符で囲まれた ID を指定して、引用符で囲まれていない正しい形式の ID を返します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>This includes correctly unescaping any embedded quotes in the identifier.</source>
          <target state="translated">ID に埋め込まれている引用符は、正しくエスケープ解除されます。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The unquoted identifier, with embedded quotes properly unescaped.</source>
          <target state="translated">埋め込まれていた引用符が適切にエスケープ解除された、引用符で囲まれていない ID。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>