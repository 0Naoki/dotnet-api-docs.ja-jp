<Type Name="SqlTransaction" FullName="System.Data.SqlClient.SqlTransaction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6db7d44f4eb5dbf8e3c6c499abea31628d3672c7" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51908469" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlTransaction : System.Data.Common.DbTransaction, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTransaction extends System.Data.Common.DbTransaction implements class System.Data.IDbTransaction, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTransaction&#xA;Inherits DbTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTransaction sealed : System::Data::Common::DbTransaction, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlTransaction = class&#xA;    inherit DbTransaction&#xA;    interface IDbTransaction&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbTransaction</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbTransaction</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="88bfe-101">SQL Server データベースで作成する Transact-SQL トランザクションを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="88bfe-101">Represents a Transact-SQL transaction to be made in a SQL Server database.</span>
      </span>
      <span data-ttu-id="88bfe-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="88bfe-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88bfe-103">アプリケーションを作成、<xref:System.Data.SqlClient.SqlTransaction>オブジェクトを呼び出すことによって<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>上、<xref:System.Data.SqlClient.SqlConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="88bfe-103">The application creates a <xref:System.Data.SqlClient.SqlTransaction> object by calling <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> on the <xref:System.Data.SqlClient.SqlConnection> object.</span></span> <span data-ttu-id="88bfe-104">(コミットまたはトランザクションを中止するなど) のトランザクションに関連付けられたすべての後続の操作に対して実行されます、<xref:System.Data.SqlClient.SqlTransaction>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="88bfe-104">All subsequent operations associated with the transaction (for example, committing or aborting the transaction), are performed on the <xref:System.Data.SqlClient.SqlTransaction> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="88bfe-105">`Try`/`Catch` 例外処理は、コミットまたはロールバック時に常に使用する必要があります、<xref:System.Data.SqlClient.SqlTransaction>します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-105">`Try`/`Catch` exception handling should always be used when committing or rolling back a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="88bfe-106">両方<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>と<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>生成、<xref:System.InvalidOperationException>接続が終了した場合、またはトランザクションが、サーバー上で既にロールバックされている場合。</span><span class="sxs-lookup"><span data-stu-id="88bfe-106">Both <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generate an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="88bfe-107">SQL Server のトランザクションの詳細については、次を参照してください。[明示的なトランザクション](https://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx)と[効率的なトランザクションのコーディング](https://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx)します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-107">For more information on SQL Server transactions, see [Explicit Transactions](https://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx) and [Coding Efficient Transactions](https://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88bfe-108">次の例では、作成、<xref:System.Data.SqlClient.SqlConnection>と<xref:System.Data.SqlClient.SqlTransaction>します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-108">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="88bfe-109">使用する方法も示します、 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>、および<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="88bfe-109">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="88bfe-110">エラーが発生、トランザクションがロールバック最初せず破棄されるかどうか、またはコミットします。</span><span class="sxs-lookup"><span data-stu-id="88bfe-110">The transaction is rolled back on any error, or if it is disposed without first being committed.</span></span> <span data-ttu-id="88bfe-111">`Try`/`Catch` エラー処理は、コミットまたはトランザクションをロールバックしようとしています。 エラーの処理に使用されます。</span><span class="sxs-lookup"><span data-stu-id="88bfe-111">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/local-transactions.md">
      <span data-ttu-id="88bfe-112">ローカル トランザクション</span>
      <span class="sxs-lookup">
        <span data-stu-id="88bfe-112">Local Transactions</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
      <span data-ttu-id="88bfe-113">ADO.NET の概要</span>
      <span class="sxs-lookup">
        <span data-stu-id="88bfe-113">ADO.NET Overview</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberSignature Language="F#" Value="override this.Commit : unit -&gt; unit" Usage="sqlTransaction.Commit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbTransaction.Commit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="88bfe-114">データベース トランザクションをコミットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-114">Commits the database transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88bfe-115"><xref:System.Data.SqlClient.SqlTransaction.Commit%2A>メソッドは、TRANSACT-SQL の COMMIT TRANSACTION ステートメントと等価です。</span><span class="sxs-lookup"><span data-stu-id="88bfe-115">The <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> method is equivalent to the Transact-SQL COMMIT TRANSACTION statement.</span></span> <span data-ttu-id="88bfe-116">ことはできませんトランザクションをロールバックする、コミットされたすべての変更が、データベースの永続的な一部となるためです。</span><span class="sxs-lookup"><span data-stu-id="88bfe-116">You cannot roll back a transaction once it has been committed, because all modifications have become a permanent part of the database.</span></span> <span data-ttu-id="88bfe-117">詳細については、次を参照してください。 [COMMIT TRANSACTION (TRANSACT-SQL)](/sql/t-sql/language-elements/commit-transaction-transact-sql)します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-117">For more information, see [COMMIT TRANSACTION (Transact-SQL) ](/sql/t-sql/language-elements/commit-transaction-transact-sql).</span></span>
  
> [!NOTE]
>  <span data-ttu-id="88bfe-118">`Try`/`Catch` 例外処理は、コミットまたはロールバック時に常に使用する必要があります、<xref:System.Data.SqlClient.SqlTransaction>します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-118">`Try`/`Catch` exception handling should always be used when committing or rolling back a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="88bfe-119">両方`Commit`と<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>生成、<xref:System.InvalidOperationException>接続が終了した場合、またはトランザクションが、サーバー上で既にロールバックされている場合。</span><span class="sxs-lookup"><span data-stu-id="88bfe-119">Both `Commit` and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="88bfe-120">SQL Server のトランザクションの詳細については、次を参照してください。[トランザクション (TRANSACT-SQL)](/sql/t-sql/language-elements/transactions-transact-sql)します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-120">For more information on SQL Server transactions, see [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="88bfe-121">次の例では、作成、<xref:System.Data.SqlClient.SqlConnection>と<xref:System.Data.SqlClient.SqlTransaction>します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-121">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="88bfe-122">使用する方法も示します、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>、 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>、および<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="88bfe-122">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="88bfe-123">トランザクションはエラーにロールバックします。</span><span class="sxs-lookup"><span data-stu-id="88bfe-123">The transaction is rolled back on any error.</span></span> <span data-ttu-id="88bfe-124">`Try`/`Catch` エラー処理は、コミットまたはトランザクションをロールバックしようとしています。 エラーの処理に使用されます。</span><span class="sxs-lookup"><span data-stu-id="88bfe-124">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="88bfe-125">トランザクションをコミットしようとしてエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-125">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="88bfe-126">トランザクションは既にコミットまたはロールバックされています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-126">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="88bfe-127">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-127">-or-</span>
          </span>
          <span data-ttu-id="88bfe-128">接続が切れています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-128">The connection is broken.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/local-transactions.md">
          <span data-ttu-id="88bfe-129">ローカル トランザクション</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-129">Local Transactions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="88bfe-130">ADO.NET の概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-130">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.SqlClient.SqlConnection" Usage="System.Data.SqlClient.SqlTransaction.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="88bfe-131">トランザクションに関連付けられた <see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトを取得します。トランザクションが既に無効になっている場合は、<see langword="null" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-131">Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction, or <see langword="null" /> if the transaction is no longer valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="88bfe-132">トランザクションに関連付けられる <see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-132">The <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88bfe-133">1 つのアプリケーションでは、0 個以上のトランザクションで複数のデータベース接続があります。</span><span class="sxs-lookup"><span data-stu-id="88bfe-133">A single application may have multiple database connections, each with zero or more transactions.</span></span> <span data-ttu-id="88bfe-134">このプロパティでは、によって作成された特定のトランザクションに関連付けられている接続オブジェクトを確認できます。<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-134">This property lets you determine the connection object associated with a particular transaction created by <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/local-transactions.md">
          <span data-ttu-id="88bfe-135">トランザクションの実行</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-135">Performing a Transaction</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="88bfe-136">ADO.NET の概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-136">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection" Usage="System.Data.SqlClient.SqlTransaction.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="sqlTransaction.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlTransaction.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public override System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.IsolationLevel : System.Data.IsolationLevel" Usage="System.Data.SqlClient.SqlTransaction.IsolationLevel" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbTransaction.IsolationLevel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="88bfe-137">このトランザクションの <see cref="T:System.Data.IsolationLevel" /> を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-137">Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="88bfe-138">このトランザクションの <see cref="T:System.Data.IsolationLevel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-138">The <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span>
          </span>
          <span data-ttu-id="88bfe-139">既定値は、<see langword="ReadCommitted" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-139">The default is <see langword="ReadCommitted" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88bfe-140">並列トランザクションはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="88bfe-140">Parallel transactions are not supported.</span></span> <span data-ttu-id="88bfe-141">そのため、<xref:System.Data.IsolationLevel>トランザクション全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="88bfe-141">Therefore, the <xref:System.Data.IsolationLevel> applies to the whole transaction.</span></span>  
  
 <span data-ttu-id="88bfe-142">SQL Server の分離レベルの詳細については、次を参照してください。[トランザクション分離レベル](/sql/t-sql/language-elements/transaction-isolation-levels)します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-142">For more information on SQL Server isolation levels, see [Transaction Isolation Levels](/sql/t-sql/language-elements/transaction-isolation-levels).</span></span>
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/local-transactions.md">
          <span data-ttu-id="88bfe-143">トランザクションの実行</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-143">Performing a Transaction</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="88bfe-144">ADO.NET の概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-144">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rollback">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="88bfe-145">トランザクションを保留状態からロールバックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-145">Rolls back a transaction from a pending state.</span>
          </span>
        </summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="88bfe-146">ADO.NET の概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-146">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback();" />
      <MemberSignature Language="F#" Value="override this.Rollback : unit -&gt; unit" Usage="sqlTransaction.Rollback " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbTransaction.Rollback</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="88bfe-147">トランザクションを保留状態からロールバックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-147">Rolls back a transaction from a pending state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88bfe-148"><xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>メソッドは、TRANSACT-SQL の ROLLBACK TRANSACTION ステートメントと等価です。</span><span class="sxs-lookup"><span data-stu-id="88bfe-148">The <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</span></span> <span data-ttu-id="88bfe-149">詳細については、次を参照してください。 [ROLLBACK TRANSACTION (TRANSACT-SQL)](/sql/t-sql/language-elements/rollback-transaction-transact-sql)します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-149">For more information, see [ROLLBACK TRANSACTION (Transact-SQL) ](/sql/t-sql/language-elements/rollback-transaction-transact-sql).</span></span>
  
 <span data-ttu-id="88bfe-150">トランザクションは保留中の状態でのみロールバックされます (後<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>が呼び出されると、前に<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>と呼びます)。</span><span class="sxs-lookup"><span data-stu-id="88bfe-150">The transaction can only be rolled back from a pending state (after <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="88bfe-151">バックアップ イベントに破棄される前に、トランザクションはロールバック`Commit`または`Rollback`が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="88bfe-151">The transaction is rolled back in the event it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="88bfe-152">`Try`/`Catch` 例外処理は、トランザクションをロールバックするときに常に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="88bfe-152">`Try`/`Catch` exception handling should always be used when rolling back a transaction.</span></span> <span data-ttu-id="88bfe-153">A`Rollback`生成、<xref:System.InvalidOperationException>接続が終了した場合、またはトランザクションが、サーバー上で既にロールバックされている場合。</span><span class="sxs-lookup"><span data-stu-id="88bfe-153">A `Rollback` generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="88bfe-154">SQL Server のトランザクションの詳細については、次を参照してください。[トランザクション (TRANSACT-SQL)](/sql/t-sql/language-elements/transactions-transact-sql)します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-154">For more information on SQL Server transactions, see [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="88bfe-155">次の例では、作成、<xref:System.Data.SqlClient.SqlConnection>と<xref:System.Data.SqlClient.SqlTransaction>します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-155">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="88bfe-156">使用する方法も示します、 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>、および<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="88bfe-156">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="88bfe-157">トランザクションはエラーにロールバックします。</span><span class="sxs-lookup"><span data-stu-id="88bfe-157">The transaction is rolled back on any error.</span></span> <span data-ttu-id="88bfe-158">`Try`/`Catch` エラー処理は、コミットまたはトランザクションをロールバックしようとしています。 エラーの処理に使用されます。</span><span class="sxs-lookup"><span data-stu-id="88bfe-158">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="88bfe-159">トランザクションをコミットしようとしてエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-159">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="88bfe-160">トランザクションは既にコミットまたはロールバックされています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-160">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="88bfe-161">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-161">-or-</span>
          </span>
          <span data-ttu-id="88bfe-162">接続が切れています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-162">The connection is broken.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/local-transactions.md">
          <span data-ttu-id="88bfe-163">ローカル トランザクション</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-163">Local Transactions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="88bfe-164">ADO.NET の概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-164">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rollback(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback (transactionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.Rollback : string -&gt; unit" Usage="sqlTransaction.Rollback transactionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">
          <span data-ttu-id="88bfe-165">ロールバックするトランザクションの名前、またはロールバック先のセーブポイント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-165">The name of the transaction to roll back, or the savepoint to which to roll back.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="88bfe-166">トランザクションまたはセーブポイントの名前を指定して、トランザクションを保留中の状態からロールバックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-166">Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88bfe-167"><xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>メソッドは、TRANSACT-SQL の ROLLBACK TRANSACTION ステートメントと等価です。</span><span class="sxs-lookup"><span data-stu-id="88bfe-167">The <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</span></span> <span data-ttu-id="88bfe-168">詳細については、次を参照してください。[トランザクション (TRANSACT-SQL)](/sql/t-sql/language-elements/transactions-transact-sql)します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-168">For more information, see [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).</span></span>  
  
 <span data-ttu-id="88bfe-169">トランザクションは保留中の状態でのみロールバックされます (後<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>が呼び出されると、前に<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>と呼びます)。</span><span class="sxs-lookup"><span data-stu-id="88bfe-169">The transaction can only be rolled back from a pending state (after <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="88bfe-170">前に破棄される場合、トランザクションはロールバック`Commit`または`Rollback`が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="88bfe-170">The transaction is rolled back if it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="88bfe-171">`Try`/`Catch` 例外処理は、トランザクションをロールバックするときに常に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="88bfe-171">`Try`/`Catch` exception handling should always be used when rolling back a transaction.</span></span> <span data-ttu-id="88bfe-172">A`Rollback`生成、<xref:System.InvalidOperationException>接続が終了した場合、またはトランザクションが、サーバー上で既にロールバックされている場合。</span><span class="sxs-lookup"><span data-stu-id="88bfe-172">A `Rollback` generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="88bfe-173">SQL Server のトランザクションの詳細については、次を参照してください。[トランザクション (TRANSACT-SQL)](/sql/t-sql/language-elements/transactions-transact-sql)します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-173">For more information on SQL Server transactions, see [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="88bfe-174">次の例では、作成、<xref:System.Data.SqlClient.SqlConnection>と<xref:System.Data.SqlClient.SqlTransaction>します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-174">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="88bfe-175">使用する方法も示します、 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>、および<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="88bfe-175">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="88bfe-176">トランザクションはエラーにロールバックします。</span><span class="sxs-lookup"><span data-stu-id="88bfe-176">The transaction is rolled back on any error.</span></span> <span data-ttu-id="88bfe-177">`Try`/`Catch` エラー処理は、コミットまたはトランザクションをロールバックしようとしています。 エラーの処理に使用されます。</span><span class="sxs-lookup"><span data-stu-id="88bfe-177">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="88bfe-178">トランザクション ファイル名が指定されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-178">No transaction name was specified.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="88bfe-179">トランザクションは既にコミットまたはロールバックされています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-179">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="88bfe-180">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-180">-or-</span>
          </span>
          <span data-ttu-id="88bfe-181">接続が切れています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-181">The connection is broken.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/local-transactions.md">
          <span data-ttu-id="88bfe-182">トランザクションの実行</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-182">Performing a Transaction</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="88bfe-183">ADO.NET の概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-183">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string savePointName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string savePointName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (savePointName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ savePointName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="sqlTransaction.Save savePointName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savePointName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="savePointName">
          <span data-ttu-id="88bfe-184">セーブポイントの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-184">The name of the savepoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="88bfe-185">セーブポイントの名前を指定して、トランザクション内にセーブポイントを作成します。セーブポイントは、トランザクションを部分的にロールバックするために使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-185">Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88bfe-186"><xref:System.Data.SqlClient.SqlTransaction.Save%2A> メソッドは、TRANSACT-SQL の SAVE TRANSACTION ステートメントと等価です。</span><span class="sxs-lookup"><span data-stu-id="88bfe-186"><xref:System.Data.SqlClient.SqlTransaction.Save%2A> method is equivalent to the Transact-SQL SAVE TRANSACTION statement.</span></span>  
  
 <span data-ttu-id="88bfe-187">使用される値、`savePoint`パラメーターで使用されるのと同じ値を指定できます、`transactionName`の一部の実装のパラメーター、<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="88bfe-187">The value used in the `savePoint` parameter can be the same value used in the `transactionName` parameter of some implementations of the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> method.</span></span>  
  
 <span data-ttu-id="88bfe-188">セーブポイントは、トランザクションの一部をロールバックするためのメカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="88bfe-188">Savepoints offer a mechanism to roll back parts of transactions.</span></span> <span data-ttu-id="88bfe-189">使用してセーブポイントを作成する、<xref:System.Data.SqlClient.SqlTransaction.Save%2A>メソッド、およびその後の呼び出し、<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>トランザクションの開始にロールバックではなく、セーブポイントにロールバックするメソッド。</span><span class="sxs-lookup"><span data-stu-id="88bfe-189">You create a savepoint using the <xref:System.Data.SqlClient.SqlTransaction.Save%2A> method, and then later call the <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method to roll back to the savepoint instead of rolling back to the start of the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="88bfe-190">トランザクションをコミットしようとしてエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-190">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="88bfe-191">トランザクションは既にコミットまたはロールバックされています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-191">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="88bfe-192">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-192">-or-</span>
          </span>
          <span data-ttu-id="88bfe-193">接続が切れています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-193">The connection is broken.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/local-transactions.md">
          <span data-ttu-id="88bfe-194">トランザクションの実行</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-194">Performing a Transaction</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="88bfe-195">ADO.NET の概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="88bfe-195">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>