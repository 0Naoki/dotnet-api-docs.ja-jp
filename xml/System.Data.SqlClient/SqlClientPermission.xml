<Type Name="SqlClientPermission" FullName="System.Data.SqlClient.SqlClientPermission">
  <TypeSignature Language="C#" Value="public sealed class SqlClientPermission : System.Data.Common.DBDataPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlClientPermission extends System.Data.Common.DBDataPermission" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlClientPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlClientPermission&#xA;Inherits DBDataPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlClientPermission sealed : System::Data::Common::DBDataPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DBDataPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a9b5e-101">.NET Framework SQL Server 用データ プロバイダーで、データ ソースへのアクセスに関するセキュリティ レベルをユーザーに適切に割り当てることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-101">Enables the .NET Framework Data Provider for SQL Server to help make sure that a user has a security level sufficient to access a data source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9b5e-102"><xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>プロパティよりも優先、<xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-102">The <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> property takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property.</span></span> <span data-ttu-id="a9b5e-103">そのため、設定した場合<xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>に`false`、設定する必要もあります<xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>に`false`をユーザーが、空白のパスワードを使用して接続するを防ぐ。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-103">Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> to `false` to prevent a user from making a connection using a blank password.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9b5e-104">ADO.NET のコード アクセス セキュリティのアクセス許可を使用している場合、適切なパターンは、最も制限の厳しいケース (権限なし) から開始し、コードが実行する必要がある特定のタスクに必要な特定のアクセス許可を追加します。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-104">When using code access security permissions for ADO.NET, the correct pattern is to start with the most restrictive case (no permissions at all) and then add the specific permissions that are needed for the particular task that the code needs to perform.</span></span> <span data-ttu-id="a9b5e-105">同じ接続文字列を表現するさまざまな方法があるために、すべての権限と、特定の権限を拒否して、逆のパターンは、セキュリティで保護されたではありません。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-105">The opposite pattern, starting with all permissions and then denying a specific permission, is not secure, because there are many ways of expressing the same connection string.</span></span> <span data-ttu-id="a9b5e-106">たとえば、すべての権限を与えた後で接続文字列 "server=someserver" の使用を拒否しても、"server=someserver.mycompany.com" という接続文字列は使用可能です。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-106">For example, if you start with all permissions and then attempt to deny the use of the connection string "server=someserver", the string "server=someserver.mycompany.com" would still be allowed.</span></span> <span data-ttu-id="a9b5e-107">常に権限をまったく与えない状態から開始することで、権限セットのセキュリティ ホールを減らすことができます。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-107">By always starting by granting no permissions at all, you reduce the chances that there are holes in the permission set.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a9b5e-108"><see cref="T:System.Data.SqlClient.SqlClientPermission" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-108">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("SqlClientPermission() has been deprecated.  Use the SqlClientPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a9b5e-109"><see cref="T:System.Data.SqlClient.SqlClientPermission" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-109">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="a9b5e-110"><see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-110">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span></span></param>
        <summary><span data-ttu-id="a9b5e-111"><see cref="T:System.Data.SqlClient.SqlClientPermission" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-111">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state, bool allowBlankPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState, allowBlankPassword As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission(System::Security::Permissions::PermissionState state, bool allowBlankPassword);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("SqlClientPermission(PermissionState state, Boolean allowBlankPassword) has been deprecated.  Use the SqlClientPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
        <Parameter Name="allowBlankPassword" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="a9b5e-112"><see cref="T:System.Security.Permissions.PermissionState" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-112">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span></span></param>
        <param name="allowBlankPassword"><span data-ttu-id="a9b5e-113">空白のパスワードを許可するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-113">Indicates whether a blank password is allowed.</span></span></param>
        <summary><span data-ttu-id="a9b5e-114"><see cref="T:System.Data.SqlClient.SqlClientPermission" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-114">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9b5e-115"><xref:System.Security.Permissions.PermissionState>列挙型よりも優先、<xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-115">The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property.</span></span> <span data-ttu-id="a9b5e-116">そのため、設定した場合<xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>に`false`、設定する必要もあります<xref:System.Security.Permissions.PermissionState>に`None`をユーザーが、空白のパスワードを使用して接続するを防ぐ。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-116">Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.</span></span> <span data-ttu-id="a9b5e-117">セキュリティ要求を使用する方法を示す例では、次を参照してください。[コード アクセス セキュリティと ADO.NET](~/docs/framework/data/adonet/code-access-security.md)です。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-117">For an example demonstrating how to use security demands, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Add(string connectionString, string restrictions, valuetype System.Data.KeyRestrictionBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Add (connectionString As String, restrictions As String, behavior As KeyRestrictionBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Add(System::String ^ connectionString, System::String ^ restrictions, System::Data::KeyRestrictionBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="restrictions" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.KeyRestrictionBehavior" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="a9b5e-118">接続文字列。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-118">The connection string.</span></span></param>
        <param name="restrictions"><span data-ttu-id="a9b5e-119">キーの制限。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-119">The key restrictions.</span></span></param>
        <param name="behavior"><span data-ttu-id="a9b5e-120"><see cref="T:System.Data.KeyRestrictionBehavior" /> 列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-120">One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> enumerations.</span></span></param>
        <summary><span data-ttu-id="a9b5e-121">新しい接続文字列および予約キーワードのセットを <see cref="T:System.Data.SqlClient.SqlClientPermission" /> オブジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-121">Adds a new connection string and a set of restricted keywords to the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9b5e-122">このメソッドを使用すると、特定のアクセス許可オブジェクトで許可される接続文字列を構成できます。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-122">Use this method to configure which connection strings are allowed by a particular permission object.</span></span> <span data-ttu-id="a9b5e-123">たとえば、のみの特定の接続文字列およびそれ以外のものを許可する場合は、次のコード フラグメントを使用します。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-123">For example, use the following code fragment if you want to only allow a specific connection string and nothing else:</span></span>  
  
 `permission.Add("server=MyServer; database=MyDatabase; Integrated Security=true", "", KeyRestrictionBehavior.AllowOnly)`  
  
 <span data-ttu-id="a9b5e-124">次の例を使用する任意のデータベースがサーバー上でのみ myserver、任意のユーザー名とパスワードの組み合わせとその他の接続文字列キーワードが含まれていない接続文字列を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-124">The following example allows connection strings that use any database, but only on the server named MyServer, with any user and password combination and containing no other connection string keywords:</span></span>  
  
 `permission.Add("server=MyServer;", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`  
  
 <span data-ttu-id="a9b5e-125">次の例では、上記と同じシナリオを使用して、ミラーリング用に構成サーバーに接続するときに使用できるフェールオーバー パートナーでは。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-125">The following example uses the same scenario as above but allows for a failover partner that can be used when connecting to servers configured for mirroring:</span></span>  
  
 `permission.Add("server=MyServer; failover partner=MyMirrorServer", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`  
  
> [!NOTE]
>  <span data-ttu-id="a9b5e-126">ADO.NET のコード アクセス セキュリティのアクセス許可を使用している場合、適切なパターンは、最も制限の厳しいケース (権限なし) から開始し、コードが実行する必要がある特定のタスクに必要な特定のアクセス許可を追加します。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-126">When using code access security permissions for ADO.NET, the correct pattern is to start with the most restrictive case (no permissions at all) and then add the specific permissions that are needed for the particular task that the code needs to perform.</span></span> <span data-ttu-id="a9b5e-127">同じ接続文字列を表現するさまざまな方法があるために、すべての権限と、特定の権限を拒否しよう、逆のパターンは、セキュリティで保護されたではありません。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-127">The opposite pattern, starting with all permissions and then trying to deny a specific permission, is not secure, because there are many ways of expressing the same connection string.</span></span> <span data-ttu-id="a9b5e-128">たとえば、すべての権限を与えた後で接続文字列 "server=someserver" の使用を拒否しても、"server=someserver.mycompany.com" という接続文字列は使用可能です。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-128">For example, if you start with all permissions and then attempt to deny the use of the connection string "server=someserver", the string "server=someserver.mycompany.com" would still be allowed.</span></span> <span data-ttu-id="a9b5e-129">常に権限をまったく与えない状態から開始することで、権限セットのセキュリティ ホールを減らすことができます。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-129">By always starting by granting no permissions at all, you reduce the chances that there are holes in the permission set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a9b5e-130"><see cref="T:System.Data.SqlClient.SqlClientPermission" /> を <see cref="T:System.Security.IPermission" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-130">Returns the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> as an <see cref="T:System.Security.IPermission" />.</span></span></summary>
        <returns><span data-ttu-id="a9b5e-131">現在のアクセス許可オブジェクトのコピー。</span><span class="sxs-lookup"><span data-stu-id="a9b5e-131">A copy of the current permission object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>