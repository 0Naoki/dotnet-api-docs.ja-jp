<Type Name="SqlRowUpdatedEventHandler" FullName="System.Data.SqlClient.SqlRowUpdatedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d24fdb86216ee8b3f34c6348d964cac2360468f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36679240" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void SqlRowUpdatedEventHandler(object sender, SqlRowUpdatedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlRowUpdatedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlRowUpdatedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub SqlRowUpdatedEventHandler(sender As Object, e As SqlRowUpdatedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void SqlRowUpdatedEventHandler(System::Object ^ sender, SqlRowUpdatedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type SqlRowUpdatedEventHandler = delegate of obj * SqlRowUpdatedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Data.SqlClient.SqlRowUpdatedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="2a66c-101">イベントのソース。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a66c-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="2a66c-102">イベント データを格納している <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a66c-102">The <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="2a66c-103">
        <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" /> の <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> イベントを処理するメソッドを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a66c-103">Represents the method that will handle the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" /> event of a <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a66c-104">ハンドラーが、任意の処理を実行する必要はありませんし、コードが例外を生成するか、呼び出し元のメソッドに反映されるまでの例外の許可を避ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="2a66c-104">The handler is not required to perform any action, and your code should avoid generating exceptions or allowing exceptions to propagate to the calling method.</span></span> <span data-ttu-id="2a66c-105">呼び出し元に到達する例外は無視されます。</span><span class="sxs-lookup"><span data-stu-id="2a66c-105">Any exceptions that do reach the caller are ignored.</span></span>  
  
 <span data-ttu-id="2a66c-106"><xref:System.Data.SqlClient.SqlRowUpdatedEventArgs> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="2a66c-106">When you create a <xref:System.Data.SqlClient.SqlRowUpdatedEventArgs> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="2a66c-107">イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。</span><span class="sxs-lookup"><span data-stu-id="2a66c-107">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="2a66c-108">デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2a66c-108">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="2a66c-109">イベント ハンドラー デリゲートの詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="2a66c-109">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>