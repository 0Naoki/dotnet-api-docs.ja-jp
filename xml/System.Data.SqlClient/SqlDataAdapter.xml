<Type Name="SqlDataAdapter" FullName="System.Data.SqlClient.SqlDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1726d52926b1d27b1e8f07b0470e982a2eb73063" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36680160" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <TypeSignature Language="F#" Value="type SqlDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface IDataAdapter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.SqlDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="44241-101">
        <see cref="T:System.Data.DataSet" /> へのデータの格納および SQL Server データベースの更新に使用される、一連のデータ コマンドおよびデータベース接続を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="44241-101">Represents a set of data commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update a SQL Server database.</span>
      </span>
      <span data-ttu-id="44241-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="44241-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-103"><xref:System.Data.SqlClient.SqlDataAdapter>、間の仲介役として機能する<xref:System.Data.DataSet>と SQL Server を取得して、データを保存します。</span><span class="sxs-lookup"><span data-stu-id="44241-103">The <xref:System.Data.SqlClient.SqlDataAdapter>, serves as a bridge between a <xref:System.Data.DataSet> and SQL Server for retrieving and saving data.</span></span> <span data-ttu-id="44241-104"><xref:System.Data.SqlClient.SqlDataAdapter>マップすることによってこのブリッジは、 <xref:System.Data.Common.DbDataAdapter.Fill%2A>、内のデータを変更する、<xref:System.Data.DataSet>データ ソース内のデータを一致するようと<xref:System.Data.Common.DbDataAdapter.Update%2A>、データに一致するデータ ソースのデータを変更する、<xref:System.Data.DataSet>を使用して、データ ソースに対して適切な TRANSACT-SQL ステートメント。</span><span class="sxs-lookup"><span data-stu-id="44241-104">The <xref:System.Data.SqlClient.SqlDataAdapter> provides this bridge by mapping <xref:System.Data.Common.DbDataAdapter.Fill%2A>, which changes the data in the <xref:System.Data.DataSet> to match the data in the data source, and <xref:System.Data.Common.DbDataAdapter.Update%2A>, which changes the data in the data source to match the data in the <xref:System.Data.DataSet>, using the appropriate Transact-SQL statements against the data source.</span></span> <span data-ttu-id="44241-105">更新プログラムは、行ごとに実行されます。</span><span class="sxs-lookup"><span data-stu-id="44241-105">The update is performed on a by-row basis.</span></span> <span data-ttu-id="44241-106">すべての挿入、変更、および削除された行に対して、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドで行われた変更の種類が決まります (`Insert`、 `Update`、または`Delete`)。</span><span class="sxs-lookup"><span data-stu-id="44241-106">For every inserted, modified, and deleted row, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method determines the type of change that has been performed on it (`Insert`, `Update`, or `Delete`).</span></span> <span data-ttu-id="44241-107">変更の種類に応じて、 `Insert`、 `Update`、または`Delete`コマンド テンプレートが実行されて、データ ソースに変更された行を伝達します。</span><span class="sxs-lookup"><span data-stu-id="44241-107">Depending on the type of change, the `Insert`, `Update`, or `Delete` command template executes to propagate the modified row to the data source.</span></span> <span data-ttu-id="44241-108">ときに、<xref:System.Data.SqlClient.SqlDataAdapter>塗りつぶします、 <xref:System.Data.DataSet>、まだ存在しない場合は、必要なテーブルと、返されるデータの列を作成します。</span><span class="sxs-lookup"><span data-stu-id="44241-108">When the <xref:System.Data.SqlClient.SqlDataAdapter> fills a <xref:System.Data.DataSet>, it creates the necessary tables and columns for the returned data if they do not already exist.</span></span> <span data-ttu-id="44241-109">ただし、主キーの情報は含まれません、暗黙的に作成されたスキーマにしない限り、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>プロパティに設定されている<xref:System.Data.MissingSchemaAction.AddWithKey>です。</span><span class="sxs-lookup"><span data-stu-id="44241-109">However, primary key information is not included in the implicitly created schema unless the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to <xref:System.Data.MissingSchemaAction.AddWithKey>.</span></span> <span data-ttu-id="44241-110">必要があります、<xref:System.Data.SqlClient.SqlDataAdapter>のスキーマを作成、<xref:System.Data.DataSet>を使用してデータを入力する前に、主キーの情報を含む`FillSchema`です。</span><span class="sxs-lookup"><span data-stu-id="44241-110">You may also have the <xref:System.Data.SqlClient.SqlDataAdapter> create the schema of the <xref:System.Data.DataSet>, including primary key information, before filling it with data using `FillSchema`.</span></span> <span data-ttu-id="44241-111">詳細については、次を参照してください。[データセットへの既存の制約を追加する](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)です。</span><span class="sxs-lookup"><span data-stu-id="44241-111">For more information, see [Adding Existing Constraints to a DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span></span>  
  
 <span data-ttu-id="44241-112"><xref:System.Data.SqlClient.SqlDataAdapter> 組み合わせて使用<xref:System.Data.SqlClient.SqlConnection>と<xref:System.Data.SqlClient.SqlCommand>SQL Server データベースに接続するときにパフォーマンスを向上させる。</span><span class="sxs-lookup"><span data-stu-id="44241-112"><xref:System.Data.SqlClient.SqlDataAdapter> is used in conjunction with <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to increase performance when connecting to a SQL Server database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="44241-113">SQL Server のストアド プロシージャで、`DataAdapter` を使用してデータを編集または削除する場合、ストアド プロシージャの定義に SET NOCOUNT ON は使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="44241-113">If you are using SQL Server stored procedures to edit or delete data using a `DataAdapter`, make sure that you do not use SET NOCOUNT ON in the stored procedure definition.</span></span> <span data-ttu-id="44241-114">処理された行数がゼロとして返され、`DataAdapter` によって同時実行の競合として解釈されてしまいます。</span><span class="sxs-lookup"><span data-stu-id="44241-114">This causes the rows affected count returned to be zero, which the `DataAdapter` interprets as a concurrency conflict.</span></span> <span data-ttu-id="44241-115">この場合、<xref:System.Data.DBConcurrencyException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="44241-115">In this event, a <xref:System.Data.DBConcurrencyException> will be thrown.</span></span>  
  
 <span data-ttu-id="44241-116"><xref:System.Data.SqlClient.SqlDataAdapter>も含まれています、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>、 <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>、 <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>、 <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>、および<xref:System.Data.Common.DataAdapter.TableMappings%2A>プロパティが、読み込みとデータの更新を容易になります。</span><span class="sxs-lookup"><span data-stu-id="44241-116">The <xref:System.Data.SqlClient.SqlDataAdapter> also includes the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Common.DataAdapter.TableMappings%2A> properties to facilitate the loading and updating of data.</span></span>  
  
 <span data-ttu-id="44241-117">インスタンス<xref:System.Data.SqlClient.SqlDataAdapter>が作成、読み取り/書き込みプロパティの初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="44241-117">When an instance of <xref:System.Data.SqlClient.SqlDataAdapter> is created, the read/write properties are set to initial values.</span></span> <span data-ttu-id="44241-118">これらの値の一覧は、次を参照してください。、<xref:System.Data.SqlClient.SqlDataAdapter>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="44241-118">For a list of these values, see the <xref:System.Data.SqlClient.SqlDataAdapter> constructor.</span></span>  
  
 <span data-ttu-id="44241-119"><xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>、 <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>、および<xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>パラメーターのメカニズムを通じて自動的に変更された各行から個々 の値で埋められたテンプレートはジェネリックです。</span><span class="sxs-lookup"><span data-stu-id="44241-119">The <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> are generic templates that are automatically filled with individual values from every modified row through the parameters mechanism.</span></span>  
  
 <span data-ttu-id="44241-120">すべての列のデータ ソースに反映する<xref:System.Data.Common.DbDataAdapter.Update%2A>にパラメーターを追加する必要があります、 `InsertCommand`、 `UpdateCommand`、または`DeleteCommand`です。</span><span class="sxs-lookup"><span data-stu-id="44241-120">For every column that you propagate to the data source on <xref:System.Data.Common.DbDataAdapter.Update%2A>, a parameter should be added to the `InsertCommand`, `UpdateCommand`, or `DeleteCommand`.</span></span> <span data-ttu-id="44241-121"><xref:System.Data.Common.DbParameter.SourceColumn%2A>のプロパティ、<xref:System.Data.Common.DbParameter>オブジェクトは、列の名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="44241-121">The <xref:System.Data.Common.DbParameter.SourceColumn%2A> property of the <xref:System.Data.Common.DbParameter> object should be set to the name of the column.</span></span> <span data-ttu-id="44241-122">この設定は、パラメーターの値が、手動で設定されていないが、現在処理されている行の特定の列から取得したことを示します。</span><span class="sxs-lookup"><span data-stu-id="44241-122">This setting indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="44241-123"><xref:System.InvalidOperationException>場合に発生するが、<xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドが呼び出され、テーブルがクライアント コンピューターで利用できないユーザー定義の型が含まれています。</span><span class="sxs-lookup"><span data-stu-id="44241-123">An <xref:System.InvalidOperationException> will occur if the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method is called and the table contains a user-defined type that is not available on the client computer.</span></span> <span data-ttu-id="44241-124">詳細については、次を参照してください。[ユーザーの種類の作成と](http://go.microsoft.com/fwlink/?LinkId=139492)SQL Server オンライン ブック。</span><span class="sxs-lookup"><span data-stu-id="44241-124">For more information, see [Creating and Using User-Defined Types](http://go.microsoft.com/fwlink/?LinkId=139492) in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44241-125">次の例で、 <xref:System.Data.SqlClient.SqlCommand>、 <xref:System.Data.SqlClient.SqlDataAdapter>、および<xref:System.Data.SqlClient.SqlConnection>をデータベースからレコードを選択し、設定、<xref:System.Data.DataSet>選択した行にします。</span><span class="sxs-lookup"><span data-stu-id="44241-125">The following example uses the <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, and <xref:System.Data.SqlClient.SqlConnection> to select records from a database and populate a <xref:System.Data.DataSet> with the selected rows.</span></span> <span data-ttu-id="44241-126">塗りつぶされた<xref:System.Data.DataSet>次が返されます。</span><span class="sxs-lookup"><span data-stu-id="44241-126">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="44241-127">これを行うには、メソッドが渡される初期化された<xref:System.Data.DataSet>、接続文字列、およびクエリ文字列では、TRANSACT-SQL SELECT ステートメント。</span><span class="sxs-lookup"><span data-stu-id="44241-127">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44241-128">
            <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-128">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44241-129">
            <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-129">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-130">インスタンス<xref:System.Data.SqlClient.SqlDataAdapter>作成されると、次読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="44241-130">When an instance of <xref:System.Data.SqlClient.SqlDataAdapter> is created, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="44241-131">プロパティ</span><span class="sxs-lookup"><span data-stu-id="44241-131">Properties</span></span>|<span data-ttu-id="44241-132">初期値</span><span class="sxs-lookup"><span data-stu-id="44241-132">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="44241-133">これらのプロパティを個別に呼び出してプロパティのいずれかの値を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="44241-133">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44241-134">次の例を作成、<xref:System.Data.SqlClient.SqlDataAdapter>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="44241-134">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (System.Data.SqlClient.SqlCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter(System::Data::SqlClient::SqlCommand ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDataAdapter : System.Data.SqlClient.SqlCommand -&gt; System.Data.SqlClient.SqlDataAdapter" Usage="new System.Data.SqlClient.SqlDataAdapter selectCommand" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand">
          <span data-ttu-id="44241-135">Transact-SQL SELECT ステートメントまたはストアド プロシージャである <see cref="T:System.Data.SqlClient.SqlCommand" />。<see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> の <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> プロパティとして設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-135">A <see cref="T:System.Data.SqlClient.SqlCommand" /> that is a Transact-SQL SELECT statement or stored procedure and is set as the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44241-136">
            <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> プロパティとして <see cref="T:System.Data.SqlClient.SqlCommand" /> を指定して、<see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-136">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class with the specified <see cref="T:System.Data.SqlClient.SqlCommand" /> as the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-137">この実装、<xref:System.Data.SqlClient.SqlDataAdapter>コンス トラクターのセット、<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>プロパティで指定された値を`selectCommand`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="44241-137">This implementation of the <xref:System.Data.SqlClient.SqlDataAdapter> constructor sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property to the value specified in the `selectCommand` parameter.</span></span>  
  
 <span data-ttu-id="44241-138">インスタンス<xref:System.Data.SqlClient.SqlDataAdapter>作成されると、次読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="44241-138">When an instance of <xref:System.Data.SqlClient.SqlDataAdapter> is created, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="44241-139">プロパティ</span><span class="sxs-lookup"><span data-stu-id="44241-139">Properties</span></span>|<span data-ttu-id="44241-140">初期値</span><span class="sxs-lookup"><span data-stu-id="44241-140">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="44241-141">これらのプロパティを個別に呼び出してプロパティのいずれかの値を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="44241-141">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 <span data-ttu-id="44241-142">ときに<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>(またはその他のプロパティ コマンドのいずれか) が割り当てられている、以前に作成した<xref:System.Data.SqlClient.SqlCommand>、<xref:System.Data.SqlClient.SqlCommand>は複製されません。</span><span class="sxs-lookup"><span data-stu-id="44241-142">When <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> (or any of the other command properties) is assigned to a previously created <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlCommand> is not cloned.</span></span> <span data-ttu-id="44241-143"><xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>以前に作成の参照を保持<xref:System.Data.SqlClient.SqlCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44241-143">The <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44241-144">次の例を作成、<xref:System.Data.SqlClient.SqlDataAdapter>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="44241-144">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (string selectCommandText, System.Data.SqlClient.SqlConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.SqlClient.SqlConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter(System::String ^ selectCommandText, System::Data::SqlClient::SqlConnection ^ selectConnection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDataAdapter : string * System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlDataAdapter" Usage="new System.Data.SqlClient.SqlDataAdapter (selectCommandText, selectConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">
          <span data-ttu-id="44241-145">Transact-SQL SELECT ステートメントまたはストアド プロシージャである <see cref="T:System.String" />。<see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> の <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> プロパティによって使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-145">A <see cref="T:System.String" /> that is a Transact-SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</span>
          </span>
        </param>
        <param name="selectConnection">
          <span data-ttu-id="44241-146">接続を表す <see cref="T:System.Data.SqlClient.SqlConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-146">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection.</span>
          </span>
          <span data-ttu-id="44241-147">接続文字列が <see langword="Integrated Security = true" /> を使用しない場合は、<see cref="T:System.Data.SqlClient.SqlCredential" /> を使用すると、ユーザー ID とパスワードを接続文字列内のテキストとして指定する場合よりも安全に、ユーザー ID とパスワードを渡すことができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-147">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44241-148">
            <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> オブジェクトと <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> オブジェクトを指定して、<see cref="T:System.Data.SqlClient.SqlConnection" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-148">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class with a <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> and a <see cref="T:System.Data.SqlClient.SqlConnection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-149">この実装、<xref:System.Data.SqlClient.SqlDataAdapter>開閉、<xref:System.Data.SqlClient.SqlConnection>がまだ開いていない場合。</span><span class="sxs-lookup"><span data-stu-id="44241-149">This implementation of the <xref:System.Data.SqlClient.SqlDataAdapter> opens and closes a <xref:System.Data.SqlClient.SqlConnection> if it is not already open.</span></span> <span data-ttu-id="44241-150">これを呼び出す必要のあるアプリケーションで利用する、 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 2 つ以上のメソッド<xref:System.Data.SqlClient.SqlDataAdapter>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44241-150">This can be useful in an application that must call the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method for two or more <xref:System.Data.SqlClient.SqlDataAdapter> objects.</span></span> <span data-ttu-id="44241-151">場合、<xref:System.Data.SqlClient.SqlConnection>は既に開かれている、明示的に呼び出す必要があります**閉じる**または**Dispose**を閉じます。</span><span class="sxs-lookup"><span data-stu-id="44241-151">If the <xref:System.Data.SqlClient.SqlConnection> is already open, you must explicitly call **Close** or **Dispose** to close it.</span></span>  
  
 <span data-ttu-id="44241-152">インスタンス<xref:System.Data.SqlClient.SqlDataAdapter>作成されると、次読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="44241-152">When an instance of <xref:System.Data.SqlClient.SqlDataAdapter> is created, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="44241-153">プロパティ</span><span class="sxs-lookup"><span data-stu-id="44241-153">Properties</span></span>|<span data-ttu-id="44241-154">初期値</span><span class="sxs-lookup"><span data-stu-id="44241-154">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="44241-155">これらのプロパティをプロパティに別個の呼び出しのいずれかの値を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="44241-155">You can change the value of either of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44241-156">次の例を作成、<xref:System.Data.SqlClient.SqlDataAdapter>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="44241-156">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDataAdapter : string * string -&gt; System.Data.SqlClient.SqlDataAdapter" Usage="new System.Data.SqlClient.SqlDataAdapter (selectCommandText, selectConnectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">
          <span data-ttu-id="44241-157">Transact-SQL SELECT ステートメントまたはストアド プロシージャである <see cref="T:System.String" />。<see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> の <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> プロパティによって使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-157">A <see cref="T:System.String" /> that is a Transact-SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</span>
          </span>
        </param>
        <param name="selectConnectionString">
          <span data-ttu-id="44241-158">接続文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-158">The connection string.</span>
          </span>
          <span data-ttu-id="44241-159">接続文字列が <see langword="Integrated Security = true" /> を使用しない場合は、<see cref="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" /> と <see cref="T:System.Data.SqlClient.SqlCredential" /> を使用すると、ユーザー ID とパスワードを接続文字列内のテキストとして指定する場合よりも安全に、ユーザー ID とパスワードを渡すことができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-159">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" /> and <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44241-160">
            <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> と接続文字列を指定して、<see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-160">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class with a <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> and a connection string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-161">このオーバー ロード、<xref:System.Data.SqlClient.SqlDataAdapter>コンス トラクターを使用して、`selectCommandText`を設定するパラメーター、<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="44241-161">This overload of the <xref:System.Data.SqlClient.SqlDataAdapter> constructor uses the `selectCommandText` parameter to set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="44241-162"><xref:System.Data.SqlClient.SqlDataAdapter>が作成されで作成された接続を維持、`selectConnectionString`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="44241-162">The <xref:System.Data.SqlClient.SqlDataAdapter> will create and maintain the connection created with the `selectConnectionString` parameter.</span></span>  
  
 <span data-ttu-id="44241-163">インスタンス<xref:System.Data.SqlClient.SqlDataAdapter>作成されると、次読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="44241-163">When an instance of <xref:System.Data.SqlClient.SqlDataAdapter> is created, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="44241-164">プロパティ</span><span class="sxs-lookup"><span data-stu-id="44241-164">Properties</span></span>|<span data-ttu-id="44241-165">初期値</span><span class="sxs-lookup"><span data-stu-id="44241-165">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="44241-166">これらのプロパティを個別に呼び出してプロパティのいずれかの値を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="44241-166">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44241-167">次の例を作成、<xref:System.Data.SqlClient.SqlDataAdapter>し、一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="44241-167">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected override int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="sqlDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected override void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearBatch();" />
      <MemberSignature Language="F#" Value="override this.ClearBatch : unit -&gt; unit" Usage="sqlDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="sqlDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="sqlDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ DeleteCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.SqlClient.SqlCommand with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44241-168">データ セットからレコードを削除するための Transact-SQL ステートメントまたはストアド プロシージャを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-168">Gets or sets a Transact-SQL statement or stored procedure to delete records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44241-169">
            <see cref="T:System.Data.SqlClient.SqlCommand" /> 処理中に、<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 内の削除行に対応するデータベース内のレコードを削除するための <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-169">A <see cref="T:System.Data.SqlClient.SqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the database that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-170">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>、<xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>を設定する場合は、自動的に生成できます、<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>プロパティと使用、<xref:System.Data.SqlClient.SqlCommandBuilder>です。</span><span class="sxs-lookup"><span data-stu-id="44241-170">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> can be generated automatically if you set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span> <span data-ttu-id="44241-171">次に、追加のコマンドを設定しないことがによって生成される、<xref:System.Data.SqlClient.SqlCommandBuilder>です。</span><span class="sxs-lookup"><span data-stu-id="44241-171">Then, any additional commands that you do not set are generated by the <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span> <span data-ttu-id="44241-172">この生成ロジックで内に存在するキー列について、<xref:System.Data.DataSet>です。</span><span class="sxs-lookup"><span data-stu-id="44241-172">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="44241-173">詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)です。</span><span class="sxs-lookup"><span data-stu-id="44241-173">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="44241-174">ときに<xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.SqlClient.SqlCommand>、<xref:System.Data.SqlClient.SqlCommand>は複製されません。</span><span class="sxs-lookup"><span data-stu-id="44241-174">When <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlCommand> is not cloned.</span></span> <span data-ttu-id="44241-175"><xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>以前に作成の参照を保持<xref:System.Data.SqlClient.SqlCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44241-175">The <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
 <span data-ttu-id="44241-176">すべての列のデータ ソースに反映する<xref:System.Data.Common.DbDataAdapter.Update%2A>にパラメーターを追加する必要があります、 `InsertCommand`、 `UpdateCommand`、または`DeleteCommand`です。</span><span class="sxs-lookup"><span data-stu-id="44241-176">For every column that you propagate to the data source on <xref:System.Data.Common.DbDataAdapter.Update%2A>, a parameter should be added to the `InsertCommand`, `UpdateCommand`, or `DeleteCommand`.</span></span> <span data-ttu-id="44241-177">`SourceColumn`パラメーターのプロパティは、列の名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="44241-177">The `SourceColumn` property of the parameter should be set to the name of the column.</span></span> <span data-ttu-id="44241-178">これは、パラメーターの値が、手動で設定されていないが、現在処理されている行の特定の列から取得したことを示します。</span><span class="sxs-lookup"><span data-stu-id="44241-178">This indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44241-179">次の例を作成、<xref:System.Data.SqlClient.SqlDataAdapter>設定と、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>、 <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>、 <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>、および<xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="44241-179">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="44241-180">既に作成していることを前提としています、<xref:System.Data.SqlClient.SqlConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44241-180">It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.</span></span>  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected override int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="override this.ExecuteBatch : unit -&gt; int" Usage="sqlDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="sqlDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="parameterIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="sqlDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="recordsAffected">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected override void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeBatching();" />
      <MemberSignature Language="F#" Value="override this.InitializeBatching : unit -&gt; unit" Usage="sqlDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ InsertCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.SqlClient.SqlCommand with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44241-181">データ ソースに新しいレコードを挿入するための Transact-SQL ステートメントまたはストアド プロシージャを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-181">Gets or sets a Transact-SQL statement or stored procedure to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44241-182">
            <see cref="T:System.Data.SqlClient.SqlCommand" /> 処理中に、<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 内の新しい行に対応するレコードをデータベースに挿入するための <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-182">A <see cref="T:System.Data.SqlClient.SqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records into the database that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-183">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>、<xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>を設定する場合は、自動的に生成できます、<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>プロパティと使用、<xref:System.Data.SqlClient.SqlCommandBuilder>です。</span><span class="sxs-lookup"><span data-stu-id="44241-183">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> can be generated automatically if you set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span> <span data-ttu-id="44241-184">次に、追加のコマンドを設定しないことがによって生成される、<xref:System.Data.SqlClient.SqlCommandBuilder>です。</span><span class="sxs-lookup"><span data-stu-id="44241-184">Then, any additional commands that you do not set are generated by the <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span> <span data-ttu-id="44241-185">この生成ロジックで内に存在するキー列について、<xref:System.Data.DataSet>です。</span><span class="sxs-lookup"><span data-stu-id="44241-185">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="44241-186">詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)です。</span><span class="sxs-lookup"><span data-stu-id="44241-186">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="44241-187">ときに<xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.SqlClient.SqlCommand>、<xref:System.Data.SqlClient.SqlCommand>は複製されません。</span><span class="sxs-lookup"><span data-stu-id="44241-187">When <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlCommand> is not cloned.</span></span> <span data-ttu-id="44241-188"><xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>以前に作成の参照を保持<xref:System.Data.SqlClient.SqlCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44241-188">The <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
 <span data-ttu-id="44241-189">これらの行を追加できるこのコマンドの実行には、行が返された場合、<xref:System.Data.DataSet>を設定する方法に応じて、 **UpdatedRowSource**のプロパティ、<xref:System.Data.SqlClient.SqlCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44241-189">If execution of this command returns rows, these rows can be added to the <xref:System.Data.DataSet> depending on how you set the **UpdatedRowSource** property of the <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
 <span data-ttu-id="44241-190">すべての列のデータ ソースに反映する<xref:System.Data.Common.DbDataAdapter.Update%2A>にパラメーターを追加する必要があります`InsertCommand`、 `UpdateCommand`、または`DeleteCommand`です。</span><span class="sxs-lookup"><span data-stu-id="44241-190">For every column that you propagate to the data source on <xref:System.Data.Common.DbDataAdapter.Update%2A>, a parameter should be added to `InsertCommand`, `UpdateCommand`, or `DeleteCommand`.</span></span> <span data-ttu-id="44241-191">`SourceColumn`パラメーターのプロパティは、列の名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="44241-191">The `SourceColumn` property of the parameter should be set to the name of the column.</span></span> <span data-ttu-id="44241-192">これは、パラメーターの値が、手動で設定されていないが、現在処理されている行の特定の列から取得したことを示します。</span><span class="sxs-lookup"><span data-stu-id="44241-192">This indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44241-193">次の例を作成、<xref:System.Data.SqlClient.SqlDataAdapter>設定と、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>、 <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>、 <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>、および<xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="44241-193">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="44241-194">既に作成していることを前提としています、<xref:System.Data.SqlClient.SqlConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44241-194">It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.</span></span>  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="sqlDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="sqlDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As SqlRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberSignature Language="F#" Value="member this.RowUpdated : System.Data.SqlClient.SqlRowUpdatedEventHandler " Usage="member this.RowUpdated : System.Data.SqlClient.SqlRowUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44241-195">
            <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 処理中に、データ ソースに対してコマンドが実行された後に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-195">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source.</span>
          </span>
          <span data-ttu-id="44241-196">更新が試行されると、このイベントが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-196">The attempt to update is made, so the event fires.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-197">使用する場合<xref:System.Data.Common.DbDataAdapter.Update%2A>、更新されたデータ行ごとに発生する 2 つのイベントがあります。</span><span class="sxs-lookup"><span data-stu-id="44241-197">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="44241-198">実行の順序は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="44241-198">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="44241-199">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="44241-199">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="44241-200"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="44241-200">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="44241-201">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="44241-201">The command executes.</span></span>  
  
4.  <span data-ttu-id="44241-202">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果に格納、<xref:System.Data.DataRow>です。</span><span class="sxs-lookup"><span data-stu-id="44241-202">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="44241-203">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>です。</span><span class="sxs-lookup"><span data-stu-id="44241-203">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="44241-204"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="44241-204">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="44241-205"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="44241-205"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44241-206">次の例は、両方を使用する方法を示しています、<xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating>と<xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated>イベント。</span><span class="sxs-lookup"><span data-stu-id="44241-206">The following example shows how to use both the <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> and <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> events.</span></span>  
  
 <span data-ttu-id="44241-207"><xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating>イベントは、この出力を返します。</span><span class="sxs-lookup"><span data-stu-id="44241-207">The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> event returns this output:</span></span>  
  
 <span data-ttu-id="44241-208">イベントの引数: (command=System.Data.SqlClient.SqlCommand commandType 2 のステータスを = = 0)</span><span class="sxs-lookup"><span data-stu-id="44241-208">event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)</span></span>  
  
 <span data-ttu-id="44241-209"><xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated>イベントは、この出力を返します。</span><span class="sxs-lookup"><span data-stu-id="44241-209">The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> event returns this output:</span></span>  
  
 <span data-ttu-id="44241-210">イベントの引数: (command=System.Data.SqlClient.SqlCommand commandType 2 recordsAffected を = = 1 row=System.Data.DataRow[37] 状態 = 0)</span><span class="sxs-lookup"><span data-stu-id="44241-210">event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As SqlRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberSignature Language="F#" Value="member this.RowUpdating : System.Data.SqlClient.SqlRowUpdatingEventHandler " Usage="member this.RowUpdating : System.Data.SqlClient.SqlRowUpdatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44241-211">
            <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 処理中に、データ ソースに対してコマンドが実行される前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-211">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source.</span>
          </span>
          <span data-ttu-id="44241-212">更新が試行されると、このイベントが発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-212">The attempt to update is made, so the event fires.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-213">使用する場合<xref:System.Data.Common.DbDataAdapter.Update%2A>、更新されたデータ行ごとに発生する 2 つのイベントがあります。</span><span class="sxs-lookup"><span data-stu-id="44241-213">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="44241-214">実行の順序は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="44241-214">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="44241-215">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="44241-215">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="44241-216"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="44241-216">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="44241-217">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="44241-217">The command executes.</span></span>  
  
4.  <span data-ttu-id="44241-218">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果に格納、<xref:System.Data.DataRow>です。</span><span class="sxs-lookup"><span data-stu-id="44241-218">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="44241-219">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>です。</span><span class="sxs-lookup"><span data-stu-id="44241-219">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="44241-220"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="44241-220">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="44241-221"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="44241-221"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44241-222">次の例は、両方を使用する方法を示しています、<xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating>と<xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated>イベント。</span><span class="sxs-lookup"><span data-stu-id="44241-222">The following example shows how to use both the <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> and <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> events.</span></span>  
  
 <span data-ttu-id="44241-223"><xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating>イベントは、この出力を返します。</span><span class="sxs-lookup"><span data-stu-id="44241-223">The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> event returns this output:</span></span>  
  
 <span data-ttu-id="44241-224">イベントの引数: (command=System.Data.SqlClient.SqlCommand commandType 2 のステータスを = = 0)</span><span class="sxs-lookup"><span data-stu-id="44241-224">event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)</span></span>  
  
 <span data-ttu-id="44241-225"><xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated>イベントは、この出力を返します。</span><span class="sxs-lookup"><span data-stu-id="44241-225">The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> event returns this output:</span></span>  
  
 <span data-ttu-id="44241-226">イベントの引数: (command=System.Data.SqlClient.SqlCommand commandType 2 recordsAffected を = = 1 row=System.Data.DataRow[37] 状態 = 0)</span><span class="sxs-lookup"><span data-stu-id="44241-226">event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ SelectCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.SqlClient.SqlCommand with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44241-227">データ ソース内のレコードを選択するための Transact-SQL ステートメントまたはストアド プロシージャを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-227">Gets or sets a Transact-SQL statement or stored procedure used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44241-228">
            <see cref="T:System.Data.SqlClient.SqlCommand" /> 処理中に、<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> に格納するレコードをデータベースから選択するための <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-228">A <see cref="T:System.Data.SqlClient.SqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> to select records from the database for placement in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-229">ときに<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.SqlClient.SqlCommand>、<xref:System.Data.SqlClient.SqlCommand>は複製されません。</span><span class="sxs-lookup"><span data-stu-id="44241-229">When <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlCommand> is not cloned.</span></span> <span data-ttu-id="44241-230"><xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>以前に作成の参照を保持<xref:System.Data.SqlClient.SqlCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44241-230">The <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
 <span data-ttu-id="44241-231">場合、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> 、どの行を返さないにテーブルが追加されて、<xref:System.Data.DataSet>例外が発生したことはありません。</span><span class="sxs-lookup"><span data-stu-id="44241-231">If the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44241-232">次の例を作成、<xref:System.Data.SqlClient.SqlDataAdapter>設定と、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>、 <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>、 <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>、および<xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="44241-232">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="44241-233">既に作成していることを前提としています、<xref:System.Data.SqlClient.SqlConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44241-233">It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.</span></span>  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44241-234">このメンバーの詳細については、「<see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-234">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44241-235">データ セットで削除される行のデータ ソース内のレコードを削除するために、<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 中で使用される <see cref="T:System.Data.IDbCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-235">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-236">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44241-236">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44241-237">これは、<xref:System.Data.SqlClient.SqlDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44241-237">It can be used only when the <xref:System.Data.SqlClient.SqlDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44241-238">このメンバーの詳細については、「<see cref="P:System.Data.IDbDataAdapter.InsertCommand" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-238">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44241-239">データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-239">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-240">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44241-240">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44241-241">これは、<xref:System.Data.SqlClient.SqlDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44241-241">It can be used only when the <xref:System.Data.SqlClient.SqlDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44241-242">このメンバーの詳細については、「<see cref="P:System.Data.IDbDataAdapter.SelectCommand" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-242">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44241-243">データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-243">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-244">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44241-244">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44241-245">これは、<xref:System.Data.SqlClient.SqlDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44241-245">It can be used only when the <xref:System.Data.SqlClient.SqlDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44241-246">このメンバーの詳細については、「<see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-246">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44241-247">データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-247">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-248">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44241-248">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44241-249">これは、<xref:System.Data.SqlClient.SqlDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44241-249">It can be used only when the <xref:System.Data.SqlClient.SqlDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44241-250">このメンバーの詳細については、「<see cref="M:System.ICloneable.Clone" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-250">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44241-251">現在のインスタンスのコピーである新しいオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-251">A new object that is a copy of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-252">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44241-252">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44241-253">これは、<xref:System.Data.SqlClient.SqlDataAdapter> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44241-253">It can be used only when the <xref:System.Data.SqlClient.SqlDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected override void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TerminateBatching();" />
      <MemberSignature Language="F#" Value="override this.TerminateBatching : unit -&gt; unit" Usage="sqlDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public override int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44241-254">サーバーとの 1 回のラウンドトリップで処理される行数を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-254">Gets or sets the number of rows that are processed in each round-trip to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44241-255">バッチごとに処理される行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-255">The number of rows to process per-batch.</span>
          </span>
          <span data-ttu-id="44241-256">
            <list type="table">
              <listheader>
                <term> 値は</term>
                <description>効果</description>
              </listheader>
              <item>
                <term> 0 </term>
                <description>バッチのサイズに制限はありません.</description>
              </item>
              <item>
                <term> 1 </term>
                <description>バッチ更新を無効にします。</description>
              </item>
              <item>
                <term> &gt;1 </term>
                <description>のバッチを使用する変更が送信される<see cref="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" />時に操作します。</description>
              </item>
            </list>  すべてのコマンドに関連付けられている 1 以外の値には、これを設定するとき、<see cref="T:System.Data.SqlClient.SqlDataAdapter" />を持つ必要は、* * * * UpdatedRowSource プロパティに設定<see langword="None" />または<see langword="OutputParameters" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-256">
              <list type="table">
                <listheader>
                  <term> Value is  </term>
                  <description> Effect  </description>
                </listheader>
                <item>
                  <term> 0  </term>
                  <description> There is no limit on the batch size..  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> Disables batch updating.  </description>
                </item>
                <item>
                  <term> &gt;1  </term>
                  <description> Changes are sent using batches of <see cref="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" /> operations at a time.  </description>
                </item>
              </list>  When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> have to have their **UpdatedRowSource** property set to <see langword="None" /> or <see langword="OutputParameters" />.</span>
          </span>
          <span data-ttu-id="44241-257">それ以外の場合は、例外がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-257">An exception is thrown otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-258">バッチ処理サポートを有効にするかどうか、および、1 回のバッチで実行可能なコマンド数を指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="44241-258">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span>  
  
 <span data-ttu-id="44241-259">使用して、<xref:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize%2A>から変更をデータ ソースを更新するプロパティ、<xref:System.Data.DataSet>です。</span><span class="sxs-lookup"><span data-stu-id="44241-259">Use the <xref:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="44241-260">これにより、サーバーへのラウンドト リップ数を減らすことによってアプリケーションのパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="44241-260">This can increase application performance by reducing the number of round-trips to the server.</span></span>  
  
 <span data-ttu-id="44241-261">サイズの大きいバッチを実行すると、パフォーマンスが低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="44241-261">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="44241-262">そのため、アプリケーションを実装する前に、バッチの最適なサイズ設定をテストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="44241-262">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="44241-263"><xref:System.ArgumentOutOfRangeException>値が数値に設定されている場合にスローされますが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="44241-263">An <xref:System.ArgumentOutOfRangeException> is thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ UpdateCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.SqlClient.SqlCommand with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44241-264">データ ソース内のレコードを更新するための Transact-SQL ステートメントまたはストアド プロシージャを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-264">Gets or sets a Transact-SQL statement or stored procedure used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44241-265">
            <see cref="T:System.Data.SqlClient.SqlCommand" /> 処理中に、<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 内の変更行に対応するデータベース内のレコードを更新するための <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44241-265">A <see cref="T:System.Data.SqlClient.SqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the database that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44241-266">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>、<xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>を設定する場合は、自動的に生成できます、<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>プロパティと使用、<xref:System.Data.SqlClient.SqlCommandBuilder>です。</span><span class="sxs-lookup"><span data-stu-id="44241-266">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> can be generated automatically if you set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span> <span data-ttu-id="44241-267">次に、追加のコマンドを設定しないことがによって生成される、<xref:System.Data.SqlClient.SqlCommandBuilder>です。</span><span class="sxs-lookup"><span data-stu-id="44241-267">Then, any additional commands that you do not set are generated by the <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span> <span data-ttu-id="44241-268">この生成ロジックで内に存在するキー列について、<xref:System.Data.DataSet>です。</span><span class="sxs-lookup"><span data-stu-id="44241-268">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="44241-269">詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)です。</span><span class="sxs-lookup"><span data-stu-id="44241-269">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="44241-270">ときに<xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>が割り当てられている、以前に作成した<xref:System.Data.SqlClient.SqlCommand>、<xref:System.Data.SqlClient.SqlCommand>は複製されません。</span><span class="sxs-lookup"><span data-stu-id="44241-270">When <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlCommand> is not cloned.</span></span> <span data-ttu-id="44241-271"><xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>以前に作成の参照を保持<xref:System.Data.SqlClient.SqlCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44241-271">The <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="44241-272">更新された行がマージされる可能性がこのコマンドの実行には、行が返された場合、<xref:System.Data.DataSet>を設定する方法に応じて、 **UpdatedRowSource**のプロパティ、<xref:System.Data.SqlClient.SqlCommand>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44241-272">If execution of this command returns rows, the updated rows may be merged with the <xref:System.Data.DataSet> depending on how you set the **UpdatedRowSource** property of the <xref:System.Data.SqlClient.SqlCommand> object.</span></span>  
  
 <span data-ttu-id="44241-273">すべての列のデータ ソースに反映する<xref:System.Data.Common.DbDataAdapter.Update%2A>にパラメーターを追加する必要があります`InsertCommand`、 `UpdateCommand`、または`DeleteCommand`です。</span><span class="sxs-lookup"><span data-stu-id="44241-273">For every column that you propagate to the data source on <xref:System.Data.Common.DbDataAdapter.Update%2A>, a parameter should be added to `InsertCommand`, `UpdateCommand`, or `DeleteCommand`.</span></span>  
  
 <span data-ttu-id="44241-274">`SourceColumn`パラメーターのプロパティは、列の名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="44241-274">The `SourceColumn` property of the parameter should be set to the name of the column.</span></span> <span data-ttu-id="44241-275">これは、パラメーターの値のないは手動で設定が、現在処理されている行の特定の列から取得を示します。</span><span class="sxs-lookup"><span data-stu-id="44241-275">This indicates that the value of the parameter is not set manually, but taken from the particular column in the currently processed row.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44241-276">次の例を作成、<xref:System.Data.SqlClient.SqlDataAdapter>設定と、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>、 <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>、<xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>と<xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="44241-276">The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="44241-277">既に作成していることを前提としています、<xref:System.Data.SqlClient.SqlConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44241-277">It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.</span></span>  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>