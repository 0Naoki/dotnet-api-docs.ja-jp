<Type Name="SqlColumnEncryptionKeyStoreProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00c3dc0c0021ea648e6e76a3a56541a3e7aebbff" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36680108" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SqlColumnEncryptionKeyStoreProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionKeyStoreProvider abstract" />
  <TypeSignature Language="F#" Value="type SqlColumnEncryptionKeyStoreProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1c6fd-101">すべてのキー ストア プロバイダーの基底クラス。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c6fd-101">Base class for all key store providers.</span>
      </span>
      <span data-ttu-id="1c6fd-102">カスタム プロバイダーは、このクラスから派生しており、そのメンバー関数をオーバーライドしてから、SqlConnection.RegisterColumnEncryptionKeyStoreProviders() を使用して登録する必要があります。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c6fd-102">A custom provider must derive from this class and override its member functions and then register it using SqlConnection.RegisterColumnEncryptionKeyStoreProviders().</span>
      </span>
      <span data-ttu-id="1c6fd-103">詳細については、「[Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine)」を参照してください。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c6fd-103">For details see, [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlColumnEncryptionKeyStoreProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SqlColumnEncryptionKeyStoreProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c6fd-104">SqlColumnEncryptionKeyStoreProviderClass の新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-104">Initializes a new instance of the SqlColumnEncryptionKeyStoreProviderClass.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberSignature Language="F#" Value="abstract member DecryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, encryptedColumnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="1c6fd-105">マスター キーのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-105">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="1c6fd-106">暗号化アルゴリズム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-106">The encryption algorithm.</span>
          </span>
        </param>
        <param name="encryptedColumnEncryptionKey">
          <span data-ttu-id="1c6fd-107">暗号化された列暗号化キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-107">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c6fd-108">列暗号化キーの指定された暗号化値の暗号化を解除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-108">Decrypts the specified encrypted value of a column encryption key.</span>
          </span>
          <span data-ttu-id="1c6fd-109">暗号化された値は、指定されたキーのパスを持つ列マスター キーと、指定されたアルゴリズムを使用して暗号化する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-109">The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c6fd-110">
            <see cref="T:System.Byte" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-110">Returns <see cref="T:System.Byte" />.</span>
          </span>
          <span data-ttu-id="1c6fd-111">暗号化が解除された列暗号化キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-111">The decrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberSignature Language="F#" Value="abstract member EncryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, columnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="1c6fd-112">マスター キーのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-112">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="1c6fd-113">暗号化アルゴリズム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-113">The encryption algorithm.</span>
          </span>
        </param>
        <param name="columnEncryptionKey">
          <span data-ttu-id="1c6fd-114">暗号化された列暗号化キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-114">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c6fd-115">指定されたキーのパスを持つ列マスター キーと指定されたアルゴリズムを使用して列暗号化キーを暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-115">Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c6fd-116">
            <see cref="T:System.Byte" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-116">Returns <see cref="T:System.Byte" />.</span>
          </span>
          <span data-ttu-id="1c6fd-117">暗号化された列暗号化キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-117">The encrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="F#" Value="abstract member SignColumnMasterKeyMetadata : string * bool -&gt; byte[]&#xA;override this.SignColumnMasterKeyMetadata : string * bool -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="1c6fd-118">列マスター キーのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-118">The column master key path.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="1c6fd-119">列マスター キーでエンクレーブ計算をサポートしていることを示す場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-119">
              <see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c6fd-120">派生クラスで実装されると、<paramref name="masterKeyPath" /> パラメーターで参照される列マスターキーを使用して、列マスター キー メタデータにデジタル署名します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-120">When implemented in a derived class, digitally signs the column master key metadata with the column master key referenced by the <paramref name="masterKeyPath" /> parameter.</span>
          </span>
          <span data-ttu-id="1c6fd-121">署名の生成に使用される入力値は、<paramref name="masterKeyPath" /> および <paramref name="allowEnclaveComputations" /> パラメーターの指定された値にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-121">The input values used to generate the signature should be the specified values of the <paramref name="masterKeyPath" /> and <paramref name="allowEnclaveComputations" /> parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c6fd-122">列マスター キーのメタデータの署名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-122">The signature of the column master key metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c6fd-123">いることを確認する、<xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A>メソッドは、以前の API に依存するアプリケーションを中断されませんが、スロー、<xref:System.NotImplementedException>既定では例外です。</span><span class="sxs-lookup"><span data-stu-id="1c6fd-123">To ensure that the <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> method doesn't break applications that rely on an old API, it throws a <xref:System.NotImplementedException> exception by default.</span></span>  
  
 <span data-ttu-id="1c6fd-124"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A>メソッドが顧客の列マスター_キー (CMK) を生成するクライアント ツールによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="1c6fd-124">The <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> method will be used by client tools that generate Column Master Keys (CMK) for customers.</span></span> <span data-ttu-id="1c6fd-125"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> enclaves を使用する、対応するキー ストア プロバイダーによって実装する必要があります[Always Encrypted](https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine)します。</span><span class="sxs-lookup"><span data-stu-id="1c6fd-125"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> must be implemented by the corresponding key store providers that wish to use enclaves with [Always Encrypted](https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="1c6fd-126">すべての場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-126">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="abstract member VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool&#xA;override this.VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool" Usage="sqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="1c6fd-127">列マスター キーのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-127">The column master key path.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="1c6fd-128">列マスター キーがエンクレーブ計算をサポートするかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-128">Indicates whether the column master key supports enclave computations.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="1c6fd-129">列マスター キーのメタデータの署名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-129">The signature of the column master key metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c6fd-130">派生クラスで実装すると、このメソッドは、指定されたキー パスと指定されたエンクレーブ動作の列マスター キーの場合に、指定された署名が有効であることを検証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-130">When implemented in a derived class, this method is expected to verify the specified signature is valid for the column master key with the specified key path and the specified enclave behavior.</span>
          </span>
          <span data-ttu-id="1c6fd-131">既定の実装では、NotImplementedException をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-131">The default implementation throws NotImplementedException.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c6fd-132">派生クラスで実装されると、指定された署名が有効な場合は true を返し、指定された署名が有効でない場合は false を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-132">When implemented in a derived class, the method is expected to return true if the specified signature is valid, or false if the specified signature is not valid.</span>
          </span>
          <span data-ttu-id="1c6fd-133">既定の実装では、NotImplementedException をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c6fd-133">The default implementation throws NotImplementedException.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>