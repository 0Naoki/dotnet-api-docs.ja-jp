<Type Name="SqlBulkCopy" FullName="System.Data.SqlClient.SqlBulkCopy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4b3b3281fe5c23bc52023405782cd6cb86724418" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72406448" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlBulkCopy : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlBulkCopy extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlBulkCopy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlBulkCopy&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlBulkCopy sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SqlBulkCopy = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b3367-101">別のソースからのデータを SQL Server テーブルに効率的に一括読み込みすることができます。</span><span class="sxs-lookup"><span data-stu-id="b3367-101">Lets you efficiently bulk load a SQL Server table with data from another source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-102">Microsoft SQL Server には、1台のサーバーでもサーバー間でも、あるテーブルから別のテーブルにデータを移動するための**bcp**という一般的なコマンドプロンプトユーティリティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b3367-102">Microsoft SQL Server includes a popular command-prompt utility named **bcp** for moving data from one table to another, whether on a single server or between servers.</span></span> <span data-ttu-id="b3367-103">@No__t-0 クラスを使用すると、同様の機能を提供するマネージコードソリューションを作成できます。</span><span class="sxs-lookup"><span data-stu-id="b3367-103">The <xref:System.Data.SqlClient.SqlBulkCopy> class lets you write managed code solutions that provide similar functionality.</span></span> <span data-ttu-id="b3367-104">SQL Server テーブル (INSERT ステートメントなど) にデータを読み込む方法は他にもありますが、<xref:System.Data.SqlClient.SqlBulkCopy> を使用すると、パフォーマンス上の大きな利点が得られます。</span><span class="sxs-lookup"><span data-stu-id="b3367-104">There are other ways to load data into a SQL Server table (INSERT statements, for example), but <xref:System.Data.SqlClient.SqlBulkCopy> offers a significant performance advantage over them.</span></span>  
  
 <span data-ttu-id="b3367-105"><xref:System.Data.SqlClient.SqlBulkCopy> クラスを使用すると、SQL Server のテーブルにのみデータを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b3367-105">The <xref:System.Data.SqlClient.SqlBulkCopy> class can be used to write data only to SQL Server tables.</span></span> <span data-ttu-id="b3367-106">ただし、データソースは SQL Server に限定されません。任意のデータソースを使用できます。ただし、データを @no__t 0 インスタンスに読み込むことも、@no__t インスタンスを使用して読み取ることもできます。</span><span class="sxs-lookup"><span data-stu-id="b3367-106">However, the data source is not limited to SQL Server; any data source can be used, as long as the data can be loaded to a <xref:System.Data.DataTable> instance or read with a <xref:System.Data.IDataReader> instance.</span></span>  
  
 <span data-ttu-id="b3367-107"><xref:System.Data.SqlClient.SqlBulkCopy> は SQL Server 2008 で追加された日付/時刻型の1つの型である SQL Server 列に <xref:System.Data.SqlTypes.SqlDateTime> 型の @no__t 1 列を一括読み込みする場合に失敗します。</span><span class="sxs-lookup"><span data-stu-id="b3367-107"><xref:System.Data.SqlClient.SqlBulkCopy> will fail when bulk loading a <xref:System.Data.DataTable> column of type <xref:System.Data.SqlTypes.SqlDateTime> into a SQL Server column whose type is one of the date/time types added in SQL Server 2008.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-108">次のコンソール アプリケーションでは、<xref:System.Data.SqlClient.SqlBulkCopy> クラスを使用してデータを読み込む方法について示しています。</span><span class="sxs-lookup"><span data-stu-id="b3367-108">The following console application demonstrates how to load data using the <xref:System.Data.SqlClient.SqlBulkCopy> class.</span></span> <span data-ttu-id="b3367-109">この例では、<xref:System.Data.SqlClient.SqlDataReader> を使用して、SQL Server **AdventureWorks**データベースの**Production**テーブルから、同じデータベース内の同様のテーブルにデータをコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-109">In this example, a <xref:System.Data.SqlClient.SqlDataReader> is used to copy data from the **Production.Product** table in the SQL Server **AdventureWorks** database to a similar table in the same database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-110">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-110">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-111">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-111">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-112">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、Transact-sql の `INSERT … SELECT` ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-112">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks BulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks BulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-113">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-113">Performing Bulk Copy Operations</span></span></related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-114">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-114">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3367-115"><see cref="T:System.Data.SqlClient.SqlBulkCopy" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b3367-115">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-116">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-116">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="b3367-117">既に接続の確立されている <see cref="T:System.Data.SqlClient.SqlConnection" /> のインスタンス。一括コピー操作を実行するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-117">The already open <see cref="T:System.Data.SqlClient.SqlConnection" /> instance that will be used to perform the bulk copy operation.</span></span> <span data-ttu-id="b3367-118">接続文字列で <see langword="Integrated Security = true" /> を使用しない場合、<see cref="T:System.Data.SqlClient.SqlCredential" /> を使用することによって、接続文字列内でユーザー ID とパスワードをテキストとして指定する場合よりも安全にユーザー ID とパスワードを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b3367-118">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span></span></param>
        <summary><span data-ttu-id="b3367-119"><see cref="T:System.Data.SqlClient.SqlConnection" /> の指定されたオープン インスタンスを使用して、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> クラスの新しいインスタンスを初期化します</span><span class="sxs-lookup"><span data-stu-id="b3367-119">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class using the specified open instance of <see cref="T:System.Data.SqlClient.SqlConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-120">@No__t 0 のインスタンスが初期化されると接続は既に開かれているため、@no__t 1 のインスタンスが閉じられた後も接続は開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="b3367-120">Because the connection is already open when the <xref:System.Data.SqlClient.SqlBulkCopy> instance is initialized, the connection remains open after the <xref:System.Data.SqlClient.SqlBulkCopy> instance is closed.</span></span>  
  
 <span data-ttu-id="b3367-121">@No__t-0 引数が null の場合、<xref:System.ArgumentNullException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-121">If the `connection` argument is null, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-122">次のコンソールアプリケーションは、既に開いている接続を使用してデータを一括読み込みする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b3367-122">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="b3367-123">この例では、<xref:System.Data.SqlClient.SqlDataReader> を使用して、SQL Server **AdventureWorks**データベースの**Production**テーブルから、同じデータベース内の同様のテーブルにデータをコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-123">In this example, a <xref:System.Data.SqlClient.SqlDataReader> is used to copy data from the **Production.Product** table in the SQL Server **AdventureWorks** database to a similar table in the same database.</span></span> <span data-ttu-id="b3367-124">この例は、デモンストレーション目的のみで提供されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-124">This example is for demonstration purposes only.</span></span> <span data-ttu-id="b3367-125">実稼働アプリケーションの同じデータベースにあるテーブルから別のテーブルにデータを移動するために `SqlBulkCopy` を使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b3367-125">You would not use `SqlBulkCopy` to move data from one table to another in the same database in a production application.</span></span> <span data-ttu-id="b3367-126">ソースデータが SQL Server に配置されている必要はないことに注意してください。@no__t 0 に読み取ることができる任意のデータソースを使用するか、<xref:System.Data.DataTable> に読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b3367-126">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-127">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-127">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-128">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-128">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-129">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、Transact-sql の `INSERT … SELECT` ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-129">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks BulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks BulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-130">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-130">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-131">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-131">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : string -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="b3367-132">接続を定義する文字列。これによって確立された接続が、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> のインスタンスによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-132">The string defining the connection that will be opened for use by the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span></span> <span data-ttu-id="b3367-133">接続文字列が <see langword="Integrated Security = true" /> を使用しない場合は、<see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> または <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> と <see cref="T:System.Data.SqlClient.SqlCredential" /> を使用すると、ユーザー ID とパスワードを接続文字列内のテキストとして指定する場合よりも安全に、ユーザー ID とパスワードを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b3367-133">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> or <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> and <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span></span></param>
        <summary><span data-ttu-id="b3367-134">指定した <paramref name="connectionString" /> に基づいて、<see cref="T:System.Data.SqlClient.SqlConnection" /> の新しいインスタンスを初期化して開きます。</span><span class="sxs-lookup"><span data-stu-id="b3367-134">Initializes and opens a new instance of <see cref="T:System.Data.SqlClient.SqlConnection" /> based on the supplied <paramref name="connectionString" />.</span></span> <span data-ttu-id="b3367-135">コンストラクターは、<see cref="T:System.Data.SqlClient.SqlConnection" /> を使用して、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b3367-135">The constructor uses the <see cref="T:System.Data.SqlClient.SqlConnection" /> to initialize a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-136">この接続は、一括コピー操作の終了時に自動的に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-136">The connection is automatically closed at the end of the bulk copy operation.</span></span>  
  
 <span data-ttu-id="b3367-137">@No__t-0 が null の場合、<xref:System.ArgumentNullException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-137">If `connectionString` is null, an <xref:System.ArgumentNullException> is thrown.</span></span> <span data-ttu-id="b3367-138">@No__t-0 が空の文字列の場合は、<xref:System.ArgumentException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-138">If `connectionString` is an empty string, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-139">次のコンソールアプリケーションは、文字列として指定された接続を使用してデータを一括読み込みする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b3367-139">The following console application demonstrates how to bulk load data by using a connection specified as a string.</span></span> <span data-ttu-id="b3367-140">@No__t 0 のインスタンスが閉じられると、接続は自動的に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-140">The connection is automatically closed when the <xref:System.Data.SqlClient.SqlBulkCopy> instance is closed.</span></span>  
  
 <span data-ttu-id="b3367-141">この例では、最初にソースデータが SQL Server テーブルから @no__t 0 インスタンスに読み取られます。</span><span class="sxs-lookup"><span data-stu-id="b3367-141">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="b3367-142">ソースデータが SQL Server に配置されている必要はありません。@no__t 0 に読み取ることができる任意のデータソースを使用するか、<xref:System.Data.DataTable> に読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b3367-142">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-143">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-143">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-144">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-144">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-145">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、Transact-sql の `INSERT … SELECT` ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-145">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-146">SQL Server でのバルク コピー操作</span><span class="sxs-lookup"><span data-stu-id="b3367-146">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-147">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-147">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (string connectionString, System.Data.SqlClient.SqlBulkCopyOptions copyOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, valuetype System.Data.SqlClient.SqlBulkCopyOptions copyOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, copyOptions As SqlBulkCopyOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::String ^ connectionString, System::Data::SqlClient::SqlBulkCopyOptions copyOptions);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : string * System.Data.SqlClient.SqlBulkCopyOptions -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy (connectionString, copyOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="copyOptions" Type="System.Data.SqlClient.SqlBulkCopyOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="b3367-148">接続を定義する文字列。これによって確立された接続が、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> のインスタンスによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-148">The string defining the connection that will be opened for use by the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span></span> <span data-ttu-id="b3367-149">接続文字列で <see langword="Integrated Security = true" /> を使用しない場合、<see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> または <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> と <see cref="T:System.Data.SqlClient.SqlCredential" /> を使用することによって、接続文字列内でユーザー ID とパスワードをテキストとして指定する場合よりも安全にユーザー ID とパスワードを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b3367-149">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> or <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> and <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span></span></param>
        <param name="copyOptions"><span data-ttu-id="b3367-150">コピー先のテーブルにコピーするデータ ソース行を決定する、<see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> 列挙型の値の組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="b3367-150">A combination of values from the <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> enumeration that determines which data source rows are copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="b3367-151">指定された <paramref name="connectionString" /> に基づいて、<see cref="T:System.Data.SqlClient.SqlConnection" /> の新しいインスタンスを初期化し、接続を確立します。</span><span class="sxs-lookup"><span data-stu-id="b3367-151">Initializes and opens a new instance of <see cref="T:System.Data.SqlClient.SqlConnection" /> based on the supplied <paramref name="connectionString" />.</span></span> <span data-ttu-id="b3367-152">このコンストラクターは、<see cref="T:System.Data.SqlClient.SqlConnection" /> を使用して、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b3367-152">The constructor uses that <see cref="T:System.Data.SqlClient.SqlConnection" /> to initialize a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span></span> <span data-ttu-id="b3367-153"><see cref="T:System.Data.SqlClient.SqlConnection" /> インスタンスは、<paramref name="copyOptions" /> パラメーターで指定したオプションに従って動作します。</span><span class="sxs-lookup"><span data-stu-id="b3367-153">The <see cref="T:System.Data.SqlClient.SqlConnection" /> instance behaves according to options supplied in the <paramref name="copyOptions" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-154">すべての一括コピーオプションの詳細については、@no__t 0 のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-154">You can obtain detailed information about all the bulk copy options in the <xref:System.Data.SqlClient.SqlBulkCopyOptions> topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-155">次のコンソールアプリケーションは、文字列として指定された接続を使用して一括読み込みを実行する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b3367-155">The following console application demonstrates how to perform a bulk load by using a connection specified as a string.</span></span> <span data-ttu-id="b3367-156">変換先テーブルを読み込むときに、ソーステーブルの id 列の値を使用するようにオプションが設定されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-156">An option is set to use the value in the identity column of the source table when you load the destination table.</span></span> <span data-ttu-id="b3367-157">この例では、最初にソースデータが SQL Server テーブルから @no__t 0 インスタンスに読み取られます。</span><span class="sxs-lookup"><span data-stu-id="b3367-157">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="b3367-158">ソーステーブルとターゲットテーブルにはそれぞれ、Id 列が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b3367-158">The source table and destination table each include an Identity column.</span></span> <span data-ttu-id="b3367-159">既定では、追加された行ごとに、 **id**列の新しい値がコピー先テーブルに生成されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-159">By default, a new value for the **Identity** column is generated in the destination table for each row added.</span></span> <span data-ttu-id="b3367-160">この例では、接続を開いたときにオプションを設定して、一括読み込みプロセスがソーステーブルからの**id**値を強制的に使用するようにします。</span><span class="sxs-lookup"><span data-stu-id="b3367-160">In this example, an option is set when the connection is opened that forces the bulk load process to use the **Identity** values from the source table instead.</span></span> <span data-ttu-id="b3367-161">オプションが一括読み込みの動作方法をどのように変更するかを確認するには、dbo でサンプルを実行し**ます。BulkCopyDemoMatchingColumns**テーブルが空です。</span><span class="sxs-lookup"><span data-stu-id="b3367-161">To see how the option changes the way the bulk load works, run the sample with the **dbo.BulkCopyDemoMatchingColumns** table empty.</span></span> <span data-ttu-id="b3367-162">ソースからすべての行が読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="b3367-162">All rows load from the source.</span></span> <span data-ttu-id="b3367-163">次に、テーブルを空にせずに、サンプルを再度実行します。</span><span class="sxs-lookup"><span data-stu-id="b3367-163">Then run the sample again without emptying the table.</span></span> <span data-ttu-id="b3367-164">例外がスローされ、主キー制約違反が原因で行が追加されていないことを通知するメッセージが、コードによってコンソールに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b3367-164">An exception is thrown and the code writes a message to the console notifying you that rows weren't added because of primary key constraint violations.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-165">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-165">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-166">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-166">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-167">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、Transact-sql の `INSERT … SELECT` ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-167">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.KeepIdentity#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.KeepIdentity/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.KeepIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.KeepIdentity/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-168">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-168">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-169">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-169">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlBulkCopyOptions copyOptions, System.Data.SqlClient.SqlTransaction externalTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlConnection connection, valuetype System.Data.SqlClient.SqlBulkCopyOptions copyOptions, class System.Data.SqlClient.SqlTransaction externalTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As SqlConnection, copyOptions As SqlBulkCopyOptions, externalTransaction As SqlTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlBulkCopyOptions copyOptions, System::Data::SqlClient::SqlTransaction ^ externalTransaction);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlBulkCopyOptions * System.Data.SqlClient.SqlTransaction -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy (connection, copyOptions, externalTransaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="copyOptions" Type="System.Data.SqlClient.SqlBulkCopyOptions" />
        <Parameter Name="externalTransaction" Type="System.Data.SqlClient.SqlTransaction" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="b3367-170">既に接続の確立されている <see cref="T:System.Data.SqlClient.SqlConnection" /> のインスタンス。一括コピーを実行するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-170">The already open <see cref="T:System.Data.SqlClient.SqlConnection" /> instance that will be used to perform the bulk copy.</span></span> <span data-ttu-id="b3367-171">接続文字列で <see langword="Integrated Security = true" />を使用しない場合、 <see cref="T:System.Data.SqlClient.SqlCredential" /> を使用することによって、接続文字列内でユーザー ID とパスワードをテキストとして指定する場合よりも安全にユーザー ID とパスワードを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b3367-171">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span></span></param>
        <param name="copyOptions"><span data-ttu-id="b3367-172">コピー先のテーブルにコピーするデータ ソース行を決定する、<see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> 列挙型の値の組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="b3367-172">A combination of values from the <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> enumeration that determines which data source rows are copied to the destination table.</span></span></param>
        <param name="externalTransaction"><span data-ttu-id="b3367-173">一括コピーを実行する既存の <see cref="T:System.Data.SqlClient.SqlTransaction" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b3367-173">An existing <see cref="T:System.Data.SqlClient.SqlTransaction" /> instance under which the bulk copy will occur.</span></span></param>
        <summary><span data-ttu-id="b3367-174">既に接続の確立されている <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> のインスタンスを使用し、<see cref="T:System.Data.SqlClient.SqlConnection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b3367-174">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class using the supplied existing open instance of <see cref="T:System.Data.SqlClient.SqlConnection" />.</span></span> <span data-ttu-id="b3367-175"><see cref="T:System.Data.SqlClient.SqlBulkCopy" /> のインスタンスは、<paramref name="copyOptions" /> パラメーターに指定されたオプションに従って動作します。</span><span class="sxs-lookup"><span data-stu-id="b3367-175">The <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance behaves according to options supplied in the <paramref name="copyOptions" /> parameter.</span></span> <span data-ttu-id="b3367-176">null 以外の <see cref="T:System.Data.SqlClient.SqlTransaction" /> が指定された場合、コピー操作はトランザクション内で実行されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-176">If a non-null <see cref="T:System.Data.SqlClient.SqlTransaction" /> is supplied, the copy operations will be performed within that transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-177">オプションに @no__t 0 が含まれ、`externalTransaction` 引数が null でない場合は、 **InvalidArgumentException**がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-177">If options include `UseInternalTransaction` and the `externalTransaction` argument is not null, an **InvalidArgumentException** is thrown.</span></span>  
  
 <span data-ttu-id="b3367-178">トランザクションで `SqlBulkCopy` を使用する方法を示す例については、「[トランザクションと一括コピーの操作](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-178">For examples demonstrating how to use `SqlBulkCopy` in a transaction, see [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-179">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-179">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-180">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-180">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BatchSize">
      <MemberSignature Language="C#" Value="public int BatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BatchSize : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.BatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3367-181">バッチごとに処理される行数。</span><span class="sxs-lookup"><span data-stu-id="b3367-181">Number of rows in each batch.</span></span> <span data-ttu-id="b3367-182">各バッチ処理の最後に、そこで処理された行がサーバーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-182">At the end of each batch, the rows in the batch are sent to the server.</span></span></summary>
        <value><span data-ttu-id="b3367-183"><see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /> プロパティの整数値。値が設定されていない場合は 0。</span><span class="sxs-lookup"><span data-stu-id="b3367-183">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /> property, or zero if no value has been set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-184">バッチは、@no__t 0 行が処理された場合、または出力先のデータソースに送信する行がなくなった場合に完了します。</span><span class="sxs-lookup"><span data-stu-id="b3367-184">A batch is complete when <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> rows have been processed or there are no more rows to send to the destination data source.</span></span>  
  
 <span data-ttu-id="b3367-185">ゼロ (既定値) は、各 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 操作が1つのバッチであることを示します。</span><span class="sxs-lookup"><span data-stu-id="b3367-185">Zero (the default) indicates that each <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is a single batch.</span></span>  
  
 <span data-ttu-id="b3367-186">@No__t-1 オプションを有効にせずに @no__t 0 のインスタンスが宣言されている場合、行は一度に1行 @no__t サーバーに送信されますが、トランザクション関連のアクションは実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-186">If the <xref:System.Data.SqlClient.SqlBulkCopy> instance has been declared without the <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> option in effect, rows are sent to the server <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> rows at a time, but no transaction-related action is taken.</span></span> <span data-ttu-id="b3367-187">@No__t-0 が有効になっている場合は、各行のバッチが個別のトランザクションとして挿入されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-187">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is in effect, each batch of rows is inserted as a separate transaction.</span></span>  
  
 <span data-ttu-id="b3367-188">@No__t-0 プロパティはいつでも設定できます。</span><span class="sxs-lookup"><span data-stu-id="b3367-188">The <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> property can be set at any time.</span></span> <span data-ttu-id="b3367-189">一括コピーが既に進行中の場合、現在のバッチは前のバッチサイズに従ってサイズが変更されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-189">If a bulk copy is already in progress, the current batch is sized according to the previous batch size.</span></span> <span data-ttu-id="b3367-190">後続のバッチでは、新しいサイズが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-190">Subsequent batches use the new size.</span></span> <span data-ttu-id="b3367-191">@No__t-1 の操作が既に実行されている間に @no__t 0 が最初に0で、変更された場合、その操作はデータを1つのバッチとして読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b3367-191">If the <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> is initially zero and changed while a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is already in progress, that operation loads the data as a single batch.</span></span> <span data-ttu-id="b3367-192">同じ <xref:System.Data.SqlClient.SqlBulkCopy> インスタンスに対する後続の <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 操作では、新しい <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-192">Any subsequent <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operations on the same <xref:System.Data.SqlClient.SqlBulkCopy> instance use the new <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-193">次のコンソールアプリケーションは、50行のバッチでデータを一括読み込みする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b3367-193">The following console application demonstrates how to bulk load data in batches of 50 rows.</span></span> <span data-ttu-id="b3367-194">トランザクションで <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> がどのように動作するかを示す例については、「[トランザクションと一括コピーの操作](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-194">For an example illustrating how <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> works with a transaction, see [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md).</span></span>  
  
 <span data-ttu-id="b3367-195">この例では、最初にソースデータが SQL Server テーブルから @no__t 0 インスタンスに読み取られます。</span><span class="sxs-lookup"><span data-stu-id="b3367-195">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="b3367-196">ソースデータが SQL Server に配置されている必要はありません。@no__t 0 に読み取ることができる任意のデータソースを使用するか、<xref:System.Data.DataTable> に読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b3367-196">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-197">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-197">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-198">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-198">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-199">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、Transact-sql の `INSERT … SELECT` ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-199">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.BatchSize#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.BatchSize/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.BatchSize#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.BatchSize/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-200">SQL Server でのバルク コピー操作</span><span class="sxs-lookup"><span data-stu-id="b3367-200">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-201">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-201">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BulkCopyTimeout">
      <MemberSignature Language="C#" Value="public int BulkCopyTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BulkCopyTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property BulkCopyTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BulkCopyTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BulkCopyTimeout : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3367-202">操作がタイムアウトするまでの秒数。</span><span class="sxs-lookup"><span data-stu-id="b3367-202">Number of seconds for the operation to complete before it times out.</span></span></summary>
        <value><span data-ttu-id="b3367-203"><see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /> プロパティの整数値。</span><span class="sxs-lookup"><span data-stu-id="b3367-203">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /> property.</span></span> <span data-ttu-id="b3367-204">既定値は 30 秒です。</span><span class="sxs-lookup"><span data-stu-id="b3367-204">The default is 30 seconds.</span></span> <span data-ttu-id="b3367-205">値 0 は無制限を意味します。一括コピーは無期限に待機します。</span><span class="sxs-lookup"><span data-stu-id="b3367-205">A value of 0 indicates no limit; the bulk copy will wait indefinitely.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-206">操作がタイムアウトになると、トランザクションはコミットされず、コピーされたすべての行がコピー先テーブルから削除されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-206">If the operation does time out, the transaction is not committed and all copied rows are removed from the destination table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-207">次のコンソールアプリケーションは、データの一括読み込み時にタイムアウトを60秒に変更する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b3367-207">The following console application demonstrates how to modify the time-out to 60 seconds when bulk loading data.</span></span>  
  
 <span data-ttu-id="b3367-208">この例では、最初にソースデータが SQL Server テーブルから @no__t 0 インスタンスに読み取られます。</span><span class="sxs-lookup"><span data-stu-id="b3367-208">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="b3367-209">ソースデータが SQL Server に配置されている必要はありません。@no__t 0 に読み取ることができる任意のデータソースを使用するか、<xref:System.Data.DataTable> に読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b3367-209">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-210">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-210">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-211">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-211">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-212">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、@no__t 0 の @ no__t ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-212">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a [!INCLUDE[tsql](~/includes/tsql-md.md)]`INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.Timeout#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Timeout/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Timeout/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-213">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-213">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-214">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-214">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="sqlBulkCopy.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3367-215"><see cref="T:System.Data.SqlClient.SqlBulkCopy" /> インスタンスを閉じます。</span><span class="sxs-lookup"><span data-stu-id="b3367-215">Closes the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-216">@No__t-1 オブジェクトの <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> を呼び出すと、他の操作は成功しません。</span><span class="sxs-lookup"><span data-stu-id="b3367-216">After you call a <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> on the <xref:System.Data.SqlClient.SqlBulkCopy> object, no other operation will succeed.</span></span> <span data-ttu-id="b3367-217">@No__t-0 メソッドを呼び出すと、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-217">Calls to the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="b3367-218">@No__t-1 イベントから <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> メソッドを呼び出すと、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-218">Calling the <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> method from the <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event causes an <xref:System.InvalidOperationException> to be thrown.</span></span>  
  
 <span data-ttu-id="b3367-219">Open <xref:System.Data.SqlClient.SqlBulkCopy> インスタンスは、`using` ブロックの最後に暗黙的に閉じられることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-219">Note that open <xref:System.Data.SqlClient.SqlBulkCopy> instances are closed implicitly at the end of a `using` block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-220">次の例では、同じ <xref:System.Data.SqlClient.SqlBulkCopy> インスタンスを使用して、2つの変換先テーブルに販売注文とそれに関連する詳細を追加します。</span><span class="sxs-lookup"><span data-stu-id="b3367-220">The following example uses the same <xref:System.Data.SqlClient.SqlBulkCopy> instance to add sales orders and their associated details to two destination tables.</span></span> <span data-ttu-id="b3367-221">**AdventureWorks** sales order テーブルが大きいため、このサンプルでは、特定の勘定番号によって配置された注文のみを読み取り、その注文と詳細をコピー先テーブルに一括コピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-221">Because the **AdventureWorks** sales order tables are large, the sample reads only orders placed by a certain account number and bulk copies those orders and details to the destination tables.</span></span> <span data-ttu-id="b3367-222">@No__t-0 メソッドは、両方の一括コピー操作が完了した後にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-222">The <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> method is used only after both bulk copy operations are complete.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-223">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-223">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-224">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-224">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-225">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、Transact-sql の `INSERT … SELECT` ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-225">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.OrdersDetails#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.OrdersDetails/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.OrdersDetails#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.OrdersDetails/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-226">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-226">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-227">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-227">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnMappings">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMappingCollection ColumnMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlBulkCopyColumnMappingCollection ColumnMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnMappings As SqlBulkCopyColumnMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlBulkCopyColumnMappingCollection ^ ColumnMappings { System::Data::SqlClient::SqlBulkCopyColumnMappingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnMappings : System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" Usage="System.Data.SqlClient.SqlBulkCopy.ColumnMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3367-228"><see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> は項目のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b3367-228">Returns a collection of <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> items.</span></span> <span data-ttu-id="b3367-229">列マッピングは、データ ソース中の列とターゲット中の列の間の関係を定義します。</span><span class="sxs-lookup"><span data-stu-id="b3367-229">Column mappings define the relationships between columns in the data source and columns in the destination.</span></span></summary>
        <value><span data-ttu-id="b3367-230">列マッピングのコレクション。</span><span class="sxs-lookup"><span data-stu-id="b3367-230">A collection of column mappings.</span></span> <span data-ttu-id="b3367-231">既定では、空のコレクションです。</span><span class="sxs-lookup"><span data-stu-id="b3367-231">By default, it is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-232">データソースとコピー先のテーブルの列数が同じで、データソース内の各ソース列の序数位置が、対応する変換先列の序数位置と一致する場合、<xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> コレクションは不要です。</span><span class="sxs-lookup"><span data-stu-id="b3367-232">If the data source and the destination table have the same number of columns, and the ordinal position of each source column within the data source matches the ordinal position of the corresponding destination column, the <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection is unnecessary.</span></span> <span data-ttu-id="b3367-233">ただし、列数が異なる場合、または序数位置が一致しない場合は、<xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> を使用して、データが正しい列にコピーされるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b3367-233">However, if the column counts differ, or the ordinal positions are not consistent, you must use <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> to make sure that data is copied into the correct columns.</span></span>  
  
 <span data-ttu-id="b3367-234">一括コピー操作の実行中は、このコレクションにアクセスできますが、変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="b3367-234">During the execution of a bulk copy operation, this collection can be accessed, but it cannot be changed.</span></span> <span data-ttu-id="b3367-235">これを変更しようとすると、@no__t 0 がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-235">Any attempt to change it will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-236">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-236">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-237">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-237">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DestinationTableName">
      <MemberSignature Language="C#" Value="public string DestinationTableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DestinationTableName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationTableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DestinationTableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationTableName : string with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.DestinationTableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3367-238">サーバー上のコピー先テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="b3367-238">Name of the destination table on the server.</span></span></summary>
        <value><span data-ttu-id="b3367-239"><see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> プロパティの文字列値。または、値が指定されていない場合は null。</span><span class="sxs-lookup"><span data-stu-id="b3367-239">The string value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property, or null if none as been supplied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-240">@No__t-1 を呼び出したときに <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> が設定されていない場合は、<xref:System.ArgumentNullException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-240">If <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> has not been set when <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> is called, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="b3367-241">@No__t-1 の操作の実行中に <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> が変更された場合、変更は現在の操作には影響しません。</span><span class="sxs-lookup"><span data-stu-id="b3367-241">If <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> is modified while a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is running, the change does not affect the current operation.</span></span> <span data-ttu-id="b3367-242">新しい <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> 値は、次に <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> メソッドが呼び出されたときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-242">The new <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> value is used the next time a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called.</span></span>  
  
 <span data-ttu-id="b3367-243"><xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> は、3つの部分で構成される名前 (`<database>.<owningschema>.<name>`) です。</span><span class="sxs-lookup"><span data-stu-id="b3367-243"><xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> is a three-part name (`<database>.<owningschema>.<name>`).</span></span> <span data-ttu-id="b3367-244">選択した場合は、テーブル名をデータベースと所有するスキーマで修飾できます。</span><span class="sxs-lookup"><span data-stu-id="b3367-244">You can qualify the table name with its database and owning schema if you choose.</span></span> <span data-ttu-id="b3367-245">ただし、テーブル名にアンダースコア ("_") またはその他の特殊文字が使用されている場合は、(`[<database>.<owningschema>.<name_01>]`) のように、周囲の角かっこを使用して名前をエスケープする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b3367-245">However, if the table name uses an underscore ("_") or any other special characters, you must escape the name using surrounding brackets as in (`[<database>.<owningschema>.<name_01>]`).</span></span> <span data-ttu-id="b3367-246">詳細については、「[データベース識別子](/sql/relational-databases/databases/database-identifiers)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-246">For more information, see [Database Identifiers](/sql/relational-databases/databases/database-identifiers).</span></span>  
  
 <span data-ttu-id="b3367-247">@No__t-2 プロパティには、`tempdb..#table` や `tempdb.<owner>.#table` などの値を使用して、一時テーブルにデータを一括コピーできます。</span><span class="sxs-lookup"><span data-stu-id="b3367-247">You can bulk-copy data to a temporary table by using a value such as `tempdb..#table` or `tempdb.<owner>.#table` for the <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-248">次のコンソールアプリケーションは、既に開いている接続を使用してデータを一括読み込みする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b3367-248">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="b3367-249">コピー先のテーブルは、 **AdventureWorks**データベースのテーブルです。</span><span class="sxs-lookup"><span data-stu-id="b3367-249">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="b3367-250">この例では、最初に接続を使用して、SQL Server テーブルから @no__t 0 インスタンスにデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b3367-250">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="b3367-251">ソースデータが SQL Server に配置されている必要はありません。@no__t 0 に読み取ることができる任意のデータソースを使用するか、<xref:System.Data.DataTable> に読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b3367-251">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-252">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-252">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-253">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-253">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-254">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、Transact-sql の `INSERT … SELECT` ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-254">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-255">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-255">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-256">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-256">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnableStreaming">
      <MemberSignature Language="C#" Value="public bool EnableStreaming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableStreaming" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableStreaming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableStreaming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableStreaming : bool with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.EnableStreaming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3367-257"><see cref="T:System.Data.IDataReader" /> オブジェクトからデータをストリーミングする <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトを有効または無効にします。</span><span class="sxs-lookup"><span data-stu-id="b3367-257">Enables or disables a <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object to stream data from an <see cref="T:System.Data.IDataReader" /> object.</span></span></summary>
        <value><span data-ttu-id="b3367-258"><see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトが <see cref="T:System.Data.IDataReader" /> オブジェクトからデータをストリーミングできる場合は <see langword="true" />。それ以外の場合は false。</span><span class="sxs-lookup"><span data-stu-id="b3367-258"><see langword="true" /> if a <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object can stream data from an <see cref="T:System.Data.IDataReader" /> object; otherwise, false.</span></span> <span data-ttu-id="b3367-259">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b3367-259">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-260">@No__t-0 が `true` の場合、<xref:System.Data.SqlClient.SqlBulkCopy> @no__t を使用して @no__t 3 オブジェクトから読み取りを行い、@no__t 5 ストリーミング機能を使用してメモリ使用量を最適化します。</span><span class="sxs-lookup"><span data-stu-id="b3367-260">When <xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A> is `true`, <xref:System.Data.SqlClient.SqlBulkCopy> reads from an <xref:System.Data.IDataReader> object using <xref:System.Data.CommandBehavior.SequentialAccess>, optimizing memory usage by using the <xref:System.Data.IDataReader> streaming capabilities.</span></span> <span data-ttu-id="b3367-261">False に設定されている場合、<xref:System.Data.SqlClient.SqlBulkCopy> クラスは、SQL Server または SQL Azure に送信する前に、<xref:System.Data.IDataReader> オブジェクトから返されるすべてのデータをメモリに読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b3367-261">When it's set to false, the <xref:System.Data.SqlClient.SqlBulkCopy> class loads all the data returned by the <xref:System.Data.IDataReader> object into memory before sending it to SQL Server or SQL Azure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyAfter">
      <MemberSignature Language="C#" Value="public int NotifyAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NotifyAfter" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NotifyAfter { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyAfter : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.NotifyAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3367-262">通知イベントを生成する前に処理する行の数を定義します。</span><span class="sxs-lookup"><span data-stu-id="b3367-262">Defines the number of rows to be processed before generating a notification event.</span></span></summary>
        <value><span data-ttu-id="b3367-263"><see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> プロパティの整数値。プロパティが設定されていない場合は 0。</span><span class="sxs-lookup"><span data-stu-id="b3367-263">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> property, or zero if the property has not been set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-264">このプロパティは、一括コピー操作の進行状況を示すユーザーインターフェイスコンポーネント向けに設計されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-264">This property is designed for user interface components that illustrate the progress of a bulk copy operation.</span></span> <span data-ttu-id="b3367-265">通知イベントを生成する前に処理される行の数を示します。</span><span class="sxs-lookup"><span data-stu-id="b3367-265">It indicates the number of rows to be processed before generating a notification event.</span></span> <span data-ttu-id="b3367-266">@No__t-0 プロパティは、一括コピー操作の実行中であっても、いつでも設定できます。</span><span class="sxs-lookup"><span data-stu-id="b3367-266">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property can be set at any time, even while a bulk copy operation is underway.</span></span> <span data-ttu-id="b3367-267">一括コピー操作中に行われた変更は、次の通知後に有効になります。</span><span class="sxs-lookup"><span data-stu-id="b3367-267">Changes made during a bulk copy operation take effect after the next notification.</span></span> <span data-ttu-id="b3367-268">新しい設定は、同じインスタンス上の後続のすべての操作に適用されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-268">The new setting applies to all subsequent operations on the same instance.</span></span>  
  
 <span data-ttu-id="b3367-269">@No__t-0 が0未満の値に設定されている場合は、<xref:System.ArgumentOutOfRangeException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-269">If <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> is set to a number less than zero, an <xref:System.ArgumentOutOfRangeException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-270">次のコンソールアプリケーションは、既に開いている接続を使用してデータを一括読み込みする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b3367-270">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="b3367-271">@No__t-0 プロパティは、50行ごとにテーブルにコピーされた後にイベントハンドラーが呼び出されるように設定されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-271">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property is set so that the event handler is called after every 50 rows copied to the table.</span></span>  
  
 <span data-ttu-id="b3367-272">この例では、最初に接続を使用して、SQL Server テーブルから @no__t 0 インスタンスにデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b3367-272">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="b3367-273">その後、2番目の接続を開いてデータを一括コピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-273">Then a second connection is opened to bulk copy the data.</span></span> <span data-ttu-id="b3367-274">ソースデータが SQL Server に配置されている必要はないことに注意してください。@no__t 0 に読み取ることができる任意のデータソースを使用するか、<xref:System.Data.DataTable> に読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b3367-274">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-275">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-275">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-276">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-276">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-277">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、Transact-sql の `INSERT … SELECT` ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-277">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-278">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-278">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-279">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-279">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SqlRowsCopied">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowsCopiedEventHandler SqlRowsCopied;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowsCopiedEventHandler SqlRowsCopied" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SqlRowsCopied As SqlRowsCopiedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlRowsCopiedEventHandler ^ SqlRowsCopied;" />
      <MemberSignature Language="F#" Value="member this.SqlRowsCopied : System.Data.SqlClient.SqlRowsCopiedEventHandler " Usage="member this.SqlRowsCopied : System.Data.SqlClient.SqlRowsCopiedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowsCopiedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3367-280"><see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> プロパティによって指定された行数が処理されるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="b3367-280">Occurs every time that the number of rows specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> property have been processed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-281">@No__t-0 および <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> の設定は独立していることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-281">Note that the settings of <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> and <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> are independent.</span></span> <span data-ttu-id="b3367-282">@No__t-0 イベントの受信は、行がサーバーに送信されたか、コミットされたことを意味するものではありません。</span><span class="sxs-lookup"><span data-stu-id="b3367-282">Receipt of a <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event does not imply that any rows have been sent to the server or committed.</span></span>  
  
 <span data-ttu-id="b3367-283">このイベントから SqlBulkCopy (<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>) または SqlConnection. Close (<xref:System.Data.SqlClient.SqlConnection.Close%2A>) を呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="b3367-283">You cannot call SqlBulkCopy.Close (<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>) or SqlConnection.Close (<xref:System.Data.SqlClient.SqlConnection.Close%2A>) from this event.</span></span> <span data-ttu-id="b3367-284">これを行うと @no__t 0 がスローされ、<xref:System.Data.SqlClient.SqlBulkCopy> のオブジェクトの状態は変化しません。</span><span class="sxs-lookup"><span data-stu-id="b3367-284">Doing this will cause an <xref:System.InvalidOperationException> being thrown, and the <xref:System.Data.SqlClient.SqlBulkCopy> object state will not change.</span></span> <span data-ttu-id="b3367-285">ユーザーがイベントから操作を取り消す必要がある場合は、<xref:System.Data.SqlClient.SqlRowsCopiedEventArgs> の @no__t 0 プロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="b3367-285">If the user wants to cancel the operation from the event, the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> property of the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs> can be used.</span></span> <span data-ttu-id="b3367-286">(@No__t-1 プロパティを使用する例については、「[トランザクションと一括コピーの操作](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="b3367-286">(See [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md) for examples that use the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> property.)</span></span>  
  
 <span data-ttu-id="b3367-287">トランザクションアクティビティなどの操作は、一括コピー操作の実行中は接続でサポートされていません。 @no__t 0 のイベント時に使用されるのと同じ接続を使用しないことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b3367-287">No action, such as transaction activity, is supported in the connection during the execution of the bulk copy operation, and it is recommended that you not use the same connection used during the <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event.</span></span> <span data-ttu-id="b3367-288">ただし、別の接続を開くことはできます。</span><span class="sxs-lookup"><span data-stu-id="b3367-288">However, you can open a different connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-289">次のコンソールアプリケーションは、既に開いている接続を使用してデータを一括読み込みする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b3367-289">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="b3367-290">@No__t-0 プロパティは、50行ごとにテーブルにコピーされた後にイベントハンドラーが呼び出されるように設定されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-290">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property is set so that the event handler is called after every 50 rows copied to the table.</span></span>  
  
 <span data-ttu-id="b3367-291">この例では、最初に接続を使用して、SQL Server テーブルから @no__t 0 インスタンスにデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b3367-291">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="b3367-292">ソースデータが SQL Server に配置されている必要はないことに注意してください。@no__t 0 に読み取ることができる任意のデータソースを使用するか、<xref:System.Data.DataTable> に読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b3367-292">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-293">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-293">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-294">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-294">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-295">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、Transact-sql の `INSERT … SELECT` ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-295">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-296">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-296">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-297">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-297">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3367-298"><see cref="T:System.Data.SqlClient.SqlBulkCopy" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="b3367-298">Releases all resources used by the current instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-299"><xref:System.Data.SqlClient.SqlBulkCopy> を使い終わったら、`Dispose`を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3367-299">Call `Dispose` when you are finished using the <xref:System.Data.SqlClient.SqlBulkCopy>.</span></span> <span data-ttu-id="b3367-300">`Dispose`メソッドによって、<xref:System.Data.SqlClient.SqlBulkCopy> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="b3367-300">The `Dispose` method leaves the <xref:System.Data.SqlClient.SqlBulkCopy> in an unusable state.</span></span> <span data-ttu-id="b3367-301">`Dispose`呼び出し後は、<xref:System.Data.SqlClient.SqlBulkCopy>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Data.SqlClient.SqlBulkCopy> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b3367-301">After calling `Dispose`, you must release all references to the <xref:System.Data.SqlClient.SqlBulkCopy> so the garbage collector can reclaim the memory that the <xref:System.Data.SqlClient.SqlBulkCopy> was occupying.</span></span>  
  
 <span data-ttu-id="b3367-302">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-302">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3367-303"><xref:System.Data.SqlClient.SqlBulkCopy>への最後の参照を解放する前に、必ず`Dispose`を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-303">Always call `Dispose` before you release your last reference to the <xref:System.Data.SqlClient.SqlBulkCopy>.</span></span> <span data-ttu-id="b3367-304">そうしないと、ガベージ コレクターが <xref:System.Data.SqlClient.SqlBulkCopy> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-304">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.SqlClient.SqlBulkCopy> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-305">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-305">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToServer">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3367-306">データ ソースから、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> プロパティで指定された宛先のテーブルにすべての行をコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-306">Copies all rows from a data source to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-307">複数のアクティブな結果セット (MARS) が無効になっている場合、<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> によって接続がビジー状態になります。</span><span class="sxs-lookup"><span data-stu-id="b3367-307">If multiple active result sets (MARS) is disabled, <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> makes the connection busy.</span></span> <span data-ttu-id="b3367-308">MARS が有効になっている場合は、同じ接続で他のコマンドを使用して <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> への呼び出しをインターリーブできます。</span><span class="sxs-lookup"><span data-stu-id="b3367-308">If MARS is enabled, you can interleave calls to <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> with other commands in the same connection.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-309">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-309">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-310">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-310">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (reader As DbDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.Common.DbDataReader -&gt; unit" Usage="sqlBulkCopy.WriteToServer reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b3367-311">行がコピー先テーブルにコピーされる <see cref="T:System.Data.Common.DbDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="b3367-311">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="b3367-312">示された <see cref="T:System.Data.Common.DbDataReader" /> 配列から、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> のプロパティで指定された宛先のテーブルにすべての行をコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-312">Copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataRow[] rows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataRow[] rows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (rows As DataRow())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(cli::array &lt;System::Data::DataRow ^&gt; ^ rows);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataRow[] -&gt; unit" Usage="sqlBulkCopy.WriteToServer rows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rows"><span data-ttu-id="b3367-313">コピー先テーブルにコピーされる <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b3367-313">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="b3367-314">示された <see cref="T:System.Data.DataRow" /> 配列から、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> のプロパティで指定された宛先のテーブルにすべての行をコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-314">Copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-315">一括コピー操作の実行中は、関連付けられている宛先 <xref:System.Data.SqlClient.SqlConnection> がビジー状態であるため、接続に対して他の操作を実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="b3367-315">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="b3367-316">@No__t 0 のコレクションは、<xref:System.Data.DataRow> の列からコピー先のデータベーステーブルにマップされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-316">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataRow> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-317">次のコンソールアプリケーションは、<xref:System.Data.DataRow> 配列からデータを一括読み込みする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b3367-317">The following console application demonstrates how to bulk load data from a <xref:System.Data.DataRow> array.</span></span> <span data-ttu-id="b3367-318">コピー先のテーブルは、 **AdventureWorks**データベースのテーブルです。</span><span class="sxs-lookup"><span data-stu-id="b3367-318">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="b3367-319">この例では、実行時に <xref:System.Data.DataTable> が作成されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-319">In this example, a <xref:System.Data.DataTable> is created at run time.</span></span> <span data-ttu-id="b3367-320">@No__t からコピー先のテーブルにコピーするには、0から1行を選択します。</span><span class="sxs-lookup"><span data-stu-id="b3367-320">A single row is selected from the <xref:System.Data.DataTable> to copy to the destination table.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-321">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-321">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-322">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-322">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-323">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、Transact-sql の `INSERT … SELECT` ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-323">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.RowArray#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.RowArray/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.RowArray#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.RowArray/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-324">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-324">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-325">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-325">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataTable -&gt; unit" Usage="sqlBulkCopy.WriteToServer table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="b3367-326">行がコピー先テーブルにコピーされる <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b3367-326">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="b3367-327">指定された <see cref="T:System.Data.DataTable" /> のすべての行を、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> プロパティで指定される宛先テーブルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-327">Copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-328">@No__t-0 のすべての行がコピー先のテーブルにコピーされます。ただし、削除された行は除きます。</span><span class="sxs-lookup"><span data-stu-id="b3367-328">All rows in the <xref:System.Data.DataTable> are copied to the destination table except those that have been deleted.</span></span>  
  
 <span data-ttu-id="b3367-329">一括コピー操作の実行中は、関連付けられている宛先 <xref:System.Data.SqlClient.SqlConnection> がビジー状態であるため、接続に対して他の操作を実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="b3367-329">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="b3367-330">@No__t 0 のコレクションは、<xref:System.Data.DataTable> の列からコピー先のデータベーステーブルにマップされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-330">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataTable> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-331">次のコンソールアプリケーションは、<xref:System.Data.DataTable> からデータを一括読み込みする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b3367-331">The following Console application demonstrates how to bulk load data from a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b3367-332">コピー先のテーブルは、 **AdventureWorks**データベースのテーブルです。</span><span class="sxs-lookup"><span data-stu-id="b3367-332">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="b3367-333">この例では、実行時に <xref:System.Data.DataTable> が作成され、`SqlBulkCopy` 操作のソースとなります。</span><span class="sxs-lookup"><span data-stu-id="b3367-333">In this example, a <xref:System.Data.DataTable> is created at run time and is the source of the `SqlBulkCopy` operation.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-334">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-334">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-335">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-335">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-336">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、Transact-sql の `INSERT … SELECT` ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-336">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.DataTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataTable/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.DataTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-337">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-337">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-338">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-338">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.IDataReader -&gt; unit" Usage="sqlBulkCopy.WriteToServer reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b3367-339">行がコピー先テーブルにコピーされる <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="b3367-339">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="b3367-340">指定された <see cref="T:System.Data.IDataReader" /> のすべての行を、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> プロパティで指定される宛先テーブルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-340">Copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-341">コピー操作は、リーダーで次に使用可能な行から開始します。</span><span class="sxs-lookup"><span data-stu-id="b3367-341">The copy operation starts at the next available row in the reader.</span></span> <span data-ttu-id="b3367-342">ほとんどの場合、リーダーは <xref:System.Data.IDbCommand.ExecuteReader%2A> または同様の呼び出しによって返されたので、次に使用可能な行が最初の行になります。</span><span class="sxs-lookup"><span data-stu-id="b3367-342">Most of the time, the reader was just returned by <xref:System.Data.IDbCommand.ExecuteReader%2A> or a similar call, so the next available row is the first row.</span></span> <span data-ttu-id="b3367-343">複数の結果を処理するには、データリーダーで <xref:System.Data.IDataReader.NextResult%2A> を呼び出し、<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> を再度呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3367-343">To process multiple results, call <xref:System.Data.IDataReader.NextResult%2A> on the data reader and call <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> again.</span></span>  
  
 <span data-ttu-id="b3367-344">@No__t-0 を使用すると、リーダーの状態が変更されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-344">Note that using <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> modifies the state of the reader.</span></span> <span data-ttu-id="b3367-345">メソッドは、false を返すか、操作が中止されるか、またはエラーが発生するまで <xref:System.Data.IDataReader.Read%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3367-345">The method will call <xref:System.Data.IDataReader.Read%2A> until it returns false, the operation is aborted, or an error occurs.</span></span> <span data-ttu-id="b3367-346">つまり、データリーダーは、@no__t 0 の操作が完了したときに、結果セットの最後にあるかのように、別の状態になります。</span><span class="sxs-lookup"><span data-stu-id="b3367-346">This means that the data reader will be in a different state, probably at the end of the result set, when the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is complete.</span></span>  
  
 <span data-ttu-id="b3367-347">一括コピー操作の実行中は、関連付けられている宛先 <xref:System.Data.SqlClient.SqlConnection> がビジー状態であるため、接続に対して他の操作を実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="b3367-347">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="b3367-348">@No__t 0 のコレクションは、データリーダーの列からコピー先のデータベーステーブルにマップされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-348">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the data reader columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-349">次のコンソールアプリケーションは、<xref:System.Data.SqlClient.SqlDataReader> からデータを一括読み込みする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b3367-349">The following console application demonstrates how to bulk load data from a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="b3367-350">コピー先のテーブルは、 **AdventureWorks**データベースのテーブルです。</span><span class="sxs-lookup"><span data-stu-id="b3367-350">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-351">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-351">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-352">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-352">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-353">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、Transact-sql の `INSERT … SELECT` ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-353">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-354">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-354">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-355">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-355">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataTable table, System.Data.DataRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (table As DataTable, rowState As DataRowState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::DataTable ^ table, System::Data::DataRowState rowState);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataTable * System.Data.DataRowState -&gt; unit" Usage="sqlBulkCopy.WriteToServer (table, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="b3367-356">行がコピー先テーブルにコピーされる <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b3367-356">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="rowState"><span data-ttu-id="b3367-357"><see cref="T:System.Data.DataRowState" /> 列挙体の値。</span><span class="sxs-lookup"><span data-stu-id="b3367-357">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span></span> <span data-ttu-id="b3367-358">特定の状態に一致する行だけが対象テーブルにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-358">Only rows matching the row state are copied to the destination.</span></span></param>
        <summary><span data-ttu-id="b3367-359">提供された <see cref="T:System.Data.DataTable" /> 内の提供された行の状態と一致する行のみを、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> のプロパティで指定されたコピー先のテーブルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-359">Copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-360">@No__t-1 引数に示され、削除されていない状態にある @no__t 0 の行のみが、コピー先のテーブルにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-360">Only rows in the <xref:System.Data.DataTable> that are in the states indicated in the `rowState` argument and have not been deleted are copied to the destination table.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3367-361">@No__t-0 が指定されている場合は、<xref:System.Data.DataRowState.Unchanged>、<xref:System.Data.DataRowState.Added>、および <xref:System.Data.DataRowState.Modified> の行もサーバーにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-361">If <xref:System.Data.DataRowState.Deleted> is specified, any <xref:System.Data.DataRowState.Unchanged>, <xref:System.Data.DataRowState.Added>, and <xref:System.Data.DataRowState.Modified> rows will also be copied to the server.</span></span> <span data-ttu-id="b3367-362">例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="b3367-362">No exception will be raised.</span></span>  
  
 <span data-ttu-id="b3367-363">一括コピー操作の実行中は、関連付けられている宛先 <xref:System.Data.SqlClient.SqlConnection> がビジー状態であるため、接続に対して他の操作を実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="b3367-363">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="b3367-364">@No__t 0 のコレクションは、<xref:System.Data.DataTable> の列からコピー先のデータベーステーブルにマップされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-364">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataTable> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3367-365">次のコンソールアプリケーションは、指定した状態に一致する @no__t 0 の行だけを一括読み込みする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b3367-365">The following Console application demonstrates how to bulk load only the rows in a <xref:System.Data.DataTable> that match a specified state.</span></span> <span data-ttu-id="b3367-366">この場合は、変更されていない行のみが追加されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-366">In this case, only unchanged rows are added.</span></span> <span data-ttu-id="b3367-367">コピー先のテーブルは、 **AdventureWorks**データベースのテーブルです。</span><span class="sxs-lookup"><span data-stu-id="b3367-367">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="b3367-368">この例では、実行時に <xref:System.Data.DataTable> が作成され、3つの行が追加されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-368">In this example, a <xref:System.Data.DataTable> is created at run time and three rows are added to it.</span></span> <span data-ttu-id="b3367-369">@No__t-0 メソッドを実行する前に、行の1つが編集されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-369">Before the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is executed, one of the rows is edited.</span></span> <span data-ttu-id="b3367-370">@No__t-0 メソッドが `DataRowState.Unchanged` `rowState` 引数を使用して呼び出されるため、変更されていない2つの行のみがコピー先に一括コピーされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-370">The <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called with a `DataRowState.Unchanged` `rowState` argument, so only the two unchanged rows are bulk copied to the destination.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3367-371">このサンプルは、「[一括コピーの例のセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)」で説明されているように作業テーブルを作成しない限り、実行されません。</span><span class="sxs-lookup"><span data-stu-id="b3367-371">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="b3367-372">このコードは、 **SqlBulkCopy**のみを使用する構文を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3367-372">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="b3367-373">コピー元とコピー先のテーブルが同じ SQL Server インスタンス内にある場合は、Transact-sql の `INSERT … SELECT` ステートメントを使用してデータをコピーする方が簡単で高速です。</span><span class="sxs-lookup"><span data-stu-id="b3367-373">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.DataRowState#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataRowState/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.DataRowState#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataRowState/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataRowState" />
        <related type="Article" href="https://msdn.microsoft.com/library/83a7a0d2-8018-4354-97b9-0b1d99f8342b"><span data-ttu-id="b3367-374">一括コピー操作の実行</span><span class="sxs-lookup"><span data-stu-id="b3367-374">Performing Bulk Copy Operations</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b3367-375">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="b3367-375">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3367-376">非同期バージョンの <see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" />。データ ソースのすべての行を、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> プロパティで指定された宛先テーブルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-376">An asynchronous version of <see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" />, which copies all rows from a data source to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-377">複数のアクティブな結果セット (MARS) が無効になっている場合、<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> によって接続がビジー状態になります。</span><span class="sxs-lookup"><span data-stu-id="b3367-377">If multiple active result sets (MARS) is disabled, <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> makes the connection busy.</span></span> <span data-ttu-id="b3367-378">MARS が有効になっている場合は、同じ接続で他のコマンドを使用して <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> への呼び出しをインターリーブできます。</span><span class="sxs-lookup"><span data-stu-id="b3367-378">If MARS is enabled, you can interleave calls to <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> with other commands in the same connection.</span></span>  
  
 <span data-ttu-id="b3367-379">失敗した場合にロールバックされる行の数は、次のいくつかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="b3367-379">The number of rows that are rolled back when one fails depends on several things:</span></span>  
  
-   <span data-ttu-id="b3367-380">@No__t-0 が指定されている場合は。</span><span class="sxs-lookup"><span data-stu-id="b3367-380">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is specified.</span></span>  
  
-   <span data-ttu-id="b3367-381">独自のトランザクションがある場合。</span><span class="sxs-lookup"><span data-stu-id="b3367-381">If you have your own transaction.</span></span>  
  
-   <span data-ttu-id="b3367-382"><xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> の値。</span><span class="sxs-lookup"><span data-stu-id="b3367-382">The value of <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>.</span></span>  
  
 <span data-ttu-id="b3367-383">サーバーにデータを送信しているときにエラーが発生した場合は、(<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> によって指定された) 現在のバッチがロールバックされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-383">When there is an error while sending data to the server, the current batch (as specified by <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>) will be rolled back.</span></span> <span data-ttu-id="b3367-384">@No__t-0 が指定されておらず、独自のトランザクションがある場合は、トランザクション全体がロールバックされます (これには、前のすべてのバッチも含まれます)。</span><span class="sxs-lookup"><span data-stu-id="b3367-384">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is not specified and you have your own transaction, the entire transaction will be rolled back (which includes all previous batches as well).</span></span>  
  
 <span data-ttu-id="b3367-385">@No__t-0 を使用して、サーバーにコピーされた行数を確認します。</span><span class="sxs-lookup"><span data-stu-id="b3367-385">Use <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> to know how many rows were copied to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (reader As DbDataReader) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.Common.DbDataReader -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b3367-386">行がコピー先テーブルにコピーされる <see cref="T:System.Data.Common.DbDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="b3367-386">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="b3367-387"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /> の非同期バージョン。指定した <see cref="T:System.Data.Common.DbDataReader" /> 配列のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-387">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, which copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="b3367-388">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="b3367-388">A task representing the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataRow[] rows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataRow[] rows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (rows As DataRow()) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(cli::array &lt;System::Data::DataRow ^&gt; ^ rows);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataRow[] -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync rows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="rows"><span data-ttu-id="b3367-389">コピー先テーブルにコピーされる <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b3367-389">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="b3367-390">非同期バージョンの <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />。指定された <see cref="T:System.Data.DataRow" /> 配列から、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> プロパティで指定されたコピー先テーブルにすべての行をコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-390">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, which copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="b3367-391">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="b3367-391">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-392">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-392">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3367-393">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> を複数回呼び出す。</span><span class="sxs-lookup"><span data-stu-id="b3367-393">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-394">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3367-394">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-395"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> の実行中、接続は破棄されるか、または閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-395">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> execution.</span></span>  
  
<span data-ttu-id="b3367-396">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span><span class="sxs-lookup"><span data-stu-id="b3367-396">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="b3367-397">タスク オブジェクトで返された場合、接続プールのタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b3367-397">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="b3367-398">タスク オブジェクトで返されたため、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトはメソッドの実行前に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-398">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="b3367-399"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-399"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="b3367-400">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span><span class="sxs-lookup"><span data-stu-id="b3367-400">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (table As DataTable) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="b3367-401">行がコピー先テーブルにコピーされる <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b3367-401">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="b3367-402">非同期バージョンの <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />。示された <see cref="T:System.Data.DataTable" /> のすべての行を、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> プロパティで指定された宛先のテーブルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-402">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, which copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="b3367-403">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="b3367-403">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-404">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-404">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3367-405">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> を複数回呼び出す。</span><span class="sxs-lookup"><span data-stu-id="b3367-405">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-406">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3367-406">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-407"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> の実行中、接続は破棄されるか、または閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-407">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> execution.</span></span>  
  
<span data-ttu-id="b3367-408">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span><span class="sxs-lookup"><span data-stu-id="b3367-408">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="b3367-409">タスク オブジェクトで返された場合、接続プールのタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b3367-409">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="b3367-410">タスク オブジェクトで返されたため、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトはメソッドの実行前に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-410">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="b3367-411"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-411"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="b3367-412">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span><span class="sxs-lookup"><span data-stu-id="b3367-412">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (reader As IDataReader) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.IDataReader -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b3367-413">行がコピー先テーブルにコピーされる <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="b3367-413">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="b3367-414">非同期バージョンの <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />。示された <see cref="T:System.Data.IDataReader" /> のすべての行を、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> プロパティで指定された宛先のテーブルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-414">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, which copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="b3367-415">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="b3367-415">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-416">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-416">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3367-417">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> を複数回呼び出す。</span><span class="sxs-lookup"><span data-stu-id="b3367-417">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-418">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3367-418">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-419"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> の実行中、接続は破棄されるか、または閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-419">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> execution.</span></span>  
  
<span data-ttu-id="b3367-420">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span><span class="sxs-lookup"><span data-stu-id="b3367-420">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="b3367-421">タスク オブジェクトで返された場合、接続プールのタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b3367-421">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="b3367-422">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトは、メソッドの実行前に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-422">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
<span data-ttu-id="b3367-423">完了した <see cref="T:System.Data.IDataReader" /> が返される前に、<see cref="T:System.Threading.Tasks.Task" /> が閉じられました。</span><span class="sxs-lookup"><span data-stu-id="b3367-423">The <see cref="T:System.Data.IDataReader" /> was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span></span>  
  
<span data-ttu-id="b3367-424">完了した <see cref="T:System.Data.IDataReader" /> が返される前に、<see cref="T:System.Threading.Tasks.Task" /> に関連付けられたコネクションが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="b3367-424">The <see cref="T:System.Data.IDataReader" />'s associated connection was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span></span>  
  
 <span data-ttu-id="b3367-425"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-425"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="b3367-426">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span><span class="sxs-lookup"><span data-stu-id="b3367-426">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.Common.DbDataReader reader, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.Common.DbDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::Common::DbDataReader ^ reader, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.Common.DbDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b3367-427">行がコピー先テーブルにコピーされる <see cref="T:System.Data.Common.DbDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="b3367-427">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="b3367-428">取り消し命令。</span><span class="sxs-lookup"><span data-stu-id="b3367-428">The cancellation instruction.</span></span> <span data-ttu-id="b3367-429">このパラメーターの <see cref="P:System.Threading.CancellationToken.None" /> 値は、このメソッドを <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" /> と同じにします。</span><span class="sxs-lookup"><span data-stu-id="b3367-429">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />.</span></span></param>
        <summary><span data-ttu-id="b3367-430">非同期バージョンの <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />。指定された <see cref="T:System.Data.Common.DbDataReader" /> 配列から、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> プロパティで指定されたコピー先テーブルにすべての行をコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-430">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, which copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="b3367-431"><see cref="T:System.Threading.Tasks.Task" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b3367-431">Returns <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataRow[] rows, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataRow[] rows, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(cli::array &lt;System::Data::DataRow ^&gt; ^ rows, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataRow[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (rows, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="rows"><span data-ttu-id="b3367-432">対象テーブルにコピーされる <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b3367-432">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="b3367-433">取り消し命令。</span><span class="sxs-lookup"><span data-stu-id="b3367-433">The cancellation instruction.</span></span> <span data-ttu-id="b3367-434">このパラメーターの <see cref="P:System.Threading.CancellationToken.None" /> 値は、このメソッドを <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> と同じにします。</span><span class="sxs-lookup"><span data-stu-id="b3367-434">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span></span></param>
        <summary><span data-ttu-id="b3367-435">非同期バージョンの <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />。指定された <see cref="T:System.Data.DataRow" /> 配列から、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> プロパティで指定されたコピー先テーブルにすべての行をコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-435">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, which copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span>  
  
<span data-ttu-id="b3367-436">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="b3367-436">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="b3367-437">例外は、返されたタスク オブジェクトによって報告されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-437">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="b3367-438">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="b3367-438">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-439">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-439">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3367-440">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> を複数回呼び出す。</span><span class="sxs-lookup"><span data-stu-id="b3367-440">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-441">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3367-441">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-442"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> の実行中、接続は破棄されるか、または閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-442">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> execution.</span></span>  
  
<span data-ttu-id="b3367-443">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span><span class="sxs-lookup"><span data-stu-id="b3367-443">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="b3367-444">タスク オブジェクトで返された場合、接続プールのタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b3367-444">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="b3367-445">タスク オブジェクトで返されたため、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトはメソッドの実行前に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-445">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="b3367-446"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-446"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="b3367-447">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span><span class="sxs-lookup"><span data-stu-id="b3367-447">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Data.DataRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (table As DataTable, rowState As DataRowState) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Data::DataRowState rowState);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Data.DataRowState -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="b3367-448">対象テーブルにコピーする行が格納された <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b3367-448">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="rowState"><span data-ttu-id="b3367-449"><see cref="T:System.Data.DataRowState" /> 列挙体の値。</span><span class="sxs-lookup"><span data-stu-id="b3367-449">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span></span> <span data-ttu-id="b3367-450">行の状態に一致する行のみが、コピー先にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-450">Only rows matching the row state are copied to the destination.</span></span></param>
        <summary><span data-ttu-id="b3367-451"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> の非同期バージョン。指定された <see cref="T:System.Data.DataTable" /> から、特定の状態に一致する行だけを、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-451">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, which copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="b3367-452">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="b3367-452">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-453">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-453">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3367-454">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> を複数回呼び出す。</span><span class="sxs-lookup"><span data-stu-id="b3367-454">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-455">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3367-455">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-456"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> の実行中、接続は破棄されるか、または閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-456">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> execution.</span></span>  
  
<span data-ttu-id="b3367-457">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span><span class="sxs-lookup"><span data-stu-id="b3367-457">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="b3367-458">タスク オブジェクトで返された場合、接続プールのタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b3367-458">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="b3367-459">タスク オブジェクトで返されたため、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトはメソッドの実行前に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-459">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="b3367-460"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-460"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="b3367-461">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span><span class="sxs-lookup"><span data-stu-id="b3367-461">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="b3367-462">行がコピー先テーブルにコピーされる <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b3367-462">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="b3367-463">取り消し命令。</span><span class="sxs-lookup"><span data-stu-id="b3367-463">The cancellation instruction.</span></span> <span data-ttu-id="b3367-464">このパラメーターの <see cref="P:System.Threading.CancellationToken.None" /> 値により、このメソッドは <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> と同じになります。</span><span class="sxs-lookup"><span data-stu-id="b3367-464">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span></span></param>
        <summary><span data-ttu-id="b3367-465"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> の非同期バージョン。指定した <see cref="T:System.Data.DataTable" /> のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-465">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, which copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span>  
  
<span data-ttu-id="b3367-466">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="b3367-466">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="b3367-467">例外は、返されたタスク オブジェクトによって報告されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-467">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="b3367-468">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="b3367-468">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-469">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-469">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3367-470">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> を複数回呼び出す。</span><span class="sxs-lookup"><span data-stu-id="b3367-470">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-471">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3367-471">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-472"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> の実行中、接続は破棄されるか、または閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-472">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> execution.</span></span>  
  
<span data-ttu-id="b3367-473">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span><span class="sxs-lookup"><span data-stu-id="b3367-473">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="b3367-474">タスク オブジェクトで返された場合、接続プールのタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b3367-474">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="b3367-475">タスク オブジェクトで返されたため、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトはメソッドの実行前に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-475">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="b3367-476"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-476"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="b3367-477">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span><span class="sxs-lookup"><span data-stu-id="b3367-477">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.IDataReader reader, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.IDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::IDataReader ^ reader, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.IDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b3367-478">行がコピー先テーブルにコピーされる <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="b3367-478">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="b3367-479">取り消し命令。</span><span class="sxs-lookup"><span data-stu-id="b3367-479">The cancellation instruction.</span></span> <span data-ttu-id="b3367-480">このパラメーターの <see cref="P:System.Threading.CancellationToken.None" /> 値により、このメソッドは <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> と同じになります。</span><span class="sxs-lookup"><span data-stu-id="b3367-480">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span></span></param>
        <summary><span data-ttu-id="b3367-481"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> の非同期バージョン。指定した <see cref="T:System.Data.IDataReader" /> のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-481">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, which copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span>  
  
<span data-ttu-id="b3367-482">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="b3367-482">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="b3367-483">例外は、返されたタスク オブジェクトによって報告されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-483">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="b3367-484">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="b3367-484">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-485">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-485">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3367-486">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> を複数回呼び出す。</span><span class="sxs-lookup"><span data-stu-id="b3367-486">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-487">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3367-487">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-488"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> の実行中、接続は破棄されるか、または閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-488">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> execution.</span></span>  
  
<span data-ttu-id="b3367-489">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span><span class="sxs-lookup"><span data-stu-id="b3367-489">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="b3367-490">タスク オブジェクトで返された場合、接続プールのタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b3367-490">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="b3367-491">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトは、メソッドの実行前に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-491">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
<span data-ttu-id="b3367-492">完了した <see cref="T:System.Data.IDataReader" /> が返される前に、<see cref="T:System.Threading.Tasks.Task" /> が閉じられました。</span><span class="sxs-lookup"><span data-stu-id="b3367-492">The <see cref="T:System.Data.IDataReader" /> was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span></span>  
  
<span data-ttu-id="b3367-493">完了した <see cref="T:System.Data.IDataReader" /> が返される前に、<see cref="T:System.Threading.Tasks.Task" /> に関連付けられたコネクションが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="b3367-493">The <see cref="T:System.Data.IDataReader" />'s associated connection was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span></span>  
  
 <span data-ttu-id="b3367-494"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-494"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="b3367-495">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span><span class="sxs-lookup"><span data-stu-id="b3367-495">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Data.DataRowState rowState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Data::DataRowState rowState, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Data.DataRowState * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, rowState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="b3367-496">対象テーブルにコピーする行が格納された <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b3367-496">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="rowState"><span data-ttu-id="b3367-497"><see cref="T:System.Data.DataRowState" /> 列挙体の値。</span><span class="sxs-lookup"><span data-stu-id="b3367-497">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span></span> <span data-ttu-id="b3367-498">行の状態に一致する行のみが、コピー先にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="b3367-498">Only rows matching the row state are copied to the destination.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="b3367-499">取り消し命令。</span><span class="sxs-lookup"><span data-stu-id="b3367-499">The cancellation instruction.</span></span> <span data-ttu-id="b3367-500">このパラメーターの <see cref="P:System.Threading.CancellationToken.None" /> 値は、このメソッドを <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> と同じにします。</span><span class="sxs-lookup"><span data-stu-id="b3367-500">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span></span></param>
        <summary><span data-ttu-id="b3367-501">非同期バージョンの <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />。提供された <see cref="T:System.Data.DataTable" /> 内の提供された行の状態と一致する行のみを、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> のプロパティで指定されたコピー先のテーブルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="b3367-501">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, which copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span>  
  
<span data-ttu-id="b3367-502">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span><span class="sxs-lookup"><span data-stu-id="b3367-502">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="b3367-503">例外は、返されたタスク オブジェクトによって報告されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-503">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="b3367-504">非同期操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="b3367-504">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3367-505">SQL Server の .NET Framework Data Provider での非同期プログラミングの詳細については、「[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3367-505">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3367-506">タスクの完了前に、同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> を複数回呼び出す。</span><span class="sxs-lookup"><span data-stu-id="b3367-506">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-507">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3367-507">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="b3367-508"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> の実行中、接続は破棄されるか、または閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-508">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> execution.</span></span>  
  
<span data-ttu-id="b3367-509">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span><span class="sxs-lookup"><span data-stu-id="b3367-509">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="b3367-510">タスク オブジェクトで返された場合、接続プールのタイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b3367-510">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="b3367-511">タスク オブジェクトで返されたため、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトはメソッドの実行前に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="b3367-511">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="b3367-512"><see langword="Context Connection=true" /> は接続文字列で指定されます。</span><span class="sxs-lookup"><span data-stu-id="b3367-512"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="b3367-513">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span><span class="sxs-lookup"><span data-stu-id="b3367-513">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
