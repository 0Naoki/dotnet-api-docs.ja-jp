<Type Name="SqlBulkCopy" FullName="System.Data.SqlClient.SqlBulkCopy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a5fe1fba4a5f51260a44036cdf38a7da69fb2fb7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37673301" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlBulkCopy : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlBulkCopy extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlBulkCopy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlBulkCopy&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlBulkCopy sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SqlBulkCopy = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="90ebb-101">別のソースからのデータを SQL Server テーブルに効率的に一括読み込みすることができます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="90ebb-101">Lets you efficiently bulk load a SQL Server table with data from another source.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-102">Microsoft SQL Server には、という名前の人気の高いコマンド プロンプト ユーティリティが含まれています。 **bcp** 1 台のサーバーであるかどうか、またはサーバー間で、1 つのテーブルからデータを移動するためです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-102">Microsoft SQL Server includes a popular command-prompt utility named **bcp** for moving data from one table to another, whether on a single server or between servers.</span></span> <span data-ttu-id="90ebb-103"><xref:System.Data.SqlClient.SqlBulkCopy>クラスでは、同様の機能を提供するマネージ コード ソリューションを記述することができます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-103">The <xref:System.Data.SqlClient.SqlBulkCopy> class lets you write managed code solutions that provide similar functionality.</span></span> <span data-ttu-id="90ebb-104">SQL Server テーブル (たとえば INSERT ステートメント) にデータを読み込むには、他の方法はありますが、<xref:System.Data.SqlClient.SqlBulkCopy>上に大幅なパフォーマンスの利点を提供しています。</span><span class="sxs-lookup"><span data-stu-id="90ebb-104">There are other ways to load data into a SQL Server table (INSERT statements, for example), but <xref:System.Data.SqlClient.SqlBulkCopy> offers a significant performance advantage over them.</span></span>  
  
 <span data-ttu-id="90ebb-105"><xref:System.Data.SqlClient.SqlBulkCopy> クラスを使用すると、SQL Server のテーブルにのみデータを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-105">The <xref:System.Data.SqlClient.SqlBulkCopy> class can be used to write data only to SQL Server tables.</span></span> <span data-ttu-id="90ebb-106">ただし、データ ソースは SQL Server には制限はありません。データを読み込むことがあれば、任意のデータ ソースを使用できます、<xref:System.Data.DataTable>インスタンスまたは読み取りを<xref:System.Data.IDataReader>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="90ebb-106">However, the data source is not limited to SQL Server; any data source can be used, as long as the data can be loaded to a <xref:System.Data.DataTable> instance or read with a <xref:System.Data.IDataReader> instance.</span></span>  
  
 <span data-ttu-id="90ebb-107"><xref:System.Data.SqlClient.SqlBulkCopy> 失敗する一括読み込みを<xref:System.Data.DataTable>型の列<xref:System.Data.SqlTypes.SqlDateTime>SQL Server 2008 で SQL Server に型が日付/時刻型のいずれかの列を追加します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-107"><xref:System.Data.SqlClient.SqlBulkCopy> will fail when bulk loading a <xref:System.Data.DataTable> column of type <xref:System.Data.SqlTypes.SqlDateTime> into a SQL Server column whose type is one of the date/time types added in SQL Server 2008.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-108">次のコンソール アプリケーションでは、<xref:System.Data.SqlClient.SqlBulkCopy> クラスを使用してデータを読み込む方法について示しています。</span><span class="sxs-lookup"><span data-stu-id="90ebb-108">The following console application demonstrates how to load data using the <xref:System.Data.SqlClient.SqlBulkCopy> class.</span></span> <span data-ttu-id="90ebb-109">この例で、<xref:System.Data.SqlClient.SqlDataReader>からデータをコピーするために使用、 **Production.Product** SQL Server のテーブル**AdventureWorks**データベースを同じデータベース内の同等のテーブル。</span><span class="sxs-lookup"><span data-stu-id="90ebb-109">In this example, a <xref:System.Data.SqlClient.SqlDataReader> is used to copy data from the **Production.Product** table in the SQL Server **AdventureWorks** database to a similar table in the same database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-110">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-110">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-111">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-111">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-112">簡単かつ迅速に TRANSACT-SQL の使用が元と変換先のテーブルが同じ SQL Server インスタンスである場合は、`INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-112">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks BulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks BulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90ebb-113">
            <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-113">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="90ebb-114">既に接続の確立されている <see cref="T:System.Data.SqlClient.SqlConnection" /> のインスタンス。一括コピー操作を実行するために使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-114">The already open <see cref="T:System.Data.SqlClient.SqlConnection" /> instance that will be used to perform the bulk copy operation.</span>
          </span>
          <span data-ttu-id="90ebb-115">接続文字列が <see langword="Integrated Security = true" /> を使用しない場合は、<see cref="T:System.Data.SqlClient.SqlCredential" /> を使用すると、ユーザー ID とパスワードを接続文字列内のテキストとして指定する場合よりも安全に、ユーザー ID とパスワードを渡すことができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-115">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-116">既に接続の確立されている <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> のインスタンスを使用し、<see cref="T:System.Data.SqlClient.SqlConnection" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-116">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class using the specified open instance of <see cref="T:System.Data.SqlClient.SqlConnection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-117">ときに、接続が開いて既にあるため、<xref:System.Data.SqlClient.SqlBulkCopy>インスタンスが初期化されて、接続が後に開いたまま、<xref:System.Data.SqlClient.SqlBulkCopy>インスタンスが閉じています。</span><span class="sxs-lookup"><span data-stu-id="90ebb-117">Because the connection is already open when the <xref:System.Data.SqlClient.SqlBulkCopy> instance is initialized, the connection remains open after the <xref:System.Data.SqlClient.SqlBulkCopy> instance is closed.</span></span>  
  
 <span data-ttu-id="90ebb-118">場合、`connection`引数が null の場合、<xref:System.ArgumentNullException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-118">If the `connection` argument is null, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-119">次のコンソール アプリケーションでは、データの一括読み込みは既に開いている接続を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-119">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="90ebb-120">この例で、<xref:System.Data.SqlClient.SqlDataReader>からデータをコピーするために使用、 **Production.Product** SQL Server のテーブル**AdventureWorks**データベースを同じデータベース内の同等のテーブル。</span><span class="sxs-lookup"><span data-stu-id="90ebb-120">In this example, a <xref:System.Data.SqlClient.SqlDataReader> is used to copy data from the **Production.Product** table in the SQL Server **AdventureWorks** database to a similar table in the same database.</span></span> <span data-ttu-id="90ebb-121">この例は、デモンストレーション目的のみで提供されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-121">This example is for demonstration purposes only.</span></span> <span data-ttu-id="90ebb-122">使用すべきでない`SqlBulkCopy`実稼働アプリケーションで同じデータベース内の別の 1 つのテーブルからデータを移動します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-122">You would not use `SqlBulkCopy` to move data from one table to another in the same database in a production application.</span></span> <span data-ttu-id="90ebb-123">SQL Server; に配置されているソース データがないことに注意してください。読み取ることができる任意のデータ ソースを使用することができます、<xref:System.Data.IDataReader>に読み込まれたまたは、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-123">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-124">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-124">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-125">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-125">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-126">簡単かつ迅速に TRANSACT-SQL の使用が元と変換先のテーブルが同じ SQL Server インスタンスである場合は、`INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-126">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks BulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks BulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : string -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="90ebb-127">接続を定義する文字列。これによって確立された接続が、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> のインスタンスによって使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-127">The string defining the connection that will be opened for use by the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span>
          </span>
          <span data-ttu-id="90ebb-128">接続文字列が <see langword="Integrated Security = true" /> を使用しない場合は、<see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> または <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> と <see cref="T:System.Data.SqlClient.SqlCredential" /> を使用すると、ユーザー ID とパスワードを接続文字列内のテキストとして指定する場合よりも安全に、ユーザー ID とパスワードを渡すことができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-128">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> or <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> and <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-129">指定された <paramref name="connectionString" /> に基づいて、<see cref="T:System.Data.SqlClient.SqlConnection" /> の新しいインスタンスを初期化し、接続を確立します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-129">Initializes and opens a new instance of <see cref="T:System.Data.SqlClient.SqlConnection" /> based on the supplied <paramref name="connectionString" />.</span>
          </span>
          <span data-ttu-id="90ebb-130">このコンストラクターは、<see cref="T:System.Data.SqlClient.SqlConnection" /> を使用して、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-130">The constructor uses the <see cref="T:System.Data.SqlClient.SqlConnection" /> to initialize a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-131">接続は、一括コピー操作の最後に自動的に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-131">The connection is automatically closed at the end of the bulk copy operation.</span></span>  
  
 <span data-ttu-id="90ebb-132">場合`connectionString`が null の場合、<xref:System.ArgumentNullException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-132">If `connectionString` is null, an <xref:System.ArgumentNullException> is thrown.</span></span> <span data-ttu-id="90ebb-133">場合`connectionString`は空の文字列、<xref:System.ArgumentException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-133">If `connectionString` is an empty string, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-134">次のコンソール アプリケーションでは、文字列として指定する接続を使用して一括で読み込む方法を示します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-134">The following console application demonstrates how to bulk load data by using a connection specified as a string.</span></span> <span data-ttu-id="90ebb-135">接続を閉じるときに自動的に、<xref:System.Data.SqlClient.SqlBulkCopy>インスタンスが閉じています。</span><span class="sxs-lookup"><span data-stu-id="90ebb-135">The connection is automatically closed when the <xref:System.Data.SqlClient.SqlBulkCopy> instance is closed.</span></span>  
  
 <span data-ttu-id="90ebb-136">この例では、ソース データが最初に SQL Server テーブルから読み取る、<xref:System.Data.SqlClient.SqlDataReader>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="90ebb-136">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="90ebb-137">ソース データを SQL Server; 上にある必要はありません。読み取ることができる任意のデータ ソースを使用することができます、<xref:System.Data.IDataReader>に読み込まれたまたは、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-137">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-138">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-138">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-139">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-139">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-140">簡単かつ迅速に TRANSACT-SQL の使用が元と変換先のテーブルが同じ SQL Server インスタンスである場合は、`INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-140">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (string connectionString, System.Data.SqlClient.SqlBulkCopyOptions copyOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, valuetype System.Data.SqlClient.SqlBulkCopyOptions copyOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, copyOptions As SqlBulkCopyOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::String ^ connectionString, System::Data::SqlClient::SqlBulkCopyOptions copyOptions);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : string * System.Data.SqlClient.SqlBulkCopyOptions -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy (connectionString, copyOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="copyOptions" Type="System.Data.SqlClient.SqlBulkCopyOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="90ebb-141">接続を定義する文字列。これによって確立された接続が、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> のインスタンスによって使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-141">The string defining the connection that will be opened for use by the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span>
          </span>
          <span data-ttu-id="90ebb-142">接続文字列が <see langword="Integrated Security = true" /> を使用しない場合は、<see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> または <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> と <see cref="T:System.Data.SqlClient.SqlCredential" /> を使用すると、ユーザー ID とパスワードを接続文字列内のテキストとして指定する場合よりも安全に、ユーザー ID とパスワードを渡すことができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-142">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> or <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> and <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span>
          </span>
        </param>
        <param name="copyOptions">
          <span data-ttu-id="90ebb-143">コピー先のテーブルにコピーするデータ ソース行を決定する、<see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> 列挙型の値の組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-143">A combination of values from the <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> enumeration that determines which data source rows are copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-144">指定された <paramref name="connectionString" /> に基づいて、<see cref="T:System.Data.SqlClient.SqlConnection" /> の新しいインスタンスを初期化し、接続を確立します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-144">Initializes and opens a new instance of <see cref="T:System.Data.SqlClient.SqlConnection" /> based on the supplied <paramref name="connectionString" />.</span>
          </span>
          <span data-ttu-id="90ebb-145">このコンストラクターは、<see cref="T:System.Data.SqlClient.SqlConnection" /> を使用して、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-145">The constructor uses that <see cref="T:System.Data.SqlClient.SqlConnection" /> to initialize a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span>
          </span>
          <span data-ttu-id="90ebb-146">
            <see cref="T:System.Data.SqlClient.SqlConnection" /> のインスタンスは、<paramref name="copyOptions" /> パラメーターに指定されたオプションに従って動作します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-146">The <see cref="T:System.Data.SqlClient.SqlConnection" /> instance behaves according to options supplied in the <paramref name="copyOptions" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-147">すべての一括コピー オプションについて詳細な情報を取得できます、<xref:System.Data.SqlClient.SqlBulkCopyOptions>トピック。</span><span class="sxs-lookup"><span data-stu-id="90ebb-147">You can obtain detailed information about all the bulk copy options in the <xref:System.Data.SqlClient.SqlBulkCopyOptions> topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-148">次のコンソール アプリケーションでは、文字列として指定された接続を使用して、一括読み込みを実行する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-148">The following console application demonstrates how to perform a bulk load by using a connection specified as a string.</span></span> <span data-ttu-id="90ebb-149">変換先テーブルを読み込むときに、ソース テーブルの id 列の値を使用するオプションが設定されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-149">An option is set to use the value in the identity column of the source table when you load the destination table.</span></span> <span data-ttu-id="90ebb-150">この例では、ソース データが最初に SQL Server テーブルから読み取る、<xref:System.Data.SqlClient.SqlDataReader>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="90ebb-150">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="90ebb-151">ソース テーブルと変換先テーブルには、Id 列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-151">The source table and destination table each include an Identity column.</span></span> <span data-ttu-id="90ebb-152">既定で新しい値を**Identity**行が追加される各変換先テーブルの列が生成されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-152">By default, a new value for the **Identity** column is generated in the destination table for each row added.</span></span> <span data-ttu-id="90ebb-153">この例で、オプションが設定を使用する一括読み込み処理を強制する、接続が開かれたときに、 **Identity**代わりに、ソース テーブルから値します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-153">In this example, an option is set when the connection is opened that forces the bulk load process to use the **Identity** values from the source table instead.</span></span> <span data-ttu-id="90ebb-154">オプションが、サンプルを実行する方法、一括読み込みの動作を変更する方法を表示する、 **dbo します。BulkCopyDemoMatchingColumns**空テーブル。</span><span class="sxs-lookup"><span data-stu-id="90ebb-154">To see how the option changes the way the bulk load works, run the sample with the **dbo.BulkCopyDemoMatchingColumns** table empty.</span></span> <span data-ttu-id="90ebb-155">すべての行は、ソースから読み込みます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-155">All rows load from the source.</span></span> <span data-ttu-id="90ebb-156">テーブルを空にせずに、サンプルをもう一度し実行します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-156">Then run the sample again without emptying the table.</span></span> <span data-ttu-id="90ebb-157">例外がスローされ、コードは、主キー制約違反のための行が追加されなかったことを通知するコンソールにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-157">An exception is thrown and the code writes a message to the console notifying you that rows weren't added because of primary key constraint violations.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-158">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-158">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-159">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-159">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-160">簡単かつ迅速に TRANSACT-SQL の使用が元と変換先のテーブルが同じ SQL Server インスタンスである場合は、`INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-160">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.KeepIdentity#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.KeepIdentity/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.KeepIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.KeepIdentity/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlBulkCopyOptions copyOptions, System.Data.SqlClient.SqlTransaction externalTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlConnection connection, valuetype System.Data.SqlClient.SqlBulkCopyOptions copyOptions, class System.Data.SqlClient.SqlTransaction externalTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As SqlConnection, copyOptions As SqlBulkCopyOptions, externalTransaction As SqlTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlBulkCopyOptions copyOptions, System::Data::SqlClient::SqlTransaction ^ externalTransaction);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlBulkCopyOptions * System.Data.SqlClient.SqlTransaction -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy (connection, copyOptions, externalTransaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="copyOptions" Type="System.Data.SqlClient.SqlBulkCopyOptions" />
        <Parameter Name="externalTransaction" Type="System.Data.SqlClient.SqlTransaction" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="90ebb-161">既に接続の確立されている <see cref="T:System.Data.SqlClient.SqlConnection" /> のインスタンス。一括コピーを実行するために使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-161">The already open <see cref="T:System.Data.SqlClient.SqlConnection" /> instance that will be used to perform the bulk copy.</span>
          </span>
          <span data-ttu-id="90ebb-162">接続文字列が <see langword="Integrated Security = true" /> を使用しない場合は、<see cref="T:System.Data.SqlClient.SqlCredential" /> を使用すると、ユーザー ID とパスワードを接続文字列内のテキストとして指定する場合よりも安全に、ユーザー ID とパスワードを渡すことができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-162">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span>
          </span>
        </param>
        <param name="copyOptions">
          <span data-ttu-id="90ebb-163">コピー先のテーブルにコピーするデータ ソース行を決定する、<see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> 列挙型の値の組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-163">A combination of values from the <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> enumeration that determines which data source rows are copied to the destination table.</span>
          </span>
        </param>
        <param name="externalTransaction">
          <span data-ttu-id="90ebb-164">一括コピーを実行する既存の <see cref="T:System.Data.SqlClient.SqlTransaction" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-164">An existing <see cref="T:System.Data.SqlClient.SqlTransaction" /> instance under which the bulk copy will occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-165">既に接続の確立されている <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> のインスタンスを使用し、<see cref="T:System.Data.SqlClient.SqlConnection" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-165">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class using the supplied existing open instance of <see cref="T:System.Data.SqlClient.SqlConnection" />.</span>
          </span>
          <span data-ttu-id="90ebb-166">
            <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> のインスタンスは、<paramref name="copyOptions" /> パラメーターに指定されたオプションに従って動作します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-166">The <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance behaves according to options supplied in the <paramref name="copyOptions" /> parameter.</span>
          </span>
          <span data-ttu-id="90ebb-167">指定された <see cref="T:System.Data.SqlClient.SqlTransaction" /> が null でなければ、トランザクション内でコピー操作が実行されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-167">If a non-null <see cref="T:System.Data.SqlClient.SqlTransaction" /> is supplied, the copy operations will be performed within that transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-168">オプションがあります。 場合`UseInternalTransaction`と`externalTransaction`引数が null でない、 **InvalidArgumentException**がスローされます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-168">If options include `UseInternalTransaction` and the `externalTransaction` argument is not null, an **InvalidArgumentException** is thrown.</span></span>  
  
 <span data-ttu-id="90ebb-169">使用する方法を示す例について`SqlBulkCopy`トランザクションでは、次を参照してください。[トランザクションとバルク コピー操作](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-169">For examples demonstrating how to use `SqlBulkCopy` in a transaction, see [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchSize">
      <MemberSignature Language="C#" Value="public int BatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BatchSize : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.BatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ebb-170">各バッチ内の行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-170">Number of rows in each batch.</span>
          </span>
          <span data-ttu-id="90ebb-171">各バッチの最後に、バッチの行がサーバーに送信されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-171">At the end of each batch, the rows in the batch are sent to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ebb-172">
            <see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /> プロパティの整数値。値が設定されなかった場合はゼロ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-172">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /> property, or zero if no value has been set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-173">バッチが完了すると<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>行が処理された、または変換先のデータ ソースに送信する行がありません。</span><span class="sxs-lookup"><span data-stu-id="90ebb-173">A batch is complete when <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> rows have been processed or there are no more rows to send to the destination data source.</span></span>  
  
 <span data-ttu-id="90ebb-174">(既定値) が各を示すゼロ<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>操作が 1 つのバッチ。</span><span class="sxs-lookup"><span data-stu-id="90ebb-174">Zero (the default) indicates that each <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is a single batch.</span></span>  
  
 <span data-ttu-id="90ebb-175">場合、<xref:System.Data.SqlClient.SqlBulkCopy>インスタンスなしで宣言されていますが、<xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction>オプション実際には、行は、サーバーに送信されます<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>時間がないトランザクション関連のアクションで行が取得されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-175">If the <xref:System.Data.SqlClient.SqlBulkCopy> instance has been declared without the <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> option in effect, rows are sent to the server <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> rows at a time, but no transaction-related action is taken.</span></span> <span data-ttu-id="90ebb-176">場合<xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction>は実際には行の各バッチが個別のトランザクションとして挿入されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-176">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is in effect, each batch of rows is inserted as a separate transaction.</span></span>  
  
 <span data-ttu-id="90ebb-177"><xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>プロパティは、いつでもでも設定できます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-177">The <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> property can be set at any time.</span></span> <span data-ttu-id="90ebb-178">一括コピーが進行中の場合、前のバッチ サイズに応じて、現在のバッチのサイズします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-178">If a bulk copy is already in progress, the current batch is sized according to the previous batch size.</span></span> <span data-ttu-id="90ebb-179">以降のバッチでは、新しいサイズを使用します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-179">Subsequent batches use the new size.</span></span> <span data-ttu-id="90ebb-180">場合、 <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> 0 は、最初と中に変更された、<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>操作が既に進行中、操作が 1 つのバッチとしてデータを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-180">If the <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> is initially zero and changed while a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is already in progress, that operation loads the data as a single batch.</span></span> <span data-ttu-id="90ebb-181">その後<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>で同じ操作<xref:System.Data.SqlClient.SqlBulkCopy>インスタンスを使用して、新しい<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-181">Any subsequent <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operations on the same <xref:System.Data.SqlClient.SqlBulkCopy> instance use the new <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-182">次のコンソール アプリケーションでは、50 行のバッチに一括で読み込む方法を示します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-182">The following console application demonstrates how to bulk load data in batches of 50 rows.</span></span> <span data-ttu-id="90ebb-183">示したサンプルをどのように<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>トランザクションとの連携を参照してください[トランザクションとバルク コピー操作](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-183">For an example illustrating how <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> works with a transaction, see [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md).</span></span>  
  
 <span data-ttu-id="90ebb-184">この例では、ソース データが最初に SQL Server テーブルから読み取る、<xref:System.Data.SqlClient.SqlDataReader>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="90ebb-184">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="90ebb-185">ソース データを SQL Server; 上にある必要はありません。読み取ることができる任意のデータ ソースを使用することができます、<xref:System.Data.IDataReader>に読み込まれたまたは、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-185">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-186">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-186">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-187">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-187">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-188">簡単かつ迅速に TRANSACT-SQL の使用が元と変換先のテーブルが同じ SQL Server インスタンスである場合は、`INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-188">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.BatchSize#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.BatchSize/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.BatchSize#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.BatchSize/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BulkCopyTimeout">
      <MemberSignature Language="C#" Value="public int BulkCopyTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BulkCopyTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property BulkCopyTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BulkCopyTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BulkCopyTimeout : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ebb-189">タイムアウトになる前に操作が完了するまでの秒数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-189">Number of seconds for the operation to complete before it times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ebb-190">
            <see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /> プロパティの整数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-190">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /> property.</span>
          </span>
          <span data-ttu-id="90ebb-191">既定値は 30 秒です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-191">The default is 30 seconds.</span>
          </span>
          <span data-ttu-id="90ebb-192">値 0 は無制限を意味します。一括コピーは無期限に待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-192">A value of 0 indicates no limit; the bulk copy will wait indefinitely.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-193">操作がタイムアウトになる場合、トランザクションをコミットしないと、変換先テーブルからすべての行のコピーが削除されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-193">If the operation does time out, the transaction is not committed and all copied rows are removed from the destination table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-194">次のコンソール アプリケーションは、60 秒間にタイムアウトを変更する方法を示します一括データの読み込みをする場合。</span><span class="sxs-lookup"><span data-stu-id="90ebb-194">The following console application demonstrates how to modify the time-out to 60 seconds when bulk loading data.</span></span>  
  
 <span data-ttu-id="90ebb-195">この例では、ソース データが最初に SQL Server テーブルから読み取る、<xref:System.Data.SqlClient.SqlDataReader>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="90ebb-195">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="90ebb-196">ソース データを SQL Server; 上にある必要はありません。読み取ることができる任意のデータ ソースを使用することができます、<xref:System.Data.IDataReader>に読み込まれたまたは、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-196">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-197">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-197">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-198">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-198">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-199">簡単かつ迅速に使用元と変換先のテーブルが同じ SQL Server インスタンスにいる場合は、 [!INCLUDE[tsql](~/includes/tsql-md.md)] `INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-199">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a [!INCLUDE[tsql](~/includes/tsql-md.md)]`INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.Timeout#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Timeout/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Timeout/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="sqlBulkCopy.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90ebb-200">
            <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> インスタンスを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-200">Closes the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-201">呼び出した後、<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>上、<xref:System.Data.SqlClient.SqlBulkCopy>オブジェクト、その他の操作が成功しません。</span><span class="sxs-lookup"><span data-stu-id="90ebb-201">After you call a <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> on the <xref:System.Data.SqlClient.SqlBulkCopy> object, no other operation will succeed.</span></span> <span data-ttu-id="90ebb-202">呼び出し、<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>メソッドがスローされます、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-202">Calls to the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="90ebb-203">呼び出す、<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>からメソッド、<xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied>イベントによって、<xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-203">Calling the <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> method from the <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event causes an <xref:System.InvalidOperationException> to be thrown.</span></span>  
  
 <span data-ttu-id="90ebb-204">開いているに注意してください<xref:System.Data.SqlClient.SqlBulkCopy>の最後のインスタンスが暗黙的に閉じられて、`using`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-204">Note that open <xref:System.Data.SqlClient.SqlBulkCopy> instances are closed implicitly at the end of a `using` block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-205">次の例は、同じ<xref:System.Data.SqlClient.SqlBulkCopy>2 つの変換先テーブルに販売注文とその関連する詳細を追加するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="90ebb-205">The following example uses the same <xref:System.Data.SqlClient.SqlBulkCopy> instance to add sales orders and their associated details to two destination tables.</span></span> <span data-ttu-id="90ebb-206">**AdventureWorks** sales order テーブルが大きく、サンプルは、特定のアカウント番号で注文のみを読み取り、変換先テーブルに一括コピーして詳細。</span><span class="sxs-lookup"><span data-stu-id="90ebb-206">Because the **AdventureWorks** sales order tables are large, the sample reads only orders placed by a certain account number and bulk copies those orders and details to the destination tables.</span></span> <span data-ttu-id="90ebb-207"><xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>メソッドは、両方の一括コピー操作が完了した後にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-207">The <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> method is used only after both bulk copy operations are complete.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-208">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-208">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-209">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-209">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-210">簡単かつ迅速に TRANSACT-SQL の使用が元と変換先のテーブルが同じ SQL Server インスタンスである場合は、`INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-210">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.OrdersDetails#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.OrdersDetails/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.OrdersDetails#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.OrdersDetails/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMappings">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMappingCollection ColumnMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlBulkCopyColumnMappingCollection ColumnMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnMappings As SqlBulkCopyColumnMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlBulkCopyColumnMappingCollection ^ ColumnMappings { System::Data::SqlClient::SqlBulkCopyColumnMappingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnMappings : System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" Usage="System.Data.SqlClient.SqlBulkCopy.ColumnMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ebb-211">
            <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> は項目のコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-211">Returns a collection of <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> items.</span>
          </span>
          <span data-ttu-id="90ebb-212">列マッピングは、データ ソース中の列とターゲット中の列の間の関係を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-212">Column mappings define the relationships between columns in the data source and columns in the destination.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ebb-213">列マッピングのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-213">A collection of column mappings.</span>
          </span>
          <span data-ttu-id="90ebb-214">既定では、空のコレクションです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-214">By default, it is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-215">データ ソースと変換先テーブルに含まれる列数の同じと、データ ソース内の各ソース列の序数位置に対応する先の列の序数位置が一致する場合、<xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>コレクションが必要ではありません。</span><span class="sxs-lookup"><span data-stu-id="90ebb-215">If the data source and the destination table have the same number of columns, and the ordinal position of each source column within the data source matches the ordinal position of the corresponding destination column, the <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection is unnecessary.</span></span> <span data-ttu-id="90ebb-216">ただし、列数が異なる場合、または序数の位置に一貫性がありません、する必要がありますを使用して、<xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>を正しい列にデータがコピーされることを確認します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-216">However, if the column counts differ, or the ordinal positions are not consistent, you must use <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> to make sure that data is copied into the correct columns.</span></span>  
  
 <span data-ttu-id="90ebb-217">一括コピー操作の実行中に、このコレクションにアクセスできるが、変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="90ebb-217">During the execution of a bulk copy operation, this collection can be accessed, but it cannot be changed.</span></span> <span data-ttu-id="90ebb-218">変更しようとすると、スロー、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-218">Any attempt to change it will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />
      </Docs>
    </Member>
    <Member MemberName="DestinationTableName">
      <MemberSignature Language="C#" Value="public string DestinationTableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DestinationTableName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationTableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DestinationTableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationTableName : string with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.DestinationTableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ebb-219">サーバー上の宛先テーブルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-219">Name of the destination table on the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ebb-220">
            <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> プロパティの文字列値。または、値が指定されていない場合は null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-220">The string value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property, or null if none as been supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-221">場合<xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A>が設定されていない場合に<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>が呼び出される、<xref:System.ArgumentNullException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-221">If <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> has not been set when <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> is called, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="90ebb-222">場合<xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A>が変更されたときに、<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>操作が実行されている、変更では、現在の操作には影響しません。</span><span class="sxs-lookup"><span data-stu-id="90ebb-222">If <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> is modified while a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is running, the change does not affect the current operation.</span></span> <span data-ttu-id="90ebb-223">新しい<xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A>値が、次回使用、<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-223">The new <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> value is used the next time a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called.</span></span>  
  
 <span data-ttu-id="90ebb-224"><xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> 3 つの部分名は、(`<database>.<owningschema>.<name>`)。</span><span class="sxs-lookup"><span data-stu-id="90ebb-224"><xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> is a three-part name (`<database>.<owningschema>.<name>`).</span></span> <span data-ttu-id="90ebb-225">選択した場合、そのデータベースと所有しているスキーマでテーブル名を修飾することができます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-225">You can qualify the table name with its database and owning schema if you choose.</span></span> <span data-ttu-id="90ebb-226">ただし、テーブル名がアンダー スコア (「_」) またはその他の特殊文字を使用する場合は、ように角かっこで囲んでを使用して、名前をエスケープする必要があります (`[<database>.<owningschema>.<name_01>]`)。</span><span class="sxs-lookup"><span data-stu-id="90ebb-226">However, if the table name uses an underscore ("_") or any other special characters, you must escape the name using surrounding brackets as in (`[<database>.<owningschema>.<name_01>]`).</span></span> <span data-ttu-id="90ebb-227">詳細については、SQL Server オンライン ブックの「識別子」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="90ebb-227">For more information, see "Identifiers" in SQL Server Books Online.</span></span>  
  
 <span data-ttu-id="90ebb-228">などの値を使用して、一時テーブルにデータを一括コピーすることができます`tempdb..#table`または`tempdb.<owner>.#table`の<xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="90ebb-228">You can bulk-copy data to a temporary table by using a value such as `tempdb..#table` or `tempdb.<owner>.#table` for the <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-229">次のコンソール アプリケーションでは、データの一括読み込みは既に開いている接続を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-229">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="90ebb-230">対象のテーブルが内のテーブル、 **AdventureWorks**データベース。</span><span class="sxs-lookup"><span data-stu-id="90ebb-230">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="90ebb-231">この例で、接続が最初に SQL Server テーブルからデータを読み取る使用、<xref:System.Data.SqlClient.SqlDataReader>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="90ebb-231">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="90ebb-232">ソース データを SQL Server; 上にある必要はありません。読み取ることができる任意のデータ ソースを使用することができます、<xref:System.Data.IDataReader>に読み込まれたまたは、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-232">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-233">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-233">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-234">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-234">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-235">簡単かつ迅速に TRANSACT-SQL の使用が元と変換先のテーブルが同じ SQL Server インスタンスである場合は、`INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-235">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableStreaming">
      <MemberSignature Language="C#" Value="public bool EnableStreaming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableStreaming" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableStreaming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableStreaming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableStreaming : bool with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.EnableStreaming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ebb-236">
            <see cref="T:System.Data.IDataReader" /> オブジェクトからデータをストリーミングする <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトを有効または無効にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-236">Enables or disables a <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object to stream data from an <see cref="T:System.Data.IDataReader" /> object</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ebb-237">
            <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトが <see cref="T:System.Data.IDataReader" /> オブジェクトからデータをストリーミングできる場合は <see langword="true" />。それ以外の場合は false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-237">
              <see langword="true" /> if a <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object can stream data from an <see cref="T:System.Data.IDataReader" /> object; otherwise, false.</span>
          </span>
          <span data-ttu-id="90ebb-238">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-238">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-239">ときに<xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A>は`true`、<xref:System.Data.SqlClient.SqlBulkCopy>から読み取り、<xref:System.Data.IDataReader>オブジェクトを使用して<xref:System.Data.CommandBehavior.SequentialAccess>、メモリ使用量の最適化を使用して、<xref:System.Data.IDataReader>ストリーミング機能。</span><span class="sxs-lookup"><span data-stu-id="90ebb-239">When <xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A> is `true`, <xref:System.Data.SqlClient.SqlBulkCopy> reads from an <xref:System.Data.IDataReader> object using <xref:System.Data.CommandBehavior.SequentialAccess>, optimizing memory usage by using the <xref:System.Data.IDataReader> streaming capabilities.</span></span> <span data-ttu-id="90ebb-240">False に設定されている場合、<xref:System.Data.SqlClient.SqlBulkCopy>クラスによって返されるすべてのデータを読み込み、 <xref:System.Data.IDataReader> SQL Server または SQL Azure に送信する前にメモリにオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="90ebb-240">When it’s set to false, the <xref:System.Data.SqlClient.SqlBulkCopy> class loads all the data returned by the <xref:System.Data.IDataReader> object into memory before sending it to SQL Server or SQL Azure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyAfter">
      <MemberSignature Language="C#" Value="public int NotifyAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NotifyAfter" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NotifyAfter { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyAfter : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.NotifyAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ebb-241">通知イベントを生成する前に処理する行の数を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-241">Defines the number of rows to be processed before generating a notification event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ebb-242">
            <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> プロパティの整数値。プロパティが設定されていない場合はゼロ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-242">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> property, or zero if the property has not been set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-243">このプロパティは、一括コピー操作の進行状況を示すユーザー インターフェイス コンポーネント向けです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-243">This property is designed for user interface components that illustrate the progress of a bulk copy operation.</span></span> <span data-ttu-id="90ebb-244">通知イベントを生成する前に処理する行の数を示します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-244">It indicates the number of rows to be processed before generating a notification event.</span></span> <span data-ttu-id="90ebb-245"><xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A>が進行中で、一括コピー操作中であっても、いつでもでもプロパティを設定できます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-245">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property can be set at any time, even while a bulk copy operation is underway.</span></span> <span data-ttu-id="90ebb-246">一括コピー操作中に行われた変更は、[次へ] の通知後にも反映されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-246">Changes made during a bulk copy operation take effect after the next notification.</span></span> <span data-ttu-id="90ebb-247">新しい設定は、同じインスタンス上の後続のすべての操作に適用されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-247">The new setting applies to all subsequent operations on the same instance.</span></span>  
  
 <span data-ttu-id="90ebb-248">場合<xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A>0 より小さい数値に設定するには、<xref:System.ArgumentOutOfRangeException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-248">If <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> is set to a number less than zero, an <xref:System.ArgumentOutOfRangeException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-249">次のコンソール アプリケーションでは、データの一括読み込みは既に開いている接続を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-249">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="90ebb-250"><xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A>ごとの 50 行がテーブルにコピーされた後、イベント ハンドラーが呼び出されるように、プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-250">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property is set so that the event handler is called after every 50 rows copied to the table.</span></span>  
  
 <span data-ttu-id="90ebb-251">この例で、接続が最初に SQL Server テーブルからデータを読み取る使用、<xref:System.Data.SqlClient.SqlDataReader>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="90ebb-251">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="90ebb-252">一括コピー データを 2 番目の接続を開きます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-252">Then a second connection is opened to bulk copy the data.</span></span> <span data-ttu-id="90ebb-253">SQL Server; に配置されているソース データがないことに注意してください。読み取ることができる任意のデータ ソースを使用することができます、<xref:System.Data.IDataReader>に読み込まれたまたは、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-253">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-254">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-254">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-255">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-255">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-256">簡単かつ迅速に TRANSACT-SQL の使用が元と変換先のテーブルが同じ SQL Server インスタンスである場合は、`INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-256">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlRowsCopied">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowsCopiedEventHandler SqlRowsCopied;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowsCopiedEventHandler SqlRowsCopied" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SqlRowsCopied As SqlRowsCopiedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlRowsCopiedEventHandler ^ SqlRowsCopied;" />
      <MemberSignature Language="F#" Value="member this.SqlRowsCopied : System.Data.SqlClient.SqlRowsCopiedEventHandler " Usage="member this.SqlRowsCopied : System.Data.SqlClient.SqlRowsCopiedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowsCopiedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ebb-257">
            <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> プロパティに指定された行数が処理されるごとに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-257">Occurs every time that the number of rows specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> property have been processed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-258">なお、設定の<xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A>と<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>は独立しています。</span><span class="sxs-lookup"><span data-stu-id="90ebb-258">Note that the settings of <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> and <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> are independent.</span></span> <span data-ttu-id="90ebb-259">受信確認を<xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied>イベントはすべての行がサーバーに送信またはコミットされたことを意味しません。</span><span class="sxs-lookup"><span data-stu-id="90ebb-259">Receipt of a <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event does not imply that any rows have been sent to the server or committed.</span></span>  
  
 <span data-ttu-id="90ebb-260">SqlBulkCopy.Close を呼び出すことはできません (<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>) または SqlConnection.Close (<xref:System.Data.SqlClient.SqlConnection.Close%2A>) このイベントから。</span><span class="sxs-lookup"><span data-stu-id="90ebb-260">You cannot call SqlBulkCopy.Close (<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>) or SqlConnection.Close (<xref:System.Data.SqlClient.SqlConnection.Close%2A>) from this event.</span></span> <span data-ttu-id="90ebb-261">これにより、<xref:System.InvalidOperationException>スローされると、<xref:System.Data.SqlClient.SqlBulkCopy>オブジェクトの状態は変更されません。</span><span class="sxs-lookup"><span data-stu-id="90ebb-261">Doing this will cause an <xref:System.InvalidOperationException> being thrown, and the <xref:System.Data.SqlClient.SqlBulkCopy> object state will not change.</span></span> <span data-ttu-id="90ebb-262">ユーザーが、イベントから、操作をキャンセルする場合、<xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A>のプロパティ、<xref:System.Data.SqlClient.SqlRowsCopiedEventArgs>ことができます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-262">If the user wants to cancel the operation from the event, the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> property of the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs> can be used.</span></span> <span data-ttu-id="90ebb-263">(を参照してください[トランザクションとバルク コピー操作](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)を使用する例については、<xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A>プロパティです)。</span><span class="sxs-lookup"><span data-stu-id="90ebb-263">(See [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md) for examples that use the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> property.)</span></span>  
  
 <span data-ttu-id="90ebb-264">一括コピー操作の実行中に、接続でトランザクションのアクティビティなどの操作はサポートされていませんし、使用中に、同じ接続を使用しないことをお勧め、<xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied>イベント。</span><span class="sxs-lookup"><span data-stu-id="90ebb-264">No action, such as transaction activity, is supported in the connection during the execution of the bulk copy operation, and it is recommended that you not use the same connection used during the <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event.</span></span> <span data-ttu-id="90ebb-265">ただし、別の接続を開くことができます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-265">However, you can open a different connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-266">次のコンソール アプリケーションでは、データの一括読み込みは既に開いている接続を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-266">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="90ebb-267"><xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A>ごとの 50 行がテーブルにコピーされた後、イベント ハンドラーが呼び出されるように、プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-267">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property is set so that the event handler is called after every 50 rows copied to the table.</span></span>  
  
 <span data-ttu-id="90ebb-268">この例で、接続が最初に SQL Server テーブルからデータを読み取る使用、<xref:System.Data.SqlClient.SqlDataReader>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="90ebb-268">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="90ebb-269">SQL Server; に配置されているソース データがないことに注意してください。読み取ることができる任意のデータ ソースを使用することができます、<xref:System.Data.IDataReader>に読み込まれたまたは、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-269">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-270">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-270">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-271">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-271">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-272">簡単かつ迅速に TRANSACT-SQL の使用が元と変換先のテーブルが同じ SQL Server インスタンスである場合は、`INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-272">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90ebb-273">
            <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-273">Releases all resources used by the current instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-274">`Dispose` を使い終わったら <xref:System.Data.SqlClient.SqlBulkCopy> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-274">Call `Dispose` when you are finished using the <xref:System.Data.SqlClient.SqlBulkCopy>.</span></span> <span data-ttu-id="90ebb-275">`Dispose` メソッドによって、<xref:System.Data.SqlClient.SqlBulkCopy> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="90ebb-275">The `Dispose` method leaves the <xref:System.Data.SqlClient.SqlBulkCopy> in an unusable state.</span></span> <span data-ttu-id="90ebb-276">呼び出した後`Dispose`へのすべての参照を解放する必要があります、<xref:System.Data.SqlClient.SqlBulkCopy>ガベージ コレクターがメモリをクリアできるようにする、<xref:System.Data.SqlClient.SqlBulkCopy>によって占有されていた。</span><span class="sxs-lookup"><span data-stu-id="90ebb-276">After calling `Dispose`, you must release all references to the <xref:System.Data.SqlClient.SqlBulkCopy> so the garbage collector can reclaim the memory that the <xref:System.Data.SqlClient.SqlBulkCopy> was occupying.</span></span>  
  
 <span data-ttu-id="90ebb-277">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-277">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90ebb-278">`Dispose` への最後の参照を解放する前に、必ず <xref:System.Data.SqlClient.SqlBulkCopy> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="90ebb-278">Always call `Dispose` before you release your last reference to the <xref:System.Data.SqlClient.SqlBulkCopy>.</span></span> <span data-ttu-id="90ebb-279">そうしないと、ガベージ コレクターが <xref:System.Data.SqlClient.SqlBulkCopy> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="90ebb-279">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.SqlClient.SqlBulkCopy> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToServer">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90ebb-280">データ ソースのすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-280">Copies all rows from a data source to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-281">場合、複数のアクティブな結果セット (MARS) が無効になっている<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>ビジー状態の接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-281">If multiple active result sets (MARS) is disabled, <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> makes the connection busy.</span></span> <span data-ttu-id="90ebb-282">MARS が有効になっている場合への呼び出しをインターリーブできます<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>同じ接続での他のコマンドを使用します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-282">If MARS is enabled, you can interleave calls to <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> with other commands in the same connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (reader As DbDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.Common.DbDataReader -&gt; unit" Usage="sqlBulkCopy.WriteToServer reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="90ebb-283">対象テーブルにコピーする行が格納された <see cref="T:System.Data.Common.DbDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-283">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-284">指定した <see cref="T:System.Data.Common.DbDataReader" /> 配列のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-284">Copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataRow[] rows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataRow[] rows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (rows As DataRow())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(cli::array &lt;System::Data::DataRow ^&gt; ^ rows);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataRow[] -&gt; unit" Usage="sqlBulkCopy.WriteToServer rows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="rows">
          <span data-ttu-id="90ebb-285">対象テーブルにコピーされる <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-285">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-286">指定した <see cref="T:System.Data.DataRow" /> 配列のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-286">Copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-287">一括コピー操作の進行中は、関連付けられている変換先<xref:System.Data.SqlClient.SqlConnection>は、ビジー状態のサービスとの接続で他の操作を実行されません。</span><span class="sxs-lookup"><span data-stu-id="90ebb-287">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="90ebb-288"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>コレクションから、マップ、<xref:System.Data.DataRow>先のデータベース テーブルに列。</span><span class="sxs-lookup"><span data-stu-id="90ebb-288">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataRow> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-289">次のコンソール アプリケーションから一括で読み込む方法を示します、<xref:System.Data.DataRow>配列。</span><span class="sxs-lookup"><span data-stu-id="90ebb-289">The following console application demonstrates how to bulk load data from a <xref:System.Data.DataRow> array.</span></span> <span data-ttu-id="90ebb-290">対象のテーブルが内のテーブル、 **AdventureWorks**データベース。</span><span class="sxs-lookup"><span data-stu-id="90ebb-290">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="90ebb-291">この例で、<xref:System.Data.DataTable>実行時に作成されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-291">In this example, a <xref:System.Data.DataTable> is created at run time.</span></span> <span data-ttu-id="90ebb-292">1 つの行が選択されて、<xref:System.Data.DataTable>変換先テーブルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-292">A single row is selected from the <xref:System.Data.DataTable> to copy to the destination table.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-293">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-293">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-294">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-294">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-295">簡単かつ迅速に TRANSACT-SQL の使用が元と変換先のテーブルが同じ SQL Server インスタンスである場合は、`INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-295">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.RowArray#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.RowArray/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.RowArray#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.RowArray/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataTable -&gt; unit" Usage="sqlBulkCopy.WriteToServer table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="90ebb-296">対象テーブルにコピーする行が格納された <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-296">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-297">指定した <see cref="T:System.Data.DataTable" /> のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-297">Copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-298">すべての行、<xref:System.Data.DataTable>削除されたものを除き、変換先テーブルにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-298">All rows in the <xref:System.Data.DataTable> are copied to the destination table except those that have been deleted.</span></span>  
  
 <span data-ttu-id="90ebb-299">一括コピー操作の進行中は、関連付けられている変換先<xref:System.Data.SqlClient.SqlConnection>は、ビジー状態のサービスとの接続で他の操作を実行されません。</span><span class="sxs-lookup"><span data-stu-id="90ebb-299">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="90ebb-300"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>コレクションから、マップ、<xref:System.Data.DataTable>先のデータベース テーブルに列。</span><span class="sxs-lookup"><span data-stu-id="90ebb-300">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataTable> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-301">次のコンソール アプリケーションから一括で読み込む方法を示します、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-301">The following Console application demonstrates how to bulk load data from a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="90ebb-302">対象のテーブルが内のテーブル、 **AdventureWorks**データベース。</span><span class="sxs-lookup"><span data-stu-id="90ebb-302">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="90ebb-303">この例で、<xref:System.Data.DataTable>実行時に作成され、ソース、`SqlBulkCopy`操作。</span><span class="sxs-lookup"><span data-stu-id="90ebb-303">In this example, a <xref:System.Data.DataTable> is created at run time and is the source of the `SqlBulkCopy` operation.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-304">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-304">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-305">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-305">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-306">簡単かつ迅速に TRANSACT-SQL の使用が元と変換先のテーブルが同じ SQL Server インスタンスである場合は、`INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-306">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.DataTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataTable/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.DataTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.IDataReader -&gt; unit" Usage="sqlBulkCopy.WriteToServer reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="90ebb-307">対象テーブルにコピーする行が格納された <see cref="T:System.Data.IDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-307">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-308">指定した <see cref="T:System.Data.IDataReader" /> のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-308">Copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-309">コピー操作は、リーダーで使用可能な次の行から開始されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-309">The copy operation starts at the next available row in the reader.</span></span> <span data-ttu-id="90ebb-310">ほとんどの場合、リーダーはでは返されただけ<xref:System.Data.IDbCommand.ExecuteReader%2A>または同様の呼び出し、[次へ] の使用可能な行が最初の行であるためです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-310">Most of the time, the reader was just returned by <xref:System.Data.IDbCommand.ExecuteReader%2A> or a similar call, so the next available row is the first row.</span></span> <span data-ttu-id="90ebb-311">複数の結果を処理するには、呼び出す<xref:System.Data.IDataReader.NextResult%2A>呼び出し、データ リーダーで<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>もう一度です。</span><span class="sxs-lookup"><span data-stu-id="90ebb-311">To process multiple results, call <xref:System.Data.IDataReader.NextResult%2A> on the data reader and call <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> again.</span></span>  
  
 <span data-ttu-id="90ebb-312">使用して<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>リーダーの状態を変更します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-312">Note that using <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> modifies the state of the reader.</span></span> <span data-ttu-id="90ebb-313">メソッドを呼び出す<xref:System.Data.IDataReader.Read%2A>まで、false を返す、操作を中止すると、またはエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-313">The method will call <xref:System.Data.IDataReader.Read%2A> until it returns false, the operation is aborted, or an error occurs.</span></span> <span data-ttu-id="90ebb-314">つまり、データ リーダーが、結果セットの最後におそらく、別の状態に含まれるときに、<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>操作が完了しました。</span><span class="sxs-lookup"><span data-stu-id="90ebb-314">This means that the data reader will be in a different state, probably at the end of the result set, when the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is complete.</span></span>  
  
 <span data-ttu-id="90ebb-315">一括コピー操作の進行中は、関連付けられている変換先<xref:System.Data.SqlClient.SqlConnection>は、ビジー状態のサービスとの接続で他の操作を実行されません。</span><span class="sxs-lookup"><span data-stu-id="90ebb-315">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="90ebb-316"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>コレクション データからリーダー列、移行先データベース テーブルにマップします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-316">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the data reader columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-317">次のコンソール アプリケーションから一括で読み込む方法を示します、<xref:System.Data.SqlClient.SqlDataReader>します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-317">The following console application demonstrates how to bulk load data from a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="90ebb-318">対象のテーブルが内のテーブル、 **AdventureWorks**データベース。</span><span class="sxs-lookup"><span data-stu-id="90ebb-318">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-319">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-319">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-320">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-320">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-321">簡単かつ迅速に TRANSACT-SQL の使用が元と変換先のテーブルが同じ SQL Server インスタンスである場合は、`INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-321">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataTable table, System.Data.DataRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (table As DataTable, rowState As DataRowState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::DataTable ^ table, System::Data::DataRowState rowState);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataTable * System.Data.DataRowState -&gt; unit" Usage="sqlBulkCopy.WriteToServer (table, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="90ebb-322">対象テーブルにコピーする行が格納された <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-322">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <param name="rowState">
          <span data-ttu-id="90ebb-323">
            <see cref="T:System.Data.DataRowState" /> 列挙体の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-323">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span>
          </span>
          <span data-ttu-id="90ebb-324">行の状態に一致する行のみが、コピー先にコピーされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-324">Only rows matching the row state are copied to the destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-325">指定された <see cref="T:System.Data.DataTable" /> から、特定の状態に一致する行だけを、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-325">Copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-326">内の行のみ、<xref:System.Data.DataTable>に示されている状態である、`rowState`引数が削除されていないと、変換先テーブルにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-326">Only rows in the <xref:System.Data.DataTable> that are in the states indicated in the `rowState` argument and have not been deleted are copied to the destination table.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90ebb-327">場合<xref:System.Data.DataRowState.Deleted>が指定されている任意<xref:System.Data.DataRowState.Unchanged>、 <xref:System.Data.DataRowState.Added>、および<xref:System.Data.DataRowState.Modified>行は、サーバーにもコピーされます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-327">If <xref:System.Data.DataRowState.Deleted> is specified, any <xref:System.Data.DataRowState.Unchanged>, <xref:System.Data.DataRowState.Added>, and <xref:System.Data.DataRowState.Modified> rows will also be copied to the server.</span></span> <span data-ttu-id="90ebb-328">例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="90ebb-328">No exception will be raised.</span></span>  
  
 <span data-ttu-id="90ebb-329">一括コピー操作の進行中は、関連付けられている変換先<xref:System.Data.SqlClient.SqlConnection>は、ビジー状態のサービスとの接続で他の操作を実行されません。</span><span class="sxs-lookup"><span data-stu-id="90ebb-329">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="90ebb-330"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>コレクションから、マップ、<xref:System.Data.DataTable>先のデータベース テーブルに列。</span><span class="sxs-lookup"><span data-stu-id="90ebb-330">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataTable> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90ebb-331">次のコンソール アプリケーションでは、一括読み込みの行のみ、<xref:System.Data.DataTable>指定した状態に一致します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-331">The following Console application demonstrates how to bulk load only the rows in a <xref:System.Data.DataTable> that match a specified state.</span></span> <span data-ttu-id="90ebb-332">この場合、変更されていない行のみが追加されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-332">In this case, only unchanged rows are added.</span></span> <span data-ttu-id="90ebb-333">対象のテーブルが内のテーブル、 **AdventureWorks**データベース。</span><span class="sxs-lookup"><span data-stu-id="90ebb-333">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="90ebb-334">この例で、<xref:System.Data.DataTable>実行時、3 つが作成された行が追加されます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-334">In this example, a <xref:System.Data.DataTable> is created at run time and three rows are added to it.</span></span> <span data-ttu-id="90ebb-335">前に、<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>メソッドが実行され、行のいずれかを編集します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-335">Before the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is executed, one of the rows is edited.</span></span> <span data-ttu-id="90ebb-336"><xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>メソッドを呼び出すと、 `DataRowState.Unchanged` `rowState`引数、変更されていない 2 つの行のみがコピー先に一括コピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-336">The <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called with a `DataRowState.Unchanged` `rowState` argument, so only the two unchanged rows are bulk copied to the destination.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90ebb-337">このサンプルでは」の説明に従って、作業テーブルを作成していない限りは実行されません[バルク コピー サンプルのセットアップ](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-337">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="90ebb-338">使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。</span><span class="sxs-lookup"><span data-stu-id="90ebb-338">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="90ebb-339">簡単かつ迅速に TRANSACT-SQL の使用が元と変換先のテーブルが同じ SQL Server インスタンスである場合は、`INSERT … SELECT`ステートメント、データをコピーします。</span><span class="sxs-lookup"><span data-stu-id="90ebb-339">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.DataRowState#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataRowState/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.DataRowState#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataRowState/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataRowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90ebb-340">データ ソースのすべての行を、<see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" /> オブジェクトの <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> プロパティに指定された宛先テーブルにコピーする、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> の非同期バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-340">An asynchronous version of <see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" />, which copies all rows from a data source to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-341">場合、複数のアクティブな結果セット (MARS) が無効になっている<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>ビジー状態の接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-341">If multiple active result sets (MARS) is disabled, <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> makes the connection busy.</span></span> <span data-ttu-id="90ebb-342">MARS が有効になっている場合への呼び出しをインターリーブできます<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>同じ接続での他のコマンドを使用します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-342">If MARS is enabled, you can interleave calls to <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> with other commands in the same connection.</span></span>  
  
 <span data-ttu-id="90ebb-343">1 つが失敗したときにロールバックが行の数は、いくつかの方法によって異なります。</span><span class="sxs-lookup"><span data-stu-id="90ebb-343">The number of rows that are rolled back when one fails depends on several things:</span></span>  
  
-   <span data-ttu-id="90ebb-344">場合<xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction>を指定します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-344">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is specified.</span></span>  
  
-   <span data-ttu-id="90ebb-345">独自のトランザクションの場合は。</span><span class="sxs-lookup"><span data-stu-id="90ebb-345">If you have your own transaction.</span></span>  
  
-   <span data-ttu-id="90ebb-346"><xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> の値。</span><span class="sxs-lookup"><span data-stu-id="90ebb-346">The value of <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>.</span></span>  
  
 <span data-ttu-id="90ebb-347">サーバーの現在のバッチにデータを送信中にエラーがある場合 (で指定された<xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>) はロールバックされます。</span><span class="sxs-lookup"><span data-stu-id="90ebb-347">When there is an error while sending data to the server, the current batch (as specified by <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>) will be rolled back.</span></span> <span data-ttu-id="90ebb-348">場合<xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction>が指定されていない独自のトランザクションがあるとは、トランザクション全体がロールバック (をすべての以前バッチを含む)。</span><span class="sxs-lookup"><span data-stu-id="90ebb-348">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is not specified and you have your own transaction, the entire transaction will be rolled back (which includes all previous batches as well).</span></span>  
  
 <span data-ttu-id="90ebb-349">使用<xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied>サーバーにコピーされた行の数を把握します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-349">Use <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> to know how many rows were copied to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (reader As DbDataReader) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.Common.DbDataReader -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="90ebb-350">対象テーブルにコピーする行が格納された <see cref="T:System.Data.Common.DbDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-350">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-351">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /> の非同期バージョン。指定した <see cref="T:System.Data.Common.DbDataReader" /> 配列のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-351">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, which copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90ebb-352">非同期操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-352">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataRow[] rows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataRow[] rows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (rows As DataRow()) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(cli::array &lt;System::Data::DataRow ^&gt; ^ rows);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataRow[] -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync rows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="rows">
          <span data-ttu-id="90ebb-353">対象テーブルにコピーされる <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-353">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-354">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> の非同期バージョン。指定した <see cref="T:System.Data.DataRow" /> 配列のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-354">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, which copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90ebb-355">非同期操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-355">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-356">.NET Framework Data provider for SQL Server の非同期プログラミングの詳細については、次を参照してください。[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-356">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="90ebb-357">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> を複数回呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-357">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-358">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> を呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-358">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-359">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> の実行中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-359">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> execution.</span>
          </span>
          <span data-ttu-id="90ebb-360">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-360">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="90ebb-361">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-361">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="90ebb-362">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトは、メソッドの実行前に閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-362">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="90ebb-363">
            <see langword="Context Connection=true" /> は接続文字列で指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-363">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="90ebb-364">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-364">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (table As DataTable) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="90ebb-365">対象テーブルにコピーする行が格納された <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-365">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-366">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> の非同期バージョン。指定した <see cref="T:System.Data.DataTable" /> のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-366">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, which copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90ebb-367">非同期操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-367">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-368">.NET Framework Data provider for SQL Server の非同期プログラミングの詳細については、次を参照してください。[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-368">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="90ebb-369">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> を複数回呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-369">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-370">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> を呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-370">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-371">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> の実行中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-371">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> execution.</span>
          </span>
          <span data-ttu-id="90ebb-372">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-372">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="90ebb-373">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-373">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="90ebb-374">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトは、メソッドの実行前に閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-374">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="90ebb-375">
            <see langword="Context Connection=true" /> は接続文字列で指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-375">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="90ebb-376">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-376">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (reader As IDataReader) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.IDataReader -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="90ebb-377">対象テーブルにコピーする行が格納された <see cref="T:System.Data.IDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-377">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-378">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> の非同期バージョン。指定した <see cref="T:System.Data.IDataReader" /> のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-378">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, which copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90ebb-379">非同期操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-379">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-380">.NET Framework Data provider for SQL Server の非同期プログラミングの詳細については、次を参照してください。[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-380">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="90ebb-381">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> を複数回呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-381">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-382">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> を呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-382">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-383">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> の実行中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-383">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> execution.</span>
          </span>
          <span data-ttu-id="90ebb-384">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-384">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="90ebb-385">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-385">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="90ebb-386">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトは、メソッドの実行前に閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-386">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="90ebb-387">完了した <see cref="T:System.Data.IDataReader" /> が返される前に、<see cref="T:System.Threading.Tasks.Task" /> が閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-387">The <see cref="T:System.Data.IDataReader" /> was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span>
          </span>
          <span data-ttu-id="90ebb-388">完了した <see cref="T:System.Data.IDataReader" /> が返される前に、<see cref="T:System.Threading.Tasks.Task" /> に関連付けられたコネクションが閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-388">The <see cref="T:System.Data.IDataReader" />'s associated connection was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span>
          </span>
          <span data-ttu-id="90ebb-389">
            <see langword="Context Connection=true" /> は接続文字列で指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-389">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="90ebb-390">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-390">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.Common.DbDataReader reader, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.Common.DbDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::Common::DbDataReader ^ reader, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.Common.DbDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="90ebb-391">対象テーブルにコピーする行が格納された <see cref="T:System.Data.Common.DbDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-391">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="90ebb-392">取り消し命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-392">The cancellation instruction.</span>
          </span>
          <span data-ttu-id="90ebb-393">このパラメーターの <see cref="P:System.Threading.CancellationToken.None" /> 値により、このメソッドは <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" /> と同じになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-393">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-394">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /> の非同期バージョン。指定した <see cref="T:System.Data.Common.DbDataReader" /> 配列のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-394">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, which copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90ebb-395">
            <see cref="T:System.Threading.Tasks.Task" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-395">Returns <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataRow[] rows, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataRow[] rows, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(cli::array &lt;System::Data::DataRow ^&gt; ^ rows, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataRow[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (rows, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="rows">
          <span data-ttu-id="90ebb-396">対象テーブルにコピーされる <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-396">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="90ebb-397">取り消し命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-397">The cancellation instruction.</span>
          </span>
          <span data-ttu-id="90ebb-398">このパラメーターの <see cref="P:System.Threading.CancellationToken.None" /> 値により、このメソッドは <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> と同じになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-398">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-399">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> の非同期バージョン。指定した <see cref="T:System.Data.DataRow" /> 配列のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-399">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, which copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
          <span data-ttu-id="90ebb-400">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-400">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="90ebb-401">例外は、返されたタスク オブジェクトによって報告されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-401">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90ebb-402">非同期操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-402">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-403">.NET Framework Data provider for SQL Server の非同期プログラミングの詳細については、次を参照してください。[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-403">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="90ebb-404">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> を複数回呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-404">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-405">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> を呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-405">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-406">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> の実行中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-406">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> execution.</span>
          </span>
          <span data-ttu-id="90ebb-407">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-407">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="90ebb-408">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-408">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="90ebb-409">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトは、メソッドの実行前に閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-409">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="90ebb-410">
            <see langword="Context Connection=true" /> は接続文字列で指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-410">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="90ebb-411">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-411">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Data.DataRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (table As DataTable, rowState As DataRowState) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Data::DataRowState rowState);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Data.DataRowState -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="90ebb-412">対象テーブルにコピーする行が格納された <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-412">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <param name="rowState">
          <span data-ttu-id="90ebb-413">
            <see cref="T:System.Data.DataRowState" /> 列挙体の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-413">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span>
          </span>
          <span data-ttu-id="90ebb-414">行の状態に一致する行のみが、コピー先にコピーされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-414">Only rows matching the row state are copied to the destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-415">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> の非同期バージョン。指定された <see cref="T:System.Data.DataTable" /> から、特定の状態に一致する行だけを、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-415">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, which copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90ebb-416">非同期操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-416">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-417">.NET Framework Data provider for SQL Server の非同期プログラミングの詳細については、次を参照してください。[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-417">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="90ebb-418">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> を複数回呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-418">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-419">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> を呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-419">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-420">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> の実行中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-420">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> execution.</span>
          </span>
          <span data-ttu-id="90ebb-421">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-421">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="90ebb-422">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-422">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="90ebb-423">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトは、メソッドの実行前に閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-423">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="90ebb-424">
            <see langword="Context Connection=true" /> は接続文字列で指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-424">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="90ebb-425">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-425">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="90ebb-426">対象テーブルにコピーする行が格納された <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-426">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="90ebb-427">取り消し命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-427">The cancellation instruction.</span>
          </span>
          <span data-ttu-id="90ebb-428">このパラメーターの <see cref="P:System.Threading.CancellationToken.None" /> 値により、このメソッドは <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> と同じになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-428">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-429">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> の非同期バージョン。指定した <see cref="T:System.Data.DataTable" /> のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-429">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, which copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
          <span data-ttu-id="90ebb-430">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-430">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="90ebb-431">例外は、返されたタスク オブジェクトによって報告されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-431">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90ebb-432">非同期操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-432">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-433">.NET Framework Data provider for SQL Server の非同期プログラミングの詳細については、次を参照してください。[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-433">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="90ebb-434">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> を複数回呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-434">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-435">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> を呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-435">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-436">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> の実行中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-436">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> execution.</span>
          </span>
          <span data-ttu-id="90ebb-437">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-437">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="90ebb-438">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-438">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="90ebb-439">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトは、メソッドの実行前に閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-439">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="90ebb-440">
            <see langword="Context Connection=true" /> は接続文字列で指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-440">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="90ebb-441">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-441">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.IDataReader reader, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.IDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::IDataReader ^ reader, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.IDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="90ebb-442">対象テーブルにコピーする行が格納された <see cref="T:System.Data.IDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-442">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="90ebb-443">取り消し命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-443">The cancellation instruction.</span>
          </span>
          <span data-ttu-id="90ebb-444">このパラメーターの <see cref="P:System.Threading.CancellationToken.None" /> 値により、このメソッドは <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> と同じになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-444">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-445">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> の非同期バージョン。指定した <see cref="T:System.Data.IDataReader" /> のすべての行を、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-445">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, which copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
          <span data-ttu-id="90ebb-446">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-446">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="90ebb-447">例外は、返されたタスク オブジェクトによって報告されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-447">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90ebb-448">非同期操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-448">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-449">.NET Framework Data provider for SQL Server の非同期プログラミングの詳細については、次を参照してください。[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-449">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="90ebb-450">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> を複数回呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-450">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-451">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> を呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-451">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-452">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> の実行中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-452">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> execution.</span>
          </span>
          <span data-ttu-id="90ebb-453">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-453">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="90ebb-454">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-454">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="90ebb-455">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトは、メソッドの実行前に閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-455">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="90ebb-456">完了した <see cref="T:System.Data.IDataReader" /> が返される前に、<see cref="T:System.Threading.Tasks.Task" /> が閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-456">The <see cref="T:System.Data.IDataReader" /> was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span>
          </span>
          <span data-ttu-id="90ebb-457">完了した <see cref="T:System.Data.IDataReader" /> が返される前に、<see cref="T:System.Threading.Tasks.Task" /> に関連付けられたコネクションが閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-457">The <see cref="T:System.Data.IDataReader" />'s associated connection was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span>
          </span>
          <span data-ttu-id="90ebb-458">
            <see langword="Context Connection=true" /> は接続文字列で指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-458">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="90ebb-459">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-459">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Data.DataRowState rowState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Data::DataRowState rowState, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Data.DataRowState * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, rowState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="90ebb-460">対象テーブルにコピーする行が格納された <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-460">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <param name="rowState">
          <span data-ttu-id="90ebb-461">
            <see cref="T:System.Data.DataRowState" /> 列挙体の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-461">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span>
          </span>
          <span data-ttu-id="90ebb-462">行の状態に一致する行のみが、コピー先にコピーされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-462">Only rows matching the row state are copied to the destination.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="90ebb-463">取り消し命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-463">The cancellation instruction.</span>
          </span>
          <span data-ttu-id="90ebb-464">このパラメーターの <see cref="P:System.Threading.CancellationToken.None" /> 値により、このメソッドは <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> と同じになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-464">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ebb-465">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> の非同期バージョン。指定された <see cref="T:System.Data.DataTable" /> から、特定の状態に一致する行だけを、<see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> オブジェクトの <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> プロパティで指定された対象テーブルにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-465">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, which copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
          <span data-ttu-id="90ebb-466">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-466">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="90ebb-467">例外は、返されたタスク オブジェクトによって報告されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-467">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90ebb-468">非同期操作を表すタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-468">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ebb-469">.NET Framework Data provider for SQL Server の非同期プログラミングの詳細については、次を参照してください。[非同期プログラミング](~/docs/framework/data/adonet/asynchronous-programming.md)します。</span><span class="sxs-lookup"><span data-stu-id="90ebb-469">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="90ebb-470">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> を複数回呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-470">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-471">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> と <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> を呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-471">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="90ebb-472">
            <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> の実行中、接続は破棄されるか、または閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-472">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> execution.</span>
          </span>
          <span data-ttu-id="90ebb-473">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlBulkCopy" /> オブジェクトは、メソッドの実行時に閉じられました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-473">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="90ebb-474">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-474">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="90ebb-475">タスク オブジェクトで返された場合、<see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトは、メソッドの実行前に閉じられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-475">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="90ebb-476">
            <see langword="Context Connection=true" /> は接続文字列で指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-476">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="90ebb-477">タスク オブジェクトで返されたため、接続を開くときに発生した SQL Server によって返されるすべてのエラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ebb-477">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>