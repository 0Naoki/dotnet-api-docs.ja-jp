<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlBulkCopy.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac568f7a233c4b460fccda736cf959d4ee579b49a05.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68f7a233c4b460fccda736cf959d4ee579b49a05</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Lets you efficiently bulk load a SQL Server table with data from another source.</source>
          <target state="translated">別のソースからのデータを SQL Server テーブルに効率的に一括読み込みすることができます。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Microsoft SQL Server includes a popular command-prompt utility named <bpt id="p1">**</bpt>bcp<ept id="p1">**</ept> for moving data from one table to another, whether on a single server or between servers.</source>
          <target state="translated">Microsoft SQL Server には、という一般的なコマンド プロンプト ユーティリティが含まれています。 <bpt id="p1">**</bpt>bcp<ept id="p1">**</ept> 1 台のサーバーであるかどうか、またはサーバー間で、1 つのテーブルからデータを移動するためです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class lets you write managed code solutions that provide similar functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>クラスを使用して、同様の機能を提供するマネージ コード ソリューションを作成できます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>There are other ways to load data into a SQL Server table (INSERT statements, for example), but <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> offers a significant performance advantage over them.</source>
          <target state="translated">(たとえば INSERT ステートメント) の SQL Server テーブルにデータを読み込むには、その他の方法がありますが、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>上に大幅なパフォーマンスの利点を提供します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class can be used to write data only to SQL Server tables.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> クラスを使用すると、SQL Server のテーブルにのみデータを書き込むことができます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>However, the data source is not limited to SQL Server; any data source can be used, as long as the data can be loaded to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance or read with a <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance.</source>
          <target state="translated">ただし、データ ソースは SQL Server に制限はありません。データを読み込むことができる限り、任意のデータ ソースを使用できます、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>インスタンスまたはを使用して読み取る、<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> will fail when bulk loading a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column of type <ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlDateTime&gt;</ph> into a SQL Server column whose type is one of the date/time types added in SQL Server 2008.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 失敗する一括読み込みを行う、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>型の列<ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlDateTime&gt;</ph>SQL Server 2008 で SQL Server に型が日付/時刻型の 1 つの列を追加します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The following console application demonstrates how to load data using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class.</source>
          <target state="translated">次のコンソール アプリケーションでは、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> クラスを使用してデータを読み込む方法について示しています。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is used to copy data from the <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> table in the <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph><bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> database to a similar table in the same database.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>からデータをコピーするために使用、 <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept>テーブルに、 <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept>データベースを同じデータベース内のようなテーブルにします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">簡単かつ高速、TRANSACT-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、<ph id="ph1">`INSERT … SELECT`</ph>ステートメント、データをコピーします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>The already open <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance that will be used to perform the bulk copy operation.</source>
          <target state="translated">既に接続の確立されている <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> のインスタンス。一括コピー操作を実行するために使用されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">接続文字列が <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph> を使用しない場合は、<ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> を使用すると、ユーザー ID とパスワードを接続文字列内のテキストとして指定する場合よりも安全に、ユーザー ID とパスワードを渡すことができます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class using the specified open instance of <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">既に接続の確立されている <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> のインスタンスを使用し、<ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Because the connection is already open when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is initialized, the connection remains open after the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is closed.</source>
          <target state="translated">接続があるため既に開いているときに、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>インスタンスが初期化されて、接続は後に開いたまま、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>インスタンスが閉じています。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If the <ph id="ph1">`connection`</ph> argument is null, an <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">場合、<ph id="ph1">`connection`</ph>引数が null の場合、<ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">次のコンソール アプリケーションでは、データの一括読み込み、既に開いている接続を使用する方法を示します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is used to copy data from the <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> table in the <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph><bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> database to a similar table in the same database.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>からデータをコピーするために使用、 <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept>テーブルに、 <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept>データベースを同じデータベース内のようなテーブルにします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This example is for demonstration purposes only.</source>
          <target state="translated">この例は、デモンストレーション目的のみで提供されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>You would not use <ph id="ph1">`SqlBulkCopy`</ph> to move data from one table to another in the same database in a production application.</source>
          <target state="translated">使用すべきでない<ph id="ph1">`SqlBulkCopy`</ph>実稼働アプリケーションでは、同じデータベース内の別の 1 つのテーブルからデータを移動します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">SQL Server; 上にある、ソース データがないことに注意してください。読み取ることができる任意のデータ ソースを使用することができます、<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>に読み込まれたか、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">簡単かつ高速、TRANSACT-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、<ph id="ph1">`INSERT … SELECT`</ph>ステートメント、データをコピーします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The string defining the connection that will be opened for use by the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">接続を定義する文字列。これによって確立された接続が、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> のインスタンスによって使用されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">接続文字列が <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph> を使用しない場合は、<ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> または <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> と <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> を使用すると、ユーザー ID とパスワードを接続文字列内のテキストとして指定する場合よりも安全に、ユーザー ID とパスワードを渡すことができます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>Initializes and opens a new instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> based on the supplied <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph>.</source>
          <target state="translated">指定された <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph> に基づいて、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> の新しいインスタンスを初期化し、接続を確立します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The constructor uses the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> to initialize a new instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">このコンストラクターは、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> を使用して、<ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The connection is automatically closed at the end of the bulk copy operation.</source>
          <target state="translated">接続は、バルク コピー操作の最後に自動的に閉じられます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If <ph id="ph1">`connectionString`</ph> is null, an <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">場合<ph id="ph1">`connectionString`</ph>が null で、<ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If <ph id="ph1">`connectionString`</ph> is an empty string, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">場合<ph id="ph1">`connectionString`</ph>、空の文字列、<ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The following console application demonstrates how to bulk load data by using a connection specified as a string.</source>
          <target state="translated">次のコンソール アプリケーションは、データの一括読み込みを文字列として指定された接続を使用する方法を示します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The connection is automatically closed when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is closed.</source>
          <target state="translated">接続が自動的に閉じるときに、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>インスタンスが閉じています。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">この例では、ソース データが最初に SQL Server テーブルから読み取り、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">SQL Server; 上にある、ソース データがありません。読み取ることができる任意のデータ ソースを使用することができます、<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>に読み込まれたか、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">簡単かつ高速、TRANSACT-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、<ph id="ph1">`INSERT … SELECT`</ph>ステートメント、データをコピーします。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The string defining the connection that will be opened for use by the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">接続を定義する文字列。これによって確立された接続が、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> のインスタンスによって使用されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">接続文字列が <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph> を使用しない場合は、<ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> または <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> と <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> を使用すると、ユーザー ID とパスワードを接続文字列内のテキストとして指定する場合よりも安全に、ユーザー ID とパスワードを渡すことができます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>A combination of values from the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> enumeration that determines which data source rows are copied to the destination table.</source>
          <target state="translated">コピー先のテーブルにコピーするデータ ソース行を決定する、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> 列挙型の値の組み合わせ。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>Initializes and opens a new instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> based on the supplied <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph>.</source>
          <target state="translated">指定された <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph> に基づいて、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> の新しいインスタンスを初期化し、接続を確立します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The constructor uses that <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> to initialize a new instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">このコンストラクターは、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> を使用して、<ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance behaves according to options supplied in the <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> のインスタンスは、<ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> パラメーターに指定されたオプションに従って動作します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>You can obtain detailed information about all the bulk copy options in the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions&gt;</ph> topic.</source>
          <target state="translated">内のすべての一括コピー オプションについて詳細な情報を取得することができます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions&gt;</ph>トピックです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The following console application demonstrates how to perform a bulk load by using a connection specified as a string.</source>
          <target state="translated">次のコンソール アプリケーションでは、文字列として指定された接続を使用して、一括読み込みを実行する方法を示します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>An option is set to use the value in the identity column of the source table when you load the destination table.</source>
          <target state="translated">コピー先のテーブルを読み込むときに、ソース テーブルの id 列の値を使用して設定されています。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">この例では、ソース データが最初に SQL Server テーブルから読み取り、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The source table and destination table each include an Identity column.</source>
          <target state="translated">ソース テーブルと変換先テーブルには、Id 列が含まれます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>By default, a new value for the <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> column is generated in the destination table for each row added.</source>
          <target state="translated">既定では、新しい値を<bpt id="p1">**</bpt>Identity<ept id="p1">**</ept>追加した各行の変換先テーブルの列を生成します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>In this example, an option is set when the connection is opened that forces the bulk load process to use the <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> values from the source table instead.</source>
          <target state="translated">この例では、オプションが設定を使用する一括読み込み処理を強制する、接続が開かれたときに、 <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept>代わりに、ソース テーブルからの値します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>To see how the option changes the way the bulk load works, run the sample with the <bpt id="p1">**</bpt>dbo.BulkCopyDemoMatchingColumns<ept id="p1">**</ept> table empty.</source>
          <target state="translated">オプションで、サンプルを実行する方法、一括読み込みの動作をどのように影響するかを確認する、 <bpt id="p1">**</bpt>dbo します。BulkCopyDemoMatchingColumns<ept id="p1">**</ept>テーブルが空です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>All rows load from the source.</source>
          <target state="translated">すべての行は、ソースから読み込みます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>Then run the sample again without emptying the table.</source>
          <target state="translated">テーブルを空にすることがなく、サンプルを再度実行しています。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>An exception is thrown and the code writes a message to the console notifying you that rows weren't added because of primary key constraint violations.</source>
          <target state="translated">例外がスローされ、コードは、主キー制約違反のための行が追加されなかったことを通知するコンソールにメッセージを書き込みます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">簡単かつ高速、TRANSACT-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、<ph id="ph1">`INSERT … SELECT`</ph>ステートメント、データをコピーします。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>The already open <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance that will be used to perform the bulk copy.</source>
          <target state="translated">既に接続の確立されている <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> のインスタンス。一括コピーを実行するために使用されます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">接続文字列が <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph> を使用しない場合は、<ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> を使用すると、ユーザー ID とパスワードを接続文字列内のテキストとして指定する場合よりも安全に、ユーザー ID とパスワードを渡すことができます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>A combination of values from the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> enumeration that determines which data source rows are copied to the destination table.</source>
          <target state="translated">コピー先のテーブルにコピーするデータ ソース行を決定する、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> 列挙型の値の組み合わせ。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>An existing <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> instance under which the bulk copy will occur.</source>
          <target state="translated">一括コピーを実行する既存の <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class using the supplied existing open instance of <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">既に接続の確立されている <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> のインスタンスを使用し、<ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance behaves according to options supplied in the <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> のインスタンスは、<ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> パラメーターに指定されたオプションに従って動作します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If a non-null <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> is supplied, the copy operations will be performed within that transaction.</source>
          <target state="translated">指定された <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> が null でなければ、トランザクション内でコピー操作が実行されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If options include <ph id="ph1">`UseInternalTransaction`</ph> and the <ph id="ph2">`externalTransaction`</ph> argument is not null, an <bpt id="p1">**</bpt>InvalidArgumentException<ept id="p1">**</ept> is thrown.</source>
          <target state="translated">オプションがあります。 場合<ph id="ph1">`UseInternalTransaction`</ph>と<ph id="ph2">`externalTransaction`</ph>引数が null でない、 <bpt id="p1">**</bpt>InvalidArgumentException<ept id="p1">**</ept>がスローされます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>For examples demonstrating how to use <ph id="ph1">`SqlBulkCopy`</ph> in a transaction, see <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</source>
          <target state="translated">使用する方法を示す例について<ph id="ph1">`SqlBulkCopy`</ph>トランザクションでは、次を参照してください。<bpt id="p1">[</bpt>トランザクションとバルク コピー操作<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Number of rows in each batch.</source>
          <target state="translated">各バッチ内の行数。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>At the end of each batch, the rows in the batch are sent to the server.</source>
          <target state="translated">各バッチの最後に、バッチの行がサーバーに送信されます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /&gt;</ph> property, or zero if no value has been set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /&gt;</ph> プロパティの整数値。値が設定されなかった場合はゼロ。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>A batch is complete when <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> rows have been processed or there are no more rows to send to the destination data source.</source>
          <target state="translated">バッチが完了すると<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>行が処理されるか、変換先データ ソースに送信する行がありません。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Zero (the default) indicates that each <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is a single batch.</source>
          <target state="translated">0 (既定値) をそれぞれ示します<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>操作が 1 つのバッチ。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance has been declared without the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> option in effect, rows are sent to the server <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> rows at a time, but no transaction-related action is taken.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>されず、インスタンスが宣言されて、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph>オプション実際には、行は、サーバーに送信されます<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>時間がないトランザクション関連のアクションに位置する行を取得します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is in effect, each batch of rows is inserted as a separate transaction.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph>が有効で行の各バッチが個別のトランザクションとして挿入します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> property can be set at any time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>プロパティは、いつでも設定できます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If a bulk copy is already in progress, the current batch is sized according to the previous batch size.</source>
          <target state="translated">一括コピーが既に実行中の場合、現在のバッチが以前のバッチ サイズに応じてサイズ調整されます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Subsequent batches use the new size.</source>
          <target state="translated">以降のバッチでは、新しいサイズを使用します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> is initially zero and changed while a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is already in progress, that operation loads the data as a single batch.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>の初期値 0 と中に変更された、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>操作が既に進行中、操作が 1 つのバッチとしてデータを読み込むことです。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Any subsequent <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operations on the same <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance use the new <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</source>
          <target state="translated">その後<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>に対して同じ操作<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>インスタンスを使用して、新しい<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The following console application demonstrates how to bulk load data in batches of 50 rows.</source>
          <target state="translated">次のコンソール アプリケーションでは、データの一括読み込みの 50 行のバッチにする方法を示します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>For an example illustrating how <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> works with a transaction, see <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</source>
          <target state="translated">例の示すについてどの<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>トランザクションとの連携を参照してください<bpt id="p1">[</bpt>トランザクションとバルク コピー操作<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">この例では、ソース データが最初に SQL Server テーブルから読み取り、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">SQL Server; 上にある、ソース データがありません。読み取ることができる任意のデータ ソースを使用することができます、<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>に読み込まれたか、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">簡単かつ高速、TRANSACT-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、<ph id="ph1">`INSERT … SELECT`</ph>ステートメント、データをコピーします。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>Number of seconds for the operation to complete before it times out.</source>
          <target state="translated">タイムアウトになる前に操作が完了するまでの秒数。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /&gt;</ph> プロパティの整数値。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The default is 30 seconds.</source>
          <target state="translated">既定値は 30 秒です。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>A value of 0 indicates no limit; the bulk copy will wait indefinitely.</source>
          <target state="translated">値 0 は無制限を意味します。一括コピーは無期限に待機します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>If the operation does time out, the transaction is not committed and all copied rows are removed from the destination table.</source>
          <target state="translated">操作がタイムアウトになった場合、トランザクションがコミットされていないと、コピー先のテーブルからコピーされたすべての行が削除されます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The following console application demonstrates how to modify the time-out to 60 seconds when bulk loading data.</source>
          <target state="translated">次のコンソール アプリケーションは、60 秒間にタイムアウトを変更する方法を示しますとデータの一括読み込みします。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>In this example, the source data is first read from a <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> table to a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">この例では、ソース データが最初から読み取り、<ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>テーブル、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The source data does not have to be located on <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>; you can use any data source that can be read to an <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">上にある、ソース データがない<ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>; を読み取ることができる任意のデータ ソースを使用することができます、<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>に読み込まれたか、<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>If the source and destination tables are in the same <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> instance, it is easier and faster to use a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph><ph id="ph3">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">元と移行先のテーブルが同じ場合<ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>インスタンスは簡単かつ迅速に使用して、 <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> <ph id="ph3">`INSERT … SELECT`</ph>データをコピーするステートメント。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> インスタンスを閉じます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>After you call a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object, no other operation will succeed.</source>
          <target state="translated">呼び出した後、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>上、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>オブジェクト、その他の操作はすべて失敗します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method will throw an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">呼び出し、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>メソッドがスローされます、<ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> method from the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event causes an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> to be thrown.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>メソッドから、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph>イベントにより、<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Note that open <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instances are closed implicitly at the end of a <ph id="ph2">`using`</ph> block.</source>
          <target state="translated">開いているに注意してください<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>の最後のインスタンスが暗黙的に閉じられて、<ph id="ph2">`using`</ph>ブロックします。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>The following example uses the same <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance to add sales orders and their associated details to two destination tables.</source>
          <target state="translated">次の例は、同じ<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>2 つのコピー先テーブルに販売注文とその関連する詳細情報を追加するインスタンス。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Because the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sales order tables are large, the sample reads only orders placed by a certain account number and bulk copies those orders and details to the destination tables.</source>
          <target state="translated"><bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept>販売注文テーブルが大きい、サンプルは、特定のアカウント番号によってなされた注文のみを読み取りますおよび変換先テーブルに一括コピーしています。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> method is used only after both bulk copy operations are complete.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>メソッドは、両方の一括コピー操作が完了した後にのみ使用します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">簡単かつ高速、TRANSACT-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、<ph id="ph1">`INSERT … SELECT`</ph>ステートメント、データをコピーします。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> items.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> は項目のコレクションを返します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Column mappings define the relationships between columns in the data source and columns in the destination.</source>
          <target state="translated">列マッピングは、データ ソース中の列とターゲット中の列の間の関係を定義します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>A collection of column mappings.</source>
          <target state="translated">列マッピングのコレクション。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>By default, it is an empty collection.</source>
          <target state="translated">既定では、空のコレクションです。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>If the data source and the destination table have the same number of columns, and the ordinal position of each source column within the data source matches the ordinal position of the corresponding destination column, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection is unnecessary.</source>
          <target state="translated">データ ソースと変換先テーブルがある同じ数の列、データ ソース内の各ソース列の序数位置に対応する先の列の序数位置が一致する場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph>コレクションは必要ありません。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>However, if the column counts differ, or the ordinal positions are not consistent, you must use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> to make sure that data is copied into the correct columns.</source>
          <target state="translated">ただし、列数が異なる場合、または序数の位置に整合性がありません、行う必要があります<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph>正しい列にデータがコピーされることを確認します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>During the execution of a bulk copy operation, this collection can be accessed, but it cannot be changed.</source>
          <target state="translated">一括コピー操作の実行中にこのコレクションにアクセスできるが、変更することはできません。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Any attempt to change it will throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">変更しようとすると、スロー、<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>Name of the destination table on the server.</source>
          <target state="translated">サーバー上の宛先テーブルの名前。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The string value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property, or null if none as been supplied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> プロパティの文字列値。または、値が指定されていない場合は null。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> has not been set when <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> is called, an <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph>が設定されていない場合に<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>が呼び出されたが、<ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> is modified while a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is running, the change does not affect the current operation.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph>が変更されたときに、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>操作が実行されている、変更では、現在の操作には影響しません。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> value is used the next time a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is called.</source>
          <target state="translated">新しい<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph>値は次の時間を使用、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> is a three-part name (<ph id="ph2">`&lt;database&gt;.&lt;owningschema&gt;.&lt;name&gt;`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> 3 部構成の名前 (<ph id="ph2">`&lt;database&gt;.&lt;owningschema&gt;.&lt;name&gt;`</ph>)。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>You can qualify the table name with its database and owning schema if you choose.</source>
          <target state="translated">選択した場合は、そのデータベースと所有しているスキーマでテーブル名を修飾することができます。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>However, if the table name uses an underscore ("_") or any other special characters, you must escape the name using surrounding brackets as in (<ph id="ph1">`[&lt;database&gt;.&lt;owningschema&gt;.&lt;name_01&gt;]`</ph>).</source>
          <target state="translated">ただし、テーブル名がアンダー スコア (「_ _」) またはその他の特殊文字を使用する場合は、使用するように角かっこで囲んで、名前をエスケープする必要があります (<ph id="ph1">`[&lt;database&gt;.&lt;owningschema&gt;.&lt;name_01&gt;]`</ph>)。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>For more information, see "Identifiers" in SQL Server Books Online.</source>
          <target state="translated">詳細については、SQL Server オンライン ブックの「識別子」を参照してください。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>You can bulk-copy data to a temporary table by using a value such as <ph id="ph1">`tempdb..#table`</ph> or <ph id="ph2">`tempdb.&lt;owner&gt;.#table`</ph> for the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> property.</source>
          <target state="translated">などの値を使用して、一時テーブルにデータを一括コピーすることができます<ph id="ph1">`tempdb..#table`</ph>または<ph id="ph2">`tempdb.&lt;owner&gt;.#table`</ph>の<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">次のコンソール アプリケーションでは、データの一括読み込み、既に開いている接続を使用する方法を示します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">コピー先のテーブルが内のテーブル、 <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept>データベース。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">この例では、最初に接続が使用する SQL Server テーブルからデータを読み取る、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">SQL Server; 上にある、ソース データがありません。読み取ることができる任意のデータ ソースを使用することができます、<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>に読み込まれたか、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">簡単かつ高速、TRANSACT-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、<ph id="ph1">`INSERT … SELECT`</ph>ステートメント、データをコピーします。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>Enables or disables a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object to stream data from an <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> object</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> オブジェクトからデータをストリーミングする <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> オブジェクトを有効または無効にします。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object can stream data from an <ph id="ph3">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> object; otherwise, false.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> オブジェクトが <ph id="ph3">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> オブジェクトからデータをストリーミングできる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は false。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> reads from an <ph id="ph4">&lt;xref:System.Data.IDataReader&gt;</ph> object using <ph id="ph5">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph>, optimizing memory usage by using the <ph id="ph6">&lt;xref:System.Data.IDataReader&gt;</ph> streaming capabilities.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A&gt;</ph>は<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>から読み取り、<ph id="ph4">&lt;xref:System.Data.IDataReader&gt;</ph>オブジェクトを使用して<ph id="ph5">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph>を使用してメモリ使用量を最適化する、<ph id="ph6">&lt;xref:System.Data.IDataReader&gt;</ph>機能をストリーミングします。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>When it’s set to false, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class loads all the data returned by the <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> object into memory before sending it to <ph id="ph3">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> or SQL Azure.</source>
          <target state="translated">False に設定されている場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>クラスには、によって返されるすべてのデータが読み込まれる、<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>オブジェクトを送信する前にメモリに<ph id="ph3">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>または SQL Azure です。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Defines the number of rows to be processed before generating a notification event.</source>
          <target state="translated">通知イベントを生成する前に処理する行の数を定義します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> property, or zero if the property has not been set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> プロパティの整数値。プロパティが設定されていない場合はゼロ。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This property is designed for user interface components that illustrate the progress of a bulk copy operation.</source>
          <target state="translated">このプロパティは、一括コピー操作の進行状況を示すユーザー インターフェイス コンポーネントに適しています。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>It indicates the number of rows to be processed before generating a notification event.</source>
          <target state="translated">通知イベントを生成する前に処理される行の数を示します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property can be set at any time, even while a bulk copy operation is underway.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph>は一括コピー操作の進行中であっても、いつでもプロパティを設定できます。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Changes made during a bulk copy operation take effect after the next notification.</source>
          <target state="translated">一括コピー操作中に行われた変更は、[次へ] の通知後も反映されます。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The new setting applies to all subsequent operations on the same instance.</source>
          <target state="translated">新しい設定は、同じインスタンス上の後続のすべての操作に適用されます。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> is set to a number less than zero, an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> is thrown.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph>0 より小さい数値に設定するには、<ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">次のコンソール アプリケーションでは、データの一括読み込み、既に開いている接続を使用する方法を示します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property is set so that the event handler is called after every 50 rows copied to the table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph>プロパティが設定されているため、すべての 50 行がテーブルにコピーした後、イベント ハンドラーが呼び出されます。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">この例では、最初に接続が使用する SQL Server テーブルからデータを読み取る、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Then a second connection is opened to bulk copy the data.</source>
          <target state="translated">2 つ目の接続は、一括コピー データに開かれます。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">SQL Server; 上にある、ソース データがないことに注意してください。読み取ることができる任意のデータ ソースを使用することができます、<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>に読み込まれたか、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">簡単かつ高速、TRANSACT-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、<ph id="ph1">`INSERT … SELECT`</ph>ステートメント、データをコピーします。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Occurs every time that the number of rows specified by the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> property have been processed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> プロパティに指定された行数が処理されるごとに発生します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Note that the settings of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> are independent.</source>
          <target state="translated">注意してください、設定の<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>は独立しています。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Receipt of a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event does not imply that any rows have been sent to the server or committed.</source>
          <target state="translated">受信確認、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph>イベントはすべての行がサーバーに送信またはコミットされることを意味しません。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>You cannot call SqlBulkCopy.Close (<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>) or SqlConnection.Close (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>) from this event.</source>
          <target state="translated">SqlBulkCopy.Close を呼び出すことはできません (<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>) または SqlConnection.Close (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>) このイベントからです。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Doing this will cause an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> being thrown, and the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object state will not change.</source>
          <target state="translated">これにより、実行、<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>がスローされ、および<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>オブジェクトの状態は変更されません。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>If the user wants to cancel the operation from the event, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs&gt;</ph> can be used.</source>
          <target state="translated">ユーザーが、イベントから、操作をキャンセルする場合は、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs&gt;</ph>使用できます。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>(See <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept> for examples that use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> property.)</source>
          <target state="translated">(を参照してください<bpt id="p1">[</bpt>トランザクションとバルク コピー操作<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>を使用する例については、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph>プロパティです)。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>No action, such as transaction activity, is supported in the connection during the execution of the bulk copy operation, and it is recommended that you not use the same connection used during the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event.</source>
          <target state="translated">トランザクション アクティビティなどの操作はサポートされておらず、バルク コピー操作の実行中に接続され、中に使用された同一の接続を使用しないことをお勧め、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>However, you can open a different connection.</source>
          <target state="translated">ただし、別の接続を開くことができます。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">次のコンソール アプリケーションでは、データの一括読み込み、既に開いている接続を使用する方法を示します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property is set so that the event handler is called after every 50 rows copied to the table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph>プロパティが設定されているため、すべての 50 行がテーブルにコピーした後、イベント ハンドラーが呼び出されます。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">この例では、最初に接続が使用する SQL Server テーブルからデータを読み取る、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">SQL Server; 上にある、ソース データがないことに注意してください。読み取ることができる任意のデータ ソースを使用することができます、<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>に読み込まれたか、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">簡単かつ高速、TRANSACT-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、<ph id="ph1">`INSERT … SELECT`</ph>ステートメント、データをコピーします。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> を使い終わったら <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> メソッドによって、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> は使用不可の状態になります。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> was occupying.</source>
          <target state="translated">呼び出した後<ph id="ph1">`Dispose`</ph>へのすべての参照を解放する必要があります、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>ガベージ コレクターがメモリを再利用できるようにする、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>占有されていた。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Dispose メソッドの実装<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> への最後の参照を解放する前に、必ず <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> を呼び出してください。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">そうしないと、ガベージ コレクターが <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> オブジェクトの <ph id="ph2">`Finalize`</ph> メソッドを呼び出すまで、使用されているリソースは解放されません。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Copies all rows from a data source to a destination table specified by the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">データ ソースのすべての行を、<ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If multiple active result sets (MARS) is disabled, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> makes the connection busy.</source>
          <target state="translated">複数のアクティブな結果セット (MARS) が使用できなくなり、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>ビジー状態の接続を作成します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If MARS is enabled, you can interleave calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> with other commands in the same connection.</source>
          <target state="translated">MARS が有効になっている場合への呼び出しをインターリーブできます<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>同じ接続で他のコマンド。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーする行が格納された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)">
          <source>Copies all rows from the supplied <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> 配列のすべての行を、<ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーされる <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>Copies all rows from the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 配列のすべての行を、<ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">一括コピー操作進行中に、関連する宛先<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>がビジー状態である機能を提供するとの接続で実行できるその他の操作がありません。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> columns to the destination database table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph>コレクションから、マップ、<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>変換先のデータベース テーブルに列です。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The following console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> array.</source>
          <target state="translated">次のコンソール アプリケーションは、データの一括読み込みをする方法を示します、<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>配列。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">コピー先のテーブルが内のテーブル、 <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept>データベース。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>は実行時に作成します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>A single row is selected from the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> to copy to the destination table.</source>
          <target state="translated">1 つの行が選択されて、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>先テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">簡単かつ高速、TRANSACT-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、<ph id="ph1">`INSERT … SELECT`</ph>ステートメント、データをコピーします。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーする行が格納された <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>Copies all rows in the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> のすべての行を、<ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>All rows in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> are copied to the destination table except those that have been deleted.</source>
          <target state="translated">すべての行、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>が削除されているものを除き、変換先テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">一括コピー操作進行中に、関連する宛先<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>がビジー状態である機能を提供するとの接続で実行できるその他の操作がありません。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columns to the destination database table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph>コレクションから、マップ、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>変換先のデータベース テーブルに列です。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The following Console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">次のコンソール アプリケーションは、データの一括読み込みをする方法を示します、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">コピー先のテーブルが内のテーブル、 <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept>データベース。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time and is the source of the <ph id="ph2">`SqlBulkCopy`</ph> operation.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>実行時に作成され、ソース、<ph id="ph2">`SqlBulkCopy`</ph>操作します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">簡単かつ高速、TRANSACT-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、<ph id="ph1">`INSERT … SELECT`</ph>ステートメント、データをコピーします。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーする行が格納された <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Copies all rows in the supplied <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> のすべての行を、<ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The copy operation starts at the next available row in the reader.</source>
          <target state="translated">コピー操作は、リーダーの使用可能な次の行から開始されます。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Most of the time, the reader was just returned by <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;</ph> or a similar call, so the next available row is the first row.</source>
          <target state="translated">ほとんどの場合、リーダーだけからが返された<ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;</ph>または [次へ] の使用可能な行は最初の行のような呼び出しです。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>To process multiple results, call <ph id="ph1">&lt;xref:System.Data.IDataReader.NextResult%2A&gt;</ph> on the data reader and call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> again.</source>
          <target state="translated">複数の結果を処理するには、呼び出す<ph id="ph1">&lt;xref:System.Data.IDataReader.NextResult%2A&gt;</ph>データ リーダーと呼び出し<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>もう一度です。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Note that using <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> modifies the state of the reader.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>リーダーの状態を変更します。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The method will call <ph id="ph1">&lt;xref:System.Data.IDataReader.Read%2A&gt;</ph> until it returns false, the operation is aborted, or an error occurs.</source>
          <target state="translated">メソッドを呼び出す<ph id="ph1">&lt;xref:System.Data.IDataReader.Read%2A&gt;</ph>false を返します、操作を中止すると、または、エラーが発生するまでです。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This means that the data reader will be in a different state, probably at the end of the result set, when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is complete.</source>
          <target state="translated">つまり、データ リーダーが結果セットの最後におそらく、別の状態に含まれるときに、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>操作が完了しました。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">一括コピー操作進行中に、関連する宛先<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>がビジー状態である機能を提供するとの接続で実行できるその他の操作がありません。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the data reader columns to the destination database table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph>コレクション、データからリーダー列マップ先のデータベース テーブルにします。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The following console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
          <target state="translated">次のコンソール アプリケーションは、データの一括読み込みをする方法を示します、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">コピー先のテーブルが内のテーブル、 <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept>データベース。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">簡単かつ高速、TRANSACT-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、<ph id="ph1">`INSERT … SELECT`</ph>ステートメント、データをコピーします。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーする行が格納された <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 列挙体の値。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">行の状態に一致する行のみが、コピー先にコピーされます。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Copies only rows that match the supplied row state in the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">指定された <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> から、特定の状態に一致する行だけを、<ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that are in the states indicated in the <ph id="ph2">`rowState`</ph> argument and have not been deleted are copied to the destination table.</source>
          <target state="translated">内の行のみ、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>に示されている状態である、<ph id="ph2">`rowState`</ph>引数が削除されていないと、変換先テーブルにコピーされます。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>If <ph id="ph1">&lt;xref:System.Data.DataRowState.Deleted&gt;</ph> is specified, any <ph id="ph2">&lt;xref:System.Data.DataRowState.Unchanged&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataRowState.Added&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.DataRowState.Modified&gt;</ph> rows will also be copied to the server.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Data.DataRowState.Deleted&gt;</ph>が指定されている任意<ph id="ph2">&lt;xref:System.Data.DataRowState.Unchanged&gt;</ph>、 <ph id="ph3">&lt;xref:System.Data.DataRowState.Added&gt;</ph>、および<ph id="ph4">&lt;xref:System.Data.DataRowState.Modified&gt;</ph>行は、サーバーにコピーすることもできます。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>No exception will be raised.</source>
          <target state="translated">例外は発生しません。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">一括コピー操作進行中に、関連する宛先<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>がビジー状態である機能を提供するとの接続で実行できるその他の操作がありません。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columns to the destination database table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph>コレクションから、マップ、<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>変換先のデータベース テーブルに列です。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The following Console application demonstrates how to bulk load only the rows in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that match a specified state.</source>
          <target state="translated">次のコンソール アプリケーションでは、一括読み込みの行のみ、<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>指定された状態に一致します。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>In this case, only unchanged rows are added.</source>
          <target state="translated">この場合、変更されていない行のみが追加されます。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">コピー先のテーブルが内のテーブル、 <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept>データベース。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time and three rows are added to it.</source>
          <target state="translated">この例では、 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 3 つの実行時に作成された行を追加します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Before the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is executed, one of the rows is edited.</source>
          <target state="translated">前に、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>メソッドが実行され、編集、行の 1 つです。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is called with a <ph id="ph2">`DataRowState.Unchanged`</ph> <ph id="ph3">`rowState`</ph> argument, so only the two unchanged rows are bulk copied to the destination.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>メソッドが呼び出された、 <ph id="ph2">`DataRowState.Unchanged`</ph> <ph id="ph3">`rowState`</ph>引数、変更されていない 2 つの行だけが転送先に一括コピーします。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">」の説明に従って、作業テーブルを作成していない限り、このサンプルは実行されません<bpt id="p1">[</bpt>バルク コピー サンプルのセットアップ<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">使用する構文を示すためにこのコードが提供される<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>のみです。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">簡単かつ高速、TRANSACT-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、<ph id="ph1">`INSERT … SELECT`</ph>ステートメント、データをコピーします。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" /&gt;</ph>, which copies all rows from a data source to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">データ ソースのすべての行を、<ph id="ph1">&lt;see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" /&gt;</ph> オブジェクトの <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> プロパティに指定された宛先テーブルにコピーする、<ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> の非同期バージョン。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If multiple active result sets (MARS) is disabled, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> makes the connection busy.</source>
          <target state="translated">複数のアクティブな結果セット (MARS) が使用できなくなり、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>ビジー状態の接続を作成します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If MARS is enabled, you can interleave calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> with other commands in the same connection.</source>
          <target state="translated">MARS が有効になっている場合への呼び出しをインターリーブできます<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>同じ接続で他のコマンド。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The number of rows that are rolled back when one fails depends on several things:</source>
          <target state="translated">ロールバックされたいずれかが失敗した行の数は、いくつかの方法によって異なります。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is specified.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph>を指定します。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If you have your own transaction.</source>
          <target state="translated">ある場合は、独自のトランザクション。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The value of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> の値。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>When there is an error while sending data to the server, the current batch (as specified by <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>) will be rolled back.</source>
          <target state="translated">データをサーバーでは、現在のバッチを送信中にエラーがある場合 (の指定に従って<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>) はロールバックされます。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is not specified and you have your own transaction, the entire transaction will be rolled back (which includes all previous batches as well).</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph>が指定されていない、独自のトランザクションがあると、トランザクション全体がロールバック (をすべての以前バッチを含む)。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> to know how many rows were copied to the server.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph>をサーバーにコピーされた行の数を確認します。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーする行が格納された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph> の非同期バージョン。指定した <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> 配列のすべての行を、<ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーされる <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> の非同期バージョン。指定した <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 配列のすべての行を、<ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">非同期プログラミングの詳細については、 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for<ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>を参照してください<bpt id="p1">[</bpt>非同期プログラミング<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> を複数回呼び出します。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> と <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> execution.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> の実行中、接続は破棄されるか、または閉じられます。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> オブジェクトは、メソッドの実行時に閉じられました。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> オブジェクトは、メソッドの実行前に閉じられます。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> は接続文字列で指定されます。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">タスク オブジェクトで返された場合、接続を開いているときに発生した <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> によって返されるエラー。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーする行が格納された <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> の非同期バージョン。指定した <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> のすべての行を、<ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">非同期プログラミングの詳細については、 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for<ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>を参照してください<bpt id="p1">[</bpt>非同期プログラミング<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> を複数回呼び出します。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> と <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> execution.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> の実行中、接続は破棄されるか、または閉じられます。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> オブジェクトは、メソッドの実行時に閉じられました。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> オブジェクトは、メソッドの実行前に閉じられます。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> は接続文字列で指定されます。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">タスク オブジェクトで返された場合、接続を開いているときに発生した <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> によって返されるエラー。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーする行が格納された <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> の非同期バージョン。指定した <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> のすべての行を、<ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">非同期プログラミングの詳細については、 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for<ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>を参照してください<bpt id="p1">[</bpt>非同期プログラミング<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> を複数回呼び出します。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> と <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> execution.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> の実行中、接続は破棄されるか、または閉じられます。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> オブジェクトは、メソッドの実行時に閉じられました。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> オブジェクトは、メソッドの実行前に閉じられます。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">完了した <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> が返される前に、<ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> が閉じられました。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>'s associated connection was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">完了した <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> が返される前に、<ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> に関連付けられたコネクションが閉じられました。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> は接続文字列で指定されます。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">タスク オブジェクトで返された場合、接続を開いているときに発生した <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> によって返されるエラー。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーする行が格納された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取り消し命令。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" /&gt;</ph>.</source>
          <target state="translated">このパラメーターの <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> 値により、このメソッドは <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" /&gt;</ph> と同じになります。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph> の非同期バージョン。指定した <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> 配列のすべての行を、<ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーされる <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取り消し命令。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">このパラメーターの <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> 値により、このメソッドは <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> と同じになります。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> の非同期バージョン。指定した <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 配列のすべての行を、<ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">例外は、返されたタスク オブジェクトによって報告されます。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">非同期プログラミングの詳細については、 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for<ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>を参照してください<bpt id="p1">[</bpt>非同期プログラミング<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> を複数回呼び出します。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> と <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> execution.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> の実行中、接続は破棄されるか、または閉じられます。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> オブジェクトは、メソッドの実行時に閉じられました。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> オブジェクトは、メソッドの実行前に閉じられます。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> は接続文字列で指定されます。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">タスク オブジェクトで返された場合、接続を開いているときに発生した <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> によって返されるエラー。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーする行が格納された <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 列挙体の値。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">行の状態に一致する行のみが、コピー先にコピーされます。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, which copies only rows that match the supplied row state in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> の非同期バージョン。指定された <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> から、特定の状態に一致する行だけを、<ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">非同期プログラミングの詳細については、 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for<ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>を参照してください<bpt id="p1">[</bpt>非同期プログラミング<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> を複数回呼び出します。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> と <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> execution.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> の実行中、接続は破棄されるか、または閉じられます。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> オブジェクトは、メソッドの実行時に閉じられました。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> オブジェクトは、メソッドの実行前に閉じられます。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> は接続文字列で指定されます。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">タスク オブジェクトで返された場合、接続を開いているときに発生した <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> によって返されるエラー。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーする行が格納された <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取り消し命令。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">このパラメーターの <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> 値により、このメソッドは <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> と同じになります。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> の非同期バージョン。指定した <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> のすべての行を、<ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">例外は、返されたタスク オブジェクトによって報告されます。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">非同期プログラミングの詳細については、 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for<ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>を参照してください<bpt id="p1">[</bpt>非同期プログラミング<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> を複数回呼び出します。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> と <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> execution.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> の実行中、接続は破棄されるか、または閉じられます。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> オブジェクトは、メソッドの実行時に閉じられました。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> オブジェクトは、メソッドの実行前に閉じられます。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> は接続文字列で指定されます。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">タスク オブジェクトで返された場合、接続を開いているときに発生した <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> によって返されるエラー。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーする行が格納された <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取り消し命令。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">このパラメーターの <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> 値により、このメソッドは <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> と同じになります。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> の非同期バージョン。指定した <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> のすべての行を、<ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">例外は、返されたタスク オブジェクトによって報告されます。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">非同期プログラミングの詳細については、 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for<ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>を参照してください<bpt id="p1">[</bpt>非同期プログラミング<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> を複数回呼び出します。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> と <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> execution.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> の実行中、接続は破棄されるか、または閉じられます。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> オブジェクトは、メソッドの実行時に閉じられました。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> オブジェクトは、メソッドの実行前に閉じられます。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">完了した <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> が返される前に、<ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> が閉じられました。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>'s associated connection was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">完了した <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> が返される前に、<ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> に関連付けられたコネクションが閉じられました。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> は接続文字列で指定されます。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">タスク オブジェクトで返された場合、接続を開いているときに発生した <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> によって返されるエラー。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">対象テーブルにコピーする行が格納された <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 列挙体の値。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">行の状態に一致する行のみが、コピー先にコピーされます。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取り消し命令。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">このパラメーターの <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> 値により、このメソッドは <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> と同じになります。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, which copies only rows that match the supplied row state in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> の非同期バージョン。指定された <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> から、特定の状態に一致する行だけを、<ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> オブジェクトの <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> プロパティで指定された対象テーブルにコピーします。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄するように要求できます。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">例外は、返されたタスク オブジェクトによって報告されます。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">非同期プログラミングの詳細については、 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for<ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>を参照してください<bpt id="p1">[</bpt>非同期プログラミング<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> を複数回呼び出します。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">タスクを完了する前に同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> と <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> execution.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> の実行中、接続は破棄されるか、または閉じられます。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> オブジェクトは、メソッドの実行時に閉じられました。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">タスク オブジェクトで返されたため、接続プールがタイムアウトした。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">タスク オブジェクトで返された場合、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> オブジェクトは、メソッドの実行前に閉じられます。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> は接続文字列で指定されます。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">タスク オブジェクトで返された場合、接続を開いているときに発生した <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> によって返されるエラー。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>