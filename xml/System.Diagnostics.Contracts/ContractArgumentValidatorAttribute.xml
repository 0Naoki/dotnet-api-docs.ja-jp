<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ContractArgumentValidatorAttribute.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51cb1413fd21fcf82c4b83c8c37a7173dfd606243.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1cb1413fd21fcf82c4b83c8c37a7173dfd606243</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
          <source>Enables the factoring of legacy <ph id="ph1">&lt;see langword="if-then-throw" /&gt;</ph> code into separate methods for reuse, and provides full control over thrown exceptions and arguments.</source>
          <target state="translated">再利用できるように異なるメソッドへのレガシ <ph id="ph1">&lt;see langword="if-then-throw" /&gt;</ph> コードのファクタリングを有効にし、スローされる例外と引数のフル コントロールを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
          <source>If your code uses explicit <ph id="ph1">`if-then-throw`</ph> code to validate parameters, you may be employing helper methods that perform checks and throw particular exceptions on failure, as shown in the following example.</source>
          <target state="translated">コードで明示的に使用する場合<ph id="ph1">`if-then-throw`</ph>パラメーターを検証するコードは、次の例で示すようにで、チェックを実行し、失敗した場合、特定の例外をスローするヘルパー メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
          <source>In this example, <ph id="ph1">`Execute`</ph> has an elective precondition specifying that the parameter value should not be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">この例では<ph id="ph1">`Execute`</ph>パラメーターの値がされないことを指定する、選択可能な必須の条件を持つ<ph id="ph2">`null`</ph>します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
          <source>To enable the contract tools to recognize that the call to <ph id="ph1">`ValidationHelper.NotNull`</ph> represents a contract, you can mark the called method with the  <ph id="ph2">&lt;xref:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute&gt;</ph> attribute.</source>
          <target state="translated">あることを認識するコントラクト ツールへの呼び出しを有効にする<ph id="ph1">`ValidationHelper.NotNull`</ph>コントラクトを表しますで呼び出されたメソッドをマークすることができます、<ph id="ph2">&lt;xref:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A?displayProperty=nameWithType&gt;</ph> method call should be used to enable the tools to extract the proper specifications for document generation and static checking, as follows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A?displayProperty=nameWithType&gt;</ph>メソッドの呼び出しは、ドキュメントの生成と静的の確認では、次のように、適切な仕様を抽出するためのツールを有効にするために使用する必要があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
          <source>In addition to <ph id="ph1">`if-then-throw`</ph> statements, the contract section of contract validator methods may contain calls to other contract validator methods.</source>
          <target state="translated">加え<ph id="ph1">`if-then-throw`</ph>ステートメント、検証メソッドのコントラクトのコントラクトのセクションではコントラクト検証メソッドを他の呼び出しを含む可能性があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
          <source>However, no other contracts (such as <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph2">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType&gt;</ph>) are allowed.</source>
          <target state="translated">ただし、他のコントラクトはなし (など<ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%2A?displayProperty=nameWithType&gt;</ph>、または<ph id="ph2">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType&gt;</ph>) は許可します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
          <source>Code that follows the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A?displayProperty=nameWithType&gt;</ph> call is ignored by all contract tools.</source>
          <target state="translated">次のコード、<ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A?displayProperty=nameWithType&gt;</ph>コントラクトのすべてのツールでの呼び出しは無視されます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
          <source>The following example shows a range argument validator written in terms of an existing <ph id="ph1">`NotNull`</ph> validator method.</source>
          <target state="translated">次の例は、既存の観点から書き込まれる範囲引数バリデーター<ph id="ph1">`NotNull`</ph>バリデーター メソッドです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
          <source>From a specification point of view, the <ph id="ph1">`Execute`</ph> method has the following three contracts:</source>
          <target state="translated">仕様の観点から、<ph id="ph1">`Execute`</ph>メソッドには次の 3 つのコントラクト。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
          <source>In standard methods, calls to contract validator methods can be freely mixed with other contracts such as <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">標準の方法でコントラクトの検証メソッドの呼び出し自由に混合できるその他のコントラクトでなど<ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Contracts.ContractArgumentValidatorAttribute" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>