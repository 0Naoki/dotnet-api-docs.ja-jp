<Type Name="DbExpressionBuilder" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="359071078d3c8e16b6368e2fd2700ff8109ec910" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DbExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Module DbExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbExpressionBuilder abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3a431-101">
        <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> を構築するためにAPI を提供し、それ自体の式の型でAPI が拡張メソッドとしてアクセスされるようにします。 </span>
      <span class="sxs-lookup">
        <span data-stu-id="3a431-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s and allows that API to be accessed as extension methods on the expression type itself.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ Aggregate(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="3a431-102">集約操作を定義する関数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-102">The function that defines the aggregate operation.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="3a431-103">集計関数の計算に使用される引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-103">The argument over which the aggregate function should be calculated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-104">新しい <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-104">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-105">特定の関数と引数への参照を持つ新しい関数集計。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-105">A new function aggregate with a reference to the given function and argument.</span>
          </span>
          <span data-ttu-id="3a431-106">関数の集計の Distinct プロパティの値は <see langword="false" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-106">The function aggregate's Distinct property will have the value <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-107">
            <paramref name="function" /> または  <paramref name="argument" /> null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-107">
              <paramref name="function" /> or <paramref name="argument" /> null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-108">
            <paramref name="function" /> が集約関数でないか、複数の引数があります。または、<paramref name="argument" /> の結果型が <paramref name="function" /> のパラメーターの型と一致していないか、上位変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-108">
              <paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AggregateDistinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AggregateDistinct (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ AggregateDistinct(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="3a431-109">集約操作を定義する関数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-109">The function that defines the aggregate operation.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="3a431-110">集計関数の計算に使用される引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-110">The argument over which the aggregate function should be calculated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-111">明確な方法で適用される新しい <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-111">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> that is applied in a distinct fashion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-112">特定の関数と引数への参照を持つ新しい関数集計。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-112">A new function aggregate with a reference to the given function and argument.</span>
          </span>
          <span data-ttu-id="3a431-113">関数の集計の Distinct プロパティの値は <see langword="true" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-113">The function aggregate's Distinct property will have the value <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-114">
            <paramref name="function" /> または <paramref name="argument" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-114">
              <paramref name="function" /> or <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-115">
            <paramref name="function" /> が集約関数でないか、複数の引数があります。または、<paramref name="argument" /> の結果型が <paramref name="function" /> のパラメーターの型と一致していないか、上位変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-115">
              <paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="All">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-116">指定された述語が入力セットのすべての要素に当てはまるかどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-116">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-117">入力セットを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-117">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="3a431-118">入力セットのメンバーごとに評価する述語を表すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-118">A method representing a predicate to evaluate for each member of the input set.</span>
          </span>
          <span data-ttu-id="3a431-119">このメソッドは、述語のロジックを備え、ブール型の結果を返す式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-119">This method must produce an expression with a Boolean result type that provides the predicate logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-120">指定された述語が入力セットのすべての要素に当てはまるかどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-120">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-121">All 操作を表す新しい DbQuantifierExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-121">A new DbQuantifierExpression that represents the All operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-122">
            <paramref name="predicate" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-122">The expression produced by <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-123">
            <paramref name="Predicate" /> の生成したこの式には、ブール型の結果型がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-123">The expression produced by <paramref name="Predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3a431-124">入力セットを指定する式バインディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-124">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="3a431-125">入力セットのメンバーごとに評価する述語を表す式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-125">An expression representing a predicate to evaluate for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-126">指定された述語が入力セットのすべての要素に当てはまるかどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-126">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-127">All 操作を表す新しい DbQuantifierExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-127">A new DbQuantifierExpression that represents the All operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-128">
            <paramref name="input" /> または <paramref name="predicate" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-128">
              <paramref name="input" /> or <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-129">
            <paramref name="predicate" /> の結果型がブール型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-129">
              <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbAndExpression And(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function And (left As DbExpression, right As DbExpression) As DbAndExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbAndExpression ^ And(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbAndExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-130">引数 left を指定するブール式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-130">A Boolean expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-131">引数 right を指定するブール式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-131">A Boolean expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-132">左辺と右辺の引数について論理 AND を実行する <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-132">Creates an <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that performs the logical And of the left and right arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-133">指定された引数を持つ新しい DbAndExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-133">A new DbAndExpression with the specified arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-134">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-134">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-135">
            <paramref name="left" /> および <paramref name="right" /> の結果型がブール型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-135">
              <paramref name="left" /> and <paramref name="right" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-136">指定されたセット引数が空以外であるかどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-136">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Any(class System.Data.Common.CommandTrees.DbExpression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-137">入力セットを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-137">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-138">指定されたセット引数が空以外であるかどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-138">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-139">指定された引数を持つ新しい <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> に適用される新しい <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-139">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-140">
            <paramref name="source" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-140">
              <paramref name="source" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-141">
            <paramref name="source" /> の結果型がコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-141">
              <paramref name="source" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-142">入力セットを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-142">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="3a431-143">入力セットのメンバーごとに評価する述語を表すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-143">A method representing the predicate to evaluate for each member of the input set.</span>
          </span>
          <span data-ttu-id="3a431-144">このメソッドは、述語のロジックを備え、ブール型の結果を返す式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-144">This method must produce an expression with a Boolean result type that provides the predicate logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-145">指定された述語が入力セットのいずれかの要素に当てはまるかどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-145">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-146">Any 操作を表す新しい DbQuantifierExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-146">A new DbQuantifierExpression that represents the Any operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-147">
            <paramref name="predicate" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-147">The expression produced by <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-148">
            <paramref name="predicate" /> の生成したこの式には、ブール型の結果型がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-148">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3a431-149">入力セットを指定する式バインディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-149">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="3a431-150">入力セットのメンバーごとに評価する述語を表す式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-150">An expression representing a predicate to evaluate for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-151">指定された述語が入力セットのいずれかの要素に当てはまるかどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-151">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-152">Any 操作を表す新しい DbQuantifierExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-152">A new DbQuantifierExpression that represents the Any operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-153">
            <paramref name="input" /> または <paramref name="predicate" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-153">
              <paramref name="input" /> or <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-154">
            <paramref name="predicate" /> の生成したこの式には、ブール型の結果型がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-154">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="As">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-155">指定された引数をキー/値ペア オブジェクトとして返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-155">Returns the specified arguments as a key/value pair object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt; As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt; As(class System.Data.Common.CommandTrees.DbAggregate value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbAggregate, alias As String) As KeyValuePair(Of String, DbAggregate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt; As(System::Data::Common::CommandTrees::DbAggregate ^ value, System::String ^ alias);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbAggregate" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3a431-156">キー/値ペア内の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-156">The value in the key/value pair.</span>
          </span>
        </param>
        <param name="alias">
          <span data-ttu-id="3a431-157">キー/値ペア内のキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-157">The key in the key/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-158">指定された引数をキー/値ペア オブジェクトとして返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-158">Returns the specified arguments as a key/value pair object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-159">キーと値のペアのオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-159">A key/value pair object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt; As (this System.Data.Common.CommandTrees.DbExpression value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt; As(class System.Data.Common.CommandTrees.DbExpression value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbExpression, alias As String) As KeyValuePair(Of String, DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt; As(System::Data::Common::CommandTrees::DbExpression ^ value, System::String ^ alias);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3a431-160">キー/値ペア内の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-160">The value in the key/value pair.</span>
          </span>
        </param>
        <param name="alias">
          <span data-ttu-id="3a431-161">キー/値ペア内のキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-161">The key in the key/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-162">指定された引数をキー/値ペア オブジェクトとして返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-162">Returns the specified arguments as a key/value pair object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-163">キーと値のペアのオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-163">A key/value pair object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding Bind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Bind (input As DbExpression) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ Bind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3a431-164">バインドする式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-164">The expression to bind.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-165">生成された変数名を使用して指定した式をバインドする新しい <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-165">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses a generated variable name to bind the given expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-166">指定された式と生成された変数名でバインドする新しい式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-166">A new expression binding with the specified expression and a generated variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-167">
            <paramref name="input" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-167">
              <paramref name="input" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-168">
            <paramref name="input" /> の結果がコレクションではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-168">
              <paramref name="input" /> does not have a collection result.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding BindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BindAs (input As DbExpression, varName As String) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ BindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3a431-169">バインドする式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-169">The expression to bind.</span>
          </span>
        </param>
        <param name="varName">
          <span data-ttu-id="3a431-170">バインディングに使用する変数名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-170">The variable name that should be used for the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-171">指定した変数名を使用して指定した式をバインドする新しい <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> を作成します</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-171">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses the specified variable name to bind the given expression</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-172">指定された式と変数名でバインドする新しい式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-172">A new expression binding with the specified expression and variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-173">
            <paramref name="input" /> または <paramref name="varName" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-173">
              <paramref name="input" /> or <paramref name="varName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-174">
            <paramref name="input" /> の結果がコレクションではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-174">
              <paramref name="input" /> does not have a collection result.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCaseExpression Case(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, class System.Data.Common.CommandTrees.DbExpression elseExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Case (whenExpressions As IEnumerable(Of DbExpression), thenExpressions As IEnumerable(Of DbExpression), elseExpression As DbExpression) As DbCaseExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCaseExpression ^ Case(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ whenExpressions, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ thenExpressions, System::Data::Common::CommandTrees::DbExpression ^ elseExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCaseExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="thenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="elseExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="whenExpressions">
          <span data-ttu-id="3a431-175">各ケースの条件を提供する式のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-175">A list of expressions that provide the conditional for of each case.</span>
          </span>
        </param>
        <param name="thenExpressions">
          <span data-ttu-id="3a431-176">各ケースの結果を提供する式のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-176">A list of expressions that provide the result of each case.</span>
          </span>
        </param>
        <param name="elseExpression">
          <span data-ttu-id="3a431-177">いずれのケースにも一致しなかった場合の結果を定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-177">An expression that defines the result when no case is matched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-178">新しい <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-178">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-179">指定されたケースと既定の結果を持つ新しい DbCaseExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-179">A new DbCaseExpression with the specified cases and default result.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-180">
            <paramref name="whenExpressions" /> または <paramref name="thenExpressions" /> が null か、null を含んでいます。または、<paramref name="elseExpression" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-180">
              <paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is null or contains null, or <paramref name="elseExpression" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-181">
            <paramref name="whenExpressions" /> または <paramref name="thenExpressions" /> が空であるか、<paramref name="whenExpressions" /> に結果型がブール型でない式が含まれているか、<paramref name="thenExpressions" /> および <paramref name="elseExpression" /> で指定されているすべての式に共通する結果型がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-181">
              <paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is empty or <paramref name="whenExpressions" /> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <paramref name="thenExpressions" /> and <paramref name="elseExpression" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CastTo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCastExpression CastTo(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage toType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CastTo (argument As DbExpression, toType As TypeUsage) As DbCastExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbCastExpression ^ CastTo(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ toType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCastExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-182">キャストの適用先の引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-182">The argument to which the cast should be applied.</span>
          </span>
        </param>
        <param name="toType">
          <span data-ttu-id="3a431-183">キャスト後の型を指定する型メタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-183">Type metadata that specifies the type to cast to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-184">ポリモーフィック引数にキャスト操作を適用する新しい <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> 式を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-184">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that applies a cast operation to a polymorphic argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-185">指定された引数と対象の型を持つ新しい DbCastExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-185">A new DbCastExpression with the specified argument and target type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-186">
            <paramref name="Argument" /> または <paramref name="toType" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-186">
              <paramref name="Argument" /> or <paramref name="toType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-187">指定したキャストが有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-187">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Constant">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-188">新しい <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-188">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Constant (value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3a431-189">表現する定数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-189">The constant value to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-190">指定した定数値を使用して新しい <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-190">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the given constant value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-191">特定の値を持つ新しい DbConstantExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-191">A new DbConstantExpression with the given value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-192">
            <paramref name="value" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-192">
              <paramref name="value" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-193">
            <paramref name="value" /> が有効な定数の型のインスタンスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-193">
              <paramref name="value" /> is not an instance of a valid constant type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(class System.Data.Metadata.Edm.TypeUsage constantType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Constant (constantType As TypeUsage, value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Data::Metadata::Edm::TypeUsage ^ constantType, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="constantType">
          <span data-ttu-id="3a431-194">定数値の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-194">The type of the constant value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="3a431-195">表現する定数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-195">The constant value to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-196">指定された定数値を使用して、指定されたプリミティブ型の新しい <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 式を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-196">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> of the specified primitive type with the given constant value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-197">特定の値と <paramref name="constantType" /> の結果型を持つ新しい DbConstantExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-197">A new DbConstantExpression with the given value and a result type of <paramref name="constantType" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-198">
            <paramref name="value" /> または <paramref name="constantType" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-198">
              <paramref name="value" /> or <paramref name="constantType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-199">
            <paramref name="value" /> が有効な定数の型のインスタンスでないか、<paramref name="constantType" /> がプリミティブ型を表していないか、<paramref name="value" /> の型が <paramref name="constantType" /> で表されるプリミティブ型とは異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-199">
              <paramref name="value" /> is not an instance of a valid constant type,  <paramref name="constantType" /> does not represent a primitive type, or <paramref name="value" /> is of a different primitive type than that represented by <paramref name="constantType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRef">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-200">指定されたキー値に基づいて指定された型の特定のエンティティへの参照をエンコードする新しい <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-200">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="3a431-201">参照先の要素が存在するエンティティ セット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-201">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="3a431-202">キー値を提供する <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-202">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="3a431-203">これらの式は、参照先のエンティティ型のキー プロパティと (数、型、および順序が) 一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-203">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-204">キー値に基づいて特定のエンティティへの参照をエンコードする新しい <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-204">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-205">特定のエンティティ セットに指定されたキー値を持つ要素を参照する新しい DbRefExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-205">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-206">
            <paramref name="entitySet" /> が null、または <paramref name="keyValues" /> が null か、null を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-206">
              <paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-207">
            <paramref name="keyValues" /> の数が、<paramref name="entitySet" /> の要素の型で宣言されたキーのメンバーの数と一致しないか、<paramref name="keyValues" /> に、対応するキーのメンバーの型と互換性のない結果型を持つ式が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-207">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="3a431-208">参照先の要素が存在するエンティティ セット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-208">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="3a431-209">キー値を提供する <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-209">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="3a431-210">これらの式は、参照先のエンティティ型のキー プロパティと (数、型、および順序が) 一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-210">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-211">キー値に基づいて特定のエンティティへの参照をエンコードする新しい <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-211">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-212">特定のエンティティ セットに指定されたキー値を持つ要素を参照する新しい DbRefExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-212">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-213">
            <paramref name="entitySet" /> が null、または <paramref name="keyValues" /> が null か、null を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-213">
              <paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-214">
            <paramref name="keyValues" /> の数が、<paramref name="entitySet" /> の要素の型で宣言されたキーのメンバーの数と一致しないか、<paramref name="keyValues" /> に、対応するキーのメンバーの型と互換性のない結果型を持つ式が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-214">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="3a431-215">参照先の要素が存在するエンティティ セット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-215">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="3a431-216">参照先となるエンティティの特定の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-216">The specific type of the referenced entity.</span>
          </span>
          <span data-ttu-id="3a431-217">エンティティ セットの要素型と同じ階層のエンティティ型にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-217">This must be an entity type from the same hierarchy as the entity set's element type.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="3a431-218">キー値を提供する <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-218">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="3a431-219">これらの式は、参照先のエンティティ型のキー プロパティと (数、型、および順序が) 一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-219">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-220">指定されたキー値に基づいて指定された型の特定のエンティティへの参照をエンコードする新しい <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-220">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-221">特定のエンティティ セットに指定されたキー値を持つ要素を参照する新しい DbRefExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-221">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-222">
            <paramref name="entitySet" /> または <paramref name="entityType" /> が null か、または、<paramref name="keyValues" /> が null であるか null を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-222">
              <paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-223">
            <paramref name="keyValues" /> の数が、<paramref name="entitySet" /> の要素の型で宣言されたキーのメンバーの数と一致しないか、<paramref name="keyValues" /> に、対応するキーのメンバーの型と互換性のない結果型を持つ式が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-223">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="3a431-224">参照先の要素が存在するエンティティ セット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-224">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="3a431-225">参照先となるエンティティの特定の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-225">The specific type of the referenced entity.</span>
          </span>
          <span data-ttu-id="3a431-226">エンティティ セットの要素型と同じ階層のエンティティ型にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-226">This must be an entity type from the same hierarchy as the entity set's element type.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="3a431-227">キー値を提供する <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-227">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="3a431-228">これらの式は、参照先のエンティティ型のキー プロパティと (数、型、および順序が) 一致する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-228">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-229">指定されたキー値に基づいて指定された型の特定のエンティティへの参照をエンコードする新しい <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-229">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-230">特定のエンティティ セットに指定されたキー値を持つ要素を参照する新しい DbRefExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-230">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-231">
            <paramref name="entitySet" /> または <paramref name="entityType" /> が null か、または、<paramref name="keyValues" /> が null であるか null を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-231">
              <paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-232">
            <paramref name="keyValues" /> の数が、<paramref name="entitySet" /> の要素の型で宣言されたキーのメンバーの数と一致しないか、<paramref name="keyValues" /> に、対応するキーのメンバーの型と互換性のない結果型を持つ式が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-232">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CrossApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-233">特定の入力セットの各要素につき 1 回、指定された <paramref name="apply" /> 式を評価し、対応する入力列と適用列を持った行のコレクションを生成する新しい <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-233">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-234">入力セットを指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-234">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="3a431-235">入力セットのメンバーごとに 1 回評価するロジックを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-235">A method that specifies the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-236">特定の入力セットの各要素につき 1 回、指定された <paramref name="apply" /> 式を評価し、対応する入力列と適用列を持った行のコレクションを生成する新しい <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-236">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="3a431-237">
            <paramref name="apply" /> で空のセットに評価される行は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-237">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-238">入力とバインディングの適用が指定され、CrossApply の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> が設定された新しい DbApplyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-238">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-239">
            <paramref name="apply" /> の結果に null の名前または式が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-239">The result of <paramref name="apply" /> contains a name or expression that is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-240">
            <paramref name="apply" /> の結果に、式バインディングで無効な名前または式が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-240">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3a431-241">入力セットを指定する <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-241">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="3a431-242">入力セットのメンバーごとに 1 回評価するロジックを指定する <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-242">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-243">特定の入力セットの各要素につき 1 回、指定された <paramref name="apply" /> 式を評価し、対応する入力列と適用列を持った行のコレクションを生成する新しい <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-243">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="3a431-244">
            <paramref name="apply" /> で空のセットに評価される行は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-244">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-245">入力とバインディングの適用が指定され、CrossApply の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> が設定された新しい DbApplyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-245">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-246">
            <paramref name="input" /> または <paramref name="apply" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-246">
              <paramref name="input" /> or <paramref name="apply" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CrossJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossJoin (inputs As IEnumerable(Of DbExpressionBinding)) As DbCrossJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCrossJoinExpression ^ CrossJoin(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ inputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCrossJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="inputs">
          <span data-ttu-id="3a431-247">入力セットを指定する式バインディングのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-247">A list of expression bindings that specifies the input sets.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-248">入力された式バインディングのリストによって指定されたセットを無条件に結合する新しい <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-248">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that unconditionally joins the sets specified by the list of input expression bindings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-249">入力セットの無条件結合を表す、CrossJoin の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を持つ、新しい DbCrossJoinExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-249">A new DbCrossJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossJoin, that represents the unconditional join of the input sets.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-250">
            <paramref name="inputs" /> が null か、または null 要素が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-250">
              <paramref name="inputs" /> is null or contains null element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-251">
            <paramref name="inputs" /> に含まれる式バインディングが 2 個未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-251">
              <paramref name="inputs" /> contains fewer than 2 expression bindings.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Deref">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDerefExpression Deref(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Deref (argument As DbExpression) As DbDerefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDerefExpression ^ Deref(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDerefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-252">参照を提供する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-252">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that provides the reference.</span>
          </span>
          <span data-ttu-id="3a431-253">この式は、参照型とする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-253">This expression must have a reference Type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-254">指定された参照式に基づいて特定のエンティティを取得する新しい <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-254">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that retrieves a specific Entity given a reference expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-255">指定された Entity を取得する新しい DbDerefExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-255">A new DbDerefExpression that retrieves the specified Entity.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-256">
            <paramref name="argument" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-256">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-257">
            <paramref name="argument" /> の結果型が参照型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-257">
              <paramref name="argument" /> does not have a reference result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDistinctExpression Distinct(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct (argument As DbExpression) As DbDistinctExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDistinctExpression ^ Distinct(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDistinctExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-258">重複除去操作の実行対象となるセットを定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-258">An expression that defines the set over which to perfom the distinct operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-259">指定されたセット引数から重複を取り除いた新しい <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-259">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that removes duplicates from the given set argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-260">指定されたセット引数に適用される別個の操作を表す新しい DbDistinctExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-260">A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-261">
            <paramref name="argument" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-261">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-262">
            <paramref name="argument" /> の結果型がコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-262">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Divide(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Divide (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Divide(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-263">引数 left を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-263">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-264">引数 right を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-264">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-265">引数 left を引数 right で除算する新しい <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-265">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that divides the left argument by the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-266">除算演算を表す新しい DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-266">A new DbArithmeticExpression representing the division operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-267">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-267">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-268">
            <paramref name="left" /> または <paramref name="right" /> の結果型が、同じ数値型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-268">No common numeric result type exists between <paramref name="left" /> or <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbElementExpression Element(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Element (argument As DbExpression) As DbElementExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbElementExpression ^ Element(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbElementExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-269">入力セットを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-269">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-270">セットをシングルトンに変換する新しい <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-270">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that converts a set into a singleton.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-271">設定した引数のシングルトンへの変換を表す DbElementExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-271">A DbElementExpression that represents the conversion of the set argument to a singleton.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-272">
            <paramref name="argument" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-272">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-273">
            <paramref name="argument" /> の結果型がコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-273">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression Equal(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Equal (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ Equal(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-274">引数 left を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-274">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-275">引数 right を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-275">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-276">引数 left と引数 right を比較して等しいかどうかを調べる新しい <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-276">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-277">等価比較を表す新しい DbComparisonExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-277">A new DbComparisonExpression representing the equality comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-278">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-278">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-279">
            <paramref name="left" /> と <paramref name="right" /> の結果型が、同じ等値比較できる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-279">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExceptExpression Except(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (left As DbExpression, right As DbExpression) As DbExceptExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExceptExpression ^ Except(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExceptExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-280">セット引数 left を定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-280">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-281">セット引数 right を定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-281">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-282">セット引数 left からセット引数 right を減算する新しい <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-282">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that computes the subtraction of the right set argument from the left set argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-283">右の引数から左の引数の差を表す新しい DbExceptExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-283">A new DbExceptExpression that represents the difference of the left argument from the right argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-284">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-284">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-285">
            <paramref name="left" /> と <paramref name="right" /> の結果型が、同じコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-285">No common collection result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Exists(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exists (argument As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Exists(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-286">入力セットを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-286">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-287">指定されたセット引数が空以外であるかどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-287">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-288">指定された引数を持つ新しい <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> に適用される新しい <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-288">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-289">
            <paramref name="argument" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-289">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-290">
            <paramref name="argument" /> の結果型がコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-290">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression False" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property False As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ False { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-291">ブール値 <see langword="false" /> を持つ <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-291">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a431-292">ブール値 <see langword="false" /> を持つ <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-292">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Filter(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Filter (input As DbExpressionBinding, predicate As DbExpression) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Filter(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3a431-293">入力セットを指定する式バインディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-293">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="3a431-294">入力セットのメンバーごとに評価する述語を表す式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-294">An expression representing a predicate to evaluate for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-295">指定された述語を使用して指定された入力セットの要素をフィルター処理する新しい <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-295">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-296">フィルター処理されたセットを生成する新しい DbFilterExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-296">A new DbFilterExpression that produces the filtered set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-297">
            <paramref name="input" /> または <paramref name="predicate" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-297">
              <paramref name="input" /> or <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-298">
            <paramref name="predicate" /> の結果型がブール型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-298">
              <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FullOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-299">FullOuterJoin を <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> として使用し、指定された結合条件の左辺と右辺の式によって示されたセットを結合する新しい <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-299">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-300">セット引数 left を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-300">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-301">セット引数 right を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-301">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="3a431-302">結合条件を表すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-302">A method representing the condition on which to join.</span>
          </span>
          <span data-ttu-id="3a431-303">このメソッドは、結合条件のロジックを備え、ブール型の結果を返す式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-303">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-304">FullOuterJoin を <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> として使用し、指定された結合条件の左辺と右辺の式によって示されたセットを結合する新しい <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-304">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-305">新しい DbJoinExpression は、FullOuterJoin の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を使用して作成され、指定した結合条件で左の入力セットと右の入力セットに適用される完全外部結合操作を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-305">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-306">
            <paramref name="joinCondition" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-306">The expression produced by <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-307">
            <paramref name="joinCondition" /> の生成したこの式には、ブール型の結果型がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-307">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-308">セット引数 left を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-308">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-309">セット引数 right を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-309">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="3a431-310">結合条件を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-310">An expression that specifies the condition on which to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-311">FullOuterJoin を <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> として使用し、指定された結合条件の左辺と右辺の式バインディングによって示されたセットを結合する新しい <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-311">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-312">新しい DbJoinExpression は、FullOuterJoin の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を使用して作成され、指定した結合条件で左の入力セットと右の入力セットに適用される完全外部結合操作を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-312">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-313">
            <paramref name="left" />、<paramref name="right" />、または <paramref name="joinCondition" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-313">
              <paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-314">
            <paramref name="joinCondition" /> の生成したこの式には、ブール型の結果型がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-314">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEntityRef (argument As DbExpression) As DbEntityRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbEntityRefExpression ^ GetEntityRef(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbEntityRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-315">エンティティを表す式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-315">The expression that provides the entity.</span>
          </span>
          <span data-ttu-id="3a431-316">この式は、エンティティを結果型とする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-316">This expression must have an entity result type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-317">指定されたエンティティの参照を構造形式で取得する新しい <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-317">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that retrieves the ref of the specifed entity in structural form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-318">指定されたエンティティへの参照を取得する新しい DbEntityRefExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-318">A new DbEntityRefExpression that retrieves a reference to the specified entity.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-319">
            <paramref name="argument" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-319">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-320">
            <paramref name="argument" /> の結果型がエンティティ型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-320">
              <paramref name="argument" /> does not have an entity result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRefKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRefKey (argument As DbExpression) As DbRefKeyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefKeyExpression ^ GetRefKey(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefKeyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-321">参照を表す式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-321">The expression that provides the reference.</span>
          </span>
          <span data-ttu-id="3a431-322">この式は、エンティティ要素型を持つ参照型である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-322">This expression must have a reference Type with an Entity element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-323">指定された参照のキー値を構造形式で取得する新しい <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-323">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that retrieves the key values of the specifed reference in structural form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-324">指定された参照のキー値を取得する新しい DbRefKeyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-324">A new DbRefKeyExpression that retrieves the key values of the specified reference.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-325">
            <paramref name="argument" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-325">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-326">
            <paramref name="argument" /> の結果型が参照型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-326">
              <paramref name="argument" /> does not have a reference result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-327">引数 left を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-327">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-328">引数 right を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-328">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-329">引数 left が引数 right よりも大きいかどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-329">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-330">"より大きい" 比較を表す新しい DbComparisonExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-330">A new DbComparisonExpression representing the greater-than comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-331">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-331">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-332">
            <paramref name="left" /> と <paramref name="right" /> の結果型が、同じ順序比較できる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-332">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-333">引数 left を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-333">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-334">引数 right を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-334">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-335">引数 left が引数 right 以上かどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-335">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than or equal to the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-336">"以上" 比較を表す新しい DbComparisonExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-336">A new DbComparisonExpression representing the greater-than-or-equal-to comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-337">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-337">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-338">
            <paramref name="left" /> と <paramref name="right" /> の結果型が、同じ順序比較できる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-338">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBind (input As DbExpression) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3a431-339">バインドする式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-339">The expression to bind.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-340">生成された変数とグループ変数の名前を使用して、指定された式をバインドする新しいグループ式バインディングを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-340">Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-341">指定された式と生成された変数名およびグループ変数名でバインドする新しいグループ式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-341">A new group expression binding with the specified expression and a generated variable name and group variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-342">
            <paramref name="input" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-342">
              <paramref name="input" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-343">
            <paramref name="input" /> の結果型がコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-343">
              <paramref name="input" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBindAs (input As DbExpression, varName As String, groupVarName As String) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName, System::String ^ groupVarName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
        <Parameter Name="groupVarName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3a431-344">バインドする式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-344">The expression to bind.</span>
          </span>
        </param>
        <param name="varName">
          <span data-ttu-id="3a431-345">バインディングに使用する変数名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-345">The variable name that should be used for the binding.</span>
          </span>
        </param>
        <param name="groupVarName">
          <span data-ttu-id="3a431-346">新しいグループ式バインディングがグループ化式で使用されたときにグループの参照に使用される変数名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-346">The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-347">指定された変数名とグループ変数の名前を使用して、指定された式をバインドする新しい <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-347">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that uses the specified variable name and group variable names to bind the given expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-348">指定された式、変数名およびグループ変数名でバインドする新しいグループ式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-348">A new group expression binding with the specified expression, variable name and group variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-349">
            <paramref name="input" />、<paramref name="varName" />、または <paramref name="groupVarName" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-349">
              <paramref name="input" />,  <paramref name="varName" /> or <paramref name="groupVarName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-350">
            <paramref name="input" /> の結果型がコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-350">
              <paramref name="input" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupByExpression GroupBy(class System.Data.Common.CommandTrees.DbGroupExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy (input As DbGroupExpressionBinding, keys As IEnumerable(Of KeyValuePair(Of String, DbExpression)), aggregates As IEnumerable(Of KeyValuePair(Of String, DbAggregate))) As DbGroupByExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupByExpression ^ GroupBy(System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ keys, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt;&gt; ^ aggregates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupByExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbGroupExpressionBinding" RefType="this" />
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
        <Parameter Name="aggregates" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3a431-351">入力セットを指定する <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-351">A <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="keys">
          <span data-ttu-id="3a431-352">グループ化列を定義する文字列/式ペアのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-352">A list of string-expression pairs that define the grouping columns.</span>
          </span>
        </param>
        <param name="aggregates">
          <span data-ttu-id="3a431-353">適用する集計を指定する式のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-353">A list of expressions that specify aggregates to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-354">指定されたグループ キーに従って入力セットの要素をグループ化し、指定された集約を適用する新しい <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-354">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that groups the elements of the input set according to the specified group keys and applies the given aggregates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-355">指定された入力セット、グループ化キー、および集計を持つ新しい DbGroupByExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-355">A new DbGroupByExpression with the specified input set, grouping keys and aggregates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-356">DbGroupByExpression が使用するは、キーの一覧または空である集計が、両方の一覧のいずれか。</span><span class="sxs-lookup"><span data-stu-id="3a431-356">DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-357">
            <paramref name="input" />、<paramref name="keys" />、または <paramref name="aggregates" /> が null であるか、<paramref name="keys" /> に含まれる列キーまたは式が null であるか、<paramref name="aggregates" /> に含まれる集約の列名または集約が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-357">
              <paramref name="input" />,  <paramref name="keys" /> or <paramref name="aggregates" /> is null,  <paramref name="keys" /> contains a null column key or expression, or <paramref name="aggregates" /> contains a null aggregate column name or aggregate.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-358">
            <paramref name="keys" /> と <paramref name="aggregates" /> がどちらも空であるか、無効な列名または重複する列名が指定されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-358">Both <paramref name="keys" /> and <paramref name="aggregates" /> are empty, or an invalid or duplicate column name was specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InnerJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-359">InnerJoin を <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> として使用し、指定された結合条件の左辺と右辺の式によって示されたセットを結合する新しい <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-359">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-360">セット引数 left を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-360">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-361">セット引数 right を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-361">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="3a431-362">結合条件を表すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-362">A method representing the condition on which to join.</span>
          </span>
          <span data-ttu-id="3a431-363">このメソッドは、結合条件のロジックを備え、ブール型の結果を返す式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-363">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-364">InnerJoin を <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> として使用し、指定された結合条件の左辺と右辺の式によって示されたセットを結合する新しい <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-364">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-365">特定の結合条件下で左右の入力セットに適用された内部結合操作を表す、InnerJoin の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を持つ、新しい DbJoinExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-365">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-366">
            <paramref name="joinCondition" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-366">The expression produced by <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-367">
            <paramref name="joinCondition" /> の生成したこの式には、ブール型の結果型がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-367">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-368">セット引数 left を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-368">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-369">セット引数 right を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-369">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="3a431-370">結合条件を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-370">An expression that specifies the condition on which to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-371">InnerJoin を <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> として使用し、指定された結合条件の左辺と右辺の式バインディングによって示されたセットを結合する新しい <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-371">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-372">特定の結合条件下で左右の入力セットに適用された内部結合操作を表す、InnerJoin の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を持つ、新しい DbJoinExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-372">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-373">
            <paramref name="left" />、<paramref name="right" />、または <paramref name="joinCondition" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-373">
              <paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-374">
            <paramref name="joinCondition" /> の結果型がブール型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-374">
              <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIntersectExpression Intersect(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect (left As DbExpression, right As DbExpression) As DbIntersectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIntersectExpression ^ Intersect(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIntersectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-375">セット引数 left を定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-375">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-376">セット引数 right を定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-376">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-377">セット引数 left と right の積集合を計算する新しい <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-377">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that computes the intersection of the left and right set arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-378">左辺引数と右辺引数の積集合を表す新しい DbIntersectExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-378">A new DbIntersectExpression that represents the intersection of the left and right arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-379">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-379">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-380">
            <paramref name="left" /> または <paramref name="right" /> の結果型が、同じコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-380">No common collection result type exists between <paramref name="left" /> or <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-381">指定した引数に対する指定したラムダ関数の適用を表す新しい <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-381">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, arguments As IEnumerable(Of DbExpression)) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="lambda">
          <span data-ttu-id="3a431-382">適用するラムダ関数を表す <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-382">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="3a431-383">引数を提供する式のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-383">A list of expressions that provide the arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-384">指定した引数に対する指定したラムダ関数の適用を表す新しい <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-384">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-385">ラムダ関数の適用を表す新しい DbLambdaExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-385">A new DbLambdaExpression representing the Lambda function application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-386">
            <paramref name="lambda" /> または <paramref name="arguments" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-386">
              <paramref name="lambda" /> or <paramref name="arguments" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-387">
            <paramref name="arguments" /> の要素数が、<paramref name="lambda" /> で宣言された変数の数と同じでないか、<paramref name="arguments" /> に、対応する変数の型と同じでない、またはその型に上位変換できない型の結果を返す式が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-387">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, ParamArray arguments As DbExpression()) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="lambda">
          <span data-ttu-id="3a431-388">適用するラムダ関数を表す <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-388">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="3a431-389">引数を提供する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-389">Expressions that provide the arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-390">指定した引数に対する指定したラムダ関数の適用を表す新しい <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-390">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-391">ラムダ関数の適用を表す新しい DbLambdaExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-391">A new DbLambdaExpression representing the Lambda function application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-392">
            <paramref name="lambda" /> または <paramref name="arguments" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-392">
              <paramref name="lambda" /> or <paramref name="arguments" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-393">
            <paramref name="arguments" /> の要素数が、<paramref name="lambda" /> で宣言された変数の数と同じでないか、<paramref name="arguments" /> に、対応する変数の型と同じでない、またはその型に上位変換できない型の結果を返す式が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-393">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, arguments As IEnumerable(Of DbExpression)) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="3a431-394">呼び出す関数のメタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-394">Metadata for the function to invoke.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="3a431-395">関数の引数を提供する式のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-395">A list of expressions that provide the arguments to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-396">指定された引数を使用して、指定された関数の呼び出しを表す新しい <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-396">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-397">関数の呼び出しを表す新しい DbFunctionExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-397">A new DbFunctionExpression representing the function invocation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-398">
            <paramref name="function" /> が null、または <paramref name="arguments" /> が null か、null を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-398">
              <paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-399">
            <paramref name="arguments" /> の数が <paramref name="function" /> で宣言されたパラメーターの数と等しくないか、または <paramref name="arguments" /> に、対応する関数のパラメーター型と等しくないか上位変換できない結果の型を持つ式が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-399">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, ParamArray arguments As DbExpression()) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="3a431-400">呼び出す関数のメタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-400">Metadata for the function to invoke.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="3a431-401">関数の引数を提供する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-401">Expressions that provide the arguments to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-402">指定された引数を使用して、指定された関数の呼び出しを表す新しい <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-402">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-403">関数の呼び出しを表す新しい DbFunctionExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-403">A new DbFunctionExpression representing the function invocation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-404">
            <paramref name="function" /> が null、または <paramref name="arguments" /> が null か、null を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-404">
              <paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-405">
            <paramref name="arguments" /> の数が <paramref name="function" /> で宣言されたパラメーターの数と等しくないか、または <paramref name="arguments" /> に、対応する関数のパラメーター型と等しくないか上位変換できない結果の型を持つ式が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-405">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsEmpty (argument As DbExpression) As DbIsEmptyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsEmptyExpression ^ IsEmpty(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsEmptyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-406">入力セットを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-406">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-407">指定されたセット引数が空のセットであるかどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-407">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that determines whether the specified set argument is an empty set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-408">指定された引数を持つ新しい DbIsEmptyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-408">A new DbIsEmptyExpression with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-409">
            <paramref name="argument" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-409">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-410">
            <paramref name="argument" /> の結果型がコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-410">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsNullExpression IsNull(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNull (argument As DbExpression) As DbIsNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsNullExpression ^ IsNull(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-411">引数を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-411">An expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-412">指定された引数が null であるかどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-412">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that determines whether the specified argument is null.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-413">指定された引数を持つ新しい DbIsNullExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-413">A new DbIsNullExpression with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-414">
            <paramref name="argument" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-414">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-415">
            <paramref name="argument" /> の結果型がコレクション型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-415">
              <paramref name="argument" /> has a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOf(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOf (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOf(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-416">インスタンスを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-416">An expression that specifies the instance.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="3a431-417">インスタンスの結果型と比較する型を指定する型メタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-417">Type metadata that specifies the type that the instance's result type should be compared to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-418">指定された引数が、指定された型 (またはサブタイプ) の引数であるかどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-418">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that determines whether the given argument is of the specified type or a subtype.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-419">指定されたインスタンスおよび型と DbExpressionKind IsOf を持つ新しい DbIsOfExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-419">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-420">DbIsOfExpression では、する必要があります`argument`があり、ポリモーフィックな結果型を`type`は、その結果の型と同じ型階層からの型。</span><span class="sxs-lookup"><span data-stu-id="3a431-420">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-421">
            <paramref name="argument" /> または <paramref name="type" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-421">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-422">
            <paramref name="type" /> が属する型階層が、<paramref name="argument" /> の結果型が属する型階層と異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-422">
              <paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsOfOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOfOnly (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOfOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-423">インスタンスを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-423">An expression that specifies the instance.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="3a431-424">インスタンスの結果型と比較する型を指定する型メタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-424">Type metadata that specifies the type that the instance's result type should be compared to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-425">指定された引数の型が、指定された型そのものである (サブタイプではない) かどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-425">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-426">指定されたインスタンスおよび型と DbExpressionKind IsOfOnly を持つ新しい DbIsOfExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-426">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-427">DbIsOfExpression では、する必要があります`argument`があり、ポリモーフィックな結果型を`type`は、その結果の型と同じ型階層からの型。</span><span class="sxs-lookup"><span data-stu-id="3a431-427">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-428">
            <paramref name="argument" /> または <paramref name="type" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-428">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-429">
            <paramref name="type" /> が属する型階層が、<paramref name="argument" /> の結果型が属する型階層と異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-429">
              <paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression Join(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="outer">
          <span data-ttu-id="3a431-430">外部セット引数を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-430">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="3a431-431">inner セット引数を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-431">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span>
          </span>
        </param>
        <param name="outerKey">
          <span data-ttu-id="3a431-432">外部セットの要素からどのように外部キーの値を得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-432">A method that specifies how the outer key value should be derived from an element of the outer set.</span>
          </span>
        </param>
        <param name="innerKey">
          <span data-ttu-id="3a431-433">内部セットの要素からどのように内部キーの値を得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-433">A method that specifies how the inner key value should be derived from an element of the inner set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-434">外部式と内部式によって指定されたセットを結合する新しい <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> を作成します。セットは、InnerJoin に <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を使用し、指定された外部キーと内部キー間の等価条件に基づいて結合されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-434">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-435">新しい DbJoinExpression は、InnerJoin の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を使用して作成され、外部キー値と内部キー値の等価性を比較する結合条件で左の入力セットと右の入力セットに適用される内部結合操作を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-435">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-436">
            <paramref name="outerKey" /> または <paramref name="innerKey" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-436">The expression produced by <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-437">
            <paramref name="outerKey" /> と <paramref name="innerKey" /> によって生成された式を等価比較できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-437">The expressions produced by <paramref name="outerKey" /> and <paramref name="innerKey" /> are not comparable for equality.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TSelector) (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector">
          <span data-ttu-id="3a431-438">型、<c>セレクター</c>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-438">The type of the <c>selector</c>.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="3a431-439">外部セット引数を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-439">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="3a431-440">inner セット引数を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-440">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span>
          </span>
        </param>
        <param name="outerKey">
          <span data-ttu-id="3a431-441">外部セットの要素からどのように外部キーの値を得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-441">A method that specifies how the outer key value should be derived from an element of the outer set.</span>
          </span>
        </param>
        <param name="innerKey">
          <span data-ttu-id="3a431-442">内部セットの要素からどのように内部キーの値を得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-442">A method that specifies how the inner key value should be derived from an element of the inner set.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="3a431-443">内部セットと外部セットの要素から結果セットの要素をどのように得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-443">A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.</span>
          </span>
          <span data-ttu-id="3a431-444">このメソッドは、Join に対応し、<see cref="T:System.Data.Common.CommandTrees.DbExpression" /> に解決できる型のインスタンスを生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-444">This method must produce an instance of a type that is compatible with Join and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          </span>
          <span data-ttu-id="3a431-445">
            <c>TSelector</c> の対応要件については、「解説」を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-445">Compatibility requirements for <c>TSelector</c> are described in remarks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-446">指定されたセレクターで、外部式と内部式によって指定されたセットを射影する新しい <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> を作成します。セットは、InnerJoin に <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を使用し、指定された外部キーと内部キー間の等価条件に基づいて結合されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-446">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-447">指定されたセレクターで射影し、新しい DbJoinExpression を入力として使用する新しい DbProjectExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-447">A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input.</span>
          </span>
          <span data-ttu-id="3a431-448">入力の DbJoinExpression は、InnerJoin に <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を使用して作成されます。これは、外部キー値と内部キー値の等価性を比較する結合条件で左の入力セットと右の入力セットに適用される内部結合操作を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-448">The input DbJoinExpression is created with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-449">参加に合うように`TSelector`から派生する必要があります<xref:System.Data.Common.CommandTrees.DbExpression>、DbExpression 派生プロパティを持つ匿名型にする必要がありますか。</span><span class="sxs-lookup"><span data-stu-id="3a431-449">To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="3a431-450">サポートされている型の例を次に`TSelector`:</span><span class="sxs-lookup"><span data-stu-id="3a431-450">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => o.Property("Name"))  
```  
  
 <span data-ttu-id="3a431-451">(`TSelector`は<xref:System.Data.Common.CommandTrees.DbPropertyExpression>)。</span><span class="sxs-lookup"><span data-stu-id="3a431-451">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => new { OName = o.Property("Name"), IName = i.Property("Name") })  
```  
  
 <span data-ttu-id="3a431-452">(`TSelector`は、DbExpression 派生プロパティを持つ匿名型)。</span><span class="sxs-lookup"><span data-stu-id="3a431-452">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-453">DbExpression に変換された <paramref name="selector" /> の結果が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-453">The result of <paramref name="selector" /> is null after conversion to DbExpression.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-454">
            <paramref name="Selector" /> の結果が SelectMany に対応していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-454">The result of <paramref name="Selector" /> is not compatible with SelectMany.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Lambda">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-455">指定されたインライン ラムダ関数の実装と仮パラメーターを使用して、<see cref="T:System.Data.Common.CommandTrees.DbLambda" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-455">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, variables As IEnumerable(Of DbVariableReferenceExpression)) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="3a431-456">ラムダ関数のロジックを定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-456">An expression that defines the logic of the Lambda function.</span>
          </span>
        </param>
        <param name="variables">
          <span data-ttu-id="3a431-457">ラムダ関数の仮パラメーターを表す <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> コレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-457">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span>
          </span>
          <span data-ttu-id="3a431-458">これらの変数は、<c>body</c> 式の中で使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-458">These variables are valid for use in the <c>body</c> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-459">指定されたインライン ラムダ関数の実装と仮パラメーターを使用して、<see cref="T:System.Data.Common.CommandTrees.DbLambda" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-460">指定した本体と正式なパラメーターでインライン ラムダ関数を記述する新しい DbLambda。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-460">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-461">
            <paramref name="variables" /> が null か、null を含んでいます。または、<paramref name="body" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-461">
              <paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-462">
            <paramref name="variables" /> に、同じ変数名の要素が複数含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-462">
              <paramref name="variables" /> contains more than one element with the same variable name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, params System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, ParamArray variables As DbVariableReferenceExpression()) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, ... cli::array &lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="3a431-463">ラムダ関数のロジックを定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-463">An expression that defines the logic of the Lambda function.</span>
          </span>
        </param>
        <param name="variables">
          <span data-ttu-id="3a431-464">ラムダ関数の仮パラメーターを表す <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> コレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-464">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span>
          </span>
          <span data-ttu-id="3a431-465">これらの変数は、<c>body</c> 式の中で使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-465">These variables are valid for use in the <c>body</c> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-466">指定されたインライン ラムダ関数の実装と仮パラメーターを使用して、<see cref="T:System.Data.Common.CommandTrees.DbLambda" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-466">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-467">指定した本体と正式なパラメーターでインライン ラムダ関数を記述する新しい DbLambda。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-467">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-468">
            <paramref name="variables" /> が null か、null を含んでいます。または、<paramref name="body" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-468">
              <paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-469">
            <paramref name="variables" /> に、同じ変数名の要素が複数含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-469">
              <paramref name="variables" /> contains more than one element with the same variable name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-470">LeftOuterJoin を <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> として使用し、指定された結合条件の左辺と右辺の式によって示されたセットを結合する新しい <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-470">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-471">セット引数 left を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-471">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-472">セット引数 right を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-472">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="3a431-473">結合条件を表すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-473">A method representing the condition on which to join.</span>
          </span>
          <span data-ttu-id="3a431-474">このメソッドは、結合条件のロジックを備え、ブール型の結果を返す式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-474">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-475">LeftOuterJoin を <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> として使用し、指定された結合条件の左辺と右辺の式によって示されたセットを結合する新しい <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-475">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-476">特定の結合条件下で左右の入力セットに適用された左外部結合操作を表す、LeftOuterJoin の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を持つ、新しい DbJoinExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-476">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-477">
            <paramref name="joinCondition" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-477">The expression produced by <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-478">
            <paramref name="joinCondition" /> の生成したこの式には、ブール型の結果型がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-478">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-479">セット引数 left を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-479">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-480">セット引数 right を指定する <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-480">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="3a431-481">結合条件を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-481">An expression that specifies the condition on which to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-482">LeftOuterJoin を <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> として使用し、指定された結合条件の左辺と右辺の式バインディングによって示されたセットを結合する新しい <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-482">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-483">特定の結合条件下で左右の入力セットに適用された左外部結合操作を表す、LeftOuterJoin の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> を持つ、新しい DbJoinExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-483">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-484">
            <paramref name="left" />、<paramref name="right" />、または <paramref name="joinCondition" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-484">
              <paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-485">
            <paramref name="joinCondition" /> の結果型がブール型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-485">
              <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-486">引数 left を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-486">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-487">引数 right を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-487">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-488">引数 left が引数 right よりも小さいかどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-488">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-489">"より小さい" 比較を表す新しい DbComparisonExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-489">A new DbComparisonExpression representing the less-than comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-490">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-490">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-491">
            <paramref name="left" /> と <paramref name="right" /> の結果型が、同じ順序比較できる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-491">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-492">引数 left を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-492">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-493">引数 right を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-493">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-494">引数 left が引数 right 以下かどうかを確認する新しい <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-494">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than or equal to the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-495">"以下" 比較を表す新しい DbComparisonExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-495">A new DbComparisonExpression representing the less-than-or-equal-to comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-496">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-496">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-497">
            <paramref name="left" /> と <paramref name="right" /> の結果型が、同じ等価比較と順序比較ができる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-497">No common result type that is both equality- and order-comparable exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Like">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-498">指定された入力文字列と特定のパターンとを比較する新しい <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-498">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-499">入力文字列を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-499">An expression that specifies the input string.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="3a431-500">パターン文字列を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-500">An expression that specifies the pattern string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-501">指定された入力文字列と特定のパターンとを比較する新しい <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-501">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-502">指定された入力、パターン、および null エスケープを持つ新しい DbLikeExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-502">A new DbLikeExpression with the specified input, pattern and a null escape.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-503">
            <paramref name="Argument" /> または <paramref name="pattern" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-503">
              <paramref name="Argument" /> or <paramref name="pattern" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-504">
            <paramref name="Argument" /> または <paramref name="pattern" /> の結果型が文字列型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-504">
              <paramref name="Argument" /> or <paramref name="pattern" /> does not have a string result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern, class System.Data.Common.CommandTrees.DbExpression escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression, escape As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern, System::Data::Common::CommandTrees::DbExpression ^ escape);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="escape" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-505">入力文字列を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-505">An expression that specifies the input string.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="3a431-506">パターン文字列を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-506">An expression that specifies the pattern string.</span>
          </span>
        </param>
        <param name="escape">
          <span data-ttu-id="3a431-507">エスケープ文字列を指定する式 (省略可能)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-507">An optional expression that specifies the escape string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-508">指定された入力文字列と特定のパターンとを、エスケープ (省略可能) を使用して比較する新しい <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-508">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern using the optional escape.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-509">指定された入力、パターン、およびエスケープを持つ新しい DbLikeExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-509">A new DbLikeExpression with the specified input, pattern and escape.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-510">
            <paramref name="argument" />、<paramref name="pattern" />、または <paramref name="escape" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-510">
              <paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-511">
            <paramref name="argument" />、<paramref name="pattern" />、または <paramref name="escape" /> の結果型が文字列型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-511">
              <paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> does not have a string result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Limit(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Limit (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Limit(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-512">入力コレクションを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-512">An expression that specifies the input collection.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3a431-513">制限値を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-513">An expression that specifies the limit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-514">Argument コレクションの要素数を指定した数の制限値に制限する新しい <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> オブジェクトを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-514">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span>
          </span>
          <span data-ttu-id="3a431-515">同じ順位の結果は出力に含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-515">Tied results are not included in the output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-516">関連付けられた結果を含まない、指定された引数と数の制限値を持つ新しい DbLimitExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-516">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-517">
            <paramref name="argument" /> または <paramref name="count" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-517">
              <paramref name="argument" /> or <paramref name="count" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-518">
            <paramref name="argument" /> の結果型がコレクション型でないか、<paramref name="count" /> の結果型が 64 ビット整数型でないか、この型に上位変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-518">
              <paramref name="argument" /> does not have a collection result type, or <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Minus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Minus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Minus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-519">引数 left を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-519">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-520">引数 right を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-520">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-521">引数 left から引数 right を減算する新しい <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-521">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that subtracts the right argument from the left argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-522">減算演算を表す新しい DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-522">A new DbArithmeticExpression representing the subtraction operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-523">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-523">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-524">
            <paramref name="left" /> と <paramref name="right" /> の結果型が、同じ数値型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-524">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Modulo(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Modulo (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Modulo(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-525">引数 left を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-525">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-526">引数 right を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-526">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-527">引数 left を引数 right で割った余りを求める新しい <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-527">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that computes the remainder of the left argument divided by the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-528">モジュロ演算を表す新しい DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-528">A new DbArithmeticExpression representing the modulo operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-529">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-529">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-530">
            <paramref name="left" /> と <paramref name="right" /> の結果型が、同じ数値型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-530">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Multiply(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Multiply (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Multiply(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-531">引数 left を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-531">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-532">引数 right を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-532">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-533">引数 left に引数 right を乗算する新しい <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-533">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that multiplies the left argument by the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-534">乗算演算を表す新しい DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-534">A new DbArithmeticExpression representing the multiplication operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-535">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-535">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-536">
            <paramref name="left" /> と <paramref name="right" /> の結果型が、同じ数値型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-536">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-537">コンポジションまたはアソシエーション リレーションシップのナビゲーションを表す新しい <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-537">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Common.CommandTrees.DbExpression navigateFrom, class System.Data.Metadata.Edm.RelationshipEndMember fromEnd, class System.Data.Metadata.Edm.RelationshipEndMember toEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (navigateFrom As DbExpression, fromEnd As RelationshipEndMember, toEnd As RelationshipEndMember) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Common::CommandTrees::DbExpression ^ navigateFrom, System::Data::Metadata::Edm::RelationshipEndMember ^ fromEnd, System::Data::Metadata::Edm::RelationshipEndMember ^ toEnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="fromEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
        <Parameter Name="toEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="navigateFrom">
          <span data-ttu-id="3a431-538">ナビゲーションの起点となるインスタンスを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-538">An expression that specifies the instance from which navigation should occur.</span>
          </span>
        </param>
        <param name="fromEnd">
          <span data-ttu-id="3a431-539">ナビゲーションの発生元のリレーションシップ端を表すプロパティのメタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-539">Metadata for the property that represents the end of the relationship from which navigation should occur.</span>
          </span>
        </param>
        <param name="toEnd">
          <span data-ttu-id="3a431-540">ナビゲーションの発生先のリレーションシップ端を表すプロパティのメタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-540">Metadata for the property that represents the end of the relationship to which navigation should occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-541">コンポジションまたはアソシエーション リレーションシップのナビゲーションを表す新しい <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-541">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-542">指定されたナビゲーション ソース インスタンスから指定されたリレーションシップ型の、指定されたリレーションシップ端間のナビゲーションを表す新しい DbRelationshipNavigationExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-542">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> 参照を常にナビゲーションが発生することを必要としているため`navigateFrom`参照の結果型は常に必要があります。</span><span class="sxs-lookup"><span data-stu-id="3a431-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-544">
            <paramref name="fromEnd" />、<paramref name="toEnd" />、または <paramref name="navigateFrom" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-544">
              <paramref name="fromEnd" />,  <paramref name="toEnd" /> or <paramref name="navigateFrom" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-545">
            <paramref name="fromEnd" /> と <paramref name="toEnd" /> が同じリレーションシップ型で宣言されていないか、<paramref name="navigateFrom" /> の結果型と <paramref name="fromEnd" /> のプロパティの型に互換性がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-545">
              <paramref name="fromEnd" /> and <paramref name="toEnd" /> are not declared by the same relationship type, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of <paramref name="fromEnd" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, class System.Data.Common.CommandTrees.DbExpression navigateFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (type As RelationshipType, fromEndName As String, toEndName As String, navigateFrom As DbExpression) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Metadata::Edm::RelationshipType ^ type, System::String ^ fromEndName, System::String ^ toEndName, System::Data::Common::CommandTrees::DbExpression ^ navigateFrom);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.RelationshipType" RefType="this" />
        <Parameter Name="fromEndName" Type="System.String" />
        <Parameter Name="toEndName" Type="System.String" />
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="3a431-546">リレーションシップを表す関係の種類のメタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-546">Metadata for the relation type that represents the relationship.</span>
          </span>
        </param>
        <param name="fromEndName">
          <span data-ttu-id="3a431-547">ナビゲーションの発生元のリレーションシップ端を表す、リレーションシップ型のプロパティの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-547">The name of the property of the relation type that represents the end of the relationship from which navigation should occur.</span>
          </span>
        </param>
        <param name="toEndName">
          <span data-ttu-id="3a431-548">ナビゲーションの発生先のリレーションシップ端を表す、リレーションシップ型のプロパティの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-548">The name of the property of the relation type that represents the end of the relationship to which navigation should occur.</span>
          </span>
        </param>
        <param name="navigateFrom">
          <span data-ttu-id="3a431-549">ナビゲーションの起点となるインスタンスを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-549">An expression the specifies the instance from which naviagtion should occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-550">コンポジションまたはアソシエーション リレーションシップのナビゲーションを表す新しい <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-550">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-551">指定されたナビゲーション ソース インスタンスから指定されたリレーションシップ型の、指定されたリレーションシップ端間のナビゲーションを表す新しい DbRelationshipNavigationExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-551">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> 参照を常にナビゲーションが発生することを必要としているため`navigateFrom`参照の結果型は常に必要があります。</span><span class="sxs-lookup"><span data-stu-id="3a431-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-553">
            <paramref name="type" />、<paramref name="fromEndName" />、<paramref name="toEndName" />、または <paramref name="navigateFrom" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-553">
              <paramref name="type" />,  <paramref name="fromEndName" />,  <paramref name="toEndName" /> or <paramref name="navigateFrom" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-554">
            <paramref name="type" /> がこのコマンド ツリーのメタデータ ワークスペースに関連付けられていないか、<paramref name="navigateFrom" /> が別のコマンド ツリーに関連付けられているか、<paramref name="type" /> で <paramref name="toEndName" /> または <paramref name="fromEndName" /> という名前のリレーションシップ端プロパティが宣言されていないか、または <paramref name="navigateFrom" /> の結果型が <paramref name="fromEndName" /> という名前のリレーションシップ端プロパティのプロパティ型と互換性がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-554">
              <paramref name="type" /> is not associated with this command tree's metadata workspace or <paramref name="navigateFrom" /> is associated with a different command tree, or <paramref name="type" /> does not declare a relation end property with name <paramref name="toEndName" /> or <paramref name="fromEndName" />, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of the relation end property with name <paramref name="fromEndName" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Negate(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Negate (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Negate(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-555">引数を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-555">An expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-556">引数の値を否定する新しい <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-556">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-557">否定演算を表す新しい DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-557">A new DbArithmeticExpression representing the negation operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-558">
            <paramref name="argument" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-558">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-559">
            <paramref name="argument" /> の結果型が数値型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-559">No numeric result type exists for <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="New">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-560">新しい <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-560">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, arguments As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="instanceType">
          <span data-ttu-id="3a431-561">新しいインスタンスの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-561">The type of the new instance.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="3a431-562">新しいインスタンスの値を指定する式。インスタンスの型に従って解釈されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-562">Expressions that specify values of the new instances, interpreted according to the instance's type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-563">新しい <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-563">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          </span>
          <span data-ttu-id="3a431-564">型引数がコレクション型の場合、コレクションの要素が arguments によって指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-564">If the type argument is a collection type, the arguments specify the elements of the collection.</span>
          </span>
          <span data-ttu-id="3a431-565">それ以外の場合、arguments は新しいインスタンスのプロパティまたは列の値として使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-565">Otherwise the arguments are used as property or column values in the new instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-566">指定された型と引数を持つ新しい DbNewInstanceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-566">A new DbNewInstanceExpression with the specified type and arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-567">場合`instanceType`がコレクション型ですべての式`arguments`結果型の要素の型に上位変換である必要があります、`instanceType`です。</span><span class="sxs-lookup"><span data-stu-id="3a431-567">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="3a431-568">場合`instanceType`行型です`arguments`行型の列があるし、各式の結果型は、対応する列の型に等しいまたは昇格可能なをする必要があります、多くの式を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="3a431-568">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="3a431-569">すべての列で宣言されていない行の種類が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="3a431-569">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="3a431-570">場合`instanceType`は、エンティティ型、`arguments`そこに多くの式は、型によって定義されたプロパティとそれぞれの式の結果型は、対応するプロパティの型に等しくまたは昇格可能なをする必要がありますを含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="3a431-570">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-571">
            <paramref name="instanceType" /> または <paramref name="arguments" /> が null か、または <paramref name="arguments" /> に null が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-571">
              <paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-572">
            <paramref name="arguments" /> が空であるか、これに含まれる式の結果型が <paramref name="instanceType" /> の要件を満たしていません (「解説」セクションを参照してください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-572">
              <paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, ParamArray arguments As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instanceType">
          <span data-ttu-id="3a431-573">新しいインスタンスの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-573">The type of the new instance.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="3a431-574">新しいインスタンスの値を指定する式。インスタンスの型に従って解釈されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-574">Expressions that specify values of the new instances, interpreted according to the instance's type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-575">新しい <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-575">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          </span>
          <span data-ttu-id="3a431-576">型引数がコレクション型の場合、コレクションの要素が arguments によって指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-576">If the type argument is a collection type, the arguments specify the elements of the collection.</span>
          </span>
          <span data-ttu-id="3a431-577">それ以外の場合、arguments は新しいインスタンスのプロパティまたは列の値として使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-577">Otherwise the arguments are used as property or column values in the new instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-578">指定された型と引数を持つ新しい DbNewInstanceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-578">A new DbNewInstanceExpression with the specified type and arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-579">場合`instanceType`がコレクション型ですべての式`arguments`結果型の要素の型に上位変換である必要があります、`instanceType`です。</span><span class="sxs-lookup"><span data-stu-id="3a431-579">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="3a431-580">場合`instanceType`行型です`arguments`行型の列があるし、各式の結果型は、対応する列の型に等しいまたは昇格可能なをする必要があります、多くの式を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="3a431-580">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="3a431-581">すべての列で宣言されていない行の種類が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="3a431-581">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="3a431-582">場合`instanceType`は、エンティティ型、`arguments`そこに多くの式は、型によって定義されたプロパティとそれぞれの式の結果型は、対応するプロパティの型に等しくまたは昇格可能なをする必要がありますを含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="3a431-582">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-583">
            <paramref name="instanceType" /> または <paramref name="arguments" /> が null か、または <paramref name="arguments" /> に null が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-583">
              <paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-584">
            <paramref name="arguments" /> が空であるか、これに含まれる式の結果型が <paramref name="instanceType" /> の要件を満たしていません (「解説」セクションを参照してください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-584">
              <paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewCollection">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-585">指定した要素を含むコレクションを構築する新しい <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-585">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (elements As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="elements">
          <span data-ttu-id="3a431-586">コレクションの要素を提供する式のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-586">A list of expressions that provide the elements of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-587">指定した要素を含むコレクションを構築する新しい <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-587">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span>
          </span>
          <span data-ttu-id="3a431-588">コレクションの型は、要素の共通の型に基づきます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-588">The type of the collection is based on the common type of the elements.</span>
          </span>
          <span data-ttu-id="3a431-589">要素の共通の型が存在しない場合は例外がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-589">If no common element type exists an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-590">指定されたコレクション型と引数を持つ新しい DbNewInstanceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-590">A new DbNewInstanceExpression with the specified collection type and arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-591">
            <paramref name="elements" /> が null か、または null を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-591">
              <paramref name="elements" /> is null, or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-592">
            <paramref name="elements" /> が空であるか、結果型が共通しない式を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-592">
              <paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (params System.Data.Common.CommandTrees.DbExpression[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Data.Common.CommandTrees.DbExpression[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (ParamArray elements As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elements">
          <span data-ttu-id="3a431-593">コレクションの要素を提供する式のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-593">A list of expressions that provide the elements of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-594">指定した要素を含むコレクションを構築する新しい <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-594">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span>
          </span>
          <span data-ttu-id="3a431-595">コレクションの型は、要素の共通の型に基づきます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-595">The type of the collection is based on the common type of the elements.</span>
          </span>
          <span data-ttu-id="3a431-596">要素の共通の型が存在しない場合は例外がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-596">If no common element type exists an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-597">指定されたコレクション型と引数を持つ新しい DbNewInstanceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-597">A new DbNewInstanceExpression with the specified collection type and arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-598">
            <paramref name="elements" /> が null か、または null を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-598">
              <paramref name="elements" /> is null, or contains null..</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-599">
            <paramref name="elements" /> が空であるか、結果型が共通しない式を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-599">
              <paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewEmptyCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection(class System.Data.Metadata.Edm.TypeUsage collectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NewEmptyCollection (collectionType As TypeUsage) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewEmptyCollection(System::Data::Metadata::Edm::TypeUsage ^ collectionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collectionType">
          <span data-ttu-id="3a431-600">作成するコレクションの型メタデータ</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-600">The type metadata for the collection to create</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-601">指定されたコレクション型の空のコレクションを構築する新しい <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-601">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs an empty collection of the specified collection type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-602">指定されたコレクション型と空の <paramref name="Arguments" /> リストを持つ新しい DbNewInstanceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-602">A new DbNewInstanceExpression with the specified collection type and an empty <paramref name="Arguments" /> list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-603">
            <paramref name="collectionType" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-603">
              <paramref name="collectionType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-604">
            <paramref name="collectionType" /> がコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-604">
              <paramref name="collectionType" /> is not a collection type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow (columnValues As IEnumerable(Of KeyValuePair(Of String, DbExpression))) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewRow(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ columnValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="columnValues">
          <span data-ttu-id="3a431-605">行の構造と値を定義するキー/値のペア (文字列と DbExpression) のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-605">A list of string-DbExpression key-value pairs that defines the structure and values of the row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-606">指定された名前付き列と (式として指定される) 特定の値から成る行を生成する新しい <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-606">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that produces a row with the specified named columns and the given values, specified as expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-607">行の構築を表す新しい DbNewInstanceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-607">A new DbNewInstanceExpression that represents the construction of the row.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-608">
            <paramref name="columnValues" /> が null であるか、列名または式が null である要素を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-608">
              <paramref name="columnValues" /> is null or contains an element with a null column name or expression.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-609">
            <paramref name="columnValues" /> が空であるか、重複する列名または無効な列名を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-609">
              <paramref name="columnValues" /> is empty, or contains a duplicate or invalid column name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNotExpression Not(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Not (argument As DbExpression) As DbNotExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNotExpression ^ Not(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNotExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-610">引数を指定するブール式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-610">A Boolean expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-611">指定された引数の論理否定を実行する <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-611">Creates a <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that performs the logical negation of the given argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-612">指定された引数を持つ新しい DbNotExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-612">A new DbNotExpression with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-613">
            <paramref name="argument" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-613">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-614">
            <paramref name="argument" /> の結果型がブール型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-614">
              <paramref name="argument" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression NotEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NotEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ NotEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-615">引数 left を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-615">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-616">引数 right を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-616">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-617">引数 left と引数 right を比較して等しくないかどうかを調べる新しい <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-617">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-618">非等価比較を表す新しい DbComparisonExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-618">A new DbComparisonExpression representing the inequality comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-619">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-619">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-620">
            <paramref name="left" /> と <paramref name="right" /> の結果型が、同じ等値比較できる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-620">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNullExpression Null(class System.Data.Metadata.Edm.TypeUsage nullType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Null (nullType As TypeUsage) As DbNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNullExpression ^ Null(System::Data::Metadata::Edm::TypeUsage ^ nullType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="nullType">
          <span data-ttu-id="3a431-621">null 値の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-621">The type of the null value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-622">型指定された null 値を表す新しい <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-622">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, which represents a typed null value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-623">DbNullExpression のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-623">An instance of DbNullExpression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-624">
            <paramref name="nullType" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-624">
              <paramref name="nullType" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OfType">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfType(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfType(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-625">入力セットを指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-625">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="3a431-626">入力セットの要素のうち結果のセットに含める要素の型メタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-626">Type metadata for the type that elements of the input set must have to be included in the resulting set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-627">指定した型と一致する指定した入力セットの要素で構成されるセットを生成する新しい <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-627">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-628">指定されたセット引数と型、および ExpressionKind の <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" /> を持つ新しい DbOfTypeExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-628">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-629">DbOfTypeExpression では、する必要があります`argument`コレクションのポリモーフィックな要素型と型を結果`type`は、その要素の型と同じ型階層からの型。</span><span class="sxs-lookup"><span data-stu-id="3a431-629">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-630">
            <paramref name="argument" /> または <paramref name="type" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-630">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-631">
            <paramref name="argument" /> の結果型がコレクション型でないか、<paramref name="type" /> が属する型階層が、<paramref name="argument" /> のコレクション型の結果型の要素の型が属する型階層と異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-631">
              <paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OfTypeOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfTypeOnly (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfTypeOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-632">入力セットを指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-632">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="3a431-633">入力セットの要素のうち結果のセットに含める要素の型メタデータ。この型と完全に一致した要素だけが結果のセットに含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-633">Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-634">指定した型と完全に一致する指定した入力セットの要素で構成されるセットを生成する新しい <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-634">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of exactly the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-635">指定されたセット引数と型、および ExpressionKind の <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" /> を持つ新しい DbOfTypeExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-635">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-636">DbOfTypeExpression では、する必要があります`argument`コレクションのポリモーフィックな要素型と型を結果`type`は、その要素の型と同じ型階層からの型。</span><span class="sxs-lookup"><span data-stu-id="3a431-636">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-637">
            <paramref name="argument" /> または <paramref name="type" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-637">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-638">
            <paramref name="argument" /> の結果型がコレクション型でないか、<paramref name="type" /> が属する型階層が、<paramref name="argument" /> のコレクション型の結果型の要素の型が属する型階層と異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-638">
              <paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOrExpression Or(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Or (left As DbExpression, right As DbExpression) As DbOrExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOrExpression ^ Or(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOrExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-639">引数 left を指定するブール式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-639">A Boolean expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-640">引数 right を指定するブール式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-640">A Boolean expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-641">左辺と右辺の引数について論理 OR を実行する <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-641">Creates an <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that performs the logical Or of the left and right arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-642">指定された引数を持つ新しい DbOrExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-642">A new DbOrExpression with the specified arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-643">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-643">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-644">
            <paramref name="left" /> または <paramref name="right" /> の結果型がブール型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-644">
              <paramref name="left" /> or <paramref name="right" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-645">昇順の並べ替え順序と既定の照合順序を使用して、指定された入力セットを指定された並べ替えキーで並べ替える新しい <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-645">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-646">入力セットを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-646">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="3a431-647">与えられた入力セットのメンバーから並べ替えキーの式をどのように得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-647">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="3a431-648">このメソッドは、並べ替えキーの定義を提供する (順序を比較できる結果型の) 式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-648">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-649">昇順の並べ替え順序と既定の照合順序を使用して、指定された入力セットを指定された並べ替えキーで並べ替える新しい <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-649">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-650">order-by 操作を表す新しい DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-650">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-651">
            <paramref name="sortKey" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-651">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-652">
            <paramref name="sortKey" /> によって生成された式の結果型が、順序比較できる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-652">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-653">入力セットを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-653">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="3a431-654">与えられた入力セットのメンバーから並べ替えキーの式をどのように得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-654">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="3a431-655">このメソッドは、並べ替えキーの定義を提供する (順序を比較できる結果型の) 式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-655">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="3a431-656">並べ替えに使用する照合順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-656">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-657">昇順の並べ替え順序と指定された照合順序を使用して、指定された入力セットを指定された並べ替えキーで並べ替える新しい <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-657">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-658">order-by 操作を表す新しい DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-658">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-659">
            <paramref name="sortKey" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-659">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-660">
            <paramref name="sortKey" /> によって生成された式の結果型が、順序比較できる文字列型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-660">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3a431-661">
            <paramref name="collation" /> が空であるか、空白文字だけで構成されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-661">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-662">降順の並べ替え順序と既定の照合順序を使用して、指定された入力セットを指定された並べ替えキーで並べ替える新しい <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-662">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-663">入力セットを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-663">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="3a431-664">与えられた入力セットのメンバーから並べ替えキーの式をどのように得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-664">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="3a431-665">このメソッドは、並べ替えキーの定義を提供する (順序を比較できる結果型の) 式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-665">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-666">降順の並べ替え順序と既定の照合順序を使用して、指定された入力セットを指定された並べ替えキーで並べ替える新しい <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-666">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-667">order-by 操作を表す新しい DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-667">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-668">
            <paramref name="sortKey" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-668">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-669">
            <paramref name="sortKey" /> によって生成された式の結果型が、順序比較できる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-669">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-670">入力セットを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-670">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="3a431-671">与えられた入力セットのメンバーから並べ替えキーの式をどのように得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-671">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="3a431-672">このメソッドは、並べ替えキーの定義を提供する (順序を比較できる結果型の) 式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-672">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="3a431-673">並べ替えに使用する照合順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-673">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-674">降順の並べ替え順序と指定された照合順序を使用して、指定された入力セットを指定された並べ替えキーで並べ替える新しい <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-674">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-675">order-by 操作を表す新しい DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-675">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-676">
            <paramref name="sortKey" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-676">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-677">
            <paramref name="sortKey" /> によって生成された式の結果型が、順序比較できる文字列型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-677">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3a431-678">
            <paramref name="collation" /> が空であるか、空白文字だけで構成されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-678">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OuterApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-679">特定の入力セットの各要素につき 1 回、指定された <paramref name="apply" /> 式を評価し、対応する入力列と適用列を持った行のコレクションを生成する新しい <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-679">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-680">入力セットを指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-680">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="3a431-681">入力セットのメンバーごとに 1 回評価するロジックを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-681">A method that specifies the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-682">特定の入力セットの各要素につき 1 回、指定された <paramref name="apply" /> 式を評価し、対応する入力列と適用列を持った行のコレクションを生成する新しい <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-682">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="3a431-683">
            <paramref name="apply" /> で空のセットに評価される行には、<see langword="null" /> の適用列値が割り当てられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-683">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-684">入力とバインディングの適用が指定され、OuterApply の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> が設定された新しい DbApplyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-684">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-685">
            <paramref name="apply" /> の結果に null の名前または式が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-685">The result of <paramref name="apply" /> contains a name or expression that is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-686">
            <paramref name="apply" /> の結果に、式バインディングで無効な名前または式が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-686">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3a431-687">入力セットを指定する <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-687">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="3a431-688">入力セットのメンバーごとに 1 回評価するロジックを指定する <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-688">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-689">特定の入力セットの各要素につき 1 回、指定された <paramref name="apply" /> 式を評価し、対応する入力列と適用列を持った行のコレクションを生成する新しい <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-689">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="3a431-690">
            <paramref name="apply" /> で空のセットに評価される行には、<see langword="null" /> の適用列値が割り当てられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-690">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-691">入力とバインディングの適用が指定され、OuterApply の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> が設定された新しい DbApplyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-691">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-692">
            <paramref name="input" /> または <paramref name="apply" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-692">
              <paramref name="input" /> or <paramref name="apply" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Parameter (type As TypeUsage, name As String) As DbParameterReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ Parameter(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbParameterReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="3a431-693">参照されるパラメーターの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-693">The type of the referenced parameter.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="3a431-694">参照されているパラメーターの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-694">The name of the referenced parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-695">指定された名前と型のパラメーターを参照する新しい <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-695">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that references a parameter with the specified name and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-696">指定された名前および型でパラメーターへの参照を表す DbParameterReferenceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-696">A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type.</span>
          </span>
          <span data-ttu-id="3a431-697">式の結果型は <paramref name="type" /> と同じになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-697">The result type of the expression will be the same as <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Plus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Plus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Plus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-698">引数 left を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-698">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-699">引数 right を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-699">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-700">引数 left を引数 right に加算する新しい <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-700">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that adds the left argument to the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-701">加算演算を表す新しい DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-701">A new DbArithmeticExpression representing the addition operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-702">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-702">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-703">
            <paramref name="left" /> と <paramref name="right" /> の結果型が、同じ数値型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-703">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Project(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Project (input As DbExpressionBinding, projection As DbExpression) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Project(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ projection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="projection" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3a431-704">入力セットを指定する式バインディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-704">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="projection">
          <span data-ttu-id="3a431-705">セットに対して射影する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-705">An expression to project over the set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-706">指定された入力セットに対して指定された式を射影する新しい <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-706">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified expression over the given input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-707">射影操作を表す新しい DbProjectExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-707">A new DbProjectExpression that represents the projection operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-708">
            <paramref name="input" /> または <paramref name="projection" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-708">
              <paramref name="input" /> or <paramref name="projection" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Property">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-709">指定されたプロパティの取得を表す新しい <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-709">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.EdmProperty propertyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyMetadata As EdmProperty) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::EdmProperty ^ propertyMetadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyMetadata" Type="System.Data.Metadata.Edm.EdmProperty" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="3a431-710">プロパティを取得する対象のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-710">The instance from which to retrieve the property.</span>
          </span>
          <span data-ttu-id="3a431-711">プロパティが static の場合は、null が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-711">May be null if the property is static.</span>
          </span>
        </param>
        <param name="propertyMetadata">
          <span data-ttu-id="3a431-712">取得するプロパティのメタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-712">Metadata for the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-713">指定されたプロパティの取得を表す新しい <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-713">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-714">プロパティの取得を表す新しい DbPropertyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-714">A new DbPropertyExpression representing the property retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-715">
            <paramref name="propertyMetadata" /> が null か、<paramref name="instance" /> が null で、プロパティは静的ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-715">
              <paramref name="propertyMetadata" /> is null or <paramref name="instance" /> is null and the property is not static.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.NavigationProperty navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::NavigationProperty ^ navigationProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="navigationProperty" Type="System.Data.Metadata.Edm.NavigationProperty" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="3a431-716">ナビゲーション プロパティを取得する対象のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-716">The instance from which to retrieve the navigation property.</span>
          </span>
        </param>
        <param name="navigationProperty">
          <span data-ttu-id="3a431-717">取得するナビゲーション プロパティのメタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-717">Metadata for the navigation property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-718">指定されたナビゲーション プロパティの取得を表す新しい <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-718">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified navigation property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-719">ナビゲーション プロパティの取得を表す新しい DbPropertyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-719">A new DbPropertyExpression representing the navigation property retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-720">
            <paramref name="navigationProperty" /> または <paramref name="instance" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-720">
              <paramref name="navigationProperty" /> or <paramref name="instance" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, relationshipEnd As RelationshipEndMember) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::RelationshipEndMember ^ relationshipEnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="relationshipEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="3a431-721">リレーションシップ端のメンバーを取得する対象のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-721">The instance from which to retrieve the relationship end member.</span>
          </span>
        </param>
        <param name="relationshipEnd">
          <span data-ttu-id="3a431-722">取得するリレーションシップ端のメンバーのメタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-722">Metadata for the relationship end member to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-723">指定されたリレーションシップ端のメンバーの取得を表す新しい <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-723">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified relationship end member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-724">リレーションシップ端のメンバーの取得を表す新しい DbPropertyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-724">A new DbPropertyExpression representing the relationship end member retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-725">
            <paramref name="relationshipEnd" /> が null か、<paramref name="instance" /> が null で、プロパティは静的ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-725">
              <paramref name="relationshipEnd" /> is null or <paramref name="instance" /> is null and the property is not static.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyName As String) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="3a431-726">プロパティを取得する対象のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-726">The instance from which to retrieve the property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="3a431-727">取得するプロパティの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-727">The name of the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-728">特定のインスタンスからの指定された名前のインスタンス プロパティの取得を表す新しい <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-728">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the instance property with the specified name from the given instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-729">プロパティの取得を表す新しい DbPropertyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-729">A new DbPropertyExpression that represents the property retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-730">
            <paramref name="propertyName" /> が null か、<paramref name="instance" /> が null で、プロパティは静的ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-730">
              <paramref name="propertyName" /> is null or <paramref name="instance" /> is null and the property is not static.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3a431-731">
            <paramref name="instance" /> の型では、指定された名前のプロパティが宣言されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-731">No property with the specified name is declared by the type of <paramref name="instance" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RefFromKey">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-732">キー値に基づいて特定のエンティティへの参照をエンコードする新しい <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-732">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="3a431-733">参照先の要素が存在するエンティティ セット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-733">The Entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyRow">
          <span data-ttu-id="3a431-734">参照先のエンティティ タイプのキー プロパティと (数、型、および順序が) 一致する列を持ったレコードを構築する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-734">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-735">キー値に基づいて特定のエンティティへの参照をエンコードする新しい <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-735">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-736">特定のエンティティ セットで指定されたキー値で要素を参照する新しい DbRefExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-736">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-737">`keyRow` 指定されたエンティティ内で参照先エンティティを識別するキー値を指定する式が設定されます。</span><span class="sxs-lookup"><span data-stu-id="3a431-737">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="3a431-738">結果の型`keyRow`によって定義されたキーの各プロパティの対応する列を含める必要があります`entitySet's`エンティティ型。</span><span class="sxs-lookup"><span data-stu-id="3a431-738">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-739">
            <paramref name="entitySet" /> または <paramref name="keyRow" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-739">
              <paramref name="entitySet" /> or <paramref name="keyRow" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-740">
            <paramref name="keyRow" /> の結果型に、参照先のエンティティ セットのエンティティ型のキー プロパティと一致するレコード型が含まれていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-740">
              <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow, class System.Data.Metadata.Edm.EntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow, System::Data::Metadata::Edm::EntityType ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="3a431-741">参照先の要素が存在するエンティティ セット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-741">The Entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyRow">
          <span data-ttu-id="3a431-742">参照先のエンティティ タイプのキー プロパティと (数、型、および順序が) 一致する列を持ったレコードを構築する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-742">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="3a431-743">参照が参照すべきエンティティの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-743">The type of the Entity that the reference should refer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-744">キー値に基づいて特定のエンティティへの参照をエンコードする新しい <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-744">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-745">特定のエンティティ セットで指定されたキー値で要素を参照する新しい DbRefExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-745">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-746">`keyRow` 指定されたエンティティ内で参照先エンティティを識別するキー値を指定する式が設定されます。</span><span class="sxs-lookup"><span data-stu-id="3a431-746">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="3a431-747">結果の型`keyRow`によって定義されたキーの各プロパティの対応する列を含める必要があります`entitySet's`エンティティ型。</span><span class="sxs-lookup"><span data-stu-id="3a431-747">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-748">
            <paramref name="entitySet" />、<paramref name="keyRow" />、または <paramref name="entityType" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-748">
              <paramref name="entitySet" />,  <paramref name="keyRow" /> or <paramref name="entityType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-749">
            <paramref name="entityType" /> が、エンティティ セットのエンティティ型と同じ型階層内にありません。または、<paramref name="keyRow" /> に、参照されているエンティティ セットのエンティティ型のキー プロパティと一致するレコード結果型がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-749">
              <paramref name="entityType" /> is not in the same type hierarchy as the entity set's entity type, or <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Scan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbScanExpression Scan(class System.Data.Metadata.Edm.EntitySetBase targetSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Scan (targetSet As EntitySetBase) As DbScanExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbScanExpression ^ Scan(System::Data::Metadata::Edm::EntitySetBase ^ targetSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbScanExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSet" Type="System.Data.Metadata.Edm.EntitySetBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="targetSet">
          <span data-ttu-id="3a431-750">参照するエンティティまたはリレーションシップ セットのメタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-750">Metadata for the entity or relationship set to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-751">指定したエンティティまたはリレーションシップ セットを参照する新しい <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-751">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that references the specified entity or relationship set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-752">指定されたエンティティまたはリレーションシップ セットに基づく新しい DbScanExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-752">A new DbScanExpression based on the specified entity or relationship set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-753">
            <paramref name="targetSet" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-753">
              <paramref name="targetSet" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TProjection&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt; projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, !!TProjection&gt; projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TProjection) (source As DbExpression, projection As Func(Of DbExpression, TProjection)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProjection&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Select(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, TProjection&gt; ^ projection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProjection" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="projection" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProjection">
          <span data-ttu-id="3a431-754">メソッドの結果型<c>プロジェクション</c>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-754">The method result type of <c>projection</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="3a431-755">入力セットを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-755">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="projection">
          <span data-ttu-id="3a431-756">与えられた入力セットのメンバーから射影された式をどのように得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-756">A method that specifies how to derive the projected expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="3a431-757">このメソッドは、Select と互換性があり、なおかつ <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> に解決可能な型のインスタンスを生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-757">This method must produce an instance of a type that is compatible with Select and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          </span>
          <span data-ttu-id="3a431-758">
            <c>TProjection</c> の対応要件については、「解説」を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-758">Compatibility requirements for <c>TProjection</c> are described in remarks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-759">指定された入力セットに対して指定された式を選択する新しい <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-759">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that selects the specified expression over the given input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-760">選択操作を表す新しい DbProjectExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-760">A new DbProjectExpression that represents the select operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-761">互換性があることを選択してで`TProjection`から派生する必要があります<xref:System.Data.Common.CommandTrees.DbExpression>、か、DbExpression 派生プロパティを持つ匿名型にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3a431-761">To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="3a431-762">サポートされている型の例を次に`TProjection`:</span><span class="sxs-lookup"><span data-stu-id="3a431-762">The following are examples of supported types for `TProjection`:</span></span>  
  
```  
source.Select(x => x.Property("Name"))  
```  
  
 <span data-ttu-id="3a431-763">`TProjection` <xref:System.Data.Common.CommandTrees.DbPropertyExpression>)。</span><span class="sxs-lookup"><span data-stu-id="3a431-763">`TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.Select(x => new { Name = x.Property("Name") })  
```  
  
 <span data-ttu-id="3a431-764">(`TProjection`は、DbExpression 派生プロパティを持つ匿名型)。</span><span class="sxs-lookup"><span data-stu-id="3a431-764">(`TProjection` is an anonymous type with a DbExpression-derived property).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-765">
            <paramref name="projection" /> の結果が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-765">The result of <paramref name="projection" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany (source As DbExpression, apply As Func(Of DbExpression, DbExpression)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-766">入力セットを指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-766">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="3a431-767">入力セットのメンバーごとに 1 回評価するロジックを表すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-767">A method that represents the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-768">特定の入力セットの各要素につき 1 回、指定された <paramref name="apply" /> 式を評価し、対応する入力列と適用列を持った行のコレクションを生成する新しい <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-768">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="3a431-769">
            <paramref name="apply" /> で空のセットに評価される行は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-769">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
          <span data-ttu-id="3a431-770">その上で、<paramref name="apply" /> 列を各行から選択する <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> が作成され、<paramref name="apply" /> の結果のコレクション全体が構成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-770">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the <paramref name="apply" /> column from each row, producing the overall collection of <paramref name="apply" /> results.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-771">入力とバインディングの適用が指定され、CrossApplys の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> が設定された新しい DbApplyExpression からの特定のセレクターの結果を選択する新しい DbProjectExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-771">An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-772">
            <paramref name="apply" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-772">The expression produced by <paramref name="apply" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-773">
            <paramref name="apply" /> によって生成された式の型がコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-773">The expression produced by <paramref name="apply" /> does not have a collection type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSelector) (source As DbExpression, apply As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector">
          <span data-ttu-id="3a431-774">メソッドの結果型<c>セレクター</c>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-774">The method result type of <c>selector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="3a431-775">入力セットを指定する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-775">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="3a431-776">入力セットのメンバーごとに 1 回評価するロジックを表すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-776">A method that represents the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="3a431-777">入力セットと適用セットの要素から結果セットの要素をどのように得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-777">A method that specifies how an element of the result set should be derived given an element of the input and apply sets.</span>
          </span>
          <span data-ttu-id="3a431-778">このメソッドは、SelectMany と互換性があり、なおかつ <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> に解決可能な型のインスタンスを生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-778">This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          </span>
          <span data-ttu-id="3a431-779">
            <c>TSelector</c> の対応要件については、「解説」を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-779">Compatibility requirements for <c>TSelector</c> are described in remarks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-780">特定の入力セットの各要素につき 1 回、指定された <paramref name="apply" /> 式を評価し、対応する入力列と適用列を持った行のコレクションを生成する新しい <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-780">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="3a431-781">
            <paramref name="apply" /> で空のセットに評価される行は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-781">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
          <span data-ttu-id="3a431-782">その上で、指定された <paramref name="selector" /> 列を各行から選択する <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> が作成され、結果のコレクション全体が構成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-782">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the specified <paramref name="selector" /> over each row, producing the overall collection of results.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-783">CrossApplys の <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> の入力とバインディングの適用が指定された新しい DbApplyExpression からの特定のセレクターの結果を選択する新しい DbProjectExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-783">An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-784">SelectMany との互換性を`TSelector`から派生する必要があります<xref:System.Data.Common.CommandTrees.DbExpression>、DbExpression 派生プロパティを持つ匿名型にする必要がありますか。</span><span class="sxs-lookup"><span data-stu-id="3a431-784">To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="3a431-785">サポートされている型の例を次に`TSelector`:</span><span class="sxs-lookup"><span data-stu-id="3a431-785">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => apply.Property("Name"))  
```  
  
 <span data-ttu-id="3a431-786">(`TSelector`は<xref:System.Data.Common.CommandTrees.DbPropertyExpression>)。</span><span class="sxs-lookup"><span data-stu-id="3a431-786">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => new { SourceName = source.Property("Name"), RelatedName = apply.Property("Name") })  
```  
  
 <span data-ttu-id="3a431-787">(`TSelector`は、DbExpression 派生プロパティを持つ匿名型)。</span><span class="sxs-lookup"><span data-stu-id="3a431-787">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-788">DbExpression に変換された <paramref name="selector" /> の結果が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-788">The result of <paramref name="selector" /> is null on conversion to DbExpression.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-789">
            <paramref name="apply" /> によって生成された式の型がコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-789">The expression produced by <paramref name="apply" /> does not have a collection type.</span>
          </span>
          <span data-ttu-id="3a431-790">がコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-790">does not have a collection type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Skip">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-791">指定した並べ替え仕様に従って指定した入力セットを並べ替えた後、指定数の要素をスキップする新しい <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-791">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbSortExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (argument As DbSortExpression, count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbSortExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-792">並べ替えた入力セットを指定する <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-792">A <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that specifies the sorted input set.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3a431-793">順序付けされたセットの要素のうち、スキップする要素数を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-793">An expression the specifies how many elements of the ordered set to skip.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-794">指定の順序で並べ替えられた入力セットから指定数の要素をスキップする新しい <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-794">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that skips the specified number of elements from the given sorted input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-795">スキップ操作を表す新しい DbSkipExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-795">A new DbSkipExpression that represents the skip operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-796">
            <paramref name="argument" /> または <paramref name="count" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-796">
              <paramref name="argument" /> or <paramref name="count" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-797">
            <paramref name="count" /> が <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> または <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> ではありません。または、count の結果型が 64 ビット整数型に等しくないか、この型に上位変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-797">
              <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause), count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3a431-798">入力セットを指定する式バインディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-798">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="sortOrder">
          <span data-ttu-id="3a431-799">入力セットの要素をどのように並べ替えるかを決定する並べ替え仕様のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-799">A list of sort specifications that determine how the elements of the input set should be sorted.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3a431-800">順序付けされたセットの要素のうち、スキップする要素数を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-800">An expression the specifies how many elements of the ordered set to skip.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-801">指定した並べ替え仕様に従って指定した入力セットを並べ替えた後、指定数の要素をスキップする新しい <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-801">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-802">スキップ操作を表す新しい DbSkipExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-802">A new DbSkipExpression that represents the skip operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-803">
            <paramref name="input" />、<paramref name="sortOrder" /> または <paramref name="count" /> が null か、または <paramref name="sortOrder" /> に null が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-803">
              <paramref name="input" />,  <paramref name="sortOrder" /> or <paramref name="count" /> is null, or <paramref name="sortOrder" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-804">
            <paramref name="sortOrder" /> が空であるか、<paramref name="count" /> が <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> オブジェクトでも <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> オブジェクトでもありません。または、結果型が 64 ビット整数型でないか、64 ビット整数型に上位変換することもできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-804">
              <paramref name="sortOrder" /> is empty, or <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression Sort(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sort (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ Sort(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3a431-805">入力セットを指定する式バインディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-805">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="sortOrder">
          <span data-ttu-id="3a431-806">入力セットの要素をどのように並べ替えるかを決定する並べ替え仕様のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-806">A list of sort specifications that determine how the elements of the input set should be sorted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-807">指定された入力セットを指定された並べ替え仕様で並べ替える新しい <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-807">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort specifications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-808">並べ替え操作を表す新しい DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-808">A new DbSortExpression that represents the sort operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-809">
            <paramref name="input" /> または <paramref name="sortOrder" /> が null か、または <paramref name="sortOrder" /> に null が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-809">
              <paramref name="input" /> or <paramref name="sortOrder" /> is null, or <paramref name="sortOrder" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-810">
            <paramref name="sortOrder" /> が空です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-810">
              <paramref name="sortOrder" /> is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Take(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Take(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-811">入力コレクションを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-811">An expression that specifies the input collection.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3a431-812">制限値を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-812">An expression that specifies the limit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-813">Argument コレクションの要素数を指定した数の制限値に制限する新しい <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> オブジェクトを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-813">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span>
          </span>
          <span data-ttu-id="3a431-814">同じ順位の結果は出力に含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-814">Tied results are not included in the output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-815">関連付けられた結果を含まない、指定された引数と数の制限値を持つ新しい DbLimitExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-815">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-816">
            <paramref name="argument" /> または <paramref name="count" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-816">
              <paramref name="argument" /> or <paramref name="count" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-817">
            <paramref name="argument" /> の結果型がコレクション型ではありません。<paramref name="count" /> の結果型が 64 ビット整数型でないか、この型に上位変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-817">
              <paramref name="argument" /> does not have a collection result type,  <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-818">指定した順序入力セットの並べ替え順序を含む並べ替え順序、昇順の並べ替え順序の指定した並べ替えキー、および既定の照合順序を持つ新しい <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-818">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-819">順序付けされた入力セットを指定する DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-819">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="3a431-820">与えられた入力セットのメンバーから、二次的並べ替えキーの式をどのように得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-820">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="3a431-821">このメソッドは、並べ替えキーの定義を提供する (順序を比較できる結果型の) 式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-821">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-822">指定した順序入力セットの並べ替え順序を含む並べ替え順序、昇順の並べ替え順序の指定した並べ替えキー、および既定の照合順序を持つ新しい <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-822">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-823">新しい order-by 操作全体を表す新しい DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-823">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-824">
            <paramref name="sortKey" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-824">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-825">
            <paramref name="sortKey" /> の結果型が順序比較できる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-825">
              <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-826">順序付けされた入力セットを指定する DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-826">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="3a431-827">与えられた入力セットのメンバーから、二次的並べ替えキーの式をどのように得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-827">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="3a431-828">このメソッドは、並べ替えキーの定義を提供する (順序を比較できる結果型の) 式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-828">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="3a431-829">並べ替えに使用する照合順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-829">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-830">指定した順序入力セットの並べ替え順序を含む並べ替え順序、昇順の並べ替え順序の指定した並べ替えキー、および指定した照合順序を持つ新しい <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-830">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-831">新しい order-by 操作全体を表す新しい DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-831">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-832">
            <paramref name="sortKey" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-832">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-833">
            <paramref name="sortKey" /> によって生成された式の結果型が、順序比較できる文字列型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-833">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3a431-834">
            <paramref name="collation" /> が空であるか、空白文字だけで構成されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-834">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-835">指定した順序入力セットの並べ替え順序を含む並べ替え順序、降順の並べ替え順序の指定した並べ替えキー、および既定の照合順序を持つ新しい <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-835">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-836">順序付けされた入力セットを指定する DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-836">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="3a431-837">与えられた入力セットのメンバーから、二次的並べ替えキーの式をどのように得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-837">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="3a431-838">このメソッドは、並べ替えキーの定義を提供する (順序を比較できる結果型の) 式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-838">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-839">指定した順序入力セットの並べ替え順序を含む並べ替え順序、降順の並べ替え順序の指定した並べ替えキー、および既定の照合順序を持つ新しい <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-839">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-840">新しい order-by 操作全体を表す新しい DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-840">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-841">
            <paramref name="sortKey" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-841">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-842">
            <paramref name="sortKey" /> によって生成された式の結果型が、順序比較できる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-842">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-843">順序付けされた入力セットを指定する DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-843">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="3a431-844">与えられた入力セットのメンバーから、二次的並べ替えキーの式をどのように得るかを指定するメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-844">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="3a431-845">このメソッドは、並べ替えキーの定義を提供する (順序を比較できる結果型の) 式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-845">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="3a431-846">並べ替えに使用する照合順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-846">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-847">指定した順序入力セットの並べ替え順序を含む並べ替え順序、降順の並べ替え順序の指定した並べ替えキー、および指定した照合順序を持つ新しい <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-847">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-848">新しい order-by 操作全体を表す新しい DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-848">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-849">
            <paramref name="sortKey" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-849">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-850">
            <paramref name="sortKey" /> によって生成された式の結果型が、順序比較できる文字列型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-850">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3a431-851">
            <paramref name="collation" /> が空であるか、空白文字だけで構成されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-851">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClause">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-852">昇順の並べ替え順序と既定の照合順序で新しい <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-852">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3a431-853">並べ替えキーを定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-853">The expression that defines the sort key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-854">昇順の並べ替え順序と既定の照合順序で新しい <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-854">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-855">特定の並べ替えキーと昇順の並べ替え順序を持つ新しい並べ替え句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-855">A new sort clause with the given sort key and ascending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-856">
            <paramref name="key" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-856">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-857">
            <paramref name="key" /> の結果型が順序比較できる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-857">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3a431-858">並べ替えキーを定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-858">The expression that defines the sort key.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="3a431-859">並べ替えに使用する照合順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-859">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-860">昇順の並べ替え順序と指定された照合順序で新しい <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-860">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-861">特定の並べ替えキーとコレクション、および昇順の並べ替え順序を持つ新しい並べ替え句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-861">A new sort clause with the given sort key and collation, and ascending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-862">
            <paramref name="key" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-862">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3a431-863">
            <paramref name="collation" /> が空であるか、空白文字だけで構成されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-863">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-864">
            <paramref name="key" /> の結果型が順序比較できる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-864">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClauseDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-865">降順の並べ替え順序と既定の照合順序で新しい <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-865">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3a431-866">並べ替えキーを定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-866">The expression that defines the sort key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-867">降順の並べ替え順序と既定の照合順序で新しい <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-867">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-868">特定の並べ替えキーと降順の並べ替え順序を持つ新しい並べ替え句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-868">A new sort clause with the given sort key and descending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-869">
            <paramref name="key" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-869">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-870">
            <paramref name="key" /> の結果型が順序比較できる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-870">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3a431-871">並べ替えキーを定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-871">The expression that defines the sort key.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="3a431-872">並べ替えに使用する照合順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-872">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-873">降順の並べ替え順序と指定された照合順序で新しい <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-873">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-874">特定の並べ替えキーとコレクション、および降順の並べ替え順序を持つ新しい並べ替え句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-874">A new sort clause with the given sort key and collation, and descending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-875">
            <paramref name="key" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-875">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3a431-876">
            <paramref name="collation" /> が空であるか、空白文字だけで構成されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-876">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-877">
            <paramref name="key" /> の結果型が順序比較できる型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-877">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TreatAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbTreatExpression TreatAs(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage treatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TreatAs (argument As DbExpression, treatType As TypeUsage) As DbTreatExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbTreatExpression ^ TreatAs(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ treatType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbTreatExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="treatType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-878">インスタンスを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-878">An expression that specifies the instance.</span>
          </span>
        </param>
        <param name="treatType">
          <span data-ttu-id="3a431-879">想定する型の型メタデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-879">Type metadata for the treat-as type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-880">新しい <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-880">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-881">指定された引数と型を持つ新しい DbTreatExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-881">A new DbTreatExpression with the specified argument and type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a431-882">DbTreatExpression では、する必要があります`argument`があり、ポリモーフィックな結果型を`treatType`は、その結果の型と同じ型階層からの型。</span><span class="sxs-lookup"><span data-stu-id="3a431-882">DbTreatExpression requires that `argument` has a polymorphic result type, and that `treatType` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-883">
            <paramref name="argument" /> または <paramref name="treatType" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-883">
              <paramref name="argument" /> or <paramref name="treatType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-884">
            <paramref name="treatType" /> が属する型階層が、<paramref name="argument" /> の結果型が属する型階層と異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-884">
              <paramref name="treatType" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression True" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property True As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ True { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a431-885">ブール値 <see langword="true" /> を持つ <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-885">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a431-886">ブール値 <see langword="true" /> を持つ <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-886">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnaryMinus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnaryMinus (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ UnaryMinus(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="3a431-887">引数を指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-887">An expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-888">引数の値を否定する新しい <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-888">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-889">否定演算を表す新しい DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-889">A new DbArithmeticExpression representing the negation operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-890">
            <paramref name="argument" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-890">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-891">
            <paramref name="argument" /> の結果型が数値型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-891">No numeric result type exists for <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Union(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union (left As DbExpression, right As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Union(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-892">セット引数 left を定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-892">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-893">セット引数 right を定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-893">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-894">セット引数 left と right について、重複を取り除いた和集合を計算する新しい <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-894">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that computes the union of the left and right set arguments with duplicates removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-895">左右の引数の重複を取り除いて和集合を計算する新しい DbExpression オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-895">A new DbExpression that computes the union, without duplicates, of the left and right arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-896">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-896">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-897">
            <paramref name="left" /> と <paramref name="right" /> の結果型が、同じ等価比較できる型の要素を持つコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-897">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnionAll (left As DbExpression, right As DbExpression) As DbUnionAllExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbUnionAllExpression ^ UnionAll(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbUnionAllExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="3a431-898">セット引数 left を定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-898">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="3a431-899">セット引数 right を定義する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-899">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-900">セット引数 left と right について、重複を取り除く前の和集合を計算する新しい <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-900">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that computes the union of the left and right set arguments and does not remove duplicates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-901">重複を含む、左右の引数の和集合である新しい DbUnionAllExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-901">A new DbUnionAllExpression that union, including duplicates, of the left and right arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-902">
            <paramref name="left" /> または <paramref name="right" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-902">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-903">
            <paramref name="left" /> と <paramref name="right" /> の結果型が、同じ等価比較できる型の要素を持つコレクション型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-903">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Variable (type As TypeUsage, name As String) As DbVariableReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ Variable(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbVariableReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="3a431-904">参照先の変数の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-904">The type of the referenced variable.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="3a431-905">参照されている変数の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-905">The name of the referenced variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-906">指定された名前と型の変数を参照する新しい <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-906">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that references a variable with the specified name and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-907">指定された名前および型で変数への参照を表す DbVariableReferenceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-907">A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type.</span>
          </span>
          <span data-ttu-id="3a431-908">式の結果型は <paramref name="type" /> と同じになります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-908">The result type of the expression will be the same as <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Where(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Where(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="3a431-909">入力セットを指定する式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-909">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="3a431-910">入力セットのメンバーごとに評価する述語を表すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-910">A method representing the predicate to evaluate for each member of the input set.</span>
          </span>
          <span data-ttu-id="3a431-911">このメソッドは、述語のロジックを備え、ブール型の結果を返す式を生成する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-911">This method must produce an expression with a Boolean result type that provides the predicate logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a431-912">指定された述語を使用して指定された入力セットの要素をフィルター処理する新しい <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-912">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a431-913">Any 操作を表す新しい DbQuantifierExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-913">A new DbQuantifierExpression that represents the Any operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a431-914">
            <paramref name="predicate" /> によって生成された式が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-914">The expression produced by <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a431-915">
            <paramref name="predicate" /> の生成したこの式には、ブール型の結果型がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a431-915">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>