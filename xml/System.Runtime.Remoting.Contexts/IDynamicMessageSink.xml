<Type Name="IDynamicMessageSink" FullName="System.Runtime.Remoting.Contexts.IDynamicMessageSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="975f599bbed3521ce07639599d6ecfa03989bb62" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36535590" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDynamicMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IDynamicMessageSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicMessageSink" />
  <TypeSignature Language="F#" Value="type IDynamicMessageSink = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="be35f-101">実装するメッセージ シンクが、動的に登録されるプロパティによって提供されることを示します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="be35f-101">Indicates that the implementing message sink will be provided by dynamically registered properties.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be35f-102">動的なメッセージ シンクが開始と呼び出しで呼び出しが現在クライアント側またはサーバー側 (コンテキスト レベル シンクの場合に便利です) であるかどうかを示すフラグと終了の呼び出しの通知で提供されます。</span><span class="sxs-lookup"><span data-stu-id="be35f-102">Dynamic message sinks are provided with notifications of call start and call finish with flags indicating whether the call is currently on the client side or server side (this is useful for the context level sinks).</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="ProcessMessageFinish">
      <MemberSignature Language="C#" Value="public void ProcessMessageFinish (System.Runtime.Remoting.Messaging.IMessage replyMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessageFinish(class System.Runtime.Remoting.Messaging.IMessage replyMsg, bool bCliSide, bool bAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageFinish(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessMessageFinish (replyMsg As IMessage, bCliSide As Boolean, bAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessMessageFinish(System::Runtime::Remoting::Messaging::IMessage ^ replyMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessageFinish : System.Runtime.Remoting.Messaging.IMessage * bool * bool -&gt; unit" Usage="iDynamicMessageSink.ProcessMessageFinish (replyMsg, bCliSide, bAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replyMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="bCliSide" Type="System.Boolean" />
        <Parameter Name="bAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="replyMsg">
          <span data-ttu-id="be35f-103">応答メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be35f-103">A reply message.</span>
          </span>
        </param>
        <param name="bCliSide">
          <span data-ttu-id="be35f-104">メソッドがクライアント側で呼び出される場合は <see langword="true" /> の値。メソッドがサーバー側で呼び出される場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be35f-104">A value of <see langword="true" /> if the method is invoked on the client side and <see langword="false" /> if it is invoked on the server side.</span>
          </span>
        </param>
        <param name="bAsync">
          <span data-ttu-id="be35f-105">これが非同期呼び出しの場合は <see langword="true" /> の値。これが同期呼び出しの場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be35f-105">A value of <see langword="true" /> if this is an asynchronic call and <see langword="false" /> if it is a synchronic call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be35f-106">呼び出しから制御が戻っていることを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be35f-106">Indicates that a call is returning.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be35f-107">ブール型のパラメーターは、クライアント側またはサーバー側でシンクを配置するかどうかと、呼び出しを使用しているかどうかを示すため、<xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="be35f-107">The Boolean parameters indicate whether the sink is located on the client side or the server side and whether the call is using the <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProcessMessageStart">
      <MemberSignature Language="C#" Value="public void ProcessMessageStart (System.Runtime.Remoting.Messaging.IMessage reqMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessageStart(class System.Runtime.Remoting.Messaging.IMessage reqMsg, bool bCliSide, bool bAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageStart(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessMessageStart (reqMsg As IMessage, bCliSide As Boolean, bAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessMessageStart(System::Runtime::Remoting::Messaging::IMessage ^ reqMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessageStart : System.Runtime.Remoting.Messaging.IMessage * bool * bool -&gt; unit" Usage="iDynamicMessageSink.ProcessMessageStart (reqMsg, bCliSide, bAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reqMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="bCliSide" Type="System.Boolean" />
        <Parameter Name="bAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reqMsg">
          <span data-ttu-id="be35f-108">要求メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be35f-108">A request message.</span>
          </span>
        </param>
        <param name="bCliSide">
          <span data-ttu-id="be35f-109">メソッドがクライアント側で呼び出される場合は <see langword="true" /> の値。メソッドがサーバー側の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be35f-109">A value of <see langword="true" /> if the method is invoked on the client side and <see langword="false" /> if the method is on the server side.</span>
          </span>
        </param>
        <param name="bAsync">
          <span data-ttu-id="be35f-110">これが非同期呼び出しの場合は <see langword="true" /> の値。これが同期呼び出しの場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be35f-110">A value of <see langword="true" /> if this is an asynchronic call and <see langword="false" /> if it is a synchronic call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be35f-111">呼び出しが開始されていることを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be35f-111">Indicates that a call is starting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be35f-112">ブール型のパラメーターは、クライアント側またはサーバー側でシンクを配置するかどうかと、呼び出しを使用しているかどうかを示すため、<xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="be35f-112">The Boolean parameters indicate whether the sink is located on the client side or the server side and whether the call is using the <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>