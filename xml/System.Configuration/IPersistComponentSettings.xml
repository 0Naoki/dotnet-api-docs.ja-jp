<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPersistComponentSettings.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac536cdd14653e8d239fcffab82331de0392616795f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36cdd14653e8d239fcffab82331de0392616795f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.IPersistComponentSettings">
          <source>Defines standard functionality for controls or libraries that store and retrieve application settings.</source>
          <target state="translated">アプリケーション設定の格納および取得を行うコントロールまたはライブラリの標準機能を定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IPersistComponentSettings">
          <source>Typically, you can add application settings support to an application by creating a settings wrapper class, which is derived from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>, and then add special properties to this class.</source>
          <target state="translated">派生する設定のラッパー クラスを作成することで、アプリケーションにアプリケーション設定のサポートを追加する通常、 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>、し、このクラスに特殊なプロパティを追加します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IPersistComponentSettings">
          <source>However, this approach does not sufficiently encapsulate application settings for a control so that its container is shielded from the details.</source>
          <target state="translated">ただし、このアプローチ十分にカプセル化しないコントロール用のアプリケーション設定の詳細から、コンテナーがシールドされてようにします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IPersistComponentSettings">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings&gt;</ph> interface provides an application with a standard interface for communicating application settings state change requests to a control, component, or library module.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings&gt;</ph>インターフェイスには、コントロール、コンポーネント、またはライブラリ モジュールにアプリケーション設定の状態変更要求を通信するための標準のインターフェイスを持つアプリケーションが用意されています。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IPersistComponentSettings">
          <source>Design-time tools also depend on this interface to properly manage controls and components.</source>
          <target state="translated">デザイン時ツールは、コントロールおよびコンポーネントを適切に管理するには、このインターフェイスによっても異なります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
          <source>Reads the control's application settings into their corresponding properties and updates the control's state.</source>
          <target state="translated">コントロールのアプリケーション設定を対応するプロパティに読み込み、コントロールの状態を更新します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
          <source>In general, the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A&gt;</ph> method performs two essential operations:</source>
          <target state="translated">一般に、<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A&gt;</ph>メソッドは 2 つの重要な操作を実行します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
          <source>It causes each application settings instance contained by the control to refresh the values of its application settings properties, typically by calling their <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> methods.</source>
          <target state="translated">呼び出すことによって通常のアプリケーション設定のプロパティの値を更新するコントロールに含まれる各アプリケーション設定のインスタンスとその<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
          <source>As required, it updates those general properties that depend on these reloaded settings properties.</source>
          <target state="translated">必要に応じて、プロパティを再読み込みされたこれらの設定に依存する全般プロパティを更新します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
          <source>For example, if the settings class contained a <ph id="ph1">`location`</ph> settings property, <ph id="ph2">&lt;xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A&gt;</ph> should ensure that the control's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property is updated to reflect this reloaded setting.</source>
          <target state="translated">設定クラスが含まれている場合など、<ph id="ph1">`location`</ph>設定プロパティ、<ph id="ph2">&lt;xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A&gt;</ph>ようにするコントロールの<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>プロパティが再読み込みされたこの設定を反映するように更新します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
          <source>Resets the control's application settings properties to their default values.</source>
          <target state="translated">コントロールのアプリケーション設定プロパティを既定値にリセットします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
          <source>The implementation of the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A&gt;</ph> method typically calls the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> method on each instance of an application settings class it contains.</source>
          <target state="translated">実装、<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A&gt;</ph>メソッドを呼び出す通常、<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph>メソッドが含まれているアプリケーション設定クラスの各インスタンスにします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
          <source>Persists the control's application settings properties.</source>
          <target state="translated">コントロールのアプリケーション設定プロパティを保持します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;</ph> method writes the values of the control's application settings properties to the associated data store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;</ph>メソッドは、関連付けられたデータ ストアに、コントロールのアプリケーション設定のプロパティの値を書き込みます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
          <source>The data store and serialization technique the method uses is determined by the settings provider associated with each settings class through the <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>.</source>
          <target state="translated">メソッドを使用してデータ ストアとシリアル化技法は、各設定クラスに関連付けられている設定プロバイダーによって決定されます、<ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
          <source>You can override the choice of the settings provider by using the <ph id="ph1">&lt;xref:System.Configuration.ISettingsProviderService&gt;</ph> interface.</source>
          <target state="translated">使用して設定プロバイダーの選択をオーバーライドすることができます、<ph id="ph1">&lt;xref:System.Configuration.ISettingsProviderService&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
          <source>If the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the control should call <ph id="ph3">&lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;</ph> in its own <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method so that the control's configuration data is stored automatically before the application ends.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph>プロパティは<ph id="ph2">`true`</ph>、コントロールを呼び出す必要があります<ph id="ph3">&lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;</ph>独自で<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph>メソッド、アプリケーションが終了する前に、コントロールの構成データは自動的に格納できるようにします。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source>Gets or sets a value indicating whether the control should automatically persist its application settings properties.</source>
          <target state="translated">コントロールのアプリケーション設定プロパティを自動的に保持するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control should automatically persist its state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コントロールの状態を自動的に保持する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source>If a control contains configuration data, it will typically persist this data in response to an explicit call to the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;</ph> method or sometimes implicitly when the control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method is invoked.</source>
          <target state="translated">明示的に呼び出すへの応答でこのデータが保持されます通常コントロール構成データが含まれている場合、<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;</ph>メソッドも暗黙的にまたはときに、コントロールの<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph> property determines whether a control automatically persists its configuration data when it is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph>プロパティが破棄されるとき、コントロールがその、構成データを自動的に保持するかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source>The default value of <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph> depends on the implementation of the control.</source>
          <target state="translated">既定値の<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph>コントロールの実装に依存します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source>The documentation for the control should indicate whether it uses application settings, what data is persisted, and what the default value of the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph> property is.</source>
          <target state="translated">ドキュメント コントロールには、アプリケーションの設定を使用するかどうか、どのようなデータが保持されの既定値を示す必要があります、<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph>プロパティは使用できます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source>The following code example shows the proper way for a control to check the value of the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph> property before it attempts to automatically persist its configuration data.</source>
          <target state="translated">次のコード例の値を確認するためのコントロールの適切な方法を示しています、<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph>プロパティに自動的にその構成データを保持しようとします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>Gets or sets the value of the application settings key for the current instance of the control.</source>
          <target state="translated">コントロールの現在のインスタンスのアプリケーション設定キーの値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the settings key for the current instance of the control.</source>
          <target state="translated">コントロールの現在のインスタンスの設定キーを格納している <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>Use the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A&gt;</ph> property to disambiguate groups of application settings properties when there are multiple instances of the same wrapper class.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A&gt;</ph>プロパティを同じのラッパー クラスの複数のインスタンスがある場合は、アプリケーション設定のプロパティのグループを明確にします。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>For example, if a control contains an associated wrapper class, then placing multiple instances of the same control in the same application will typically result in multiple instances of the wrapper class.</source>
          <target state="translated">たとえば、コントロールが含まれている、関連付けられているラッパー クラスでは、通常は、同じアプリケーション内の同じコントロールの複数のインスタンスを配置する場合は、ラッパー クラスの複数のインスタンスで発生します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>A settings key is required only when the configuration data differs on a per-instance basis; for example, the location of dynamically positioned controls.</source>
          <target state="translated">インスタンスごとの単位で構成データが異なる場合にのみ、設定キーが必要たとえば、動的に配置されているコントロールの場所です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>The following general rules apply to the use of <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A&gt;</ph>:</source>
          <target state="translated">使用する、次の一般的な規則が適用<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>A control, like any class, may contain zero or more application settings classes, derived from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
          <target state="translated">任意のクラスと同様に、コントロールは、0 個以上のアプリケーション設定クラスを含めることがありますから派生した<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>Each settings class contains its own <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType&gt;</ph> property, which helps disambiguate multiple instances of that class.</source>
          <target state="translated">各設定クラスを含む独自<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType&gt;</ph>プロパティ、そのクラスの複数のインスタンスあいまいさを解決するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>A control should separate its per-instance data and its shared data into different settings classes.</source>
          <target state="translated">コントロールを異なる設定クラスに、インスタンスごとのデータおよび共有データを区切る必要があります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>For a control with any per-instance configuration data, the <ph id="ph1">`get`</ph> accessor of the <ph id="ph2">&lt;xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A&gt;</ph> property should default to the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> of the control.</source>
          <target state="translated">インスタンスごとの構成データを使用して、コントロールの<ph id="ph1">`get`</ph>のアクセサー、<ph id="ph2">&lt;xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A&gt;</ph>プロパティの既定にする必要があります、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph>コントロールのです。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>In most cases the name of the control will be unique within an application.</source>
          <target state="translated">ほとんどの場合、コントロールの名前は、アプリケーション内で一意になります。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>If the control contains only shared configuration data, <ph id="ph1">`get`</ph> should default to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">コントロールには、構成データを共有のみが含まれている場合<ph id="ph1">`get`</ph>既定にする必要があります<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>The <ph id="ph1">`set`</ph> accessor for this property should be implemented to distinguish between settings classes containing per-instance and shared configuration data.</source>
          <target state="translated"><ph id="ph1">`set`</ph>設定クラスのインスタンスおよび共有構成データを含むを区別するためにこのプロパティのアクセサーを実装する必要があります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>For each settings class containing per-instance data, <ph id="ph1">`set`</ph> should just pass-through to the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType&gt;</ph> property of the settings class.</source>
          <target state="translated">各設定クラスのインスタンスごとにデータを含む<ph id="ph1">`set`</ph>に単にパススルーする必要があります、<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType&gt;</ph>設定クラスのプロパティです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>For settings classes containing shared data, <ph id="ph1">`set`</ph> should perform no action for that settings class.</source>
          <target state="translated">共有のデータを含む設定クラスの<ph id="ph1">`set`</ph>必要がありますいないのアクションを実行する設定クラスです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>