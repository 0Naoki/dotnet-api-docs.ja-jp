<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7334668a390ddea282822d40a701007c04e22340" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69129494" /></Metadata><TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <TypeSignature Language="F#" Value="type IPersistComponentSettings = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>アプリケーション設定の格納および取得を行うコントロールまたはライブラリの標準機能を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常は、から<xref:System.Configuration.ApplicationSettingsBase>派生した設定ラッパークラスを作成し、このクラスに特別なプロパティを追加することによって、アプリケーションにアプリケーション設定のサポートを追加できます。 ただし、この方法では、コンテナーが詳細からシールドされるように、コントロールのアプリケーション設定を十分にカプセル化することはできません。 インターフェイス<xref:System.Configuration.IPersistComponentSettings>は、アプリケーション設定の状態変更要求をコントロール、コンポーネント、またはライブラリモジュールに通信するための標準インターフェイスをアプリケーションに提供します。 デザイン時ツールは、このインターフェイスにも依存して、コントロールとコンポーネントを適切に管理します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1">カスタム コントロールのアプリケーション設定</related>
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member LoadComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.LoadComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのアプリケーション設定を対応するプロパティに読み込み、コントロールの状態を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般に、メソッド<xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A>は次の2つの重要な操作を実行します。  
  
-   これにより、コントロールに含まれる各アプリケーション設定インスタンスは、アプリケーション設定プロパティの値を更新します。 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>通常は、メソッドを呼び出します。  
  
-   必要に応じて、これらの再読み込みされた設定プロパティに依存する一般的なプロパティを更新します。 たとえば、settings クラスに`location` settings プロパティが含まれている場合、では、この再読み込みされた設定を反映するために、 <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A>コントロールの<xref:System.Windows.Forms.Control.Location%2A>プロパティが更新されていることを確認する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member ResetComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.ResetComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのアプリケーション設定プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A>メソッドの実装は、通常、含ま<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>れているアプリケーション設定クラスの各インスタンスに対してメソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member SaveComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.SaveComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのアプリケーション設定プロパティを保持します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>は、コントロールのアプリケーション設定プロパティの値を、関連付けられているデータストアに書き込みます。 メソッドが使用するデータストアとシリアル化の手法は、を<xref:System.Configuration.SettingsProviderAttribute>通じて各設定クラスに関連付けられている設定プロバイダーによって決定されます。 <xref:System.Configuration.ISettingsProviderService>インターフェイスを使用して、設定プロバイダーの選択をオーバーライドできます。  
  
> [!NOTE]
>  プロパティが`true`の場合、コントロールは、アプリケーション<xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>が終了する<xref:System.Windows.Forms.Control.Dispose%2A>前にコントロールの構成データが自動的に格納されるように、独自のメソッドでを呼び出す必要があります。 <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveSettings : bool with get, set" Usage="System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのアプリケーション設定プロパティを自動的に保持するかどうかを示す値を取得または設定します。</summary>
        <value>コントロールの状態を自動的に保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールに構成データが含まれている場合、通常、このデータは、 <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>メソッドへの明示的な呼び出しに応答して保持されるか、コントロールの<xref:System.Windows.Forms.Control.Dispose%2A>メソッドが呼び出されたときに暗黙的に発生することがあります。 プロパティ<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>は、コントロールが破棄されたときに、その構成データを自動的に永続化するかどうかを決定します。  
  
 の<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>既定値は、コントロールの実装によって異なります。 コントロールのドキュメントでは、アプリケーション設定、永続化されるデータ、および<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>プロパティの既定値を使用するかどうかを指定する必要があります。  
  
   
  
## Examples  
 次のコード例は、構成データを自動的に永続化する前に、 <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>コントロールがプロパティの値を確認するための適切な方法を示しています。  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの現在のインスタンスのアプリケーション設定キーの値を取得または設定します。</summary>
        <value>コントロールの現在のインスタンスの設定キーを格納している <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 同じラッパー <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>クラスの複数のインスタンスが存在する場合は、プロパティを使用して、アプリケーション設定プロパティのグループを明確にします。 たとえば、コントロールに関連付けられたラッパークラスが含まれている場合、同じアプリケーションに同じコントロールの複数のインスタンスを配置すると、通常、ラッパークラスの複数のインスタンスが生成されます。 設定キーは、構成データがインスタンスごとに異なる場合にのみ必要です。たとえば、動的に配置されるコントロールの場所などです。  
  
 の<xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>使用には、次の一般的な規則が適用されます。  
  
-   任意のクラスと同様に、コントロールには、から<xref:System.Configuration.ApplicationSettingsBase>派生した0個以上のアプリケーション設定クラスを含めることができます。 各設定クラスには独自<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType>のプロパティが含まれており、そのクラスの複数のインスタンスをあいまいにするのに役立ちます。  
  
-   コントロールは、インスタンスごとのデータとその共有データをそれぞれ異なる設定クラスに分割する必要があります。  
  
-   インスタンスごとの構成データを持つコントロールの場合、 `get` <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>プロパティのアクセサーは、 <xref:System.Windows.Forms.Control.Name%2A>既定でコントロールのに設定されている必要があります。 ほとんどの場合、コントロールの名前はアプリケーション内で一意になります。 コントロールに共有構成データのみが含まれ`get`ている場合`null`、は既定でに設定される必要があります。  
  
-   インスタンス`set`ごとと共有構成データを含む設定クラスを区別するには、このプロパティのアクセサーを実装する必要があります。 インスタンスごとのデータを含む設定クラスごとに`set` 、設定クラスの<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType>プロパティにを渡すだけで済みます。 共有データを含む設定クラスの`set`場合、はその設定クラスに対して何も実行しません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1">カスタム コントロールのアプリケーション設定</related>
      </Docs>
    </Member>
  </Members>
</Type>
