<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d62ac-101">アプリケーション設定の格納および取得を行うコントロールまたはライブラリの標準機能を定義します。</span><span class="sxs-lookup"><span data-stu-id="d62ac-101">Defines standard functionality for controls or libraries that store and retrieve application settings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d62ac-102">派生する設定のラッパー クラスを作成することで、アプリケーションにアプリケーション設定のサポートを追加する通常、 <xref:System.Configuration.ApplicationSettingsBase>、し、このクラスに特殊なプロパティを追加します。</span><span class="sxs-lookup"><span data-stu-id="d62ac-102">Typically, you can add application settings support to an application by creating a settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, and then add special properties to this class.</span></span> <span data-ttu-id="d62ac-103">ただし、このアプローチ十分にカプセル化しないコントロール用のアプリケーション設定の詳細から、コンテナーがシールドされてようにします。</span><span class="sxs-lookup"><span data-stu-id="d62ac-103">However, this approach does not sufficiently encapsulate application settings for a control so that its container is shielded from the details.</span></span> <span data-ttu-id="d62ac-104"><xref:System.Configuration.IPersistComponentSettings>インターフェイスには、コントロール、コンポーネント、またはライブラリ モジュールにアプリケーション設定の状態変更要求を通信するための標準のインターフェイスを持つアプリケーションが用意されています。</span><span class="sxs-lookup"><span data-stu-id="d62ac-104">The <xref:System.Configuration.IPersistComponentSettings> interface provides an application with a standard interface for communicating application settings state change requests to a control, component, or library module.</span></span> <span data-ttu-id="d62ac-105">デザイン時ツールは、コントロールおよびコンポーネントを適切に管理するには、このインターフェイスによっても異なります。</span><span class="sxs-lookup"><span data-stu-id="d62ac-105">Design-time tools also depend on this interface to properly manage controls and components.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d62ac-106">コントロールのアプリケーション設定を対応するプロパティに読み込み、コントロールの状態を更新します。</span><span class="sxs-lookup"><span data-stu-id="d62ac-106">Reads the control's application settings into their corresponding properties and updates the control's state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d62ac-107">一般に、<xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A>メソッドは 2 つの重要な操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="d62ac-107">In general, the <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> method performs two essential operations:</span></span>  
  
-   <span data-ttu-id="d62ac-108">呼び出すことによって通常のアプリケーション設定のプロパティの値を更新するコントロールに含まれる各アプリケーション設定のインスタンスとその<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d62ac-108">It causes each application settings instance contained by the control to refresh the values of its application settings properties, typically by calling their <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="d62ac-109">必要に応じて、プロパティを再読み込みされたこれらの設定に依存する全般プロパティを更新します。</span><span class="sxs-lookup"><span data-stu-id="d62ac-109">As required, it updates those general properties that depend on these reloaded settings properties.</span></span> <span data-ttu-id="d62ac-110">設定クラスが含まれている場合など、`location`設定プロパティ、<xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A>ようにするコントロールの<xref:System.Windows.Forms.Control.Location%2A>プロパティが再読み込みされたこの設定を反映するように更新します。</span><span class="sxs-lookup"><span data-stu-id="d62ac-110">For example, if the settings class contained a `location` settings property, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> should ensure that the control's <xref:System.Windows.Forms.Control.Location%2A> property is updated to reflect this reloaded setting.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d62ac-111">コントロールのアプリケーション設定プロパティを既定値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="d62ac-111">Resets the control's application settings properties to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d62ac-112">実装、<xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A>メソッドを呼び出す通常、<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>メソッドが含まれているアプリケーション設定クラスの各インスタンスにします。</span><span class="sxs-lookup"><span data-stu-id="d62ac-112">The implementation of the <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> method typically calls the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method on each instance of an application settings class it contains.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d62ac-113">コントロールのアプリケーション設定プロパティを保持します。</span><span class="sxs-lookup"><span data-stu-id="d62ac-113">Persists the control's application settings properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d62ac-114"><xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>メソッドは、関連付けられたデータ ストアに、コントロールのアプリケーション設定のプロパティの値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d62ac-114">The <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> method writes the values of the control's application settings properties to the associated data store.</span></span> <span data-ttu-id="d62ac-115">メソッドを使用してデータ ストアとシリアル化技法は、各設定クラスに関連付けられている設定プロバイダーによって決定されます、<xref:System.Configuration.SettingsProviderAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="d62ac-115">The data store and serialization technique the method uses is determined by the settings provider associated with each settings class through the <xref:System.Configuration.SettingsProviderAttribute>.</span></span> <span data-ttu-id="d62ac-116">使用して設定プロバイダーの選択をオーバーライドすることができます、<xref:System.Configuration.ISettingsProviderService>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="d62ac-116">You can override the choice of the settings provider by using the <xref:System.Configuration.ISettingsProviderService> interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d62ac-117">場合、<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>プロパティは`true`、コントロールを呼び出す必要があります<xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>独自で<xref:System.Windows.Forms.Control.Dispose%2A>メソッド、アプリケーションが終了する前に、コントロールの構成データは自動的に格納できるようにします。</span><span class="sxs-lookup"><span data-stu-id="d62ac-117">If the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property is `true`, the control should call <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> in its own <xref:System.Windows.Forms.Control.Dispose%2A> method so that the control's configuration data is stored automatically before the application ends.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d62ac-118">コントロールのアプリケーション設定プロパティを自動的に保持するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d62ac-118">Gets or sets a value indicating whether the control should automatically persist its application settings properties.</span></span></summary>
        <value>
          <span data-ttu-id="d62ac-119">コントロールの状態を自動的に保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d62ac-119"><see langword="true" /> if the control should automatically persist its state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d62ac-120">明示的に呼び出すへの応答でこのデータが保持されます通常コントロール構成データが含まれている場合、<xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>メソッドも暗黙的にまたはときに、コントロールの<xref:System.Windows.Forms.Control.Dispose%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d62ac-120">If a control contains configuration data, it will typically persist this data in response to an explicit call to the <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> method or sometimes implicitly when the control's <xref:System.Windows.Forms.Control.Dispose%2A> method is invoked.</span></span> <span data-ttu-id="d62ac-121"><xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>プロパティが破棄されるとき、コントロールがその、構成データを自動的に保持するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="d62ac-121">The <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property determines whether a control automatically persists its configuration data when it is disposed.</span></span>  
  
 <span data-ttu-id="d62ac-122">既定値の<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>コントロールの実装に依存します。</span><span class="sxs-lookup"><span data-stu-id="d62ac-122">The default value of <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> depends on the implementation of the control.</span></span> <span data-ttu-id="d62ac-123">ドキュメント コントロールには、アプリケーションの設定を使用するかどうか、どのようなデータが保持されの既定値を示す必要があります、<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>プロパティは使用できます。</span><span class="sxs-lookup"><span data-stu-id="d62ac-123">The documentation for the control should indicate whether it uses application settings, what data is persisted, and what the default value of the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property is.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d62ac-124">次のコード例の値を確認するためのコントロールの適切な方法を示しています、<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>プロパティに自動的にその構成データを保持しようとします。</span><span class="sxs-lookup"><span data-stu-id="d62ac-124">The following code example shows the proper way for a control to check the value of the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property before it attempts to automatically persist its configuration data.</span></span>  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d62ac-125">コントロールの現在のインスタンスのアプリケーション設定キーの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d62ac-125">Gets or sets the value of the application settings key for the current instance of the control.</span></span></summary>
        <value><span data-ttu-id="d62ac-126">コントロールの現在のインスタンスの設定キーを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="d62ac-126">A <see cref="T:System.String" /> containing the settings key for the current instance of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d62ac-127">使用して、<xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>プロパティを同じのラッパー クラスの複数のインスタンスがある場合は、アプリケーション設定のプロパティのグループを明確にします。</span><span class="sxs-lookup"><span data-stu-id="d62ac-127">Use the <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> property to disambiguate groups of application settings properties when there are multiple instances of the same wrapper class.</span></span> <span data-ttu-id="d62ac-128">たとえば、コントロールが含まれている、関連付けられているラッパー クラスでは、通常は、同じアプリケーション内の同じコントロールの複数のインスタンスを配置する場合は、ラッパー クラスの複数のインスタンスで発生します。</span><span class="sxs-lookup"><span data-stu-id="d62ac-128">For example, if a control contains an associated wrapper class, then placing multiple instances of the same control in the same application will typically result in multiple instances of the wrapper class.</span></span> <span data-ttu-id="d62ac-129">インスタンスごとの単位で構成データが異なる場合にのみ、設定キーが必要たとえば、動的に配置されているコントロールの場所です。</span><span class="sxs-lookup"><span data-stu-id="d62ac-129">A settings key is required only when the configuration data differs on a per-instance basis; for example, the location of dynamically positioned controls.</span></span>  
  
 <span data-ttu-id="d62ac-130">使用する、次の一般的な規則が適用<xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:</span><span class="sxs-lookup"><span data-stu-id="d62ac-130">The following general rules apply to the use of <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:</span></span>  
  
-   <span data-ttu-id="d62ac-131">任意のクラスと同様に、コントロールは、0 個以上のアプリケーション設定クラスを含めることがありますから派生した<xref:System.Configuration.ApplicationSettingsBase>です。</span><span class="sxs-lookup"><span data-stu-id="d62ac-131">A control, like any class, may contain zero or more application settings classes, derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="d62ac-132">各設定クラスを含む独自<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType>プロパティ、そのクラスの複数のインスタンスあいまいさを解決するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="d62ac-132">Each settings class contains its own <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> property, which helps disambiguate multiple instances of that class.</span></span>  
  
-   <span data-ttu-id="d62ac-133">コントロールを異なる設定クラスに、インスタンスごとのデータおよび共有データを区切る必要があります。</span><span class="sxs-lookup"><span data-stu-id="d62ac-133">A control should separate its per-instance data and its shared data into different settings classes.</span></span>  
  
-   <span data-ttu-id="d62ac-134">インスタンスごとの構成データを使用して、コントロールの`get`のアクセサー、<xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>プロパティの既定にする必要があります、<xref:System.Windows.Forms.Control.Name%2A>コントロールのです。</span><span class="sxs-lookup"><span data-stu-id="d62ac-134">For a control with any per-instance configuration data, the `get` accessor of the <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> property should default to the <xref:System.Windows.Forms.Control.Name%2A> of the control.</span></span> <span data-ttu-id="d62ac-135">ほとんどの場合、コントロールの名前は、アプリケーション内で一意になります。</span><span class="sxs-lookup"><span data-stu-id="d62ac-135">In most cases the name of the control will be unique within an application.</span></span> <span data-ttu-id="d62ac-136">コントロールには、構成データを共有のみが含まれている場合`get`既定にする必要があります`null`です。</span><span class="sxs-lookup"><span data-stu-id="d62ac-136">If the control contains only shared configuration data, `get` should default to `null`.</span></span>  
  
-   <span data-ttu-id="d62ac-137">`set`設定クラスのインスタンスおよび共有構成データを含むを区別するためにこのプロパティのアクセサーを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d62ac-137">The `set` accessor for this property should be implemented to distinguish between settings classes containing per-instance and shared configuration data.</span></span> <span data-ttu-id="d62ac-138">各設定クラスのインスタンスごとにデータを含む`set`に単にパススルーする必要があります、<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType>設定クラスのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d62ac-138">For each settings class containing per-instance data, `set` should just pass-through to the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> property of the settings class.</span></span> <span data-ttu-id="d62ac-139">共有のデータを含む設定クラスの`set`必要がありますいないのアクションを実行する設定クラスです。</span><span class="sxs-lookup"><span data-stu-id="d62ac-139">For settings classes containing shared data, `set` should perform no action for that settings class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
  </Members>
</Type>