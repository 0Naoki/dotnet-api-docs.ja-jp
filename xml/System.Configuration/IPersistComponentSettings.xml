<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5ec69e6290ad921c6c9c8003c4ffa4160afbca1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36696728" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <TypeSignature Language="F#" Value="type IPersistComponentSettings = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>アプリケーション設定の格納および取得を行うコントロールまたはライブラリの標準機能を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生する設定のラッパー クラスを作成することで、アプリケーションにアプリケーション設定のサポートを追加する通常、 <xref:System.Configuration.ApplicationSettingsBase>、し、このクラスに特殊なプロパティを追加します。 ただし、このアプローチ十分にカプセル化しないコントロール用のアプリケーション設定の詳細から、コンテナーがシールドされてようにします。 <xref:System.Configuration.IPersistComponentSettings>インターフェイスには、コントロール、コンポーネント、またはライブラリ モジュールにアプリケーション設定の状態変更要求を通信するための標準のインターフェイスを持つアプリケーションが用意されています。 デザイン時ツールは、コントロールおよびコンポーネントを適切に管理するには、このインターフェイスによっても異なります。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member LoadComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.LoadComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのアプリケーション設定を対応するプロパティに読み込み、コントロールの状態を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般に、<xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A>メソッドは 2 つの重要な操作を実行します。  
  
-   呼び出すことによって通常のアプリケーション設定のプロパティの値を更新するコントロールに含まれる各アプリケーション設定のインスタンスとその<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>メソッドです。  
  
-   必要に応じて、プロパティを再読み込みされたこれらの設定に依存する全般プロパティを更新します。 設定クラスが含まれている場合など、`location`設定プロパティ、<xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A>ようにするコントロールの<xref:System.Windows.Forms.Control.Location%2A>プロパティが再読み込みされたこの設定を反映するように更新します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member ResetComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.ResetComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのアプリケーション設定プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 実装、<xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A>メソッドを呼び出す通常、<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>メソッドが含まれているアプリケーション設定クラスの各インスタンスにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member SaveComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.SaveComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのアプリケーション設定プロパティを保持します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>メソッドは、関連付けられたデータ ストアに、コントロールのアプリケーション設定のプロパティの値を書き込みます。 メソッドを使用してデータ ストアとシリアル化技法は、各設定クラスに関連付けられている設定プロバイダーによって決定されます、<xref:System.Configuration.SettingsProviderAttribute>です。 使用して設定プロバイダーの選択をオーバーライドすることができます、<xref:System.Configuration.ISettingsProviderService>インターフェイスです。  
  
> [!NOTE]
>  場合、<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>プロパティは`true`、コントロールを呼び出す必要があります<xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>独自で<xref:System.Windows.Forms.Control.Dispose%2A>メソッド、アプリケーションが終了する前に、コントロールの構成データは自動的に格納できるようにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveSettings : bool with get, set" Usage="System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのアプリケーション設定プロパティを自動的に保持するかどうかを示す値を取得または設定します。</summary>
        <value>コントロールの状態を自動的に保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 明示的に呼び出すへの応答でこのデータが保持されます通常コントロール構成データが含まれている場合、<xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>メソッドも暗黙的にまたはときに、コントロールの<xref:System.Windows.Forms.Control.Dispose%2A>メソッドが呼び出されます。 <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>プロパティが破棄されるとき、コントロールがその、構成データを自動的に保持するかどうかを決定します。  
  
 既定値の<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>コントロールの実装に依存します。 ドキュメント コントロールには、アプリケーションの設定を使用するかどうか、どのようなデータが保持されの既定値を示す必要があります、<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>プロパティは使用できます。  
  
   
  
## Examples  
 次のコード例の値を確認するためのコントロールの適切な方法を示しています、<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>プロパティに自動的にその構成データを保持しようとします。  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの現在のインスタンスのアプリケーション設定キーの値を取得または設定します。</summary>
        <value>コントロールの現在のインスタンスの設定キーを格納している <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>プロパティを同じのラッパー クラスの複数のインスタンスがある場合は、アプリケーション設定のプロパティのグループを明確にします。 たとえば、コントロールが含まれている、関連付けられているラッパー クラスでは、通常は、同じアプリケーション内の同じコントロールの複数のインスタンスを配置する場合は、ラッパー クラスの複数のインスタンスで発生します。 インスタンスごとの単位で構成データが異なる場合にのみ、設定キーが必要たとえば、動的に配置されているコントロールの場所です。  
  
 使用する、次の一般的な規則が適用<xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:  
  
-   任意のクラスと同様に、コントロールは、0 個以上のアプリケーション設定クラスを含めることがありますから派生した<xref:System.Configuration.ApplicationSettingsBase>です。 各設定クラスを含む独自<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType>プロパティ、そのクラスの複数のインスタンスあいまいさを解決するのに役立ちます。  
  
-   コントロールを異なる設定クラスに、インスタンスごとのデータおよび共有データを区切る必要があります。  
  
-   インスタンスごとの構成データを使用して、コントロールの`get`のアクセサー、<xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>プロパティの既定にする必要があります、<xref:System.Windows.Forms.Control.Name%2A>コントロールのです。 ほとんどの場合、コントロールの名前は、アプリケーション内で一意になります。 コントロールには、構成データを共有のみが含まれている場合`get`既定にする必要があります`null`です。  
  
-   `set`設定クラスのインスタンスおよび共有構成データを含むを区別するためにこのプロパティのアクセサーを実装する必要があります。 各設定クラスのインスタンスごとにデータを含む`set`に単にパススルーする必要があります、<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType>設定クラスのプロパティです。 共有のデータを含む設定クラスの`set`必要がありますいないのアクションを実行する設定クラスです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
  </Members>
</Type>