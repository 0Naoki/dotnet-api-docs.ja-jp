<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ApplicationSettingsBase.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac528fd80da70acde483fb97eb88b3d396c8d4e31ba.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28fd80da70acde483fb97eb88b3d396c8d4e31ba</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.</source>
          <target state="translated">Windows フォーム アプリケーションでアプリケーション設定機能を実装する、具象ラッパー クラスを派生する基本クラスとして機能します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> adds the following functionality to the <ph id="ph2">&lt;xref:System.Configuration.SettingsBase&gt;</ph> class, which is used by Web-based applications:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 次の機能を追加、 <ph id="ph2">&lt;xref:System.Configuration.SettingsBase&gt;</ph> Web ベースのアプリケーションによって使用されるクラス。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>The ability to detect attributes on a derived, settings wrapper class.</source>
          <target state="translated">派生、設定のラッパー クラスの属性を検出する機能。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> supports the declarative model used for wrapper class properties, as described later.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 後述するように、ラッパー クラスのプロパティに使用する宣言型モデルをサポートします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Higher-level <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> methods.</source>
          <target state="translated">上位レベル<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Additional validation events that you can handle to ensure the correctness of individual settings.</source>
          <target state="translated">個々 の設定が正しいことを確実に処理できる追加の検証イベント。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>In the application settings architecture, to access a group of settings properties you need to derive a concrete wrapper class from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
          <target state="translated">アプリケーション設定アーキテクチャでは、設定のプロパティのグループにアクセスする必要がありますから具体的なラッパー クラスを派生<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>The wrapper class customizes <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> in the following ways:</source>
          <target state="translated">ラッパー クラスをカスタマイズ<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>次のようにします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>For every settings property to be accessed, a corresponding strongly typed public property is added to the wrapper class.</source>
          <target state="translated">アクセスできるすべての設定プロパティ、ラッパー クラスに対応する厳密に型指定されたパブリック プロパティが追加されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>This property has <ph id="ph1">`get`</ph> and <ph id="ph2">`set`</ph> accessors for read/write application settings, but only a <ph id="ph3">`get`</ph> accessor for read-only settings.</source>
          <target state="translated">このプロパティには<ph id="ph1">`get`</ph>と<ph id="ph2">`set`</ph>アクセサーのみが、読み取り/書き込みのアプリケーション設定を<ph id="ph3">`get`</ph>アクセサー読み取り専用の設定をします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Appropriated attributes must be applied to the wrapper class's public properties to indicate characteristics of the settings property, such as the setting's scope (application or user), whether the setting should support roaming, the default value for the setting, the settings provider to be used, and so on.</source>
          <target state="translated">設定のスコープ (アプリケーションまたはユーザー) などを設定するプロパティの特性をローミング設定プロバイダーを使用してなどが、設定の既定値の設定をサポートするかどうかを示すために、ラッパー クラスのパブリック プロパティに適切な属性を適用する必要があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Each property is required to specify its scope, using either <ph id="ph1">&lt;xref:System.Configuration.ApplicationScopedSettingAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.Configuration.UserScopedSettingAttribute&gt;</ph>.</source>
          <target state="translated">各プロパティがいずれかを使用して、そのスコープを指定する必要が<ph id="ph1">&lt;xref:System.Configuration.ApplicationScopedSettingAttribute&gt;</ph>または<ph id="ph2">&lt;xref:System.Configuration.UserScopedSettingAttribute&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Application-scoped settings are read-only if the default <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> is used.</source>
          <target state="translated">アプリケーション スコープの設定は読み取り専用場合、既定<ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>を使用します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class uses reflection to detect these attributes at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>クラスでは、リフレクションを使用して、実行時にこれらの属性を検出します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Most of this information gets passed to the settings provider layer, which is responsible for storage, persistence format, and so on.</source>
          <target state="translated">この情報の大部分は、記憶域や保存形式、担当する設定プロバイダー レイヤーに渡されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>When an application has multiple settings wrapper classes, each class defines a <bpt id="p1">*</bpt>settings group<ept id="p1">*</ept>.</source>
          <target state="translated">アプリケーションが複数の設定のラッパー クラス、各クラスの場合を定義、<bpt id="p1">*</bpt>設定グループ<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Each group has the following characteristics:</source>
          <target state="translated">各グループには、次の特徴があります。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>A group can contain any number or type of property settings.</source>
          <target state="translated">グループには、任意の数または種類のプロパティの設定を含めることができます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>If the group name is not explicitly set by the decorating the wrapper class with a <ph id="ph1">&lt;xref:System.Configuration.SettingsGroupNameAttribute&gt;</ph>, then a name is automatically generated.</source>
          <target state="translated">グループ名が修飾がラッパー クラスを明示的に設定されていない場合、 <ph id="ph1">&lt;xref:System.Configuration.SettingsGroupNameAttribute&gt;</ph>、名前が自動的に生成されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>By default, all client-based applications use the <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> to provide storage.</source>
          <target state="translated">既定では、すべてのクライアント ベースのアプリケーションを使用して、<ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>ストレージを提供します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>If an alternate settings provider is desired, then the wrapper class or property must be decorated with a corresponding <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>.</source>
          <target state="translated">代替の設定プロバイダーが必要な場合に対応するラッパー クラスまたはプロパティを装飾する必要があります<ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>For more information about using application settings, see <bpt id="p1">[</bpt>Application Settings for Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)</ept>.</source>
          <target state="translated">詳細については、アプリケーションの設定を使用して、次を参照してください。 <bpt id="p1">[</bpt>Windows フォーム用のアプリケーション設定<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text.</source>
          <target state="translated">メイン フォームの次の属性を保持するアプリケーションの設定の使用を次のコード例に示します: の場所、サイズ、背景色、およびタイトル バーのテキスト。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>All of these attributes are persisted as single application settings properties in the <ph id="ph1">`FormSettings`</ph> class, named <ph id="ph2">`FormLocation`</ph>, <ph id="ph3">`FormSize`</ph>, <ph id="ph4">`FormBackColor`</ph> and <ph id="ph5">`FormText`</ph>, respectively.</source>
          <target state="translated">これらの属性のすべての 1 つのアプリケーション設定のプロパティとして永続化、<ph id="ph1">`FormSettings`</ph>という名前のクラス<ph id="ph2">`FormLocation`</ph>、 <ph id="ph3">`FormSize`</ph>、<ph id="ph4">`FormBackColor`</ph>と<ph id="ph5">`FormText`</ph>、それぞれします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>All except for <ph id="ph1">`FormText`</ph> and <ph id="ph2">`Size`</ph> are data bound to their associated form properties and have a default setting value applied using <ph id="ph3">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph>.</source>
          <target state="translated">すべてを除く<ph id="ph1">`FormText`</ph>と<ph id="ph2">`Size`</ph>は、データが関連付けられているフォームのプロパティにバインドされている既定の設定値を使用して適用<ph id="ph3">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>The form contains four child controls that have the following names and functions:</source>
          <target state="translated">フォームには、次の名前と関数を持つ 4 つの子コントロールが含まれています。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>A button named <ph id="ph1">`btnBackColor`</ph> used to display the <bpt id="p1">**</bpt>Color<ept id="p1">**</ept> common dialog box.</source>
          <target state="translated">という名前のボタン<ph id="ph1">`btnBackColor`</ph>表示に使用される、<bpt id="p1">**</bpt>色<ept id="p1">**</ept>コモン ダイアログ ボックス。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>A button named <ph id="ph1">`btnReload`</ph> used to <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> the application settings.</source>
          <target state="translated">という名前のボタン<ph id="ph1">`btnReload`</ph>ため<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph>アプリケーション設定。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>A button named <ph id="ph1">`btnReset`</ph> used to <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> the application settings.</source>
          <target state="translated">という名前のボタン<ph id="ph1">`btnReset`</ph>ため<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph>アプリケーション設定。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>A textbox named <ph id="ph1">`tbStatus`</ph> used to display status information about the program.</source>
          <target state="translated">という名前のテキスト ボックス<ph id="ph1">`tbStatus`</ph>プログラムに関する状態情報を表示するために使用します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Notice that after every execution of the application, an additional period character is appended to the title text of the form.</source>
          <target state="translated">アプリケーションのすべての実行後にすることを確認は、追加のピリオド文字は、フォームのタイトルのテキストに追加されます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>This code example requires a Form with a <ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog&gt;</ph> class named <ph id="ph2">`colorDialog1`</ph>, and a <ph id="ph3">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph> control with a <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripStatusLabel&gt;</ph> named <ph id="ph5">`tbStatus`</ph>.</source>
          <target state="translated">このコード例は、フォーム、<ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog&gt;</ph>という名前のクラス<ph id="ph2">`colorDialog1`</ph>、および<ph id="ph3">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph>コントロールを<ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripStatusLabel&gt;</ph>という名前<ph id="ph5">`tbStatus`</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Additionally, it requires three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> objects named <ph id="ph2">`btnReload`</ph>, <ph id="ph3">`btnReset`</ph>, and <ph id="ph4">`btnBackColor`</ph>.</source>
          <target state="translated">さらに、3 つ必要<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>という名前のオブジェクト<ph id="ph2">`btnReload`</ph>、 <ph id="ph3">`btnReset`</ph>、および<ph id="ph4">`btnBackColor`</ph>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> クラスのインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> class to its default state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> クラスのインスタンスを既定の状態に初期化します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>The default constructor was designed to work under the assumption that there is no component associated with the current settings wrapper class, which derives from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
          <target state="translated">既定のコンス トラクターは、設定の現在とからの派生元の代わりに、ラッパー クラスに関連付けられているコンポーネントがないことを想定の下で動作するように設計されました<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>When an instance of a wrapper class is created, inherited code will automatically perform the following actions:</source>
          <target state="translated">ラッパー クラスのインスタンスが作成されると、継承されたコードは、次の操作を自動的に実行します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>Reflect over the class.</source>
          <target state="translated">クラスに反映されます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>For each property on the wrapper marked with either <ph id="ph1">`[UserScopedSettingAttribute]`</ph> or <ph id="ph2">`[ApplicationScopedSettingAttribute]`</ph>, a corresponding <ph id="ph3">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> is created.</source>
          <target state="translated">ラッパーの各プロパティのいずれかでマークされている<ph id="ph1">`[UserScopedSettingAttribute]`</ph>または<ph id="ph2">`[ApplicationScopedSettingAttribute]`</ph>、対応する<ph id="ph3">&lt;xref:System.Configuration.SettingsProperty&gt;</ph>を作成します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>Each <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> has some of its properties set based on other attributes that are optionally present on the wrapper's properties, such as the default value or the settings provider.</source>
          <target state="translated">各<ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph>がいくつかのオプションで、既定値の設定プロバイダーなどのラッパーのプロパティに組み込まれているその他の属性に基づいて、プロパティを設定します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>All other attributes are simply put into an attribute bag, the <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty.Attributes%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> class.</source>
          <target state="translated">その他のすべての属性は、属性のバッグに簡単に言えば、<ph id="ph1">&lt;xref:System.Configuration.SettingsProperty.Attributes%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Configuration.SettingsProperty&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>All <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> objects are added to a <ph id="ph2">&lt;xref:System.Configuration.SettingsPropertyCollection&gt;</ph> represented by the <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.Properties%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class.</source>
          <target state="translated">すべて<ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph>オブジェクトに追加されます、<ph id="ph2">&lt;xref:System.Configuration.SettingsPropertyCollection&gt;</ph>によって表される、<ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.Properties%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>This collection is then passed to the <ph id="ph1">&lt;xref:System.Configuration.SettingsBase.Initialize%2A&gt;</ph> method.</source>
          <target state="translated">このコレクションに渡され、<ph id="ph1">&lt;xref:System.Configuration.SettingsBase.Initialize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>As implied by step 3 mentioned previously, <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> natively works with several property attributes, specifically the following: <ph id="ph2">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>, <ph id="ph3">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph>, and <ph id="ph4">&lt;xref:System.Configuration.SettingsSerializeAsAttribute&gt;</ph>.</source>
          <target state="translated">手順 3、前述と暗黙的な<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>ネイティブにいくつかのプロパティ属性を具体的には、次の動作: <ph id="ph2">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>、<ph id="ph3">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph>と<ph id="ph4">&lt;xref:System.Configuration.SettingsSerializeAsAttribute&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>All other settings attributes are simply passed through to the appropriate underlying provider.</source>
          <target state="translated">その他のすべての設定の属性は、適切な基になるプロバイダーに単に渡されます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
          <source>The component that will act as the owner of the application settings object.</source>
          <target state="translated">アプリケーション設定オブジェクトの所有者として機能するコンポーネント。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> class using the supplied owner component.</source>
          <target state="translated">指定された所有者コンポーネントを使用して、<ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> クラスのインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
          <source>This constructor is exactly equivalent to the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29&gt;</ph> constructor using the invocation:</source>
          <target state="translated">このコンス トラクターは完全に同等の<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29&gt;</ph>コンス トラクターの呼び出しを使用します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
          <source>For information about how reflection is used during the instantiation of a wrapper class, see the default <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor&gt;</ph> constructor.</source>
          <target state="translated">ラッパー クラスのインスタンス化時にリフレクションを使用する方法については、既定値を参照してください。<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
          <source><ph id="ph1">&lt;paramref name="owner" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owner" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that uniquely identifies separate instances of the wrapper class.</source>
          <target state="translated">ラッパー クラスの個々のインスタンスを一意に識別する <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> class using the supplied settings key.</source>
          <target state="translated">指定された設定キーを使用して、<ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> クラスのインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> property to the value of the <ph id="ph2">`settingsKey`</ph> parameter.</source>
          <target state="translated">このコンス トラクター、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph>プロパティの値を<ph id="ph2">`settingsKey`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
          <source>This property is useful in disambiguating different instances of the settings wrapper class in the same application domain.</source>
          <target state="translated">このプロパティは、同じアプリケーション ドメイン内の設定のラッパー クラスの異なるインスタンスを明確化に役立ちます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
          <source>For information about how reflection is used during the instantiation of a wrapper class, see the default <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor&gt;</ph> constructor.</source>
          <target state="translated">ラッパー クラスのインスタンス化時にリフレクションを使用する方法については、既定値を参照してください。<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>The component that will act as the owner of the application settings object.</source>
          <target state="translated">アプリケーション設定オブジェクトの所有者として機能するコンポーネント。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that uniquely identifies separate instances of the wrapper class.</source>
          <target state="translated">ラッパー クラスの個々のインスタンスを一意に識別する <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> class using the supplied owner component and settings key.</source>
          <target state="translated">指定された所有者コンポーネントと設定キーを使用して、<ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> クラスのインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> object specified by the <ph id="ph2">`owner`</ph> parameter acts as the owner of the current instance of this applications settings class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>で指定されたオブジェクト、<ph id="ph2">`owner`</ph>パラメーターがこのアプリケーション設定クラスの現在のインスタンスの所有者として機能します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>During the initialization of the settings wrapper class derived from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>, the owner's site is queried for a <ph id="ph2">&lt;xref:System.Configuration.ISettingsProviderService&gt;</ph>.</source>
          <target state="translated">派生するラッパー クラスの設定の初期化中に<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>、所有者のサイトが照会、<ph id="ph2">&lt;xref:System.Configuration.ISettingsProviderService&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>If one exists, it is used in preference to native settings provider for all the properties of the wrapper class, as specified by the <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>.</source>
          <target state="translated">1 つが存在する場合にすべてのプロパティで指定したとおり、ラッパー クラスのネイティブの設定プロバイダー方が優先的使用は、<ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> property to the value of the <ph id="ph2">`settingsKey`</ph> parameter.</source>
          <target state="translated">このコンス トラクター、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph>プロパティの値を<ph id="ph2">`settingsKey`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>This property is useful in disambiguating different instances of the wrapper class in the same application domain.</source>
          <target state="translated">このプロパティは、同じアプリケーション ドメイン内のラッパー クラスの異なるインスタンスを明確化に役立ちます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>For information about how reflection is used during the instantiation of a wrapper class, see the default <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor&gt;</ph> constructor.</source>
          <target state="translated">ラッパー クラスのインスタンス化時にリフレクションを使用する方法については、既定値を参照してください。<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="owner" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owner" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Context">
          <source>Gets the application settings context associated with the settings group.</source>
          <target state="translated">設定グループに関連付けられているアプリケーション設定のコンテキストを取得します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Context">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph> associated with the settings group.</source>
          <target state="translated">設定グループに関連付けられている <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Context">
          <source>Each settings wrapper class derived from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> has a context associated with it.</source>
          <target state="translated">各設定のラッパー クラスから派生した<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>が関連付けられているコンテキスト。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Context">
          <source>The context is passed to the settings provider for each property to identify how the property is used.</source>
          <target state="translated">コンテキストは、プロパティの使用方法を識別する各プロパティの設定プロバイダーに渡されます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Context">
          <source>Context therefore acts as a hint to help the settings provider determine how best to persist the associated application settings values.</source>
          <target state="translated">そのため、コンテキストは設定プロバイダーが最善の方法を決定すると、関連付けられているアプリケーションの設定値を保持するためのヒントとして機能します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Context">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> property enables the settings provider to disambiguate multiple instances of the same wrapper class.</source>
          <target state="translated">これに対し、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph>プロパティが同じのラッパー クラスの複数のインスタンスを区別するために設定プロバイダーを使用します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the settings property whose value is to be returned.</source>
          <target state="translated">値が返される設定プロパティの名前を含む <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
          <source>Returns the value of the named settings property for the previous version of the same application.</source>
          <target state="translated">同じアプリケーションの以前のバージョンの、名前付き設定プロパティの値を返します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> containing the value of the specified <ph id="ph2">&lt;see cref="T:System.Configuration.SettingsProperty" /&gt;</ph> if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">設定プロパティが見つかった場合は、指定した <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> の値を含む <ph id="ph2">&lt;see cref="T:System.Configuration.SettingsProperty" /&gt;</ph>、それ以外の場合は <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A&gt;</ph> method is often used in conjunction with the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A&gt;</ph> method when migrating application settings during the installation of a new version of an application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A&gt;</ph>メソッドがと共に使用される多くの場合、<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A&gt;</ph>メソッドは、アプリケーションの新しいバージョンのインストール中にアプリケーションの設定を移行するとします。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
          <source>The property does not exist.</source>
          <target state="translated">プロパティが存在しません。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
          <source>The property count is zero or the property cannot be found in the data store.</source>
          <target state="translated">プロパティ カウントが 0 か、データ ストアでプロパティが見つかりません。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the property to access.</source>
          <target state="translated">アクセスするプロパティの名前を含む <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>Gets or sets the value of the specified application settings property.</source>
          <target state="translated">指定したアプリケーション設定プロパティの値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>If found, the value of the named settings property; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">指定した設定プロパティが見つかった場合は、そのプロパティの値。それ以外の場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> property, also known as the indexer, is routinely used in the settings wrapper class derived from <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph>プロパティ、インデクサーとも呼ばれますが、設定から派生するラッパー クラスで日常的に使用<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> binds the public property of the wrapper class to the corresponding settings property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> 設定プロパティの対応するラッパー クラスのパブリック プロパティをバインドします。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> raises several events depending on the operation being performed:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> 実行中の操作に応じていくつかのイベントを発生させます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>The first time a property is retrieved, the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded&gt;</ph> event is raised.</source>
          <target state="translated">プロパティを取得すると、最初に、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded&gt;</ph>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>When a property is set, the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A&gt;</ph> event is raised.</source>
          <target state="translated">プロパティが設定されている場合、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A&gt;</ph>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>If the handler does not cancel the event, then the property value is set and the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph> event is raised.</source>
          <target state="translated">ハンドラーが、イベントをキャンセルしていないかどうかは、プロパティ値が設定され、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>There are no properties associated with the current wrapper or the specified property could not be found.</source>
          <target state="translated">現在のラッパーに関連付けられたプロパティが存在しないか、指定したプロパティが見つかりませんでした。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>An attempt was made to set a read-only property.</source>
          <target state="translated">読み取り専用プロパティを設定しようとしました。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>The value supplied is of a type incompatible with the settings property, during a set operation.</source>
          <target state="translated">指定された値は、設定操作時の設定プロパティと型の互換性がありません。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>The configuration file could not be parsed.</source>
          <target state="translated">構成ファイルを解析できませんでした。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>The source of the event.</source>
          <target state="translated">イベントのソース。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>The source of the event.</source>
          <target state="translated">イベントのソース。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingChangingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.Configuration.SettingChangingEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>The source of the event.</source>
          <target state="translated">イベントのソース。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsLoadedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsLoadedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>The source of the event.</source>
          <target state="translated">イベントのソース。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>Gets the collection of settings properties in the wrapper.</source>
          <target state="translated">ラッパーの設定プロパティのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyCollection" /&gt;</ph> containing all the <ph id="ph2">&lt;see cref="T:System.Configuration.SettingsProperty" /&gt;</ph> objects used in the current wrapper.</source>
          <target state="translated">現在のラッパーで使用するすべての <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyCollection" /&gt;</ph> オブジェクトを格納している <ph id="ph2">&lt;see cref="T:System.Configuration.SettingsProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>The <ph id="ph1">`get`</ph> accessor of the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Properties%2A&gt;</ph> property reflects over the metadata of the settings wrapper class, which is derived from <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>, to dynamically determine the set of available application settings properties.</source>
          <target state="translated"><ph id="ph1">`get`</ph>のアクセサー、<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Properties%2A&gt;</ph>から派生する設定のラッパー クラスのメタデータに対するプロパティに反映されます<ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>、使用可能なアプリケーション設定のプロパティのセットを動的に決定します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class natively recognizes certain characteristics of an application setting, such as its name, property type, settings provider, default value, read only status, and a serialization preference.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>のみの状態、およびシリアル化の基本設定を読み取るクラスはアプリケーションの設定、名前、プロパティの型、プロバイダーの設定、既定値などの特定の特性をネイティブに認識します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>These characteristics are mirrored as properties in the <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> class.</source>
          <target state="translated">これらの特性はプロパティとしてミラー化されて、<ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>All other attributes of the settings property are just passed through to its associated settings provider.</source>
          <target state="translated">設定プロパティの他のすべての属性は、関連付けられている設定プロバイダーに渡されるを通じてだけです。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>The associated settings provider could not be found or its instantiation failed.</source>
          <target state="translated">関連付けられた設定プロバイダーが見つからなかったか、設定プロバイダーをインスタンス化できませんでした。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
          <source>Occurs after the value of an application settings property is changed.</source>
          <target state="translated">アプリケーション設定プロパティの値が変更された後に発生します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph> event is raised when a settings property is changed through the <ph id="ph2">`set`</ph> accessor of the <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> method, or for every property that is restored when a call is made to the <ph id="ph4">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph>を通じて設定プロパティが変更されたときにイベントが発生した、<ph id="ph2">`set`</ph>のアクセサー、<ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph>メソッド、またはへの呼び出しが行われたときに復元されるすべてのプロパティに対して、<ph id="ph4">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph>または<ph id="ph5">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
          <source>There is no corresponding <ph id="ph1">`PropertyChanging`</ph> event for this class; instead, see the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> event.</source>
          <target state="translated">対応がない<ph id="ph1">`PropertyChanging`</ph>このイベント クラスは、代わりに、参照してください、<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
          <source>Gets a collection of property values.</source>
          <target state="translated">プロパティ値のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyValueCollection" /&gt;</ph> of property values.</source>
          <target state="translated">プロパティ値の <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyValueCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Providers">
          <source>Gets the collection of application settings providers used by the wrapper.</source>
          <target state="translated">ラッパーが使用するアプリケーション設定プロバイダーのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Providers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsProviderCollection" /&gt;</ph> containing all the <ph id="ph2">&lt;see cref="T:System.Configuration.SettingsProvider" /&gt;</ph> objects used by the settings properties of the current settings wrapper.</source>
          <target state="translated">現在の設定ラッパーの設定プロパティが使用する、すべての <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsProviderCollection" /&gt;</ph> オブジェクトを格納している <ph id="ph2">&lt;see cref="T:System.Configuration.SettingsProvider" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Providers">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph> determines what setting provider is used by a settings wrapper class or an individual setting property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>設定のラッパー クラスまたは個々 の設定プロパティによって使用されるどのような設定プロバイダーを決定します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Providers">
          <source>If this attribute is not specified, a client application will use the <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>.</source>
          <target state="translated">この属性が指定されていない場合、クライアント アプリケーションは使用、<ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>Refreshes the application settings property values from persistent storage.</source>
          <target state="translated">永続ストレージからアプリケーション設定プロパティ値を更新します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> method clears the currently cached property values, causing a reload of these values from persistent storage when they are subsequently accessed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph>メソッドは、後でアクセスされる際に、永続ストレージからこれらの値の再読み込みを原因と、現在キャッシュされているプロパティの値をクリアします。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>This method performs the following actions:</source>
          <target state="translated">このメソッドは、次の操作を実行します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>It clears the currently cached properties by clearing the collection represented by the <ph id="ph1">&lt;xref:System.Configuration.SettingsBase.PropertyValues%2A&gt;</ph> property.</source>
          <target state="translated">によって表されるコレクションをオフにして、現在キャッシュされているプロパティをクリア、<ph id="ph1">&lt;xref:System.Configuration.SettingsBase.PropertyValues%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>It raises the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph> event for every member of the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Properties%2A&gt;</ph> collection.</source>
          <target state="translated">発生させる、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph>イベントのすべてのメンバーを<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Properties%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> contrasts with <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> 対照的<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph>で前者を読み込むこと、保存されているアプリケーションの設定値の最後のセット、後者は、保存されている既定値を読み込み、します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> method being invoked in the body of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler for a button named <ph id="ph3">`btnReload`</ph>.</source>
          <target state="translated">次のコード例は、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph>の本体で呼び出されるメソッド、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>という名前のボタンのイベント ハンドラーを<ph id="ph3">`btnReload`</ph>です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties.</source>
          <target state="translated">この呼び出しの結果としては、アプリケーションの設定に現在格納されている値は、対応するプロパティに再読み込みされます。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>The full code example is listed in the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class overview.</source>
          <target state="translated">完全なコード例が記載されて、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>クラスの概要です。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>Restores the persisted application settings values to their corresponding default properties.</source>
          <target state="translated">保持されているアプリケーション設定値を対応する既定のプロパティに復元します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> method overwrites the user-scoped settings properties by restoring the currently persisted value of each application settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph>メソッドは、現在永続化された各アプリケーションの設定の値を復元することによってユーザー スコープ設定のプロパティを上書きします。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>This method performs the following actions:</source>
          <target state="translated">このメソッドは、次の操作を実行します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>It calls the <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType&gt;</ph> method on every settings provider that supports this optional method.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType&gt;</ph>この省略可能なメソッドをサポートするすべての設定プロバイダーのメソッドです。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>It calls the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> method to force a refresh of the settings property values.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph>設定プロパティの値の更新を強制する方法です。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> contrasts with <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> 対照的<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph>で前者を読み込むこと、保存されているアプリケーションの設定値の最後のセット、後者は、保存されている既定値を読み込み、します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> method being invoked in the body of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler for a button named <ph id="ph3">`btnReset`</ph>.</source>
          <target state="translated">次のコード例は、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph>の本体で呼び出されるメソッド、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>という名前のボタンのイベント ハンドラーを<ph id="ph3">`btnReset`</ph>です。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties.</source>
          <target state="translated">この呼び出しの結果としては、アプリケーション設定の保存した既定値は、対応するプロパティに再読み込みされます。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>The full code example is listed in the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class overview.</source>
          <target state="translated">完全なコード例が記載されて、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>クラスの概要です。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>The configuration file could not be parsed.</source>
          <target state="translated">構成ファイルを解析できませんでした。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>Stores the current values of the application settings properties.</source>
          <target state="translated">アプリケーション設定プロパティの現在の値を格納します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> method writes the current value of each settings property to its associated data store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph>メソッドは、その関連付けられたデータ ストアに各設定のプロパティの現在の値を書き込みます。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>For each property, this method calls the <ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt;</ph> method on the associated settings provider.</source>
          <target state="translated">このメソッドを呼び出し、各プロパティ、<ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt;</ph>関連付けられている設定プロバイダーのメソッドです。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>This method differs from the base class implementation in that it raises the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsSaving&gt;</ph> event before the values are written.</source>
          <target state="translated">このメソッドを発生させることで、基本クラスの実装とは異なります。、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsSaving&gt;</ph>イベント値が書き込まれる前にします。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>If the only settings defined are application-scoped settings, <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> will have no effect and return no error if called with the default <ph id="ph2">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>.</source>
          <target state="translated">定義されている唯一の設定は、アプリケーション スコープ設定場合<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph>がない影響を与えるし、既定値で呼び出された場合は、エラー返されない<ph id="ph2">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source><ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> only saves user-scoped settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> ユーザー スコープ設定を保存のみです。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>There is no corresponding Load method because the values of application settings are automatically loaded during wrapper class initialization.</source>
          <target state="translated">アプリケーション設定の値はラッパー クラスの初期化中に自動的に読み込まれるために、対応する Load メソッドはありません。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>In contrast, these values are not automatically saved when an application ends.</source>
          <target state="translated">これに対し、これらの値は自動的に保存されません、アプリケーションが終了するとします。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>Therefore, you must explicitly call the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> method to persist the current values of the application settings.</source>
          <target state="translated">そのため、明示的に呼び出す必要があります、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph>アプリケーション設定の現在の値を保持します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>This is typically performed in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event handler of the primary or containing <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">これは通常の実行、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>プライマリまたはコンテナーのイベント ハンドラー<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> method being called from the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event handler for the primary form.</source>
          <target state="translated">次のコード例は、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph>メソッドから呼び出されると、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>プライマリ フォームのイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>This method also appends an extra period to the settings property that is associated with the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property.</source>
          <target state="translated">このメソッドは、余分な期間をフォームに関連付けられている設定のプロパティも追加<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>The full code example is listed in the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class overview.</source>
          <target state="translated">完全なコード例が記載されて、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>クラスの概要です。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>Occurs before the value of an application settings property is changed.</source>
          <target state="translated">アプリケーション設定プロパティの値が変更される前に発生します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> event occurs before an application setting value property is changed through the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph>によってアプリケーションの設定値プロパティが変更される前に、イベントが発生した、<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>This event is not raised when the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> methods are called.</source>
          <target state="translated">このイベントは、いつ発生するか、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> can be canceled through the <ph id="ph2">&lt;xref:System.Configuration.SettingChangingEventArgs&gt;</ph> event data class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> 取り消すことができます、<ph id="ph2">&lt;xref:System.Configuration.SettingChangingEventArgs&gt;</ph>イベント データ クラスです。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>You typically use the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> event to handle immediate validation of an individual settings property.</source>
          <target state="translated">通常使用する、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph>個々 の設定のプロパティの即時検証を処理するイベントです。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>For more information about validation, see <bpt id="p1">[</bpt>How to: Validate Application Settings<ept id="p1">](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md)</ept>.</source>
          <target state="translated">検証の詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: アプリケーション設定の検証<ept id="p1">](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>There is no corresponding <ph id="ph1">`SettingChanged`</ph> event for this class; instead, see the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph> event.</source>
          <target state="translated">対応がない<ph id="ph1">`SettingChanged`</ph>このイベント クラスは、代わりに、参照してください、<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> event handler for object of type <ph id="ph2">`FormSettings`</ph>, which is a wrapper class derived from <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
          <target state="translated">次のコード例は、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph>型のオブジェクトのイベント ハンドラーを<ph id="ph2">`FormSettings`</ph>、ラッパー クラスから派生した<ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>The handler displays the event information in a textbox named <ph id="ph1">`tbStatus`</ph>.</source>
          <target state="translated">ハンドラーは、という名前のテキスト ボックスに、イベント情報を表示<ph id="ph1">`tbStatus`</ph>です。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>The full code example is listed in the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class overview.</source>
          <target state="translated">完全なコード例が記載されて、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>クラスの概要です。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>Gets or sets the settings key for the application settings group.</source>
          <target state="translated">アプリケーション設定グループの設定キーを取得または設定します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the settings key for the current settings group.</source>
          <target state="translated">現在の設定グループの設定キーを格納している <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> property is provided to enable client code, and in particular the settings provider, to disambiguate between multiple instances of the same application settings class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph>プロパティは、により、クライアント コードを提供し、特に、同じアプリケーション設定クラスの複数のインスタンス間で区別するために、設定プロバイダー。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>Unless the settings wrapper class is designed using the singleton pattern, there can be multiple instances of the same application settings class in a single application.</source>
          <target state="translated">設定のラッパー クラスは、シングルトン パターンを使用するよう設計されていますが、しない限り、1 つのアプリケーションで同じアプリケーション設定クラスの複数のインスタンスがあります。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>The value of <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> should be set according to how the property values are intended to be shared.</source>
          <target state="translated">値<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph>を共有するプロパティの値は、方法に従って設定する必要があります。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>If the settings properties of the wrapper are intended to be shared across all instances of the wrapper in the same application, then <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> should have the same value in all of the instances.</source>
          <target state="translated">ラッパーの設定のプロパティの目的は、同じアプリケーションでラッパーのすべてのインスタンス間で共有する場合<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph>すべてのインスタンスの値が同じである必要があります。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>This is the default behavior of the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class.</source>
          <target state="translated">これは、既定の動作、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>If the settings properties of the wrapper are intended to be per instance, then <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> should have a unique value for every instance.</source>
          <target state="translated">ラッパーの設定のプロパティが、インスタンスごとに想定される場合<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph>インスタンスごとに一意の値を持つ必要があります。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29&gt;</ph> version of the constructor enables you to initialize <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> to a unique string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29&gt;</ph>コンス トラクターのバージョンでは、初期化することができます<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph>固有の文字列にします。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Context%2A&gt;</ph> property provides hints to the settings provider to enable it to persist values in an efficient and orderly manner.</source>
          <target state="translated">これに対し、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Context%2A&gt;</ph>プロパティは、効率的かつ適切な順序に値を永続化をできるように設定プロバイダーにヒントを提供します。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.SettingChangingEventArgs&gt;</ph> class contains a similar <ph id="ph2">&lt;xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A&gt;</ph> property that helps identify the source of the <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.SettingChangingEventArgs&gt;</ph>クラスが含まれていますが、類似<ph id="ph2">&lt;xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A&gt;</ph>プロパティのソースを識別しやすく、<ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
          <source>Occurs after the application settings are retrieved from storage.</source>
          <target state="translated">アプリケーション設定をストレージから取得した後に発生します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded&gt;</ph> event occurs only after the initial <ph id="ph2">`get`</ph> access of the first configuration property used, typically through the <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded&gt;</ph>イベントが、初期の後にのみ発生<ph id="ph2">`get`</ph>使用される通常を介して最初の構成プロパティのアクセス、<ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
          <source>Subsequent accesses use values for the settings property that are cached locally.</source>
          <target state="translated">以降のアクセスは、ローカルにキャッシュされている設定プロパティの値を使用します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> methods will clear all cached values so this event will be raised again upon subsequent property access.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph>後続プロパティへのアクセス時にこのイベントが再び発生させるためにメソッドがキャッシュされているすべての値がクリアされます。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
          <source>Occurs before values are saved to the data store.</source>
          <target state="translated">データ ストアに値が保存される前に発生します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsSaving&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> method before it stores the application settings properties to their associated data store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsSaving&gt;</ph>によってイベントが発生した、<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph>メソッドが関連付けられているデータ ストアにアプリケーション設定のプロパティを格納する前にします。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
          <source>The associated event handler can cancel this event.</source>
          <target state="translated">関連するイベント ハンドラーは、このイベントを取り消すことができます。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsSaving&gt;</ph> event handler for object of type <ph id="ph2">`FormSettings`</ph>, which is a wrapper class derived from <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
          <target state="translated">次のコード例は、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsSaving&gt;</ph>型のオブジェクトのイベント ハンドラーを<ph id="ph2">`FormSettings`</ph>、ラッパー クラスから派生した<ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
          <source>The handler queries the user to save the current application settings property values.</source>
          <target state="translated">ハンドラーは、現在のアプリケーション設定のプロパティ値を保存するユーザーを照会します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
          <source>The full code example is listed in the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class overview.</source>
          <target state="translated">完全なコード例が記載されて、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>クラスの概要です。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>Updates application settings to reflect a more recent installation of the application.</source>
          <target state="translated">アプリケーション設定を更新して、アプリケーションの最新のインストールを反映します。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A&gt;</ph> method performs two actions to assure smooth transition to a new version of an application:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A&gt;</ph>メソッドは、アプリケーションの新しいバージョンにスムーズに移行を確保するための 2 つのアクションを実行します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>It notifies all of the corresponding settings providers of the existence of the upgraded application through a call to their <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType&gt;</ph> method, assuming they have implemented the <ph id="ph2">&lt;xref:System.Configuration.IApplicationSettingsProvider&gt;</ph> interface.</source>
          <target state="translated">すべての対応する設定プロバイダーを呼び出すことによってアップグレードしたアプリケーションの存在の通知、<ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType&gt;</ph>メソッドを実装するいると仮定した場合、<ph id="ph2">&lt;xref:System.Configuration.IApplicationSettingsProvider&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>This action is not performed if the settings wrapper class is marked with <ph id="ph1">&lt;xref:System.Configuration.NoSettingsVersionUpgradeAttribute&gt;</ph>.</source>
          <target state="translated">設定のラッパー クラスが付いている場合、このアクションは実行されません<ph id="ph1">&lt;xref:System.Configuration.NoSettingsVersionUpgradeAttribute&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>It reloads the values for all of the application settings.</source>
          <target state="translated">すべてのアプリケーションの設定の値が再読み込みします。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>You can override the default behavior of <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A&gt;</ph> to implement custom upgrading or merging behavior.</source>
          <target state="translated">既定の動作をオーバーライドする<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A&gt;</ph>カスタム アップグレードまたは動作のマージを実装します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>Use the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A&gt;</ph> method to retrieve individual values for a setting for the previous version of the application.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A&gt;</ph>以前のバージョンのアプリケーション設定の個々 の値を取得します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>Examples of custom upgrade behavior include:</source>
          <target state="translated">カスタムのアップグレード動作の例については、次のとおりです。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>Using new policy defaults that override one or more of the previous user-specified values or previous defaults.</source>
          <target state="translated">1 つ以上の以前のユーザーが指定した値をオーバーライドする新規のポリシーの既定値または以前の既定値を使用します。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>Special translation of old values to be compatible with newer ranges, a different settings property group, and so on.</source>
          <target state="translated">新しい範囲、さまざまな設定のプロパティ グループ、およびなどに合うように古い値に対して特殊な変換です。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>The configuration file could not be parsed.</source>
          <target state="translated">構成ファイルを解析できませんでした。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>