<Type Name="ApplicationSettingsBase" FullName="System.Configuration.ApplicationSettingsBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe24ac65166fc03dc1527e9f59941c74903af097" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39824159" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ApplicationSettingsBase extends System.Configuration.SettingsBase implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ApplicationSettingsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ApplicationSettingsBase&#xA;Inherits SettingsBase&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationSettingsBase abstract : System::Configuration::SettingsBase, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ApplicationSettingsBase = class&#xA;    inherit SettingsBase&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="34f99-101">Windows フォーム アプリケーションでアプリケーション設定機能を実装する、具象ラッパー クラスを派生する基本クラスとして機能します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="34f99-101">Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-102"><xref:System.Configuration.ApplicationSettingsBase> 次の機能を追加します、<xref:System.Configuration.SettingsBase>クラスは、Web ベースのアプリケーションによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-102"><xref:System.Configuration.ApplicationSettingsBase> adds the following functionality to the <xref:System.Configuration.SettingsBase> class, which is used by Web-based applications:</span></span>  
  
-   <span data-ttu-id="34f99-103">派生、設定のラッパー クラスの属性を検出する機能。</span><span class="sxs-lookup"><span data-stu-id="34f99-103">The ability to detect attributes on a derived, settings wrapper class.</span></span> <span data-ttu-id="34f99-104"><xref:System.Configuration.ApplicationSettingsBase> 後述するように、ラッパー クラスのプロパティに使用される宣言型モデルをサポートします。</span><span class="sxs-lookup"><span data-stu-id="34f99-104"><xref:System.Configuration.ApplicationSettingsBase> supports the declarative model used for wrapper class properties, as described later.</span></span>  
  
-   <span data-ttu-id="34f99-105">高度な<xref:System.Configuration.ApplicationSettingsBase.Save%2A>と<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="34f99-105">Higher-level <xref:System.Configuration.ApplicationSettingsBase.Save%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="34f99-106">個々 の設定が正しいことを確実に処理できる追加の検証イベント。</span><span class="sxs-lookup"><span data-stu-id="34f99-106">Additional validation events that you can handle to ensure the correctness of individual settings.</span></span>  
  
 <span data-ttu-id="34f99-107">アプリケーション設定アーキテクチャでの設定のプロパティのグループにアクセスする必要があるから具象ラッパー クラスを派生<xref:System.Configuration.ApplicationSettingsBase>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-107">In the application settings architecture, to access a group of settings properties you need to derive a concrete wrapper class from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="34f99-108">ラッパー クラスをカスタマイズ<xref:System.Configuration.ApplicationSettingsBase>次のようにします。</span><span class="sxs-lookup"><span data-stu-id="34f99-108">The wrapper class customizes <xref:System.Configuration.ApplicationSettingsBase> in the following ways:</span></span>  
  
-   <span data-ttu-id="34f99-109">すべての設定プロパティをアクセスするには、対応する厳密に型指定されたパブリック プロパティは、ラッパー クラスに追加されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-109">For every settings property to be accessed, a corresponding strongly typed public property is added to the wrapper class.</span></span> <span data-ttu-id="34f99-110">このプロパティは`get`と`set`アクセサーのみの読み取り/書き込みのアプリケーション設定を`get`設定の読み取り専用のアクセサー。</span><span class="sxs-lookup"><span data-stu-id="34f99-110">This property has `get` and `set` accessors for read/write application settings, but only a `get` accessor for read-only settings.</span></span>  
  
-   <span data-ttu-id="34f99-111">設定がローミングの既定値をサポートする必要があるかどうか、設定のスコープ (アプリケーションまたはユーザー) など、設定プロパティの特性を示すために、ラッパー クラスのパブリック プロパティに適切な属性を適用する必要があります、使用する設定プロバイダーを設定します。</span><span class="sxs-lookup"><span data-stu-id="34f99-111">Appropriated attributes must be applied to the wrapper class's public properties to indicate characteristics of the settings property, such as the setting's scope (application or user), whether the setting should support roaming, the default value for the setting, the settings provider to be used, and so on.</span></span> <span data-ttu-id="34f99-112">各プロパティは、いずれかを使用して、そのスコープを指定する必要は<xref:System.Configuration.ApplicationScopedSettingAttribute>または<xref:System.Configuration.UserScopedSettingAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-112">Each property is required to specify its scope, using either <xref:System.Configuration.ApplicationScopedSettingAttribute> or <xref:System.Configuration.UserScopedSettingAttribute>.</span></span> <span data-ttu-id="34f99-113">アプリケーション スコープの設定は読み取り専用場合、既定<xref:System.Configuration.LocalFileSettingsProvider>使用されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-113">Application-scoped settings are read-only if the default <xref:System.Configuration.LocalFileSettingsProvider> is used.</span></span>  
  
 <span data-ttu-id="34f99-114"><xref:System.Configuration.ApplicationSettingsBase>クラスでは、リフレクションを使用して、実行時にこれらの属性を検出します。</span><span class="sxs-lookup"><span data-stu-id="34f99-114">The <xref:System.Configuration.ApplicationSettingsBase> class uses reflection to detect these attributes at run time.</span></span> <span data-ttu-id="34f99-115">この情報の大部分は、ストレージと永続化の形式を担当する設定プロバイダー層に渡されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-115">Most of this information gets passed to the settings provider layer, which is responsible for storage, persistence format, and so on.</span></span>  
  
 <span data-ttu-id="34f99-116">アプリケーションが複数の設定ラッパー クラス、各クラスが持っている場合を定義、*設定グループ*します。</span><span class="sxs-lookup"><span data-stu-id="34f99-116">When an application has multiple settings wrapper classes, each class defines a *settings group*.</span></span> <span data-ttu-id="34f99-117">各グループには、次の特徴があります。</span><span class="sxs-lookup"><span data-stu-id="34f99-117">Each group has the following characteristics:</span></span>  
  
-   <span data-ttu-id="34f99-118">グループは、任意の数またはプロパティの設定の種類に含めることができます。</span><span class="sxs-lookup"><span data-stu-id="34f99-118">A group can contain any number or type of property settings.</span></span>  
  
-   <span data-ttu-id="34f99-119">使用して、ラッパー クラスを修飾して、グループ名が明示的に設定されていない場合、<xref:System.Configuration.SettingsGroupNameAttribute>名前が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-119">If the group name is not explicitly set by the decorating the wrapper class with a <xref:System.Configuration.SettingsGroupNameAttribute>, then a name is automatically generated.</span></span>  
  
 <span data-ttu-id="34f99-120">既定では、すべてのクライアント ベースのアプリケーションを使用して、<xref:System.Configuration.LocalFileSettingsProvider>ストレージを提供します。</span><span class="sxs-lookup"><span data-stu-id="34f99-120">By default, all client-based applications use the <xref:System.Configuration.LocalFileSettingsProvider> to provide storage.</span></span> <span data-ttu-id="34f99-121">別の設定プロバイダーが必要なかどうかは、対応するラッパー クラスまたはプロパティを修飾する必要があります<xref:System.Configuration.SettingsProviderAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-121">If an alternate settings provider is desired, then the wrapper class or property must be decorated with a corresponding <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="34f99-122">詳細については、アプリケーションの設定を使用して、次を参照してください。[アプリケーション設定を Windows フォーム](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)します。</span><span class="sxs-lookup"><span data-stu-id="34f99-122">For more information about using application settings, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34f99-123">次のコード例は、メイン フォームの次の属性を保持するアプリケーションの設定の使用を示します: の場所、サイズ、背景色、およびタイトル バーのテキスト。</span><span class="sxs-lookup"><span data-stu-id="34f99-123">The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text.</span></span> <span data-ttu-id="34f99-124">これらの属性のすべてが 1 つのアプリケーション設定のプロパティとして永続化、`FormSettings`という名前のクラス`FormLocation`、 `FormSize`、`FormBackColor`と`FormText`、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="34f99-124">All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively.</span></span> <span data-ttu-id="34f99-125">すべての`FormText`と`Size`データが、関連付けられているフォームのプロパティにバインドされているし、既定の設定を使用して適用される値があるは<xref:System.Configuration.DefaultSettingValueAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-125">All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span>  
  
 <span data-ttu-id="34f99-126">フォームには、次の名前および関数を持つ 4 つの子コントロールが含まれています。</span><span class="sxs-lookup"><span data-stu-id="34f99-126">The form contains four child controls that have the following names and functions:</span></span>  
  
-   <span data-ttu-id="34f99-127">という名前のボタン`btnBackColor`表示に使用される、**色**コモン ダイアログ ボックス。</span><span class="sxs-lookup"><span data-stu-id="34f99-127">A button named `btnBackColor` used to display the **Color** common dialog box.</span></span>  
  
-   <span data-ttu-id="34f99-128">という名前のボタン`btnReload`するために使用<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>アプリケーションの設定。</span><span class="sxs-lookup"><span data-stu-id="34f99-128">A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="34f99-129">という名前のボタン`btnReset`するために使用<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>アプリケーションの設定。</span><span class="sxs-lookup"><span data-stu-id="34f99-129">A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="34f99-130">という名前のテキスト ボックス`tbStatus`プログラムに関する状態情報を表示するために使用します。</span><span class="sxs-lookup"><span data-stu-id="34f99-130">A textbox named `tbStatus` used to display status information about the program.</span></span>  
  
 <span data-ttu-id="34f99-131">いることを確認後、アプリケーションを実行するたびに、追加のピリオド文字は、フォームのタイトルのテキストに追加されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-131">Notice that after every execution of the application, an additional period character is appended to the title text of the form.</span></span>  
  
 <span data-ttu-id="34f99-132">このコード例は、フォーム、<xref:System.Windows.Forms.ColorDialog>という名前のクラス`colorDialog1`と<xref:System.Windows.Forms.StatusStrip>コントロールを<xref:System.Windows.Forms.ToolStripStatusLabel>という名前`tbStatus`します。</span><span class="sxs-lookup"><span data-stu-id="34f99-132">This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`.</span></span> <span data-ttu-id="34f99-133">さらに、3 つ必要<xref:System.Windows.Forms.Button>という名前のオブジェクト`btnReload`、 `btnReset`、および`btnBackColor`します。</span><span class="sxs-lookup"><span data-stu-id="34f99-133">Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.</span></span>  
  
 [!code-cpp[AppSettingsSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#1)]
 [!code-csharp[AppSettingsSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#1)]
 [!code-vb[AppSettingsSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.SettingsGroupNameAttribute" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="34f99-134">
            <see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-134">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="34f99-135">
            <see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを既定の状態に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-135">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class to its default state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-136">既定のコンス トラクターがから派生した現在の設定ラッパー クラスに関連付けられているコンポーネントがないことを前提と対応するよう設計された<xref:System.Configuration.ApplicationSettingsBase>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-136">The default constructor was designed to work under the assumption that there is no component associated with the current settings wrapper class, which derives from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 <span data-ttu-id="34f99-137">ラッパー クラスのインスタンスが作成されると、継承されたコードは、次の操作を自動的に実行します。</span><span class="sxs-lookup"><span data-stu-id="34f99-137">When an instance of a wrapper class is created, inherited code will automatically perform the following actions:</span></span>  
  
1.  <span data-ttu-id="34f99-138">クラスに反映されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-138">Reflect over the class.</span></span>  
  
2.  <span data-ttu-id="34f99-139">ラッパーの各プロパティのいずれかでマークされている`[UserScopedSettingAttribute]`または`[ApplicationScopedSettingAttribute]`、対応する<xref:System.Configuration.SettingsProperty>が作成されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-139">For each property on the wrapper marked with either `[UserScopedSettingAttribute]` or `[ApplicationScopedSettingAttribute]`, a corresponding <xref:System.Configuration.SettingsProperty> is created.</span></span>  
  
3.  <span data-ttu-id="34f99-140">各<xref:System.Configuration.SettingsProperty>がいくつかのオプションで、既定値の設定プロバイダーなどのラッパーのプロパティに存在するその他の属性に基づいて、プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="34f99-140">Each <xref:System.Configuration.SettingsProperty> has some of its properties set based on other attributes that are optionally present on the wrapper's properties, such as the default value or the settings provider.</span></span>  
  
4.  <span data-ttu-id="34f99-141">その他のすべての属性は、属性のバッグに簡単に言えば、<xref:System.Configuration.SettingsProperty.Attributes%2A>のプロパティ、<xref:System.Configuration.SettingsProperty>クラス。</span><span class="sxs-lookup"><span data-stu-id="34f99-141">All other attributes are simply put into an attribute bag, the <xref:System.Configuration.SettingsProperty.Attributes%2A> property of the <xref:System.Configuration.SettingsProperty> class.</span></span>  
  
5.  <span data-ttu-id="34f99-142">すべて<xref:System.Configuration.SettingsProperty>オブジェクトに追加されます、<xref:System.Configuration.SettingsPropertyCollection>によって表される、<xref:System.Configuration.ApplicationSettingsBase.Properties%2A>のプロパティ、<xref:System.Configuration.ApplicationSettingsBase>クラス。</span><span class="sxs-lookup"><span data-stu-id="34f99-142">All <xref:System.Configuration.SettingsProperty> objects are added to a <xref:System.Configuration.SettingsPropertyCollection> represented by the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span> <span data-ttu-id="34f99-143">このコレクションに渡されます、<xref:System.Configuration.SettingsBase.Initialize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="34f99-143">This collection is then passed to the <xref:System.Configuration.SettingsBase.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="34f99-144">3 は、前述の手順によって、暗黙的に指定<xref:System.Configuration.ApplicationSettingsBase>次具体的には、いくつかのプロパティ属性を持つネイティブの動作: <xref:System.Configuration.SettingsProviderAttribute>、 <xref:System.Configuration.DefaultSettingValueAttribute>、および<xref:System.Configuration.SettingsSerializeAsAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-144">As implied by step 3 mentioned previously, <xref:System.Configuration.ApplicationSettingsBase> natively works with several property attributes, specifically the following: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, and <xref:System.Configuration.SettingsSerializeAsAttribute>.</span></span> <span data-ttu-id="34f99-145">他のすべての設定の属性は、適切な基になるプロバイダーに渡さだけです。</span><span class="sxs-lookup"><span data-stu-id="34f99-145">All other settings attributes are simply passed through to the appropriate underlying provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="T:System.Configuration.SettingsPropertyCollection" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="34f99-146">アプリケーション設定オブジェクトの所有者として機能するコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-146">The component that will act as the owner of the application settings object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34f99-147">指定された所有者コンポーネントを使用して、<see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-147">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-148">このコンス トラクターはまったく同じですが、<xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>コンス トラクターの呼び出しを使用します。</span><span class="sxs-lookup"><span data-stu-id="34f99-148">This constructor is exactly equivalent to the <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> constructor using the invocation:</span></span>  
  
 `ApplicationSettingsBase(owner, String.Empty)`  
  
 <span data-ttu-id="34f99-149">ラッパー クラスのインスタンス化時にリフレクションを使用する方法については、既定値を参照してください。<xref:System.Configuration.ApplicationSettingsBase.%23ctor>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="34f99-149">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="34f99-150">
            <paramref name="owner" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-150">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase settingsKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="settingsKey">
          <span data-ttu-id="34f99-151">ラッパー クラスの個々のインスタンスを一意に識別する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-151">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34f99-152">指定された設定キーを使用して、<see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-152">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied settings key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-153">このコンス トラクターの初期化、<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>プロパティの値を`settingsKey`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="34f99-153">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="34f99-154">このプロパティは、同じアプリケーション ドメイン内の設定のラッパー クラスの異なるインスタンスの明確化に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="34f99-154">This property is useful in disambiguating different instances of the settings wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="34f99-155">ラッパー クラスのインスタンス化時にリフレクションを使用する方法については、既定値を参照してください。<xref:System.Configuration.ApplicationSettingsBase.%23ctor>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="34f99-155">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner, string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent, settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner, System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent * string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase (owner, settingsKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="34f99-156">アプリケーション設定オブジェクトの所有者として機能するコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-156">The component that will act as the owner of the application settings object.</span>
          </span>
        </param>
        <param name="settingsKey">
          <span data-ttu-id="34f99-157">ラッパー クラスの個々のインスタンスを一意に識別する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-157">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34f99-158">指定された所有者コンポーネントと設定キーを使用して、<see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-158">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component and settings key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-159"><xref:System.ComponentModel.IComponent>で指定されたオブジェクト、`owner`パラメーターは、このアプリケーション設定クラスの現在のインスタンスの所有者として機能します。</span><span class="sxs-lookup"><span data-stu-id="34f99-159">The <xref:System.ComponentModel.IComponent> object specified by the `owner` parameter acts as the owner of the current instance of this applications settings class.</span></span> <span data-ttu-id="34f99-160">派生したラッパー クラス設定の初期化中に<xref:System.Configuration.ApplicationSettingsBase>、サイトの所有者の照会、<xref:System.Configuration.ISettingsProviderService>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-160">During the initialization of the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>, the owner's site is queried for a <xref:System.Configuration.ISettingsProviderService>.</span></span> <span data-ttu-id="34f99-161">1 つが存在する場合にすべてのプロパティで指定したとおり、ラッパー クラスのネイティブ設定プロバイダー方が優先的使用は、<xref:System.Configuration.SettingsProviderAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-161">If one exists, it is used in preference to native settings provider for all the properties of the wrapper class, as specified by the <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="34f99-162">このコンス トラクターの初期化、<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>プロパティの値を`settingsKey`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="34f99-162">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="34f99-163">このプロパティは、同じアプリケーション ドメイン内のラッパー クラスの異なるインスタンスの明確化に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="34f99-163">This property is useful in disambiguating different instances of the wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="34f99-164">ラッパー クラスのインスタンス化時にリフレクションを使用する方法については、既定値を参照してください。<xref:System.Configuration.ApplicationSettingsBase.%23ctor>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="34f99-164">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="34f99-165">
            <paramref name="owner" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-165">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Context" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Context As SettingsContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsContext ^ Context { System::Configuration::SettingsContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Configuration.SettingsContext" Usage="System.Configuration.ApplicationSettingsBase.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34f99-166">設定グループに関連付けられているアプリケーション設定のコンテキストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-166">Gets the application settings context associated with the settings group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34f99-167">設定グループに関連付けられている <see cref="T:System.Configuration.SettingsContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-167">A <see cref="T:System.Configuration.SettingsContext" /> associated with the settings group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-168">各設定のラッパー クラスから派生した<xref:System.Configuration.ApplicationSettingsBase>に関連付けられているコンテキストがあります。</span><span class="sxs-lookup"><span data-stu-id="34f99-168">Each settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase> has a context associated with it.</span></span> <span data-ttu-id="34f99-169">コンテキストは、プロパティの使用方法を識別するために、各プロパティの設定プロバイダーに渡されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-169">The context is passed to the settings provider for each property to identify how the property is used.</span></span> <span data-ttu-id="34f99-170">そのため、コンテキストは関連付けられているアプリケーションの設定値を保持する最善の方法を決定する設定プロバイダーのためのヒントとして機能します。</span><span class="sxs-lookup"><span data-stu-id="34f99-170">Context therefore acts as a hint to help the settings provider determine how best to persist the associated application settings values.</span></span>  
  
 <span data-ttu-id="34f99-171">これに対し、<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>プロパティを同じのラッパー クラスの複数のインスタンスを明確にする設定プロバイダーを使用できます。</span><span class="sxs-lookup"><span data-stu-id="34f99-171">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property enables the settings provider to disambiguate multiple instances of the same wrapper class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="T:System.Configuration.SettingsContext" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.ApplicationSettingsGroup" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public object GetPreviousVersion (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPreviousVersion(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPreviousVersion(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousVersion : string -&gt; obj" Usage="applicationSettingsBase.GetPreviousVersion propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="34f99-172">値が返される設定プロパティの名前を含む <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-172">A <see cref="T:System.String" /> containing the name of the settings property whose value is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34f99-173">同じアプリケーションの以前のバージョンの、名前付き設定プロパティの値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-173">Returns the value of the named settings property for the previous version of the same application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34f99-174">設定プロパティが見つかった場合は、指定した <see cref="T:System.Object" /> の値を含む <see cref="T:System.Configuration.SettingsProperty" />、それ以外の場合は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-174">An <see cref="T:System.Object" /> containing the value of the specified <see cref="T:System.Configuration.SettingsProperty" /> if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-175"><xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>と共にメソッドが使用される多くの場合、<xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>メソッドの新しいバージョンのアプリケーションのインストール中にアプリケーションの設定を移行する場合。</span><span class="sxs-lookup"><span data-stu-id="34f99-175">The <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method when migrating application settings during the installation of a new version of an application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
          <span data-ttu-id="34f99-176">プロパティが存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-176">The property does not exist.</span>
          </span>
          <span data-ttu-id="34f99-177">プロパティ カウントが 0 か、データ ストアでプロパティが見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-177">The property count is zero or the property cannot be found in the data store.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Configuration.ApplicationSettingsBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="34f99-178">アクセスするプロパティの名前を含む <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-178">A <see cref="T:System.String" /> containing the name of the property to access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34f99-179">指定したアプリケーション設定プロパティの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-179">Gets or sets the value of the specified application settings property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34f99-180">指定した設定プロパティが見つかった場合は、そのプロパティの値。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-180">If found, the value of the named settings property; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-181"><xref:System.Configuration.ApplicationSettingsBase.Item%2A>プロパティ、インデクサーとも呼ばれますが、設定から派生したラッパー クラスで日常的に使用<xref:System.Configuration.ApplicationSettingsBase>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-181">The <xref:System.Configuration.ApplicationSettingsBase.Item%2A> property, also known as the indexer, is routinely used in the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="34f99-182"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> ラッパー クラスのパブリック プロパティに対応する設定のプロパティにバインドします。</span><span class="sxs-lookup"><span data-stu-id="34f99-182"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> binds the public property of the wrapper class to the corresponding settings property.</span></span>  
  
 <span data-ttu-id="34f99-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> 実行中の操作に応じていくつかのイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="34f99-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> raises several events depending on the operation being performed:</span></span>  
  
-   <span data-ttu-id="34f99-184">プロパティを取得すると、最初に、<xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="34f99-184">The first time a property is retrieved, the <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event is raised.</span></span>  
  
-   <span data-ttu-id="34f99-185">プロパティが設定されている場合、<xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="34f99-185">When a property is set, the <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> event is raised.</span></span> <span data-ttu-id="34f99-186">ハンドラーが、イベントをキャンセルしていないかどうかは、プロパティ値を設定し、<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="34f99-186">If the handler does not cancel the event, then the property value is set and the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
          <span data-ttu-id="34f99-187">現在のラッパーに関連付けられたプロパティが存在しないか、指定したプロパティが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-187">There are no properties associated with the current wrapper or the specified property could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">
          <span data-ttu-id="34f99-188">読み取り専用プロパティを設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-188">An attempt was made to set a read-only property.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">
          <span data-ttu-id="34f99-189">指定された値は、設定操作時の設定プロパティと型の互換性がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-189">The value supplied is of a type incompatible with the settings property, during a set operation.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="34f99-190">構成ファイルを解析できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-190">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="P:System.Configuration.SettingsProperty.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(object sender, class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (sender As Object, e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Object ^ sender, System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnPropertyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="34f99-191">イベントのソース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-191">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="34f99-192">イベント データを格納している <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-192">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34f99-193">
            <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-193">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-194">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-194">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="34f99-195">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="34f99-195">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="34f99-196"><xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="34f99-196">The <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="34f99-197">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="34f99-197">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="34f99-198">
            <para>オーバーライドするときに<see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-198">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingChanging(object sender, class System.Configuration.SettingChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingChanging (sender As Object, e As SettingChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingChanging(System::Object ^ sender, System::Configuration::SettingChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit&#xA;override this.OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingChanging (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="34f99-199">イベントのソース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-199">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="34f99-200">イベント データを格納している <see cref="T:System.Configuration.SettingChangingEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-200">A <see cref="T:System.Configuration.SettingChangingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34f99-201">
            <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-201">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-202">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-202">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="34f99-203">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="34f99-203">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="34f99-204"><xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="34f99-204">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="34f99-205">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="34f99-205">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="34f99-206">
            <para>オーバーライドするときに<see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-206">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsLoaded(object sender, class System.Configuration.SettingsLoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsLoaded (sender As Object, e As SettingsLoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsLoaded(System::Object ^ sender, System::Configuration::SettingsLoadedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit&#xA;override this.OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsLoaded (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="34f99-207">イベントのソース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-207">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="34f99-208">イベント データを格納している <see cref="T:System.Configuration.SettingsLoadedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-208">A <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34f99-209">
            <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-209">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-210">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-210">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="34f99-211">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="34f99-211">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="34f99-212"><xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="34f99-212">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="34f99-213">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="34f99-213">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="34f99-214">
            <para>オーバーライドするときに<see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-214">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsSaving">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsSaving(object sender, class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsSaving (sender As Object, e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsSaving(System::Object ^ sender, System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsSaving (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="34f99-215">イベントのソース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-215">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="34f99-216">イベント データを格納している <see cref="T:System.ComponentModel.CancelEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-216">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34f99-217">
            <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-217">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-218">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-218">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="34f99-219">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="34f99-219">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="34f99-220"><xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="34f99-220">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="34f99-221">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="34f99-221">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="34f99-222">
            <para>オーバーライドするときに<see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-222">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34f99-223">ラッパーの設定プロパティのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-223">Gets the collection of settings properties in the wrapper.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34f99-224">現在のラッパーで使用するすべての <see cref="T:System.Configuration.SettingsPropertyCollection" /> オブジェクトを格納している <see cref="T:System.Configuration.SettingsProperty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-224">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing all the <see cref="T:System.Configuration.SettingsProperty" /> objects used in the current wrapper.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-225">`get`のアクセサー、<xref:System.Configuration.ApplicationSettingsBase.Properties%2A>から派生する設定のラッパー クラスのメタデータに対するプロパティに反映されます<xref:System.Configuration.ApplicationSettingsBase>、使用可能なアプリケーション設定プロパティのセットを動的に決定します。</span><span class="sxs-lookup"><span data-stu-id="34f99-225">The `get` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property reflects over the metadata of the settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, to dynamically determine the set of available application settings properties.</span></span>  
  
 <span data-ttu-id="34f99-226"><xref:System.Configuration.ApplicationSettingsBase>のみの状態、およびシリアル化の基本設定を読み取るクラスはアプリケーションの設定、名前、プロパティの種類、プロバイダーの設定、既定値などの特定の特性をネイティブに認識します。</span><span class="sxs-lookup"><span data-stu-id="34f99-226">The <xref:System.Configuration.ApplicationSettingsBase> class natively recognizes certain characteristics of an application setting, such as its name, property type, settings provider, default value, read only status, and a serialization preference.</span></span> <span data-ttu-id="34f99-227">これらの特性がプロパティとしてミラー化された、<xref:System.Configuration.SettingsProperty>クラス。</span><span class="sxs-lookup"><span data-stu-id="34f99-227">These characteristics are mirrored as properties in the <xref:System.Configuration.SettingsProperty> class.</span></span> <span data-ttu-id="34f99-228">設定プロパティの他のすべての属性は、関連する設定プロバイダーに渡されるを通じてだけです。</span><span class="sxs-lookup"><span data-stu-id="34f99-228">All other attributes of the settings property are just passed through to its associated settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="34f99-229">関連付けられた設定プロバイダーが見つからなかったか、設定プロバイダーをインスタンス化できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-229">The associated settings provider could not be found or its instantiation failed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="T:System.Configuration.SettingsProperty" />
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34f99-230">アプリケーション設定プロパティの値が変更された後に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-230">Occurs after the value of an application settings property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-231"><xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>を通じて設定プロパティが変更されたときにイベントが発生した、`set`のアクセサー、<xref:System.Configuration.ApplicationSettingsBase.Item%2A>メソッド、またはへの呼び出しが行われたときに、復元されたすべてのプロパティに対して、<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>または<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="34f99-231">The <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised when a settings property is changed through the `set` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method, or for every property that is restored when a call is made to the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="34f99-232">対応がない`PropertyChanging`このイベント クラスは、代わりに、参照してください、<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>イベント。</span><span class="sxs-lookup"><span data-stu-id="34f99-232">There is no corresponding `PropertyChanging` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
        <altmember cref="T:System.ComponentModel.PropertyChangedEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="PropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyValueCollection PropertyValues" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyValues As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyValueCollection ^ PropertyValues { System::Configuration::SettingsPropertyValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyValues : System.Configuration.SettingsPropertyValueCollection" Usage="System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34f99-233">プロパティ値のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-233">Gets a collection of property values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34f99-234">プロパティ値の <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-234">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> of property values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Providers As SettingsProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsProviderCollection ^ Providers { System::Configuration::SettingsProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.SettingsProviderCollection" Usage="System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34f99-235">ラッパーが使用するアプリケーション設定プロバイダーのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-235">Gets the collection of application settings providers used by the wrapper.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34f99-236">現在の設定ラッパーの設定プロパティが使用する、すべての <see cref="T:System.Configuration.SettingsProviderCollection" /> オブジェクトを格納している <see cref="T:System.Configuration.SettingsProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-236">A <see cref="T:System.Configuration.SettingsProviderCollection" /> containing all the <see cref="T:System.Configuration.SettingsProvider" /> objects used by the settings properties of the current settings wrapper.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-237"><xref:System.Configuration.SettingsProviderAttribute>どのような設定プロバイダーはラッパー クラスを設定または個々 の設定プロパティで使用を決定します。</span><span class="sxs-lookup"><span data-stu-id="34f99-237">The <xref:System.Configuration.SettingsProviderAttribute> determines what setting provider is used by a settings wrapper class or an individual setting property.</span></span> <span data-ttu-id="34f99-238">クライアント アプリケーションが使用して、この属性が指定されていない場合、<xref:System.Configuration.LocalFileSettingsProvider>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-238">If this attribute is not specified, a client application will use the <xref:System.Configuration.LocalFileSettingsProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reload();" />
      <MemberSignature Language="F#" Value="member this.Reload : unit -&gt; unit" Usage="applicationSettingsBase.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="34f99-239">永続ストレージからアプリケーション設定プロパティ値を更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-239">Refreshes the application settings property values from persistent storage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-240"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A>メソッドは、その後にアクセスする、永続ストレージからこれらの値に再読み込みするを原因と、現在キャッシュされているプロパティの値をクリアします。</span><span class="sxs-lookup"><span data-stu-id="34f99-240">The <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method clears the currently cached property values, causing a reload of these values from persistent storage when they are subsequently accessed.</span></span> <span data-ttu-id="34f99-241">このメソッドは、次の操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="34f99-241">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="34f99-242">によって表されるコレクションをクリアして、現在キャッシュされているプロパティをクリア、<xref:System.Configuration.SettingsBase.PropertyValues%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="34f99-242">It clears the currently cached properties by clearing the collection represented by the <xref:System.Configuration.SettingsBase.PropertyValues%2A> property.</span></span>  
  
-   <span data-ttu-id="34f99-243">生成、<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>イベントのすべてのメンバーを<xref:System.Configuration.ApplicationSettingsBase.Properties%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="34f99-243">It raises the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event for every member of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> collection.</span></span>  
  
 <span data-ttu-id="34f99-244"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 対照的<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>ことで、前者では、一方、後者は、保存されている既定値を読み込み、保存されているアプリケーション設定の値の最後のセットが読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="34f99-244"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34f99-245">次のコード例は、<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>の本体で呼び出されるメソッド、<xref:System.Windows.Forms.Control.Click>という名前のボタンのイベント ハンドラー`btnReload`します。</span><span class="sxs-lookup"><span data-stu-id="34f99-245">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`.</span></span> <span data-ttu-id="34f99-246">この呼び出しの結果として、対応するプロパティに現在格納されているアプリケーションの設定の値が再読み込みされます。</span><span class="sxs-lookup"><span data-stu-id="34f99-246">As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="34f99-247">完全なコード例が記載されて、<xref:System.Configuration.ApplicationSettingsBase>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="34f99-247">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#6)]
 [!code-csharp[AppSettingsSample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#6)]
 [!code-vb[AppSettingsSample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="M:System.Configuration.SettingsPropertyValueCollection.Clear" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="applicationSettingsBase.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="34f99-248">保持されているアプリケーション設定値を対応する既定のプロパティに復元します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-248">Restores the persisted application settings values to their corresponding default properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-249"><xref:System.Configuration.ApplicationSettingsBase.Reset%2A>メソッドは、各アプリケーションの設定の永続化された現在の値を復元することによって、ユーザー スコープ設定のプロパティを上書きします。</span><span class="sxs-lookup"><span data-stu-id="34f99-249">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method overwrites the user-scoped settings properties by restoring the currently persisted value of each application settings.</span></span> <span data-ttu-id="34f99-250">このメソッドは、次の操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="34f99-250">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="34f99-251">呼び出す、<xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType>この省略可能なメソッドをサポートするすべての設定プロバイダーのメソッド。</span><span class="sxs-lookup"><span data-stu-id="34f99-251">It calls the <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> method on every settings provider that supports this optional method.</span></span>  
  
-   <span data-ttu-id="34f99-252">呼び出す、<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>設定プロパティの値の更新を強制するメソッド。</span><span class="sxs-lookup"><span data-stu-id="34f99-252">It calls the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method to force a refresh of the settings property values.</span></span>  
  
 <span data-ttu-id="34f99-253"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 対照的<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>ことで、前者では、一方、後者は、保存されている既定値を読み込み、保存されているアプリケーション設定の値の最後のセットが読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="34f99-253"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34f99-254">次のコード例は、<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>の本体で呼び出されるメソッド、<xref:System.Windows.Forms.Control.Click>という名前のボタンのイベント ハンドラー`btnReset`します。</span><span class="sxs-lookup"><span data-stu-id="34f99-254">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`.</span></span> <span data-ttu-id="34f99-255">この呼び出しの結果としてのアプリケーション設定ストアドの既定値は、対応するプロパティに再読み込みされます。</span><span class="sxs-lookup"><span data-stu-id="34f99-255">As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="34f99-256">完全なコード例が記載されて、<xref:System.Configuration.ApplicationSettingsBase>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="34f99-256">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#5)]
 [!code-csharp[AppSettingsSample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#5)]
 [!code-vb[AppSettingsSample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="34f99-257">構成ファイルを解析できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-257">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="override this.Save : unit -&gt; unit" Usage="applicationSettingsBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="34f99-258">アプリケーション設定プロパティの現在の値を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-258">Stores the current values of the application settings properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-259"><xref:System.Configuration.ApplicationSettingsBase.Save%2A>メソッドが関連付けられているデータ ストアへの各設定プロパティの現在の値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="34f99-259">The <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method writes the current value of each settings property to its associated data store.</span></span> <span data-ttu-id="34f99-260">このメソッドを呼び出し、各プロパティの<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>メソッドに関連付けられた設定プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="34f99-260">For each property, this method calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method on the associated settings provider.</span></span>  
  
 <span data-ttu-id="34f99-261">このメソッドは、発生させることで、基本クラスの実装とは異なります。、<xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>イベントの値が書き込まれる前にします。</span><span class="sxs-lookup"><span data-stu-id="34f99-261">This method differs from the base class implementation in that it raises the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event before the values are written.</span></span>  
  
 <span data-ttu-id="34f99-262">アプリケーション スコープの設定では、設定のみが定義されている場合<xref:System.Configuration.ApplicationSettingsBase.Save%2A>持たない影響し、既定値は、呼び出された場合エラーを返さない<xref:System.Configuration.LocalFileSettingsProvider>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-262">If the only settings defined are application-scoped settings, <xref:System.Configuration.ApplicationSettingsBase.Save%2A> will have no effect and return no error if called with the default <xref:System.Configuration.LocalFileSettingsProvider>.</span></span> <span data-ttu-id="34f99-263"><xref:System.Configuration.LocalFileSettingsProvider> ユーザー スコープ設定を保存のみです。</span><span class="sxs-lookup"><span data-stu-id="34f99-263"><xref:System.Configuration.LocalFileSettingsProvider> only saves user-scoped settings.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="34f99-264">アプリケーションの設定の値はラッパー クラスの初期化中に自動的に読み込まれますために、対応する Load メソッドはありません。</span><span class="sxs-lookup"><span data-stu-id="34f99-264">There is no corresponding Load method because the values of application settings are automatically loaded during wrapper class initialization.</span></span> <span data-ttu-id="34f99-265">これに対し、これらの値は自動的に保存されません、アプリケーションが終了するとします。</span><span class="sxs-lookup"><span data-stu-id="34f99-265">In contrast, these values are not automatically saved when an application ends.</span></span> <span data-ttu-id="34f99-266">そのため、明示的に呼び出す必要があります、<xref:System.Configuration.ApplicationSettingsBase.Save%2A>アプリケーション設定の現在の値を保持します。</span><span class="sxs-lookup"><span data-stu-id="34f99-266">Therefore, you must explicitly call the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method to persist the current values of the application settings.</span></span> <span data-ttu-id="34f99-267">これは通常の実行、<xref:System.Windows.Forms.Form.Closing>プライマリまたはコンテナーのイベント ハンドラー<xref:System.Windows.Forms.Form>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-267">This is typically performed in the <xref:System.Windows.Forms.Form.Closing> event handler of the primary or containing <xref:System.Windows.Forms.Form>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34f99-268">次のコード例は、<xref:System.Configuration.ApplicationSettingsBase.Save%2A>から呼び出されるメソッド、<xref:System.Windows.Forms.Form.Closing>プライマリ フォームのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="34f99-268">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form.</span></span> <span data-ttu-id="34f99-269">このメソッドは、追加の期間をフォームに関連付けられている設定のプロパティも追加<xref:System.Windows.Forms.Control.Text%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="34f99-269">This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 <span data-ttu-id="34f99-270">完全なコード例が記載されて、<xref:System.Configuration.ApplicationSettingsBase>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="34f99-270">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#3)]
 [!code-csharp[AppSettingsSample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#3)]
 [!code-vb[AppSettingsSample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SettingChanging">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingChangingEventHandler SettingChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingChangingEventHandler SettingChanging" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingChanging As SettingChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingChangingEventHandler ^ SettingChanging;" />
      <MemberSignature Language="F#" Value="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " Usage="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34f99-271">アプリケーション設定プロパティの値が変更される前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-271">Occurs before the value of an application settings property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-272"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging>によってアプリケーションの設定の value プロパティが変更される前に、イベントが発生した、<xref:System.Configuration.ApplicationSettingsBase.Item%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="34f99-272">The <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event occurs before an application setting value property is changed through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="34f99-273">このイベントがない場合に発生します、<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>または<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="34f99-273">This event is not raised when the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods are called.</span></span> <span data-ttu-id="34f99-274"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> キャンセルすることができます、<xref:System.Configuration.SettingChangingEventArgs>イベント データ クラスです。</span><span class="sxs-lookup"><span data-stu-id="34f99-274"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> can be canceled through the <xref:System.Configuration.SettingChangingEventArgs> event data class.</span></span>  
  
 <span data-ttu-id="34f99-275">通常、使用、<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>個々 の設定のプロパティの即時検証を処理するイベントです。</span><span class="sxs-lookup"><span data-stu-id="34f99-275">You typically use the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event to handle immediate validation of an individual settings property.</span></span> <span data-ttu-id="34f99-276">検証の詳細については、次を参照してください。[方法: アプリケーション設定の検証](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md)です。</span><span class="sxs-lookup"><span data-stu-id="34f99-276">For more information about validation, see [How to: Validate Application Settings](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md).</span></span>  
  
 <span data-ttu-id="34f99-277">対応がない`SettingChanged`このイベント クラスは、代わりに、参照してください、<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="34f99-277">There is no corresponding `SettingChanged` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34f99-278">次のコード例は、<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>型のオブジェクトのイベント ハンドラー `FormSettings`、ラッパー クラスから派生<xref:System.Configuration.ApplicationSettingsBase>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-278">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="34f99-279">ハンドラーという名前のテキスト ボックスに、イベント情報を表示する`tbStatus`します。</span><span class="sxs-lookup"><span data-stu-id="34f99-279">The handler displays the event information in a textbox named `tbStatus`.</span></span> <span data-ttu-id="34f99-280">完全なコード例が記載されて、<xref:System.Configuration.ApplicationSettingsBase>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="34f99-280">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#7)]
 [!code-csharp[AppSettingsSample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#7)]
 [!code-vb[AppSettingsSample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34f99-281">アプリケーション設定グループの設定キーを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-281">Gets or sets the settings key for the application settings group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34f99-282">現在の設定グループの設定キーを格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-282">A <see cref="T:System.String" /> containing the settings key for the current settings group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-283"><xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>クライアントのコードを有効にするプロパティを指定し、特定の設定プロバイダー、同じアプリケーション設定クラスの複数のインスタンス間を明確にでします。</span><span class="sxs-lookup"><span data-stu-id="34f99-283">The <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property is provided to enable client code, and in particular the settings provider, to disambiguate between multiple instances of the same application settings class.</span></span>  
  
 <span data-ttu-id="34f99-284">設定のラッパー クラスは、シングルトン パターンを使用して設計されていますが、しない限り、単一のアプリケーションで同じアプリケーション設定クラスの複数のインスタンスがあります。</span><span class="sxs-lookup"><span data-stu-id="34f99-284">Unless the settings wrapper class is designed using the singleton pattern, there can be multiple instances of the same application settings class in a single application.</span></span> <span data-ttu-id="34f99-285">値<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>を共有するプロパティの値を意図する方法に従って設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="34f99-285">The value of <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should be set according to how the property values are intended to be shared.</span></span>  
  
-   <span data-ttu-id="34f99-286">ラッパーの設定のプロパティの目的は、同じアプリケーションでラッパーのすべてのインスタンス間で共有する場合<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>すべてのインスタンスの値が同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="34f99-286">If the settings properties of the wrapper are intended to be shared across all instances of the wrapper in the same application, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have the same value in all of the instances.</span></span> <span data-ttu-id="34f99-287">これは、既定の動作、<xref:System.Configuration.ApplicationSettingsBase>クラス。</span><span class="sxs-lookup"><span data-stu-id="34f99-287">This is the default behavior of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span>  
  
-   <span data-ttu-id="34f99-288">ラッパーの設定のプロパティは、インスタンスごとに、される場合<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>のインスタンスごとに値が一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="34f99-288">If the settings properties of the wrapper are intended to be per instance, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have a unique value for every instance.</span></span> <span data-ttu-id="34f99-289"><xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>コンス トラクターのバージョンでは、初期化することができます<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>一意の文字列。</span><span class="sxs-lookup"><span data-stu-id="34f99-289">The <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> version of the constructor enables you to initialize <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> to a unique string.</span></span>  
  
 <span data-ttu-id="34f99-290">これに対し、<xref:System.Configuration.ApplicationSettingsBase.Context%2A>プロパティで整然と効率的な方法で値を永続化を有効にする設定プロバイダーにヒントを提供します。</span><span class="sxs-lookup"><span data-stu-id="34f99-290">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.Context%2A> property provides hints to the settings provider to enable it to persist values in an efficient and orderly manner.</span></span>  
  
 <span data-ttu-id="34f99-291"><xref:System.Configuration.SettingChangingEventArgs>クラスが含まれていますが、類似<xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A>プロパティのソースを識別しやすく、<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>イベント。</span><span class="sxs-lookup"><span data-stu-id="34f99-291">The <xref:System.Configuration.SettingChangingEventArgs> class contains a similar <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> property that helps identify the source of the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Context" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SettingsLoaded">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsLoadedEventHandler SettingsLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsLoaded As SettingsLoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsLoadedEventHandler ^ SettingsLoaded;" />
      <MemberSignature Language="F#" Value="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " Usage="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsLoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34f99-292">アプリケーション設定をストレージから取得した後に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-292">Occurs after the application settings are retrieved from storage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-293"><xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>頭文字の後にのみイベントが発生した`get`を通じて通常使用される最初の構成プロパティへのアクセス、<xref:System.Configuration.ApplicationSettingsBase.Item%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="34f99-293">The <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event occurs only after the initial `get` access of the first configuration property used, typically through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="34f99-294">以降のアクセスは、ローカルにキャッシュされている設定プロパティの値を使用します。</span><span class="sxs-lookup"><span data-stu-id="34f99-294">Subsequent accesses use values for the settings property that are cached locally.</span></span> <span data-ttu-id="34f99-295"><xref:System.Configuration.ApplicationSettingsBase.Reset%2A>と<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>メソッドは、このイベントは後続のプロパティへのアクセス時にもう一度発生したためキャッシュされたすべての値にクリアされます。</span><span class="sxs-lookup"><span data-stu-id="34f99-295">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods will clear all cached values so this event will be raised again upon subsequent property access.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="T:System.Configuration.SettingsLoadedEventArgs" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="SettingsSaving">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsSavingEventHandler SettingsSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsSavingEventHandler SettingsSaving" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsSaving As SettingsSavingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsSavingEventHandler ^ SettingsSaving;" />
      <MemberSignature Language="F#" Value="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " Usage="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsSavingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34f99-296">データ ストアに値が保存される前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-296">Occurs before values are saved to the data store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-297"><xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>イベントは、<xref:System.Configuration.ApplicationSettingsBase.Save%2A>メソッドの前に、関連付けられているデータ ストアにアプリケーション設定プロパティを格納します。</span><span class="sxs-lookup"><span data-stu-id="34f99-297">The <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event is raised by the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method before it stores the application settings properties to their associated data store.</span></span> <span data-ttu-id="34f99-298">関連付けられたイベント ハンドラーは、このイベントをキャンセルできます。</span><span class="sxs-lookup"><span data-stu-id="34f99-298">The associated event handler can cancel this event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34f99-299">次のコード例は、<xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>型のオブジェクトのイベント ハンドラー `FormSettings`、ラッパー クラスから派生<xref:System.Configuration.ApplicationSettingsBase>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-299">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="34f99-300">ハンドラーは、現在のアプリケーション設定プロパティの値を保存するユーザーを照会します。</span><span class="sxs-lookup"><span data-stu-id="34f99-300">The handler queries the user to save the current application settings property values.</span></span> <span data-ttu-id="34f99-301">完全なコード例が記載されて、<xref:System.Configuration.ApplicationSettingsBase>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="34f99-301">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#8](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#8)]
 [!code-csharp[AppSettingsSample#8](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#8)]
 [!code-vb[AppSettingsSample#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public virtual void Upgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Upgrade ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade();" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : unit -&gt; unit&#xA;override this.Upgrade : unit -&gt; unit" Usage="applicationSettingsBase.Upgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="34f99-302">アプリケーション設定を更新して、アプリケーションの最新のインストールを反映します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-302">Updates application settings to reflect a more recent installation of the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34f99-303"><xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>メソッドは、アプリケーションの新しいバージョンにスムーズに移行を保証するために 2 つのアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="34f99-303">The <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method performs two actions to assure smooth transition to a new version of an application:</span></span>  
  
-   <span data-ttu-id="34f99-304">すべての対応する設定プロバイダーを呼び出すことによって、アップグレードされたアプリケーションの存在の通知、<xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType>メソッドを実装したと仮定すると、<xref:System.Configuration.IApplicationSettingsProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="34f99-304">It notifies all of the corresponding settings providers of the existence of the upgraded application through a call to their <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> method, assuming they have implemented the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="34f99-305">設定のラッパー クラスが付いている場合、この操作は実行されません<xref:System.Configuration.NoSettingsVersionUpgradeAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="34f99-305">This action is not performed if the settings wrapper class is marked with <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</span></span>  
  
-   <span data-ttu-id="34f99-306">すべてのアプリケーション設定の値が再読み込みします。</span><span class="sxs-lookup"><span data-stu-id="34f99-306">It reloads the values for all of the application settings.</span></span>  
  
 <span data-ttu-id="34f99-307">既定の動作をオーバーライドする<xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>カスタム アップグレードまたは動作のマージを実装します。</span><span class="sxs-lookup"><span data-stu-id="34f99-307">You can override the default behavior of <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> to implement custom upgrading or merging behavior.</span></span> <span data-ttu-id="34f99-308">使用して、<xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>以前のバージョンのアプリケーションの設定の個々 の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="34f99-308">Use the <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method to retrieve individual values for a setting for the previous version of the application.</span></span> <span data-ttu-id="34f99-309">カスタムのアップグレード動作の例は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="34f99-309">Examples of custom upgrade behavior include:</span></span>  
  
-   <span data-ttu-id="34f99-310">1 つ以上の前のユーザーが指定した値を上書きする新しいポリシーの既定値または前の既定値を使用します。</span><span class="sxs-lookup"><span data-stu-id="34f99-310">Using new policy defaults that override one or more of the previous user-specified values or previous defaults.</span></span>  
  
-   <span data-ttu-id="34f99-311">新しい範囲を異なる設定プロパティ グループでは、や対応するように古い値の特殊な変換をします。</span><span class="sxs-lookup"><span data-stu-id="34f99-311">Special translation of old values to be compatible with newer ranges, a different settings property group, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="34f99-312">構成ファイルを解析できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34f99-312">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>