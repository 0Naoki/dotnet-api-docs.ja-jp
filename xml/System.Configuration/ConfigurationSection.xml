<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConfigurationSection.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac550b032013ee388f601a901827cebfb8bd035f798.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50b032013ee388f601a901827cebfb8bd035f798</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.ConfigurationSection">
          <source>Represents a section within a configuration file.</source>
          <target state="translated">構成ファイル内のセクションを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>You use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> class to implement a custom section type.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph>カスタム セクション型を実装するクラス。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Extend the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> class to provide custom handling and programmatic access to custom configuration sections.</source>
          <target state="translated">拡張、<ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph>カスタム ハンドリングとカスタム構成セクションにプログラムでアクセスを提供するクラス。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>For information about how use custom configuration sections, see <bpt id="p1">[</bpt>How to: Create Custom Configuration Sections Using ConfigurationSection<ept id="p1">](http://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234)</ept>.</source>
          <target state="translated">方法については、カスタム構成セクションを使用して、参照してください<bpt id="p1">[</bpt>する方法: 作成するカスタム構成セクションを使用して ConfigurationSection<ept id="p1">](http://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234)</ept>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>A section registers its handling type with an entry in the <ph id="ph1">`configSections`</ph> element.</source>
          <target state="translated">セクションでは、その処理の種類を登録のエントリで、<ph id="ph1">`configSections`</ph>要素。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>For an example, see the configuration file excerpt shown in the Example section.</source>
          <target state="translated">例については、例」のセクションに示すように構成ファイルの抜粋を参照してください。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>In previous versions of the .NET Framework, configuration section handlers were used to make changes to configuration settings programmatically.</source>
          <target state="translated">構成設定を変更する、.NET Framework の以前のバージョンで使用された構成セクション ハンドラー プログラムでします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Now, all the default configuration sections are represented by classes that extend the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> class.</source>
          <target state="translated">すべての既定の構成セクションが拡張するクラスによって表されるよう、<ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>The following example shows how to implement a custom section programmatically.</source>
          <target state="translated">次の例では、プログラムによってカスタム セクションを実装する方法を示します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>For a complete example that shows how to implement and use a custom section implemented using the attributed model, see <ph id="ph1">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph>.</source>
          <target state="translated">実装して、属性付きのモデルを使用して実装されたカスタム セクションを使用する方法を示す完全な例を参照してください。<ph id="ph1">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>The following example is an excerpt of the configuration file as it applies to the previous example.</source>
          <target state="translated">次の例は、前の例を適用する際に、構成ファイルの抜粋です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>You can use a programmatic or a declarative (attributed) coding model to create custom configuration sections:</source>
          <target state="translated">カスタム構成セクションを作成するのには、プログラムまたは宣言 (属性付き) のコーディング モデルを使用できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Programmatic model.</source>
          <target state="translated">プログラムによるモデルです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>This model requires that for each section attribute you create a property to get or set its value and add it to the internal property bag of the underlying <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> base class.</source>
          <target state="translated">このモデルでは、各セクションの属性を取得またはその値を設定し、基になる内部プロパティ バッグに追加のプロパティを作成する必要があります<ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph>基本クラスです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Declarative model.</source>
          <target state="translated">宣言型モデル。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>This simpler model, also called the attributed model, allows you to define a section attribute by using a property and decorating it with attributes.</source>
          <target state="translated">属性付きのモデルとも呼ばれます。 この単純なモデルでは、プロパティを使用して、属性で修飾して、セクション属性を定義することができます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>These attributes instruct the ASP.NET configuration system about the property types and their default values.</source>
          <target state="translated">これらの属性は、プロパティの型とその既定値は、ASP.NET 構成システムを指示します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>With this information, obtained through reflection, the ASP.NET configuration system creates the section property objects and performs the required initialization.</source>
          <target state="translated">リフレクションでは、取得した、この情報では、ASP.NET 構成システムは、セクション プロパティ オブジェクトを作成し、必要な初期化を実行します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.Configuration" /&gt;</ph> class allows programmatic access for editing configuration files.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.Configuration" /&gt;</ph>クラスは、構成ファイルを編集するためのプログラムによるアクセスを使用できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>You can access these files for reading or writing as follows:</source>
          <target state="translated">これらのファイルの読み取りまたは書き込みを次のようにアクセスできます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Reading.</source>
          <target state="translated">読み取り。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>You use <ph id="ph1">&lt;see cref="M:System.Configuration.Configuration.GetSection(System.String)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /&gt;</ph> to read configuration information.</source>
          <target state="translated">使用する<ph id="ph1">&lt;see cref="M:System.Configuration.Configuration.GetSection(System.String)" /&gt;</ph>または<ph id="ph2">&lt;see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /&gt;</ph>構成情報を読み取れません。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Note that the user or process that reads must have the following permissions:</source>
          <target state="translated">ユーザーまたはプロセスを読み取るいる必要があります、次の権限に注意してください。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Read permission on the configuration file at the current configuration hierarchy level.</source>
          <target state="translated">現在の構成階層レベルの構成ファイルに対する読み取り権限。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Read permissions on all the parent configuration files.</source>
          <target state="translated">すべての親に対する権限の構成ファイルを読み取る。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>If your application needs read-only access to its own configuration, it is recommended you use the <ph id="ph1">&lt;see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /&gt;</ph> overloaded methods in the case of Web applications, or the <ph id="ph2">&lt;see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /&gt;</ph> method in the case of client applications.</source>
          <target state="translated">アプリケーションでは、独自の構成を読み取り専用のアクセスを必要とする場合は、使用するをお勧めしますが、<ph id="ph1">&lt;see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /&gt;</ph>オーバー ロードされたメソッドの場合は、Web アプリケーションまたは<ph id="ph2">&lt;see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /&gt;</ph>クライアント アプリケーションの場合のメソッドです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>These methods provide access to the cached configuration values for the current application, which has better performance than the <ph id="ph1">&lt;see cref="T:System.Configuration.Configuration" /&gt;</ph> class.</source>
          <target state="translated">これらのメソッドのアクセスを提供する、キャッシュされた構成値を現在のアプリケーションに対してより優れたパフォーマンスは、<ph id="ph1">&lt;see cref="T:System.Configuration.Configuration" /&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>If you use a static <ph id="ph1">&lt;see langword="GetSection" /&gt;</ph> method that takes a <ph id="ph2">&lt;paramref name="path" /&gt;</ph> parameter, the <ph id="ph3">&lt;paramref name="path" /&gt;</ph> parameter must refer to the application in which the code is running; otherwise, the parameter is ignored and configuration information for the currently-running application is returned.</source>
          <target state="translated">静的なを使用する場合<ph id="ph1">&lt;see langword="GetSection" /&gt;</ph>を受け取るメソッド、 <ph id="ph2">&lt;paramref name="path" /&gt;</ph> 、パラメーター、<ph id="ph3">&lt;paramref name="path" /&gt;</ph>パラメーターは、アプリケーション、コードが実行されているですそれ以外の場合、パラメーターは無視されますと、現在実行中の構成情報を参照する必要があります。アプリケーションが返されます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Writing.</source>
          <target state="translated">書き込んでいます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>You use one of the <ph id="ph1">&lt;see cref="Overload:System.Configuration.Configuration.Save" /&gt;</ph> methods to write configuration information.</source>
          <target state="translated">いずれかを使用する、<ph id="ph1">&lt;see cref="Overload:System.Configuration.Configuration.Save" /&gt;</ph>構成情報を書き込む方法です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Note that the user or process that writes must have the following permissions:</source>
          <target state="translated">ユーザーまたはプロセスに書き込み、いる必要があります、次の権限に注意してください。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Write permission on the configuration file and directory at the current configuration hierarchy level.</source>
          <target state="translated">構成ファイルおよび現在の構成階層レベルのディレクトリに対するアクセス許可を記述します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Read permissions on all the configuration files.</source>
          <target state="translated">すべての構成ファイルの読み取り権限。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.#ctor">
          <source>To use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.%23ctor%2A&gt;</ph> constructor, you need to define a custom section type first.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.%23ctor%2A&gt;</ph>コンス トラクターは、まずカスタム セクションの型を定義する必要があります。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.#ctor">
          <source>For an example see the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> class overview.</source>
          <target state="translated">例については、次を参照してください。、<ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph>クラスの概要です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.#ctor">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.%23ctor%2A&gt;</ph> コンストラクターを使用する方法を示しています。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.#ctor">
          <source>This example assumes that you have created a custom section class named <ph id="ph1">`CustomSection`</ph>.</source>
          <target state="translated">この例では、という名前のカスタム セクション クラスを作成した<ph id="ph1">`CustomSection`</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.#ctor">
          <source>For an example of such a class, see the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> class overview.</source>
          <target state="translated">このようなクラスの例は、次を参照してください。、<ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph>クラスの概要です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object, which reads from the configuration file.</source>
          <target state="translated">構成ファイルから読み込む <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
          <source>Reads XML from the configuration file.</source>
          <target state="translated">構成ファイルから XML を読み取ります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
          <source>Deserialization refers to the reading of XML data from a configuration file, its transformation into real-time data, and its storage in an object.</source>
          <target state="translated">逆シリアル化は、構成ファイル、リアルタイムのデータに変換およびオブジェクトでその記憶域から XML データの読み取りを参照します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> found no elements in the configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> が、構成ファイルで要素を見つけることができませんでした。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>Returns a custom object when overridden in a derived class.</source>
          <target state="translated">派生クラスでオーバーライドされると、カスタム オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>The object representing the section.</source>
          <target state="translated">セクションを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>When the <ph id="ph1">&lt;xref:System.Configuration.Configuration.GetSection%2A&gt;</ph> method is called at run time, the configuration system first creates an appropriate instance of the <ph id="ph2">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> class, and then returns the object it obtains from the <ph id="ph3">&lt;xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A&gt;</ph> method.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Configuration.Configuration.GetSection%2A&gt;</ph>メソッドが実行時に呼び出されると、構成システムは、最初の適切なインスタンスを作成、<ph id="ph2">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph>クラスをから取得したオブジェクトを返します、<ph id="ph3">&lt;xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>By default, <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A&gt;</ph> simply returns the object that represents the <ph id="ph2">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> from which it is called.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A&gt;</ph>だけを表すオブジェクトを返します、<ph id="ph2">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph>から呼び出されます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A&gt;</ph> メソッドを使用する方法の例を次に示します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>You can override the <ph id="ph1">&lt;see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /&gt;</ph> method to return a custom type at run time.</source>
          <target state="translated">オーバーライドすることができます、<ph id="ph1">&lt;see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /&gt;</ph>を実行時にカスタムの型を返すメソッド。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>For example, to restrict runtime modification of the settings in the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> class, you can override <ph id="ph2">&lt;see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /&gt;</ph> and return a custom type that enforces restrictions on which settings can be modified, if any.</source>
          <target state="translated">例については、設定のランタイムの変更を制限する、<ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph>オーバーライドするクラス、<ph id="ph2">&lt;see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /&gt;</ph>存在する場合に、設定を変更する、制限を強制するカスタム型を返すとします。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>If the runtime object is internal only, the returned object cannot be used outside the assembly that defines it.</source>
          <target state="translated">ランタイム オブジェクトが内部の場合のみ、これを定義するアセンブリの外側、返されたオブジェクトを使用できません。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>One way to create an object that derives from <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> and can only be accessed by code in your assembly at run time is to create an internal runtime object that has a method that returns your <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> implementation.</source>
          <target state="translated">派生したオブジェクトを作成する方法の 1 つ<ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph>し、実行時、アセンブリ内のコードからのみアクセスできる時間を返すメソッドを持つ内部ランタイム オブジェクトを作成するには、<ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.IsModified">
          <source>Indicates whether this configuration element has been modified since it was last saved or loaded when implemented in a derived class.</source>
          <target state="translated">派生クラスに実装された場合、この構成要素が最後の保存または読み込み以降に変更されたかどうかを示します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.IsModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element has been modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素が変更された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ResetModified">
          <source>Resets the value of the <ph id="ph1">&lt;see cref="M:System.Configuration.ConfigurationElement.IsModified" /&gt;</ph> method to <ph id="ph2">&lt;see langword="false" /&gt;</ph> when implemented in a derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Configuration.ConfigurationElement.IsModified" /&gt;</ph> メソッドの値が派生クラスに実装されたときに、<ph id="ph2">&lt;see langword="false" /&gt;</ph> にリセットします。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationSection.SectionInformation">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Configuration.SectionInformation" /&gt;</ph> object that contains the non-customizable information and functionality of the <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.SectionInformation" /&gt;</ph> オブジェクトのカスタマイズできない情報と機能を格納する <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationSection.SectionInformation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SectionInformation" /&gt;</ph> that contains the non-customizable information and functionality of the <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.SectionInformation" /&gt;</ph> オブジェクトのカスタマイズできない情報と機能を格納する <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationSection.SectionInformation">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.SectionInformation%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.SectionInformation%2A&gt;</ph> プロパティを使用する方法を次の例に示します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> instance to use as the parent when performing the un-merge.</source>
          <target state="translated">アンマージを実行する場合に親として使用する <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <source>The name of the section to create.</source>
          <target state="translated">作成するセクションの名前。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSaveMode" /&gt;</ph> instance to use when writing to a string.</source>
          <target state="translated">文字列に書き込むときに使用する <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSaveMode" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <source>Creates an XML string containing an unmerged view of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> object as a single section to write to a file.</source>
          <target state="translated">ファイルに書き込む 1 つのセクションとして、<ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> オブジェクトのアンマージされたビューを含む XML 文字列を作成します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <source>An XML string containing an unmerged view of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> オブジェクトのアンマージされたビューを含む XML 文字列。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <source>Serialization refers to the transformation of real-time data, contained in an object, to XML format and its storage to a configuration file.</source>
          <target state="translated">シリアル化は、XML 形式とその記憶域の構成ファイルに、オブジェクトに含まれる、リアルタイムのデータの変換を指します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> object that is a candidate for serialization.</source>
          <target state="translated">シリアル化の候補となる <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> object as it occurs in XML.</source>
          <target state="translated">XML での <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> オブジェクトの名前。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>The target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> のターゲット バージョン。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>Indicates whether the specified element should be serialized when the configuration object hierarchy is serialized for the specified target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">指定されたターゲット バージョンの <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 用に構成オブジェクト階層をシリアル化するとき、指定された要素がシリアル化されるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="element" /&gt;</ph> should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="element" /&gt;</ph> をシリアル化する必要がある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>Each configuration section that is created for the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> and later versions must explicitly override this method and return <ph id="ph2">`true`</ph>, but only if the specified element is valid for the specified version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">各構成セクションに作成される、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>以降のバージョンは、このメソッドをオーバーライドされを返す必要があります明示的に<ph id="ph2">`true`</ph>が、指定した要素が指定のバージョンの有効な場合にのみ、<ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>Existing configuration sections that were created for earlier versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> do not have to be changed.</source>
          <target state="translated">以前のバージョンの用に作成された既存の構成セクションで、<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>を変更する必要はありません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>The base type contains a default implementation of this method that always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">基本データ型には、常に返す、このメソッドの既定の実装が含まれています。<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>If you implement a configuration section and you do not override this method, by default all configuration elements that are contained in the configuration section will be serialized for all framework versions.</source>
          <target state="translated">構成セクションを実装し、このメソッドをオーバーライドしていない場合は、既定では構成セクションに含まれているすべての構成要素は用にシリアル化フレームワークのすべてのバージョン。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> object that is a candidate for serialization.</source>
          <target state="translated">シリアル化の候補となる <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> object as it occurs in XML.</source>
          <target state="translated">XML での <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> オブジェクトの名前。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>The target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> のターゲット バージョン。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>The parent element of the property.</source>
          <target state="translated">プロパティの親要素。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>Indicates whether the specified property should be serialized when the configuration object hierarchy is serialized for the specified target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">指定されたターゲット バージョンの <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 用に構成オブジェクト階層をシリアル化するとき、指定されたプロパティがシリアル化されるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="property" /&gt;</ph> should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="property" /&gt;</ph> をシリアル化する必要がある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>Each configuration section that is created for the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> and later versions must explicitly override this method and return <ph id="ph2">`true`</ph>, but only if the specified property is valid for the specified version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">各構成セクションに作成される、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>以降のバージョンは、このメソッドをオーバーライドされを返す必要があります明示的に<ph id="ph2">`true`</ph>が、指定したプロパティが指定のバージョンの有効な場合にのみ、<ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>Existing configuration sections that were created for earlier versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> do not have to be changed.</source>
          <target state="translated">以前のバージョンの用に作成された既存の構成セクションで、<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>を変更する必要はありません。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>The base type contains a default implementation of this method that always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">基本データ型には、常に返す、このメソッドの既定の実装が含まれています。<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>If you implement a configuration section and you do not override this method, by default all configuration properties that are contained in the configuration section will be serialized for all framework versions.</source>
          <target state="translated">構成セクションを実装し、このメソッドをオーバーライドしていない場合は、既定では構成セクションに含まれているすべての構成プロパティはシリアル化すべてのバージョンのフレームワークです。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source>The target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> のターゲット バージョン。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source>Indicates whether the current <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">指定されたターゲット バージョンの <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 用に構成オブジェクト階層をシリアル化するとき、現在の <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> インスタンスがシリアル化されるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current section should be serialized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のセクションをシリアル化する必要がある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source>Each configuration section that is created for the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> and later versions must explicitly override this method and return <ph id="ph2">`true`</ph>, but only if the configuration section is valid for the specified version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">各構成セクションに作成される、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>以降のバージョンは、このメソッドをオーバーライドされを返す必要があります明示的に<ph id="ph2">`true`</ph>、構成セクションが指定のバージョンの有効な場合にのみが、<ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source>Existing configuration sections that were created for earlier versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> do not have to be changed.</source>
          <target state="translated">以前のバージョンの用に作成された既存の構成セクションで、<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>を変更する必要はありません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source>The base type contains a default implementation of this method that always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">基本データ型には、常に返す、このメソッドの既定の実装が含まれています。<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source>If you implement a configuration section and you do not override this method, by default the configuration section will be serialized for all framework versions.</source>
          <target state="translated">構成セクションを実装し、このメソッドをオーバーライドしていない場合は、既定では構成セクションすべてのバージョンのフレームワークはシリアル化します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>