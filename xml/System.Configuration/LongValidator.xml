<Type Name="LongValidator" FullName="System.Configuration.LongValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="08df61136e4a13913822600598f49ca98b0279a4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69129226" /></Metadata><TypeSignature Language="C#" Value="public class LongValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LongValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LongValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class LongValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class LongValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type LongValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Int64" /> 値の検証について説明します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 は、 `long` (64 ビット符号付き整数) が特定の条件を満たしていることを保証するために使用されます。 <xref:System.Configuration.LongValidator> 検証の条件は、 <xref:System.Configuration.LongValidator>クラスのインスタンスが作成されるときに設定されます。 コンストラクター <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%29>は、検証対象`long`の値が最小値と最大長の両方に準拠していることを保証します。 コンストラクター <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%29>は、最小値と最大<xref:System.Int64>値の両方をチェックします。検証範囲が排他的であるかどうかも確認します。 コンストラクター <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%2CSystem.Int64%29>は、前の3つのパラメーターを確認し<xref:System.Int64> 、値が特定の解決値と等しいかどうかも確認します。  
  
 メソッド<xref:System.Configuration.LongValidator.CanValidate%2A>は、検証対象のオブジェクトの型が、予期される型と一致するかどうかを判断します。 検証対象のオブジェクトは、 <xref:System.Configuration.LongValidator.Validate%2A>メソッドのパラメーターとして渡されます。  
  
   
  
## Examples  
 <xref:System.Configuration.LongValidator>型を使用する方法を次のコード例に示します。  
  
 [!code-csharp[System.Configuration.LongValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#1)]
 [!code-vb[System.Configuration.LongValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Configuration.LongValidator" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongValidator (long minValue, long maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 minValue, int64 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Long, maxValue As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LongValidator(long minValue, long maxValue);" />
      <MemberSignature Language="F#" Value="new System.Configuration.LongValidator : int64 * int64 -&gt; System.Configuration.LongValidator" Usage="new System.Configuration.LongValidator (minValue, maxValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int64" />
        <Parameter Name="maxValue" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="minValue"><see langword="long" /> 値の最小長を指定する <see cref="T:System.Int64" /> 値。</param>
        <param name="maxValue"><see langword="long" /> 値の最大長を指定する <see cref="T:System.Int64" /> 値。</param>
        <summary><see cref="T:System.Configuration.LongValidator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンストラクター <xref:System.Configuration.LongValidator.%23ctor%2A>は、検証される長い値が最小値と最大長の両方に準拠していることを保証します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongValidator (long minValue, long maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 minValue, int64 maxValue, bool rangeIsExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Long, maxValue As Long, rangeIsExclusive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LongValidator(long minValue, long maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="F#" Value="new System.Configuration.LongValidator : int64 * int64 * bool -&gt; System.Configuration.LongValidator" Usage="new System.Configuration.LongValidator (minValue, maxValue, rangeIsExclusive)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int64" />
        <Parameter Name="maxValue" Type="System.Int64" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="minValue"><see langword="long" /> 値の最小長を指定する <see cref="T:System.Int64" /> 値。</param>
        <param name="maxValue"><see langword="long" /> 値の最大長を指定する <see cref="T:System.Int64" /> 値。</param>
        <param name="rangeIsExclusive">検証範囲が排他的かどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
        <summary><see cref="T:System.Configuration.LongValidator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンストラクターを使用すると、最小値と最大<xref:System.Int64>値の両方、および検証範囲が排他的かどうかがチェックされます。 <xref:System.Configuration.LongValidator.%23ctor%2A> `true` `minValue` `maxValue`パラメーターがに設定されている場合、との間に値を指定することはできません。<xref:System.Int64> `rangeIsExclusive`  
  
   
  
## Examples  
 コンストラクターの<xref:System.Configuration.LongValidator.%23ctor%2A>使用方法を次のコード例に示します。 このコード例は、 <xref:System.Configuration.LongValidator>クラスに対して提供される大規模な例の一部です。  
  
 [!code-csharp[System.Configuration.LongValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#2)]
 [!code-vb[System.Configuration.LongValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongValidator (long minValue, long maxValue, bool rangeIsExclusive, long resolution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 minValue, int64 maxValue, bool rangeIsExclusive, int64 resolution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Long, maxValue As Long, rangeIsExclusive As Boolean, resolution As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LongValidator(long minValue, long maxValue, bool rangeIsExclusive, long resolution);" />
      <MemberSignature Language="F#" Value="new System.Configuration.LongValidator : int64 * int64 * bool * int64 -&gt; System.Configuration.LongValidator" Usage="new System.Configuration.LongValidator (minValue, maxValue, rangeIsExclusive, resolution)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int64" />
        <Parameter Name="maxValue" Type="System.Int64" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
        <Parameter Name="resolution" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="minValue"><see langword="long" /> 値の最小長を指定する <see cref="T:System.Int64" /> 値。</param>
        <param name="maxValue"><see langword="long" /> 値の最大長を指定する <see cref="T:System.Int64" /> 値。</param>
        <param name="rangeIsExclusive">検証範囲が排他的かどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
        <param name="resolution">一致する必要がある特定の値を指定する <see cref="T:System.Int64" /> 値。</param>
        <summary><see cref="T:System.Configuration.LongValidator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 を指定`resolution`する場合<xref:System.Int64> 、検証を成功させるには、検証する値がその値と同じである必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="resolution" /> が <see langword="0" /> 以下です。  
  
- または - 
 <paramref name="maxValue" /> は <paramref name="minValue" /> より小さい値です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="longValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">オブジェクトの型。</param>
        <summary>オブジェクトの型を検証できるかどうかを判断します。</summary>
        <returns><paramref name="type" /> パラメーターが <see cref="T:System.Int64" /> 値と一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、<xref:System.Configuration.LongValidator.CanValidate%2A> メソッドの使用方法を示します。 このコード例は、 <xref:System.Configuration.LongValidator>クラスに対して提供される大規模な例の一部です。  
  
 [!code-csharp[System.Configuration.LongValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#3)]
 [!code-vb[System.Configuration.LongValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="longValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">オブジェクトの値。</param>
        <summary>オブジェクトの値が有効かどうかを判断します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Configuration.LongValidator>には、 <xref:System.Int64>オブジェクトの検証に必要な規則が含まれています。 規則は、 <xref:System.Configuration.LongValidator>クラスのインスタンスが作成されるときに確立されます。 検証するオブジェクトは、 <xref:System.Configuration.LongValidator.Validate%2A>メソッドのパラメーターとして渡されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Configuration.LongValidator.Validate%2A> メソッドの使用方法を示します。 このコード例は、 <xref:System.Configuration.LongValidator>クラスに対して提供される大規模な例の一部です。  
  
 [!code-csharp[System.Configuration.LongValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#4)]
 [!code-vb[System.Configuration.LongValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
      </Docs>
    </Member>
  </Members>
</Type>
