<Type Name="IntegerValidator" FullName="System.Configuration.IntegerValidator">
  <TypeSignature Language="C#" Value="public class IntegerValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntegerValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IntegerValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class IntegerValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntegerValidator : System::Configuration::ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="feb66-101"><see cref="T:System.Int32" /> 値の検証について説明します。</span><span class="sxs-lookup"><span data-stu-id="feb66-101">Provides validation of an <see cref="T:System.Int32" /> value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb66-102"><xref:System.Configuration.IntegerValidator>整数が特定の条件を満たしていることを確認するクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="feb66-102">The <xref:System.Configuration.IntegerValidator> class is used to ensure that an integer meets specific criteria.</span></span> <span data-ttu-id="feb66-103">インスタンスの検証条件を確立、<xref:System.Configuration.IntegerValidator>クラスを作成します。</span><span class="sxs-lookup"><span data-stu-id="feb66-103">The criteria for validation are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created.</span></span> <span data-ttu-id="feb66-104"><xref:System.Configuration.IntegerValidator.%23ctor%2A> 2 つのパラメーターを持つコンス トラクター検証されている整数値が最小と最大値の両方に準拠していることを確認します。</span><span class="sxs-lookup"><span data-stu-id="feb66-104">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value.</span></span> <span data-ttu-id="feb66-105"><xref:System.Configuration.IntegerValidator.%23ctor%2A> 3 つのパラメーターを持つコンス トラクターは、最小値と最大の両方をチェック<xref:System.Int32>検証に使用する値が指定した範囲内かどうかだけでなく、値します。</span><span class="sxs-lookup"><span data-stu-id="feb66-105">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range.</span></span> <span data-ttu-id="feb66-106"><xref:System.Configuration.IntegerValidator.%23ctor%2A> 4 つのパラメーターを持つコンス トラクターは、確認前の 3 つのパラメーターともチェックするかどうか、<xref:System.Int32>値は特定の解像度にします。</span><span class="sxs-lookup"><span data-stu-id="feb66-106">The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.</span></span>  
  
 <span data-ttu-id="feb66-107"><xref:System.Configuration.IntegerValidator.CanValidate%2A>メソッドでは、オブジェクトの種類の検証中に、予期された型が一致するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="feb66-107">The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type.</span></span> <span data-ttu-id="feb66-108">検証されるオブジェクトのパラメーターとして渡されます、<xref:System.Configuration.IntegerValidator.Validate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="feb66-108">The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="feb66-109">次のコード例を使用する方法を示しています、<xref:System.Configuration.IntegerValidator>型です。</span><span class="sxs-lookup"><span data-stu-id="feb66-109">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator> type.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#1)]
 [!code-vb[System.Configuration.IntegerValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="feb66-110"><see cref="T:System.Configuration.IntegerValidator" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="feb66-110">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="feb66-111">最小値を指定する <see cref="T:System.Int32" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="feb66-111">An <see cref="T:System.Int32" /> object that specifies the minimum value.</span></span></param>
        <param name="maxValue"><span data-ttu-id="feb66-112">最大値を指定する <see cref="T:System.Int32" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="feb66-112">An <see cref="T:System.Int32" /> object that specifies the maximum value.</span></span></param>
        <summary><span data-ttu-id="feb66-113"><see cref="T:System.Configuration.IntegerValidator" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="feb66-113">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb66-114">これは、<xref:System.Configuration.IntegerValidator.%23ctor%2A>コンス トラクターの整数が検証されているが、最小および最大長の両方に準拠していることを確認します。</span><span class="sxs-lookup"><span data-stu-id="feb66-114">This <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor ensures that the integer being verified adheres to both a minimum and a maximum length.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue, bool rangeIsExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer, rangeIsExclusive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue, bool rangeIsExclusive);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="feb66-115">最小値を指定する <see cref="T:System.Int32" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="feb66-115">An <see cref="T:System.Int32" /> object that specifies the minimum value.</span></span></param>
        <param name="maxValue"><span data-ttu-id="feb66-116">最大値を指定する <see cref="T:System.Int32" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="feb66-116">An <see cref="T:System.Int32" /> object that specifies the maximum value.</span></span></param>
        <param name="rangeIsExclusive">
          <span data-ttu-id="feb66-117">検証範囲を排他的として指定する場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="feb66-117"><see langword="true" /> to specify that the validation range is exclusive.</span></span> <span data-ttu-id="feb66-118">包含 (Inclusive) とは、検証対象の値が指定された範囲内に存在しなければならないことを意味します。一方、排他 (Exclusive) とは、検証対象の値が最小値より小さいか最大値より大きい値でなければならないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="feb66-118">Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.</span></span></param>
        <summary><span data-ttu-id="feb66-119"><see cref="T:System.Configuration.IntegerValidator" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="feb66-119">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb66-120">インスタンスを作成するときに、<xref:System.Configuration.IntegerValidator>クラスでこの<xref:System.Configuration.IntegerValidator.%23ctor%2A>コンス トラクターは、最小値と最大の両方をチェック<xref:System.Int32>検証範囲が排他的かどうかだけでなく、値します。</span><span class="sxs-lookup"><span data-stu-id="feb66-120">When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive.</span></span> <span data-ttu-id="feb66-121">ときに、`rangeIsExclusive`にパラメーターが設定されている`true`、<xref:System.Int32>間の値にはできません、`minValue`と`maxValue`パラメーターの値。</span><span class="sxs-lookup"><span data-stu-id="feb66-121">When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="feb66-122">次のコード例を使用する方法を示しています、<xref:System.Configuration.IntegerValidator.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="feb66-122">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor.</span></span> <span data-ttu-id="feb66-123">このコード例に示されている例の一部である、<xref:System.Configuration.IntegerValidator>クラスです。</span><span class="sxs-lookup"><span data-stu-id="feb66-123">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#2)]
 [!code-vb[System.Configuration.IntegerValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive, int resolution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minValue, int32 maxValue, bool rangeIsExclusive, int32 resolution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Integer, maxValue As Integer, rangeIsExclusive As Boolean, resolution As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerValidator(int minValue, int maxValue, bool rangeIsExclusive, int resolution);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int32" />
        <Parameter Name="maxValue" Type="System.Int32" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
        <Parameter Name="resolution" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minValue"><span data-ttu-id="feb66-124">整数値の最小長を指定する <see cref="T:System.Int32" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="feb66-124">An <see cref="T:System.Int32" /> object that specifies the minimum length of the integer value.</span></span></param>
        <param name="maxValue"><span data-ttu-id="feb66-125">整数値の最大長を指定する <see cref="T:System.Int32" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="feb66-125">An <see cref="T:System.Int32" /> object that specifies the maximum length of the integer value.</span></span></param>
        <param name="rangeIsExclusive"><span data-ttu-id="feb66-126">検証範囲が排他的かどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="feb66-126">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</span></span></param>
        <param name="resolution"><span data-ttu-id="feb66-127">一致する必要がある値を指定する <see cref="T:System.Int32" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="feb66-127">An <see cref="T:System.Int32" /> object that specifies a value that must be matched.</span></span></param>
        <summary><span data-ttu-id="feb66-128"><see cref="T:System.Configuration.IntegerValidator" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="feb66-128">Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb66-129"><xref:System.Int32>検証されている値でなければなりません、`resolution`検証に合格するために値。</span><span class="sxs-lookup"><span data-stu-id="feb66-129">The <xref:System.Int32> value being validated must be equal to the `resolution` value in order to pass validation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="feb66-130"><paramref name="resolution" /> は <see langword="0" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="feb66-130"><paramref name="resolution" /> is less than <see langword="0" />.</span></span>  
  
 <span data-ttu-id="feb66-131">\- または</span><span class="sxs-lookup"><span data-stu-id="feb66-131">\- or -</span></span>  
  
 <span data-ttu-id="feb66-132"><paramref name="minValue" /> が <paramref name="maxValue" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="feb66-132"><paramref name="minValue" /> is greater than <paramref name="maxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="feb66-133">オブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="feb66-133">The type of the object.</span></span></param>
        <summary><span data-ttu-id="feb66-134">オブジェクトの型を検証できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="feb66-134">Determines whether the type of the object can be validated.</span></span></summary>
        <returns>
          <span data-ttu-id="feb66-135"><paramref name="type" /> パラメーターが <see cref="T:System.Int32" /> 値と一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="feb66-135"><see langword="true" /> if the <paramref name="type" /> parameter matches an <see cref="T:System.Int32" /> value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="feb66-136">次のコード例は、<xref:System.Configuration.IntegerValidator.CanValidate%2A> メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="feb66-136">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.CanValidate%2A> method.</span></span> <span data-ttu-id="feb66-137">このコード例に示されている例の一部である、<xref:System.Configuration.IntegerValidator>クラスです。</span><span class="sxs-lookup"><span data-stu-id="feb66-137">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#3)]
 [!code-vb[System.Configuration.IntegerValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IntegerValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="feb66-138">検証する値。</span><span class="sxs-lookup"><span data-stu-id="feb66-138">The value to be validated.</span></span></param>
        <summary><span data-ttu-id="feb66-139">オブジェクトの値が有効かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="feb66-139">Determines whether the value of an object is valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feb66-140"><xref:System.Configuration.IntegerValidator>オブジェクトには、整数のオブジェクトを検証するために必要なルールが含まれています。</span><span class="sxs-lookup"><span data-stu-id="feb66-140">An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object.</span></span> <span data-ttu-id="feb66-141">インスタンスに、規則が確立される、<xref:System.Configuration.IntegerValidator>クラスを作成します。</span><span class="sxs-lookup"><span data-stu-id="feb66-141">The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created.</span></span> <span data-ttu-id="feb66-142">検証する整数値オブジェクトのパラメーターとして渡されます、<xref:System.Configuration.IntegerValidator.Validate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="feb66-142">The integer object to validate is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="feb66-143">次のコード例は、<xref:System.Configuration.IntegerValidator.Validate%2A> メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="feb66-143">The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.Validate%2A> method.</span></span> <span data-ttu-id="feb66-144">このコード例に示されている例の一部である、<xref:System.Configuration.IntegerValidator>クラスです。</span><span class="sxs-lookup"><span data-stu-id="feb66-144">This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.IntegerValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#4)]
 [!code-vb[System.Configuration.IntegerValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
      </Docs>
    </Member>
  </Members>
</Type>