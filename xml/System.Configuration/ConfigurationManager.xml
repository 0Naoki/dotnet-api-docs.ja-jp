<Type Name="ConfigurationManager" FullName="System.Configuration.ConfigurationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f2a6f055313bcbb7b7073b38f3f15a2fb903869" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36697461" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type ConfigurationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="41ac1-101">クライアント アプリケーションの構成ファイルにアクセスできるようにします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="41ac1-101">Provides access to configuration files for client applications.</span>
      </span>
      <span data-ttu-id="41ac1-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="41ac1-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ac1-103"><xref:System.Configuration.ConfigurationManager>クラスによってアクセス マシン、アプリケーション、およびユーザーの構成情報をできるようにします。</span><span class="sxs-lookup"><span data-stu-id="41ac1-103">The <xref:System.Configuration.ConfigurationManager> class enables you to access machine, application, and user configuration information.</span></span> <span data-ttu-id="41ac1-104">このクラスが置き換えられます、<xref:System.Configuration.ConfigurationSettings>クラスは推奨されなくなりました。</span><span class="sxs-lookup"><span data-stu-id="41ac1-104">This class replaces the <xref:System.Configuration.ConfigurationSettings> class, which is deprecated.</span></span> <span data-ttu-id="41ac1-105">Web アプリケーションを使用して、<xref:System.Web.Configuration.WebConfigurationManager>クラスです。</span><span class="sxs-lookup"><span data-stu-id="41ac1-105">For web applications, use the <xref:System.Web.Configuration.WebConfigurationManager> class.</span></span>  
  
 <span data-ttu-id="41ac1-106">使用する、<xref:System.Configuration.ConfigurationManager>クラス、プロジェクトを参照する必要があります、`System.Configuration`アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="41ac1-106">To use the <xref:System.Configuration.ConfigurationManager> class, your project must reference the `System.Configuration` assembly.</span></span> <span data-ttu-id="41ac1-107">既定では、コンソール アプリケーションと同様に、いくつかのプロジェクト テンプレートはこのアセンブリを参照しないため、手動で参照する必要があります。</span><span class="sxs-lookup"><span data-stu-id="41ac1-107">By default, some project templates, like Console Application, do not reference this assembly so you must manually reference it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41ac1-108">アプリケーション構成ファイルの場所と名前は、アプリケーションのホストに依存します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-108">The name and location of the application configuration file depend on the application's host.</span></span> <span data-ttu-id="41ac1-109">詳細については、次を参照してください。 [NIB: アプリケーション構成ファイル](http://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0)です。</span><span class="sxs-lookup"><span data-stu-id="41ac1-109">For more information, see [NIB: Application Configuration Files](http://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span></span>  
  
 <span data-ttu-id="41ac1-110">組み込みを使用する<xref:System.Configuration>の種類または構成情報を処理してから派生します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-110">You can use the built-in <xref:System.Configuration> types or derive from them to handle configuration information.</span></span> <span data-ttu-id="41ac1-111">これらの型を使用すると、構成情報を直接操作することができ、カスタム情報を含めるように構成ファイルを拡張することができます。</span><span class="sxs-lookup"><span data-stu-id="41ac1-111">By using these types, you can work directly with configuration information and you can extend configuration files to include custom information.</span></span>  
  
 <span data-ttu-id="41ac1-112"><xref:System.Configuration.ConfigurationManager>クラスには、次のタスクを実行できるようにするメンバーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="41ac1-112">The <xref:System.Configuration.ConfigurationManager> class includes members that enable you to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="41ac1-113">構成ファイルからセクションを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="41ac1-113">Read a section from a configuration file.</span></span> <span data-ttu-id="41ac1-114">構成情報にアクセスするには、呼び出し、<xref:System.Configuration.ConfigurationManager.GetSection%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="41ac1-114">To access configuration information, call the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="41ac1-115">などのいくつかのセクションの`appSettings`と`connectionStrings`を使用して、<xref:System.Configuration.ConfigurationManager.AppSettings%2A>と<xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A>クラスです。</span><span class="sxs-lookup"><span data-stu-id="41ac1-115">For some sections such as `appSettings` and `connectionStrings`, use the <xref:System.Configuration.ConfigurationManager.AppSettings%2A> and <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span></span> <span data-ttu-id="41ac1-116">これらのメンバー読み取り専用の操作を実行、構成の 1 つのキャッシュされたインスタンスを使用して、マルチ スレッドに注意してください。</span><span class="sxs-lookup"><span data-stu-id="41ac1-116">These members perform read-only operations, use a single cached instance of the configuration, and are multithread aware.</span></span>  
  
-   <span data-ttu-id="41ac1-117">全体の構成ファイルを読み書きします。</span><span class="sxs-lookup"><span data-stu-id="41ac1-117">Read and write configuration files as a whole.</span></span> <span data-ttu-id="41ac1-118">アプリケーションでは、読み取りでき、設定の書き込み構成任意のレベルでは、アプリケーション自体や他のアプリケーションまたはコンピューター、ローカルまたはリモートですることができます。</span><span class="sxs-lookup"><span data-stu-id="41ac1-118">Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely.</span></span> <span data-ttu-id="41ac1-119">によって提供されるメソッドのいずれかを使用して、<xref:System.Configuration.ConfigurationManager>クラス SampleApp.exe.config などの構成ファイルを開きます。これらのメソッドが返す、<xref:System.Configuration.Configuration>さらに関連付けられている構成ファイルで作業する使用できるメソッドとプロパティを公開するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="41ac1-119">Use one of the methods provided by the <xref:System.Configuration.ConfigurationManager> class to open a configuration file such as SampleApp.exe.config. These methods return a <xref:System.Configuration.Configuration> object that in turn exposes methods and properties you can use to work with the associated configuration files.</span></span> <span data-ttu-id="41ac1-120">メソッド読み取りまたは書き込み操作および実行ファイルが書き込まれるたびに、構成データを作成します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-120">The methods perform read or write operations and create the configuration data every time that a file is written.</span></span>  
  
-   <span data-ttu-id="41ac1-121">構成タスクをサポートします。</span><span class="sxs-lookup"><span data-stu-id="41ac1-121">Support configuration tasks.</span></span> <span data-ttu-id="41ac1-122">次の種類は、さまざまな構成タスクをサポートするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="41ac1-122">The following types are used to support various configuration tasks:</span></span>  
  
    -   <xref:System.Configuration.SectionInformation>  
  
    -   <xref:System.Configuration.PropertyInformation>  
  
    -   <xref:System.Configuration.PropertyInformationCollection>  
  
    -   <xref:System.Configuration.ElementInformation>  
  
    -   <xref:System.Configuration.ContextInformation>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroup>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroupCollection>  
  
     <span data-ttu-id="41ac1-123">既存の構成情報を使用するだけでなく作成およびなど、組み込みの構成の種類を拡張して、カスタム構成要素と作業、 <xref:System.Configuration.ConfigurationElement>、 <xref:System.Configuration.ConfigurationElementCollection>、 <xref:System.Configuration.ConfigurationProperty>、および<xref:System.Configuration.ConfigurationSection>クラスです。</span><span class="sxs-lookup"><span data-stu-id="41ac1-123">In addition to working with existing configuration information, you can create and work with custom configuration elements by extending the built-in configuration types such as the <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, and <xref:System.Configuration.ConfigurationSection> classes.</span></span> <span data-ttu-id="41ac1-124">組み込みの構成の種類をプログラムによって拡張する方法の例は、次を参照してください。<xref:System.Configuration.ConfigurationSection>です。</span><span class="sxs-lookup"><span data-stu-id="41ac1-124">For an example of how to extend a built-in configuration type programmatically, see <xref:System.Configuration.ConfigurationSection>.</span></span> <span data-ttu-id="41ac1-125">属性に基づくモデルを使用する組み込みの構成の種類を拡張する方法の例は、次を参照してください。<xref:System.Configuration.ConfigurationElement>です。</span><span class="sxs-lookup"><span data-stu-id="41ac1-125">For an example of how to extend a built-in configuration type that uses the attribute-based model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41ac1-126">最初の例では、アプリケーションの設定を読み取り、新しい設定を追加し、既存の設定を更新する単純なコンソール アプリケーションを示します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-126">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="41ac1-127">前の例では、プロジェクトに次のように、App.config ファイルを前提としています。</span><span class="sxs-lookup"><span data-stu-id="41ac1-127">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 <span data-ttu-id="41ac1-128">次の例では、データベースからデータを読み取る接続文字列を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-128">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="41ac1-129">前の例では、プロジェクトには、次に示すように、App.config が前提としています。</span><span class="sxs-lookup"><span data-stu-id="41ac1-129">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="41ac1-130">
        <para>
          <see cref="T:System.Configuration.Configuration" />クラスには、構成ファイルを編集するためのプログラムによるアクセスができるようにします。によって提供される開いているメソッドのいずれかを使用する<see cref="T:System.Configuration.ConfigurationManager" />です。これらのメソッドが返す、<see cref="T:System.Configuration.Configuration" />オブジェクトで、さらに必要なメソッドとプロパティを基になる構成ファイルの処理を提供します。これらのファイルの読み取りまたは書き込みにアクセスできます。構成ファイルを読み取るには使用<see cref="M:System.Configuration.Configuration.GetSection(System.String)" />または<see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" />構成情報を読み取れません。ユーザーまたはプロセスを読み取るは次のアクセス許可を持つ必要があります:-現在の構成階層レベルの構成ファイルに対する読み取り権限。 -ファイルを読み取るすべての親に対する権限の構成。使用することをお勧め、アプリケーションでは、独自の構成を読み取り専用のアクセスを必要とする場合、<see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />メソッドです。このメソッドのアクセスを提供する、キャッシュされた構成値を現在のアプリケーションに対してより優れたパフォーマンスは、<see cref="T:System.Configuration.Configuration" />クラスです。構成ファイルに書き込むのいずれかの操作を使用して、<see cref="Overload:System.Configuration.Configuration.Save" />メソッドです。ユーザーまたはプロセスに書き込む必要次のアクセス許可があります:-構成ファイルと現在の構成階層レベルのディレクトリに対する書き込みアクセス権。 のすべての構成ファイルで読み取りアクセス許可。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="41ac1-130">
          <para>The <see cref="T:System.Configuration.Configuration" /> class enables programmatic access for editing configuration files. You use one of the Open methods provided by <see cref="T:System.Configuration.ConfigurationManager" />. These methods return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the required methods and properties to handle the underlying configuration files. You can access these files for reading or writing.  To read the configuration files, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information. The user or process that reads must have the following permissions:  -   Read permission on the configuration file at the current configuration hierarchy level.  -   Read permissions on all the parent configuration files.  If your application needs read-only access to its own configuration, we recommend that you use the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method. This method provides access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.  To write to the configuration files, use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods. The user or process that writes must have the following permissions:  -   Write permission on the configuration file and directory at the current configuration hierarchy level.  -   Read permissions on all the configuration files.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppSettings : System.Collections.Specialized.NameValueCollection" Usage="System.Configuration.ConfigurationManager.AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41ac1-131">現在のアプリケーションの既定構成の <see cref="T:System.Configuration.AppSettingsSection" /> データを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-131">Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41ac1-132">現在のアプリケーションの既定構成の、<see cref="T:System.Configuration.AppSettingsSection" /> オブジェクトの内容を格納する <see cref="T:System.Collections.Specialized.NameValueCollection" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-132">Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ac1-133">A<xref:System.Configuration.AppSettingsSection>オブジェクトには、構成ファイルの内容が含まれています。`appSettings`セクションです。</span><span class="sxs-lookup"><span data-stu-id="41ac1-133">A <xref:System.Configuration.AppSettingsSection> object contains the contents of the configuration file's `appSettings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41ac1-134">最初の例では、アプリケーションの設定を読み取り、新しい設定を追加し、既存の設定を更新する単純なコンソール アプリケーションを示します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-134">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="41ac1-135">前の例では、プロジェクトに次のように、App.config ファイルを前提としています。</span><span class="sxs-lookup"><span data-stu-id="41ac1-135">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="41ac1-136">アプリケーション設定データを格納した <see cref="T:System.Collections.Specialized.NameValueCollection" /> オブジェクトを取得できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-136">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionStrings : System.Configuration.ConnectionStringSettingsCollection" Usage="System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41ac1-137">現在のアプリケーションの既定構成の <see cref="T:System.Configuration.ConnectionStringsSection" /> データを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-137">Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41ac1-138">現在のアプリケーションの既定構成の、<see cref="T:System.Configuration.ConnectionStringsSection" /> オブジェクトの内容を格納する <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-138">Returns a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ac1-139">A<xref:System.Configuration.ConnectionStringsSection>オブジェクトには、構成ファイルの内容が含まれています。`connectionStrings`セクションです。</span><span class="sxs-lookup"><span data-stu-id="41ac1-139">A <xref:System.Configuration.ConnectionStringsSection> object contains the contents of the configuration file's `connectionStrings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41ac1-140">次の例では、データベースからデータを読み取る接続文字列を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-140">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="41ac1-141">前の例では、プロジェクトには、次に示すように、App.config が前提としています。</span><span class="sxs-lookup"><span data-stu-id="41ac1-141">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="41ac1-142">
            <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> オブジェクトを取得できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-142">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetSection : string -&gt; obj" Usage="System.Configuration.ConfigurationManager.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="41ac1-143">構成セクションのパスと名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-143">The configuration section path and name.</span>
          </span>
          <span data-ttu-id="41ac1-144">ノード名は、"system.net/mailSettings/smtp" のように、スラッシュで区切られます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-144">Node names are separated by forward slashes, for example "system.net/mailSettings/smtp".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41ac1-145">現在のアプリケーションの既定構成の、指定した構成セクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-145">Retrieves a specified configuration section for the current application's default configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41ac1-146">指定した <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクト。セクションが存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-146">The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the section does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ac1-147">クライアント アプリケーションの場合は、このメソッドは、アプリケーション構成ファイル、ローカル ユーザーの構成ファイル、およびローミングの構成ファイルをマージすることによって取得された構成ファイルを取得します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-147">For client applications, this method retrieves a configuration file obtained by merging the application configuration file, the local user configuration file, and the roaming configuration file.</span></span>  
  
 <span data-ttu-id="41ac1-148"><xref:System.Configuration.ConfigurationManager.GetSection%2A>メソッドにアクセスする実行時の構成については、それを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="41ac1-148">The <xref:System.Configuration.ConfigurationManager.GetSection%2A> method accesses run-time configuration information that it cannot change.</span></span> <span data-ttu-id="41ac1-149">使用する、構成を変更する、 <xref:System.Configuration.Configuration.GetSection%2A> 構成ファイルを次の Open メソッドのいずれかを使用して取得するメソッド。</span><span class="sxs-lookup"><span data-stu-id="41ac1-149">To change the configuration, you use the <xref:System.Configuration.Configuration.GetSection%2A> method on the configuration file that you obtain by using one of the following Open methods:</span></span>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
   
  
## Examples  
 <span data-ttu-id="41ac1-150"><xref:System.Configuration.ConfigurationManager.GetSection%2A> メソッドを使用する方法の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-150">The following example shows how to use the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="41ac1-151">例では、ために用意されている長い例の一部である、<xref:System.Configuration.ConfigurationManager>クラスです。</span><span class="sxs-lookup"><span data-stu-id="41ac1-151">The example is part of a larger example that is provided for the <xref:System.Configuration.ConfigurationManager> class.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="41ac1-152">構成ファイルを読み込めませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-152">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="41ac1-153">
            <para>予期される構成の種類への戻り値をキャストする必要があります。可能性のあるキャスト例外を回避するを使用して、条件付きのキャスト操作など、 <see langword="as" /> c# または Visual Basic の関数の演算子にします。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-153">
              <para>You must cast the return value to the expected configuration type. To avoid possible casting exceptions, you should use a conditional casting operation such as the <see langword="as" /> operator in C# or the  function in Visual Basic.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41ac1-154">指定したクライアント構成ファイルを <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-154">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration userLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="userLevel">
          <span data-ttu-id="41ac1-155">構成を開く対象となる <see cref="T:System.Configuration.ConfigurationUserLevel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-155">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41ac1-156">現在のアプリケーションの構成ファイルを <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-156">Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41ac1-157">
            <see cref="T:System.Configuration.Configuration" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-157">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ac1-158">クライアント アプリケーションでは、すべてのユーザー、個々 のユーザーに適用される別の構成とローミング ユーザーに適用される構成に適用されるグローバル構成を使用します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-158">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="41ac1-159">`userLevel`ユーザー レベル (構成ファイルは、アプリケーションと同じディレクトリ) があるないかどうかを示すで開いている構成ファイルの場所を指定しますまたは、ユーザーごとのレベル (構成ファイルが、。アプリケーション設定のパス、ユーザー レベルによって決まります)。</span><span class="sxs-lookup"><span data-stu-id="41ac1-159">The `userLevel` parameter determines the location of the configuration file being opened by indicating whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level).</span></span>  
  
 <span data-ttu-id="41ac1-160">次のいずれかを渡すことによって、取得する構成値を指定して`userLevel`:</span><span class="sxs-lookup"><span data-stu-id="41ac1-160">Specify which configuration to get by passing one of the following values for `userLevel`:</span></span>  
  
-   <span data-ttu-id="41ac1-161">取得する、 <xref:System.Configuration.Configuration> 、すべてのユーザーに適用するオブジェクト設定`userLevel`に<xref:System.Configuration.ConfigurationUserLevel.None>です。</span><span class="sxs-lookup"><span data-stu-id="41ac1-161">To get the <xref:System.Configuration.Configuration> object that applies to all users, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.None>.</span></span>  
  
-   <span data-ttu-id="41ac1-162">ローカルに取得する<xref:System.Configuration.Configuration>、現在のユーザーに適用するオブジェクト設定`userLevel`に<xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>です。</span><span class="sxs-lookup"><span data-stu-id="41ac1-162">To get the local <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span></span>  
  
-   <span data-ttu-id="41ac1-163">ローミングを取得する<xref:System.Configuration.Configuration>、現在のユーザーに適用するオブジェクト設定`userLevel`に<xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>です。</span><span class="sxs-lookup"><span data-stu-id="41ac1-163">To get the roaming <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="41ac1-164">取得する、<xref:System.Configuration.Configuration>コードする必要がありますに対する読み取り権限の設定を継承するすべての構成ファイルのリソースのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="41ac1-164">To get the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="41ac1-165">構成ファイルを更新するには、コードは、構成ファイルとそれが存在するディレクトリの両方に対する書き込みアクセス許可をさらが必要です。</span><span class="sxs-lookup"><span data-stu-id="41ac1-165">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41ac1-166"><xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> メソッドを使用するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-166">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#5)]
 [!code-vb[System.Configuration.ConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="41ac1-167">構成ファイルを読み込めませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-167">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (string exePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(string exePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (exePath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::String ^ exePath);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration exePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exePath">
          <span data-ttu-id="41ac1-168">実行可能 (exe) ファイルのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-168">The path of the executable (exe) file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41ac1-169">指定したクライアント構成ファイルを <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-169">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41ac1-170">
            <see cref="T:System.Configuration.Configuration" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-170">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ac1-171">クライアント アプリケーションでは、すべてのユーザー、個々 のユーザーに適用される別の構成とローミング ユーザーに適用される構成に適用されるグローバル構成を使用します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-171">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="41ac1-172">`userLevel`値が開かれている構成ファイルの場所を決定します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-172">The `userLevel` value determines the location of the configuration file being opened.</span></span> <span data-ttu-id="41ac1-173">ユーザー レベル (構成ファイルは、アプリケーションと同じディレクトリ) を持たないかどうかを示します (構成ファイルは、ユーザー レベルの種類によって決まりますアプリケーション設定のパスは). ユーザーごとのレベルまたはします。</span><span class="sxs-lookup"><span data-stu-id="41ac1-173">It indicates whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level type.).</span></span>  
  
 <span data-ttu-id="41ac1-174">呼び出すことと同じではこのメソッドのオーバー ロードを呼び出して、<xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29>を持つオーバー ロード、`preLoad`パラメーターに設定`false`です。</span><span class="sxs-lookup"><span data-stu-id="41ac1-174">Calling this method overload is equivalent to calling the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> overload with the `preLoad` parameter set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41ac1-175"><xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> メソッドを使用するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-175">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#6)]
 [!code-vb[System.Configuration.ConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="41ac1-176">構成ファイルを読み込めませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-176">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : unit -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMachineConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41ac1-177">現在のコンピューターのマシン構成ファイルを <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-177">Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41ac1-178">
            <see cref="T:System.Configuration.Configuration" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-178">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ac1-179">マシン構成設定は、ローカルのアプリケーション用にオーバーライドしない限り、コンピューター全体と、上に存在するすべてのアプリケーションに適用されます。</span><span class="sxs-lookup"><span data-stu-id="41ac1-179">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="41ac1-180">マシン構成設定は、現在実行中の .NET Framework のバージョンの Machine.config ファイルから読み取られます。</span><span class="sxs-lookup"><span data-stu-id="41ac1-180">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="41ac1-181">Machine.config ファイルは、次のサブディレクトリにあります。</span><span class="sxs-lookup"><span data-stu-id="41ac1-181">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="41ac1-182">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="41ac1-182">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41ac1-183">取得する、<xref:System.Configuration.Configuration>コードする必要がありますに対する読み取り権限の設定を継承するすべての構成ファイルのリソースのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="41ac1-183">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="41ac1-184">構成ファイルを更新するには、コードは、構成ファイルとそれが存在するディレクトリの両方に対する書き込みアクセス許可をさらが必要です。</span><span class="sxs-lookup"><span data-stu-id="41ac1-184">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="41ac1-185">コンピューター上にインストールされている .NET Framework の他のバージョンの Machine.config ファイルにアクセスすることはできません。</span><span class="sxs-lookup"><span data-stu-id="41ac1-185">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41ac1-186">次のコード例を使用する方法を示しています、<xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>構成ファイルに含まれているすべてのセクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-186">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> method to obtain all sections that are contained in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="41ac1-187">構成ファイルを読み込めませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-187">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41ac1-188">指定したクライアント構成ファイルを <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-188">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="41ac1-189">アプリケーションの既定の構成ファイルの代わりに使用する構成ファイルを参照する <see cref="T:System.Configuration.ExeConfigurationFileMap" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-189">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span>
          </span>
        </param>
        <param name="userLevel">
          <span data-ttu-id="41ac1-190">構成を開く対象となる <see cref="T:System.Configuration.ConfigurationUserLevel" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-190">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41ac1-191">指定したクライアント構成ファイルを、指定したファイル マップとユーザー レベルを使用する <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-191">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41ac1-192">構成オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-192">The configuration object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ac1-193"><xref:System.Configuration.ConfigurationUserLevel>オブジェクトが開かれている構成ファイルの場所を決定します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-193">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file being opened.</span></span> <span data-ttu-id="41ac1-194">ファイルにユーザー レベル (構成ファイルは、アプリケーションと同じディレクトリ) が存在しないかどうかを示す、またはユーザーごとのレベル (構成ファイルがアプリケーション設定のパスによって決まります`userLevel`)。</span><span class="sxs-lookup"><span data-stu-id="41ac1-194">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41ac1-195">取得する、<xref:System.Configuration.Configuration>コードする必要がありますに対する読み取り権限の設定を継承するすべての構成ファイルのリソースのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="41ac1-195">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="41ac1-196">構成ファイルを更新するには、コードは、構成ファイルとそれが存在するディレクトリの両方に対する書き込みアクセス許可をさらが必要です。</span><span class="sxs-lookup"><span data-stu-id="41ac1-196">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41ac1-197">次のコード例を使用する方法を示しています、<xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>構成ファイルに含まれるすべてのセクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-197">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> method to obtain all sections that are contained by the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#9)]
 [!code-vb[System.Configuration.ConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="41ac1-198">構成ファイルを読み込めませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-198">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel, bool preLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel, preLoad As Boolean) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel * bool -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel, preLoad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
        <Parameter Name="preLoad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="41ac1-199">既定のアプリケーションの構成ファイルの代わりに使用する構成ファイルを参照する <see cref="T:System.Configuration.ExeConfigurationFileMap" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-199">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references the configuration file to use instead of the default application configuration file.</span>
          </span>
        </param>
        <param name="userLevel">
          <span data-ttu-id="41ac1-200">構成を開く対象となる <see cref="T:System.Configuration.ConfigurationUserLevel" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-200">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span>
          </span>
        </param>
        <param name="preLoad">
          <span data-ttu-id="41ac1-201">すべてのセクション グループとセクションをプリロードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-201">
              <see langword="true" /> to preload all section groups and sections; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41ac1-202">指定したクライアント構成ファイルを、指定したファイル マップ、ユーザー レベル、およびプリロード オプションを使用する <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-202">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41ac1-203">構成オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-203">The configuration object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ac1-204"><xref:System.Configuration.ConfigurationUserLevel>オブジェクトが開かれる、構成ファイルの場所を決定します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-204">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file that is being opened.</span></span> <span data-ttu-id="41ac1-205">ファイルにユーザー レベル (構成ファイルは、アプリケーションと同じディレクトリ) が存在しないかどうかを示しますまたはユーザーごとのレベル (構成ファイルがアプリケーション設定のパスによって決定される`userLevel`)。</span><span class="sxs-lookup"><span data-stu-id="41ac1-205">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path that is determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41ac1-206">取得する、<xref:System.Configuration.Configuration>コードする必要がありますに対する読み取り権限の設定を継承するすべての構成ファイルのリソースのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="41ac1-206">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="41ac1-207">構成ファイルを更新するには、コードは、構成ファイルとそれが存在するディレクトリの両方に対する書き込みアクセス許可をさらが必要です。</span><span class="sxs-lookup"><span data-stu-id="41ac1-207">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
 <span data-ttu-id="41ac1-208">コード例は、次を参照してください。、<xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="41ac1-208">For a code example, see the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="41ac1-209">構成ファイルを読み込めませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-209">A configuration file could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration fileMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="41ac1-210">アプリケーションの既定の構成ファイルの代わりに使用する構成ファイルを参照する <see cref="T:System.Configuration.ExeConfigurationFileMap" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-210">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41ac1-211">マシン構成ファイルを、指定したファイル マップを使用する <see cref="T:System.Configuration.Configuration" /> オブジェクトとして開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-211">Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41ac1-212">
            <see cref="T:System.Configuration.Configuration" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-212">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ac1-213">マシン構成設定は、ローカルのアプリケーション用にオーバーライドしない限り、コンピューター全体と、上に存在するすべてのアプリケーションに適用されます。</span><span class="sxs-lookup"><span data-stu-id="41ac1-213">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="41ac1-214">マシン構成設定は、現在実行中の .NET Framework のバージョンの Machine.config ファイルから読み取られます。</span><span class="sxs-lookup"><span data-stu-id="41ac1-214">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="41ac1-215">Machine.config ファイルは、次のサブディレクトリにあります。</span><span class="sxs-lookup"><span data-stu-id="41ac1-215">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="41ac1-216">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="41ac1-216">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41ac1-217">取得する、<xref:System.Configuration.Configuration>コードする必要がありますに対する読み取り権限の設定を継承するすべての構成ファイルのリソースのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="41ac1-217">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="41ac1-218">構成ファイルを更新するには、コードは、構成ファイルとそれが存在するディレクトリの両方に対する書き込みアクセス許可をさらが必要です。</span><span class="sxs-lookup"><span data-stu-id="41ac1-218">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="41ac1-219">コンピューター上にインストールされている .NET Framework の他のバージョンの Machine.config ファイルにアクセスすることはできません。</span><span class="sxs-lookup"><span data-stu-id="41ac1-219">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41ac1-220">次のコード例を使用する方法を示しています、<xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A>構成ファイル内のすべてのセクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="41ac1-220">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> method to obtain all sections in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="41ac1-221">構成ファイルを読み込めませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-221">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationFileMap" />
      </Docs>
    </Member>
    <Member MemberName="RefreshSection">
      <MemberSignature Language="C#" Value="public static void RefreshSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RefreshSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RefreshSection (sectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RefreshSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member RefreshSection : string -&gt; unit" Usage="System.Configuration.ConfigurationManager.RefreshSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="41ac1-222">更新する構成セクション名、またはセクションの構成パスとセクション名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-222">The configuration section name or the configuration path and section name of the section to refresh.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41ac1-223">名前付きセクションを次回取得するときに、ディスクから再読み取りするように、名前付きセクションを更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41ac1-223">Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41ac1-224">このメソッドは、他のセクションに影響を与えずに、指定された構成セクションのキャッシュを無効にします。</span><span class="sxs-lookup"><span data-stu-id="41ac1-224">This method invalidates the cache for the specified configuration section without affecting other sections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41ac1-225">次のコード例を使用する方法を示しています、<xref:System.Configuration.ConfigurationManager.RefreshSection%2A>アプリケーション設定の構成セクションを更新する方法です。</span><span class="sxs-lookup"><span data-stu-id="41ac1-225">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> method to refresh the application settings configuration section.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>