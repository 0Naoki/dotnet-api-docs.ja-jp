<Type Name="ServerWebConfig" FullName="System.EnterpriseServices.Internal.ServerWebConfig">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc61d305b221c86a2457c8b1432df80ab1178d33" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37655946" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServerWebConfig : System.EnterpriseServices.Internal.IServerWebConfig" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServerWebConfig extends System.Object implements class System.EnterpriseServices.Internal.IServerWebConfig" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ServerWebConfig" />
  <TypeSignature Language="VB.NET" Value="Public Class ServerWebConfig&#xA;Implements IServerWebConfig" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServerWebConfig : System::EnterpriseServices::Internal::IServerWebConfig" />
  <TypeSignature Language="F#" Value="type ServerWebConfig = class&#xA;    interface IServerWebConfig" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IServerWebConfig</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>SOAP 対応の COM+ アプリケーションの Web.config ファイルを作成します。 また、アプリケーションで発行されている COM インターフェイスのファイルにコンポーネント エントリを追加することもできます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig>でインターネット インフォメーション サービス (IIS) 6.0 SOAP 対応の COM + アプリケーションの仮想ルートの作成時に Web.config ファイルを作成するクラスを使用します。 XML 要素をアプリケーションに追加されるコンポーネント インターフェイスの Web.config ファイルを追加ことできますも。  
  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig> .NET Framework では内部的に使用されます。 コード内で直接使用する必要はありません。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServerWebConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServerWebConfig();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.EnterpriseServices.Internal.ServerWebConfig" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddElement">
      <MemberSignature Language="C#" Value="public void AddElement (string FilePath, string AssemblyName, string TypeName, string ProgId, string WkoMode, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddElement(string FilePath, string AssemblyName, string TypeName, string ProgId, string WkoMode, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddElement (FilePath As String, AssemblyName As String, TypeName As String, ProgId As String, WkoMode As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddElement(System::String ^ FilePath, System::String ^ AssemblyName, System::String ^ TypeName, System::String ^ ProgId, System::String ^ WkoMode, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member AddElement : string * string * string * string * string *  -&gt; unit&#xA;override this.AddElement : string * string * string * string * string *  -&gt; unit" Usage="serverWebConfig.AddElement (FilePath, AssemblyName, TypeName, ProgId, WkoMode, Error)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String" />
        <Parameter Name="TypeName" Type="System.String" />
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="WkoMode" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">既存の Web.config ファイルのパス。</param>
        <param name="AssemblyName">追加される型を格納するアセンブリの名前。</param>
        <param name="TypeName">追加される型の名前。</param>
        <param name="ProgId">追加される型のプログラム ID。</param>
        <param name="WkoMode">既知のオブジェクトをアクティブにする方法を示す <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" /> 列挙体のメンバーの名前に対応した文字列定数。</param>
        <param name="Error">エラー メッセージの書き込み先の文字列。</param>
        <summary>SOAP 対応の COM+ アプリケーションで発行されている COM インターフェイス の Web.config ファイルに、XML 要素を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定した型の<xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A>メソッドは、Web.config ファイルに追加、`<wellknown>`と`<activated>`要素の子として、`<service>`次の XPath を持つ要素。  
  
 `/configuration/system.runtime.remoting/application/service`  
  
 `AssemblyName`、 `TypeName`、 `ProgId`、および`WkoMode`パラメーターが追加された要素を 2 つの属性値に組み込まれます。  
  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A> 呼び出さないで直接します。 代わりに、<xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (string FilePath, string FilePrefix, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(string FilePath, string FilePrefix, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.Create(System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create (FilePath As String, FilePrefix As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Create(System::String ^ FilePath, System::String ^ FilePrefix, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member Create : string * string *  -&gt; unit&#xA;override this.Create : string * string *  -&gt; unit" Usage="serverWebConfig.Create (FilePath, FilePrefix, Error)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IServerWebConfig.Create(System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="FilePrefix" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">構成ファイルを作成するフォルダー。</param>
        <param name="FilePrefix">config という拡張子の追加先の文字列値である "Web"。</param>
        <param name="Error">エラー メッセージの書き込み先の文字列。</param>
        <summary>SOAP 対応の COM+ アプリケーションの Web.config ファイルを作成し、発行されている COM インターフェイスのファイルに XML 要素を追加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A>メソッドには、次の XPath を持つ空要素の階層を含む Web.config ファイルが作成されます。  
  
```  
/configuration/system.runtime.remoting/application/service  
```  
  
 インスタンス化ではなく、<xref:System.EnterpriseServices.Internal.ServerWebConfig>クラスのオブジェクトと呼び出し<xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A>を直接呼び出して、<xref:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>