<Type Name="IComSoapPublisher" FullName="System.EnterpriseServices.Internal.IComSoapPublisher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="27108ab5572e3d72aa2b7c6b0d1a777c188569fb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36487510" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComSoapPublisher" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComSoapPublisher" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IComSoapPublisher" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComSoapPublisher" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComSoapPublisher" />
  <TypeSignature Language="F#" Value="type IComSoapPublisher = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("d8013eee-730b-45e2-ba24-874b7242c425")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>SOAP 対応 COM+ アプリケーションのための COM インターフェイスを発行します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 実装<xref:System.EnterpriseServices.Internal.IComSoapPublisher>は<xref:System.EnterpriseServices.Internal.Publish>; 詳細については、そのトピックを参照してください。  
  
 <xref:System.EnterpriseServices.Internal.IComSoapPublisher> .NET Framework によって内部的に使用されます。 コード内で直接使用する必要はありません。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateMailBox">
      <MemberSignature Language="C#" Value="public void CreateMailBox (string RootMailServer, string MailBox, out string SmtpName, out string Domain, out string PhysicalPath, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateMailBox(string RootMailServer, string MailBox, [out] string&amp; SmtpName, [out] string&amp; Domain, [out] string&amp; PhysicalPath, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateMailBox (RootMailServer As String, MailBox As String, ByRef SmtpName As String, ByRef Domain As String, ByRef PhysicalPath As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateMailBox(System::String ^ RootMailServer, System::String ^ MailBox, [Runtime::InteropServices::Out] System::String ^ % SmtpName, [Runtime::InteropServices::Out] System::String ^ % Domain, [Runtime::InteropServices::Out] System::String ^ % PhysicalPath, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member CreateMailBox : string * string *  *  *  *  -&gt; unit" Usage="iComSoapPublisher.CreateMailBox (RootMailServer, MailBox, SmtpName, Domain, PhysicalPath, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootMailServer" Type="System.String" />
        <Parameter Name="MailBox" Type="System.String" />
        <Parameter Name="SmtpName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="Domain" Type="System.String&amp;" RefType="out" />
        <Parameter Name="PhysicalPath" Type="System.String&amp;" RefType="out" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootMailServer">ルート メール サーバーの URL。</param>
        <param name="MailBox">作成するメールボックス。</param>
        <param name="SmtpName">このメソッドが返されるときに、このパラメーターに、メールボックスが入っている SMTP (Simple Mail Transport Protocol) サーバーの名前を格納します。</param>
        <param name="Domain">このメソッドが返されるときに、このパラメーターに SMTP サーバーのドメインを格納します。</param>
        <param name="PhysicalPath">このメソッドが返されるときに、このパラメーターにメールボックスのファイル システム パスを格納します。</param>
        <param name="Error">問題が発生した場合は、このメソッドが返されるときに、このパラメーターにエラー メッセージを格納します。</param>
        <summary>指定した URL の場所に、SOAP 対応の COM+ アプリケーション メールボックスを作成します。 一部しか実装されていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 完全に実装します。メールボックスは現在作成されません。 "COM + SOAP services SMTP パブリケーションはサポートされていません"というエラー メッセージを返します  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出しチェイン内の呼び出し元に、アンマネージ コードへのアクセス許可がありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateVirtualRoot">
      <MemberSignature Language="C#" Value="public void CreateVirtualRoot (string Operation, string FullUrl, out string BaseUrl, out string VirtualRoot, out string PhysicalPath, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateVirtualRoot(string Operation, string FullUrl, [out] string&amp; BaseUrl, [out] string&amp; VirtualRoot, [out] string&amp; PhysicalPath, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateVirtualRoot (Operation As String, FullUrl As String, ByRef BaseUrl As String, ByRef VirtualRoot As String, ByRef PhysicalPath As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateVirtualRoot(System::String ^ Operation, System::String ^ FullUrl, [Runtime::InteropServices::Out] System::String ^ % BaseUrl, [Runtime::InteropServices::Out] System::String ^ % VirtualRoot, [Runtime::InteropServices::Out] System::String ^ % PhysicalPath, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member CreateVirtualRoot : string * string *  *  *  *  -&gt; unit" Usage="iComSoapPublisher.CreateVirtualRoot (Operation, FullUrl, BaseUrl, VirtualRoot, PhysicalPath, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operation" Type="System.String" />
        <Parameter Name="FullUrl" Type="System.String" />
        <Parameter Name="BaseUrl" Type="System.String&amp;" RefType="out" />
        <Parameter Name="VirtualRoot" Type="System.String&amp;" RefType="out" />
        <Parameter Name="PhysicalPath" Type="System.String&amp;" RefType="out" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Operation">実行する操作。</param>
        <param name="FullUrl">仮想ルートの完全な URL アドレス。</param>
        <param name="BaseUrl">このメソッドが返されるときに、このパラメーターにベース URL アドレスを格納します。</param>
        <param name="VirtualRoot">このメソッドが返されるときに、このパラメーターに仮想ルートの名前を格納します。</param>
        <param name="PhysicalPath">このメソッドが返されるときに、このパラメーターに仮想ルートのファイル パスを格納します。</param>
        <param name="Error">問題が発生した場合は、このメソッドが返されるときに、このパラメーターにエラー メッセージを格納します。</param>
        <summary>SOAP 対応の COM+ アプリケーションの仮想ルートを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 推奨<xref:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx%2A>の代わりに使用する<xref:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot%2A>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出しチェイン内の呼び出し元に、アンマネージ コードへのアクセス許可がありません。  または、呼び出し元に、ドメイン ネーム システム (DNS) 情報にアクセスするためのアクセス許可がありません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="FullUrl" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ローカル ホスト名を解決するときにエラーが発生しました。</exception>
        <exception cref="T:System.UriFormatException">
          <paramref name="FullUrl" /> が空です。  または、<paramref name="FullUrl" /> に指定されたスキームが無効です。  または、<paramref name="FullUrl" /> に、3 つ以上の連続するスラッシュが含まれています。  または、<paramref name="FullUrl" /> に指定されたパスワードが無効です。  または、<paramref name="FullUrl" /> に指定されたホスト名が無効です。  または、<paramref name="FullUrl" /> に指定されたファイル名が無効です。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteMailBox">
      <MemberSignature Language="C#" Value="public void DeleteMailBox (string RootMailServer, string MailBox, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteMailBox(string RootMailServer, string MailBox, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteMailBox (RootMailServer As String, MailBox As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteMailBox(System::String ^ RootMailServer, System::String ^ MailBox, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member DeleteMailBox : string * string *  -&gt; unit" Usage="iComSoapPublisher.DeleteMailBox (RootMailServer, MailBox, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootMailServer" Type="System.String" />
        <Parameter Name="MailBox" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootMailServer">ルート メール サーバーの URL。</param>
        <param name="MailBox">削除対象のメールボックス。</param>
        <param name="Error">問題が発生した場合は、このメソッドが返されるときに、このパラメーターにエラー メッセージを格納します。</param>
        <summary>指定した URL にある SOAP 対応の COM+ アプリケーションのメール ボックスを削除します。 一部しか実装されていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 完全に実装します。メールボックスは削除されません。 "COM + SOAP services SMTP パブリケーションはサポートされていません"というエラー メッセージを返します  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出しチェイン内の呼び出し元に、アンマネージ コードへのアクセス許可がありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualRoot">
      <MemberSignature Language="C#" Value="public void DeleteVirtualRoot (string RootWebServer, string FullUrl, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteVirtualRoot(string RootWebServer, string FullUrl, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteVirtualRoot (RootWebServer As String, FullUrl As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteVirtualRoot(System::String ^ RootWebServer, System::String ^ FullUrl, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member DeleteVirtualRoot : string * string *  -&gt; unit" Usage="iComSoapPublisher.DeleteVirtualRoot (RootWebServer, FullUrl, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootWebServer" Type="System.String" />
        <Parameter Name="FullUrl" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootWebServer">ルート Web サーバー。</param>
        <param name="FullUrl">仮想ルートの完全な URL アドレス。</param>
        <param name="Error">問題が発生した場合は、このメソッドが返されるときに、このパラメーターにエラー メッセージを格納します。</param>
        <summary>SOAP 対応の COM+ アプリケーションの仮想ルートを削除します。 一部しか実装されていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 機能は、<xref:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot%2A>はまだありません。  
  
> [!CAUTION]
>  現在、このメソッドは、エラーがなかったを返しますが、仮想ルートは削除されません。  
  
 機能が使用可能になるときに、推奨される方法になります<xref:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx%2A>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出しチェイン内の呼び出し元に、アンマネージ コードへのアクセス許可がありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GacInstall">
      <MemberSignature Language="C#" Value="public void GacInstall (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GacInstall(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GacInstall (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GacInstall(System::String ^ AssemblyPath);" />
      <MemberSignature Language="F#" Value="abstract member GacInstall : string -&gt; unit" Usage="iComSoapPublisher.GacInstall AssemblyPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath">アセンブリのファイル システム パス。</param>
        <summary>グローバル アセンブリ キャッシュにアセンブリをインストールします。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">呼び出しチェイン内の呼び出し元に、アンマネージ コードへのアクセス許可がありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GacRemove">
      <MemberSignature Language="C#" Value="public void GacRemove (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GacRemove(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GacRemove (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GacRemove(System::String ^ AssemblyPath);" />
      <MemberSignature Language="F#" Value="abstract member GacRemove : string -&gt; unit" Usage="iComSoapPublisher.GacRemove AssemblyPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath">アセンブリのファイル システム パス。</param>
        <summary>グローバル アセンブリ キャッシュからアセンブリを削除します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="AssemblyPath" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="AssemblyPath" /> が空です。</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="AssemblyPath" /> が見つかりません。</exception>
        <exception cref="T:System.IO.FileLoadException">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</exception>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="AssemblyPath" /> は正しいアセンブリではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyNameForCache">
      <MemberSignature Language="C#" Value="public void GetAssemblyNameForCache (string TypeLibPath, out string CachePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetAssemblyNameForCache(string TypeLibPath, [out] string&amp; CachePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAssemblyNameForCache (TypeLibPath As String, ByRef CachePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetAssemblyNameForCache(System::String ^ TypeLibPath, [Runtime::InteropServices::Out] System::String ^ % CachePath);" />
      <MemberSignature Language="F#" Value="abstract member GetAssemblyNameForCache : string *  -&gt; unit" Usage="iComSoapPublisher.GetAssemblyNameForCache (TypeLibPath, CachePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TypeLibPath" Type="System.String" />
        <Parameter Name="CachePath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="TypeLibPath">タイプ ライブラリを格納しているファイルへのパス。</param>
        <param name="CachePath">このメソッドが返されるときに、このパラメーターに SoapCache ディレクトリ内のプロキシ アセンブリの完全パスを格納します。</param>
        <summary>SoapCache ディレクトリ内の厳密な名前付き、署名付きの生成済みアセンブリの完全パスを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アンマネージ COM + コンポーネントの SOAP エンドポイントとして .NET リモート処理を介して公開する、プロキシは、アンマネージ コンポーネントを .NET Framework を使用できるようにに生成する必要があります。 これは、プログラムでタイプ ライブラリ インポーター (Tlbimp.exe) と同じ手順を実行することで、[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]プロキシ メタデータ アセンブリにアンマネージ COM + のタイプ ライブラリを変換するために使用するツールです。 クライアントが成功する SOAP 経由でライセンス認証、ただし、クライアントとサーバーのマシン必要があります共有同じ厳密な名前の署名済みメタデータ プロキシ。 このため、アンマネージの COM + コンポーネント、管理対象のプロキシ アセンブリが生成されたときに、厳密な名前のキーが生成し、プロキシ アセンブリに署名するために使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="TypeLibPath" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
        <exception cref="T:System.ArgumentException">ファイル名は空で、空白のみで構成されているか、正しくない文字を含んでいます。</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <paramref name="TypeLibPath" /> へのアクセスが拒否されました。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="TypeLibPath" /> の文字列の中に、コロン (:) が含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeNameFromProgId">
      <MemberSignature Language="C#" Value="public string GetTypeNameFromProgId (string AssemblyPath, string ProgId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeNameFromProgId(string AssemblyPath, string ProgId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeNameFromProgId (AssemblyPath As String, ProgId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTypeNameFromProgId(System::String ^ AssemblyPath, System::String ^ ProgId);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeNameFromProgId : string * string -&gt; string" Usage="iComSoapPublisher.GetTypeNameFromProgId (AssemblyPath, ProgId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
        <Parameter Name="ProgId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath">アセンブリのファイル システム パス。</param>
        <param name="ProgId">クラスのプログラム ID。</param>
        <summary>アセンブリの ProgID に一致する型名を返します。</summary>
        <returns>ProgID と一致する型名。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">呼び出しチェイン内の呼び出し元に、アンマネージ コードへのアクセス許可がありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessClientTlb">
      <MemberSignature Language="C#" Value="public void ProcessClientTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string VRoot, string BaseUrl, string Mode, string Transport, out string AssemblyName, out string TypeName, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessClientTlb(string ProgId, string SrcTlbPath, string PhysicalPath, string VRoot, string BaseUrl, string Mode, string Transport, [out] string&amp; AssemblyName, [out] string&amp; TypeName, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessClientTlb (ProgId As String, SrcTlbPath As String, PhysicalPath As String, VRoot As String, BaseUrl As String, Mode As String, Transport As String, ByRef AssemblyName As String, ByRef TypeName As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessClientTlb(System::String ^ ProgId, System::String ^ SrcTlbPath, System::String ^ PhysicalPath, System::String ^ VRoot, System::String ^ BaseUrl, System::String ^ Mode, System::String ^ Transport, [Runtime::InteropServices::Out] System::String ^ % AssemblyName, [Runtime::InteropServices::Out] System::String ^ % TypeName, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member ProcessClientTlb : string * string * string * string * string * string * string *  *  *  -&gt; unit" Usage="iComSoapPublisher.ProcessClientTlb (ProgId, SrcTlbPath, PhysicalPath, VRoot, BaseUrl, Mode, Transport, AssemblyName, TypeName, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="SrcTlbPath" Type="System.String" />
        <Parameter Name="PhysicalPath" Type="System.String" />
        <Parameter Name="VRoot" Type="System.String" />
        <Parameter Name="BaseUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
        <Parameter Name="Transport" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="TypeName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ProgId">クラスのプログラム ID。</param>
        <param name="SrcTlbPath">タイプ ライブラリを格納しているファイルへのパス。</param>
        <param name="PhysicalPath">Web アプリケーション ディレクトリ。</param>
        <param name="VRoot">仮想ルートの名前。</param>
        <param name="BaseUrl">仮想ルートを表すベース URL。</param>
        <param name="Mode">アクティベーション モード。</param>
        <param name="Transport">使用しません。 このパラメーターに <see langword="null" /> を指定します。</param>
        <param name="AssemblyName">このメソッドが返されるときに、このパラメーターにアセンブリの表示名を格納します。</param>
        <param name="TypeName">このメソッドが返されるときに、このパラメーターにアセンブリの完全修飾型名を格納します。</param>
        <param name="Error">問題が発生した場合は、このメソッドが返されるときに、このパラメーターにエラー メッセージを格納します。</param>
        <summary>クライアントのタイプ ライブラリを処理し、クライアントに構成ファイルを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、リモート処理構成ファイルを生成するクライアント プロキシのインポート時に使用されます。  
  
 実装では場合、`Mode`パラメーターが"wellknownobject"または空の文字列 ("")、既知のオブジェクトが想定されます。それ以外の場合、クライアントのライセンス認証が使用されます。  
  
 推奨<xref:System.EnterpriseServices.Internal.ISoapClientImport.ProcessClientTlbEx%2A>の代わりに使用する<xref:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb%2A>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出しチェイン内の呼び出し元に、アンマネージ コードへのアクセス許可がありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessServerTlb">
      <MemberSignature Language="C#" Value="public void ProcessServerTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string Operation, out string AssemblyName, out string TypeName, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessServerTlb(string ProgId, string SrcTlbPath, string PhysicalPath, string Operation, [out] string&amp; AssemblyName, [out] string&amp; TypeName, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessServerTlb (ProgId As String, SrcTlbPath As String, PhysicalPath As String, Operation As String, ByRef AssemblyName As String, ByRef TypeName As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessServerTlb(System::String ^ ProgId, System::String ^ SrcTlbPath, System::String ^ PhysicalPath, System::String ^ Operation, [Runtime::InteropServices::Out] System::String ^ % AssemblyName, [Runtime::InteropServices::Out] System::String ^ % TypeName, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member ProcessServerTlb : string * string * string * string *  *  *  -&gt; unit" Usage="iComSoapPublisher.ProcessServerTlb (ProgId, SrcTlbPath, PhysicalPath, Operation, AssemblyName, TypeName, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="SrcTlbPath" Type="System.String" />
        <Parameter Name="PhysicalPath" Type="System.String" />
        <Parameter Name="Operation" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="TypeName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ProgId">クラスのプログラム ID。</param>
        <param name="SrcTlbPath">タイプ ライブラリを格納しているファイルへのパス。</param>
        <param name="PhysicalPath">Web アプリケーション ディレクトリ。</param>
        <param name="Operation">実行する操作。</param>
        <param name="AssemblyName">このメソッドが返されるときに、このパラメーターにアセンブリの表示名を格納します。</param>
        <param name="TypeName">このメソッドが返されるときに、このパラメーターにアセンブリの完全修飾型名を格納します。</param>
        <param name="Error">問題が発生した場合は、このメソッドが返されるときに、このパラメーターにエラー メッセージを格納します。</param>
        <summary>サーバーのタイプ ライブラリを処理し、Web.config ファイルおよび Default.disco ファイルにコンポーネント エントリを追加または削除します。 必要に応じてプロキシを生成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 COM + コンポーネントの web.config ファイルと値のファイルのエントリを生成します。 必要に応じてプロキシを生成します。  
  
 推奨<xref:System.EnterpriseServices.Internal.ISoapServerTlb.AddServerTlb%2A>と<xref:System.EnterpriseServices.Internal.ISoapServerTlb.DeleteServerTlb%2A>の代わりに使用する<xref:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb%2A>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出しチェイン内の呼び出し元に、アンマネージ コードへのアクセス許可がありません。</exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">
          <paramref name="SrcTlbPath" /> パラメーターが scrobj.dll を参照しました。そのため、スクリプト コンポーネントの SOAP 発行はサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterAssembly">
      <MemberSignature Language="C#" Value="public void RegisterAssembly (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAssembly(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterAssembly (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterAssembly(System::String ^ AssemblyPath);" />
      <MemberSignature Language="F#" Value="abstract member RegisterAssembly : string -&gt; unit" Usage="iComSoapPublisher.RegisterAssembly AssemblyPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath">アセンブリのファイル システム パス。</param>
        <summary>COM 相互運用のアセンブリを登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 実装<xref:System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly%2A>アセンブリ登録ツール (Regasm.exe) を使用して、アセンブリ内で作成可能なクラスを登録します。 詳細については、次を参照してください。 [Regasm.exe (アセンブリ登録ツール)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException">入力アセンブリには厳密な名前がありません。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出しチェイン内の呼び出し元に、アンマネージ コードへのアクセス許可がありません。  または、"file://" で始まっていないコードベースが、必須の <see cref="T:System.Net.WebPermission" /> なしで指定されました。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="AssemblyPath" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="AssemblyPath" /> が見つかりません。またはファイル名の拡張子が指定されていません。</exception>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="AssemblyPath" /> は正しいアセンブリではありません。</exception>
        <exception cref="T:System.IO.FileLoadException">アセンブリまたはモジュールが 2 つの異なる証拠を使用して 2 回読み込まれたか、アセンブリ名がシステム定義の最大長を超えています。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> でマークされたメソッドが <see langword="static" /> ではありません。  または、階層の特定のレベルに、<see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> でマークされた複数のメソッドがあります。  または、<see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> でマークされたメソッドのシグネチャが有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UnRegisterAssembly">
      <MemberSignature Language="C#" Value="public void UnRegisterAssembly (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnRegisterAssembly(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnRegisterAssembly (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnRegisterAssembly(System::String ^ AssemblyPath);" />
      <MemberSignature Language="F#" Value="abstract member UnRegisterAssembly : string -&gt; unit" Usage="iComSoapPublisher.UnRegisterAssembly AssemblyPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath">アセンブリのファイル システム パス。</param>
        <summary>COM 相互運用機能アセンブリを登録解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 実装<xref:System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly%2A>Regasm.exe を使用して、アセンブリ内で作成可能なクラスの登録を解除します。 詳細については、次を参照してください。 [Regasm.exe (アセンブリ登録ツール)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出しチェイン内の呼び出し元に、アンマネージ コードへのアクセス許可がありません。  または、"file://" で始まっていないコードベースが、必須の <see cref="T:System.Net.WebPermission" /> なしで指定されました。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="AssemblyPath" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="AssemblyPath" /> が見つかりません。またはファイル名の拡張子が指定されていません。</exception>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="AssemblyPath" /> は正しいアセンブリではありません。</exception>
        <exception cref="T:System.IO.FileLoadException">アセンブリまたはモジュールが 2 つの異なる証拠を使用して 2 回読み込まれたか、アセンブリ名がシステム定義の最大長を超えています。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> でマークされたメソッドが <see langword="static" /> ではありません。  または、階層の特定のレベルに、<see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> でマークされた複数のメソッドがあります。  または、<see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> でマークされたメソッドのシグネチャが有効ではありません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>