<Type Name="CodeBinaryOperatorExpression" FullName="System.CodeDom.CodeBinaryOperatorExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="315206703cd49a783aa43e2c6ee62f7f6153c560" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30358896" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeBinaryOperatorExpression : System.CodeDom.CodeExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeBinaryOperatorExpression extends System.CodeDom.CodeExpression" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeBinaryOperatorExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeBinaryOperatorExpression&#xA;Inherits CodeExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeBinaryOperatorExpression : System::CodeDom::CodeExpression" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>2 つの式の間の二項演算から構成される式を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.CodeBinaryOperatorExpression> 二項演算子を含むコード式を表すために使用できます。 二項演算子の例は、等しいかどうかを示します (`==`)、追加 (`+`)、およびビット (`|`) 演算子。 <xref:System.CodeDom.CodeBinaryOperatorType>列挙体は、多くの言語でサポートされている基本的で一般的に使用される二項演算子のセットを表します。  
  
   
  
## Examples  
 この例での使用、<xref:System.CodeDom.CodeBinaryOperatorExpression>を 2 つの数値を一緒に追加します。  
  
 [!code-cpp[CodeBinaryOperatorExpression#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeBinaryOperatorExpression/CPP/codebinaryoperatorexpressionexample.cpp#2)]
 [!code-csharp[CodeBinaryOperatorExpression#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeBinaryOperatorExpression/CS/codebinaryoperatorexpressionexample.cs#2)]
 [!code-vb[CodeBinaryOperatorExpression#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeBinaryOperatorExpression/VB/codebinaryoperatorexpressionexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeExpression" />
    <altmember cref="T:System.CodeDom.CodeBinaryOperatorType" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeBinaryOperatorExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeBinaryOperatorExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeBinaryOperatorExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.CodeBinaryOperatorType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeBinaryOperatorExpression (System.CodeDom.CodeExpression left, System.CodeDom.CodeBinaryOperatorType op, System.CodeDom.CodeExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression left, valuetype System.CodeDom.CodeBinaryOperatorType op, class System.CodeDom.CodeExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (left As CodeExpression, op As CodeBinaryOperatorType, right As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeBinaryOperatorExpression(System::CodeDom::CodeExpression ^ left, System::CodeDom::CodeBinaryOperatorType op, System::CodeDom::CodeExpression ^ right);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="left" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="op" Type="System.CodeDom.CodeBinaryOperatorType" />
        <Parameter Name="right" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="left">演算子の左辺にある <see cref="T:System.CodeDom.CodeExpression" />。</param>
        <param name="op">演算子の種類を示す <see cref="T:System.CodeDom.CodeBinaryOperatorType" />。</param>
        <param name="right">演算子の右辺にある <see cref="T:System.CodeDom.CodeExpression" />。</param>
        <summary>指定されたパラメーターを使用して、<see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression Left" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeBinaryOperatorExpression.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ Left { System::CodeDom::CodeExpression ^ get(); void set(System::CodeDom::CodeExpression ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>演算子の左辺にあるコード式を取得または設定します。</summary>
        <value>左オペランドを示す <see cref="T:System.CodeDom.CodeExpression" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeBinaryOperatorType Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.CodeBinaryOperatorType Operator" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeBinaryOperatorExpression.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As CodeBinaryOperatorType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeBinaryOperatorType Operator { System::CodeDom::CodeBinaryOperatorType get(); void set(System::CodeDom::CodeBinaryOperatorType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>二項演算式の演算子を取得または設定します。</summary>
        <value>式内の演算子の種類を示す <see cref="T:System.CodeDom.CodeBinaryOperatorType" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 二項演算子は、2 つのオペランドの評価を実行します。 二項演算子の例は、等しいかどうかを示します (`==`)、追加 (`+`)、およびビット (`|`) 演算子。 一般的に使用される二項演算子の多くは含まれて、<xref:System.CodeDom.CodeBinaryOperatorType>列挙します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeBinaryOperatorType" />
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Right { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression Right" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeBinaryOperatorExpression.Right" />
      <MemberSignature Language="VB.NET" Value="Public Property Right As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ Right { System::CodeDom::CodeExpression ^ get(); void set(System::CodeDom::CodeExpression ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>演算子の右辺にあるコード式を取得または設定します。</summary>
        <value>右オペランドを示す <see cref="T:System.CodeDom.CodeExpression" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
  </Members>
</Type>