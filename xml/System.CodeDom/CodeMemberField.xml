<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeMemberField.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50d2d12346971e80fc4df59bb5418433e281b5ed7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d2d12346971e80fc4df59bb5418433e281b5ed7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeMemberField">
          <source>Represents a declaration for a field of a type.</source>
          <target state="translated">型のフィールドの宣言を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeMemberField">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeMemberField&gt;</ph> can be used to represent the declaration for a field of a type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeMemberField&gt;</ph> 型のフィールドの宣言を表すために使用できます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeMemberField">
          <source>The following example demonstrates use of a <ph id="ph1">&lt;xref:System.CodeDom.CodeMemberField&gt;</ph> to declare a field of type <ph id="ph2">`string`</ph> named <ph id="ph3">`testStringField`</ph>.</source>
          <target state="translated">次の例での使用、<ph id="ph1">&lt;xref:System.CodeDom.CodeMemberField&gt;</ph>型のフィールドを宣言する<ph id="ph2">`string`</ph>という<ph id="ph3">`testStringField`</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeMemberField">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberField" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberField" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMemberField.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberField" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberField" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMemberField.#ctor(System.CodeDom.CodeTypeReference,System.String)">
          <source>An object that indicates the type of the field.</source>
          <target state="translated">フィールドの型を示すオブジェクト。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMemberField.#ctor(System.CodeDom.CodeTypeReference,System.String)">
          <source>The name of the field.</source>
          <target state="translated">フィールドの名前。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMemberField.#ctor(System.CodeDom.CodeTypeReference,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberField" /&gt;</ph> class using the specified field type and field name.</source>
          <target state="translated">フィールドの種類とフィールド名を指定して、<ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberField" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMemberField.#ctor(System.String,System.String)">
          <source>The type of the field.</source>
          <target state="translated">フィールドの型。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMemberField.#ctor(System.String,System.String)">
          <source>The name of the field.</source>
          <target state="translated">フィールドの名前。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMemberField.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberField" /&gt;</ph> class using the specified field type and field name.</source>
          <target state="translated">フィールドの種類とフィールド名を指定して、<ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberField" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeMemberField.#ctor(System.String,System.String)">
          <source>If the <ph id="ph1">`type`</ph> parameter references a generic type, it must follow the syntax conventions for generic types.</source>
          <target state="translated">場合、<ph id="ph1">`type`</ph>パラメーター、ジェネリック型を参照して、ジェネリック型の構文表記規則に従う必要があります。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeMemberField.#ctor(System.String,System.String)">
          <source>Generic types are formatted as follows: the name of the type, followed by a grave accent ("`"), followed by a count of the generic type arguments, followed by the parameters delimited with brackets.</source>
          <target state="translated">ジェネリック型の形式は次のとおり: 抑音アクセント後に、型の名前 ("'")、続けてジェネリック型引数の数、角かっこで区切られたパラメーター続きます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeMemberField.#ctor(System.String,System.String)">
          <source>You must use square brackets ([]) and not the C# angle brackets (&lt;&gt;) to delimit generic parameters.</source>
          <target state="translated">ジェネリック パラメーターを区切るために角かっこ () およびされません、c# 角度っこを使用する必要があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeMemberField.#ctor(System.String,System.String)">
          <source>To avoid the possibility of making a syntactic mistake, consider using the <ph id="ph1">&lt;xref:System.CodeDom.CodeMemberField.%23ctor%28System.Type%2CSystem.String%29&gt;</ph> constructor that takes a type instead of a string as a parameter.</source>
          <target state="translated">構文の間違いを犯す可能性を回避するのには、使用を検討して、<ph id="ph1">&lt;xref:System.CodeDom.CodeMemberField.%23ctor%28System.Type%2CSystem.String%29&gt;</ph>文字列をパラメーターとしてではなく型を受け取るコンス トラクターです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMemberField.#ctor(System.Type,System.String)">
          <source>The type of the field.</source>
          <target state="translated">フィールドの型。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMemberField.#ctor(System.Type,System.String)">
          <source>The name of the field.</source>
          <target state="translated">フィールドの名前。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeMemberField.#ctor(System.Type,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberField" /&gt;</ph> class using the specified field type and field name.</source>
          <target state="translated">フィールドの種類とフィールド名を指定して、<ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberField" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeMemberField.InitExpression">
          <source>Gets or sets the initialization expression for the field.</source>
          <target state="translated">フィールドの初期化式を取得または設定します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeMemberField.InitExpression">
          <source>The initialization expression for the field.</source>
          <target state="translated">フィールドの初期化式。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeMemberField.InitExpression">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.CodeDom.CodeMemberField.InitExpression%2A&gt;</ph> property.</source>
          <target state="translated">次の例での使用、<ph id="ph1">&lt;xref:System.CodeDom.CodeMemberField.InitExpression%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeMemberField.Type">
          <source>Gets or sets the type of the field.</source>
          <target state="translated">フィールドの型を取得または設定します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeMemberField.Type">
          <source>The type of the field.</source>
          <target state="translated">フィールドの型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>