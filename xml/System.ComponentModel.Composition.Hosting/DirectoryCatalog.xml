<Type Name="DirectoryCatalog" FullName="System.ComponentModel.Composition.Hosting.DirectoryCatalog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="302ac93f8b680caadc2df85ab1275e4bd73b838b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37699848" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DirectoryCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged, System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DirectoryCatalog extends System.ComponentModel.Composition.Primitives.ComposablePartCatalog implements class System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged, class System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Class DirectoryCatalog&#xA;Inherits ComposablePartCatalog&#xA;Implements ICompositionElement, INotifyComposablePartCatalogChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryCatalog : System::ComponentModel::Composition::Primitives::ComposablePartCatalog, System::ComponentModel::Composition::Hosting::INotifyComposablePartCatalogChanged, System::ComponentModel::Composition::Primitives::ICompositionElement" />
  <TypeSignature Language="F#" Value="type DirectoryCatalog = class&#xA;    inherit ComposablePartCatalog&#xA;    interface INotifyComposablePartCatalogChanged&#xA;    interface ICompositionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Primitives.ICompositionElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.DirectoryCatalog/DirectoryCatalogDebuggerProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="61dee-101">指定したディレクトリのアセンブリ内で属性付きの部分を検出します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="61dee-101">Discovers attributed parts in the assemblies in a specified directory.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dee-102">使用することができます、<xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>に指定されたディレクトリの内容を解析するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61dee-102">You can use a <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> object to parse the contents of a designated directory.</span></span> <span data-ttu-id="61dee-103">ダイナミック リンク ライブラリ (DLL) ファイルに含まれる属性付きパーツが抽出され、カタログから入手できます。特定の Dll に解析を制限すると同じ構文を使用して、検索パターンを指定できます、<xref:System.IO.Directory.GetFiles%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="61dee-103">Any attributed parts contained in dynamic link library (DLL) files are extracted and made available through the catalog.To restrict parsing to specific DLLs, you can specify a search pattern by using the same syntax as the <xref:System.IO.Directory.GetFiles%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="61dee-104">指定されたディレクトリは、管理者以外のユーザーにアクセスを許可する必要があります。</span><span class="sxs-lookup"><span data-stu-id="61dee-104">The designated directory should not allow access to non-administrators.</span></span> <span data-ttu-id="61dee-105">たとえば、インターネット一時ファイルを格納するフォルダーを使用して作成の脆弱性、アプリケーションでします。</span><span class="sxs-lookup"><span data-stu-id="61dee-105">For example, using a folder that contains temporary Internet files could create vulnerabilities in your application.</span></span>  
  
 <span data-ttu-id="61dee-106">この型は、<xref:System.IDisposable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="61dee-106">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="61dee-107">型の使用が完了したら、直接的または間接的にそれを破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="61dee-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="61dee-108">型の直接 dispose を呼び出してその<xref:System.IDisposable.Dispose%2A>メソッド、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="61dee-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="61dee-109">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(で C# の場合) または`Using`(Visual Basic) でします。</span><span class="sxs-lookup"><span data-stu-id="61dee-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="61dee-110">詳細については、"を使用して、オブジェクトを実装する IDisposable"のセクションを参照してください、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="61dee-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61dee-111">次の例では、作成、<xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>の部分から、アプリケーションのディレクトリを検索するオブジェクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="61dee-111">The following example creates a <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> object that searches the directory the application runs from for parts.</span></span> <span data-ttu-id="61dee-112">カタログをテストするのに簡単なインポートを使用します。</span><span class="sxs-lookup"><span data-stu-id="61dee-112">It uses a simple import to test the catalog.</span></span> <span data-ttu-id="61dee-113">このインポートを満たすためには、ディレクトリ内の DLL は、2 つ目のコード ブロックに示すように、一致するエクスポートが必要です。</span><span class="sxs-lookup"><span data-stu-id="61dee-113">To fulfill this import, a DLL in the directory must have a matching export, as illustrated in the second code block.</span></span>  
  
 [!code-csharp[Composition.DirectoryCatalog#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.directorycatalog/cs/consoleapplication7/program.cs#1)]
 [!code-vb[Composition.DirectoryCatalog#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.directorycatalog/vb/consoleapplication8/module1.vb#1)]  
  
 <span data-ttu-id="61dee-114">一致するエクスポートを作成するには、次のコードは、DLL ファイルでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="61dee-114">To create the matching export, the following code must be in a DLL file.</span></span> <span data-ttu-id="61dee-115">Visual Studio で DLL ファイルを作成するには、「クラス ライブラリ」型の新しいプロジェクトをソリューションに追加しがこのコードを配置します。</span><span class="sxs-lookup"><span data-stu-id="61dee-115">To create a DLL file in Visual Studio, add a new project of the type "Class Library" to your solution, and place this code in it.</span></span>  
  
 [!code-csharp[Composition.DirectoryCatalog#2](~/samples/snippets/csharp/VS_Snippets_Misc/composition.directorycatalog/cs/classlibrary1/class1.cs#2)]
 [!code-vb[Composition.DirectoryCatalog#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.directorycatalog/vb/classlibrary1/class1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61dee-116">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61dee-117">カタログに追加するアセンブリをスキャンするディレクトリのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-117">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="61dee-118">絶対パスまたは <see cref="P:System.AppDomain.BaseDirectory" /> からの相対パスで指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-118">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dee-119">指定したディレクトリ パスにあるすべての DLL ファイルに基づく <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> オブジェクトを使用して、<see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on all the DLL files in the specified directory path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="61dee-120">指定した <paramref name="path" /> が無効です (割り当てられていないドライブであるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-120">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61dee-121">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-121">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="61dee-122">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-122">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61dee-123">
            <paramref name="path" /> が、長さが 0 の文字列であるか、空白しか含んでいないか、または実装固有の無効な文字を 1 つ以上含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-123">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="61dee-124">指定した <paramref name="path" />、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-124">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, definitionOrigin As ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61dee-125">カタログに追加するアセンブリをスキャンするディレクトリのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-125">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="61dee-126">絶対パスまたは <see cref="P:System.AppDomain.BaseDirectory" /> からの相対パスで指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-126">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="61dee-127">パーツのソースを識別するために診断によって使用される要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-127">The element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dee-128">パーツの指定されたソースと指定したディレクトリ パス内のすべての DLL ファイルに基づく <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> オブジェクトを使用して、<see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-128">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on all the DLL files in the specified directory path with the specified source for parts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="61dee-129">指定した <paramref name="path" /> が無効です (割り当てられていないドライブであるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-129">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61dee-130">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-130">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="61dee-131">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-131">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61dee-132">
            <paramref name="path" /> が、長さが 0 の文字列であるか、空白しか含んでいないか、または実装固有の無効な文字を 1 つ以上含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-132">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="61dee-133">指定した <paramref name="path" />、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-133">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61dee-134">カタログに追加するアセンブリをスキャンするディレクトリのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-134">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="61dee-135">絶対パスまたは <see cref="P:System.AppDomain.BaseDirectory" /> からの相対パスで指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-135">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="61dee-136">パーツの作成に使用されるコンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-136">The context used to create parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dee-137">指定したリフレクション コンテキストで、指定したディレクトリ パス内のすべての DLL ファイルに基づく <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> オブジェクトを使用して、<see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-137">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on all the DLL files in the specified directory path, in the specified reflection context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="61dee-138">指定した <paramref name="path" /> が無効です (割り当てられていないドライブであるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-138">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61dee-139">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-139">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="61dee-140">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-140">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61dee-141">
            <paramref name="path" /> が、長さが 0 の文字列であるか、空白しか含んでいないか、または実装固有の無効な文字を 1 つ以上含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-141">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="61dee-142">指定した <paramref name="path" />、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-142">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, searchPattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * string -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, searchPattern)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61dee-143">カタログに追加するアセンブリをスキャンするディレクトリのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-143">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="61dee-144">絶対パスまたは <see cref="P:System.AppDomain.BaseDirectory" /> からの相対パスで指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-144">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="searchPattern">
          <span data-ttu-id="61dee-145">検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-145">The search string.</span>
          </span>
          <span data-ttu-id="61dee-146">文字列の形式は、<see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> メソッドに指定する形式と同じにする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-146">The format of the string should be the same as specified for the <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dee-147">指定したディレクトリ パスでの指定した検索パターンと一致する <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> オブジェクトを使用して、<see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-147">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects that match a specified search pattern in the specified directory path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="61dee-148">指定した <paramref name="path" /> が無効です (割り当てられていないドライブであるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-148">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61dee-149">
            <paramref name="path" /> または <paramref name="searchPattern" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-149">
              <paramref name="path" /> or <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="61dee-150">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-150">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61dee-151">
            <paramref name="path" /> が、長さが 0 の文字列であるか、空白しか含んでいないか、または実装固有の無効な文字を 1 つ以上含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-151">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
          <span data-ttu-id="61dee-152">または、<paramref name="searchPattern" /> に有効なパターンが含まれていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-152">-or-  <paramref name="searchPattern" /> does not contain a valid pattern.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="61dee-153">指定した <paramref name="path" />、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-153">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61dee-154">カタログに追加するアセンブリをスキャンするディレクトリのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-154">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="61dee-155">絶対パスまたは <see cref="P:System.AppDomain.BaseDirectory" /> からの相対パスで指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-155">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="61dee-156">パーツの作成に使用されるコンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-156">The context used to create parts.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="61dee-157">パーツのソースを識別するために診断によって使用される要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-157">The element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dee-158">指定したリフレクション コンテキストで、指定したディレクトリ パス内のすべての DLL ファイルに基づく <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> オブジェクトを使用して、<see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-158">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by  using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on all the DLL files in the specified directory path, in the specified reflection context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="61dee-159">指定した <paramref name="path" /> が無効です (割り当てられていないドライブであるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-159">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61dee-160">
            <paramref name="path" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-160">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="61dee-161">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-161">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61dee-162">
            <paramref name="path" /> が、長さが 0 の文字列であるか、空白しか含んでいないか、または実装固有の無効な文字を 1 つ以上含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-162">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="61dee-163">指定した <paramref name="path" />、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-163">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, string searchPattern, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string searchPattern, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, searchPattern As String, definitionOrigin As ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::String ^ searchPattern, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * string * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, searchPattern, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61dee-164">カタログに追加するアセンブリをスキャンするディレクトリのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-164">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="61dee-165">絶対パスまたは <see cref="P:System.AppDomain.BaseDirectory" /> からの相対パスで指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-165">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="searchPattern">
          <span data-ttu-id="61dee-166">検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-166">The search string.</span>
          </span>
          <span data-ttu-id="61dee-167">文字列の形式は、<see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> メソッドに指定する形式と同じにする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-167">The format of the string should be the same as specified for the <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="61dee-168">パーツのソースを識別するために診断によって使用される要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-168">The element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dee-169">指定したパーツのソースと指定したディレクトリ パス内の指定した検索パターンに基づく <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> オブジェクトを使用して、<see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-169">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on the specified search pattern in the specified directory path with the specified source for parts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="61dee-170">指定した <paramref name="path" /> が無効です (割り当てられていないドライブであるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-170">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61dee-171">
            <paramref name="path" /> または <paramref name="searchPattern" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-171">
              <paramref name="path" /> or <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="61dee-172">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-172">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61dee-173">
            <paramref name="path" /> が、長さが 0 の文字列であるか、空白しか含んでいないか、または実装固有の無効な文字を 1 つ以上含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-173">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
          <span data-ttu-id="61dee-174">または、<paramref name="searchPattern" /> に有効なパターンが含まれていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-174">-or-  <paramref name="searchPattern" /> does not contain a valid pattern.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="61dee-175">指定した <paramref name="path" />、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-175">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, string searchPattern, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string searchPattern, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::String ^ searchPattern, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * string * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, searchPattern, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61dee-176">カタログに追加するアセンブリをスキャンするディレクトリのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-176">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="61dee-177">絶対パスまたは <see cref="P:System.AppDomain.BaseDirectory" /> からの相対パスで指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-177">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="searchPattern">
          <span data-ttu-id="61dee-178">検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-178">The search string.</span>
          </span>
          <span data-ttu-id="61dee-179">文字列の形式は、<see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> メソッドに指定する形式と同じにする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-179">The format of the string should be the same as specified for the <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="61dee-180">パーツの作成に使用されるコンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-180">The context used to create parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dee-181">指定したリフレクション コンテキストで、指定したディレクトリ パス内の指定した検索パターンに基づく <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> オブジェクトを使用して、<see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-181">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on the specified search pattern in the specified directory path, using the specified reflection context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="61dee-182">指定した <paramref name="path" /> が無効です (割り当てられていないドライブであるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-182">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61dee-183">
            <paramref name="path" /> または <paramref name="searchPattern" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-183">
              <paramref name="path" /> or <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="61dee-184">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-184">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61dee-185">
            <paramref name="path" /> が、長さが 0 の文字列であるか、空白しか含んでいないか、または実装固有の無効な文字を 1 つ以上含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-185">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
          <span data-ttu-id="61dee-186">または、<paramref name="searchPattern" /> に有効なパターンが含まれていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-186">-or-  <paramref name="searchPattern" /> does not contain a valid pattern.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="61dee-187">指定した <paramref name="path" />、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-187">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, string searchPattern, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string searchPattern, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::String ^ searchPattern, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * string * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, searchPattern, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61dee-188">カタログに追加するアセンブリをスキャンするディレクトリのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-188">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="61dee-189">絶対パスまたは <see cref="P:System.AppDomain.BaseDirectory" /> からの相対パスで指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-189">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="searchPattern">
          <span data-ttu-id="61dee-190">検索文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-190">The search string.</span>
          </span>
          <span data-ttu-id="61dee-191">文字列の形式は、<see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> メソッドに指定する形式と同じにする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-191">The format of the string should be the same as specified for the <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="61dee-192">パーツの作成に使用されるコンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-192">The context used to create parts.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="61dee-193">パーツのソースを識別するために診断によって使用される要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-193">The element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dee-194">指定したリフレクション コンテキストで、指定したディレクトリ パス内の指定した検索パターンに基づく <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> オブジェクトを使用して、<see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-194">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on the specified search pattern in the specified directory path, using the specified reflection context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="61dee-195">指定した <paramref name="path" /> が無効です (割り当てられていないドライブであるなど)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-195">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61dee-196">
            <paramref name="path" /> または <paramref name="searchPattern" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-196">
              <paramref name="path" /> or <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="61dee-197">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-197">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61dee-198">
            <paramref name="path" /> が、長さが 0 の文字列であるか、空白しか含んでいないか、または実装固有の無効な文字を 1 つ以上含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-198">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
          <span data-ttu-id="61dee-199">または、<paramref name="searchPattern" /> に有効なパターンが含まれていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-199">-or-  <paramref name="searchPattern" /> does not contain a valid pattern.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="61dee-200">指定した <paramref name="path" />、ファイル名、またはその両方がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-200">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As EventHandler(Of ComposablePartCatalogChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^&gt; ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; " Usage="member this.Changed : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61dee-201">カタログの内容が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-201">Occurs when the contents of the catalog has changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Changing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changing As EventHandler(Of ComposablePartCatalogChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^&gt; ^ Changing;" />
      <MemberSignature Language="F#" Value="member this.Changing : EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; " Usage="member this.Changing : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61dee-202">カタログが変更されているときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-202">Occurs when the catalog is changing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="directoryCatalog.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="61dee-203">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-203">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dee-204">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-204">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61dee-205">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> オブジェクトによって観察される変換済みの絶対パスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-205">Gets the translated absolute path observed by the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61dee-206">カタログで監視される変換済みの絶対パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-206">The translated absolute path observed by the catalog.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerator&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="directoryCatalog.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61dee-207">カタログを反復処理する列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-207">Returns an enumerator that iterates through the catalog.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61dee-208">カタログの反復処理に使用できる列挙子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-208">An enumerator that can be used to iterate through the catalog.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition, class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExports (definition As ImportDefinition) As IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Tuple&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^, System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberSignature Language="F#" Value="override this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition * System.ComponentModel.Composition.Primitives.ExportDefinition&gt;" Usage="directoryCatalog.GetExports definition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="61dee-209">取得する <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> オブジェクトの条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-209">The conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> objects to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dee-210">指定したインポート定義によって表される制約と一致するエクスポート定義を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-210">Gets the export definitions that match the constraint expressed by the specified import definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61dee-211">
            <paramref name="definition" /> で指定した制約に一致する <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> オブジェクトとそれに関連付けられている <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> オブジェクトを格納するオブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-211">A collection of objects that contain the <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> objects and their associated <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects that match the constraint specified by <paramref name="definition" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61dee-212">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> オブジェクトは破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-212">The <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> object has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61dee-213">
            <paramref name="definition" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-213">
              <paramref name="definition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LoadedFiles">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; LoadedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; LoadedFiles" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadedFiles As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ LoadedFiles { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadedFiles : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61dee-214">カタログに現在読み込まれているファイルのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-214">Gets the collection of files currently loaded in the catalog.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61dee-215">カタログに現在読み込まれているファイルのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-215">A collection of files currently loaded in the catalog.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanged(class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanged (e As ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanged(System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnChanged : System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs -&gt; unit&#xA;override this.OnChanged : System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs -&gt; unit" Usage="directoryCatalog.OnChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="61dee-216">イベント データを格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-216">An object  that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dee-217">
            <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-217">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnChanging (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanging(class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanging (e As ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanging(System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnChanging : System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs -&gt; unit&#xA;override this.OnChanging : System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs -&gt; unit" Usage="directoryCatalog.OnChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="61dee-218">イベント データを格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-218">An object  that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dee-219">
            <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-219">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parts">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryable`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Parts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Parts As IQueryable(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ Parts { System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parts : System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.Parts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61dee-220">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> オブジェクトで監視されるパスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-220">Gets the path observed by the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61dee-221">カタログで監視されるパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-221">The path observed by the catalog.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="directoryCatalog.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61dee-222">検索パターンに一致するディレクトリ内の最新のファイルで <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> オブジェクトを更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-222">Refreshes the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects with the latest files in the directory that match the search pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dee-223">ファイルがディレクトリに追加された場合、カタログにも追加されます。</span><span class="sxs-lookup"><span data-stu-id="61dee-223">If files were added to the directory, they are also added to the catalog.</span></span> <span data-ttu-id="61dee-224">ファイルは、ディレクトリから取り外した場合、カタログからも削除されます。</span><span class="sxs-lookup"><span data-stu-id="61dee-224">If files were removed from the directory, they are also removed from the catalog.</span></span> <span data-ttu-id="61dee-225">削除されたファイルの場合、アセンブリをすることはできませんので、プロセスからアンロード<xref:System.ComponentModel.Composition.Primitives.ComposablePartDefinition>オブジェクトをそれらのファイルは、カタログからのみ削除されます。</span><span class="sxs-lookup"><span data-stu-id="61dee-225">For files that have been removed, the assembly cannot be unloaded from the process, so <xref:System.ComponentModel.Composition.Primitives.ComposablePartDefinition> objects for those files will be removed only from the catalog.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchPattern">
      <MemberSignature Language="C#" Value="public string SearchPattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SearchPattern" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SearchPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SearchPattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SearchPattern : string" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61dee-226">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> オブジェクトのコンストラクターに渡される検索パターンを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-226">Gets the search pattern that is passed into the constructor of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61dee-227">カタログでファイルの検索に使用される検索パターン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-227">The search pattern the catalog uses to find files.</span>
          </span>
          <span data-ttu-id="61dee-228">既定では \*.dll で、すべての DLL ファイルが返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-228">The default is \*.dll, which returns all DLL files.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
      <MemberSignature Language="C#" Value="string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayName As String Implements ICompositionElement.DisplayName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61dee-229">ディレクトリ カタログの表示名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-229">Gets the display name of the directory catalog.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61dee-230">ディレクトリ カタログのユーザーが判読できる表示名を格納する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-230">A string that contains a human-readable display name of the directory catalog.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dee-231">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="61dee-231">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="61dee-232">これは、<xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> のインスタンスが <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="61dee-232">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
      <MemberSignature Language="C#" Value="System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Origin As ICompositionElement Implements ICompositionElement.Origin" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Composition::Primitives::ICompositionElement ^ System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { System::ComponentModel::Composition::Primitives::ICompositionElement ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ICompositionElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61dee-233">ディレクトリ カタログの基になっている合成要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-233">Gets the composition element from which the directory catalog originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61dee-234">常に <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-234">Always <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dee-235">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="61dee-235">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="61dee-236">これは、<xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> のインスタンスが <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="61dee-236">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryCatalog.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61dee-237">ディレクトリ カタログの文字列形式を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-237">Gets a string representation of the directory catalog.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61dee-238">カタログの文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dee-238">A string representation of the catalog.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>