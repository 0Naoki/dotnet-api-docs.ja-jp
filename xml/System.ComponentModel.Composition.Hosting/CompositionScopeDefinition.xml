<Type Name="CompositionScopeDefinition" FullName="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36b7a4929a803d54a261b493077361ed779c3a36" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompositionScopeDefinition : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositionScopeDefinition extends System.ComponentModel.Composition.Primitives.ComposablePartCatalog implements class System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositionScopeDefinition&#xA;Inherits ComposablePartCatalog&#xA;Implements INotifyComposablePartCatalogChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionScopeDefinition : System::ComponentModel::Composition::Primitives::ComposablePartCatalog, System::ComponentModel::Composition::Hosting::INotifyComposablePartCatalogChanged" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.CompositionScopeDefinitionDebuggerProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f7f45-101">基になるカタログとその子のスコープを反映する、スコープ カタログのツリー内のノードを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f7f45-101">Represents a node in a tree of scoped catalogs, reflecting an underlying catalog and its child scopes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f7f45-102">この型は、<xref:System.IDisposable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="f7f45-102">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="f7f45-103">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f7f45-103">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="f7f45-104">型の直接 dispose を呼び出す、<xref:System.IDisposable.Dispose%2A>メソッドで、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="f7f45-104">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="f7f45-105">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(C# の場合) または`Using`(Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="f7f45-105">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="f7f45-106">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="f7f45-106">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f7f45-107">
            <see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CompositionScopeDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CompositionScopeDefinition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f7f45-108">
            <see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-108">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionScopeDefinition (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition&gt; children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Hosting.CompositionScopeDefinition&gt; children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog, children As IEnumerable(Of CompositionScopeDefinition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionScopeDefinition(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Hosting::CompositionScopeDefinition ^&gt; ^ children);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="children" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">
          <span data-ttu-id="f7f45-109">このカタログの基になるカタログ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-109">The underlying catalog for this catalog.</span>
          </span>
        </param>
        <param name="children">
          <span data-ttu-id="f7f45-110">このカタログの子スコープのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-110">A collection of the child scopes of this catalog.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7f45-111">基になるカタログと子を指定して、<see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /> class with the specified underlying catalog and children.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionScopeDefinition (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition&gt; children, System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ExportDefinition&gt; publicSurface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Hosting.CompositionScopeDefinition&gt; children, class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition&gt; publicSurface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog, children As IEnumerable(Of CompositionScopeDefinition), publicSurface As IEnumerable(Of ExportDefinition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionScopeDefinition(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Hosting::CompositionScopeDefinition ^&gt; ^ children, System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^ publicSurface);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="children" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition&gt;" />
        <Parameter Name="publicSurface" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ExportDefinition&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">
          <span data-ttu-id="f7f45-112">このカタログの基になるカタログ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-112">The underlying catalog for this catalog.</span>
          </span>
        </param>
        <param name="children">
          <span data-ttu-id="f7f45-113">このカタログの子スコープのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-113">A collection of the child scopes of this catalog.</span>
          </span>
        </param>
        <param name="publicSurface">
          <span data-ttu-id="f7f45-114">このカタログのパブリック サーフェイス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-114">The public surface for this catalog.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7f45-115">基になるカタログ、子、およびパブリック サーフェスと指定して、<see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /> class with the specified underlying catalog, children, and public surface.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As EventHandler(Of ComposablePartCatalogChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^&gt; ^ Changed;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7f45-116">カタログが通知をサポートする場合に、その基になるカタログが変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-116">Occurs when the underlying catalog has changed, if that catalog supports notifications.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Changing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changing As EventHandler(Of ComposablePartCatalogChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^&gt; ^ Changing;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7f45-117">カタログが通知をサポートする場合に、その基になるカタログが変更されるときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-117">Occurs when the underlying catalog is changing, if that catalog supports notifications.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition&gt; Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Hosting.CompositionScopeDefinition&gt; Children" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Children As IEnumerable(Of CompositionScopeDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Hosting::CompositionScopeDefinition ^&gt; ^ Children { System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Hosting::CompositionScopeDefinition ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Hosting.CompositionScopeDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7f45-118">このカタログの子スコープを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-118">Gets the child scopes of this catalog.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7f45-119">このカタログの子スコープのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-119">A collection of the child scopes of this catalog.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f7f45-120">マネージ リソースとアンマネージ リソースを解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-120">
              <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7f45-121">
            <see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /> クラスの現在のインスタンスによって使用されているマネージ リソースとアンマネージ リソースを解放するために、<see langword="Dispose()" /> メソッドと <see langword="Finalize()" /> メソッドによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-121">Called by the <see langword="Dispose()" /> and <see langword="Finalize()" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f45-122">このメソッドは、パブリックによってのみ呼び出さ`Dispose()`と`Finalize()`メソッドです。 このメソッドを直接呼び出さないでください。ブール型のパラメーター、dispose パターンを実装する場合、`Dispose(Boolean)`メソッドを次のように使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f7f45-122">This method is called only by the public `Dispose()` and `Finalize()` methods; do not call this method directly.When you implement the dispose pattern, the Boolean parameter of the `Dispose(Boolean)` method should be used as follows:</span></span>  
  
-   <span data-ttu-id="f7f45-123">`Dispose()`現在のオブジェクトのメソッドを呼び出す必要があります`Dispose(Boolean)`ブール型のパラメーターを設定した`true`マネージ コードとアンマネージ リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="f7f45-123">The `Dispose()` method of the current object should call `Dispose(Boolean)` with the Boolean parameter set to `true` to release both managed and unmanaged resources.</span></span>  
  
-   <span data-ttu-id="f7f45-124">`Finalize()`現在のオブジェクトのメソッドを呼び出す必要があります`Dispose(Boolean)`ブール型のパラメーターを設定した`false`アンマネージ リソースだけを解放します。</span><span class="sxs-lookup"><span data-stu-id="f7f45-124">The `Finalize()` method of the current object should call `Dispose(Boolean)` with the Boolean parameter set to `false` to release only unmanaged resources.</span></span>  
  
 <span data-ttu-id="f7f45-125">詳細については、次を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f7f45-125">For more information, see .</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerator&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f7f45-126">カタログを反復処理する列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-126">Returns an enumerator that iterates through the catalog.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7f45-127">カタログの反復処理に使用できる列挙子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-127">An enumerator that can be used to iterate through the catalog.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition, class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExports (definition As ImportDefinition) As IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Tuple&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^, System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="f7f45-128">一致するエクスポートを指定する条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-128">Conditions that specify which exports to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7f45-129">インポート定義で指定した条件に一致するエクスポートのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-129">Gets a collection of exports that match the conditions specified by the import definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7f45-130">指定した条件に一致するエクスポートのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-130">A collection of exports that match the specified conditions.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanged(class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanged (e As ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanged(System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f7f45-131">
            <see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" /> イベントのデータを格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-131">Contains data for the <see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7f45-132">
            <see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-132">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnChanging (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanging(class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanging (e As ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanging(System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f7f45-133">
            <see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" /> イベントのデータを格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-133">Contains data for the <see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7f45-134">
            <see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-134">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicSurface">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ExportDefinition&gt; PublicSurface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition&gt; PublicSurface" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PublicSurface As IEnumerable(Of ExportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^ PublicSurface { System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ExportDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7f45-135">このカタログの親スコープに表示される部分のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-135">Gets a collection of parts visible to the parent scope of this catalog.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7f45-136">このカタログの親スコープに表示される部分のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7f45-136">A collection of parts visible to the parent scope of this catalog.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>