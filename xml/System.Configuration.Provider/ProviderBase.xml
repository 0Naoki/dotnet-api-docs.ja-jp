<Type Name="ProviderBase" FullName="System.Configuration.Provider.ProviderBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5126e90dd435ebef49c5ec4e117fd9470d9e99eb" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51912564" /></Metadata><TypeSignature Language="C#" Value="public abstract class ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProviderBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProviderBase abstract" />
  <TypeSignature Language="F#" Value="type ProviderBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dadb1-101">拡張可能なプロバイダー モデルの基本実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="dadb1-101">Provides a base implementation for the extensible provider model.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadb1-102">プロバイダー モデルの目的は、メンバーシップ、プロファイル、および保護された構成など、複数の ASP.NET 機能の機能の一部またはすべてをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="dadb1-102">The provider model is intended to encapsulate all or part of the functionality of multiple ASP.NET features, such as membership, profiles, and protected configuration.</span></span> <span data-ttu-id="dadb1-103">開発者は、カプセル化された機能の複数の実装を提供するサポート クラスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="dadb1-103">It allows the developer to create supporting classes that provide multiple implementations of the encapsulated functionality.</span></span> <span data-ttu-id="dadb1-104">さらに、開発者はプロバイダー モデルを使用して新しい機能を作成できます。</span><span class="sxs-lookup"><span data-stu-id="dadb1-104">In addition, developers can write new features using the provider model.</span></span> <span data-ttu-id="dadb1-105">機能コードを複製するか、実装メソッドを変更する必要がある場合は、アプリケーション層を再コーディングせず複数の機能の実装をサポートするために効果的な方法を指定できます。</span><span class="sxs-lookup"><span data-stu-id="dadb1-105">This can be an effective way to support multiple implementations of a feature's functionality without duplicating the feature code or recoding the application layer if the implementation method needs to be changed.</span></span>  
  
 <span data-ttu-id="dadb1-106"><xref:System.Configuration.Provider.ProviderBase>クラスは単純とのみを含む、いくつかの基本的な方法は、すべてのプロバイダーに共通するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="dadb1-106">The <xref:System.Configuration.Provider.ProviderBase> class is simple, containing only a few basic methods and properties that are common to all providers.</span></span> <span data-ttu-id="dadb1-107">機能固有のプロバイダー (など<xref:System.Web.Security.MembershipProvider>) から継承<xref:System.Configuration.Provider.ProviderBase>し、必要なメソッドとその機能の実装に固有のプロバイダーのサポートが必要なプロパティを確立します。</span><span class="sxs-lookup"><span data-stu-id="dadb1-107">Feature-specific providers (such as <xref:System.Web.Security.MembershipProvider>) inherit from <xref:System.Configuration.Provider.ProviderBase> and establish the necessary methods and properties that the implementation-specific providers for that feature must support.</span></span> <span data-ttu-id="dadb1-108">実装に固有のプロバイダー (など<xref:System.Web.Security.SqlMembershipProvider>) 機能に固有のプロバイダーから順番に継承 (この場合、 <xref:System.Web.Security.MembershipProvider>)。</span><span class="sxs-lookup"><span data-stu-id="dadb1-108">Implementation-specific providers (such as <xref:System.Web.Security.SqlMembershipProvider>) inherit in turn from a feature-specific provider (in this case, <xref:System.Web.Security.MembershipProvider>).</span></span>  
  
 <span data-ttu-id="dadb1-109">プロバイダー モデルの最も重要な側面は、(たとえば、かどうかデータが保存されるテキスト ファイルとして、またはデータベース内) の実装がアプリケーション コードから抽象化されることです。</span><span class="sxs-lookup"><span data-stu-id="dadb1-109">The most important aspect of the provider model is that the implementation (for example, whether data is persisted as a text file or in a database) is abstracted from the application code.</span></span> <span data-ttu-id="dadb1-110">特定の機能の実装に固有のプロバイダーの種類は、構成ファイルで指定されます。</span><span class="sxs-lookup"><span data-stu-id="dadb1-110">The type of the implementation-specific provider for the given feature is designated in a configuration file.</span></span> <span data-ttu-id="dadb1-111">機能レベルのプロバイダーからは、構成ファイルから型を読み取りし、機能コードに対するファクトリとして機能します。</span><span class="sxs-lookup"><span data-stu-id="dadb1-111">The feature-level provider then reads in the type from the configuration file and acts as a factory to the feature code.</span></span> <span data-ttu-id="dadb1-112">アプリケーション開発者は、アプリケーション コードで機能のクラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="dadb1-112">The application developer can then use the feature classes in the application code.</span></span> <span data-ttu-id="dadb1-113">実装の種類スワップ アウトできる、構成ファイルで、さまざまな実装方法に対応するためにコードを書き直す必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="dadb1-113">The implementation type can be swapped out in the configuration file, eliminating the need to rewrite the code to accommodate the different implementation methodology.</span></span>  
  
 <span data-ttu-id="dadb1-114">ASP.NET に含まれているプロバイダーは、主プロファイルやメンバーシップなどの機能のデータ永続化の実装の抽象化です。</span><span class="sxs-lookup"><span data-stu-id="dadb1-114">The providers included with ASP.NET are mostly abstractions of data persistence implementations for features like profiles or membership.</span></span> <span data-ttu-id="dadb1-115">ただし、このモデルは、他の種類の抽象化され、複数の方法で実装されている可能性があります機能に適用できます。</span><span class="sxs-lookup"><span data-stu-id="dadb1-115">However, this model can be applied to any other kind of feature functionality that could be abstracted and implemented in multiple ways.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dadb1-116">使用する方法の例については、<xref:System.Configuration.Provider.ProviderBase>クラスを参照してください[プロファイル プロバイダーの実装例](https://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906)します。</span><span class="sxs-lookup"><span data-stu-id="dadb1-116">For an example of how to use the <xref:System.Configuration.Provider.ProviderBase> class, see [Profile Provider Implementation Example](https://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906"><span data-ttu-id="dadb1-117">プロファイル プロバイダーの実装例</span><span class="sxs-lookup"><span data-stu-id="dadb1-117">Profile Provider Implementation Example</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/bfa00166-2e56-4234-a596-30cf9d197792"><span data-ttu-id="dadb1-118">保護された構成プロバイダーの実装例</span><span class="sxs-lookup"><span data-stu-id="dadb1-118">Protected Configuration Provider Implementation Example</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/4634e914-dcd1-48aa-914b-58aecfb86879"><span data-ttu-id="dadb1-119">方法: メンバーシップ プロバイダーの実装のサンプル</span><span class="sxs-lookup"><span data-stu-id="dadb1-119">How to: Sample Membership Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/13efc440-bc9c-4c43-825f-dc38465d8bce"><span data-ttu-id="dadb1-120">方法: ロール プロバイダーの実装のサンプル</span><span class="sxs-lookup"><span data-stu-id="dadb1-120">How to: Sample Role-Provider Implementation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Provider.ProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dadb1-121"><see cref="T:System.Configuration.Provider.ProviderBase" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="dadb1-121">Initializes a new instance of the <see cref="T:System.Configuration.Provider.ProviderBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Provider.ProviderBase.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Configuration.Provider.ProviderBase.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dadb1-122">管理ツールまたは他のユーザー インターフェイス (UI) での表示に適した、簡単でわかりやすい説明を取得します。</span><span class="sxs-lookup"><span data-stu-id="dadb1-122">Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).</span></span></summary>
        <value><span data-ttu-id="dadb1-123">管理ツールまたは他の UI での表示に適した、簡単でわかりやすい説明。</span><span class="sxs-lookup"><span data-stu-id="dadb1-123">A brief, friendly description suitable for display in administrative tools or other UIs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadb1-124">構成済みのプロバイダーが、説明の値を指定しないかどうか、<xref:System.Configuration.Provider.ProviderBase.Name%2A>プロパティは、既定値として返されます。</span><span class="sxs-lookup"><span data-stu-id="dadb1-124">If a configured provider does not supply a description, the value of the <xref:System.Configuration.Provider.ProviderBase.Name%2A> property is returned as a default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit&#xA;override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="providerBase.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dadb1-125">プロバイダーのフレンドリ名。</span><span class="sxs-lookup"><span data-stu-id="dadb1-125">The friendly name of the provider.</span></span></param>
        <param name="config"><span data-ttu-id="dadb1-126">このプロバイダーの構成で指定された、プロバイダー固有の属性を表す名前と値のペアのコレクション。</span><span class="sxs-lookup"><span data-stu-id="dadb1-126">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</span></span></param>
        <summary><span data-ttu-id="dadb1-127">構成ビルダーを初期化します。</span><span class="sxs-lookup"><span data-stu-id="dadb1-127">Initializes the configuration builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadb1-128">基本クラスの実装がプロバイダーの内部で回数の合計には追跡`Initialize`メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="dadb1-128">The base class implementation internally tracks the number of times the provider's `Initialize` method has been called.</span></span> <span data-ttu-id="dadb1-129">プロバイダーが複数回初期化されている場合、`InvalidOperationException`プロバイダーが既に初期化されていることを示すがスローされます。</span><span class="sxs-lookup"><span data-stu-id="dadb1-129">If a provider is initialized more than once, an `InvalidOperationException` is thrown stating that the provider is already initialized.</span></span>  
  
 <span data-ttu-id="dadb1-130">ほとんどの機能のプロバイダーの呼び出しのため<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>プロバイダー固有の初期化を実行する前にこのメソッドは、二重の初期化を回避するための中央の場所。</span><span class="sxs-lookup"><span data-stu-id="dadb1-130">Because most feature providers call <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> prior to performing provider-specific initialization, this method is a central location for preventing double initialization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dadb1-131">使用する方法の例については<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>を参照してください[プロファイル プロバイダーの実装例](https://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906)します。</span><span class="sxs-lookup"><span data-stu-id="dadb1-131">For an example of how to use <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>, see [Profile Provider Implementation Example](https://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dadb1-132">プロバイダーの名前は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="dadb1-132">The name of the provider is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dadb1-133">プロバイダーの名前の長さは 0 です。</span><span class="sxs-lookup"><span data-stu-id="dadb1-133">The name of the provider has a length of zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dadb1-134">プロバイダーが既に初期化された後に、プロバイダーで <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> の呼び出しが試行されます。</span><span class="sxs-lookup"><span data-stu-id="dadb1-134">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> on a provider after the provider has already been initialized.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906"><span data-ttu-id="dadb1-135">プロファイル プロバイダーの実装例</span><span class="sxs-lookup"><span data-stu-id="dadb1-135">Profile Provider Implementation Example</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/bfa00166-2e56-4234-a596-30cf9d197792"><span data-ttu-id="dadb1-136">保護された構成プロバイダーの実装例</span><span class="sxs-lookup"><span data-stu-id="dadb1-136">Protected Configuration Provider Implementation Example</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/4634e914-dcd1-48aa-914b-58aecfb86879"><span data-ttu-id="dadb1-137">方法: メンバーシップ プロバイダーの実装のサンプル</span><span class="sxs-lookup"><span data-stu-id="dadb1-137">How to: Sample Membership Provider Implementation</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/13efc440-bc9c-4c43-825f-dc38465d8bce"><span data-ttu-id="dadb1-138">方法: ロール プロバイダーの実装のサンプル</span><span class="sxs-lookup"><span data-stu-id="dadb1-138">How to: Sample Role-Provider Implementation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Provider.ProviderBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Configuration.Provider.ProviderBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dadb1-139">構成時にプロバイダーを参照するために使用される表示名を取得します。</span><span class="sxs-lookup"><span data-stu-id="dadb1-139">Gets the friendly name used to refer to the provider during configuration.</span></span></summary>
        <value><span data-ttu-id="dadb1-140">構成時にプロバイダーを参照するために使用される表示名。</span><span class="sxs-lookup"><span data-stu-id="dadb1-140">The friendly name used to refer to the provider during configuration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadb1-141">この文字列の推奨されるパターンは、: [*プロバイダー作成者*] [*実装型*] [*機能*] プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="dadb1-141">The recommended pattern for this string is: [*Provider Creator*][*Implementation Type*][*Feature*]Provider.</span></span> <span data-ttu-id="dadb1-142">ただし、<xref:System.Configuration.Provider.ProviderBase.Description%2A>プロパティも、わかりやすい説明を提供、<xref:System.Configuration.Provider.ProviderBase.Name%2A>プロパティは、プロバイダーの識別子として使用されます。</span><span class="sxs-lookup"><span data-stu-id="dadb1-142">Although the <xref:System.Configuration.Provider.ProviderBase.Description%2A> property also provides a friendly description, the <xref:System.Configuration.Provider.ProviderBase.Name%2A> property is used as an identifier for the provider.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>