<Type Name="Collection&lt;T&gt;" FullName="System.Collections.ObjectModel.Collection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c55e40bfdef254c8471c8b11c5795412a8b7e72b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36713333" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Collection&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Collection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.Collection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Collection(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Collection : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type Collection&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface IList&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="d95f1-101">コレクション内の要素の型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d95f1-101">The type of elements in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="d95f1-102">Provides the base class for a generic collection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d95f1-102">Provides the base class for a generic collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-103"><xref:System.Collections.ObjectModel.Collection%601>クラスは、構築された型の 1 つのインスタンスを作成してすぐに使用できます。 行う必要があるのは、コレクションに含まれているオブジェクトの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-103">The <xref:System.Collections.ObjectModel.Collection%601> class can be used immediately by creating an instance of one of its constructed types; all you have to do is specify the type of object to be contained in the collection.</span></span> <span data-ttu-id="d95f1-104">さらに、独自のコレクション型を構築された型から派生したりからジェネリック コレクション型を派生させる、<xref:System.Collections.ObjectModel.Collection%601>クラス自体です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-104">In addition, you can derive your own collection type from any constructed type, or derive a generic collection type from the <xref:System.Collections.ObjectModel.Collection%601> class itself.</span></span>  
  
 <span data-ttu-id="d95f1-105"><xref:System.Collections.ObjectModel.Collection%601>クラスをその動作を追加するときと項目を削除する、オフにすると、コレクションまたは既存の項目の値を設定をカスタマイズするために使用する保護対象のメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-105">The <xref:System.Collections.ObjectModel.Collection%601> class provides protected methods that can be used to customize its behavior when adding and removing items, clearing the collection, or setting the value of an existing item.</span></span>  
  
 <span data-ttu-id="d95f1-106">ほとんど<xref:System.Collections.ObjectModel.Collection%601>objectscan を変更します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-106">Most <xref:System.Collections.ObjectModel.Collection%601> objectscan be modified.</span></span> <span data-ttu-id="d95f1-107">ただし、<xref:System.Collections.ObjectModel.Collection%601>読み取り専用に初期化されたオブジェクトを<xref:System.Collections.Generic.IList%601>オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-107">However, a <xref:System.Collections.ObjectModel.Collection%601> object that is initialized with a read-only <xref:System.Collections.Generic.IList%601> object cannot be modified.</span></span> <span data-ttu-id="d95f1-108">参照してください<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>このクラスの読み取り専用バージョン。</span><span class="sxs-lookup"><span data-stu-id="d95f1-108">See <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> for a read-only version of this class.</span></span>  
  
 <span data-ttu-id="d95f1-109">このコレクション内の要素は、整数インデックスを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-109">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="d95f1-110">このコレクションのインデックスは 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-110">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="d95f1-111"><xref:System.Collections.ObjectModel.Collection%601> 受け付ける`null`と参照の有効な値の型により、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="d95f1-111"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d95f1-112">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d95f1-112">This section contains two code examples.</span></span> <span data-ttu-id="d95f1-113">最初の例は、いくつかのプロパティとメソッドを示しています、<xref:System.Collections.ObjectModel.Collection%601>クラスです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-113">The first example demonstrates several properties and methods of the <xref:System.Collections.ObjectModel.Collection%601> class.</span></span> <span data-ttu-id="d95f1-114">2 番目の例から構築された型のコレクション クラスを派生させる方法を示しています。 <xref:System.Collections.ObjectModel.Collection%601>、の保護されたメソッドをオーバーライドする方法と<xref:System.Collections.ObjectModel.Collection%601>カスタム動作を提供します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-114">The second example shows how to derive a collection class from a constructed type of <xref:System.Collections.ObjectModel.Collection%601>, and how to override the protected methods of <xref:System.Collections.ObjectModel.Collection%601> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="d95f1-115">例 1</span><span class="sxs-lookup"><span data-stu-id="d95f1-115">Example 1</span></span>  
  
 <span data-ttu-id="d95f1-116">次のコード例は、多くのプロパティとメソッドを示しています。<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-116">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="d95f1-117">コード例は、文字列のコレクションを作成、<xref:System.Collections.ObjectModel.Collection%601.Add%2A>をいくつかの文字列を追加するメソッドを表示、<xref:System.Collections.ObjectModel.Collection%601.Count%2A>文字列の一覧とします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-117">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="d95f1-118">この例では、<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>文字列のインデックスを検索するメソッド、および<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>文字列がコレクション内にあるかどうかを調べます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-118">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="d95f1-119">例では、挿入を使用して、文字列、<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>とメソッドの取得および設定の文字列が既定値を使用して<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティ (c# のインデクサー)。</span><span class="sxs-lookup"><span data-stu-id="d95f1-119">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d95f1-120">例では、文字列の id を使用して文字列を削除する、<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>メソッドとインデックスを使用して、<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-120">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="d95f1-121">最後に、<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッドを使用して、コレクションからすべての文字列をクリアします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-121">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 <span data-ttu-id="d95f1-122">例 2</span><span class="sxs-lookup"><span data-stu-id="d95f1-122">Example 2</span></span>  
  
 <span data-ttu-id="d95f1-123">次のコード例をから構築された型のコレクション クラスを派生させる方法を示しています、<xref:System.Collections.ObjectModel.Collection%601>ジェネリック クラス、および保護されたをオーバーライドする方法<xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>、 <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>、 <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>、および<xref:System.Collections.ObjectModel.Collection%601.SetItem%2A>ユーザー設定を提供するメソッド動作、 <xref:System.Collections.ObjectModel.Collection%601.Add%2A>、 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>、 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>、および<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッド、および設定の<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-123">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="d95f1-124">この例で提供されるカスタムの動作は、`Changed`個々 の保護されたメソッドの最後に発生するイベントを通知します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-124">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="d95f1-125">`Dinosaurs`クラスは継承`Collection<string>`(`Collection(Of String)` Visual Basic で) を定義し、`Changed`を使用する、イベント、`DinosaursChangedEventArgs`イベントの情報、および変更の種類を識別する列挙体のクラスです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-125">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="d95f1-126">いくつかのプロパティとメソッドを呼び出すコード例を<xref:System.Collections.ObjectModel.Collection%601>をカスタム イベントを示します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-126">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="d95f1-127">パブリック静的 (<see langword="Shared" /> Visual Basic で) この型のメンバーは、スレッド セーフであります。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d95f1-127">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="d95f1-128">インスタンス メンバーの場合は、スレッド セーフであるとは限りません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d95f1-128">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="d95f1-129">A<see cref="T:System.Collections.ObjectModel.Collection`1" />コレクションが変更されない限り、複数のリーダーを同時にサポートできます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d95f1-129">A <see cref="T:System.Collections.ObjectModel.Collection`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="d95f1-130">それでも、コレクションの列挙は、本質的には、スレッド セーフなプロシージャではします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d95f1-130">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="d95f1-131">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d95f1-131">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span>
      </span>
      <span data-ttu-id="d95f1-132">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d95f1-132">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <span data-ttu-id="d95f1-133">
        <para>この基本クラスは、カスタム コレクションを作成する実装を容易にできるようにするものです。実装する場合は、独自に作成する代わりにこの基本クラスを拡張することをお勧めします。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="d95f1-133">
          <para>This base class is provided to make it easier for implementers to create a custom collection. Implementers are encouraged to extend this base class instead of creating their own.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d95f1-134">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-134">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Collection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d95f1-135">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class that is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-135">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class that is empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-136">このコンス トラクターは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-136">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d95f1-137">次のコード例は、多くのプロパティとメソッドを示しています。<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-137">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="d95f1-138">コード例を含む文字列のコレクションを作成、<xref:System.Collections.ObjectModel.Collection%601.%23ctor>コンス トラクターを使用して、<xref:System.Collections.ObjectModel.Collection%601.Add%2A>をいくつかの文字列を追加するメソッドを表示、<xref:System.Collections.ObjectModel.Collection%601.Count%2A>文字列の一覧とします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-138">The code example creates a collection of strings with the <xref:System.Collections.ObjectModel.Collection%601.%23ctor> constructor, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="d95f1-139">この例では、<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>文字列のインデックスを検索するメソッド、および<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>文字列がコレクション内にあるかどうかを調べます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-139">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="d95f1-140">例では、挿入を使用して、文字列、<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>とメソッドの取得および設定の文字列が既定値を使用して<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティ (c# のインデクサー)。</span><span class="sxs-lookup"><span data-stu-id="d95f1-140">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d95f1-141">例では、文字列の id を使用して文字列を削除する、<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>メソッドとインデックスを使用して、<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-141">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="d95f1-142">最後に、<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッドを使用して、コレクションからすべての文字列をクリアします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-142">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Collection (System.Collections.Generic.IList&lt;T&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;!T&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (list As IList(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Collection(System::Collections::Generic::IList&lt;T&gt; ^ list);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.Collection&lt;'T&gt; : System.Collections.Generic.IList&lt;'T&gt; -&gt; System.Collections.ObjectModel.Collection&lt;'T&gt;" Usage="new System.Collections.ObjectModel.Collection&lt;'T&gt; list" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="d95f1-143">The list that is wrapped by the new collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-143">The list that is wrapped by the new collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-144">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class as a wrapper for the specified list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-144">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class as a wrapper for the specified list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-145">リストの要素はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-145">The elements of the list are not copied.</span></span> <span data-ttu-id="d95f1-146">その後、リストの要素に対する変更がを通じて表示されるよう、ボックスの一覧が、コレクションによってラップされた、<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-146">The list is wrapped by the collection, so that subsequent changes to the elements of the list are visible through the <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="d95f1-147">このコンス トラクターは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-147">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d95f1-148">
            <paramref name="list" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-148">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="collection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="d95f1-149">The object to be added to the end of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-149">The object to be added to the end of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
          <span data-ttu-id="d95f1-150">The value can be <see langword="null" /> for reference types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-150">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-151">Adds an object to the end of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-151">Adds an object to the end of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-152"><xref:System.Collections.ObjectModel.Collection%601> 受け付ける`null`と参照の有効な値の型により、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="d95f1-152"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="d95f1-153">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-153">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d95f1-154">次のコード例は、多くのプロパティとメソッドを示しています。<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-154">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="d95f1-155">コード例は、文字列のコレクションを作成、<xref:System.Collections.ObjectModel.Collection%601.Add%2A>をいくつかの文字列を追加するメソッドを表示、<xref:System.Collections.ObjectModel.Collection%601.Count%2A>文字列の一覧とします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-155">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="d95f1-156">この例では、<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>文字列のインデックスを検索するメソッド、および<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>文字列がコレクション内にあるかどうかを調べます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-156">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="d95f1-157">例では、挿入を使用して、文字列、<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>とメソッドの取得および設定の文字列が既定値を使用して<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティ (c# のインデクサー)。</span><span class="sxs-lookup"><span data-stu-id="d95f1-157">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d95f1-158">例では、文字列の id を使用して文字列を削除する、<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>メソッドとインデックスを使用して、<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-158">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="d95f1-159">最後に、<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッドを使用して、コレクションからすべての文字列をクリアします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-159">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="collection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d95f1-160">Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-160">Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-161"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> 0 に設定し、コレクションの要素から他のオブジェクトへの参照も解放します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-161"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="d95f1-162">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-162">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d95f1-163">次のコード例は、多くのプロパティとメソッドを示しています。<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-163">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="d95f1-164">コード例は、文字列のコレクションを作成、<xref:System.Collections.ObjectModel.Collection%601.Add%2A>をいくつかの文字列を追加するメソッドを表示、<xref:System.Collections.ObjectModel.Collection%601.Count%2A>文字列の一覧とします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-164">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="d95f1-165">この例では、<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>文字列のインデックスを検索するメソッド、および<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>文字列がコレクション内にあるかどうかを調べます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-165">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="d95f1-166">例では、挿入を使用して、文字列、<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>とメソッドの取得および設定の文字列が既定値を使用して<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティ (c# のインデクサー)。</span><span class="sxs-lookup"><span data-stu-id="d95f1-166">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d95f1-167">例では、文字列の id を使用して文字列を削除する、<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>メソッドとインデックスを使用して、<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-167">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="d95f1-168">最後に、<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッドを使用して、コレクションからすべての文字列をクリアします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-168">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d95f1-169">
            <para>派生クラスでオーバーライド<see cref="M:System.Collections.ObjectModel.Collection`1.ClearItems" />このメソッドの動作を変更します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-169">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.ClearItems" /> to change the behavior of this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected virtual void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearItems();" />
      <MemberSignature Language="F#" Value="abstract member ClearItems : unit -&gt; unit&#xA;override this.ClearItems : unit -&gt; unit" Usage="collection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d95f1-170">Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-170">Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-171"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> 0 に設定し、コレクションの要素から他のオブジェクトへの参照も解放します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-171"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="d95f1-172">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-172">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d95f1-173">次のコード例をから構築された型のコレクション クラスを派生させる方法を示しています、<xref:System.Collections.ObjectModel.Collection%601>ジェネリック クラス、および保護されたをオーバーライドする方法<xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>、 <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>、 <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>、および<xref:System.Collections.ObjectModel.Collection%601.SetItem%2A>ユーザー設定を提供するメソッド動作、 <xref:System.Collections.ObjectModel.Collection%601.Add%2A>、 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>、 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>、および<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッド、および設定の<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-173">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="d95f1-174">この例で提供されるカスタムの動作は、`Changed`個々 の保護されたメソッドの最後に発生するイベントを通知します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-174">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="d95f1-175">`Dinosaurs`クラスは継承`Collection<string>`(`Collection(Of String)` Visual Basic で) を定義し、`Changed`を使用する、イベント、`DinosaursChangedEventArgs`イベントの情報、および変更の種類を識別する列挙体のクラスです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-175">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="d95f1-176">いくつかのプロパティとメソッドを呼び出すコード例を<xref:System.Collections.ObjectModel.Collection%601>をカスタム イベントを示します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-176">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d95f1-177">
            <para>派生クラスでの動作を変更するには、このメソッドをオーバーライドできる、<see cref="M:System.Collections.ObjectModel.Collection`1.Clear" />メソッドです。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-177">
              <para>Derived classes can override this method to change the behavior of the <see cref="M:System.Collections.ObjectModel.Collection`1.Clear" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="collection.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="d95f1-178">The object to locate in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-178">The object to locate in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
          <span data-ttu-id="d95f1-179">The value can be <see langword="null" /> for reference types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-179">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-180">Determines whether an element is in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-180">Determines whether an element is in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d95f1-181">
            <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ObjectModel.Collection`1" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-181">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ObjectModel.Collection`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-182">場合、<xref:System.Collections.ObjectModel.Collection%601>オブジェクトが作成される既定のコンス トラクターを使用して、このメソッドは、既定の等値比較子を使用して等しいかどうかを決定<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>の`T`リスト内の値の型。</span><span class="sxs-lookup"><span data-stu-id="d95f1-182">If the <xref:System.Collections.ObjectModel.Collection%601> object is created using the default constructor, this method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span> <span data-ttu-id="d95f1-183">場合型`T`を実装しません、 <xref:System.IEquatable%601> 、インターフェイス、<xref:System.Object.Equals%2A>メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-183">If type `T` does not implement the <xref:System.IEquatable%601> interface, the <xref:System.Object.Equals%2A> method is used.</span></span>  
  
 <span data-ttu-id="d95f1-184">コレクション オブジェクトを渡すことによって作成する場合、<xref:System.Collections.Generic.IList%601>コンス トラクター、オブジェクト、<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>メソッドによって決定されます、<xref:System.Collections.Generic.IEqualityComparer%601>をで使用されるインターフェイス<xref:System.Collections.Generic.IList%601>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d95f1-184">If the Collection object is created by passing an <xref:System.Collections.Generic.IList%601> object to the constructor, the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method will be determined by the <xref:System.Collections.Generic.IEqualityComparer%601> interface used by that <xref:System.Collections.Generic.IList%601> object.</span></span>  
  
 <span data-ttu-id="d95f1-185">このメソッドは、一方向の検索を実行します。したがって、平均実行時間に比例して<xref:System.Collections.ObjectModel.Collection%601.Count%2A>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-185">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span> <span data-ttu-id="d95f1-186">つまり、このメソッドは、O (`n`) 操作、場所`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-186">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="collection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="d95f1-187">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-187">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
          <span data-ttu-id="d95f1-188">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-188">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="d95f1-189">The zero-based index in <c>array</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-189">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-190">Copies the entire <see cref="T:System.Collections.ObjectModel.Collection`1" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-190">Copies the entire <see cref="T:System.Collections.ObjectModel.Collection`1" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-191">このメソッドを使用して<xref:System.Array.Copy%2A?displayProperty=nameWithType>要素のコピー。</span><span class="sxs-lookup"><span data-stu-id="d95f1-191">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="d95f1-192">要素のコピー先は、<xref:System.Array>を列挙子が反復処理する順序と同じ順序で、<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-192">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="d95f1-193">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-193">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d95f1-194">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-194">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d95f1-195">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-195">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d95f1-196">The number of elements in the source <see cref="T:System.Collections.ObjectModel.Collection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-196">The number of elements in the source <see cref="T:System.Collections.ObjectModel.Collection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d95f1-197">Gets the number of elements actually contained in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-197">Gets the number of elements actually contained in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d95f1-198">実際に含まれる要素の数、<see cref="T:System.Collections.ObjectModel.Collection`1" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-198">The number of elements actually contained in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-199">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-199">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d95f1-200">次のコード例は、多くのプロパティとメソッドを示しています。<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-200">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="d95f1-201">コード例は、文字列のコレクションを作成、<xref:System.Collections.ObjectModel.Collection%601.Add%2A>をいくつかの文字列を追加するメソッドを表示、<xref:System.Collections.ObjectModel.Collection%601.Count%2A>文字列の一覧とします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-201">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="d95f1-202">この例では、<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>文字列のインデックスを検索するメソッド、および<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>文字列がコレクション内にあるかどうかを調べます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-202">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="d95f1-203">例では、挿入を使用して、文字列、<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>とメソッドの取得および設定の文字列が既定値を使用して<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティ (c# のインデクサー)。</span><span class="sxs-lookup"><span data-stu-id="d95f1-203">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d95f1-204">例では、文字列の id を使用して文字列を削除する、<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>メソッドとインデックスを使用して、<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-204">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="d95f1-205">最後に、<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッドを使用して、コレクションからすべての文字列をクリアします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-205">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="collection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d95f1-206">Returns an enumerator that iterates through the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-206">Returns an enumerator that iterates through the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d95f1-207">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-207">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-208">`foreach` C# 言語のステートメント (`for each` C++ では、 `For Each` Visual Basic で)、列挙子の複雑さが隠されています。</span><span class="sxs-lookup"><span data-stu-id="d95f1-208">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="d95f1-209">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-209">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="d95f1-210">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-210">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="d95f1-211">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-211">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="d95f1-212">この位置では、<xref:System.Collections.Generic.IEnumerator%601.Current%2A> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-212">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="d95f1-213">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.Generic.IEnumerator%601.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-213">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="d95f1-214"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-214"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="d95f1-215"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.Generic.IEnumerator%601.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-215"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="d95f1-216">場合<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.IEnumerator.MoveNext%2A>返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-216">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="d95f1-217">列挙子がこの位置では、後続の呼び出しの場合<xref:System.Collections.IEnumerator.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-217">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="d95f1-218">最後の呼び出し場合<xref:System.Collections.IEnumerator.MoveNext%2A>返される`false`、<xref:System.Collections.Generic.IEnumerator%601.Current%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-218">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="d95f1-219"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> を、再度、コレクションの最初の要素に設定することはできません。列挙子の新しいインスタンスを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-219">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="d95f1-220">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-220">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d95f1-221">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-221">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="d95f1-222">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-222">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="d95f1-223">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-223">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="d95f1-224">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-224">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="d95f1-225">既定の実装のコレクションの<xref:System.Collections.Generic?displayProperty=nameWithType>が同期されていません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-225">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="d95f1-226">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-226">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="collection.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="d95f1-227">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-227">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="d95f1-228">The value can be <see langword="null" /> for reference types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-228">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-229">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-229">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d95f1-230">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Collections.ObjectModel.Collection`1" />, if found; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-230">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Collections.ObjectModel.Collection`1" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-231"><xref:System.Collections.ObjectModel.Collection%601>はフォワード最初の要素を起点と最後の要素で終わる検索します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-231">The <xref:System.Collections.ObjectModel.Collection%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="d95f1-232">このメソッドは、既定の等値比較子を使用して等しいかどうかを決定<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>の`T`リスト内の値の型。</span><span class="sxs-lookup"><span data-stu-id="d95f1-232">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="d95f1-233">このメソッドは、一方向の検索を実行します。したがって、平均実行時間に比例して<xref:System.Collections.ObjectModel.Collection%601.Count%2A>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-233">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span> <span data-ttu-id="d95f1-234">つまり、このメソッドは、O (`n`) 操作、場所`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-234">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d95f1-235">次のコード例は、多くのプロパティとメソッドを示しています。<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-235">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="d95f1-236">コード例は、文字列のコレクションを作成、<xref:System.Collections.ObjectModel.Collection%601.Add%2A>をいくつかの文字列を追加するメソッドを表示、<xref:System.Collections.ObjectModel.Collection%601.Count%2A>文字列の一覧とします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-236">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="d95f1-237">この例では、<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>文字列のインデックスを検索するメソッド、および<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>文字列がコレクション内にあるかどうかを調べます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-237">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="d95f1-238">例では、挿入を使用して、文字列、<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>とメソッドの取得および設定の文字列が既定値を使用して<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティ (c# のインデクサー)。</span><span class="sxs-lookup"><span data-stu-id="d95f1-238">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d95f1-239">例では、文字列の id を使用して文字列を削除する、<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>メソッドとインデックスを使用して、<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-239">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="d95f1-240">最後に、<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッドを使用して、コレクションからすべての文字列をクリアします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-240">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="collection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d95f1-241">The zero-based index at which <c>item</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-241">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="d95f1-242">The object to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-242">The object to insert.</span>
          </span>
          <span data-ttu-id="d95f1-243">The value can be <see langword="null" /> for reference types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-243">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-244">Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-244">Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-245"><xref:System.Collections.ObjectModel.Collection%601> 受け付ける`null`と参照の有効な値の型により、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="d95f1-245"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="d95f1-246">場合`index`と等しい<xref:System.Collections.ObjectModel.Collection%601.Count%2A>、`item`の末尾に追加された<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-246">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="d95f1-247">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-247">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d95f1-248">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-248">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="d95f1-249">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-249">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="d95f1-250">
            <para>派生クラスでオーバーライド<see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" />このメソッドの動作を変更します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-250">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" /> to change the behavior of this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected virtual void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InsertItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : int * 'T -&gt; unit&#xA;override this.InsertItem : int * 'T -&gt; unit" Usage="collection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d95f1-251">The zero-based index at which <c>item</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-251">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="d95f1-252">The object to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-252">The object to insert.</span>
          </span>
          <span data-ttu-id="d95f1-253">The value can be <see langword="null" /> for reference types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-253">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-254">Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-254">Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-255"><xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>は派生クラスでオーバーライドされることを意図したものです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-255">The <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A> is meant to be overridden in a derived class.</span></span> <span data-ttu-id="d95f1-256">パブリック メソッド内の項目を挿入する、<xref:System.Collections.ObjectModel.Collection%601>を参照してください<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-256">For a public method to insert an item in the <xref:System.Collections.ObjectModel.Collection%601>, see <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>.</span></span>  
  
 <span data-ttu-id="d95f1-257"><xref:System.Collections.ObjectModel.Collection%601> 受け付ける`null`と参照の有効な値の型により、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="d95f1-257"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="d95f1-258">場合`index`と等しい<xref:System.Collections.ObjectModel.Collection%601.Count%2A>、`item`の末尾に追加された<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-258">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="d95f1-259">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-259">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d95f1-260">次のコード例をから構築された型のコレクション クラスを派生させる方法を示しています、<xref:System.Collections.ObjectModel.Collection%601>ジェネリック クラス、および保護されたをオーバーライドする方法<xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>、 <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>、 <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>、および<xref:System.Collections.ObjectModel.Collection%601.SetItem%2A>ユーザー設定を提供するメソッド動作、 <xref:System.Collections.ObjectModel.Collection%601.Add%2A>、 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>、 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>、および<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッド、および設定の<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-260">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="d95f1-261">この例で提供されるカスタムの動作は、`Changed`個々 の保護されたメソッドの最後に発生するイベントを通知します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-261">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="d95f1-262">`Dinosaurs`クラスは継承`Collection<string>`(`Collection(Of String)` Visual Basic で) を定義し、`Changed`を使用する、イベント、`DinosaursChangedEventArgs`イベントの情報、および変更の種類を識別する列挙体のクラスです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-262">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="d95f1-263">いくつかのプロパティとメソッドを呼び出すコード例を<xref:System.Collections.ObjectModel.Collection%601>をカスタム イベントを示します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-263">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d95f1-264">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-264">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="d95f1-265">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-265">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d95f1-266">The zero-based index of the element to get or set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-266">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-267">Gets or sets the element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-267">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d95f1-268">指定したインデックス位置にある要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-268">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-269"><xref:System.Collections.ObjectModel.Collection%601> 受け付ける`null`と参照の有効な値の型により、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="d95f1-269"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="d95f1-270">このプロパティでは、`myCollection[index]` という構文を使用して、コレクション内の特定の要素にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-270">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="d95f1-271">C# 言語キーワードを使用して実装する代わりに、インデクサーの定義、<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-271">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span> <span data-ttu-id="d95f1-272">Visual Basic は、<xref:System.Collections.ObjectModel.Collection%601.Item%2A> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-272">Visual Basic implements <xref:System.Collections.ObjectModel.Collection%601.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="d95f1-273">このプロパティの値を取得する場合は、o (1) 操作です。プロパティの設定は、o (1) 操作ではもです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-273">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d95f1-274">次のコード例は、多くのプロパティとメソッドを示しています。<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-274">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="d95f1-275">コード例は、文字列のコレクションを作成、<xref:System.Collections.ObjectModel.Collection%601.Add%2A>をいくつかの文字列を追加するメソッドを表示、<xref:System.Collections.ObjectModel.Collection%601.Count%2A>文字列の一覧とします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-275">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="d95f1-276">この例では、<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>文字列のインデックスを検索するメソッド、および<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>文字列がコレクション内にあるかどうかを調べます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-276">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="d95f1-277">例では、挿入を使用して、文字列、<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>とメソッドの取得および設定の文字列が既定値を使用して<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティ (c# のインデクサー)。</span><span class="sxs-lookup"><span data-stu-id="d95f1-277">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d95f1-278">例では、文字列の id を使用して文字列を削除する、<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>メソッドとインデックスを使用して、<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-278">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="d95f1-279">最後に、<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッドを使用して、コレクションからすべての文字列をクリアします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-279">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d95f1-280">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-280">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="d95f1-281">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-281">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="d95f1-282">
            <para>派生クラスでオーバーライド<see cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" />このプロパティの設定の動作を変更します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-282">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" /> to change the behavior of setting this property.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;T&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.Items" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Items As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Items { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.IList&lt;'T&gt;" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d95f1-283">Gets a <see cref="T:System.Collections.Generic.IList`1" /> wrapper around the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-283">Gets a <see cref="T:System.Collections.Generic.IList`1" /> wrapper around the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d95f1-284">A<see cref="T:System.Collections.Generic.IList`1" />ラッパー、<see cref="T:System.Collections.ObjectModel.Collection`1" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-284">A <see cref="T:System.Collections.Generic.IList`1" /> wrapper around the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-285">ラッパーの機能を提供する、<xref:System.Collections.Generic.IList%601>クラスし、のすべての要素を公開、<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-285">The wrapper provides the functionality of the <xref:System.Collections.Generic.IList%601> class and exposes all the elements of the <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="d95f1-286">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-286">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="collection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="d95f1-287">The object to remove from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-287">The object to remove from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
          <span data-ttu-id="d95f1-288">The value can be <see langword="null" /> for reference types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-288">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-289">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-289">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d95f1-290">
            <see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-290">
              <see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d95f1-291">This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the original <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-291">This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the original <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-292">このメソッドは、既定の等値比較子を使用して等しいかどうかを決定<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>の`T`リスト内の値の型。</span><span class="sxs-lookup"><span data-stu-id="d95f1-292">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="d95f1-293">このメソッドは、一方向の検索を実行します。したがって、平均実行時間に比例して<xref:System.Collections.ObjectModel.Collection%601.Count%2A>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-293">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span> <span data-ttu-id="d95f1-294">つまり、このメソッドは、O (`n`) 操作、場所`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-294">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d95f1-295">次のコード例は、多くのプロパティとメソッドを示しています。<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-295">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="d95f1-296">コード例は、文字列のコレクションを作成、<xref:System.Collections.ObjectModel.Collection%601.Add%2A>をいくつかの文字列を追加するメソッドを表示、<xref:System.Collections.ObjectModel.Collection%601.Count%2A>文字列の一覧とします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-296">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="d95f1-297">この例では、<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>文字列のインデックスを検索するメソッド、および<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>文字列がコレクション内にあるかどうかを調べます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-297">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="d95f1-298">例では、挿入を使用して、文字列、<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>とメソッドの取得および設定の文字列が既定値を使用して<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティ (c# のインデクサー)。</span><span class="sxs-lookup"><span data-stu-id="d95f1-298">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d95f1-299">例では、文字列の id を使用して文字列を削除する、<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>メソッドとインデックスを使用して、<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-299">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="d95f1-300">最後に、<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッドを使用して、コレクションからすべての文字列をクリアします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-300">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d95f1-301">
            <para>派生クラスでオーバーライド<see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />このメソッドの動作を変更します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-301">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /> to change the behavior of this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="collection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d95f1-302">The zero-based index of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-302">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-303">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-303">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-304">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-304">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d95f1-305">次のコード例は、多くのプロパティとメソッドを示しています。<xref:System.Collections.ObjectModel.Collection%601>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-305">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="d95f1-306">コード例は、文字列のコレクションを作成、<xref:System.Collections.ObjectModel.Collection%601.Add%2A>をいくつかの文字列を追加するメソッドを表示、<xref:System.Collections.ObjectModel.Collection%601.Count%2A>文字列の一覧とします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-306">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="d95f1-307">この例では、<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>文字列のインデックスを検索するメソッド、および<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>文字列がコレクション内にあるかどうかを調べます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-307">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="d95f1-308">例では、挿入を使用して、文字列、<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>とメソッドの取得および設定の文字列が既定値を使用して<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティ (c# のインデクサー)。</span><span class="sxs-lookup"><span data-stu-id="d95f1-308">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d95f1-309">例では、文字列の id を使用して文字列を削除する、<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>メソッドとインデックスを使用して、<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-309">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="d95f1-310">最後に、<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッドを使用して、コレクションからすべての文字列をクリアします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-310">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d95f1-311">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-311">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="d95f1-312">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-312">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="d95f1-313">
            <para>派生クラスでオーバーライド<see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />このメソッドの動作を変更します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-313">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /> to change the behavior of this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected virtual void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : int -&gt; unit&#xA;override this.RemoveItem : int -&gt; unit" Usage="collection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d95f1-314">The zero-based index of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-314">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-315">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-315">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-316">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-316">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d95f1-317">次のコード例をから構築された型のコレクション クラスを派生させる方法を示しています、<xref:System.Collections.ObjectModel.Collection%601>ジェネリック クラス、および保護されたをオーバーライドする方法<xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>、 <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>、 <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>、および<xref:System.Collections.ObjectModel.Collection%601.SetItem%2A>ユーザー設定を提供するメソッド動作、 <xref:System.Collections.ObjectModel.Collection%601.Add%2A>、 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>、 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>、および<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッド、および設定の<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-317">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="d95f1-318">この例で提供されるカスタムの動作は、`Changed`個々 の保護されたメソッドの最後に発生するイベントを通知します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-318">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="d95f1-319">`Dinosaurs`クラスは継承`Collection<string>`(`Collection(Of String)` Visual Basic で) を定義し、`Changed`を使用する、イベント、`DinosaursChangedEventArgs`イベントの情報、および変更の種類を識別する列挙体のクラスです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-319">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="d95f1-320">いくつかのプロパティとメソッドを呼び出すコード例を<xref:System.Collections.ObjectModel.Collection%601>をカスタム イベントを示します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-320">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d95f1-321">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-321">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="d95f1-322">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-322">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected virtual void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'T -&gt; unit&#xA;override this.SetItem : int * 'T -&gt; unit" Usage="collection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d95f1-323">The zero-based index of the element to replace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-323">The zero-based index of the element to replace.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="d95f1-324">The new value for the element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-324">The new value for the element at the specified index.</span>
          </span>
          <span data-ttu-id="d95f1-325">The value can be <see langword="null" /> for reference types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-325">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-326">Replaces the element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-326">Replaces the element at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-327"><xref:System.Collections.ObjectModel.Collection%601> 受け付ける`null`と参照の有効な値の型により、重複する要素。</span><span class="sxs-lookup"><span data-stu-id="d95f1-327"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="d95f1-328">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-328">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d95f1-329">次のコード例をから構築された型のコレクション クラスを派生させる方法を示しています、<xref:System.Collections.ObjectModel.Collection%601>ジェネリック クラス、および保護されたをオーバーライドする方法<xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>、 <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>、 <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>、および<xref:System.Collections.ObjectModel.Collection%601.SetItem%2A>ユーザー設定を提供するメソッド動作、 <xref:System.Collections.ObjectModel.Collection%601.Add%2A>、 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>、 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>、および<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>メソッド、および設定の<xref:System.Collections.ObjectModel.Collection%601.Item%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-329">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="d95f1-330">この例で提供されるカスタムの動作は、`Changed`個々 の保護されたメソッドの最後に発生するイベントを通知します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-330">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="d95f1-331">`Dinosaurs`クラスは継承`Collection<string>`(`Collection(Of String)` Visual Basic で) を定義し、`Changed`を使用する、イベント、`DinosaursChangedEventArgs`イベントの情報、および変更の種類を識別する列挙体のクラスです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-331">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="d95f1-332">いくつかのプロパティとメソッドを呼び出すコード例を<xref:System.Collections.ObjectModel.Collection%601>をカスタム イベントを示します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-332">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d95f1-333">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-333">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="d95f1-334">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-334">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Items" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d95f1-335">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-335">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d95f1-336">
            <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Collections.Generic.ICollection`1" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-336">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d95f1-337">
            <see cref="T:System.Collections.ObjectModel.Collection`1" /> の既定の実装では、このプロパティは常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-337">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-338">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-338">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="d95f1-339">読み取り専用であるコレクションは、コレクションのコレクションの変更を防止するラッパーです。そのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-339">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="d95f1-340">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-340">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="d95f1-341">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-341">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="d95f1-342">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-342">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="d95f1-343">The zero-based index in <c>array</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-343">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-344">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-344">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d95f1-345">場合、ソースの種類<xref:System.Collections.ICollection>変換先の型に自動的にキャストすることはできません`array`の非ジェネリックの実装<xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType>スロー<xref:System.InvalidCastException>汎用実装でスローされ、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-345">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="d95f1-346">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-346">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d95f1-347">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-347">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d95f1-348">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-348">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d95f1-349">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-349">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="d95f1-350">-or-  <paramref name="array" /> does not have zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-350">-or-  <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="d95f1-351">-or-  The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-351">-or-  The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="d95f1-352">-or-  The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-352">-or-  The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d95f1-353">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-353">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d95f1-354">
            <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-354">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d95f1-355">
            <see cref="T:System.Collections.ObjectModel.Collection`1" /> の既定の実装では、このプロパティは常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-355">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-356">既定の実装のコレクションの<xref:System.Collections.Generic?displayProperty=nameWithType>が同期されていません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-356">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="d95f1-357">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-357">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="d95f1-358">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-358">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="d95f1-359">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-359">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="d95f1-360"><xref:System.Collections.ICollection.SyncRoot%2A> アクセスを同期するために使用できるオブジェクトを返します、<xref:System.Collections.ICollection>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-360"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="d95f1-361">同期は、すべてのスレッドがコレクションにアクセスする前にこのオブジェクトをロックする場合のみ有効です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-361">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="d95f1-362">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-362">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d95f1-363">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-363">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d95f1-364">
            <see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-364">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="d95f1-365">
            <see cref="T:System.Collections.ObjectModel.Collection`1" /> の既定の実装では、このプロパティは常に現在のインスタンスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-365">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-366">既定の実装のコレクションの<xref:System.Collections.Generic?displayProperty=nameWithType>が同期されていません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-366">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="d95f1-367">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-367">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="d95f1-368">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-368">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="d95f1-369">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-369">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="d95f1-370"><xref:System.Collections.ICollection.SyncRoot%2A> アクセスを同期するために使用できるオブジェクトを返します、<xref:System.Collections.ICollection>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-370"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="d95f1-371">同期は、すべてのスレッドがコレクションにアクセスする前にこのオブジェクトをロックする場合のみ有効です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-371">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="d95f1-372">次のコードの使用を示しています、 <xref:System.Collections.ICollection.SyncRoot%2A> c#、C++、および Visual Basic のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-372">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="d95f1-373">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-373">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d95f1-374">Returns an enumerator that iterates through a collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-374">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d95f1-375">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-375">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-376">`foreach` C# 言語のステートメント (`for each` C++ では、 `For Each` Visual Basic で)、列挙子の複雑さが隠されています。</span><span class="sxs-lookup"><span data-stu-id="d95f1-376">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="d95f1-377">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d95f1-377">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="d95f1-378">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-378">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="d95f1-379">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-379">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="d95f1-380"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-380"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="d95f1-381">この位置では、<xref:System.Collections.IEnumerator.Current%2A> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-381">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="d95f1-382">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-382">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="d95f1-383"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-383"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="d95f1-384"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-384"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="d95f1-385">場合<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.IEnumerator.MoveNext%2A>返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-385">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="d95f1-386">列挙子がこの位置では、後続の呼び出しの場合<xref:System.Collections.IEnumerator.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-386">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="d95f1-387">最後の呼び出し場合<xref:System.Collections.IEnumerator.MoveNext%2A>返される`false`、<xref:System.Collections.IEnumerator.Current%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-387">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="d95f1-388"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-388">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="d95f1-389">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-389">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d95f1-390">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-390">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="d95f1-391">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-391">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="d95f1-392">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-392">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="d95f1-393">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-393">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="d95f1-394">既定の実装のコレクションの<xref:System.Collections.Generic?displayProperty=nameWithType>が同期されていません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-394">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="d95f1-395">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-395">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d95f1-396">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-396">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-397">Adds an item to the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-397">Adds an item to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d95f1-398">The position into which the new element was inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-398">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-399">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-399">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d95f1-400">
            <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-400">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d95f1-401">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-401">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-402">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-402">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d95f1-403">
            <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-403">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-404">このメソッドは、最初に等しいかどうかを決定するかどうか`value`の種類は`T`(または null) し、呼び出す<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-404">This method determines equality by first determining whether `value` is of type `T` (or null) and then calling <xref:System.Collections.ObjectModel.Collection%601.Contains%2A>.</span></span>  
  
 <span data-ttu-id="d95f1-405">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-405">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d95f1-406">
            <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-406">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d95f1-407">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-407">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-408">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-408">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d95f1-409">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-409">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-410">このメソッドは、既定の比較子を使用して等しいかどうかを決定<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-410">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="d95f1-411"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> チェックを入力するかどうか`T`を実装する<xref:System.IComparable%601?displayProperty=nameWithType>し、使用可能な場合は、その実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-411"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="d95f1-412">ない場合は、<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>チェックを入力するかどうか`T`実装<xref:System.IComparable?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-412">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="d95f1-413">場合型`T`はいずれのインターフェイスでは、このメソッドを使用して実装されていない<xref:System.Object.Equals%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-413">If type `T` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d95f1-414">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-414">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d95f1-415">
            <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-415">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d95f1-416">The zero-based index at which <c>value</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-416">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d95f1-417">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-417">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-418">Inserts an item into the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-418">Inserts an item into the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-419">`index` が <xref:System.Collections.IList> 内の項目数に等しければ、`value` が末尾に追加されます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-419">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="d95f1-420">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-420">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d95f1-421">
            <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-421">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d95f1-422">
            <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-422">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d95f1-423">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-423">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d95f1-424">
            <see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-424">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d95f1-425">
            <see cref="T:System.Collections.ObjectModel.Collection`1" /> の既定の実装では、このプロパティは常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-425">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-426">固定サイズのコレクションでは、コレクションの作成後に要素の追加または削除はできませんが、既存の要素の変更はできます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-426">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="d95f1-427">固定サイズ コレクションが追加および削除する要素を防止するラッパーで単純なコレクションそのための追加または削除、要素を含む、基になるコレクションが変更された場合、固定サイズ コレクションにはそれらの変更が反映されます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-427">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="d95f1-428">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-428">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d95f1-429">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-429">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d95f1-430">
            <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-430">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d95f1-431">
            <see cref="T:System.Collections.ObjectModel.Collection`1" /> の既定の実装では、このプロパティは常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-431">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-432">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</span><span class="sxs-lookup"><span data-stu-id="d95f1-432">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="d95f1-433">読み取り専用であるコレクションは、コレクションのコレクションの変更を防止するラッパーです。そのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-433">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="d95f1-434">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="d95f1-434">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d95f1-435">The zero-based index of the element to get or set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-435">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-436">Gets or sets the element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-436">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d95f1-437">指定したインデックス位置にある要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-437">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-438">このプロパティでは、`myCollection[index]` という構文を使用して、コレクション内の特定の要素にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="d95f1-438">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="d95f1-439">C# 言語を使用して、[この](~/docs/csharp/language-reference/keywords/this.md)キーワードを実装する代わりに、インデクサーの定義、<xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-439">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="d95f1-440">Visual Basic は、<xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-440">Visual Basic implements <xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="d95f1-441">このプロパティの値を取得する場合は、o (1) 操作です。プロパティの設定は、o (1) 操作ではもです。</span><span class="sxs-lookup"><span data-stu-id="d95f1-441">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d95f1-442">
            <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-442">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d95f1-443">The property is set and <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-443">The property is set and <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d95f1-444">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-444">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d95f1-445">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-445">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d95f1-446">このメソッドは、既定の比較子を使用して等しいかどうかを決定<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-446">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="d95f1-447"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> チェックを入力するかどうか`T`を実装する<xref:System.IComparable%601?displayProperty=nameWithType>し、使用可能な場合は、その実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-447"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="d95f1-448">ない場合は、<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>チェックを入力するかどうか`T`実装<xref:System.IComparable?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-448">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="d95f1-449">場合型`T`はいずれのインターフェイスでは、このメソッドを使用して実装されていない<xref:System.Object.Equals%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="d95f1-449">If type `T` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d95f1-450">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Collections.ObjectModel.Collection%601.Count%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d95f1-450">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d95f1-451">
            <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d95f1-451">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>