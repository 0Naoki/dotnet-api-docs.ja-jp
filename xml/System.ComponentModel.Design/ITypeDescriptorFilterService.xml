<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dde13c6623bf839a58865ff79bd94fd5c045fa19" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63898737" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorFilterService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorFilterService" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorFilterService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>デザイン モードでコンポーネントの一連のメンバー記述子を変更するためのインターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>インターフェイスのデザイン時に、プロパティ、イベント、およびコンポーネントのクラス レベルの属性の変更を許可するインターフェイスを提供します。 コンポーネントを提供する記述子のセットをこの変更が発生した、<xref:System.ComponentModel.TypeDescriptor>します。 型記述子がコンポーネントのサイトのクエリを実行、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>サービスし、型記述子がこのサービスには収集したすべてのメタデータを渡す、存在する場合。 サービスは、追加、削除、およびコンポーネントの既存の特性を変更して、メタデータを変更できます。  
  
 呼び出すことによって、コンポーネントのプロパティを変更するなど、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>メソッド。 フィルター サービスは、プロパティ名と型の場合は、そのプロパティ記述子を格納しているディクショナリを取得します。<xref:System.ComponentModel.PropertyDescriptor>します。 変更を実装するには、次のロジックを使用します。  
  
|変更|実装|  
|------------------|--------------------|  
|削除|ディクショナリ内の対応するエントリを削除します。|  
|加算|ディクショナリに適切なエントリを追加します。|  
|変更を加える|プロパティ記述子の既存のメソッドを呼び出して、関連付けられているプロパティの記述子のエントリを置換、またはディクショナリ内全体のプロパティのキー/値ペアを置き換えます。|  
  
 戻り値<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>この一連のプロパティは固定されているかどうかを決定します。 このメソッドが戻る場合`true`、<xref:System.ComponentModel.TypeDescriptor>のこのコンポーネントは、結果をキャッシュできます。 このキャッシュが、いずれかのコンポーネントがガベージ コレクションされるまで保持されます。 または、<xref:System.ComponentModel.TypeDescriptor.Refresh%2A>型記述子のメソッドが呼び出されます。  
  
   
  
## Examples  
 次のコード例に示しますを使用するデザイナー、 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> 、新規または既存の属性のコレクションをフィルター処理する<xref:System.Windows.Forms.Button>読み込みまたはボタンのデザイナーを再読み込みする前に新しいデザイナーのデザイナーの属性を追加します。  
  
 例を使用するには、Windows フォーム プロジェクトにコードを追加およびクラス ライブラリからツールボックスにコンポーネントを読み込みます。  
  
 [チュートリアル: カスタム コンポーネントでツールボックスが自動的に入力](https://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx)します。  
  
 いくつかのボタンをフォームに追加します。 追加、`ButtonDesignerFilterComponent`をフォームにして、コンポーネント トレイに表示されます。 `ButtonDesignerFilterComponent`は追加、 `ButtonDesignerFilterService`、実装する<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>、デザイン モードのサービス プロバイダーとして。 既存または新規<xref:System.Windows.Forms.Button>、フォーム上のオブジェクトが循環後に色を開始、`ButtonDesignerFilterService`で各既存および新規のボタンのデザイナーを置き換える、`ColorCycleButtonDesigner`します。 色のボタンがサイクルと、マウス ポインターを移動、およびまたは繰り返しを続行またはリセットした前景色および背景色で`MouseLeave`イベント。 新しい<xref:System.Windows.Forms.Button>オブジェクトが与えられます、`ColorCycleButtonDesigner`を通じて、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A>のメソッド、`ButtonDesignerFilterService`するまで、読み込まれた、`ButtonDesignerFilterComponent`が破棄され、元の置換<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>します。 `ColorCycleButton`クラスがこの例では、<xref:System.Windows.Forms.Button>に関連付けられている、`ColorCycleButtonDesigner`します。  
  
 [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>によって公開されるメンバー記述子をフィルター処理する、 <see cref="T:System.ComponentModel.TypeDescriptor" />、コンポーネントでこのインターフェイスを実装し、上書き、 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />、 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />、または<see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />をそれぞれの属性、イベント、またはプロパティをフィルター処理するには、このクラスのメソッド。</para></block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterAttributes (component As IComponent, attributes As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterAttributes(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterAttributes (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">属性をフィルター処理する対象のコンポーネント。</param>
        <param name="attributes">変更できる属性のディクショナリ。</param>
        <summary><see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開する属性をフィルター処理します。</summary>
        <returns>フィルター処理した一連の属性をキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンポーネントの属性のセットを要求すると、このメソッドが呼び出されます。 属性は、属性の辞書に追加<xref:System.Attribute.TypeId%2A>キーと値として実際の属性として。 このサービスを実装は、追加、削除、またはディクショナリ内の既存の属性エントリを変更できます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>返す<see langword="false" />、繰り返し型記述子のフィルター サービスへのクエリ パフォーマンスが低下するため、必要な場合のみです。</para></block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterEvents (component As IComponent, events As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterEvents(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member FilterEvents : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterEvents (component, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">イベントをフィルター処理する対象のコンポーネント。</param>
        <param name="events">変更できるイベントのディクショナリ。</param>
        <summary><see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するイベントをフィルター処理します。</summary>
        <returns>フィルター処理した一連のイベントをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンポーネントのイベントのセットを要求する場合は、このメソッドが呼び出されます。 イベントは、キーと、対応するイベント名を使用してディクショナリに追加されます<xref:System.ComponentModel.EventDescriptor>値としてオブジェクト。 このサービスを実装は、追加、削除、またはディクショナリ内のイベント エントリを変更できます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>返す<see langword="false" />、繰り返し型記述子のフィルター サービスへのクエリ パフォーマンスが低下するため、必要な場合のみです。</para></block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterProperties (component As IComponent, properties As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterProperties(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member FilterProperties : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterProperties (component, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">プロパティをフィルター処理する対象のコンポーネント。</param>
        <param name="properties">変更できるプロパティのディクショナリ。</param>
        <summary><see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するプロパティをフィルター処理します。</summary>
        <returns>フィルター処理した一連のプロパティをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーは、一連のコンポーネントのプロパティを要求したときに、このメソッドが呼び出されます。 プロパティは、キーと、対応するプロパティ名を使用してディクショナリに追加されます<xref:System.ComponentModel.PropertyDescriptor>値としてオブジェクト。 このサービスを実装は、追加、削除、またはディクショナリ内のプロパティ エントリを変更できます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>返す<see langword="false" />、繰り返し型記述子のフィルター サービスへのクエリ パフォーマンスが低下するため、必要な場合のみです。</para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>