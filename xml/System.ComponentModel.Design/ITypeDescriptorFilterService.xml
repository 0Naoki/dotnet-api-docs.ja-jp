<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="560d1d0f3f0ac591966c66d848c794269545cf1d" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51919436" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorFilterService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorFilterService" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorFilterService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="40301-101">デザイン モードでコンポーネントの一連のメンバー記述子を変更するためのインターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="40301-101">Provides an interface to modify the set of member descriptors for a component in design mode.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40301-102"><xref:System.ComponentModel.Design.ITypeDescriptorFilterService>インターフェイスのデザイン時に、プロパティ、イベント、およびコンポーネントのクラス レベルの属性の変更を許可するインターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="40301-102">The <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> interface provides an interface that allows modification of the properties, events, and class-level attributes of a component at design time.</span></span> <span data-ttu-id="40301-103">コンポーネントを提供する記述子のセットをこの変更が発生した、<xref:System.ComponentModel.TypeDescriptor>します。</span><span class="sxs-lookup"><span data-stu-id="40301-103">This modification occurs through the set of descriptors that a component provides through a <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="40301-104">型記述子がコンポーネントのサイトのクエリを実行、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>サービスし、型記述子がこのサービスには収集したすべてのメタデータを渡す、存在する場合。</span><span class="sxs-lookup"><span data-stu-id="40301-104">The type descriptor will query a component's site for the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> service and, if it exists, the type descriptor will pass all metadata it has collected to this service.</span></span> <span data-ttu-id="40301-105">サービスは、追加、削除、およびコンポーネントの既存の特性を変更して、メタデータを変更できます。</span><span class="sxs-lookup"><span data-stu-id="40301-105">The service can then modify the metadata by adding, removing, and altering existing characteristics of the component.</span></span>  
  
 <span data-ttu-id="40301-106">呼び出すことによって、コンポーネントのプロパティを変更するなど、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40301-106">For example, the properties of a component can be modified through a call to the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> method.</span></span> <span data-ttu-id="40301-107">フィルター サービスは、プロパティ名と型の場合は、そのプロパティ記述子を格納しているディクショナリを取得します。<xref:System.ComponentModel.PropertyDescriptor>します。</span><span class="sxs-lookup"><span data-stu-id="40301-107">The filter service obtains a dictionary that contains property names and their property descriptors of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="40301-108">変更を実装するには、次のロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="40301-108">The modifications are implemented using the following logic.</span></span>  
  
|<span data-ttu-id="40301-109">変更</span><span class="sxs-lookup"><span data-stu-id="40301-109">Modification</span></span>|<span data-ttu-id="40301-110">実装</span><span class="sxs-lookup"><span data-stu-id="40301-110">Implementation</span></span>|  
|------------------|--------------------|  
|<span data-ttu-id="40301-111">削除</span><span class="sxs-lookup"><span data-stu-id="40301-111">Removal</span></span>|<span data-ttu-id="40301-112">ディクショナリ内の対応するエントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="40301-112">Delete the corresponding entry in the dictionary.</span></span>|  
|<span data-ttu-id="40301-113">加算</span><span class="sxs-lookup"><span data-stu-id="40301-113">Addition</span></span>|<span data-ttu-id="40301-114">ディクショナリに適切なエントリを追加します。</span><span class="sxs-lookup"><span data-stu-id="40301-114">Add the appropriate entry to the dictionary.</span></span>|  
|<span data-ttu-id="40301-115">変更を加える</span><span class="sxs-lookup"><span data-stu-id="40301-115">Alteration</span></span>|<span data-ttu-id="40301-116">プロパティ記述子の既存のメソッドを呼び出して、関連付けられているプロパティの記述子のエントリを置換、またはディクショナリ内全体のプロパティのキー/値ペアを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="40301-116">Call existing property descriptor methods, replace the associated property descriptor entry, or replace the entire property key/value pair in the dictionary.</span></span>|  
  
 <span data-ttu-id="40301-117">戻り値<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>この一連のプロパティは固定されているかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="40301-117">The return value of <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> determines if this set of properties is fixed.</span></span> <span data-ttu-id="40301-118">このメソッドが戻る場合`true`、<xref:System.ComponentModel.TypeDescriptor>のこのコンポーネントは、結果をキャッシュできます。</span><span class="sxs-lookup"><span data-stu-id="40301-118">If this method returns `true`, the <xref:System.ComponentModel.TypeDescriptor> for this component can cache the results.</span></span> <span data-ttu-id="40301-119">このキャッシュが、いずれかのコンポーネントがガベージ コレクションされるまで保持されます。 または、<xref:System.ComponentModel.TypeDescriptor.Refresh%2A>型記述子のメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="40301-119">This cache is maintained until either the component is garbage collected or the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method of the type descriptor is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40301-120">次のコード例に示しますを使用するデザイナー、 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> 、新規または既存の属性のコレクションをフィルター処理する<xref:System.Windows.Forms.Button>読み込みまたはボタンのデザイナーを再読み込みする前に新しいデザイナーのデザイナーの属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="40301-120">The following code example demonstrates a designer that uses the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> to filter the attributes collection of any new or existing <xref:System.Windows.Forms.Button> to add a designer attribute for a new designer before loading or reloading the designer for the button.</span></span>  
  
 <span data-ttu-id="40301-121">例を使用するには、Windows フォーム プロジェクトにコードを追加およびクラス ライブラリからツールボックスにコンポーネントを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="40301-121">To use the example, add the code to a Windows Forms project and load the components from the class library into the Toolbox.</span></span>  
  
 <span data-ttu-id="40301-122">参照してください[チュートリアル: カスタム コンポーネントを使用して、ツールボックスが自動的に入力](https://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx)します。</span><span class="sxs-lookup"><span data-stu-id="40301-122">Also see [Walkthrough: Automatically Populating the Toolbox with Custom Components](https://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx).</span></span>  
  
 <span data-ttu-id="40301-123">いくつかのボタンをフォームに追加します。</span><span class="sxs-lookup"><span data-stu-id="40301-123">Add some buttons to your form.</span></span> <span data-ttu-id="40301-124">追加、`ButtonDesignerFilterComponent`をフォームにして、コンポーネント トレイに表示されます。</span><span class="sxs-lookup"><span data-stu-id="40301-124">Add a `ButtonDesignerFilterComponent` to your form, and it will appear in the component tray.</span></span> <span data-ttu-id="40301-125">`ButtonDesignerFilterComponent`は追加、 `ButtonDesignerFilterService`、実装する<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>、デザイン モードのサービス プロバイダーとして。</span><span class="sxs-lookup"><span data-stu-id="40301-125">The `ButtonDesignerFilterComponent` will add a `ButtonDesignerFilterService`, which implements <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>, as a design mode service provider.</span></span> <span data-ttu-id="40301-126">既存または新規<xref:System.Windows.Forms.Button>、フォーム上のオブジェクトが循環後に色を開始、`ButtonDesignerFilterService`で各既存および新規のボタンのデザイナーを置き換える、`ColorCycleButtonDesigner`します。</span><span class="sxs-lookup"><span data-stu-id="40301-126">Existing or new <xref:System.Windows.Forms.Button> objects on the form will begin color cycling after the `ButtonDesignerFilterService` replaces the designer for each existing and new button with a `ColorCycleButtonDesigner`.</span></span> <span data-ttu-id="40301-127">色のボタンがサイクルと、マウス ポインターを移動、およびまたは繰り返しを続行またはリセットした前景色および背景色で`MouseLeave`イベント。</span><span class="sxs-lookup"><span data-stu-id="40301-127">The buttons will color cycle when you move the mouse pointer over them, and alternately continue cycling or reset the background and foreground colors on `MouseLeave` events.</span></span> <span data-ttu-id="40301-128">新しい<xref:System.Windows.Forms.Button>オブジェクトが与えられます、`ColorCycleButtonDesigner`を通じて、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A>のメソッド、`ButtonDesignerFilterService`するまで、読み込まれた、`ButtonDesignerFilterComponent`が破棄され、元の置換<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>します。</span><span class="sxs-lookup"><span data-stu-id="40301-128">New <xref:System.Windows.Forms.Button> objects will be given the `ColorCycleButtonDesigner` through the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> method of the `ButtonDesignerFilterService` that has been loaded, until the `ButtonDesignerFilterComponent` is disposed and replaces the original <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>.</span></span> <span data-ttu-id="40301-129">`ColorCycleButton`クラスがこの例では、<xref:System.Windows.Forms.Button>に関連付けられている、`ColorCycleButtonDesigner`します。</span><span class="sxs-lookup"><span data-stu-id="40301-129">The `ColorCycleButton` class in this example is a <xref:System.Windows.Forms.Button> associated with a `ColorCycleButtonDesigner`.</span></span>  
  
 [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="40301-130">によって公開されるメンバー記述子をフィルター処理する、 <see cref="T:System.ComponentModel.TypeDescriptor" />、コンポーネントでこのインターフェイスを実装し、上書き、 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />、 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />、または<see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />をそれぞれの属性、イベント、またはプロパティをフィルター処理するには、このクラスのメソッド。</span><span class="sxs-lookup"><span data-stu-id="40301-130">To filter the member descriptors exposed by a <see cref="T:System.ComponentModel.TypeDescriptor" />, implement this interface on a component and override the <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, or <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> methods of this class to filter attributes, events, or properties, respectively.</span></span></para></block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterAttributes (component As IComponent, attributes As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterAttributes(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterAttributes (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="40301-131">属性をフィルター処理する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="40301-131">The component to filter the attributes of.</span></span></param>
        <param name="attributes"><span data-ttu-id="40301-132">変更できる属性のディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="40301-132">A dictionary of attributes that can be modified.</span></span></param>
        <summary><span data-ttu-id="40301-133"><see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開する属性をフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="40301-133">Filters the attributes that a component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="40301-134">フィルター処理した一連の属性をキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="40301-134"><see langword="true" /> if the set of filtered attributes is to be cached; <see langword="false" /> if the filter service must query again.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40301-135">コンポーネントの属性のセットを要求すると、このメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="40301-135">This method is called when a user requests a set of attributes for a component.</span></span> <span data-ttu-id="40301-136">属性は、属性の辞書に追加<xref:System.Attribute.TypeId%2A>キーと値として実際の属性として。</span><span class="sxs-lookup"><span data-stu-id="40301-136">The attributes are added to the dictionary with the attribute's <xref:System.Attribute.TypeId%2A> as the keys and the actual attribute as the value.</span></span> <span data-ttu-id="40301-137">このサービスを実装は、追加、削除、またはディクショナリ内の既存の属性エントリを変更できます。</span><span class="sxs-lookup"><span data-stu-id="40301-137">Implementers of this service can add, remove, or alter existing attribute entries in the dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="40301-138">返す<see langword="false" />、繰り返し型記述子のフィルター サービスへのクエリ パフォーマンスが低下するため、必要な場合のみです。</span><span class="sxs-lookup"><span data-stu-id="40301-138">Return <see langword="false" /> only when necessary, because repeated queries to the type descriptor filter service can decrease performance.</span></span></para></block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterEvents (component As IComponent, events As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterEvents(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member FilterEvents : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterEvents (component, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="40301-139">イベントをフィルター処理する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="40301-139">The component to filter events for.</span></span></param>
        <param name="events"><span data-ttu-id="40301-140">変更できるイベントのディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="40301-140">A dictionary of events that can be modified.</span></span></param>
        <summary><span data-ttu-id="40301-141"><see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するイベントをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="40301-141">Filters the events that a component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="40301-142">フィルター処理した一連のイベントをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="40301-142"><see langword="true" /> if the set of filtered events is to be cached; <see langword="false" /> if the filter service must query again.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40301-143">コンポーネントのイベントのセットを要求する場合は、このメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="40301-143">This method is called when a user requests a set of events for a component.</span></span> <span data-ttu-id="40301-144">イベントは、キーと、対応するイベント名を使用してディクショナリに追加されます<xref:System.ComponentModel.EventDescriptor>値としてオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40301-144">The events are added to the dictionary with the event names as the keys and the corresponding <xref:System.ComponentModel.EventDescriptor> objects as the values.</span></span> <span data-ttu-id="40301-145">このサービスを実装は、追加、削除、またはディクショナリ内のイベント エントリを変更できます。</span><span class="sxs-lookup"><span data-stu-id="40301-145">Implementers of this service can add, remove, or alter event entries in the dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="40301-146">返す<see langword="false" />、繰り返し型記述子のフィルター サービスへのクエリ パフォーマンスが低下するため、必要な場合のみです。</span><span class="sxs-lookup"><span data-stu-id="40301-146">Return <see langword="false" /> only when necessary, because repeated queries to the type descriptor filter service can decrease performance.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterProperties (component As IComponent, properties As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterProperties(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member FilterProperties : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterProperties (component, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="40301-147">プロパティをフィルター処理する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="40301-147">The component to filter properties for.</span></span></param>
        <param name="properties"><span data-ttu-id="40301-148">変更できるプロパティのディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="40301-148">A dictionary of properties that can be modified.</span></span></param>
        <summary><span data-ttu-id="40301-149"><see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するプロパティをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="40301-149">Filters the properties that a component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="40301-150">フィルター処理した一連のプロパティをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="40301-150"><see langword="true" /> if the set of filtered properties is to be cached; <see langword="false" /> if the filter service must query again.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40301-151">ユーザーは、一連のコンポーネントのプロパティを要求したときに、このメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="40301-151">This method is called when a user requests a set of properties for a component.</span></span> <span data-ttu-id="40301-152">プロパティは、キーと、対応するプロパティ名を使用してディクショナリに追加されます<xref:System.ComponentModel.PropertyDescriptor>値としてオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40301-152">The properties are added to the dictionary with the property names as the keys and the corresponding <xref:System.ComponentModel.PropertyDescriptor> objects as the values.</span></span> <span data-ttu-id="40301-153">このサービスを実装は、追加、削除、またはディクショナリ内のプロパティ エントリを変更できます。</span><span class="sxs-lookup"><span data-stu-id="40301-153">Implementers of this service can add, remove, or alter property entries in the dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="40301-154">返す<see langword="false" />、繰り返し型記述子のフィルター サービスへのクエリ パフォーマンスが低下するため、必要な場合のみです。</span><span class="sxs-lookup"><span data-stu-id="40301-154">Return <see langword="false" /> only when necessary, because repeated queries to the type descriptor filter service can decrease performance.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>