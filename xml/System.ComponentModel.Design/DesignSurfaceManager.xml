<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DesignSurfaceManager.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c135a4e8156bfd925bea508991b3701370925168.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c135a4e8156bfd925bea508991b3701370925168</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Manages a collection of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> オブジェクトのコレクションを管理します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class is designed to be a container of <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph>クラスは、コンテナーの設計されています<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>It provides common services that handle event routing between designers, property windows, and other global objects.</source>
          <target state="translated">そのハンドル イベントのルーティング デザイナー、プロパティ ウィンドウ、およびその他のグローバル オブジェクトの間で一般的なサービスを提供します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Using <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> is optional, but it is recommended if you intend to have several designer windows.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph>は省略可能では複数のデザイナー ウィンドウをする場合はお勧めします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class provides several design-time services automatically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph>クラスが自動的にいくつかのデザイン時サービスを提供します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>You can override each of these services by replacing them in the protected <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</ph> property.</source>
          <target state="translated">これらの各サービスを上書きするには、保護対象に置き換えることによって<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>To replace a service, override the constructor, call base, and make any changes through the protected <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</ph> property.</source>
          <target state="translated">サービスを置き換えるには、コンス トラクターをオーバーライド、基本、および、保護対象から変更を加える<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>All services added to the service container that implement the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface are disposed when the design surface manager is disposed.</source>
          <target state="translated">実装するサービス コンテナーに追加されたすべてのサービス、<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>インターフェイスがデザイン サーフェイス マネージャーが破棄されるときに破棄されます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class provides the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interface as the default service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph>クラスを提供、<ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>既定のサービスとインターフェイスします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> provides a global eventing mechanism for designer events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> デザイナー イベントのグローバル イベント処理メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>With this mechanism, an application is informed when a designer becomes active.</source>
          <target state="translated">このメカニズムにより、アプリケーションは、デザイナーがアクティブになったときに通知されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.</source>
          <target state="translated">サービスは、デザイナーのコレクションと、[プロパティ] ウィンドウなどのグローバル オブジェクトが選択範囲を監視できますを 1 か所変更イベントを提供します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>for full access to system resources.</source>
          <target state="translated">システム リソースへのフル アクセスできます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Demand values: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">値を要求: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>、<ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Associated state:</source>
          <target state="translated">関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
          <source>A parent service provider.</source>
          <target state="translated">親サービス プロバイダー。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
          <source>Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.</source>
          <target state="translated">デザイン サーフェイス マネージャーがサービス要求を解決できない場合、サービス要求はこのプロバイダーに転送されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
          <source>Gets or sets the active designer.</source>
          <target state="translated">アクティブなデザイナーを取得または設定します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
          <source>The active designer.</source>
          <target state="translated">アクティブなデザイナー。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A&gt;</ph> property should be set by the designer's user interface whenever a designer becomes the active window.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A&gt;</ph>デザイナーがアクティブ ウィンドウになったときに、デザイナーのユーザー インターフェイスでプロパティを設定する必要があります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
          <source>The default implementation of this property works with the default implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interface to notify interested parties that a new designer is now active.</source>
          <target state="translated">既定の実装でこのプロパティの既定の実装の動作、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>新しいデザイナーが現在アクティブである関係者に通知するインターフェイスです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
          <source>If you provide your own implementation of <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>, you should override this property to notify your service appropriately.</source>
          <target state="translated">独自の実装を提供する場合<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>サービスを適切に通知するには、このプロパティをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
          <source>This property can be set to <ph id="ph1">`null`</ph>, indicating that no designer is active.</source>
          <target state="translated">このプロパティに設定することができます<ph id="ph1">`null`</ph>デザイナーがアクティブなないことを示すです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
          <source>Occurs when the currently active designer changes.</source>
          <target state="translated">現在のアクティブ デザイナーが変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Creates an instance of a design surface.</source>
          <target state="translated">デザイン サーフェイスのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
          <source>Creates an instance of a design surface.</source>
          <target state="translated">デザイン サーフェイスのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
          <source>A new design surface instance.</source>
          <target state="translated">デザイン サーフェイスの新しいインスタンス。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>A parent service provider.</source>
          <target state="translated">親サービス プロバイダー。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object.</source>
          <target state="translated">マージされた新しいサービス プロバイダーが作成されると、まずこのプロバイダーにサービスを要求します。すべてのエラーの処理は、デザイン サーフェイス マネージャー オブジェクトに任されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>This merged provider will be passed into the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /&gt;</ph> method.</source>
          <target state="translated">このマージされたプロバイダーは、<ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /&gt;</ph> メソッドに渡されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>Creates an instance of a design surface.</source>
          <target state="translated">デザイン サーフェイスのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>A new design surface instance.</source>
          <target state="translated">デザイン サーフェイスの新しいインスタンス。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>If you want to conveniently add additional per-designer services, use the <ph id="ph1">`parentProvider`</ph> parameter to provide a service provider for this design surface.</source>
          <target state="translated">デザイナーごとのサービスを簡単に追加する場合は、使用、<ph id="ph1">`parentProvider`</ph>このデザイン サーフェイスでのサービス プロバイダーを提供するパラメーターです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> itself.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph>メソッドの両方の指定したサービス プロバイダーからのサービス要求を満たすことができる結合サービス プロバイダーを作成するだけでなく<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph>自体です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method then passes this service provider into the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph>し、メソッドはこのサービス プロバイダーに、<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>After <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> returns the design surface, the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method tries to obtain the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>.</source>
          <target state="translated">後に<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph>デザイン サーフェイスを返します、<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph>メソッドを取得しようとする、<ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>If it is present, and if it is the instance of the service that <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> provided by default, the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method raises the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated&gt;</ph> event.</source>
          <target state="translated">これが存在する場合、およびサービスのインスタンスである場合を<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph>既定では、指定された、<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph>メソッドを発生させます、<ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="parentProvider" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parentProvider" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
          <source>If an external implementation of the service was provided, it is the responsibility of the class that derives from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> class to raise the <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /&gt;</ph> event.</source>
          <target state="translated">派生したクラスの責任において、サービスの外部の実装が提供されている場合は、<ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph>を発生させるクラス、<ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>A service provider to pass to the design surface.</source>
          <target state="translated">デザイン サーフェイスに渡すサービス プロバイダー。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>This is either an instance of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> or an object that implements <ph id="ph2">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>, and represents a merge between the service provider of the <ph id="ph3">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> class and an externally passed provider.</source>
          <target state="translated">これは、<ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> のインスタンス、または <ph id="ph2">&lt;see cref="T:System.IServiceProvider" /&gt;</ph> を実装するオブジェクトのいずれかであり、<ph id="ph3">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> クラスのサービス プロバイダーと外部で渡されたプロバイダー間のマージを表します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>Implementation that creates the design surface.</source>
          <target state="translated">デザイン サーフェイスを作成する実装です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>A new design surface instance.</source>
          <target state="translated">デザイン サーフェイスの新しいインスタンス。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> method is called by both <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph>メソッドはどちらも<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>It is the implementation that actually creates the design surface.</source>
          <target state="translated">実際には、デザイン画面を作成する実装することをお勧めします。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>The default implementation just returns a new <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</source>
          <target state="translated">既定の実装を返すだけ新しい<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
          <source>You may override this method to provide a custom object that derives from the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class.</source>
          <target state="translated">派生したカスタム オブジェクトを提供するには、このメソッドをオーバーライドする可能性があります、<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
          <source>Occurs when a designer is created.</source>
          <target state="translated">デザイナーが作成されたときに発生します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
          <source>Occurs when a designer is disposed.</source>
          <target state="translated">デザイナーが破棄されたときに発生します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
          <source>Gets a collection of design surfaces.</source>
          <target state="translated">デザイン サーフェイスのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
          <source>A collection of design surfaces that are currently hosted by the design surface manager.</source>
          <target state="translated">デザイン サーフェイス マネージャーによって現在ホストされているデザイン サーフェイスのコレクション。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A&gt;</ph> property is implemented directly on top of <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>, so if you provide your own implementation of that service, this property uses your implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A&gt;</ph>プロパティの実装の上に直接<ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>ので、このプロパティが実装を使用してそのサービスの実装を提供する場合。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurfaceManager">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> で使用したリソースを解放します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> で使用したリソースを解放します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>The public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph> method follows the standard <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">パブリック<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>メソッドの標準に準拠<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>パターン。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>Calling this method destroys the design surface manager.</source>
          <target state="translated">このメソッドを呼び出すと、デザイン サーフェイス マネージャーが破棄されます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>It also disposes the service container, which causes all services that implement <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> to also be disposed.</source>
          <target state="translated">これにより、すべてのサービスを実装するサービス コンテナーを破棄する<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>も破棄されます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">このメソッドの保護されているバージョンは<ph id="ph1">`virtual`</ph>であり、標準に従って<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>パターン。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>Because <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> 、クリーンアップのすべてのネイティブ コードはありませんがないファイナライザーを呼び出す<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <source>If you need to call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>, you must add a finalizer yourself.</source>
          <target state="translated">呼び出す必要がある場合<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>ファイナライザーを自分で追加する必要があります。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>The public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph> method follows the standard <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">パブリック<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>メソッドの標準に準拠<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>パターン。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>Calling this method destroys the design surface manager.</source>
          <target state="translated">このメソッドを呼び出すと、デザイン サーフェイス マネージャーが破棄されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>It also disposes the service container, which causes all services that implement <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> to also be disposed.</source>
          <target state="translated">これにより、すべてのサービスを実装するサービス コンテナーを破棄する<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>も破棄されます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">このメソッドの保護されているバージョンは<ph id="ph1">`virtual`</ph>であり、標準に従って<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>パターン。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>Because <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> 、クリーンアップのすべてのネイティブ コードはありませんがないファイナライザーを呼び出す<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>If you need to call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>, you must add a finalizer yourself.</source>
          <target state="translated">呼び出す必要がある場合<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>ファイナライザーを自分で追加する必要があります。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 呼び出す<ph id="ph2">`Dispose`</ph>で<ph id="ph3">`disposing`</ph>'éý'<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph>参照します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">`Dispose()`</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Finalize メソッドをオーバーライドする<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
          <source>The service type to retrieve.</source>
          <target state="translated">取得するサービスの型。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
          <source>Gets a service in the design surface manager’s service container.</source>
          <target state="translated">デザイン サーフェイス マネージャーのサービス コンテナーのサービスを取得します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
          <source>An object that implements, or is a derived class of, the given service type; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the service does not exist in the service container.</source>
          <target state="translated">指定されたサービスの型を実装するオブジェクト、または指定されたサービスの型の派生クラスであるオブジェクト。サービス コンテナーにサービスが存在しない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A&gt;</ph> method forwards to any service provider that was given to the design surface manager at construction time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A&gt;</ph>メソッドは、構築時にデザイン サーフェイス マネージャーに指定されたサービス プロバイダーに転送します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
          <source>Occurs when the global selection changes.</source>
          <target state="translated">グローバルに選択されている対象が変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
          <source>This event is raised when the active designer's selection of component set changes.</source>
          <target state="translated">このイベントは、コンポーネントのアクティブなデザイナーの選択設定の変更時に発生します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
          <source>This is mapped through the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interface.</source>
          <target state="translated">これにマップされている、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
          <source>Gets the design surface manager's <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /&gt;</ph>.</source>
          <target state="translated">デザイン サーフェイス マネージャーの <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
          <source>The design surface manager's <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /&gt;</ph>.</source>
          <target state="translated">デザイン サーフェイス マネージャーの <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
          <source>Classes inheriting from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph> class can use this property to add and remove services.</source>
          <target state="translated">継承するクラス、<ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /&gt;</ph>クラスは、このプロパティを使用して追加およびサービスを削除することができます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>