<Type Name="DesignSurfaceManager" FullName="System.ComponentModel.Design.DesignSurfaceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c135a4e8156bfd925bea508991b3701370925168" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurfaceManager extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurfaceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurfaceManager&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0ab76-101">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> オブジェクトのコレクションを管理します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ab76-101">Manages a collection of <see cref="T:System.ComponentModel.Design.DesignSurface" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ab76-102"><xref:System.ComponentModel.Design.DesignSurfaceManager>クラスは、コンテナーの設計されています<xref:System.ComponentModel.Design.DesignSurface>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0ab76-102">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class is designed to be a container of <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span> <span data-ttu-id="0ab76-103">そのハンドル イベントのルーティング デザイナー、プロパティ ウィンドウ、およびその他のグローバル オブジェクトの間で一般的なサービスを提供します。</span><span class="sxs-lookup"><span data-stu-id="0ab76-103">It provides common services that handle event routing between designers, property windows, and other global objects.</span></span> <span data-ttu-id="0ab76-104">使用して<xref:System.ComponentModel.Design.DesignSurfaceManager>は省略可能では複数のデザイナー ウィンドウをする場合はお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0ab76-104">Using <xref:System.ComponentModel.Design.DesignSurfaceManager> is optional, but it is recommended if you intend to have several designer windows.</span></span>  
  
 <span data-ttu-id="0ab76-105"><xref:System.ComponentModel.Design.DesignSurfaceManager>クラスが自動的にいくつかのデザイン時サービスを提供します。</span><span class="sxs-lookup"><span data-stu-id="0ab76-105">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides several design-time services automatically.</span></span> <span data-ttu-id="0ab76-106">これらの各サービスを上書きするには、保護対象に置き換えることによって<xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0ab76-106">You can override each of these services by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property.</span></span> <span data-ttu-id="0ab76-107">サービスを置き換えるには、コンス トラクターをオーバーライド、基本、および、保護対象から変更を加える<xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0ab76-107">To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property.</span></span> <span data-ttu-id="0ab76-108">実装するサービス コンテナーに追加されたすべてのサービス、<xref:System.IDisposable>インターフェイスがデザイン サーフェイス マネージャーが破棄されるときに破棄されます。</span><span class="sxs-lookup"><span data-stu-id="0ab76-108">All services added to the service container that implement the <xref:System.IDisposable> interface are disposed when the design surface manager is disposed.</span></span> <span data-ttu-id="0ab76-109"><xref:System.ComponentModel.Design.DesignSurfaceManager>クラスを提供、<xref:System.ComponentModel.Design.IDesignerEventService>既定のサービスとインターフェイスします。</span><span class="sxs-lookup"><span data-stu-id="0ab76-109">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides the <xref:System.ComponentModel.Design.IDesignerEventService> interface as the default service.</span></span> <span data-ttu-id="0ab76-110"><xref:System.ComponentModel.Design.IDesignerEventService> デザイナー イベントのグローバル イベント処理メカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="0ab76-110"><xref:System.ComponentModel.Design.IDesignerEventService> provides a global eventing mechanism for designer events.</span></span> <span data-ttu-id="0ab76-111">このメカニズムにより、アプリケーションは、デザイナーがアクティブになったときに通知されます。</span><span class="sxs-lookup"><span data-stu-id="0ab76-111">With this mechanism, an application is informed when a designer becomes active.</span></span> <span data-ttu-id="0ab76-112">サービスは、デザイナーのコレクションと、[プロパティ] ウィンドウなどのグローバル オブジェクトが選択範囲を監視できますを 1 か所変更イベントを提供します。</span><span class="sxs-lookup"><span data-stu-id="0ab76-112">The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="0ab76-113">システム リソースへのフル アクセスできます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ab76-113">for full access to system resources.</span>
      </span>
      <span data-ttu-id="0ab76-114">値を要求: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />、<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ab76-114">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="0ab76-115">関連付けられた状態。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ab76-115">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ab76-116">
            <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ab76-117">
            <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager(IServiceProvider ^ parentProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="0ab76-118">親サービス プロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-118">A parent service provider.</span>
          </span>
          <span data-ttu-id="0ab76-119">デザイン サーフェイス マネージャーがサービス要求を解決できない場合、サービス要求はこのプロバイダーに転送されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-119">Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ab76-120">
            <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurface">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignSurface ActiveDesignSurface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurface ActiveDesignSurface" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ActiveDesignSurface As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignSurface ^ ActiveDesignSurface { System::ComponentModel::Design::DesignSurface ^ get(); void set(System::ComponentModel::Design::DesignSurface ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ab76-121">アクティブなデザイナーを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-121">Gets or sets the active designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ab76-122">アクティブなデザイナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-122">The active designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ab76-123"><xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A>デザイナーがアクティブ ウィンドウになったときに、デザイナーのユーザー インターフェイスでプロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0ab76-123">The <xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A> property should be set by the designer's user interface whenever a designer becomes the active window.</span></span> <span data-ttu-id="0ab76-124">既定の実装でこのプロパティの既定の実装の動作、<xref:System.ComponentModel.Design.IDesignerEventService>新しいデザイナーが現在アクティブである関係者に通知するインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0ab76-124">The default implementation of this property works with the default implementation of the <xref:System.ComponentModel.Design.IDesignerEventService> interface to notify interested parties that a new designer is now active.</span></span> <span data-ttu-id="0ab76-125">独自の実装を提供する場合<xref:System.ComponentModel.Design.IDesignerEventService>サービスを適切に通知するには、このプロパティをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="0ab76-125">If you provide your own implementation of <xref:System.ComponentModel.Design.IDesignerEventService>, you should override this property to notify your service appropriately.</span></span> <span data-ttu-id="0ab76-126">このプロパティに設定することができます`null`デザイナーがアクティブなないことを示すです。</span><span class="sxs-lookup"><span data-stu-id="0ab76-126">This property can be set to `null`, indicating that no designer is active.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurfaceChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveDesignSurfaceChanged As ActiveDesignSurfaceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ActiveDesignSurfaceChangedEventHandler ^ ActiveDesignSurfaceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ab76-127">現在のアクティブ デザイナーが変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-127">Occurs when the currently active designer changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDesignSurface">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ab76-128">デザイン サーフェイスのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-128">Creates an instance of a design surface.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface () As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ab76-129">デザイン サーフェイスのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-129">Creates an instance of a design surface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ab76-130">デザイン サーフェイスの新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-130">A new design surface instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="0ab76-131">親サービス プロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-131">A parent service provider.</span>
          </span>
          <span data-ttu-id="0ab76-132">マージされた新しいサービス プロバイダーが作成されると、まずこのプロバイダーにサービスを要求します。すべてのエラーの処理は、デザイン サーフェイス マネージャー オブジェクトに任されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-132">A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object.</span>
          </span>
          <span data-ttu-id="0ab76-133">このマージされたプロバイダーは、<see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> メソッドに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-133">This merged provider will be passed into the <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ab76-134">デザイン サーフェイスのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-134">Creates an instance of a design surface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ab76-135">デザイン サーフェイスの新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-135">A new design surface instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ab76-136">デザイナーごとのサービスを簡単に追加する場合は、使用、`parentProvider`このデザイン サーフェイスでのサービス プロバイダーを提供するパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="0ab76-136">If you want to conveniently add additional per-designer services, use the `parentProvider` parameter to provide a service provider for this design surface.</span></span> <span data-ttu-id="0ab76-137"><xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>メソッドの両方の指定したサービス プロバイダーからのサービス要求を満たすことができる結合サービス プロバイダーを作成するだけでなく<xref:System.ComponentModel.Design.DesignSurfaceManager>自体です。</span><span class="sxs-lookup"><span data-stu-id="0ab76-137">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <xref:System.ComponentModel.Design.DesignSurfaceManager> itself.</span></span> <span data-ttu-id="0ab76-138"><xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>し、メソッドはこのサービス プロバイダーに、<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0ab76-138">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method then passes this service provider into the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method.</span></span>  
  
 <span data-ttu-id="0ab76-139">後に<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>デザイン サーフェイスを返します、<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>メソッドを取得しようとする、<xref:System.ComponentModel.Design.IDesignerEventService>です。</span><span class="sxs-lookup"><span data-stu-id="0ab76-139">After <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> returns the design surface, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method tries to obtain the <xref:System.ComponentModel.Design.IDesignerEventService>.</span></span> <span data-ttu-id="0ab76-140">これが存在する場合、およびサービスのインスタンスである場合を<xref:System.ComponentModel.Design.DesignSurfaceManager>既定では、指定された、<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>メソッドを発生させます、<xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated>イベント。</span><span class="sxs-lookup"><span data-stu-id="0ab76-140">If it is present, and if it is the instance of the service that <xref:System.ComponentModel.Design.DesignSurfaceManager> provided by default, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method raises the <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0ab76-141">
            <paramref name="parentProvider" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-141">
              <paramref name="parentProvider" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0ab76-142">派生したクラスの責任において、サービスの外部の実装が提供されている場合は、<see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />を発生させるクラス、<see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" />イベント。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ab76-142">If an external implementation of the service was provided, it is the responsibility of the class that derives from the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class to raise the <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> event.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurfaceCore">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDesignSurfaceCore (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::Design::DesignSurface ^ CreateDesignSurfaceCore(IServiceProvider ^ parentProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="0ab76-143">デザイン サーフェイスに渡すサービス プロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-143">A service provider to pass to the design surface.</span>
          </span>
          <span data-ttu-id="0ab76-144">これは、<see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> のインスタンス、または <see cref="T:System.IServiceProvider" /> を実装するオブジェクトのいずれかであり、<see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> クラスのサービス プロバイダーと外部で渡されたプロバイダー間のマージを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-144">This is either an instance of <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> or an object that implements <see cref="T:System.IServiceProvider" />, and represents a merge between the service provider of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class and an externally passed provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ab76-145">デザイン サーフェイスを作成する実装です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-145">Implementation that creates the design surface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ab76-146">デザイン サーフェイスの新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-146">A new design surface instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ab76-147"><xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>メソッドはどちらも<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0ab76-147">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method is called by both <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> methods.</span></span> <span data-ttu-id="0ab76-148">実際には、デザイン画面を作成する実装することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0ab76-148">It is the implementation that actually creates the design surface.</span></span> <span data-ttu-id="0ab76-149">既定の実装を返すだけ新しい<xref:System.ComponentModel.Design.DesignSurface>です。</span><span class="sxs-lookup"><span data-stu-id="0ab76-149">The default implementation just returns a new <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="0ab76-150">派生したカスタム オブジェクトを提供するには、このメソッドをオーバーライドする可能性があります、<xref:System.ComponentModel.Design.DesignSurface>クラスです。</span><span class="sxs-lookup"><span data-stu-id="0ab76-150">You may override this method to provide a custom object that derives from the <xref:System.ComponentModel.Design.DesignSurface> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceCreated">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceCreated As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ab76-151">デザイナーが作成されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-151">Occurs when a designer is created.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceDisposed">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceDisposed As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceDisposed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ab76-152">デザイナーが破棄されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-152">Occurs when a designer is disposed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaces">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignSurfaces As DesignSurfaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignSurfaceCollection ^ DesignSurfaces { System::ComponentModel::Design::DesignSurfaceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ab76-153">デザイン サーフェイスのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-153">Gets a collection of design surfaces.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ab76-154">デザイン サーフェイス マネージャーによって現在ホストされているデザイン サーフェイスのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-154">A collection of design surfaces that are currently hosted by the design surface manager.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ab76-155"><xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A>プロパティの実装の上に直接<xref:System.ComponentModel.Design.IDesignerEventService>ので、このプロパティが実装を使用してそのサービスの実装を提供する場合。</span><span class="sxs-lookup"><span data-stu-id="0ab76-155">The <xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A> property is implemented directly on top of <xref:System.ComponentModel.Design.IDesignerEventService>, so if you provide your own implementation of that service, this property uses your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ab76-156">
            <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> で使用したリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-156">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ab76-157">
            <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> で使用したリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-157">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ab76-158">パブリック<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>メソッドの標準に準拠<xref:System.IDisposable>パターン。</span><span class="sxs-lookup"><span data-stu-id="0ab76-158">The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="0ab76-159">このメソッドを呼び出すと、デザイン サーフェイス マネージャーが破棄されます。</span><span class="sxs-lookup"><span data-stu-id="0ab76-159">Calling this method destroys the design surface manager.</span></span> <span data-ttu-id="0ab76-160">これにより、すべてのサービスを実装するサービス コンテナーを破棄する<xref:System.IDisposable>も破棄されます。</span><span class="sxs-lookup"><span data-stu-id="0ab76-160">It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed.</span></span> <span data-ttu-id="0ab76-161">このメソッドの保護されているバージョンは`virtual`であり、標準に従って<xref:System.IDisposable>パターン。</span><span class="sxs-lookup"><span data-stu-id="0ab76-161">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ab76-162"><xref:System.ComponentModel.Design.DesignSurfaceManager> 、クリーンアップのすべてのネイティブ コードはありませんがないファイナライザーを呼び出す<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0ab76-162">Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</span></span> <span data-ttu-id="0ab76-163">呼び出す必要がある場合<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>ファイナライザーを自分で追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0ab76-163">If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0ab76-164">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-164">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ab76-165">
            <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-165">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ab76-166">パブリック<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>メソッドの標準に準拠<xref:System.IDisposable>パターン。</span><span class="sxs-lookup"><span data-stu-id="0ab76-166">The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="0ab76-167">このメソッドを呼び出すと、デザイン サーフェイス マネージャーが破棄されます。</span><span class="sxs-lookup"><span data-stu-id="0ab76-167">Calling this method destroys the design surface manager.</span></span> <span data-ttu-id="0ab76-168">これにより、すべてのサービスを実装するサービス コンテナーを破棄する<xref:System.IDisposable>も破棄されます。</span><span class="sxs-lookup"><span data-stu-id="0ab76-168">It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed.</span></span> <span data-ttu-id="0ab76-169">このメソッドの保護されているバージョンは`virtual`であり、標準に従って<xref:System.IDisposable>パターン。</span><span class="sxs-lookup"><span data-stu-id="0ab76-169">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ab76-170"><xref:System.ComponentModel.Design.DesignSurfaceManager> 、クリーンアップのすべてのネイティブ コードはありませんがないファイナライザーを呼び出す<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0ab76-170">Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</span></span> <span data-ttu-id="0ab76-171">呼び出す必要がある場合<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>ファイナライザーを自分で追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0ab76-171">If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="0ab76-172">このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0ab76-172">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="0ab76-173">`Dispose()` プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="0ab76-173">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="0ab76-174"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="0ab76-174"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="0ab76-175">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.ComponentModel.Design.DesignSurfaceManager>参照します。</span><span class="sxs-lookup"><span data-stu-id="0ab76-175">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurfaceManager> references.</span></span> <span data-ttu-id="0ab76-176">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0ab76-176">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0ab76-177">
              <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ab76-177">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="0ab76-178">オーバーライドする場合<see langword="Dispose(Boolean)" />既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<see langword="Dispose" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ab76-178">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="0ab76-179">実装する方法の詳細についての<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ab76-179">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="0ab76-180">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ab76-180">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="0ab76-181">取得するサービスの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-181">The service type to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ab76-182">デザイン サーフェイス マネージャーのサービス コンテナーのサービスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-182">Gets a service in the design surface manager’s service container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ab76-183">指定されたサービスの型を実装するオブジェクト、または指定されたサービスの型の派生クラスであるオブジェクト。サービス コンテナーにサービスが存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-183">An object that implements, or is a derived class of, the given service type; otherwise, <see langword="null" /> if the service does not exist in the service container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ab76-184"><xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A>メソッドは、構築時にデザイン サーフェイス マネージャーに指定されたサービス プロバイダーに転送します。</span><span class="sxs-lookup"><span data-stu-id="0ab76-184">The <xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A> method forwards to any service provider that was given to the design surface manager at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ab76-185">グローバルに選択されている対象が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-185">Occurs when the global selection changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ab76-186">このイベントは、コンポーネントのアクティブなデザイナーの選択設定の変更時に発生します。</span><span class="sxs-lookup"><span data-stu-id="0ab76-186">This event is raised when the active designer's selection of component set changes.</span></span> <span data-ttu-id="0ab76-187">これにマップされている、<xref:System.ComponentModel.Design.IDesignerEventService>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0ab76-187">This is mapped through the <xref:System.ComponentModel.Design.IDesignerEventService> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ab76-188">デザイン サーフェイス マネージャーの <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-188">Gets the design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ab76-189">デザイン サーフェイス マネージャーの <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ab76-189">The design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0ab76-190">継承するクラス、<see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />クラスは、このプロパティを使用して追加およびサービスを削除することができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ab76-190">Classes inheriting from the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class can use this property to add and remove services.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>