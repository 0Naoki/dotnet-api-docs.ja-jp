<Type Name="IMenuCommandService" FullName="System.ComponentModel.Design.IMenuCommandService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="976c49c5d36348692e3a77461d5fbbd4d7aa2874" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48630533" /></Metadata><TypeSignature Language="C#" Value="public interface IMenuCommandService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMenuCommandService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IMenuCommandService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMenuCommandService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMenuCommandService" />
  <TypeSignature Language="F#" Value="type IMenuCommandService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d996f-101">グローバル デザイナー動詞とデザイン モードで使用できるメニュー コマンドを管理し、いくつかの種類のショートカット メニューを表示するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="d996f-101">Provides methods to manage the global designer verbs and menu commands available in design mode, and to show some types of shortcut menus.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d996f-102">このインターフェイスでは、メソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="d996f-102">This interface provides methods to:</span></span>  
  
-   <span data-ttu-id="d996f-103">検索、起動、追加およびグローバル デザイナー動詞コマンドを削除します。</span><span class="sxs-lookup"><span data-stu-id="d996f-103">Find, invoke, add and remove global designer verb commands.</span></span>  
  
-   <span data-ttu-id="d996f-104">検索を呼び出す、追加、および標準メニュー コマンドを削除します。</span><span class="sxs-lookup"><span data-stu-id="d996f-104">Find, invoke, add and remove standard menu commands.</span></span>  
  
-   <span data-ttu-id="d996f-105">標準メニュー コマンドに関連付けられているイベント ハンドラーを変更します。</span><span class="sxs-lookup"><span data-stu-id="d996f-105">Alter the event handlers associated with standard menu commands.</span></span>  
  
-   <span data-ttu-id="d996f-106">メニューに関連付けられている標準のコマンドのショートカット メニューを表示<xref:System.ComponentModel.Design.CommandID>します。</span><span class="sxs-lookup"><span data-stu-id="d996f-106">Display a shortcut menu of standard commands that is associated with a menu <xref:System.ComponentModel.Design.CommandID>.</span></span>  
  
 <span data-ttu-id="d996f-107">デザイナー動詞は、デザイン モードでのショートカット メニューに表示されるカスタム定義のコマンドを表します。</span><span class="sxs-lookup"><span data-stu-id="d996f-107">Designer verbs represent custom-defined commands that are listed on the shortcut menu in design mode.</span></span> <span data-ttu-id="d996f-108">デザイナー動詞は、指定したテキスト ラベルを提供できます。</span><span class="sxs-lookup"><span data-stu-id="d996f-108">A designer verb can provide a specified text label.</span></span> <span data-ttu-id="d996f-109">各デザイナー動詞が自動的に割り当てられている一意<xref:System.ComponentModel.Design.CommandID>します。</span><span class="sxs-lookup"><span data-stu-id="d996f-109">Each designer verb is automatically assigned a unique <xref:System.ComponentModel.Design.CommandID>.</span></span> <span data-ttu-id="d996f-110">デザイナーがを通じてデザイナー動詞を指定できます、<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>プロパティが、これらは使用可能な場合にのみ、デザイナーのコンポーネントが現在選択されています。</span><span class="sxs-lookup"><span data-stu-id="d996f-110">A designer can provide designer verbs through its <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property, but these are only available when the designer's component is currently selected.</span></span> <span data-ttu-id="d996f-111">グローバル デザイナー動詞は、選択したコンポーネントに関係なくデザイン モードのショートカット メニューからアクセスできるデザイナー動詞コマンドです。</span><span class="sxs-lookup"><span data-stu-id="d996f-111">Global designer verbs are designer verb commands that can be accessed from a design-mode shortcut menu regardless of the selected component.</span></span> <span data-ttu-id="d996f-112">このインターフェイスはデザイン モードで使用できるグローバル デザイナー動詞のセットを管理することができます。</span><span class="sxs-lookup"><span data-stu-id="d996f-112">This interface allows you to manage the set of global designer verbs that are available in design mode.</span></span>  
  
 <span data-ttu-id="d996f-113">グローバル デザイナー動詞を使用して、追加することができます、<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>メソッド、グローバル デザイナー動詞を使用して、削除できます、<xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d996f-113">You can add a global designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method, and you can remove a global designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A> method.</span></span> <span data-ttu-id="d996f-114">デザイナー動詞を使用して、呼び出すことができます、<xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>メソッドがわかっている場合、<xref:System.ComponentModel.Design.CommandID>動詞。</span><span class="sxs-lookup"><span data-stu-id="d996f-114">You can invoke a designer verb using the <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> method if you know the <xref:System.ComponentModel.Design.CommandID> of the verb.</span></span> <span data-ttu-id="d996f-115"><xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A>このインターフェイスのプロパティには、現在のショートカット メニューに表示するデザイナー動詞コマンドのセットが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d996f-115">The <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> property of this interface contains the current set of designer verb commands to display in a shortcut menu.</span></span> <span data-ttu-id="d996f-116">このデザイナー動詞コマンドのセットは、すべてのグローバル デザイナー動詞と、現在選択されているコンポーネントのデザイナーが提供したデザイナー動詞で構成されます。</span><span class="sxs-lookup"><span data-stu-id="d996f-116">This set of designer verb commands consists of all global designer verbs and any designer verbs offered by the designer of any currently selected component.</span></span> <span data-ttu-id="d996f-117">この動詞のセットは、デザイナー動詞コマンドを提供しているデザイナーのコンポーネントを選択または選択解除するたびに更新されます。</span><span class="sxs-lookup"><span data-stu-id="d996f-117">This set of verbs is updated each time a component with a designer offering designer verb commands is selected or deselected.</span></span>  
  
 <span data-ttu-id="d996f-118">メニュー コマンドは、定義済みの標準コマンドのセットに制限されます。</span><span class="sxs-lookup"><span data-stu-id="d996f-118">Menu commands are limited to the set of predefined standard commands.</span></span> <span data-ttu-id="d996f-119">定義済みの標準コマンドのほとんどが定義されている、<xref:System.ComponentModel.Design.StandardCommands>と<xref:System.Windows.Forms.Design.MenuCommands>列挙体。</span><span class="sxs-lookup"><span data-stu-id="d996f-119">Most of the predefined standard commands are defined in the <xref:System.ComponentModel.Design.StandardCommands> and <xref:System.Windows.Forms.Design.MenuCommands> enumerations.</span></span> <span data-ttu-id="d996f-120">追加して、削除して、メニュー コマンドを起動するか、およびこのインターフェイスのメソッドを使用してメニューに追加されたメニュー コマンドを検索できます。</span><span class="sxs-lookup"><span data-stu-id="d996f-120">You can add, remove, and invoke menu commands, and search for menu commands that have been added to a menu using methods of this interface.</span></span>  
  
 <span data-ttu-id="d996f-121">使用して標準メニュー コマンドを追加することができます、<xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>メソッド、および削除を使用して標準メニュー コマンド、<xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d996f-121">You can add a standard menu command using the <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> method, and remove a standard menu command using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> method.</span></span> <span data-ttu-id="d996f-122">ドキュメントに記載された手順を実行して、定義済みの標準メニュー コマンドにイベント ハンドラーを結び付けることができます、<xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d996f-122">You can attach an event handler to a predefined standard menu command by following the procedure detailed in the documentation for the <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> method.</span></span> <span data-ttu-id="d996f-123">メニュー コマンドを取得する<xref:System.ComponentModel.Design.CommandID>を使用してメニューに追加された場合、<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d996f-123">You can retrieve a menu command by <xref:System.ComponentModel.Design.CommandID> if it has been added to a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method.</span></span> <span data-ttu-id="d996f-124">メニュー コマンドや、デザイナー動詞コマンドを呼び出すことができます<xref:System.ComponentModel.Design.CommandID>を使用して、<xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d996f-124">You can invoke a menu command or designer verb command by <xref:System.ComponentModel.Design.CommandID> using the <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d996f-125">既に既存のメニュー コマンドを追加する試み<xref:System.ComponentModel.Design.CommandID>がスローされます、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="d996f-125">An attempt to add a menu command with an already existing <xref:System.ComponentModel.Design.CommandID> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="d996f-126">メニュー コマンドを追加するときにすることになっていないを使用してメニューを確認してください、<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>メソッド、または使用して例外を上手に処理します。</span><span class="sxs-lookup"><span data-stu-id="d996f-126">When adding a menu command, be sure to check that it is not already on a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, or use exception handling wisely.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d996f-127">メニュー コマンド、メニューに追加できるいてその<xref:System.ComponentModel.Design.MenuCommand.Visible%2A>または<xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>プロパティに設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="d996f-127">A menu command can be added to a menu, and have its <xref:System.ComponentModel.Design.MenuCommand.Visible%2A> or <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> properties set to `false`.</span></span> <span data-ttu-id="d996f-128">メニューに追加されているメニュー コマンド、視覚的に見つからない場合はこれらのプロパティのいずれかに設定されている`false`します。</span><span class="sxs-lookup"><span data-stu-id="d996f-128">If you cannot visually locate a menu command that has been added on a menu, one of these properties may have been set to `false`.</span></span>  
  
 <span data-ttu-id="d996f-129">メニュー コマンドを使用して、指定した場所に格納している特定の標準のショートカット メニューを表示することができます、<xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d996f-129">You can show certain standard shortcut menus containing menu commands at a specified location using the <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> method.</span></span> <span data-ttu-id="d996f-130">このメソッドは、ドキュメントには、有効なメニューを表示するを指定するコマンド Id の一覧を示すテーブルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d996f-130">The documentation for this method contains a table listing the command IDs that specify the valid menus to show.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d996f-131">この例では、<xref:System.ComponentModel.Design.IMenuCommandService>を追加する、<xref:System.ComponentModel.Design.MenuCommand>します。</span><span class="sxs-lookup"><span data-stu-id="d996f-131">This example demonstrates using the <xref:System.ComponentModel.Design.IMenuCommandService> to add a <xref:System.ComponentModel.Design.MenuCommand>.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
    <altmember cref="T:System.Windows.Forms.Design.MenuCommands" />
    <altmember cref="T:System.ComponentModel.Design.StandardCommands" />
  </Docs>
  <Members>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public void AddCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="iMenuCommandService.AddCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="d996f-132">追加する <see cref="T:System.ComponentModel.Design.MenuCommand" />。</span><span class="sxs-lookup"><span data-stu-id="d996f-132">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> to add.</span></span></param>
        <summary><span data-ttu-id="d996f-133">指定した標準メニュー コマンドをメニューに追加します。</span><span class="sxs-lookup"><span data-stu-id="d996f-133">Adds the specified standard menu command to the menu.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d996f-134"><xref:System.Windows.Forms.Design.MenuCommands>と<xref:System.ComponentModel.Design.StandardCommands>列挙型を含む<xref:System.ComponentModel.Design.CommandID>識別子の標準コマンドとメニュー コマンドは既に定義済みの関連付けられている特定のメニュー上の場所。</span><span class="sxs-lookup"><span data-stu-id="d996f-134">The <xref:System.Windows.Forms.Design.MenuCommands> and <xref:System.ComponentModel.Design.StandardCommands> enumerations contain <xref:System.ComponentModel.Design.CommandID> identifiers for predefined standard commands and menu commands that are already associated with a location on a particular menu.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d996f-135">既に既存のメニュー コマンドを追加する試み<xref:System.ComponentModel.Design.CommandID>がスローされます、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="d996f-135">An attempt to add a menu command with an already existing <xref:System.ComponentModel.Design.CommandID> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="d996f-136">メニュー コマンドを追加するときにすることになっていないを使用してメニューを確認してください、<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>メソッド、または使用して例外を上手に処理します。</span><span class="sxs-lookup"><span data-stu-id="d996f-136">When adding a menu command, be sure to check that it is not already on a menu using the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, or use exception handling wisely.</span></span>  
  
 <span data-ttu-id="d996f-137">次の手順で定義済みのメニュー コマンドには、イベント ハンドラーをアタッチできます。</span><span class="sxs-lookup"><span data-stu-id="d996f-137">You can attach an event handler to a predefined menu command with the following procedure:</span></span>  
  
1.  <span data-ttu-id="d996f-138">イベント ハンドラーとリンクするメニュー コマンドがメニューに追加されましたかである場合、<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>メソッドでは、後で、このメニュー コマンドを復元するかどうかと、新しいイベント ハンドラーから現在のイベント ハンドラーを起動するかどうかを検討してください。</span><span class="sxs-lookup"><span data-stu-id="d996f-138">If the menu command to link with an event handler has been added to a menu, or is located with the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method, consider whether you wish to restore this menu command later, and whether you want to invoke the current event handler from your new event handler.</span></span> <span data-ttu-id="d996f-139">コード可能性があります復元する場合メニュー コマンドやイベント ハンドラーの呼び出しをチェーンは、メニュー コマンドをどこかへの参照を格納することを確認します。</span><span class="sxs-lookup"><span data-stu-id="d996f-139">If your code might restore the menu command or chain the invocation of event handlers, be sure to store a reference to the menu command somewhere.</span></span>  
  
2.  <span data-ttu-id="d996f-140">すべて既存のメニュー コマンドと同じことを確認<xref:System.ComponentModel.Design.CommandID>を使用して、メニューから削除されましたが、<xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d996f-140">Ensure that any previously existing menu command with the same <xref:System.ComponentModel.Design.CommandID> has been removed from the menu using the <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> method.</span></span>  
  
3.  <span data-ttu-id="d996f-141">新規作成<xref:System.ComponentModel.Design.MenuCommand>と共に、コンス トラクターで、イベント ハンドラーを指定し、<xref:System.ComponentModel.Design.CommandID>を追加するコマンドを表します。</span><span class="sxs-lookup"><span data-stu-id="d996f-141">Create a new <xref:System.ComponentModel.Design.MenuCommand> and specify your event handler in the constructor, along with a <xref:System.ComponentModel.Design.CommandID> representing the command to add.</span></span> <span data-ttu-id="d996f-142">各標準メニュー コマンドに追加される定義済みのメニューの場所に関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="d996f-142">Each standard menu command is associated with a predefined menu location where it is added to.</span></span> <span data-ttu-id="d996f-143">サポートされているコマンド Id が定義されている、<xref:System.ComponentModel.Design.StandardCommands>と<xref:System.Windows.Forms.Design.MenuCommands>列挙体。</span><span class="sxs-lookup"><span data-stu-id="d996f-143">The supported command IDs are defined in the <xref:System.ComponentModel.Design.StandardCommands> and <xref:System.Windows.Forms.Design.MenuCommands> enumerations.</span></span>  
  
4.  <span data-ttu-id="d996f-144">メニュー コマンドの既存のイベント ハンドラーを呼び出す場合は、呼び出し、<xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>メニュー コマンドの呼び出しイベントを処理するイベント ハンドラーからメニューに置き換わりますが、メニュー コマンドのメソッド。</span><span class="sxs-lookup"><span data-stu-id="d996f-144">If you want to invoke any preexisting event handler for the menu command, call the <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method of the menu command you have replaced on the menu from the event handler that handles the invoke event of your menu command.</span></span>  
  
5.  <span data-ttu-id="d996f-145">交換した既存のメニュー コマンドのイベント ハンドラーを復元する場合は、追加、格納されている、既存のメニュー コマンドを作成した交換用のメニュー コマンドを削除した後。</span><span class="sxs-lookup"><span data-stu-id="d996f-145">If you are interested in restoring the event handler of a preexisting menu command that you have replaced, add the stored, preexisting menu command after you remove the replacement menu command you created.</span></span> <span data-ttu-id="d996f-146">この動作を追加することも、`Dispose`型のメソッド。</span><span class="sxs-lookup"><span data-stu-id="d996f-146">You may want to add this behavior to the `Dispose` method for your type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d996f-147">指定した <see cref="T:System.ComponentModel.Design.CommandID" /> の <see cref="T:System.ComponentModel.Design.MenuCommand" /> が、既にメニュー上に存在します。</span><span class="sxs-lookup"><span data-stu-id="d996f-147">The <see cref="T:System.ComponentModel.Design.CommandID" /> of the specified <see cref="T:System.ComponentModel.Design.MenuCommand" /> is already present on a menu.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public void AddVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member AddVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="iMenuCommandService.AddVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb"><span data-ttu-id="d996f-148">追加する <see cref="T:System.ComponentModel.Design.DesignerVerb" />。</span><span class="sxs-lookup"><span data-stu-id="d996f-148">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to add.</span></span></param>
        <summary><span data-ttu-id="d996f-149">指定したデザイナー動詞をグローバル デザイナー動詞のセットに追加します。</span><span class="sxs-lookup"><span data-stu-id="d996f-149">Adds the specified designer verb to the set of global designer verbs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d996f-150">デザイナー動詞を提供するコンポーネントのデザイナーを使用する必要があります、<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>このメソッドを呼び出すのではなく、そのデザイナーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="d996f-150">Designers of components that provide designer verbs should use the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property of their designer rather than calling this method.</span></span> <span data-ttu-id="d996f-151">このメソッドは、現在選択されているコンポーネントに関係なく、デザイン モードで右クリックしてショートカット メニューからアクセスできるグローバル デザイナー動詞を追加します。</span><span class="sxs-lookup"><span data-stu-id="d996f-151">This method adds a global designer verb that can be accessed from the right-click shortcut menu in design mode regardless of the currently selected component.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand" Usage="iMenuCommandService.FindCommand commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID"><span data-ttu-id="d996f-152">検索対象の <see cref="T:System.ComponentModel.Design.CommandID" />。</span><span class="sxs-lookup"><span data-stu-id="d996f-152">The <see cref="T:System.ComponentModel.Design.CommandID" /> to search for.</span></span></param>
        <summary><span data-ttu-id="d996f-153">指定したコマンド ID を検索し、その ID に関連付けられているメニュー コマンドを返します。</span><span class="sxs-lookup"><span data-stu-id="d996f-153">Searches for the specified command ID and returns the menu command associated with it.</span></span></summary>
        <returns><span data-ttu-id="d996f-154">コマンド ID に関連付けられている <see cref="T:System.ComponentModel.Design.MenuCommand" />。コマンドが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d996f-154">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the command ID, or <see langword="null" /> if no command is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member GlobalInvoke : System.ComponentModel.Design.CommandID -&gt; bool" Usage="iMenuCommandService.GlobalInvoke commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID"><span data-ttu-id="d996f-155">検索および実行対象のコマンドの <see cref="T:System.ComponentModel.Design.CommandID" />。</span><span class="sxs-lookup"><span data-stu-id="d996f-155">The <see cref="T:System.ComponentModel.Design.CommandID" /> of the command to search for and execute.</span></span></param>
        <summary><span data-ttu-id="d996f-156">指定したコマンド ID に一致するメニューまたはデザイナー動詞コマンドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d996f-156">Invokes a menu or designer verb command matching the specified command ID.</span></span></summary>
        <returns><span data-ttu-id="d996f-157">コマンドが見つかり、正常に呼び出された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d996f-157"><see langword="true" /> if the command was found and invoked successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d996f-158">このメソッドは、メニュー コマンドまたはデザイナー動詞の検索、 <xref:System.ComponentModel.Design.CommandID> 、指定した照合<xref:System.ComponentModel.Design.CommandID>します。</span><span class="sxs-lookup"><span data-stu-id="d996f-158">This method searches for a menu command or designer verb with a <xref:System.ComponentModel.Design.CommandID> matching the specified <xref:System.ComponentModel.Design.CommandID>.</span></span> <span data-ttu-id="d996f-159">このメソッドは、必要に応じて、グローバル環境コマンド サービスを通じて、検索を続行する前にグローバルでアクティブなデザイナーが提供動詞から成るデザイナー動詞のコレクション内で最初に検索します。</span><span class="sxs-lookup"><span data-stu-id="d996f-159">This method first searches within the designer verbs collection consisting of global and active designer-provided verbs before continuing the search, if necessary, through the global environment command service.</span></span> <span data-ttu-id="d996f-160">一致するメニュー コマンドまたはデザイナー動詞が見つかった場合は、コマンドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d996f-160">If a matching menu command or designer verb is located, the command is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCommand">
      <MemberSignature Language="C#" Value="public void RemoveCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member RemoveCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="iMenuCommandService.RemoveCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="d996f-161">削除する <see cref="T:System.ComponentModel.Design.MenuCommand" />。</span><span class="sxs-lookup"><span data-stu-id="d996f-161">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> to remove.</span></span></param>
        <summary><span data-ttu-id="d996f-162">指定した標準メニュー コマンドをメニューから削除します。</span><span class="sxs-lookup"><span data-stu-id="d996f-162">Removes the specified standard menu command from the menu.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d996f-163">このメソッドは、指定された削除<xref:System.ComponentModel.Design.MenuCommand>見つかった場合は。</span><span class="sxs-lookup"><span data-stu-id="d996f-163">This method removes the specified <xref:System.ComponentModel.Design.MenuCommand> if it is found.</span></span> <span data-ttu-id="d996f-164">このメソッドが例外を発生させるまたは値が返さしていない、指定した<xref:System.ComponentModel.Design.MenuCommand>が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="d996f-164">This method does not raise an exception or return a value if the specified <xref:System.ComponentModel.Design.MenuCommand> is not found.</span></span> <span data-ttu-id="d996f-165">使用して、<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>を調べますかどうかを<xref:System.ComponentModel.Design.MenuCommand>指定した照合<xref:System.ComponentModel.Design.CommandID>メニュー上にあります。</span><span class="sxs-lookup"><span data-stu-id="d996f-165">Use the <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> method to determine whether a <xref:System.ComponentModel.Design.MenuCommand> matching a specified <xref:System.ComponentModel.Design.CommandID> is located on a menu.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
      </Docs>
    </Member>
    <Member MemberName="RemoveVerb">
      <MemberSignature Language="C#" Value="public void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member RemoveVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="iMenuCommandService.RemoveVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb"><span data-ttu-id="d996f-166">削除する <see cref="T:System.ComponentModel.Design.DesignerVerb" />。</span><span class="sxs-lookup"><span data-stu-id="d996f-166">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to remove.</span></span></param>
        <summary><span data-ttu-id="d996f-167">指定したデザイナー動詞をグローバル デザイナー動詞のコレクションから削除します。</span><span class="sxs-lookup"><span data-stu-id="d996f-167">Removes the specified designer verb from the collection of global designer verbs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d996f-168">このメソッドは、グローバル デザイナー動詞のコレクション内にある場合に、指定したグローバル デザイナー動詞を削除します。</span><span class="sxs-lookup"><span data-stu-id="d996f-168">This method removes the specified global designer verb if it is within the global designer verbs collection.</span></span> <span data-ttu-id="d996f-169">グローバル デザイナー動詞のコレクションを使用するデザイナー動詞を追加することができます、<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d996f-169">You can add a designer verb to the global designer verbs collection using the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="C#" Value="public void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowContextMenu(class System.ComponentModel.Design.CommandID menuID, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowContextMenu (menuID As CommandID, x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowContextMenu(System::ComponentModel::Design::CommandID ^ menuID, int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member ShowContextMenu : System.ComponentModel.Design.CommandID * int * int -&gt; unit" Usage="iMenuCommandService.ShowContextMenu (menuID, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuID" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="menuID"><span data-ttu-id="d996f-170">表示するショートカット メニューの <see cref="T:System.ComponentModel.Design.CommandID" />。</span><span class="sxs-lookup"><span data-stu-id="d996f-170">The <see cref="T:System.ComponentModel.Design.CommandID" /> for the shortcut menu to show.</span></span></param>
        <param name="x"><span data-ttu-id="d996f-171">メニューを表示する位置の x 座標 (画面座標)。</span><span class="sxs-lookup"><span data-stu-id="d996f-171">The x-coordinate at which to display the menu, in screen coordinates.</span></span></param>
        <param name="y"><span data-ttu-id="d996f-172">メニューを表示する位置の y 座標 (画面座標)。</span><span class="sxs-lookup"><span data-stu-id="d996f-172">The y-coordinate at which to display the menu, in screen coordinates.</span></span></param>
        <summary><span data-ttu-id="d996f-173">指定した位置に指定したショートカット メニューを表示します。</span><span class="sxs-lookup"><span data-stu-id="d996f-173">Shows the specified shortcut menu at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d996f-174"><xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A>メソッドは、特定の時点でのメニュー コマンドを含む次の Visual Studio のショートカット メニューのいずれかを表示できます。</span><span class="sxs-lookup"><span data-stu-id="d996f-174">The <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> method can display any of the following Visual Studio shortcut menus containing menu commands at a specified point:</span></span>  
  
|<span data-ttu-id="d996f-175">メニュー</span><span class="sxs-lookup"><span data-stu-id="d996f-175">Menu</span></span>|<span data-ttu-id="d996f-176">CommandID</span><span class="sxs-lookup"><span data-stu-id="d996f-176">CommandID</span></span>|  
|----------|---------------|  
|<span data-ttu-id="d996f-177">コンテナーに対して表示されるショートカット メニュー</span><span class="sxs-lookup"><span data-stu-id="d996f-177">The shortcut menu displayed for a container</span></span>|<xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|  
|<span data-ttu-id="d996f-178">コンポーネント トレイに表示されるショートカット メニュー</span><span class="sxs-lookup"><span data-stu-id="d996f-178">The shortcut menu displayed for the component tray</span></span>|<xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|  
|<span data-ttu-id="d996f-179">選択範囲に対して表示されるショートカット メニュー</span><span class="sxs-lookup"><span data-stu-id="d996f-179">The shortcut menu displayed for a selection</span></span>|<xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|  
|<span data-ttu-id="d996f-180">トレイの選択に対して表示されるショートカット メニュー</span><span class="sxs-lookup"><span data-stu-id="d996f-180">The shortcut menu displayed for a tray selection</span></span>|<xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|  
  
 <span data-ttu-id="d996f-181">このメソッドは、その他の登録済みのショートカット メニューを表示もできます。</span><span class="sxs-lookup"><span data-stu-id="d996f-181">This method can also display other registered shortcut menus.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.ComponentModel.Design.DesignerVerbCollection" Usage="System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d996f-182">現在使用できるデザイナー動詞のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="d996f-182">Gets a collection of the designer verbs that are currently available.</span></span></summary>
        <value><span data-ttu-id="d996f-183">現在使用できるデザイナー動詞の <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。</span><span class="sxs-lookup"><span data-stu-id="d996f-183">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> that contains the designer verbs that are currently available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d996f-184">すべてグローバル デザイナー動詞、によって追加されるは現在使用できるデザイナー動詞のセットが、<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>メソッドをこのインターフェイス、および個々 のデザイナー動詞で提供される、<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>個々 のデザイナーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="d996f-184">The set of currently available designer verbs consists of all global designer verbs, which are added by the <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> method on this interface, and individual designer verbs, which are offered by the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property of individual designers.</span></span> <span data-ttu-id="d996f-185">グローバルの動詞の名前は、デザイナー動詞の名前と競合している場合は、デザイナーが提供したデザイナー動詞が優先されます。</span><span class="sxs-lookup"><span data-stu-id="d996f-185">If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerbCollection" />
        <altmember cref="P:System.ComponentModel.Design.IDesigner.Verbs" />
      </Docs>
    </Member>
  </Members>
</Type>