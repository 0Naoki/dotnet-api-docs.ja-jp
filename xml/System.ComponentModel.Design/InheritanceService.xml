<Type Name="InheritanceService" FullName="System.ComponentModel.Design.InheritanceService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23096fd897c83bbf7f566a7c11531c9c0299bbfe" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36705744" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InheritanceService : IDisposable, System.ComponentModel.Design.IInheritanceService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InheritanceService extends System.Object implements class System.ComponentModel.Design.IInheritanceService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.InheritanceService" />
  <TypeSignature Language="VB.NET" Value="Public Class InheritanceService&#xA;Implements IDisposable, IInheritanceService" />
  <TypeSignature Language="C++ CLI" Value="public ref class InheritanceService : IDisposable, System::ComponentModel::Design::IInheritanceService" />
  <TypeSignature Language="F#" Value="type InheritanceService = class&#xA;    interface IInheritanceService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IInheritanceService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="150c4-101">継承されたコンポーネントを識別するための一連のメソッドを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="150c4-101">Provides a set of methods for identifying inherited components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="150c4-102"><xref:System.ComponentModel.Design.InheritanceService>継承されたコンポーネントを見つけてを無視する、どれを選択し、サービスによって追跡された各継承クラスの継承の属性を取得するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="150c4-102">The <xref:System.ComponentModel.Design.InheritanceService> can be used to find inherited components, select which ones to ignore, and retrieve the inheritance attribute of each inherited class that is tracked by the service.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.InheritanceAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InheritanceService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InheritanceService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="150c4-103">
            <see cref="T:System.ComponentModel.Design.InheritanceService" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.InheritanceService" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddInheritedComponents">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="150c4-104">指定したコンポーネントによって継承されたコンポーネントを <see cref="T:System.ComponentModel.Design.InheritanceService" /> に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-104">Adds the components inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddInheritedComponents">
      <MemberSignature Language="C#" Value="public void AddInheritedComponents (System.ComponentModel.IComponent component, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddInheritedComponents(class System.ComponentModel.IComponent component, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInheritedComponents (component As IComponent, container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddInheritedComponents(System::ComponentModel::IComponent ^ component, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="abstract member AddInheritedComponents : System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit&#xA;override this.AddInheritedComponents : System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit" Usage="inheritanceService.AddInheritedComponents (component, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="150c4-105">指定したコンテナーに追加する継承されたコンポーネントの検索対象となるコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-105">The component to search for inherited components to add to the specified container.</span>
          </span>
        </param>
        <param name="container">
          <span data-ttu-id="150c4-106">継承されたコンポーネントの追加対象となるコンテナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-106">The container to add the inherited components to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="150c4-107">指定したコンポーネントによって継承されたコンポーネントを <see cref="T:System.ComponentModel.Design.InheritanceService" /> に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-107">Adds the components inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="150c4-108">このメソッドは、指定されたコンポーネントのすべての基底クラスのすべてのフィールドを検索します。</span><span class="sxs-lookup"><span data-stu-id="150c4-108">This method searches all the fields of all base classes of the specified component.</span></span> <span data-ttu-id="150c4-109">実装する各フィールド<xref:System.ComponentModel.IComponent>が、指定されたコンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="150c4-109">Each field that implements <xref:System.ComponentModel.IComponent> is added to the specified container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IInheritanceService" />
      </Docs>
    </Member>
    <Member MemberName="AddInheritedComponents">
      <MemberSignature Language="C#" Value="protected virtual void AddInheritedComponents (Type type, System.ComponentModel.IComponent component, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddInheritedComponents(class System.Type type, class System.ComponentModel.IComponent component, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddInheritedComponents(Type ^ type, System::ComponentModel::IComponent ^ component, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="abstract member AddInheritedComponents : Type * System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit&#xA;override this.AddInheritedComponents : Type * System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit" Usage="inheritanceService.AddInheritedComponents (type, component, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="150c4-110">検索対象となる基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-110">The base type to search for.</span>
          </span>
        </param>
        <param name="component">
          <span data-ttu-id="150c4-111">指定したコンテナーに追加する継承されたコンポーネントの検索対象となるコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-111">The component to search for inherited components to add to the specified container.</span>
          </span>
        </param>
        <param name="container">
          <span data-ttu-id="150c4-112">継承されたコンポーネントの追加対象となるコンテナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-112">The container to add the inherited components to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="150c4-113">指定したコンポーネントによって継承された指定した型のコンポーネントを <see cref="T:System.ComponentModel.Design.InheritanceService" /> に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-113">Adds the components of the specified type that are inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="150c4-114">このメソッドは、コンポーネントのすべての基底クラスのすべてのフィールドを検索します。</span><span class="sxs-lookup"><span data-stu-id="150c4-114">This method searches all the fields of all base classes of component.</span></span> <span data-ttu-id="150c4-115">実装する各フィールド<xref:System.ComponentModel.IComponent>を格納する内部リストに追加されて、<xref:System.ComponentModel.InheritanceAttribute>コンポーネントの継承のレベルを識別します。</span><span class="sxs-lookup"><span data-stu-id="150c4-115">Each field that implements <xref:System.ComponentModel.IComponent> is added to an internal list that stores an <xref:System.ComponentModel.InheritanceAttribute> that identifies the inheritance level of the component.</span></span> <span data-ttu-id="150c4-116">コンポーネントは、指定されたコンテナーには追加されます。</span><span class="sxs-lookup"><span data-stu-id="150c4-116">The component is then added to the specified container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="150c4-117">
            <see cref="T:System.ComponentModel.Design.InheritanceService" /> で使用したリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-117">Releases the resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="inheritanceService.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="150c4-118">
            <see cref="T:System.ComponentModel.Design.InheritanceService" /> によって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-118">Releases all resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="150c4-119">呼び出す<xref:System.ComponentModel.Design.InheritanceService.Dispose%2A>によりによって使用されるリソース、<xref:System.ComponentModel.Design.InheritanceService>を他の目的に再割り当てされます。</span><span class="sxs-lookup"><span data-stu-id="150c4-119">Calling <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A> allows the resources used by the <xref:System.ComponentModel.Design.InheritanceService> to be reallocated for other purposes.</span></span> <span data-ttu-id="150c4-120">詳細については<xref:System.ComponentModel.Design.InheritanceService.Dispose%2A>を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)です。</span><span class="sxs-lookup"><span data-stu-id="150c4-120">For more information about <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="inheritanceService.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="150c4-121">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-121">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="150c4-122">ph x="1" /&amp;gt; によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-122">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="150c4-123">このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="150c4-123">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="150c4-124">`Dispose()` プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="150c4-124">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="150c4-125"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="150c4-125"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="150c4-126">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.ComponentModel.Design.InheritanceService>参照します。</span><span class="sxs-lookup"><span data-stu-id="150c4-126">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.InheritanceService> references.</span></span> <span data-ttu-id="150c4-127">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="150c4-127">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="150c4-128">
            <para>
              <see langword="Dispose" /> 複数回呼び出す他のオブジェクトから。オーバーライドする場合<see langword="Dispose(Boolean)" />既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<see langword="Dispose" />です。実装する方法の詳細についての<see langword="Dispose(Boolean)" />、[Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) を実装を参照してください。 します。詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください [アンマネージ Resources](~/docs/standard/garbage-collection/unmanaged.md) をクリーンアップし、[Finalize メソッドをオーバーライドする] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-128">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetInheritanceAttribute">
      <MemberSignature Language="C#" Value="public System.ComponentModel.InheritanceAttribute GetInheritanceAttribute (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.InheritanceAttribute GetInheritanceAttribute(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInheritanceAttribute (component As IComponent) As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::InheritanceAttribute ^ GetInheritanceAttribute(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetInheritanceAttribute : System.ComponentModel.IComponent -&gt; System.ComponentModel.InheritanceAttribute&#xA;override this.GetInheritanceAttribute : System.ComponentModel.IComponent -&gt; System.ComponentModel.InheritanceAttribute" Usage="inheritanceService.GetInheritanceAttribute component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="150c4-129">継承属性の取得対象となるコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-129">The component to retrieve the inheritance attribute for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="150c4-130">指定したコンポーネントの継承属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-130">Gets the inheritance attribute of the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="150c4-131">このコンポーネントの作成元の継承レベルを記述する <see cref="T:System.ComponentModel.InheritanceAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-131">An <see cref="T:System.ComponentModel.InheritanceAttribute" /> that describes the level of inheritance that this component comes from.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="150c4-132">コンポーネントが継承されない場合、このメソッドは、値を返します<xref:System.ComponentModel.InheritanceAttribute.NotInherited>です。</span><span class="sxs-lookup"><span data-stu-id="150c4-132">If the component is not inherited, this method returns the value <xref:System.ComponentModel.InheritanceAttribute.NotInherited>.</span></span> <span data-ttu-id="150c4-133">それ以外の場合、このコンポーネントの継承の属性を返します。</span><span class="sxs-lookup"><span data-stu-id="150c4-133">Otherwise, it returns the inheritance attribute for this component.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.InheritanceAttribute" />
        <altmember cref="T:System.ComponentModel.Design.IInheritanceService" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreInheritedMember">
      <MemberSignature Language="C#" Value="protected virtual bool IgnoreInheritedMember (System.Reflection.MemberInfo member, System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IgnoreInheritedMember(class System.Reflection.MemberInfo member, class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IgnoreInheritedMember (member As MemberInfo, component As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IgnoreInheritedMember(System::Reflection::MemberInfo ^ member, System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member IgnoreInheritedMember : System.Reflection.MemberInfo * System.ComponentModel.IComponent -&gt; bool&#xA;override this.IgnoreInheritedMember : System.Reflection.MemberInfo * System.ComponentModel.IComponent -&gt; bool" Usage="inheritanceService.IgnoreInheritedMember (member, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="150c4-134">確認対象となるメンバー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-134">The member to check.</span>
          </span>
          <span data-ttu-id="150c4-135">このメンバーは、<see cref="T:System.Reflection.FieldInfo" /> または <see cref="T:System.Reflection.MethodInfo" /> のいずれかです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-135">This member is either a <see cref="T:System.Reflection.FieldInfo" /> or a <see cref="T:System.Reflection.MethodInfo" />.</span>
          </span>
        </param>
        <param name="component">
          <span data-ttu-id="150c4-136">このメンバーのバインド先となるコンポーネント インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-136">The component instance this member is bound to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="150c4-137">指定したメンバーを無視するかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-137">Indicates whether to ignore the specified member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="150c4-138">指定したメンバーを、継承されたコンポーネントのセットに含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-138">
              <see langword="true" /> if the specified member should be included in the set of inherited components; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="150c4-139">
            <para>このメソッドをオーバーライドするには、ユーザーは、継承サービスが無視されるメンバーのセットを変更できます。既定の実装は、プライベート、すべてのメンバーを無視でき、だけパブリック メンバーまたはプロテクト メンバー。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="150c4-139">
              <para>By overriding this method, users can modify the set of members that the inheritance service ignores. The default implementation ignores all members that are private, and allows only public or protected members.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
  </Members>
</Type>