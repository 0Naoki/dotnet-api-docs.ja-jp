<Type Name="IComponentChangeService" FullName="System.ComponentModel.Design.IComponentChangeService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9da9b16adc06a8f1abe552a2842b02e1cd6c9038" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36706693" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComponentChangeService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentChangeService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IComponentChangeService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentChangeService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentChangeService" />
  <TypeSignature Language="F#" Value="type IComponentChangeService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fca80-101">コンポーネントの追加、変更、削除、または名前変更のイベントのイベント ハンドラーを追加および削除するためのインターフェイスを提供すると共に、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> イベントまたは <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> イベントを発生させるメソッドを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fca80-101">Provides an interface to add and remove the event handlers for events that add, change, remove or rename components, and provides methods to raise a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> or <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fca80-102"><xref:System.ComponentModel.Design.IComponentChangeService> 次のイベントを処理する方法を示すために使用できるインターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="fca80-102"><xref:System.ComponentModel.Design.IComponentChangeService> provides an interface that can be used to indicate the methods that handle the following events:</span></span>  
  
-   <span data-ttu-id="fca80-103"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded>、コンポーネントを追加するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-103"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded>, raised when a component is added.</span></span>  
  
-   <span data-ttu-id="fca80-104"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding>、コンポーネントを追加するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-104"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding>, raised when a component is about to be added.</span></span>  
  
-   <span data-ttu-id="fca80-105"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>、コンポーネントが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-105"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>, raised when a component is changed.</span></span>  
  
-   <span data-ttu-id="fca80-106"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>、コンポーネントを変更するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-106"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>, raised when a component is about to be changed.</span></span>  
  
-   <span data-ttu-id="fca80-107"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved>、コンポーネントが削除されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-107"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved>, raised when a component is removed.</span></span>  
  
-   <span data-ttu-id="fca80-108"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving>、コンポーネントを削除するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-108"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving>, raised when a component is about to be removed.</span></span>  
  
-   <span data-ttu-id="fca80-109"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename>、コンポーネントの名前を変更するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-109"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename>, raised when a component is renamed.</span></span>  
  
 <span data-ttu-id="fca80-110">通常、デザイン環境は、これらのコンポーネントの追加を発生させます。、変更、削除、またはイベントの名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="fca80-110">Typically, the design environment raises these component add, change, remove, or rename events.</span></span> <span data-ttu-id="fca80-111">使用する場合、デザイナーはこのインターフェイスのメソッドを呼び出す必要があります<xref:System.ComponentModel.Design.DesignerTransaction>提供元に戻すおよびやり直し機能コンポーネントに影響する操作でデザイン時のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fca80-111">Designers should call the methods of this interface when using <xref:System.ComponentModel.Design.DesignerTransaction> objects to provide undo and redo functionality for design-time actions that affect components.</span></span> <span data-ttu-id="fca80-112">詳細については、ドキュメントに記載<xref:System.ComponentModel.Design.DesignerTransaction>です。</span><span class="sxs-lookup"><span data-stu-id="fca80-112">More information is available in the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span> <span data-ttu-id="fca80-113">一般に、それらの処理、ルート デザイナーのみ通知を変更します。</span><span class="sxs-lookup"><span data-stu-id="fca80-113">Generally, only the root designer handles these change notifications.</span></span>  
  
 <span data-ttu-id="fca80-114">このサービスでは、コンポーネントが変更されたイベントまたはイベントを発生させるメソッドも提供します。</span><span class="sxs-lookup"><span data-stu-id="fca80-114">This service also provides methods that raise a component changed event or component changing event.</span></span> <span data-ttu-id="fca80-115">A<xref:System.ComponentModel.PropertyDescriptor>か、コンポーネントは、コンポーネントが変更されたかを変更することを示していることができます、<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>と<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>メソッド、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="fca80-115">A <xref:System.ComponentModel.PropertyDescriptor> or a component can indicate that a component has changed or is changing with the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> and <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> methods, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fca80-116">次の例を使用する方法を示しています、<xref:System.ComponentModel.Design.IComponentChangeService>インターフェイスがデザイン モードでの追加、削除、およびコンポーネントの変更に関する通知を受信します。</span><span class="sxs-lookup"><span data-stu-id="fca80-116">This following example demonstrates how to use the <xref:System.ComponentModel.Design.IComponentChangeService> interface to receive notifications about the addition of, removal of, and changes to components in design mode.</span></span>  
  
 [!code-cpp[IComponentChangeServiceSample2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IComponentChangeServiceSample2/CPP/icomponentchangeserviceexample.cpp#1)]
 [!code-csharp[IComponentChangeServiceSample2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IComponentChangeServiceSample2/CS/icomponentchangeserviceexample.cs#1)]
 [!code-vb[IComponentChangeServiceSample2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IComponentChangeServiceSample2/VB/icomponentchangeserviceexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
    <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventHandler" />
    <altmember cref="T:System.ComponentModel.Design.ComponentChangingEventHandler" />
    <altmember cref="T:System.ComponentModel.Design.ComponentRenameEventHandler" />
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
  </Docs>
  <Members>
    <Member MemberName="ComponentAdded">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentAdded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />
      <MemberSignature Language="VB.NET" Value="Event ComponentAdded As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentAdded;" />
      <MemberSignature Language="F#" Value="member this.ComponentAdded : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentAdded : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fca80-117">コンポーネントが追加されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-117">Occurs when a component has been added.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fca80-118">このイベントは、読み込み時と、ときに新しいコンポーネントが作成、ユーザーが、コンポーネントが配置された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-118">This event occurs during load and when new components are created by the user, after the component has been sited.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentAdding">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentAdding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentAdding" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />
      <MemberSignature Language="VB.NET" Value="Event ComponentAdding As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentAdding;" />
      <MemberSignature Language="F#" Value="member this.ComponentAdding : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentAdding : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fca80-119">コンポーネントが追加されているときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-119">Occurs when a component is in the process of being added.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fca80-120">このイベントは、読み込み時と、ユーザーが新しいコンポーネントを作成するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-120">This event occurs during load and when the user creates a new component.</span></span> <span data-ttu-id="fca80-121">ここで例外をスローして、コンポーネントを追加する処理を取り消すことができます。</span><span class="sxs-lookup"><span data-stu-id="fca80-121">You can cancel the process of adding a component by throwing an exception here.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentChangedEventHandler ComponentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentChangedEventHandler ComponentChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      <MemberSignature Language="VB.NET" Value="Event ComponentChanged As ComponentChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentChangedEventHandler ^ ComponentChanged;" />
      <MemberSignature Language="F#" Value="member this.ComponentChanged : System.ComponentModel.Design.ComponentChangedEventHandler " Usage="member this.ComponentChanged : System.ComponentModel.Design.ComponentChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fca80-122">コンポーネントが変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-122">Occurs when a component has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fca80-123">このイベントは、フォーム上のすべてのコンポーネントが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-123">This event occurs when any component on the form changes.</span></span> <span data-ttu-id="fca80-124">このイベントがこの時点での変更が必要であるために、フォームの読み込みやアンロード中に発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-124">This event will not occur during form load and unload, because changes are expected at this time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fca80-125">A<xref:System.ComponentModel.Design.DesignerTransaction>複数が発生する<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="fca80-125">A <xref:System.ComponentModel.Design.DesignerTransaction> can raise multiple <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> events.</span></span> <span data-ttu-id="fca80-126">いくつか<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>イベント ハンドラーが妨げられることがイベントの予期されたシーケンスと場合など、コード値を変更するプロパティのトランザクションの実行中にします。</span><span class="sxs-lookup"><span data-stu-id="fca80-126">Some <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event handlers can interfere with expected sequences of events, such as if your code alters the values of properties while a transaction is occurring.</span></span> <span data-ttu-id="fca80-127">A<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>イベント ハンドラーできますもパフォーマンスが低下する場合は、描画中に変更するたびに、<xref:System.ComponentModel.Design.DesignerTransaction>が進行中です。</span><span class="sxs-lookup"><span data-stu-id="fca80-127">A <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event handler can also impair performance if it draws after each change while a <xref:System.ComponentModel.Design.DesignerTransaction> is in progress.</span></span> <span data-ttu-id="fca80-128">実行できるように、<xref:System.ComponentModel.Design.DesignerTransaction>中断や干渉によってせずに完了するプロセスで、 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 、イベント ハンドラーの状態をテストすることができます、<xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A>プロパティをトランザクションが完了するまで変更イベントを処理を任せる追加することによって、<xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler>が発生する、<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>イベント ハンドラーと、トランザクションの完了時にそれ自体を削除します。</span><span class="sxs-lookup"><span data-stu-id="fca80-128">In order to allow a <xref:System.ComponentModel.Design.DesignerTransaction> in process to complete without interruption or interference by your <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event handler, you can test the state of the <xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A> property, and defer handling the change events until the completion of the transaction by adding a <xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler> which will raise your <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event handler and remove itself upon completion of the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />
        <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanging">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentChangingEventHandler ComponentChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentChangingEventHandler ComponentChanging" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
      <MemberSignature Language="VB.NET" Value="Event ComponentChanging As ComponentChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentChangingEventHandler ^ ComponentChanging;" />
      <MemberSignature Language="F#" Value="member this.ComponentChanging : System.ComponentModel.Design.ComponentChangingEventHandler " Usage="member this.ComponentChanging : System.ComponentModel.Design.ComponentChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fca80-129">コンポーネントが変更されているときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-129">Occurs when a component is in the process of being changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fca80-130">このイベントは、コンポーネントが実際に変更され、により、デザイナー、したり変更を中止したり、変更前の処理を実行する前に発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-130">This event occurs before the component is actually changed, and gives the designer a chance to abort the change or perform any pre-change processing.</span></span> <span data-ttu-id="fca80-131">このイベントはこの時点での変更が必要であるために、フォームの読み込みやアンロード中に発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-131">This event does not occur during form load and unload, because changes are expected at this time.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <altmember cref="T:System.ComponentModel.Design.ComponentChangingEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoved">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentRemoved" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />
      <MemberSignature Language="VB.NET" Value="Event ComponentRemoved As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentRemoved;" />
      <MemberSignature Language="F#" Value="member this.ComponentRemoved : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentRemoved : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fca80-132">コンポーネントが削除されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-132">Occurs when a component has been removed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fca80-133">このイベントは、アンロード時と、コンポーネントがユーザーによって削除されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-133">This event occurs during unload and when a component is deleted by the user.</span></span> <span data-ttu-id="fca80-134">コンポーネントから、サイトが削除される前に、イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-134">The event occurs before the site has been removed from the component.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoving">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentRemoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentRemoving" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />
      <MemberSignature Language="VB.NET" Value="Event ComponentRemoving As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentRemoving;" />
      <MemberSignature Language="F#" Value="member this.ComponentRemoving : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentRemoving : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fca80-135">コンポーネントが削除されているときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-135">Occurs when a component is in the process of being removed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fca80-136">このイベントは、アンロード時と、ユーザーが、コンポーネントを削除するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fca80-136">This event occurs during unload and when the user deletes a component.</span></span> <span data-ttu-id="fca80-137">ここで例外をスローして、コンポーネントを削除する処理を取り消すことができます。</span><span class="sxs-lookup"><span data-stu-id="fca80-137">You can cancel the process of removing a component by throwing an exception here.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRename">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentRenameEventHandler ComponentRename;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentRenameEventHandler ComponentRename" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />
      <MemberSignature Language="VB.NET" Value="Event ComponentRename As ComponentRenameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentRenameEventHandler ^ ComponentRename;" />
      <MemberSignature Language="F#" Value="member this.ComponentRename : System.ComponentModel.Design.ComponentRenameEventHandler " Usage="member this.ComponentRename : System.ComponentModel.Design.ComponentRenameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentRenameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fca80-138">コンポーネントの名前が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-138">Occurs when a component is renamed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fca80-139">このイベントが発生した後、<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>コンポーネントの名前が変更されたときにイベント。</span><span class="sxs-lookup"><span data-stu-id="fca80-139">This event occurs after the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event when a component has been renamed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.ComponentRenameEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public void OnComponentChanged (object component, System.ComponentModel.MemberDescriptor member, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanged(object component, class System.ComponentModel.MemberDescriptor member, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnComponentChanged (component As Object, member As MemberDescriptor, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnComponentChanged(System::Object ^ component, System::ComponentModel::MemberDescriptor ^ member, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanged : obj * System.ComponentModel.MemberDescriptor * obj * obj -&gt; unit" Usage="iComponentChangeService.OnComponentChanged (component, member, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fca80-140">変更されたコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-140">The component that has changed.</span>
          </span>
        </param>
        <param name="member">
          <span data-ttu-id="fca80-141">変更されたメンバー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-141">The member that has changed.</span>
          </span>
          <span data-ttu-id="fca80-142">変更が単一のメンバーに関連していない場合は <see langword="null" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-142">This is <see langword="null" /> if this change is not related to a single member.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="fca80-143">変更前のメンバーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-143">The old value of the member.</span>
          </span>
          <span data-ttu-id="fca80-144">メンバーが <see langword="null" /> ではない場合にだけ有効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-144">This is valid only if the member is not <see langword="null" />.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="fca80-145">変更後のメンバーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-145">The new value of the member.</span>
          </span>
          <span data-ttu-id="fca80-146">メンバーが <see langword="null" /> ではない場合にだけ有効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-146">This is valid only if the member is not <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fca80-147">コンポーネント変更サービスに対して、特定のコンポーネントが変更されたことを通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-147">Announces to the component change service that a particular component has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fca80-148">このメソッドを発生させる、<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="fca80-148">This method raises the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event.</span></span>  
  
 <span data-ttu-id="fca80-149">付属しているほとんどのデザイナー、 [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]、Visual Studio のデザイン時環境だけでなく通常このイベントを発生するときに、プロジェクト内のコンポーネントが変更されたり、する必要はありませんを明示的に時間のほとんどは、このメソッドを呼び出すようにします。</span><span class="sxs-lookup"><span data-stu-id="fca80-149">Most designers that ship with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)], as well as the Visual Studio design-time environment, typically raise this event for you when a component in a project is changed, so most of the time you do not need to explicitly call this method.</span></span> <span data-ttu-id="fca80-150">適切な<xref:System.ComponentModel.Design.IComponentChangeService>イベントが自動的にはいつ発生するか、<xref:System.ComponentModel.PropertyDescriptor>プロパティを変更するために使用値またはコンポーネントを追加または削除、<xref:System.ComponentModel.Design.IDesignerHost>コンテナーです。</span><span class="sxs-lookup"><span data-stu-id="fca80-150">The appropriate <xref:System.ComponentModel.Design.IComponentChangeService> events are automatically raised when a <xref:System.ComponentModel.PropertyDescriptor> is used to change a property value or components are added or removed from the <xref:System.ComponentModel.Design.IDesignerHost> container.</span></span>  
  
 <span data-ttu-id="fca80-151">呼び出しの前に<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>、まず<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>コンポーネントを変更すると、変更がないことを示すためにします。</span><span class="sxs-lookup"><span data-stu-id="fca80-151">Before calling <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, first call <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> to indicate that a component is about to change, and make the change.</span></span> <span data-ttu-id="fca80-152">呼び出す<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>させる、<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="fca80-152">Then call <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> to raise the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fca80-153">
            <para>このイベントにより、プロパティの変更後に必要な後処理を実行します。たとえば、デザイナーでは、通常、新しい値を持つプロパティを設定するソース コードを更新します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-153">
              <para>This event allows the implementer to do any post-processing that is needed after a property change. For example, a designer typically updates the source code that sets the property with the new value.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public void OnComponentChanging (object component, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanging(object component, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnComponentChanging (component As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnComponentChanging(System::Object ^ component, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanging : obj * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="iComponentChangeService.OnComponentChanging (component, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fca80-154">変更されようとしているコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-154">The component that is about to change.</span>
          </span>
        </param>
        <param name="member">
          <span data-ttu-id="fca80-155">変更されようとしているメンバー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-155">The member that is changing.</span>
          </span>
          <span data-ttu-id="fca80-156">変更が単一のメンバーに関連していない場合は <see langword="null" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-156">This is <see langword="null" /> if this change is not related to a single member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fca80-157">コンポーネント変更サービスに対して、特定のコンポーネントがこれから変更されることを通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-157">Announces to the component change service that a particular component is changing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fca80-158">このメソッドを発生させる、<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>イベント。</span><span class="sxs-lookup"><span data-stu-id="fca80-158">This method raises the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> event.</span></span>  
  
 <span data-ttu-id="fca80-159">ほとんどのデザイナーに含まれている、 [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]、だけでなく、Visual Studio デザイン時環境では、通常このイベントを発生自動的に。 ほとんどの場合、ようにする必要はありませんを明示的にこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fca80-159">Most designers included with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)], as well as the Visual Studio design-time environment, typically raise this event automatically; so most of the time, you do not need to explicitly call this method.</span></span> <span data-ttu-id="fca80-160">適切な<xref:System.ComponentModel.Design.IComponentChangeService>イベントが自動的にはいつ発生するか、<xref:System.ComponentModel.PropertyDescriptor>プロパティを変更するために使用値またはコンポーネントを追加または削除、<xref:System.ComponentModel.Design.IDesignerHost>コンテナーです。</span><span class="sxs-lookup"><span data-stu-id="fca80-160">The appropriate <xref:System.ComponentModel.Design.IComponentChangeService> events are automatically raised when a <xref:System.ComponentModel.PropertyDescriptor> is used to change a property value or components are added or removed from the <xref:System.ComponentModel.Design.IDesignerHost> container.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fca80-161">
            <para>このメソッドは、プロパティを変更できない場合に例外をスローします。これは、特定のプロパティの値を検証するものでありません。代わりに、コンポーネントを変更するを妨げてのグローバル メソッドを提供しています。たとえば場合デザイナー ファイルは、ソース コード管理にチェックインされて、このイベントのハンドラーは通常例外をスロー場合は、ユーザーがファイルをチェック アウトを拒否しました。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fca80-161">
              <para>This method throws an exception if the property cannot be changed. This is not intended to validate the values of a particular property. Instead, it is intended to provide a global method of preventing a component from changing. For example, if a designer file is checked into source code control, this event's handler would typically throw an exception if the user refused to check out the file.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>