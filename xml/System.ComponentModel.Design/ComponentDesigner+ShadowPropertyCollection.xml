<Type Name="ComponentDesigner+ShadowPropertyCollection" FullName="System.ComponentModel.Design.ComponentDesigner+ShadowPropertyCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c877ab0f3912abc5490d1eb463b0de6ac089f7c1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="protected sealed class ComponentDesigner.ShadowPropertyCollection" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi sealed beforefieldinit ComponentDesigner/ShadowPropertyCollection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />
  <TypeSignature Language="VB.NET" Value="Protected NotInheritable Class ComponentDesigner.ShadowPropertyCollection" />
  <TypeSignature Language="C++ CLI" Value="protected: ref class ComponentDesigner::ShadowPropertyCollection sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dc6c2-101">特定のプロパティに対して継承された既定値や割り当てられた値をオーバーライドするシャドウ プロパティのコレクションを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc6c2-101">Represents a collection of shadow properties that should override inherited default or assigned values for specific properties.</span>
      </span>
      <span data-ttu-id="dc6c2-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc6c2-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc6c2-103"><xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection> デザイン時にこれらのプロパティの他の値をオーバーライドする特定のプロパティの値のコレクションを格納します。</span><span class="sxs-lookup"><span data-stu-id="dc6c2-103"><xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection> stores a collection of values for specific properties that override any other value for these properties at design time.</span></span> <span data-ttu-id="dc6c2-104">これはバック グラウンド フォームがある、表示されるプロパティを設定するときの状況で、特定のプロパティがなど、設定、特定の値にことを保証するために役立ちます`true`です。</span><span class="sxs-lookup"><span data-stu-id="dc6c2-104">This is useful for ensuring that a specific property is set to a specific value, for example, in situations when the background form should always have its visible property set to `true`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="dc6c2-105">コレクション内にあるかどうかを調べるプロパティの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc6c2-105">The name of the property to check for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc6c2-106">指定した名前と一致するプロパティがコレクション内にあるかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc6c2-106">Indicates whether a property matching the specified name exists in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc6c2-107">プロパティがコレクション内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc6c2-107">
              <see langword="true" /> if the property exists in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="dc6c2-108">コレクション内にあるかどうかを調べるプロパティの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc6c2-108">The name of the property to access in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc6c2-109">指定したインデックスにあるオブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc6c2-109">Gets or sets the object at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc6c2-110">指定したプロパティの値がコレクション内にある場合は、その値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc6c2-110">The value of the specified property, if it exists in the collection.</span>
          </span>
          <span data-ttu-id="dc6c2-111">それ以外の場合、シャドウ プロパティ値が適用されないプロパティの現在の値が取得されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc6c2-111">Otherwise, the value is retrieved from the current value of the nonshadowed property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc6c2-112">プロパティが影付きされていない場合、このメソッドは、プロパティの現在の値を返します。</span><span class="sxs-lookup"><span data-stu-id="dc6c2-112">This method returns the current value of a property, if the property has not been shadowed.</span></span> <span data-ttu-id="dc6c2-113">したがって、プロパティが呼び出すことによりシャドウされているかどうかを確認しておくことは<xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains%2A>します。</span><span class="sxs-lookup"><span data-stu-id="dc6c2-113">Therefore, it is important to determine whether the property is shadowed by calling <xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>