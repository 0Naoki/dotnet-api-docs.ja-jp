<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDesignerHost.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56a5d45bd683269ed3912d04dd336b2bccc6e7449.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a5d45bd683269ed3912d04dd336b2bccc6e7449</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>Provides an interface for managing designer transactions and components.</source>
          <target state="translated">デザイナーのトランザクションおよびコンポーネントを管理するためのインターフェイスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> コンポーネントの管理、およびデザイナー トランザクションのサポートを提供する .NET Framework のフォーム デザイナーのアーキテクチャで動作するインターフェイス。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The .NET Framework does not provide an implementation of this interface.</source>
          <target state="translated">.NET Framework では、このインターフェイスの実装は提供されません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The interface is implemented by development tools that support designers.</source>
          <target state="translated">インターフェイスは、デザイナーをサポートする開発ツールによって実装されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The following example code demonstrates how to obtain the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> service interface from a designer or sited component.</source>
          <target state="translated">次のコード例を取得する方法を示しています、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph>デザイナーまたは配置のコンポーネントからサービス インターフェイスです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The following example code demonstrates using the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> interface to list project components.</source>
          <target state="translated">次のコード例では、使用方法を示します、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph>プロジェクト コンポーネントの一覧へのインターフェイスです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>To obtain an implementation of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> from a development environment, call <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.GetService(System.Type)" /&gt;</ph> while your component is active in design mode, passing the type of <ph id="ph3">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> to request an <ph id="ph4">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> service interface.</source>
          <target state="translated">実装を取得する<ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph>、開発環境から呼び出す<ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.GetService(System.Type)" /&gt;</ph>コンポーネントがデザイン モードでアクティブな間は、型を渡します<ph id="ph3">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph>要求に、<ph id="ph4">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph>サービス インターフェイスです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> provides the following members related to designer state:</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> デザイナーの状態に関連する次のメンバーを提供します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /&gt;</ph> property indicates whether a designer or document is being loaded.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /&gt;</ph>プロパティは、デザイナーまたはドキュメントが読み込まれるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /&gt;</ph> event occurs when a designer is activated before display.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /&gt;</ph>イベントは、デザイナーが表示される前にアクティブになったときに発生します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /&gt;</ph> event occurs when a designer is deactivated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /&gt;</ph>イベント デザイナーが非アクティブ化されたときに発生します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /&gt;</ph> event occurs after a document is loaded.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /&gt;</ph>イベントは、ドキュメントが読み込まれた後に発生します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /&gt;</ph> method activates the designer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /&gt;</ph>メソッドには、デザイナーがアクティブにします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> provides the following members related to managing components:</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> コンポーネントの管理に関連する次のメンバーを提供します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /&gt;</ph> property indicates the container for the designer host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /&gt;</ph>プロパティは、デザイナー ホストのコンテナーを示します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /&gt;</ph> property indicates the base class for the root component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /&gt;</ph>プロパティはルート コンポーネントの基本クラスを示します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /&gt;</ph> property indicates the name of the class of the root component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /&gt;</ph>プロパティ ルート コンポーネントのクラスの名前を示します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /&gt;</ph> method creates the specified type of component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /&gt;</ph>メソッドは、指定した型のコンポーネントを作成します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /&gt;</ph> method destroys the specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /&gt;</ph>メソッドは、指定されたコンポーネントを破棄します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /&gt;</ph> method gets the designer associated with a specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /&gt;</ph>メソッドは、指定されたコンポーネントに関連付けられたデザイナーを取得します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /&gt;</ph> method gets an instance of the type with the specified name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /&gt;</ph>メソッドは、指定した名前の型のインスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> provides the following members related to managing transactions:</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> トランザクションの管理に関連する次のメンバーを提供します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /&gt;</ph> property indicates whether the designer is in a transaction.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /&gt;</ph>プロパティは、トランザクションでは、デザイナーがあるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /&gt;</ph> property indicates the current transaction description.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /&gt;</ph>プロパティは現在のトランザクションの説明を示します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /&gt;</ph> event occurs when a transaction has been completed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /&gt;</ph>イベント トランザクションが完了したときに発生します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /&gt;</ph> event occurs when a transaction is about to be completed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /&gt;</ph>イベント トランザクションが完了するときに発生します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /&gt;</ph> event occurs when a transaction has begun.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /&gt;</ph>イベント トランザクションが開始されたときに発生します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /&gt;</ph> event occurs when a transaction is about to begin.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /&gt;</ph>イベント トランザクションが開始するときに発生します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /&gt;</ph> method creates and returns a new transaction.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /&gt;</ph>メソッドを作成し、新しいトランザクションを返します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.Activate">
          <source>Activates the designer that this host is hosting.</source>
          <target state="translated">ホストしているデザイナーをアクティブにします。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.Activate">
          <source>Designers should be activated before they display their user interface.</source>
          <target state="translated">ユーザー インターフェイスを表示する前に、デザイナーをアクティブにする必要があります。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.Activated">
          <source>Occurs when this designer is activated.</source>
          <target state="translated">デザイナーがアクティブになるときに発生します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.Activated">
          <source>A designer is activated before it is displayed.</source>
          <target state="translated">表示されるまで、デザイナーがアクティブになります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IDesignerHost.Container">
          <source>Gets the container for this designer host.</source>
          <target state="translated">デザイナー ホストのコンテナーを取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.Container">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> for this host.</source>
          <target state="translated">ホストの <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.Container">
          <source>This <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> contains the components of the current design mode document.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph>デザイン モードの現在のドキュメントのコンポーネントが含まれます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.Container">
          <source>You can list or access any of the components of the current design mode document through the <ph id="ph1">&lt;xref:System.ComponentModel.IContainer.Components%2A&gt;</ph> member of this <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">ボックスの一覧、を通じて現在のデザイン モードのドキュメントのコンポーネントのいずれかにアクセスしたりすることができます、<ph id="ph1">&lt;xref:System.ComponentModel.IContainer.Components%2A&gt;</ph>このメンバー<ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>Creates a component of the specified type and adds it to the design document.</source>
          <target state="translated">指定した型のコンポーネントを作成し、そのコンポーネントをデザイン ドキュメントに追加します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
          <source>The type of the component to create.</source>
          <target state="translated">作成するコンポーネントの型。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
          <source>Creates a component of the specified type and adds it to the design document.</source>
          <target state="translated">指定した型のコンポーネントを作成し、そのコンポーネントをデザイン ドキュメントに追加します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
          <source>The newly created component.</source>
          <target state="translated">新規作成したコンポーネント。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
          <source>If the type cannot be resolved into an object that implements <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, an exception is thrown.</source>
          <target state="translated">実装するオブジェクトに型を解決できないかどうか<ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>例外がスローされます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
          <source>This method does not specify a name for the component.</source>
          <target state="translated">このメソッドは、コンポーネントの名前を指定しません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
          <source>The method creates the component and adds it to the designer container.</source>
          <target state="translated">メソッドは、コンポーネントを作成し、デザイナーのコンテナーに追加します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
          <source>The type of the component to create.</source>
          <target state="translated">作成するコンポーネントの型。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
          <source>The name for the component.</source>
          <target state="translated">コンポーネントの名前。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
          <source>Creates a component of the specified type and name, and adds it to the design document.</source>
          <target state="translated">指定した型および名前のコンポーネントを作成し、そのコンポーネントをデザイン ドキュメントに追加します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
          <source>The newly created component.</source>
          <target state="translated">新規作成したコンポーネント。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
          <source>If the type cannot be resolved into an object that implements <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, an exception is thrown.</source>
          <target state="translated">実装するオブジェクトに型を解決できないかどうか<ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>例外がスローされます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
          <source>This method creates the component and adds it to the designer container.</source>
          <target state="translated">このメソッドは、コンポーネントを作成し、デザイナーのコンテナーに追加します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.IDesignerHost">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</source>
          <target state="translated">一連のイベントをカプセル化することでパフォーマンスを向上させ、"元に戻す" 機能や "やり直し" 機能をサポートできるようにする <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph> を作成します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</source>
          <target state="translated">一連のイベントをカプセル化することでパフォーマンスを向上させ、"元に戻す" 機能や "やり直し" 機能をサポートできるようにする <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph> を作成します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph> の新しいインスタンス。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>When you complete the steps in your transaction, you should call <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /&gt;</ph> on this object.</source>
          <target state="translated">トランザクションの手順が完了したら、このオブジェクトに対して <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /&gt;</ph> を呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>This method creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> that can be used to encapsulate a series of operations.</source>
          <target state="translated">このメソッドを作成、<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>一連の操作をカプセル化に使用できます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</source>
          <target state="translated">デザイナーのトランザクションでは、パフォーマンスを向上させる、操作の処理中に複数の更新プログラムによるちらつきを軽減、およびほとんどの操作を元に戻すを有効にすることができます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>Lengthy operations that involve multiple components can raise many events.</source>
          <target state="translated">複数のコンポーネントに関連する時間のかかる操作では、多くのイベントを発生させることができます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>These events can cause side effects, such as flicker or degraded performance.</source>
          <target state="translated">これらのイベントはちらつきを調整するなどの副作用が発生することができます。 またはパフォーマンスが低下します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</source>
          <target state="translated">複数のコンポーネントを同時に操作または 1 つのコンポーネントの複数のプロパティを設定するとき、は、トランザクション内でこれらの変更を実行することによってパフォーマンスを向上できます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>Some operations handle the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;</ph> events and perform work only when a transaction is not in progress.</source>
          <target state="translated">一部の操作を処理、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</ph>と<ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;</ph>イベントと、トランザクションが実行されていない場合にのみ、作業を実行します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <source>For more information on using transactions, see the documentation for <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>.</source>
          <target state="translated">トランザクションの使用に関する詳細については、ドキュメントを参照して<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>A title or description for the newly created transaction.</source>
          <target state="translated">新規作成したトランザクションのタイトルまたは説明。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.</source>
          <target state="translated">指定したトランザクションの説明を使用して、一連のイベントをカプセル化することでパフォーマンスを向上させ、"元に戻す" 機能や "やり直し" 機能をサポートできるようにする <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph> を作成します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph>.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignerTransaction" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>When you have completed the steps in your transaction, you should call <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /&gt;</ph> on this object.</source>
          <target state="translated">トランザクションの手順が完了したら、このオブジェクトに対して <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /&gt;</ph> を呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>This method creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> that can be used to encapsulate a series of operations.</source>
          <target state="translated">このメソッドを作成、<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>一連の操作をカプセル化に使用できます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</source>
          <target state="translated">デザイナーのトランザクションでは、パフォーマンスを向上させる、操作の処理中に複数の更新プログラムによるちらつきを軽減、およびほとんどの操作を元に戻すを有効にすることができます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>Lengthy operations that involve multiple components can raise many events.</source>
          <target state="translated">複数のコンポーネントに関連する時間のかかる操作では、多くのイベントを発生させることができます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>These events can cause side effects, such as flicker or degraded performance.</source>
          <target state="translated">これらのイベントはちらつきを調整するなどの副作用が発生することができます。 またはパフォーマンスが低下します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</source>
          <target state="translated">複数のコンポーネントを同時に操作または 1 つのコンポーネントの複数のプロパティを設定するとき、は、トランザクション内でこれらの変更を実行することによってパフォーマンスを向上できます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>Some operations handle the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;</ph> events and perform work only when a transaction is not in progress.</source>
          <target state="translated">一部の操作を処理、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</ph>と<ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;</ph>イベントと、トランザクションが実行されていない場合にのみ、作業を実行します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
          <source>For more information on using transactions, see the documentation for <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>.</source>
          <target state="translated">トランザクションの使用に関する詳細については、ドキュメントを参照して<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.Deactivated">
          <source>Occurs when this designer is deactivated.</source>
          <target state="translated">デザイナーがアクティブでなくなるときに発生します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.Deactivated">
          <source>A designer is deactivated just before it is no longer displayed.</source>
          <target state="translated">デザイナーが表示されなくなりますが、直前には、無効になります。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)">
          <source>The component to destroy.</source>
          <target state="translated">破棄するコンポーネント。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)">
          <source>Destroys the specified component and removes it from the designer container.</source>
          <target state="translated">指定したコンポーネントを破棄し、デザイナー コンテナーからそのコンポーネントを削除します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> to retrieve the designer for.</source>
          <target state="translated">デザイナーを取得する対象の <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)">
          <source>Gets the designer instance that contains the specified component.</source>
          <target state="translated">指定したコンポーネントを格納しているデザイナー インスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesigner" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no designer for the specified component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesigner" /&gt;</ph>。指定したコンポーネントのデザイナーがない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)">
          <source>The name of the type to load.</source>
          <target state="translated">読み込む型の名前。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)">
          <source>Gets an instance of the specified, fully qualified type name.</source>
          <target state="translated">指定した完全限定型名のインスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)">
          <source>The type object for the specified type name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the type cannot be found.</source>
          <target state="translated">指定した型名の型オブジェクト。型が見つからない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IDesignerHost.InTransaction">
          <source>Gets a value indicating whether the designer host is currently in a transaction.</source>
          <target state="translated">デザイナー ホストが現在トランザクションを実行中かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.InTransaction">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a transaction is in progress; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">トランザクションを実行中の場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.LoadComplete">
          <source>Occurs when this designer completes loading its document.</source>
          <target state="translated">デザイナーがドキュメントの読み込みを完了したときに発生します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.LoadComplete">
          <source>This event occurs after a designer completes loading its document.</source>
          <target state="translated">このイベントは、デザイナーでは、ドキュメントの読み込みが完了した後に発生します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IDesignerHost.Loading">
          <source>Gets a value indicating whether the designer host is currently loading the document.</source>
          <target state="translated">デザイナー ホストが現在ドキュメントを読み込み中かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.Loading">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the designer host is currently loading the document; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">デザイナー ホストがドキュメントを読み込み中の場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IDesignerHost.RootComponent">
          <source>Gets the instance of the base class used as the root component for the current design.</source>
          <target state="translated">現在のデザインのルート コンポーネントとして使用される、基本クラスのインスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.RootComponent">
          <source>The instance of the root component class.</source>
          <target state="translated">ルート コンポーネント クラスのインスタンス。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.RootComponent">
          <source>This base class is typically a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> instance; it defines the class for which the user's derived class extends.</source>
          <target state="translated">この基本クラスは、通常、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>インスタンスです。 ユーザーの派生クラスを拡張するクラスを定義します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName">
          <source>Gets the fully qualified name of the class being designed.</source>
          <target state="translated">デザイン対象のクラスの完全限定名を取得します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName">
          <source>The fully qualified name of the base component class.</source>
          <target state="translated">基本コンポーネント クラスの完全限定名。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed">
          <source>Adds an event handler for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /&gt;</ph> イベントのイベント ハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed">
          <source>This event occurs after a transaction is closed.</source>
          <target state="translated">このイベントは、トランザクションが閉じられた後に発生します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed">
          <source>A transaction can sometimes change multiple values.</source>
          <target state="translated">トランザクションでは、複数の値を変更ことができる場合があります。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed">
          <source>The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</source>
          <target state="translated">トランザクション メソッドでは、パフォーマンスを回避し、ちらつきの反復処理を回避することで問題をする方法を提供します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed">
          <source>These methods defer processing until after the transaction has closed.</source>
          <target state="translated">これらのメソッドは、トランザクションが終了するまで処理を延期します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing">
          <source>Adds an event handler for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /&gt;</ph> イベントのイベント ハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing">
          <source>This event occurs just before a transaction is completed.</source>
          <target state="translated">このイベントは、トランザクションが完了する前に発生します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing">
          <source>A transaction can sometimes change multiple values.</source>
          <target state="translated">トランザクションでは、複数の値を変更ことができる場合があります。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing">
          <source>The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</source>
          <target state="translated">トランザクション メソッドでは、パフォーマンスを回避し、ちらつきの反復処理を回避することで問題をする方法を提供します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing">
          <source>These methods defer processing until after the transaction has closed.</source>
          <target state="translated">これらのメソッドは、トランザクションが終了するまで処理を延期します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription">
          <source>Gets the description of the current transaction.</source>
          <target state="translated">現在のトランザクションの説明を取得します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription">
          <source>A description of the current transaction.</source>
          <target state="translated">現在のトランザクションの説明。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription">
          <source>The description is the last description specified with <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</ph>.</source>
          <target state="translated">説明で指定された最後の説明は、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened">
          <source>Adds an event handler for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /&gt;</ph> イベントのイベント ハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened">
          <source>This event occurs when a transaction has begun.</source>
          <target state="translated">このイベントは、トランザクションが開始されたときに発生します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened">
          <source>A transaction can sometimes change multiple values.</source>
          <target state="translated">トランザクションでは、複数の値を変更ことができる場合があります。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened">
          <source>The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</source>
          <target state="translated">トランザクション メソッドでは、パフォーマンスを回避し、ちらつきの反復処理を回避することで問題をする方法を提供します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened">
          <source>These methods defer processing until after the transaction has closed.</source>
          <target state="translated">これらのメソッドは、トランザクションが終了するまで処理を延期します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening">
          <source>Adds an event handler for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /&gt;</ph> イベントのイベント ハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening">
          <source>This event occurs when a transaction is about to begin.</source>
          <target state="translated">このイベントは、トランザクションが開始するときに発生します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening">
          <source>This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun.</source>
          <target state="translated">このメソッドは、他のハンドラーが、トランザクションが開始したことを通知する前に、操作を実行するクライアントはデザイナー ホストをできます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening">
          <source>The specified handler is called only when the first call to <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</ph> is made.</source>
          <target state="translated">のみと、最初の呼び出しは、指定されたハンドラーが呼び出されます<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</ph>が行われます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening">
          <source>Subsequent calls do not generate this event until all transaction objects have been disposed.</source>
          <target state="translated">後続の呼び出しでは、すべてのトランザクション オブジェクトが破棄されるまでは、このイベントは生成されません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>