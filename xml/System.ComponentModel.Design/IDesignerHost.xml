<Type Name="IDesignerHost" FullName="System.ComponentModel.Design.IDesignerHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0bfe543000d935f116f9a029bffb99cfee8feee5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36706719" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerHost : System.ComponentModel.Design.IServiceContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerHost implements class System.ComponentModel.Design.IServiceContainer, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerHost" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerHost&#xA;Implements IServiceContainer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerHost : System::ComponentModel::Design::IServiceContainer" />
  <TypeSignature Language="F#" Value="type IDesignerHost = interface&#xA;    interface IServiceContainer&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IServiceContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b9839-101">デザイナーのトランザクションおよびコンポーネントを管理するためのインターフェイスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b9839-101">Provides an interface for managing designer transactions and components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-102"><xref:System.ComponentModel.Design.IDesignerHost> コンポーネントの管理、およびデザイナー トランザクションのサポートを提供する .NET Framework のフォーム デザイナーのアーキテクチャで動作するインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="b9839-102"><xref:System.ComponentModel.Design.IDesignerHost> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.</span></span>  
  
 <span data-ttu-id="b9839-103">.NET Framework では、このインターフェイスの実装は提供されません。</span><span class="sxs-lookup"><span data-stu-id="b9839-103">The .NET Framework does not provide an implementation of this interface.</span></span> <span data-ttu-id="b9839-104">インターフェイスは、デザイナーをサポートする開発ツールによって実装されます。</span><span class="sxs-lookup"><span data-stu-id="b9839-104">The interface is implemented by development tools that support designers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9839-105">次のコード例を取得する方法を示しています、<xref:System.ComponentModel.Design.IDesignerHost>デザイナーまたは配置のコンポーネントからサービス インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="b9839-105">The following example code demonstrates how to obtain the <xref:System.ComponentModel.Design.IDesignerHost> service interface from a designer or sited component.</span></span>  
  
 [!code-cpp[DesignerHostAcquisition#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerHostAcquisition/CPP/source.cpp#1)]
 [!code-csharp[DesignerHostAcquisition#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerHostAcquisition/CS/source.cs#1)]
 [!code-vb[DesignerHostAcquisition#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerHostAcquisition/VB/source.vb#1)]  
  
 <span data-ttu-id="b9839-106">次のコード例では、使用方法を示します、<xref:System.ComponentModel.Design.IDesignerHost>プロジェクト コンポーネントの一覧へのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="b9839-106">The following example code demonstrates using the <xref:System.ComponentModel.Design.IDesignerHost> interface to list project components.</span></span>  
  
 [!code-cpp[IDesignerHostExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerHostExample/CPP/idesignerhostexample.cpp#1)]
 [!code-csharp[IDesignerHostExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerHostExample/CS/idesignerhostexample.cs#1)]
 [!code-vb[IDesignerHostExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerHostExample/VB/idesignerhostexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <span data-ttu-id="b9839-107">
        <para>実装を取得する<see cref="T:System.ComponentModel.Design.IDesignerHost" />、開発環境から呼び出す<see cref="M:System.ComponentModel.Component.GetService(System.Type)" />コンポーネントがデザイン モードでアクティブな間は、型を渡します<see cref="T:System.ComponentModel.Design.IDesignerHost" />要求に、<see cref="T:System.ComponentModel.Design.IDesignerHost" />サービス インターフェイスです。 <see cref="T:System.ComponentModel.Design.IDesignerHost" />デザイナーの状態に関連する次のメンバーを提供します。 -<see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" />プロパティは、デザイナーまたはドキュメントが読み込まれるかどうかを示します。 -<see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" />イベントは、デザイナーが表示される前にアクティブになったときに発生します。 -<see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />イベント デザイナーが非アクティブ化されたときに発生します。 -<see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" />イベントは、ドキュメントが読み込まれた後に発生します。 -<see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" />メソッドには、デザイナーがアクティブにします。 <see cref="T:System.ComponentModel.Design.IDesignerHost" />コンポーネントの管理に関連する次のメンバーを提供します。 -<see cref="P:System.ComponentModel.Design.IDesignerHost.Container" />プロパティは、デザイナー ホストのコンテナーを示します。 -<see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />プロパティはルート コンポーネントの基本クラスを示します。 -<see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />プロパティ ルート コンポーネントのクラスの名前を示します。 -<see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />メソッドは、指定した型のコンポーネントを作成します。 -<see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" />メソッドは、指定されたコンポーネントを破棄します。 -<see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />メソッドは、指定されたコンポーネントに関連付けられたデザイナーを取得します。 -<see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" />メソッドは、指定した名前の型のインスタンスを取得します。 <see cref="T:System.ComponentModel.Design.IDesignerHost" />トランザクションの管理に関連する次のメンバーを提供します。 -<see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" />プロパティは、トランザクションでは、デザイナーがあるかどうかを示します。 -<see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" />プロパティは現在のトランザクションの説明を示します。 -<see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />イベント トランザクションが完了したときに発生します。 -<see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />イベント トランザクションが完了するときに発生します。 -<see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />イベント トランザクションが開始されたときに発生します。 -<see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />イベント トランザクションが開始するときに発生します。 -<see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />メソッドを作成し、新しいトランザクションを返します。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="b9839-107">
          <para>To obtain an implementation of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> from a development environment, call <see cref="M:System.ComponentModel.Component.GetService(System.Type)" /> while your component is active in design mode, passing the type of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to request an <see cref="T:System.ComponentModel.Design.IDesignerHost" /> service interface.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to designer state:  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /> property indicates whether a designer or document is being loaded.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /> event occurs when a designer is activated before display.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /> event occurs when a designer is deactivated.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /> event occurs after a document is loaded.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method activates the designer.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing components:  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /> property indicates the container for the designer host.  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> property indicates the base class for the root component.  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /> property indicates the name of the class of the root component.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /> method creates the specified type of component.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /> method destroys the specified component.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /> method gets the designer associated with a specified component.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /> method gets an instance of the type with the specified name.  <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing transactions:  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /> property indicates whether the designer is in a transaction.  -   The <see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /> property indicates the current transaction description.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event occurs when a transaction has been completed.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event occurs when a transaction is about to be completed.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event occurs when a transaction has begun.  -   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event occurs when a transaction is about to begin.  -   The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /> method creates and returns a new transaction.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerOptionService" />
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="abstract member Activate : unit -&gt; unit" Usage="iDesignerHost.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9839-108">ホストしているデザイナーをアクティブにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-108">Activates the designer that this host is hosting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-109">ユーザー インターフェイスを表示する前に、デザイナーをアクティブにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9839-109">Designers should be activated before they display their user interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      <MemberSignature Language="VB.NET" Value="Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-110">デザイナーがアクティブになるときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-110">Occurs when this designer is activated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-111">表示されるまで、デザイナーがアクティブになります。</span><span class="sxs-lookup"><span data-stu-id="b9839-111">A designer is activated before it is displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer" Usage="System.ComponentModel.Design.IDesignerHost.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-112">デザイナー ホストのコンテナーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-112">Gets the container for this designer host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9839-113">ホストの <see cref="T:System.ComponentModel.IContainer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-113">The <see cref="T:System.ComponentModel.IContainer" /> for this host.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-114">これは、<xref:System.ComponentModel.IContainer>デザイン モードの現在のドキュメントのコンポーネントが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b9839-114">This <xref:System.ComponentModel.IContainer> contains the components of the current design mode document.</span></span> <span data-ttu-id="b9839-115">ボックスの一覧、を通じて現在のデザイン モードのドキュメントのコンポーネントのいずれかにアクセスしたりすることができます、<xref:System.ComponentModel.IContainer.Components%2A>このメンバー<xref:System.ComponentModel.IContainer>です。</span><span class="sxs-lookup"><span data-stu-id="b9839-115">You can list or access any of the components of the current design mode document through the <xref:System.ComponentModel.IContainer.Components%2A> member of this <xref:System.ComponentModel.IContainer>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateComponent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-116">指定した型のコンポーネントを作成し、そのコンポーネントをデザイン ドキュメントに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-116">Creates a component of the specified type and adds it to the design document.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type -&gt; System.ComponentModel.IComponent" Usage="iDesignerHost.CreateComponent componentClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentClass">
          <span data-ttu-id="b9839-117">作成するコンポーネントの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-117">The type of the component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9839-118">指定した型のコンポーネントを作成し、そのコンポーネントをデザイン ドキュメントに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-118">Creates a component of the specified type and adds it to the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9839-119">新規作成したコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-119">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-120">実装するオブジェクトに型を解決できないかどうか<xref:System.ComponentModel.IComponent>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b9839-120">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="b9839-121">このメソッドは、コンポーネントの名前を指定しません。</span><span class="sxs-lookup"><span data-stu-id="b9839-121">This method does not specify a name for the component.</span></span> <span data-ttu-id="b9839-122">メソッドは、コンポーネントを作成し、デザイナーのコンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="b9839-122">The method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type, name As String) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type * string -&gt; System.ComponentModel.IComponent" Usage="iDesignerHost.CreateComponent (componentClass, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="componentClass">
          <span data-ttu-id="b9839-123">作成するコンポーネントの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-123">The type of the component to create.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="b9839-124">コンポーネントの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-124">The name for the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9839-125">指定した型および名前のコンポーネントを作成し、そのコンポーネントをデザイン ドキュメントに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-125">Creates a component of the specified type and name, and adds it to the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9839-126">新規作成したコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-126">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-127">実装するオブジェクトに型を解決できないかどうか<xref:System.ComponentModel.IComponent>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b9839-127">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="b9839-128">このメソッドは、コンポーネントを作成し、デザイナーのコンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="b9839-128">This method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTransaction">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-129">一連のイベントをカプセル化することでパフォーマンスを向上させ、"元に戻す" 機能や "やり直し" 機能をサポートできるようにする <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-129">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction () As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction();" />
      <MemberSignature Language="F#" Value="abstract member CreateTransaction : unit -&gt; System.ComponentModel.Design.DesignerTransaction" Usage="iDesignerHost.CreateTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9839-130">一連のイベントをカプセル化することでパフォーマンスを向上させ、"元に戻す" 機能や "やり直し" 機能をサポートできるようにする <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-130">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9839-131">
            <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> の新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-131">A new instance of <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          </span>
          <span data-ttu-id="b9839-132">トランザクションの手順が完了したら、このオブジェクトに対して <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> を呼び出す必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-132">When you complete the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-133">このメソッドを作成、<xref:System.ComponentModel.Design.DesignerTransaction>一連の操作をカプセル化に使用できます。</span><span class="sxs-lookup"><span data-stu-id="b9839-133">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="b9839-134">デザイナーのトランザクションでは、パフォーマンスを向上させる、操作の処理中に複数の更新プログラムによるちらつきを軽減、およびほとんどの操作を元に戻すを有効にすることができます。</span><span class="sxs-lookup"><span data-stu-id="b9839-134">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="b9839-135">複数のコンポーネントに関連する時間のかかる操作では、多くのイベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="b9839-135">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="b9839-136">これらのイベントはちらつきを調整するなどの副作用が発生することができます。 またはパフォーマンスが低下します。</span><span class="sxs-lookup"><span data-stu-id="b9839-136">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="b9839-137">複数のコンポーネントを同時に操作または 1 つのコンポーネントの複数のプロパティを設定するとき、は、トランザクション内でこれらの変更を実行することによってパフォーマンスを向上できます。</span><span class="sxs-lookup"><span data-stu-id="b9839-137">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="b9839-138">一部の操作を処理、<xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>と<xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>イベントと、トランザクションが実行されていない場合にのみ、作業を実行します。</span><span class="sxs-lookup"><span data-stu-id="b9839-138">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="b9839-139">トランザクションの使用に関する詳細については、ドキュメントを参照して<xref:System.ComponentModel.Design.DesignerTransaction>です。</span><span class="sxs-lookup"><span data-stu-id="b9839-139">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction (description As String) As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction(System::String ^ description);" />
      <MemberSignature Language="F#" Value="abstract member CreateTransaction : string -&gt; System.ComponentModel.Design.DesignerTransaction" Usage="iDesignerHost.CreateTransaction description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="b9839-140">新規作成したトランザクションのタイトルまたは説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-140">A title or description for the newly created transaction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9839-141">指定したトランザクションの説明を使用して、一連のイベントをカプセル化することでパフォーマンスを向上させ、"元に戻す" 機能や "やり直し" 機能をサポートできるようにする <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-141">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9839-142">新しい <see cref="T:System.ComponentModel.Design.DesignerTransaction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-142">A new <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          </span>
          <span data-ttu-id="b9839-143">トランザクションの手順が完了したら、このオブジェクトに対して <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> を呼び出す必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-143">When you have completed the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-144">このメソッドを作成、<xref:System.ComponentModel.Design.DesignerTransaction>一連の操作をカプセル化に使用できます。</span><span class="sxs-lookup"><span data-stu-id="b9839-144">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="b9839-145">デザイナーのトランザクションでは、パフォーマンスを向上させる、操作の処理中に複数の更新プログラムによるちらつきを軽減、およびほとんどの操作を元に戻すを有効にすることができます。</span><span class="sxs-lookup"><span data-stu-id="b9839-145">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="b9839-146">複数のコンポーネントに関連する時間のかかる操作では、多くのイベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="b9839-146">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="b9839-147">これらのイベントはちらつきを調整するなどの副作用が発生することができます。 またはパフォーマンスが低下します。</span><span class="sxs-lookup"><span data-stu-id="b9839-147">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="b9839-148">複数のコンポーネントを同時に操作または 1 つのコンポーネントの複数のプロパティを設定するとき、は、トランザクション内でこれらの変更を実行することによってパフォーマンスを向上できます。</span><span class="sxs-lookup"><span data-stu-id="b9839-148">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="b9839-149">一部の操作を処理、<xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>と<xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>イベントと、トランザクションが実行されていない場合にのみ、作業を実行します。</span><span class="sxs-lookup"><span data-stu-id="b9839-149">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="b9839-150">トランザクションの使用に関する詳細については、ドキュメントを参照して<xref:System.ComponentModel.Design.DesignerTransaction>です。</span><span class="sxs-lookup"><span data-stu-id="b9839-150">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-151">デザイナーがアクティブでなくなるときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-151">Occurs when this designer is deactivated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-152">デザイナーが表示されなくなりますが、直前には、無効になります。</span><span class="sxs-lookup"><span data-stu-id="b9839-152">A designer is deactivated just before it is no longer displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      </Docs>
    </Member>
    <Member MemberName="DestroyComponent">
      <MemberSignature Language="C#" Value="public void DestroyComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DestroyComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DestroyComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member DestroyComponent : System.ComponentModel.IComponent -&gt; unit" Usage="iDesignerHost.DestroyComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="b9839-153">破棄するコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-153">The component to destroy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9839-154">指定したコンポーネントを破棄し、デザイナー コンテナーからそのコンポーネントを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-154">Destroys the specified component and removes it from the designer container.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="GetDesigner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner GetDesigner(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDesigner (component As IComponent) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::IDesigner ^ GetDesigner(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetDesigner : System.ComponentModel.IComponent -&gt; System.ComponentModel.Design.IDesigner" Usage="iDesignerHost.GetDesigner component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="b9839-155">デザイナーを取得する対象の <see cref="T:System.ComponentModel.IComponent" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-155">The <see cref="T:System.ComponentModel.IComponent" /> to retrieve the designer for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9839-156">指定したコンポーネントを格納しているデザイナー インスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-156">Gets the designer instance that contains the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9839-157">
            <see cref="T:System.ComponentModel.Design.IDesigner" />。指定したコンポーネントのデザイナーがない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-157">An <see cref="T:System.ComponentModel.Design.IDesigner" />, or <see langword="null" /> if there is no designer for the specified component.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; Type" Usage="iDesignerHost.GetType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="b9839-158">読み込む型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-158">The name of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9839-159">指定した完全限定型名のインスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-159">Gets an instance of the specified, fully qualified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9839-160">指定した型名の型オブジェクト。型が見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-160">The type object for the specified type name, or <see langword="null" /> if the type cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InTransaction">
      <MemberSignature Language="C#" Value="public bool InTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTransaction" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.InTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InTransaction : bool" Usage="System.ComponentModel.Design.IDesignerHost.InTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-161">デザイナー ホストが現在トランザクションを実行中かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-161">Gets a value indicating whether the designer host is currently in a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9839-162">トランザクションを実行中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-162">
              <see langword="true" /> if a transaction is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="event EventHandler LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoadComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" />
      <MemberSignature Language="VB.NET" Value="Event LoadComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoadComplete;" />
      <MemberSignature Language="F#" Value="member this.LoadComplete : EventHandler " Usage="member this.LoadComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-163">デザイナーがドキュメントの読み込みを完了したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-163">Occurs when this designer completes loading its document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-164">このイベントは、デザイナーでは、ドキュメントの読み込みが完了した後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b9839-164">This event occurs after a designer completes loading its document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Loading { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Loading : bool" Usage="System.ComponentModel.Design.IDesignerHost.Loading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-165">デザイナー ホストが現在ドキュメントを読み込み中かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-165">Gets a value indicating whether the designer host is currently loading the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9839-166">デザイナー ホストがドキュメントを読み込み中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-166">
              <see langword="true" /> if the designer host is currently loading the document; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RootComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RootComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ RootComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootComponent : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.IDesignerHost.RootComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-167">現在のデザインのルート コンポーネントとして使用される、基本クラスのインスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-167">Gets the instance of the base class used as the root component for the current design.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9839-168">ルート コンポーネント クラスのインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-168">The instance of the root component class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-169">この基本クラスは、通常、<xref:System.Windows.Forms.Form>または<xref:System.Windows.Forms.UserControl>インスタンスです。 ユーザーの派生クラスを拡張するクラスを定義します。</span><span class="sxs-lookup"><span data-stu-id="b9839-169">This base class is typically a <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.UserControl> instance; it defines the class for which the user's derived class extends.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponentClassName">
      <MemberSignature Language="C#" Value="public string RootComponentClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootComponentClassName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponentClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootComponentClassName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootComponentClassName : string" Usage="System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-170">デザイン対象のクラスの完全限定名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-170">Gets the fully qualified name of the class being designed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9839-171">基本コンポーネント クラスの完全限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-171">The fully qualified name of the base component class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionClosed">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosed As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosed;" />
      <MemberSignature Language="F#" Value="member this.TransactionClosed : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " Usage="member this.TransactionClosed : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-172">
            <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> イベントのイベント ハンドラーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-172">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-173">このイベントは、トランザクションが閉じられた後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b9839-173">This event occurs after a transaction is closed.</span></span>  
  
 <span data-ttu-id="b9839-174">トランザクションでは、複数の値を変更ことができる場合があります。</span><span class="sxs-lookup"><span data-stu-id="b9839-174">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="b9839-175">トランザクション メソッドでは、パフォーマンスを回避し、ちらつきの反復処理を回避することで問題をする方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="b9839-175">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="b9839-176">これらのメソッドは、トランザクションが終了するまで処理を延期します。</span><span class="sxs-lookup"><span data-stu-id="b9839-176">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionClosing">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosing As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosing;" />
      <MemberSignature Language="F#" Value="member this.TransactionClosing : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " Usage="member this.TransactionClosing : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-177">
            <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> イベントのイベント ハンドラーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-177">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-178">このイベントは、トランザクションが完了する前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b9839-178">This event occurs just before a transaction is completed.</span></span>  
  
 <span data-ttu-id="b9839-179">トランザクションでは、複数の値を変更ことができる場合があります。</span><span class="sxs-lookup"><span data-stu-id="b9839-179">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="b9839-180">トランザクション メソッドでは、パフォーマンスを回避し、ちらつきの反復処理を回避することで問題をする方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="b9839-180">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="b9839-181">これらのメソッドは、トランザクションが終了するまで処理を延期します。</span><span class="sxs-lookup"><span data-stu-id="b9839-181">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionDescription">
      <MemberSignature Language="C#" Value="public string TransactionDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionDescription" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionDescription : string" Usage="System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-182">現在のトランザクションの説明を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-182">Gets the description of the current transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9839-183">現在のトランザクションの説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-183">A description of the current transaction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-184">説明で指定された最後の説明は、<xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>です。</span><span class="sxs-lookup"><span data-stu-id="b9839-184">The description is the last description specified with <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpened">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpened" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpened;" />
      <MemberSignature Language="F#" Value="member this.TransactionOpened : EventHandler " Usage="member this.TransactionOpened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-185">
            <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> イベントのイベント ハンドラーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-185">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-186">このイベントは、トランザクションが開始されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b9839-186">This event occurs when a transaction has begun.</span></span>  
  
 <span data-ttu-id="b9839-187">トランザクションでは、複数の値を変更ことができる場合があります。</span><span class="sxs-lookup"><span data-stu-id="b9839-187">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="b9839-188">トランザクション メソッドでは、パフォーマンスを回避し、ちらつきの反復処理を回避することで問題をする方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="b9839-188">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="b9839-189">これらのメソッドは、トランザクションが終了するまで処理を延期します。</span><span class="sxs-lookup"><span data-stu-id="b9839-189">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpening">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpening" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpening;" />
      <MemberSignature Language="F#" Value="member this.TransactionOpening : EventHandler " Usage="member this.TransactionOpening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9839-190">
            <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> イベントのイベント ハンドラーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9839-190">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9839-191">このイベントは、トランザクションが開始するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b9839-191">This event occurs when a transaction is about to begin.</span></span>  
  
 <span data-ttu-id="b9839-192">このメソッドは、他のハンドラーが、トランザクションが開始したことを通知する前に、操作を実行するクライアントはデザイナー ホストをできます。</span><span class="sxs-lookup"><span data-stu-id="b9839-192">This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun.</span></span> <span data-ttu-id="b9839-193">のみと、最初の呼び出しは、指定されたハンドラーが呼び出されます<xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>が行われます。</span><span class="sxs-lookup"><span data-stu-id="b9839-193">The specified handler is called only when the first call to <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> is made.</span></span> <span data-ttu-id="b9839-194">後続の呼び出しでは、すべてのトランザクション オブジェクトが破棄されるまでは、このイベントは生成されません。</span><span class="sxs-lookup"><span data-stu-id="b9839-194">Subsequent calls do not generate this event until all transaction objects have been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
  </Members>
</Type>