<Type Name="UndoEngine" FullName="System.ComponentModel.Design.UndoEngine">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e1dddf59757923d82b4d9c569dca1882564e3602" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65001287" /></Metadata><TypeSignature Language="C#" Value="public abstract class UndoEngine : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UndoEngine extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.UndoEngine" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UndoEngine&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UndoEngine abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type UndoEngine = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2a52a-101">デザイン時に、汎用の元に戻す/やり直し機能を指定します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-101">Specifies generic undo/redo functionality at design time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a52a-102"><xref:System.ComponentModel.Design.UndoEngine>抽象クラスは、デザイン時に元に戻す機能の既定の実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-102">The <xref:System.ComponentModel.Design.UndoEngine> abstract class provides a default implementation of undo functionality at design time.</span></span> <span data-ttu-id="2a52a-103">取り消し単位では、取り消し可能な作業の 1 つの単位を表します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-103">An undo unit represents a single unit of undoable work.</span></span> <span data-ttu-id="2a52a-104">このユニットがスタックに追加され、ユーザーは、各アクションを元に戻すスタックをウォークすることができます。</span><span class="sxs-lookup"><span data-stu-id="2a52a-104">This unit is added to a stack and the user can then walk the stack to undo each action.</span></span> <span data-ttu-id="2a52a-105">元に戻す単位通常は設計に切り替えるには、つまり、その呼び出し元に戻すが 2 回開始状態にアプリケーションを返します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-105">Undo units typically are designed to toggle, which means that calling undo twice returns the application to its starting state.</span></span>  
  
 <span data-ttu-id="2a52a-106"><xref:System.ComponentModel.Design.UndoEngine>クラスには、デザイナー内で実行されているオブジェクトの次の特性を活用します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-106">The <xref:System.ComponentModel.Design.UndoEngine> class takes advantage of the following characteristics of objects running within the designer:</span></span>  
  
-   <span data-ttu-id="2a52a-107">すべての関連オブジェクトは、デザイナー ローダーで何らかの形式に保持できます。</span><span class="sxs-lookup"><span data-stu-id="2a52a-107">All interesting objects can be persisted to some format by the designer loader.</span></span>  
  
-   <span data-ttu-id="2a52a-108">すべてのオブジェクトは、プロパティが変更されたときに、プロパティ変更通知を発生します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-108">All objects raise property-change notifications when a property is changed.</span></span>  
  
-   <span data-ttu-id="2a52a-109"><xref:System.ComponentModel.Design.IDesignerHost> トランザクションは、複数の小さいアクションにまたがる元に戻す操作を作成するために使用できますのアイデアを提供します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-109"><xref:System.ComponentModel.Design.IDesignerHost> offers the idea of transactions, which can be used to fabricate an undo action that spans multiple smaller actions.</span></span>  
  
 <span data-ttu-id="2a52a-110">これらの機能と<xref:System.ComponentModel.Design.UndoEngine>自動的に必要な任意の undo 単位を作成することができます。</span><span class="sxs-lookup"><span data-stu-id="2a52a-110">With these features, <xref:System.ComponentModel.Design.UndoEngine> can fabricate any undo units it needs automatically.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2a52a-111">プロパティ値は直接変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="2a52a-111">Do not change property values directly.</span></span> <span data-ttu-id="2a52a-112"><xref:System.ComponentModel.Design.UndoEngine>クラスでは、適切なを使用する必要があります<xref:System.ComponentModel.TypeDescriptor>プロパティの値を変更します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-112">The <xref:System.ComponentModel.Design.UndoEngine> class requires you to use the appropriate <xref:System.ComponentModel.TypeDescriptor> to change property values.</span></span>  
  
 <span data-ttu-id="2a52a-113"><xref:System.ComponentModel.Design.UndoEngine> 変更通知を作成するモニターは、単位を元に戻すし、シリアル化されたオブジェクトの状態のユニット自体で構成されます。</span><span class="sxs-lookup"><span data-stu-id="2a52a-113"><xref:System.ComponentModel.Design.UndoEngine> monitors for change notifications to create undo units, and the units themselves consist of serialized object states.</span></span> <span data-ttu-id="2a52a-114">次の表は、サービスに必要なときに<xref:System.ComponentModel.Design.UndoEngine>が作成されます。</span><span class="sxs-lookup"><span data-stu-id="2a52a-114">The following table shows the services that must be available when <xref:System.ComponentModel.Design.UndoEngine> is created.</span></span>  
  
|<span data-ttu-id="2a52a-115">サービス</span><span class="sxs-lookup"><span data-stu-id="2a52a-115">Service</span></span>|<span data-ttu-id="2a52a-116">説明</span><span class="sxs-lookup"><span data-stu-id="2a52a-116">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|<span data-ttu-id="2a52a-117">前に、と変更を加えた後は、コンポーネントのプロパティとオブジェクトの値を保存します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-117">Saves property and object values for a component before and after a change is made.</span></span>|  
|<xref:System.ComponentModel.Design.IComponentChangeService>|<span data-ttu-id="2a52a-118">コンポーネントに加えられた変更のアンドゥ エンジンに通知します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-118">Notifies the undo engine of changes made to components.</span></span>|  
|<xref:System.ComponentModel.Design.IDesignerHost>|<span data-ttu-id="2a52a-119">トランザクションを追跡するために使用します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-119">Used to track transactions.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="2a52a-120"><xref:System.ComponentModel.Design.UndoEngine>クラスが必要です<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>と<xref:System.ComponentModel.Design.IComponentChangeService>デザイン時にのみ使用可能なは。</span><span class="sxs-lookup"><span data-stu-id="2a52a-120">Because the <xref:System.ComponentModel.Design.UndoEngine> class requires <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> and <xref:System.ComponentModel.Design.IComponentChangeService>, it is available only at design time.</span></span>  
  
 <span data-ttu-id="2a52a-121">アンドゥ エンジンでは、トランザクションを追跡し、トランザクションを含む 1 つの undo 単位を作成します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-121">The undo engine tracks transactions and creates a single undo unit that encompasses a transaction.</span></span> <span data-ttu-id="2a52a-122">その結果、元に戻すエンジンでは、取り消し可能なアクションの期間にわたってコントロールがあります。</span><span class="sxs-lookup"><span data-stu-id="2a52a-122">As a result, the undo engine has control over the duration of an undoable action.</span></span> <span data-ttu-id="2a52a-123">また、トランザクションの名前を指定できます、ため、取り消し可能なアクションは、現在のトランザクションからの名前を継承します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-123">Also, because transactions can be named, undoable actions inherit their names from the current transaction.</span></span> <span data-ttu-id="2a52a-124">使用可能なトランザクションがないと、変更が報告された、元に戻すエンジンは、元に戻す名の変更 (たとえば、「プロパティの変更 'Text'」) の種類に基づいて作成します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-124">If no transaction is available and a change is reported, the undo engine creates an undo name based on the type of change (for example, "Change property 'Text'").</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UndoEngine (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UndoEngine(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.UndoEngine : IServiceProvider -&gt; System.ComponentModel.Design.UndoEngine" Usage="new System.ComponentModel.Design.UndoEngine provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2a52a-125">親サービス プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="2a52a-125">A parenting service provider.</span></span></param>
        <summary><span data-ttu-id="2a52a-126"><see cref="T:System.ComponentModel.Design.UndoEngine" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-126">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.UndoEngine" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a52a-127"><xref:System.ComponentModel.Design.UndoEngine>からいくつかのサービスが必要です、`provider`パラメーターは便利です。</span><span class="sxs-lookup"><span data-stu-id="2a52a-127">The <xref:System.ComponentModel.Design.UndoEngine> requires several services from the `provider` parameter to be useful.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2a52a-128"><paramref name="provider" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2a52a-128"><paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2a52a-129">必要なサービスが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="2a52a-129">A required service cannot be found.</span></span> <span data-ttu-id="2a52a-130">参照してください<see cref="T:System.ComponentModel.Design.UndoEngine" />必要なサービスです。</span><span class="sxs-lookup"><span data-stu-id="2a52a-130">See <see cref="T:System.ComponentModel.Design.UndoEngine" /> for required services.</span></span> <span data-ttu-id="2a52a-131">このサービスを削除した場合は、置換を指定することを確認します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-131">If you have removed this service, ensure that you provide a replacement.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="AddUndoUnit">
      <MemberSignature Language="C#" Value="protected abstract void AddUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddUndoUnit(class System.ComponentModel.Design.UndoEngine/UndoUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub AddUndoUnit (unit As UndoEngine.UndoUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void AddUndoUnit(System::ComponentModel::Design::UndoEngine::UndoUnit ^ unit);" />
      <MemberSignature Language="F#" Value="abstract member AddUndoUnit : System.ComponentModel.Design.UndoEngine.UndoUnit -&gt; unit" Usage="undoEngine.AddUndoUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.ComponentModel.Design.UndoEngine+UndoUnit" />
      </Parameters>
      <Docs>
        <param name="unit"><span data-ttu-id="2a52a-132">追加する元に戻す単位</span><span class="sxs-lookup"><span data-stu-id="2a52a-132">The undo unit to add</span></span></param>
        <summary><span data-ttu-id="2a52a-133">追加、<see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />元に戻すスタックにします。</span><span class="sxs-lookup"><span data-stu-id="2a52a-133">Adds an <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> to the undo stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a52a-134">作成、`unit`パラメーターを呼び出すことによって、<xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2a52a-134">Create the `unit` parameter by calling the <xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="CreateUndoUnit">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.UndoEngine.UndoUnit CreateUndoUnit (string name, bool primary);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.Design.UndoEngine/UndoUnit CreateUndoUnit(string name, bool primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateUndoUnit (name As String, primary As Boolean) As UndoEngine.UndoUnit" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::Design::UndoEngine::UndoUnit ^ CreateUndoUnit(System::String ^ name, bool primary);" />
      <MemberSignature Language="F#" Value="abstract member CreateUndoUnit : string * bool -&gt; System.ComponentModel.Design.UndoEngine.UndoUnit&#xA;override this.CreateUndoUnit : string * bool -&gt; System.ComponentModel.Design.UndoEngine.UndoUnit" Usage="undoEngine.CreateUndoUnit (name, primary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.UndoEngine+UndoUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="primary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2a52a-135">作成する単位の名前。</span><span class="sxs-lookup"><span data-stu-id="2a52a-135">The name of the unit to create.</span></span></param>
        <param name="primary"><span data-ttu-id="2a52a-136"><see langword="true" /> 一連の入れ子になったユニットです。 最初に作成するには<see langword="false" />後続の入れ子になったユニットを作成します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-136"><see langword="true" /> to create the first of a series of nested units; <see langword="false" /> to create subsequent nested units.</span></span></param>
        <summary><span data-ttu-id="2a52a-137">新しい <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-137">Creates a new <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span></span></summary>
        <returns><span data-ttu-id="2a52a-138">新しい<see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />指定した名前。</span><span class="sxs-lookup"><span data-stu-id="2a52a-138">A new <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> with a specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a52a-139">既定の実装、<xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A>メソッドは単に新しい返します<xref:System.ComponentModel.Design.UndoEngine.UndoUnit>します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-139">The default implementation of the <xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A> method simply returns a new <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.</span></span>  
  
 <span data-ttu-id="2a52a-140">既定では、<xref:System.ComponentModel.Design.UndoEngine>で何も行われません、`primary`パラメーターが COM に関係するなど、元に戻すの実装によって`Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit`デザイン パターン、主要な単位とその子の違いを識別する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2a52a-140">By default, <xref:System.ComponentModel.Design.UndoEngine> does nothing with the `primary` parameter, but some implementations of undo, such as those involving the COM `Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit` design pattern, may need to identify the difference between a primary unit and its children.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardUndoUnit">
      <MemberSignature Language="C#" Value="protected virtual void DiscardUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DiscardUndoUnit(class System.ComponentModel.Design.UndoEngine/UndoUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DiscardUndoUnit (unit As UndoEngine.UndoUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DiscardUndoUnit(System::ComponentModel::Design::UndoEngine::UndoUnit ^ unit);" />
      <MemberSignature Language="F#" Value="abstract member DiscardUndoUnit : System.ComponentModel.Design.UndoEngine.UndoUnit -&gt; unit&#xA;override this.DiscardUndoUnit : System.ComponentModel.Design.UndoEngine.UndoUnit -&gt; unit" Usage="undoEngine.DiscardUndoUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.ComponentModel.Design.UndoEngine+UndoUnit" />
      </Parameters>
      <Docs>
        <param name="unit"><span data-ttu-id="2a52a-141">破棄する単位。</span><span class="sxs-lookup"><span data-stu-id="2a52a-141">The unit to discard.</span></span></param>
        <summary><span data-ttu-id="2a52a-142">破棄、<see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-142">Discards an <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a52a-143">前に、<xref:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit%2A>メソッドが呼び出されると、元に戻す単位が閉じられ、元に戻します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-143">Before the <xref:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit%2A> method is called, the undo unit is closed and then undone.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a52a-144"><see cref="T:System.ComponentModel.Design.UndoEngine" /> で使用したリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-144">Releases the resources used by the <see cref="T:System.ComponentModel.Design.UndoEngine" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="undoEngine.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a52a-145"><see cref="T:System.ComponentModel.Design.UndoEngine" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-145">Releases all resources used by the <see cref="T:System.ComponentModel.Design.UndoEngine" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="undoEngine.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="2a52a-146">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2a52a-146"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="2a52a-147"><see cref="T:System.ComponentModel.Design.UndoEngine" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-147">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.UndoEngine" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.ComponentModel.Design.UndoEngine.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a52a-148">有効または無効に、<see cref="T:System.ComponentModel.Design.UndoEngine" />します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-148">Enables or disables the <see cref="T:System.ComponentModel.Design.UndoEngine" />.</span></span></summary>
        <value><span data-ttu-id="2a52a-149"><see cref="T:System.ComponentModel.Design.UndoEngine" /> が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2a52a-149"><see langword="true" /> if the <see cref="T:System.ComponentModel.Design.UndoEngine" /> is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredService">
      <MemberSignature Language="C#" Value="protected object GetRequiredService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetRequiredService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetRequiredService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetRequiredService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetRequiredService : Type -&gt; obj" Usage="undoEngine.GetRequiredService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="2a52a-150">取得するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="2a52a-150">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="2a52a-151">要求したサービスを取得します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-151">Gets the requested service.</span></span></summary>
        <returns><span data-ttu-id="2a52a-152">要求したサービス場合が見つかりました。</span><span class="sxs-lookup"><span data-stu-id="2a52a-152">The requested service, if found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2a52a-153"><paramref name="serviceType" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2a52a-153"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2a52a-154"><paramref name="serviceType" /> 必要ですが、見つかりません。</span><span class="sxs-lookup"><span data-stu-id="2a52a-154"><paramref name="serviceType" /> is required but cannot be found.</span></span> <span data-ttu-id="2a52a-155">このサービスを削除した場合は、置換を指定することを確認します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-155">If you have removed this service, ensure that you provide a replacement.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="undoEngine.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="2a52a-156">取得するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="2a52a-156">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="2a52a-157">要求したサービスを取得します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-157">Gets the requested service.</span></span></summary>
        <returns><span data-ttu-id="2a52a-158">要求したサービスまたは<see langword="null" />要求したサービスが見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="2a52a-158">The requested service, or <see langword="null" /> if the requested service is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2a52a-159"><paramref name="serviceType" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2a52a-159"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnUndoing">
      <MemberSignature Language="C#" Value="protected virtual void OnUndoing (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUndoing(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUndoing (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUndoing(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUndoing : EventArgs -&gt; unit&#xA;override this.OnUndoing : EventArgs -&gt; unit" Usage="undoEngine.OnUndoing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2a52a-160">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="2a52a-160">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2a52a-161"><see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="2a52a-161">Raises the <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUndone">
      <MemberSignature Language="C#" Value="protected virtual void OnUndone (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUndone(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUndone (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUndone(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUndone : EventArgs -&gt; unit&#xA;override this.OnUndone : EventArgs -&gt; unit" Usage="undoEngine.OnUndone e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2a52a-162">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="2a52a-162">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2a52a-163"><see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="2a52a-163">Raises the <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undoing">
      <MemberSignature Language="C#" Value="public event EventHandler Undoing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Undoing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.UndoEngine.Undoing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Undoing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Undoing;" />
      <MemberSignature Language="F#" Value="member this.Undoing : EventHandler " Usage="member this.Undoing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a52a-164">元に戻す操作が実行される直前に発生します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-164">Occurs immediately before an undo action is performed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoInProgress">
      <MemberSignature Language="C#" Value="public bool UndoInProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UndoInProgress" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoInProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UndoInProgress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UndoInProgress { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UndoInProgress : bool" Usage="System.ComponentModel.Design.UndoEngine.UndoInProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a52a-165">かどうか、元に戻す操作が進行状況を示します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-165">Indicates if an undo action is in progress.</span></span></summary>
        <value><span data-ttu-id="2a52a-166"><see langword="true" /> 元に戻す操作は進行中です。 場合、それ以外の場合、<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-166"><see langword="true" /> if an undo action is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undone">
      <MemberSignature Language="C#" Value="public event EventHandler Undone;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Undone" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.UndoEngine.Undone" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Undone As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Undone;" />
      <MemberSignature Language="F#" Value="member this.Undone : EventHandler " Usage="member this.Undone : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a52a-167">元に戻す操作が実行された直後後に発生します。</span><span class="sxs-lookup"><span data-stu-id="2a52a-167">Occurs immediately after an undo action is performed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a52a-168"><xref:System.ComponentModel.Design.UndoEngine.Undone>常にイベントは、例外がスローされた場合でもです。</span><span class="sxs-lookup"><span data-stu-id="2a52a-168">The <xref:System.ComponentModel.Design.UndoEngine.Undone> event is always raised, even if an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>