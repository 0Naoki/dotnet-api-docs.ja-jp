<Type Name="ViewTechnology" FullName="System.ComponentModel.Design.ViewTechnology">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="459f390c97929264d6e88e0b246805ff33a0d5b3" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32036605" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ViewTechnology" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ViewTechnology extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ViewTechnology" />
  <TypeSignature Language="VB.NET" Value="Public Enum ViewTechnology" />
  <TypeSignature Language="C++ CLI" Value="public enum class ViewTechnology" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="34677-101">デザイナー ホストがサポートする一連の技術の識別子を定義します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="34677-101">Defines identifiers for a set of technologies that designer hosts support.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34677-102">アダプター モデルの表示が置き換えられますする機能を追加、<xref:System.ComponentModel.Design.ViewTechnology>機能です。 ただし、、<xref:System.ComponentModel.Design.ViewTechnology>を選択した場合、旧バージョンとの互換性と将来の使用の両方の機能が保持されます。</span><span class="sxs-lookup"><span data-stu-id="34677-102">The view adapter model replaces and adds functionality to the <xref:System.ComponentModel.Design.ViewTechnology> feature; however, the <xref:System.ComponentModel.Design.ViewTechnology> feature is retained for both backward compatibility and future use, if you choose.</span></span> <span data-ttu-id="34677-103">詳細については、「.NET 図形ライブラリ:: A サンプル デザイナー」で Windows フォーム サポート技術情報を参照してください。http://windowsforms.net/articles/shapedesigner.aspxです。</span><span class="sxs-lookup"><span data-stu-id="34677-103">For more information, see ".NET Shape Library: A Sample Designer" in the Windows Forms Knowledge Base at http://windowsforms.net/articles/shapedesigner.aspx.</span></span>  
  
 <span data-ttu-id="34677-104"><xref:System.ComponentModel.Design.ViewTechnology> デザイナーでホストされるドキュメントの表示を制御するために使用するモードを示す可能性のある識別子を定義します。</span><span class="sxs-lookup"><span data-stu-id="34677-104"><xref:System.ComponentModel.Design.ViewTechnology> defines identifiers that can indicate the mode to use for controlling the display of a designer-hosted document.</span></span>  
  
 <span data-ttu-id="34677-105">既定値は、デザイナー ホスト環境でのみ使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="34677-105">You should only use the Default value in your designer hosting environment.</span></span> <span data-ttu-id="34677-106">以前のバージョンので、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]、<xref:System.ComponentModel.Design.ViewTechnology.Default>列挙型がルート デザイナーでサポートされている UI モデルの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="34677-106">In previous versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the <xref:System.ComponentModel.Design.ViewTechnology.Default> enumeration specified the type of UI model supported by a root designer.</span></span> <span data-ttu-id="34677-107">代わりに使用する必要があるこのモデルを拡張できないため、*ビュー アダプター*モデル。</span><span class="sxs-lookup"><span data-stu-id="34677-107">Because this model is not extensible, you should instead use a *view adapter* model.</span></span> <span data-ttu-id="34677-108">ビューのアダプターは、1 つの型を別のオブジェクトを対応する型です。</span><span class="sxs-lookup"><span data-stu-id="34677-108">A view adapter is a type that adapts an object of one type to another.</span></span>  
  
 <span data-ttu-id="34677-109">たとえば、HTML デザイナーを返す可能性があります、`DemoDOM`ツリーのビューだけです。</span><span class="sxs-lookup"><span data-stu-id="34677-109">For example, an HTML designer might return a `DemoDOM` tree as its view.</span></span> <span data-ttu-id="34677-110">HTML デザイナーでは、既定のビュー テクノロジを返します。</span><span class="sxs-lookup"><span data-stu-id="34677-110">The HTML designer returns a view technology of Default.</span></span> <span data-ttu-id="34677-111">Windows フォームの環境をホストには、1 つまたは複数アダプター使用できるビュー クラスがあります。</span><span class="sxs-lookup"><span data-stu-id="34677-111">A Windows Forms hosting environment would have one or more view adapter classes available.</span></span> <span data-ttu-id="34677-112">このような 1 つのクラスに変換できなかった場合、`DemoDOM`ホスト アプリケーションを Windows フォーム コントロールでは、この種類のデザイナーをサポートできます。</span><span class="sxs-lookup"><span data-stu-id="34677-112">If one such class could convert the `DemoDOM` into a Windows Forms control, the hosting application can support this type of designer.</span></span> <span data-ttu-id="34677-113">かどうかアダプター型を処理できるなし、データ デザイナーから返された<xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>メソッド、デザイナーの読み込みが失敗し、エラーで、ユーザーが表示されます。</span><span class="sxs-lookup"><span data-stu-id="34677-113">If no adapter can handle the data type returned from the designer’s <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> method, the load of the designer will fail, and the user will be presented with an error.</span></span>  
  
 <span data-ttu-id="34677-114">Visual Studio では、UI 技術に合わせて調整できますので、ビューのアダプターを提供するための拡張可能なスキームがします。</span><span class="sxs-lookup"><span data-stu-id="34677-114">Visual Studio has an extensible scheme for providing view adapters, so it can adapt to any UI technology.</span></span> <span data-ttu-id="34677-115">サードパーティのテクノロジのプロバイダーは、適切なビュー アダプターも提供し、そのオブジェクト モデルはすぐに使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="34677-115">Third-party technology providers can also offer an appropriate view adapter, and their object models are immediately consumable.</span></span>  
  
 <span data-ttu-id="34677-116">例については使用がアダプターを表示する、デザイナーが表示".NET 図形ライブラリ:: A サンプル"で Windows フォーム サポート技術情報のhttp://windowsforms.net/articles/shapedesigner.aspxします。</span><span class="sxs-lookup"><span data-stu-id="34677-116">For an example that uses view adapters, see ".NET Shape Library: A Sample Designer" in the Windows Forms Knowledge Base at http://windowsforms.net/articles/shapedesigner.aspx.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34677-117">次のコード例を使用する方法を示しています、<xref:System.ComponentModel.Design.ViewTechnology.Default>デザイナーでクラスです。</span><span class="sxs-lookup"><span data-stu-id="34677-117">The following code example demonstrates how to use the <xref:System.ComponentModel.Design.ViewTechnology.Default> class in a designer.</span></span> <span data-ttu-id="34677-118">このコード例に示されている例の一部である、<xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="34677-118">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> interface.</span></span>  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Default = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="34677-119">既定のビュー技術サポートを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34677-119">Specifies the default view technology support.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34677-120">ルート デザイナーは、オブジェクトの任意の型を返す可能性がありますが、オブジェクトは、ホストの技術のアダプターとの互換性である必要があります。</span><span class="sxs-lookup"><span data-stu-id="34677-120">The root designer may return any type of object, but the object must be compatible with an adapter for the technology of the host.</span></span> <span data-ttu-id="34677-121">Visual Studio などのホスト環境では、新しいビュー技術アダプターを接続する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="34677-121">Hosting environments such as Visual Studio provide a way to plug in new view technology adapters.</span></span> <span data-ttu-id="34677-122">Windows フォーム デザイナーの既定のビュー オブジェクトは、<xref:System.Windows.Forms.Control?displayProperty=nameWithType>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="34677-122">The default view object for the Windows Forms designer is a <xref:System.Windows.Forms.Control?displayProperty=nameWithType> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34677-123">次のコード例を使用する方法を示しています、<xref:System.ComponentModel.Design.ViewTechnology>デザイナーでクラスです。</span><span class="sxs-lookup"><span data-stu-id="34677-123">The following code example demonstrates how to use the <xref:System.ComponentModel.Design.ViewTechnology> class in a designer.</span></span> <span data-ttu-id="34677-124">このコード例に示されている例の一部である、<xref:System.ComponentModel.Design.IRootDesigner>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="34677-124">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.</span></span>  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Passthrough">
      <MemberSignature Language="C#" Value="Passthrough" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Passthrough = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberSignature Language="VB.NET" Value="Passthrough" />
      <MemberSignature Language="C++ CLI" Value="Passthrough" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="34677-125">ビュー オブジェクトを開発環境に直接渡すモードを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34677-125">Represents a mode in which the view object is passed directly to the development environment.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34677-126">ビュー オブジェクトには、開発環境に必要なインターフェイスを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="34677-126">The view object must implement any interfaces the development environment requires.</span></span> <span data-ttu-id="34677-127">Visual Studio 開発環境では、ActiveX コントロール、アクティブなドキュメントは、または Visual Studio VSI (Visual Studio の統合) プログラムを介して使用可能な IVsWindowPane インターフェイスを実装するオブジェクトのいずれかであるオブジェクトの表示をサポートします。</span><span class="sxs-lookup"><span data-stu-id="34677-127">The Visual Studio development environment supports view objects that are either an ActiveX control, active document, or an object that implements the IVsWindowPane interface that is available through Visual Studio VSI (Visual Studio Integration) program.</span></span> <span data-ttu-id="34677-128">Visual Studio 開発環境では、このビュー技術のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="34677-128">The Visual Studio development environment provides support for this view technology.</span></span> <span data-ttu-id="34677-129">このビュー テクノロジのサポートは、必ずしもすべての開発環境で使用可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="34677-129">Support for this view technology is not necessarily available in all development environments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForms">
      <MemberSignature Language="C#" Value="WindowsForms" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology WindowsForms = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberSignature Language="VB.NET" Value="WindowsForms" />
      <MemberSignature Language="C++ CLI" Value="WindowsForms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="34677-130">Windows フォーム コントロール オブジェクトがルート デザイナーにおける表示を提供するモードを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="34677-130">Represents a mode in which a Windows Forms control object provides the display for the root designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34677-131">デザイナー ホストでは、開発環境のドキュメント ウィンドウを Windows フォーム コントロールを使用します。</span><span class="sxs-lookup"><span data-stu-id="34677-131">The designer host fills the development environment document window with the Windows Forms control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34677-132">次のコード例を使用する方法を示しています、<xref:System.ComponentModel.Design.ViewTechnology>デザイナーでクラスです。</span><span class="sxs-lookup"><span data-stu-id="34677-132">The following code example demonstrates how to use the <xref:System.ComponentModel.Design.ViewTechnology> class in a designer.</span></span> <span data-ttu-id="34677-133">このコード例に示されている例の一部である、<xref:System.ComponentModel.Design.LocalizationExtenderProvider>クラスです。</span><span class="sxs-lookup"><span data-stu-id="34677-133">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.LocalizationExtenderProvider> class.</span></span>  
  
 [!code-cpp[LocalizationExtenderProviderExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#1)]
 [!code-csharp[LocalizationExtenderProviderExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#1)]
 [!code-vb[LocalizationExtenderProviderExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>