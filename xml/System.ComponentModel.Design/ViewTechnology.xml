<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ViewTechnology.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ea29596632544da6162e69dd65efbcfc8b3e1b43.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea29596632544da6162e69dd65efbcfc8b3e1b43</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>Defines identifiers for a set of technologies that designer hosts support.</source>
          <target state="translated">デザイナー ホストがサポートする一連の技術の識別子を定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>The view adapter model replaces and adds functionality to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph> feature; however, the <ph id="ph2">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph> feature is retained for both backward compatibility and future use, if you choose.</source>
          <target state="translated">アダプター モデルの表示が置き換えられますする機能を追加、<ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph>機能です。 ただし、、<ph id="ph2">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph>を選択した場合、旧バージョンとの互換性と将来の使用の両方の機能が保持されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>For more information, see ".NET Shape Library: A Sample Designer" in the Windows Forms Knowledge Base at <ph id="ph1">http://windowsforms.net/articles/shapedesigner.aspx</ph>.</source>
          <target state="translated">詳細については、「.NET 図形ライブラリ:: A サンプル デザイナー」で Windows フォーム サポート技術情報を参照してください。<ph id="ph1">http://windowsforms.net/articles/shapedesigner.aspx</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph> defines identifiers that can indicate the mode to use for controlling the display of a designer-hosted document.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph> デザイナーでホストされるドキュメントの表示を制御するために使用するモードを示す可能性のある識別子を定義します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>You should only use the Default value in your designer hosting environment.</source>
          <target state="translated">既定値は、デザイナー ホスト環境でのみ使用する必要があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>In previous versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.ComponentModel.Design.ViewTechnology.Default&gt;</ph> enumeration specified the type of UI model supported by a root designer.</source>
          <target state="translated">以前のバージョンので、 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>、<ph id="ph2">&lt;xref:System.ComponentModel.Design.ViewTechnology.Default&gt;</ph>列挙型がルート デザイナーでサポートされている UI モデルの種類を指定します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>Because this model is not extensible, you should instead use a <bpt id="p1">*</bpt>view adapter<ept id="p1">*</ept> model.</source>
          <target state="translated">代わりに使用する必要があるこのモデルを拡張できないため、<bpt id="p1">*</bpt>ビュー アダプター<ept id="p1">*</ept>モデル。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>A view adapter is a type that adapts an object of one type to another.</source>
          <target state="translated">ビューのアダプターは、1 つの型を別のオブジェクトを対応する型です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>For example, an HTML designer might return a <ph id="ph1">`DemoDOM`</ph> tree as its view.</source>
          <target state="translated">たとえば、HTML デザイナーを返す可能性があります、<ph id="ph1">`DemoDOM`</ph>ツリーのビューだけです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>The HTML designer returns a view technology of Default.</source>
          <target state="translated">HTML デザイナーでは、既定のビュー テクノロジを返します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>A Windows Forms hosting environment would have one or more view adapter classes available.</source>
          <target state="translated">Windows フォームの環境をホストには、1 つまたは複数アダプター使用できるビュー クラスがあります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>If one such class could convert the <ph id="ph1">`DemoDOM`</ph> into a Windows Forms control, the hosting application can support this type of designer.</source>
          <target state="translated">このような 1 つのクラスに変換できなかった場合、<ph id="ph1">`DemoDOM`</ph>ホスト アプリケーションを Windows フォーム コントロールでは、この種類のデザイナーをサポートできます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>If no adapter can handle the data type returned from the designer’s <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner.GetView%2A&gt;</ph> method, the load of the designer will fail, and the user will be presented with an error.</source>
          <target state="translated">かどうかアダプター型を処理できるなし、データ デザイナーから返された<ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner.GetView%2A&gt;</ph>メソッド、デザイナーの読み込みが失敗し、エラーで、ユーザーが表示されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source><ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> has an extensible scheme for providing view adapters, so it can adapt to any UI technology.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> UI 技術に合わせて調整できますので、ビューのアダプターを提供するための拡張可能なスキームがあります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>Third-party technology providers can also offer an appropriate view adapter, and their object models are immediately consumable.</source>
          <target state="translated">サードパーティのテクノロジのプロバイダーは、適切なビュー アダプターも提供し、そのオブジェクト モデルはすぐに使用できるようにします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>For an example that uses view adapters, see ".NET Shape Library: A Sample Designer" in the Windows Forms Knowledge Base at <ph id="ph1">http://windowsforms.net/articles/shapedesigner.aspx</ph>.</source>
          <target state="translated">例については使用がアダプターを表示する、デザイナーが表示".NET 図形ライブラリ:: A サンプル"で Windows フォーム サポート技術情報の<ph id="ph1">http://windowsforms.net/articles/shapedesigner.aspx</ph>します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Default&gt;</ph> class in a designer.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Default&gt;</ph>デザイナーでクラスです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ViewTechnology">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner.GetView%2A&gt;</ph> interface.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner.GetView%2A&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.Design.ViewTechnology.Default">
          <source>Specifies the default view technology support.</source>
          <target state="translated">既定のビュー技術サポートを指定します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.Design.ViewTechnology.Default">
          <source>The root designer may return any type of object, but the object must be compatible with an adapter for the technology of the host.</source>
          <target state="translated">ルート デザイナーは、オブジェクトの任意の型を返す可能性がありますが、オブジェクトは、ホストの技術のアダプターとの互換性である必要があります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.Design.ViewTechnology.Default">
          <source>Hosting environments such as <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> provide a way to plug in new view technology adapters.</source>
          <target state="translated">ホスティング環境など<ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>新しいビュー技術アダプターを接続する方法を提供します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.Design.ViewTechnology.Default">
          <source>The default view object for the Windows Forms designer is a <ph id="ph1">&lt;xref:System.Windows.Forms.Control?displayProperty=nameWithType&gt;</ph> instance.</source>
          <target state="translated">Windows フォーム デザイナーの既定のビュー オブジェクトは、<ph id="ph1">&lt;xref:System.Windows.Forms.Control?displayProperty=nameWithType&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.Design.ViewTechnology.Default">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph> class in a designer.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph>デザイナーでクラスです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.Design.ViewTechnology.Default">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> interface.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.Design.ViewTechnology.Passthrough">
          <source>Represents a mode in which the view object is passed directly to the development environment.</source>
          <target state="translated">ビュー オブジェクトを開発環境に直接渡すモードを表します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.Design.ViewTechnology.Passthrough">
          <source>The view object must implement any interfaces the development environment requires.</source>
          <target state="translated">ビュー オブジェクトには、開発環境に必要なインターフェイスを実装する必要があります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.Design.ViewTechnology.Passthrough">
          <source>The <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> development environment supports view objects that are either an ActiveX control, active document, or an object that implements the IVsWindowPane interface that is available through <ph id="ph2">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> VSI (<ph id="ph3">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> Integration) program.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>開発環境は、ActiveX コントロール、作業中の文書またはを介して使用可能な IVsWindowPane インターフェイスを実装するオブジェクトのいずれかであるオブジェクトの表示をサポートしている<ph id="ph2">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>VSI (<ph id="ph3">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>統合) プログラムです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.Design.ViewTechnology.Passthrough">
          <source>The <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> development environment provides support for this view technology.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>開発環境では、このビュー テクノロジのサポートを提供します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.Design.ViewTechnology.Passthrough">
          <source>Support for this view technology is not necessarily available in all development environments.</source>
          <target state="translated">このビュー テクノロジのサポートは、必ずしもすべての開発環境で使用可能ではありません。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.Design.ViewTechnology.WindowsForms">
          <source>Represents a mode in which a Windows Forms control object provides the display for the root designer.</source>
          <target state="translated">Windows フォーム コントロール オブジェクトがルート デザイナーにおける表示を提供するモードを表します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.Design.ViewTechnology.WindowsForms">
          <source>The designer host fills the development environment document window with the Windows Forms control.</source>
          <target state="translated">デザイナー ホストでは、開発環境のドキュメント ウィンドウを Windows フォーム コントロールを使用します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.Design.ViewTechnology.WindowsForms">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph> class in a designer.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph>デザイナーでクラスです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ComponentModel.Design.ViewTechnology.WindowsForms">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.LocalizationExtenderProvider&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.ComponentModel.Design.LocalizationExtenderProvider&gt;</ph>クラスです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>