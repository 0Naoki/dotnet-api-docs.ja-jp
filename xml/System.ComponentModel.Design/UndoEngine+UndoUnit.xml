<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UndoEngine+UndoUnit.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5382a3cdab6225eaf1dff887db135941d445224f9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">382a3cdab6225eaf1dff887db135941d445224f9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
          <source>Encapsulates a unit of work that a user can undo.</source>
          <target state="translated">ユーザーが元に戻すことができる処理の単位をカプセル化します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph> class is a nested class within <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A&gt;</ph> that encapsulates an action that a user can undo.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>クラスは、入れ子になったクラス内で<ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A&gt;</ph>ユーザーを元に戻すことができます、アクションをカプセル化します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
          <source>The default <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph> implementation monitors change notifications and builds up a list of events for each change.</source>
          <target state="translated">既定値<ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>実装は、変更通知を監視し、各変更のイベントのリストを構築します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
          <source>It saves these events using <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService&gt;</ph>.</source>
          <target state="translated">使用してこれらのイベント保存<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph> receives event notifications for changes directly from <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A&gt;</ph> through several <ph id="ph3">`public virtual`</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>から直接の変更のイベント通知を受け取る<ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A&gt;</ph>いくつかを通じて<ph id="ph3">`public virtual`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
          <source>You can derive from <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph> and perform any additional logic.</source>
          <target state="translated">派生できます<ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>し、追加のロジックを実行します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
          <source>If desired, you can completely bypass the default <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph> implementation.</source>
          <target state="translated">既定値を完全にバイパスできます必要な場合、<ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
          <source>The undo engine that owns this undo unit.</source>
          <target state="translated">この取り消し単位を所有するアンドゥ エンジン。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
          <source>The name for this undo unit.</source>
          <target state="translated">この取り消し単位の名前。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
          <source><ph id="ph1">&lt;paramref name="engine" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="engine" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
          <source>Receives a call from the undo engine to close this unit.</source>
          <target state="translated">アンドゥ エンジンから呼び出しを受け取ってこの単位を閉じます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
          <source>When a unit is closed, no more events can come into its various event methods.</source>
          <target state="translated">単位が閉じられたときにこれ以上イベントがイベントのさまざまなメソッドに取得できます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph> itself may take action here to ensure that any events that are currently open are closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>自体が現在開いているすべてのイベントが閉じられていることを確認するアクションは、ここをかかる場合があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
          <source>Receives a call from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> in response to a <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> イベントに応答し、<ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /&gt;</ph> からの呼び出しを受け取ります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
          <source>Receives a call from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> in response to a <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> イベントに応答し、<ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /&gt;</ph> からの呼び出しを受け取ります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
          <source>Receives a call from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> in response to a <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> イベントに応答し、<ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /&gt;</ph> からの呼び出しを受け取ります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
          <source>Receives a call from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> in response to a <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> イベントに応答し、<ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /&gt;</ph> からの呼び出しを受け取ります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
          <source>Receives a call from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> in response to a <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> イベントに応答し、<ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /&gt;</ph> からの呼び出しを受け取ります。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
          <source>Receives a call from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> in response to a <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> イベントに応答し、<ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /&gt;</ph> からの呼び出しを受け取ります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
          <source>Receives a call from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> in response to a <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> イベントに応答し、<ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /&gt;</ph> からの呼び出しを受け取ります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
          <source>The type of service to retrieve.</source>
          <target state="translated">取得するサービスの型。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
          <source>Gets an instance of the requested service.</source>
          <target state="translated">要求したサービスのインスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
          <source>An instance of the given service, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the service cannot be resolved.</source>
          <target state="translated">指定したサービスのインスタンス。サービスを解決できない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> contains no events.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> にイベントが格納されていないかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> contains no events; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> にイベントが格納されていない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
          <source>The undo engine may discard empty units.</source>
          <target state="translated">元に戻すエンジンは、空の単位を破棄してもかまいません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
          <source>Gets the name of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> の名前を取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> の名前。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the current name of the unit.</source>
          <target state="translated">単位の現在の名前を表す <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the current name of the unit.</source>
          <target state="translated">単位の現在の名前を表す <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
          <source>Performs an undo or redo action.</source>
          <target state="translated">元に戻す操作またはやり直し操作を実行します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
          <source>Undo actions toggle themselves between undo and redo states, so calling <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A&gt;</ph> twice sets the object back to its original state.</source>
          <target state="translated">元に戻す操作自体を元に戻すの間で切り替えるし、呼び出すための状態を再実行<ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A&gt;</ph>2 回、オブジェクトをその元の状態に設定します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph> class initially assumes that the undoable work has already been done, so the first call to <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A&gt;</ph> undoes the work.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>クラス最初に前提としています、取り消し可能な作業が既に実行されて、最初の呼び出し、<ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A&gt;</ph>作業を元に戻します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
          <source>The next call undoes the previous undo operation, performing a redo.</source>
          <target state="translated">次の呼び出しには、やり直し操作を実行する前の元に戻す操作が元に戻します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A&gt;</ph> method to perform an undo operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A&gt;</ph>元に戻す操作を実行するメソッド。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A&gt;</ph> method itself works to maintain consistent state within the <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>, even in the event of an exception thrown by <ph id="ph3">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A&gt;</ph>メソッド自体は内で一貫性のある状態を維持するためには、<ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>によってスローされる例外が発生した場合でも、<ph id="ph3">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
          <source>Do not call the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /&gt;</ph> method directly; override it if you want, but always call the <ph id="ph2">&lt;see langword="public" /&gt;</ph><ph id="ph3">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /&gt;</ph> method to perform undo work.</source>
          <target state="translated">呼び出す必要はありません、<ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /&gt;</ph>メソッド直接; は、常に呼び出す場合に上書き、 <ph id="ph2">&lt;see langword="public" /&gt;</ph> <ph id="ph3">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /&gt;</ph>元に戻す処理を実行するメソッド。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /&gt;</ph> method notifies the undo engine to suspend undo data gathering until the current undo operation is completed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /&gt;</ph>メソッドは元に戻すデータの現在の元に戻す操作が完了するまでの収集を中断する元に戻すエンジンに通知します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
          <source>This prevents new undo units from being created in response to this unit doing work.</source>
          <target state="translated">これにより、新しい元に戻す単位が作業を行ってこの単位への応答で作成されています。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
          <source>Called by <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /&gt;</ph> to perform an undo action.</source>
          <target state="translated">元に戻す操作を実行するために <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /&gt;</ph> によって呼び出されます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A&gt;</ph> method to perform an undo operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A&gt;</ph>元に戻す操作を実行するメソッド。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A&gt;</ph> method itself works to maintain consistent state within the <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>, even in the event of an exception thrown by <ph id="ph3">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A&gt;</ph>メソッド自体は内で一貫性のある状態を維持するためには、<ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>によってスローされる例外が発生した場合でも、<ph id="ph3">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
          <source>Do not call the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /&gt;</ph> method directly; override it if you want, but always call the <ph id="ph2">&lt;see langword="public" /&gt;</ph><ph id="ph3">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /&gt;</ph> method to perform undo work.</source>
          <target state="translated">呼び出す必要はありません、<ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /&gt;</ph>メソッド直接; は、常に呼び出す場合に上書き、 <ph id="ph2">&lt;see langword="public" /&gt;</ph> <ph id="ph3">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /&gt;</ph>元に戻す処理を実行するメソッド。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /&gt;</ph> method notifies the undo engine to suspend undo-operation data gathering until the current undo operation is completed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /&gt;</ph>メソッドは元に戻す操作のデータが現在の元に戻す操作が完了するまでの収集を中断する元に戻すエンジンに通知します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
          <source>This prevents new undo units from being created in response to this unit doing work.</source>
          <target state="translated">これにより、新しい元に戻す単位が作業を行ってこの単位への応答で作成されています。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
          <source>Gets the parent <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /&gt;</ph>.</source>
          <target state="translated">親の <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
          <source>The <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /&gt;</ph> to which this <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> is attached.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /&gt;</ph> の割り当て先である <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>