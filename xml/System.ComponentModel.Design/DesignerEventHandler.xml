<Type Name="DesignerEventHandler" FullName="System.ComponentModel.Design.DesignerEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef3105418edc535c940df4bba466233fc5ee2d5a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void DesignerEventHandler(object sender, DesignerEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DesignerEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DesignerEventHandler(sender As Object, e As DesignerEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DesignerEventHandler(System::Object ^ sender, DesignerEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.Design.DesignerEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="0dee0-101">イベントのソース。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0dee0-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="0dee0-102">イベント データを格納している <see cref="T:System.ComponentModel.Design.DesignerEventArgs" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0dee0-102">A <see cref="T:System.ComponentModel.Design.DesignerEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="0dee0-103">ドキュメントが作成または破棄されるときにそれぞれ発生する <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> イベントと <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerDisposed" /> イベントを処理するメソッドを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0dee0-103">Represents the method that will handle the <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> and <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerDisposed" /> events that are raised when a document is created or disposed of.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dee0-104"><xref:System.ComponentModel.Design.DesignerEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="0dee0-104">When you create a <xref:System.ComponentModel.Design.DesignerEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="0dee0-105">イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。</span><span class="sxs-lookup"><span data-stu-id="0dee0-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="0dee0-106">デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0dee0-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="0dee0-107">イベント ハンドラー デリゲートの詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)です。</span><span class="sxs-lookup"><span data-stu-id="0dee0-107">For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0dee0-108">次の例での登録、<xref:System.ComponentModel.Design.DesignerEventHandler>と処理、<xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated>と<xref:System.ComponentModel.Design.IDesignerEventService.DesignerDisposed>イベント。</span><span class="sxs-lookup"><span data-stu-id="0dee0-108">The following example demonstrates registering a <xref:System.ComponentModel.Design.DesignerEventHandler> and handling the <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> and <xref:System.ComponentModel.Design.IDesignerEventService.DesignerDisposed> events.</span></span>  
  
 [!code-cpp[DesignerEventHandlerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerEventHandlerExample/CPP/designereventhandlerexample.cpp#1)]
 [!code-csharp[DesignerEventHandlerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerEventHandlerExample/CS/designereventhandlerexample.cs#1)]
 [!code-vb[DesignerEventHandlerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerEventHandlerExample/VB/designereventhandlerexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DesignerEventArgs" />
  </Docs>
</Type>