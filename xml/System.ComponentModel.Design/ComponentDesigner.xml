<Type Name="ComponentDesigner" FullName="System.ComponentModel.Design.ComponentDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f167a4a6bd3caa5523f9f9dc81c18f3af7cad863" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36707902" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComponentDesigner : IDisposable, System.ComponentModel.Design.IComponentInitializer, System.ComponentModel.Design.IDesigner, System.ComponentModel.Design.IDesignerFilter, System.ComponentModel.Design.ITreeDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentDesigner extends System.Object implements class System.ComponentModel.Design.IComponentInitializer, class System.ComponentModel.Design.IDesigner, class System.ComponentModel.Design.IDesignerFilter, class System.ComponentModel.Design.ITreeDesigner, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentDesigner&#xA;Implements IComponentInitializer, IDesigner, IDesignerFilter, IDisposable, ITreeDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentDesigner : IDisposable, System::ComponentModel::Design::IComponentInitializer, System::ComponentModel::Design::IDesigner, System::ComponentModel::Design::IDesignerFilter, System::ComponentModel::Design::ITreeDesigner" />
  <TypeSignature Language="F#" Value="type ComponentDesigner = class&#xA;    interface ITreeDesigner&#xA;    interface IDesigner&#xA;    interface IDisposable&#xA;    interface IDesignerFilter&#xA;    interface IComponentInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IComponentInitializer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesignerFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.ITreeDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e9f3d-101">コンポーネントのデザイン モードの動作を拡張します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9f3d-101">Extends the design mode behavior of a component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-102"><xref:System.ComponentModel.Design.ComponentDesigner>の基本デザイナー クラスには、デザイン モードでの関連コンポーネントの動作を拡張できる単純なデザイナーが用意されています。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-102">The <xref:System.ComponentModel.Design.ComponentDesigner> base designer class provides a simple designer that can extend the behavior of an associated component in design mode.</span></span>  
  
 <span data-ttu-id="e9f3d-103"><xref:System.ComponentModel.Design.ComponentDesigner> 空の提供<xref:System.ComponentModel.Design.IDesignerFilter>インターフェイスの実装では、そのメソッドをオーバーライドすると、デザイン時に、属性、プロパティおよび関連付けられたコンポーネントのイベントを調整します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-103"><xref:System.ComponentModel.Design.ComponentDesigner> provides an empty <xref:System.ComponentModel.Design.IDesignerFilter> interface implementation, whose methods can be overridden to adjust the attributes, properties and events of the associated component at design time.</span></span>  
  
 <span data-ttu-id="e9f3d-104">使用して型をデザイナーを関連付けることができます、<xref:System.ComponentModel.DesignerAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-104">You can associate a designer with a type using a <xref:System.ComponentModel.DesignerAttribute>.</span></span> <span data-ttu-id="e9f3d-105">デザイン時動作のカスタマイズの概要については、次を参照してください。[デザイン時サポートを拡張する](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2)です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-105">For an overview of customizing design-time behavior, see [Extending Design-Time Support](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span></span>  
  
 <span data-ttu-id="e9f3d-106"><xref:System.ComponentModel.Design.ComponentDesigner>クラスは継承されたコンポーネントのプロパティ記述子の特別な動作を実装します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-106">The <xref:System.ComponentModel.Design.ComponentDesigner> class implements a special behavior for the property descriptors of inherited components.</span></span> <span data-ttu-id="e9f3d-107">という内部型`InheritedPropertyDescriptor`、既定で使用される<xref:System.ComponentModel.Design.ComponentDesigner>基底クラスから継承されたプロパティの代わりに実装します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-107">An internal type named `InheritedPropertyDescriptor` is used by the default <xref:System.ComponentModel.Design.ComponentDesigner> implementation to stand in for properties that are inherited from a base class.</span></span> <span data-ttu-id="e9f3d-108">これらのプロパティ記述子を追加する 2 つのケースがあります。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-108">There are two cases in which these property descriptors are added.</span></span>  
  
1.  <span data-ttu-id="e9f3d-109">ルート オブジェクト自体にによって返されます、<xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A?displayProperty=nameWithType>プロパティ、その基本クラスから継承しているためです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-109">To the root object itself, which is returned by the <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A?displayProperty=nameWithType> property, because you are inheriting from its base class.</span></span>  
  
2.  <span data-ttu-id="e9f3d-110">ルート オブジェクトの基本クラスで見つかるフィールドです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-110">To fields found in the base class of the root object.</span></span> <span data-ttu-id="e9f3d-111">ユーザーが操作できるように、基底クラスからパブリックおよびプロテクト フィールドは、デザイナーに追加されます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-111">Public and protected fields from the base class are added to the designer so that they can be manipulated by the user.</span></span>  
  
 <span data-ttu-id="e9f3d-112">`InheritedPropertyDescriptor`クラスは、既定値はオブジェクト インスタンスの作成時に現在の値をように、プロパティの既定値を変更します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-112">The `InheritedPropertyDescriptor` class modifies the default value of a property, so that the default value is the current value at object instantiation.</span></span> <span data-ttu-id="e9f3d-113">これは、プロパティが別のインスタンスから継承されるためです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-113">This is because the property is inherited from another instance.</span></span> <span data-ttu-id="e9f3d-114">デザイナーでは、継承クラスによって設定された値に設定するをこのプロパティの値を定義します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-114">The designer defines resetting the property value as setting it to the value that was set by the inherited class.</span></span> <span data-ttu-id="e9f3d-115">この値は、メタデータに格納されている既定値に異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-115">This value may differ from the default value stored in metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9f3d-116">次のコード例は例を示します<xref:System.ComponentModel.Design.ComponentDesigner>実装と、デザイナーに関連付けられた例コンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-116">The following code example provides an example <xref:System.ComponentModel.Design.ComponentDesigner> implementation and an example component associated with the designer.</span></span> <span data-ttu-id="e9f3d-117">デザイナーのオーバーライドを実装して、<xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A>メソッドを呼び出す基本`Initialize`メソッドは、のオーバーライド、<xref:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction%2A>を表示するメソッド、<xref:System.Windows.Forms.MessageBox>コンポーネントをダブルクリックしたときのオーバーライド、 <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>プロパティ アクセサーをカスタムを提供する<xref:System.ComponentModel.Design.DesignerVerb>コンポーネントのショートカット メニューにメニュー コマンド。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-117">The designer implements an override of the <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method that calls the base `Initialize` method, an override of the <xref:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction%2A> method that displays a <xref:System.Windows.Forms.MessageBox> when the component is double-clicked, and an override of the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property accessor that supplies a custom <xref:System.ComponentModel.Design.DesignerVerb> menu command to the shortcut menu for the component.</span></span>  
  
 [!code-cpp[ComponentDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ComponentDesignerExample/CPP/examplecomponent.cpp#1)]
 [!code-csharp[ComponentDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ComponentDesignerExample/CS/examplecomponent.cs#1)]
 [!code-vb[ComponentDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComponentDesignerExample/VB/examplecomponent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
    <altmember cref="T:System.ComponentModel.DesignerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-118">
            <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-118">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActionLists : System.ComponentModel.Design.DesignerActionListCollection" Usage="System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-119">デザイナーに関連付けられているコンポーネントでサポートされているデザイン時アクション リストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-119">Gets the design-time action lists supported by the component associated with the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9f3d-120">デザイナーに関連付けられているコンポーネントでサポートされているデザイン時アクション リスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-120">The design-time action lists supported by the component associated with the designer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociatedComponents">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection AssociatedComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection AssociatedComponents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AssociatedComponents As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ AssociatedComponents { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedComponents : System.Collections.ICollection" Usage="System.ComponentModel.Design.ComponentDesigner.AssociatedComponents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-121">デザイナーで管理されているコンポーネントに関連付けられているコンポーネントのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-121">Gets the collection of components associated with the component managed by the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9f3d-122">デザイナーで管理されているコンポーネントに関連付けられているコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-122">The components that are associated with the component managed by the designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-123">このプロパティは、すべてのコンポーネントをコピーまたは移動、コピー中に、デザイナーによって管理されているコンポーネントと共にドラッグ、または移動操作を示します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-123">This property indicates any components to copy or move along with the component managed by the designer during a copy, drag, or move operation.</span></span>  
  
 <span data-ttu-id="e9f3d-124">このコレクションに現在のデザイン モードのドキュメントの他のコンポーネントへの参照が含まれている場合、これらのコンポーネントがコピー操作中に、デザイナーによって管理されているコンポーネントと共にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-124">If this collection contains references to other components in the current design mode document, those components will be copied along with the component managed by the designer during a copy operation.</span></span>  
  
 <span data-ttu-id="e9f3d-125">デザイナーによって管理されているコンポーネントを選択すると、このコレクションには、入れ子になったコントロールが格納されます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-125">When the component managed by the designer is selected, this collection is filled with any nested controls.</span></span> <span data-ttu-id="e9f3d-126">このコレクションでは、ツールバーのボタンなど、他のコンポーネントを含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-126">This collection can also include other components, such as the buttons of a toolbar.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Component : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.ComponentDesigner.Component" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-127">デザイナーがデザインするコンポーネントを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-127">Gets the component this designer is designing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9f3d-128">デザイナーで管理されているコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-128">The component managed by the designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-129"><xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A>メソッドの<xref:System.ComponentModel.Design.ComponentDesigner>このプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-129">The <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method of <xref:System.ComponentModel.Design.ComponentDesigner> sets this property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9f3d-130">オーバーライドする場合、<xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A>メソッド、基底クラスを呼び出して必ず<xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A>このプロパティを使用する前にメソッドです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-130">When overriding the <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method, be sure to call the base class <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method before using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-131">
            <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> で使用したリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-131">Releases the resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="componentDesigner.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-132">
            <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> によって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-132">Releases all resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-133"><xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> を使い終わったら <xref:System.ComponentModel.Design.ComponentDesigner> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-133">Call <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.ComponentDesigner>.</span></span> <span data-ttu-id="e9f3d-134"><xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> メソッドによって、<xref:System.ComponentModel.Design.ComponentDesigner> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-134">The <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.ComponentDesigner> in an unusable state.</span></span> <span data-ttu-id="e9f3d-135">呼び出した後<xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.ComponentModel.Design.ComponentDesigner>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.ComponentModel.Design.ComponentDesigner>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-135">After calling <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.ComponentDesigner> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.ComponentDesigner> was occupying.</span></span> <span data-ttu-id="e9f3d-136">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-136">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9f3d-137"><xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.ComponentModel.Design.ComponentDesigner> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-137">Always call <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.ComponentDesigner>.</span></span> <span data-ttu-id="e9f3d-138">そうしないと、ガベージ コレクターが <xref:System.ComponentModel.Design.ComponentDesigner> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-138">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.ComponentDesigner> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="componentDesigner.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="e9f3d-139">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-139">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-140">ph x="1" /&amp;gt; によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-140">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-141">このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-141">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="e9f3d-142">`Dispose()` プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-142">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="e9f3d-143"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-143"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="e9f3d-144">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.ComponentModel.Design.ComponentDesigner>参照します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-144">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.ComponentDesigner> references.</span></span> <span data-ttu-id="e9f3d-145">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-145">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e9f3d-146">
            <para>
              <see langword="Dispose" /> 複数回呼び出す他のオブジェクトから。オーバーライドする場合<see langword="Dispose(Boolean)" />既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<see langword="Dispose" />です。実装する方法の詳細についての<see langword="Dispose(Boolean)" />、[Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) を実装を参照してください。 します。詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください [アンマネージ Resources](~/docs/standard/garbage-collection/unmanaged.md) をクリーンアップし、[Finalize メソッドをオーバーライドする] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-146">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="componentDesigner.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-147">コンポーネントの既定イベントに対するメソッド シグネチャをソース コード ファイル内に作成し、コード内のその位置にカーソルを移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-147">Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-148">Windows フォームおよび Web フォーム デザイナーでは、このメソッドは、ユーザーが、コンポーネントをダブルクリックしたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-148">In Windows Forms and Web Forms designers, this method is invoked when a user double-clicks a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Design.CheckoutException">
          <span data-ttu-id="e9f3d-149">ソース コード管理プログラムにチェックインされているファイルのチェックアウトの試行が失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-149">An attempt to check out a file that is checked into a source code management program failed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ComponentDesigner ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="componentDesigner.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-150">ガベージ コレクションでオブジェクトがクリアされる前に、<see langword="Dispose(false)" /> を呼び出して、リソースの解放を試みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-150">Attempts to free resources by calling <see langword="Dispose(false)" /> before the object is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-151">このメソッドは<xref:System.Object.Finalize%2A?displayProperty=nameWithType>を呼び出してリソースをクリーンアップし、`Dispose(false)`です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-151">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="e9f3d-152">`Dispose(Boolean)` をオーバーライドしてクリーンアップをカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-152">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="e9f3d-153">アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの`Finalize`への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、ガベージ コレクション中にメソッドが自動的に起動、<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-153">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e9f3d-154">詳細については、次を参照してください。 [Finalize メソッドおよびデストラクター](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)、および[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-154">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="componentDesigner.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="e9f3d-155">要求するサービスの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-155">The type of service to request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-156">デザイナーのコンポーネントのデザイン モード サイトから、指定した型のサービスの取得を試みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-156">Attempts to retrieve the specified type of service from the design mode site of the designer's component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9f3d-157">要求したサービスを実装しているオブジェクト。サービスを解決できない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-157">An object implementing the requested service, or <see langword="null" /> if the service cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-158">このメソッドの既定の実装では、コンポーネントのサイトからサービスを要求します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-158">The default implementation of this method requests the service from the site of the component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9f3d-159">使用を次のコード例に示します、<xref:System.ComponentModel.Design.ComponentDesigner.GetService%2A>サービスにアクセスするデザイナーのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-159">The following code example demonstrates the use of the <xref:System.ComponentModel.Design.ComponentDesigner.GetService%2A> method to access designer services.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceAttribute">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.InheritanceAttribute InheritanceAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.InheritanceAttribute InheritanceAttribute" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property InheritanceAttribute As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::InheritanceAttribute ^ InheritanceAttribute { System::ComponentModel::InheritanceAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritanceAttribute : System.ComponentModel.InheritanceAttribute" Usage="System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-160">関連付けられているコンポーネントの継承の種類を示す属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-160">Gets an attribute that indicates the type of inheritance of the associated component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9f3d-161">関連付けられているコンポーネントの <see cref="T:System.ComponentModel.InheritanceAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-161">The <see cref="T:System.ComponentModel.InheritanceAttribute" /> for the associated component.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="protected bool Inherited { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Inherited" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Inherited { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Inherited : bool" Usage="System.ComponentModel.Design.ComponentDesigner.Inherited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-162">コンポーネントが継承されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-162">Gets a value indicating whether this component is inherited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9f3d-163">コンポーネントが継承されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-163">
              <see langword="true" /> if the component is inherited; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.ComponentModel.IComponent -&gt; unit&#xA;override this.Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="componentDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="e9f3d-164">デザイナーで操作する対象のコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-164">The component for this designer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-165">指定したコンポーネントをデザイナーで表示、編集、デザインできるように準備します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-165">Prepares the designer to view, edit, and design the specified component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-166">デザイナーのホストは、デザイナーを使用する準備ができたときに、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-166">The designer host calls this method when it is ready to use the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="InitializeExistingComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeExistingComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeExistingComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeExistingComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeExistingComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberSignature Language="F#" Value="abstract member InitializeExistingComponent : System.Collections.IDictionary -&gt; unit&#xA;override this.InitializeExistingComponent : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.InitializeExistingComponent defaultValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">
          <span data-ttu-id="e9f3d-167">プロパティに適用する既定値の名前/値のディクショナリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-167">A name/value dictionary of default values to apply to properties.</span>
          </span>
          <span data-ttu-id="e9f3d-168">既定値を指定しない場合は <see langword="null" /> にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-168">May be <see langword="null" /> if no default values are specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-169">既存のコンポーネントを再初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-169">Reinitializes an existing component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-170"><xref:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent%2A>メソッドは、既存のコンポーネントを再初期化されるときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-170">The <xref:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent%2A> method is called when an existing component is being reinitialized.</span></span> <span data-ttu-id="e9f3d-171">たとえば、ユーザーが別のコンテナーにコンポーネントをドラッグした後に、この問題が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-171">For example, this may occur after the user drags a component to another container.</span></span>  
  
 <span data-ttu-id="e9f3d-172">使用することは、`defaultValues`ディクショナリを適用する、プロパティに既定の設定を推奨します。 ただし、変更しないで、ディクショナリに格納されているとは別のコンポーネントのプロパティ設定されているプロパティがこの既存のコンポーネントを既にあるためです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-172">You may use the `defaultValues` dictionary to apply recommended defaults to properties; however, you should not modify component properties aside from those stored in the dictionary, because this existing component may already have properties set on it.</span></span>  
  
 <span data-ttu-id="e9f3d-173">このメソッドの既定の実装では、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-173">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberSignature Language="F#" Value="abstract member InitializeNewComponent : System.Collections.IDictionary -&gt; unit&#xA;override this.InitializeNewComponent : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.InitializeNewComponent defaultValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">
          <span data-ttu-id="e9f3d-174">プロパティに適用する既定値の名前/値のディクショナリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-174">A name/value dictionary of default values to apply to properties.</span>
          </span>
          <span data-ttu-id="e9f3d-175">既定値を指定しない場合は <see langword="null" /> にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-175">May be <see langword="null" /> if no default values are specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-176">新たに作成されたコンポーネントを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-176">Initializes a newly created component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-177"><xref:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent%2A>コンポーネントの初期化時に最初に、通常、デザイン サーフェイスに追加する最初の後にメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-177">The <xref:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent%2A> method is called when a component is first initialized, typically after being first added to a design surface.</span></span>  
  
 <span data-ttu-id="e9f3d-178">このコンポーネントの必要な初期化を実行することがあり、無視して、`defaultValues`ディクショナリ全体です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-178">You may perform any necessary initialization of this component, and you may ignore the `defaultValues` dictionary altogether.</span></span>  
  
 <span data-ttu-id="e9f3d-179">このメソッドの既定の実装では、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-179">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNonDefault">
      <MemberSignature Language="C#" Value="public virtual void InitializeNonDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNonDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNonDefault ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNonDefault();" />
      <MemberSignature Language="F#" Value="abstract member InitializeNonDefault : unit -&gt; unit&#xA;override this.InitializeNonDefault : unit -&gt; unit" Usage="componentDesigner.InitializeNonDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeExistingComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-180">既定値以外の値に既に初期化されている、インポートされたコンポーネントの設定値を初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-180">Initializes the settings for an imported component that is already initialized to settings other than the defaults.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-181">デザイナーがコントロールを貼り付けるか、デザイナーにドラッグ アンド ドロップ操作で移動するなど、既定の状態に含まれていないコントロールに関連付けられた場合は、このメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-181">This method is called when the designer is associated with a control that is not in its default state, such as a control that you paste or move with a drag-and-drop operation onto the designer.</span></span> <span data-ttu-id="e9f3d-182">このメソッドは、変更またはコンポーネントのプロパティをシャドウではなく、コンポーネントのプロパティを既定値に初期化する実装者の機会を提供します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-182">This method provides an opportunity for implementers to modify or shadow the properties of the component rather than initialize the properties for the component to their defaults.</span></span> <span data-ttu-id="e9f3d-183">このメソッドは、他の初期化関数の後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-183">This method is called after the other initialization functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeGetInheritanceAttribute">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute (System.ComponentModel.Design.ComponentDesigner toInvoke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute(class System.ComponentModel.Design.ComponentDesigner toInvoke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InvokeGetInheritanceAttribute (toInvoke As ComponentDesigner) As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::InheritanceAttribute ^ InvokeGetInheritanceAttribute(System::ComponentModel::Design::ComponentDesigner ^ toInvoke);" />
      <MemberSignature Language="F#" Value="member this.InvokeGetInheritanceAttribute : System.ComponentModel.Design.ComponentDesigner -&gt; System.ComponentModel.InheritanceAttribute" Usage="componentDesigner.InvokeGetInheritanceAttribute toInvoke" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.ComponentModel.Design.ComponentDesigner" />
      </Parameters>
      <Docs>
        <param name="toInvoke">
          <span data-ttu-id="e9f3d-184">継承属性を取得する対象の <see cref="T:System.ComponentModel.Design.ComponentDesigner" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-184">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> whose inheritance attribute to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-185">指定した <see cref="T:System.ComponentModel.InheritanceAttribute" /> の <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-185">Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9f3d-186">指定したデザイナーの <see cref="T:System.ComponentModel.InheritanceAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-186">The <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified designer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComponentDefaults">
      <MemberSignature Language="C#" Value="public virtual void OnSetComponentDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSetComponentDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnSetComponentDefaults ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnSetComponentDefaults();" />
      <MemberSignature Language="F#" Value="abstract member OnSetComponentDefaults : unit -&gt; unit&#xA;override this.OnSetComponentDefaults : unit -&gt; unit" Usage="componentDesigner.OnSetComponentDefaults " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-187">コンポーネントの既定のプロパティを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-187">Sets the default properties for the component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-188"><xref:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults%2A> デザイナーの初期化時に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-188"><xref:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults%2A> is called when the designer is initialized.</span></span> <span data-ttu-id="e9f3d-189">これにより、ベース コンポーネントの既定値を提供するデザイナー。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-189">This allows the designer to provide default values for the base component.</span></span>  
  
 <span data-ttu-id="e9f3d-190">このメソッドが 1 回だけ呼び出されます。 作成したとき、コンポーネントをツールボックスからデザイン画面にドラッグすることで。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-190">This method is called only once: when you first create the component by dragging it from the Toolbox to the design surface.</span></span> <span data-ttu-id="e9f3d-191">後続のデザイナーの初期化では、このメソッドは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-191">Subsequent initializations of the designer do not invoke this method.</span></span>  
  
 <span data-ttu-id="e9f3d-192">このメソッドの既定の実装では、既定のプロパティは文字列であり、プロパティは既に設定されていない場合に、コンポーネントの名前をコンポーネントの既定のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-192">The default implementation of this method sets the default property of the component to the name of the component if the default property is a string and the property is not already set.</span></span> <span data-ttu-id="e9f3d-193">このメソッドは、デザイナーがデザインされるコンポーネントの初期化をカスタマイズする派生クラスで実装することができます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-193">This method can be implemented in a derived class to customize the initialization of the component that this designer is designing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentComponent">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.IComponent ParentComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent ParentComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParentComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::IComponent ^ ParentComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentComponent : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.ComponentDesigner.ParentComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-194">このデザイナーの親コンポーネントを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-194">Gets the parent component for this designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9f3d-195">このデザイナーの親コンポーネント。このデザイナーがルート コンポーネントでない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-195">The parent component for this designer, or <see langword="null" /> if this designer is the root component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-196">このプロパティがデザイナー内で親リレーションシップを検出するための一般的なメカニズムを提供し、によって使用される、<xref:System.ComponentModel.Design.ComponentDesigner>オブジェクトの<xref:System.ComponentModel.Design.ITreeDesigner>インターフェイスの実装です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-196">This property provides a generic mechanism for discovering parent relationships within designers, and is used by the <xref:System.ComponentModel.Design.ComponentDesigner> object's <xref:System.ComponentModel.Design.ITreeDesigner> interface implementation.</span></span> <span data-ttu-id="e9f3d-197">このプロパティが返すのみ`null`ルート コンポーネントがこのデザイナーの場合。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-197">This property should only return `null` when this designer is the root component.</span></span> <span data-ttu-id="e9f3d-198">このプロパティの既定の実装がルート コンポーネントではないすべてのコンポーネントのルート要素を返し、返します`null`ルート コンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-198">The default implementation of this property returns the root component for all components that are not the root component, and it returns `null` for the root component.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="e9f3d-199">コンポーネントのクラスの属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-199">The attributes for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-200">デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性から、項目を変更または削除できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-200">Allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-201">このメソッドを変更またはを通じて公開される属性のディクショナリ内の項目を削除する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-201">This method provides a way to change or remove the items within the dictionary of attributes that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="e9f3d-202">属性のディクショナリのキーの値を指定して、属性の型識別子は、その<xref:System.Attribute.TypeId%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-202">The keys in the dictionary of attributes are the type identifiers of the attributes, as specified by the value of their <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="e9f3d-203">オブジェクトの型が<xref:System.ComponentModel.PropertyDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-203">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="e9f3d-204">このメソッドは、直後後に呼び出される、<xref:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-204">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e9f3d-205">
            <para>を通じてアクセス可能なディクショナリは、直接フィルター処理、<paramref name="attributes" />パラメーター、またはすることができます変更しないままです。このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に、基底の実装を呼び出します。さらに、必要がありますいない項目を削除するには<see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" />メソッドです。代わりに、アイテムを非表示にする属性を変更します。内の項目を削除することも、<see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" />メソッドです。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-205">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation after you perform your own filtering. In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" /> method. Instead, change attributes to hide items. You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="e9f3d-206">コンポーネントのクラスのイベント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-206">The events for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-207">デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントから、項目を変更または削除できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-207">Allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-208">このメソッドを変更またはイベントを通じて公開されるは、ディクショナリ内の項目を削除する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-208">This method provides a way to change or remove the items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="e9f3d-209">イベントのディクショナリのキーは、イベントの名前です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-209">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="e9f3d-210">オブジェクトの型が<xref:System.ComponentModel.PropertyDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-210">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="e9f3d-211">このメソッドは、直後後に呼び出される、<xref:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-211">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e9f3d-212">
            <para>を通じてアクセス可能なディクショナリは、直接フィルター処理、<paramref name="events" />パラメーター、またはすることができます変更しないままです。このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に、基底の実装を呼び出します。さらに、必要がありますいない項目を削除するには<see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" />メソッドです。代わりに、アイテムを非表示にする属性を変更します。内の項目を削除することも、<see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" />メソッドです。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-212">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation after you perform your own filtering. In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" /> method. Instead, change attributes to hide items. You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="e9f3d-213">コンポーネントのクラスのプロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-213">The properties for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-214">デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティから、項目を変更または削除できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-214">Allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-215">このメソッドを変更またはを通じて公開されるプロパティのディクショナリ内の項目を削除する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-215">This method provides a way to change or remove the items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="e9f3d-216">プロパティのディクショナリのキーは、プロパティの名前です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-216">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="e9f3d-217">オブジェクトの型が<xref:System.ComponentModel.PropertyDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-217">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="e9f3d-218">このメソッドは、直後後に呼び出される、<xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-218">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e9f3d-219">
            <para>を通じてアクセス可能なディクショナリは、直接フィルター処理、<paramref name="properties" />パラメーター、またはすることができます変更しないままです。このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に、基底の実装を呼び出します。さらに、必要がありますいない項目を削除するには<see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" />メソッドです。代わりに、アイテムを非表示にする属性を変更します。内の項目を削除することも、<see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" />メソッドです。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-219">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation after you perform your own filtering. In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" /> method. Instead, change attributes to hide items. You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="e9f3d-220">コンポーネントのクラスの属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-220">The attributes for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-221">デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性に項目を追加できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-221">Allows a designer to add to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-222">このメソッドは、デザイナーがを通じて公開される属性のディクショナリに項目を追加する方法を提供する<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-222">This method provides a way to add items to the dictionary of attributes that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="e9f3d-223">属性のディクショナリのキーの値を指定して、属性の型識別子は、その<xref:System.Attribute.TypeId%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-223">The keys in the dictionary of attributes are the type identifiers of the attributes, as specified by the value of their <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="e9f3d-224">オブジェクトの型が<xref:System.ComponentModel.PropertyDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-224">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="e9f3d-225">このメソッドは、直前に呼び出されますが、<xref:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-225">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e9f3d-226">
            <para>を通じてアクセスできる、ディクショナリを直接変更することができます、<paramref name="attributes" />パラメーター、またはすることができます変更しないままです。このメソッドをオーバーライドする場合は、独自のフィルター処理を実行する前に、基本実装を呼び出します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-226">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="e9f3d-227">コンポーネントのクラスのイベント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-227">The events for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-228">デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントに項目を追加できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-228">Allows a designer to add to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-229">このメソッドを通じて、デザイナーが公開するイベントのディクショナリに項目を追加する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-229">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="e9f3d-230">イベントのディクショナリのキーは、イベントの名前です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-230">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="e9f3d-231">オブジェクトの型が<xref:System.ComponentModel.PropertyDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-231">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="e9f3d-232">このメソッドは、直前に呼び出されますが、<xref:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-232">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e9f3d-233">
            <para>を通じてアクセスできる、ディクショナリを直接変更することができます、<paramref name="events" />パラメーター、またはすることができます変更しないままです。このメソッドをオーバーライドする場合は、独自のフィルター処理を実行する前に、基本実装を呼び出します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-233">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="e9f3d-234">コンポーネントのクラスのプロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-234">The properties for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-235">デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティに項目を追加できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-235">Allows a designer to add to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-236">このメソッドは、デザイナーがを通じて公開されるプロパティのディクショナリに項目を追加する方法を提供する<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-236">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="e9f3d-237">プロパティのディクショナリのキーは、プロパティの名前です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-237">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="e9f3d-238">オブジェクトの型が<xref:System.ComponentModel.PropertyDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-238">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="e9f3d-239">このメソッドは、直前に呼び出されますが、<xref:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-239">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e9f3d-240">
            <para>を通じてアクセスできる、ディクショナリを直接変更することができます、<paramref name="properties" />パラメーター、またはすることができます変更しないままです。このメソッドをオーバーライドする場合は、独自のフィルター処理を実行する前に、基本実装を呼び出します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-240">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanged">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanged (System.ComponentModel.MemberDescriptor member, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanged(class System.ComponentModel.MemberDescriptor member, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseComponentChanged (member As MemberDescriptor, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseComponentChanged(System::ComponentModel::MemberDescriptor ^ member, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.RaiseComponentChanged : System.ComponentModel.MemberDescriptor * obj * obj -&gt; unit" Usage="componentDesigner.RaiseComponentChanged (member, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="e9f3d-241">変更されたメンバーを示す <see cref="T:System.ComponentModel.MemberDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-241">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that has been changed.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="e9f3d-242">変更前のメンバーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-242">The old value of the member.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="e9f3d-243">変更後のメンバーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-243">The new value of the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-244">コンポーネントが変更されたことを <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> に通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-244">Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-245">によって提供されるアクセサーではなくとコンポーネントのプロパティに直接影響する場合にのみ、このメソッドを呼び出す<xref:System.ComponentModel.MemberDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-245">Call this method only when you affect component properties directly and not through the accessors provided by <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanging">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanging (System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanging(class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseComponentChanging (member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseComponentChanging(System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="member this.RaiseComponentChanging : System.ComponentModel.MemberDescriptor -&gt; unit" Usage="componentDesigner.RaiseComponentChanging member" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="e9f3d-246">変更されようとしているメンバーを示す <see cref="T:System.ComponentModel.MemberDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-246">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that is about to be changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-247">コンポーネントが変更されようとしていることを <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> に通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-247">Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component is about to be changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-248">によって提供されるアクセサーではなくとコンポーネントのプロパティに直接影響する場合にのみ、このメソッドを呼び出す<xref:System.ComponentModel.MemberDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-248">Call this method only when you affect component properties directly and not through accessors provided by <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShadowProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection ShadowProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ComponentDesigner/ShadowPropertyCollection ShadowProperties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ShadowProperties As ComponentDesigner.ShadowPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ComponentDesigner::ShadowPropertyCollection ^ ShadowProperties { System::ComponentModel::Design::ComponentDesigner::ShadowPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ShadowProperties : System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" Usage="System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentDesigner+ShadowPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-249">ユーザー設定値をオーバーライドするプロパティ値のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-249">Gets a collection of property values that override user settings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9f3d-250">デザイン ドキュメントのシャドウ プロパティを示す <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-250">A <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> that indicates the shadow properties of the design document.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PostFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PostFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="e9f3d-251">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-251">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="e9f3d-252">属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-252">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-253">このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-253">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-254">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-254">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e9f3d-255">これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-255">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterEvents (events As IDictionary) Implements IDesignerFilter.PostFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PostFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="e9f3d-256">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-256">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="e9f3d-257">イベントのディクショナリ内でのキーは、イベント名です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-257">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-258">このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-258">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-259">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-259">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e9f3d-260">これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-260">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterProperties (properties As IDictionary) Implements IDesignerFilter.PostFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PostFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="e9f3d-261">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-261">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="e9f3d-262">プロパティのディクショナリ内でのキーは、プロパティ名です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-262">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-263">このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-263">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-264">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-264">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e9f3d-265">これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-265">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PreFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PreFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="e9f3d-266">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-266">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="e9f3d-267">属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-267">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-268">このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-268">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-269">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-269">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e9f3d-270">これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-270">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterEvents (events As IDictionary) Implements IDesignerFilter.PreFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PreFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="e9f3d-271">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-271">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="e9f3d-272">イベントのディクショナリ内でのキーは、イベント名です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-272">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-273">このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-273">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-274">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-274">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e9f3d-275">これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-275">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterProperties (properties As IDictionary) Implements IDesignerFilter.PreFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PreFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="e9f3d-276">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-276">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="e9f3d-277">プロパティのディクショナリ内でのキーは、プロパティ名です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-277">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9f3d-278">このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-278">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-279">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-279">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e9f3d-280">これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-280">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Children">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Children As ICollection Implements ITreeDesigner.Children" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.ComponentModel.Design.ITreeDesigner.Children { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.ComponentDesigner.System.ComponentModel.Design.ITreeDesigner.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-281">このメンバーの説明については、<see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> プロパティを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-281">For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9f3d-282">現在の親デザイナーに格納された <see cref="T:System.Collections.ICollection" /> デザイナーのコレクションを含む <see cref="T:System.ComponentModel.Design.IDesigner" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-282">An <see cref="T:System.Collections.ICollection" /> that contains the collection of <see cref="T:System.ComponentModel.Design.IDesigner" /> designers contained in the current parent designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-283">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-283">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e9f3d-284">これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.ITreeDesigner> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-284">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.ITreeDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Parent">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Parent As IDesigner Implements ITreeDesigner.Parent" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::IDesigner ^ System.ComponentModel.Design.ITreeDesigner.Parent { System::ComponentModel::Design::IDesigner ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.ComponentDesigner.System.ComponentModel.Design.ITreeDesigner.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-285">このメンバーの説明については、<see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> プロパティを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-285">For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9f3d-286">親デザイナーを表す <see cref="T:System.ComponentModel.Design.IDesigner" />。または、親がないときは <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-286">An <see cref="T:System.ComponentModel.Design.IDesigner" /> representing the parent designer, or <see langword="null" /> if there is no parent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-287">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e9f3d-288">これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.ITreeDesigner> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-288">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.ITreeDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.ComponentModel.Design.DesignerVerbCollection" Usage="System.ComponentModel.Design.ComponentDesigner.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9f3d-289">デサイナに関連付けられているコンポーネントがサポートしているデザイン時の動詞を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-289">Gets the design-time verbs supported by the component that is associated with the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9f3d-290">
            <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> オブジェクトの <see cref="T:System.ComponentModel.Design.DesignerVerb" />。デザイナー動詞がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-290">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects, or <see langword="null" /> if no designer verbs are available.</span>
          </span>
          <span data-ttu-id="e9f3d-291">この既定の実装は、常に <see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9f3d-291">This default implementation always returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9f3d-292">このメソッドが戻る`null`コンポーネントには、デザイン時の動詞があるない場合。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-292">This method returns `null` if the component has no design-time verbs.</span></span>  
  
 <span data-ttu-id="e9f3d-293">通常、デザイン時環境には、(右クリック) のショートカット メニューでこのメソッドによって返される動詞が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-293">The design-time environment typically displays verbs returned by this method in a shortcut (right-click) menu.</span></span> <span data-ttu-id="e9f3d-294">ユーザーは、動詞のいずれかを選択したときに、<xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>メソッドの対応する<xref:System.ComponentModel.Design.DesignerVerb>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-294">When a user selects one of the verbs, the <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method of the corresponding <xref:System.ComponentModel.Design.DesignerVerb> is invoked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9f3d-295">通常、デザイン時環境を提供します、**プロパティ**コンポーネントのショートカット メニューのコマンド。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-295">A design-time environment typically provides a **Properties** command on a component's shortcut menu.</span></span> <span data-ttu-id="e9f3d-296">そのため、このようなエントリは、デザイナーが指定した動詞のコレクションには含めないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="e9f3d-296">Therefore, do not include such an entry in the collection of designer-specified verbs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
  </Members>
</Type>