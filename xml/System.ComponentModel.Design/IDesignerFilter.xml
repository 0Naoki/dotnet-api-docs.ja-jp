<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37922b851425bf4cdf3e90c34d8602cbe6265dfc" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70614184" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>コンポーネント デザイナーがデザイン時環境に対して公開できるプロパティ、属性、イベントの各記述子を格納する <see cref="T:System.ComponentModel.TypeDescriptor" /> のディクショナリにデザイナーがアクセスし、フィルター処理を実行できるようにするインターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerFilter>デザイナーが、関連するコンポーネントがを<xref:System.ComponentModel.TypeDescriptor>通じて公開するプロパティ、属性、およびイベント記述子のセットをフィルター処理できるようにします。 名前がで`Pre`始まるこのインターフェイスのメソッドは、名前がで`Post`始まるメソッドの直前に呼び出されます。  
  
 属性、イベント、またはプロパティ記述子を追加する場合は、、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A> <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>、または<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>メソッドを使用します。  
  
 属性、イベント、またはプロパティの記述子を変更または削除する場合は<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>、 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>、、 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>またはメソッドを使用します。  
  
   
  
## Examples  
 次の例は、デザイン時<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>にデザイナーのコントロールが選択されたときに、デザイナーのプロパティをプロパティウィンドウに追加するのオーバーライドを示しています。 インターフェイス <xref:System.ComponentModel.Design.IDesignerFilter> を使用する完全<xref:System.Windows.Forms.Design.ControlDesigner>なデザイナーの例については、クラスの例を参照してください。  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。 属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性の項目を変更または削除できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、このインターフェイスを実装しているデザイナーの関連コンポーネントがを<xref:System.ComponentModel.TypeDescriptor>通じて公開する属性のディクショナリ内の項目を変更または削除する手段を提供します。  
  
 属性のディクショナリ内のキーは、属性の型 Id です。 オブジェクトの型<xref:System.Attribute>はです。 このメソッドは、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>の直後に呼び出されます。  
  
 属性の型 ID には、任意のオブジェクトを指定できます。 既定では<xref:System.Attribute> 、は<xref:System.Type>その<xref:System.Attribute.TypeId%2A>プロパティの値としてを返します。 Dictionary の属性の<xref:System.Attribute.TypeId%2A>うち、属性で認識<xref:System.Attribute.TypeId%2A>されているものと等しいかどうかを確認したり、 <xref:System.Reflection>を使用して属性オブジェクト自体を識別したりできます。  
  
 既存の属性または継承さ<xref:System.Attribute.TypeId%2A>れた属性と同じ属性がコンポーネントに追加されると、新しい属性によって古い属性が置き換えられます。 多くの属性では、同じ型の新しい属性によって、型の以前の属性が置き換えられます。 ただし、属性の種類によって<xref:System.Attribute.TypeId%2A>は、属性を選択的に区別するが返されます。 たとえば、 <xref:System.ComponentModel.Design.IRootDesigner> <xref:System.ComponentModel.DesignerAttribute>やなどの型に対して、さまざまな種類の同時アクティブ化デザイナーを提供するために、クラスは、 <xref:System.Attribute.TypeId%2A>属性と基本デザイナーの両方を一意に識別するを返します。 <xref:System.ComponentModel.Design.IDesigner>各種. コンストラクターを使用すると、特定の型に加えてデザイナーの基本デザイナー型を指定し<xref:System.ComponentModel.DesignerAttribute> 、これを<xref:System.Attribute.TypeId%2A>反映するを返すことができます。 <xref:System.ComponentModel.DesignerAttribute> したがって、既存<xref:System.ComponentModel.DesignerAttribute> <xref:System.ComponentModel.DesignerAttribute>のの基本デザイナー型と同じ型の基本デザイナー型を使用して新しいを追加すると、古い属性が新しい属性に置き換えられます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><paramref name="attributes" />パラメーターを使用してアクセスできるディクショナリを直接フィルター処理することも、変更せずに残すこともできます。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に基本実装を呼び出します。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。 イベントのディクショナリ内でのキーは、イベント名です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントの項目を変更または削除できるようになります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、を<xref:System.ComponentModel.TypeDescriptor>通じて公開されるイベントのディクショナリ内の項目を変更または削除する手段を提供します。  
  
 イベントのディクショナリ内のキーは、イベントの名前です。 オブジェクトの型<xref:System.ComponentModel.EventDescriptor>はです。 このメソッドは、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>の直後に呼び出されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><paramref name="events" />パラメーターを使用してアクセスできるディクショナリを直接フィルター処理することも、変更せずに残すこともできます。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に基本実装を呼び出します。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。 プロパティのディクショナリ内でのキーは、プロパティ名です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティの項目を変更または削除できるようになります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、を<xref:System.ComponentModel.TypeDescriptor>通じて公開されるプロパティのディクショナリ内の項目を変更または削除する手段を提供します。  
  
 プロパティのディクショナリ内のキーは、プロパティの名前です。 オブジェクトの型<xref:System.ComponentModel.PropertyDescriptor>はです。 このメソッドは、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>の直後に呼び出されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><paramref name="properties" />パラメーターを使用してアクセスできるディクショナリを直接フィルター処理することも、変更せずに残すこともできます。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に基本実装を呼び出します。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。 属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性に項目を追加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、このインターフェイスを実装するデザイナーの関連コンポーネントがを<xref:System.ComponentModel.TypeDescriptor>通じて公開する属性のディクショナリに項目を追加する方法を提供します。  
  
 属性のディクショナリ内のキーは、属性の型 Id です。 オブジェクトの型<xref:System.Attribute>はです。 このメソッドは<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>、の直前に呼び出されます。  
  
 属性の型 ID には、任意のオブジェクトを指定できます。 既定では<xref:System.Attribute> 、は<xref:System.Type>その<xref:System.Attribute.TypeId%2A>プロパティの値としてを返します。 Dictionary の属性の<xref:System.Attribute.TypeId%2A>うち、属性で認識<xref:System.Attribute.TypeId%2A>されているものと等しいかどうかを確認したり、 <xref:System.Reflection>を使用して属性オブジェクト自体を識別したりできます。  
  
 既存の属性または継承さ<xref:System.Attribute.TypeId%2A>れた属性と同じ属性がコンポーネントに追加されると、新しい属性によって古い属性が置き換えられます。 多くの属性では、同じ型の新しい属性によって、型の以前の属性が置き換えられます。 ただし、属性の種類によって<xref:System.Attribute.TypeId%2A>は、属性を選択的に区別するが返されます。 たとえば、 <xref:System.ComponentModel.Design.IRootDesigner> <xref:System.ComponentModel.DesignerAttribute>やなどの型に対して、さまざまな種類の同時アクティブ化デザイナーを提供するために、クラスは、 <xref:System.Attribute.TypeId%2A>属性と基本デザイナーの両方を一意に識別するを返します。 <xref:System.ComponentModel.Design.IDesigner>各種. コンストラクターを使用すると、特定の型に加えてデザイナーの基本デザイナー型を指定し<xref:System.ComponentModel.DesignerAttribute> 、これを<xref:System.Attribute.TypeId%2A>反映するを返すことができます。 <xref:System.ComponentModel.DesignerAttribute> したがって、既存<xref:System.ComponentModel.DesignerAttribute> <xref:System.ComponentModel.DesignerAttribute>のの基本デザイナー型と同じ型の基本デザイナー型を使用して新しいを追加すると、古い属性が新しい属性に置き換えられます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><paramref name="attributes" />パラメーターを使用してアクセスできるディクショナリを直接フィルター処理することも、変更せずに残すこともできます。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に基本実装を呼び出します。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。 イベントのディクショナリ内でのキーは、イベント名です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントに項目を追加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、デザイナーがを<xref:System.ComponentModel.TypeDescriptor>通じて公開するイベントのディクショナリに項目を追加する方法を提供します。  
  
 イベントのディクショナリ内のキーは、イベントの名前です。 オブジェクトの型<xref:System.ComponentModel.EventDescriptor>はです。 このメソッドは<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>、の直前に呼び出されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><paramref name="events" />パラメーターを使用してアクセスできるディクショナリを直接変更することも、変更せずに残しておくこともできます。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行する前に基本実装を呼び出します。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。 プロパティのディクショナリ内でのキーは、プロパティ名です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティに項目を追加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、デザイナーがを<xref:System.ComponentModel.TypeDescriptor>通じて公開するプロパティのディクショナリに項目を追加する方法を提供します。  
  
 プロパティのディクショナリ内のキーは、プロパティの名前です。 オブジェクトの型<xref:System.ComponentModel.PropertyDescriptor>はです。 このメソッドは<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>、の直前に呼び出されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><paramref name="properties" />パラメーターを使用してアクセスできるディクショナリを直接変更することも、変更せずに残しておくこともできます。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行する前に基本実装を呼び出します。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>
