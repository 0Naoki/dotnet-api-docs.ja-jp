<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="805c7cd0acdb03070f0db4f5eea4cf81ee1b03b9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369536" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>コンポーネント デザイナーがデザイン時環境に対して公開できるプロパティ、属性、イベントの各記述子を格納する <see cref="T:System.ComponentModel.TypeDescriptor" /> のディクショナリにデザイナーがアクセスし、フィルター処理を実行できるようにするインターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerFilter> デザイナーを通じてその関連コンポーネントが公開されるプロパティ、属性、およびイベントの記述子のセットをフィルター処理できるように、<xref:System.ComponentModel.TypeDescriptor>です。 このインターフェイスのメソッドを名前で始まる`Pre`メソッドの名前が始まる直前に呼び出されます`Post`です。  
  
 属性、イベント、またはプロパティ記述子を追加する場合は、使用、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>、または<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>メソッドです。  
  
 変更または削除する属性、イベント、またはプロパティ記述子を使用する場合、 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>、 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>、または<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>メソッドです。  
  
   
  
## Examples  
 次の例では、オーバーライド<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>デザイナーのコントロールをデザイン時に選択すると、プロパティ ウィンドウにデザイナーのプロパティを追加します。 例を参照して、<xref:System.Windows.Forms.Design.ControlDesigner>させるためにデザイナーを使用するクラス、<xref:System.ComponentModel.Design.IDesignerFilter>インターフェイスです。  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。 属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性の項目を変更または削除できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを変更またはを介してこのインターフェイスを実装しているデザイナーの関連付けられているコンポーネントが公開される属性のディクショナリ内の項目を削除する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>です。  
  
 属性のディクショナリのキーは、属性の型の Id です。 オブジェクトの型が<xref:System.Attribute>です。 このメソッドは、直後後に呼び出される<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>です。  
  
 属性の型 ID は、任意のオブジェクトをすることができます。 既定では、<xref:System.Attribute>を返します、<xref:System.Type>の値としてその<xref:System.Attribute.TypeId%2A>プロパティです。 チェックすることができます、<xref:System.Attribute.TypeId%2A>既知と同等のディクショナリ内の属性の<xref:System.Attribute.TypeId%2A>を指定するか、またはを使用して、属性の<xref:System.Reflection>属性オブジェクト自体を識別します。  
  
 ときに属性を同じ<xref:System.Attribute.TypeId%2A>古い属性が、この新しい属性に置き換えられますコンポーネントに、既存または継承された属性が追加されるため、します。 多くの属性は、型の以前の属性が同じ型の新しい属性に置き換わります。 ただし、一部の属性の型を返す、<xref:System.Attribute.TypeId%2A>属性を選択的に区別されます。 例については、型の場合など、さまざまな種類の同時にアクティブなデザイナーを提供するために、<xref:System.ComponentModel.Design.IRootDesigner>と<xref:System.ComponentModel.Design.IDesigner>、<xref:System.ComponentModel.DesignerAttribute>クラスを返します、<xref:System.Attribute.TypeId%2A>属性と基本デザイナー型の両方を一意に識別します。 <xref:System.ComponentModel.DesignerAttribute>コンス トラクターを使用するだけでなく、特定の型では、デザイナーのデザイナー ベースの種類を指定し、<xref:System.ComponentModel.DesignerAttribute>を返します、<xref:System.Attribute.TypeId%2A>これを反映します。 したがってを追加すると、新しい<xref:System.ComponentModel.DesignerAttribute>を既存の基本デザイナー型と同じ型の基本デザイナー型<xref:System.ComponentModel.DesignerAttribute>、古い属性が、この新しい属性に置き換えられます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>を通じてアクセス可能なディクショナリは、直接フィルター処理、<paramref name="attributes" />パラメーター、またはすることができます変更しないままです。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に、基本実装を呼び出します。</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。 イベントのディクショナリ内でのキーは、イベント名です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントの項目を変更または削除できるようになります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを変更またはを通じて公開されているイベントのディクショナリ内の項目を削除する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>です。  
  
 イベントのディクショナリのキーは、イベントの名前です。 オブジェクトの型が<xref:System.ComponentModel.EventDescriptor>です。 このメソッドは、直後後に呼び出される<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>を通じてアクセス可能なディクショナリは、直接フィルター処理、<paramref name="events" />パラメーター、またはすることができます変更しないままです。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に、基本実装を呼び出します。</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。 プロパティのディクショナリ内でのキーは、プロパティ名です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティの項目を変更または削除できるようになります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを変更またはを通じて公開されるプロパティのディクショナリ内の項目を削除する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>です。  
  
 プロパティのディクショナリのキーは、プロパティの名前です。 オブジェクトの型が<xref:System.ComponentModel.PropertyDescriptor>です。 このメソッドは、直後後に呼び出される<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>を通じてアクセス可能なディクショナリは、直接フィルター処理、<paramref name="properties" />パラメーター、またはすることができます変更しないままです。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に、基本実装を呼び出します。</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。 属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性に項目を追加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、このインターフェイスを実装しているデザイナーの関連付けられているコンポーネントがを通じて公開される属性のディクショナリに項目を追加する、<xref:System.ComponentModel.TypeDescriptor>です。  
  
 属性のディクショナリのキーは、属性の型の Id です。 オブジェクトの型が<xref:System.Attribute>です。 このメソッドは、直前に呼び出されます<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>です。  
  
 属性の型 ID は、任意のオブジェクトをすることができます。 既定では、<xref:System.Attribute>を返します、<xref:System.Type>の値としてその<xref:System.Attribute.TypeId%2A>プロパティです。 チェックすることができます、<xref:System.Attribute.TypeId%2A>既知と同等のディクショナリ内の属性の<xref:System.Attribute.TypeId%2A>を指定するか、またはを使用して、属性の<xref:System.Reflection>属性オブジェクト自体を識別します。  
  
 ときに属性を同じ<xref:System.Attribute.TypeId%2A>古い属性が、この新しい属性に置き換えられますコンポーネントに、既存または継承された属性が追加されるため、します。 多くの属性は、型の以前の属性が同じ型の新しい属性に置き換わります。 ただし、一部の属性の型を返す、<xref:System.Attribute.TypeId%2A>属性を選択的に区別されます。 例については、型の場合など、さまざまな種類の同時にアクティブなデザイナーを提供するために、<xref:System.ComponentModel.Design.IRootDesigner>と<xref:System.ComponentModel.Design.IDesigner>、<xref:System.ComponentModel.DesignerAttribute>クラスを返します、<xref:System.Attribute.TypeId%2A>属性と基本デザイナー型の両方を一意に識別します。 <xref:System.ComponentModel.DesignerAttribute>コンス トラクターを使用するだけでなく、特定の型では、デザイナーのデザイナー ベースの種類を指定し、<xref:System.ComponentModel.DesignerAttribute>を返します、<xref:System.Attribute.TypeId%2A>これを反映します。 したがってを追加すると、新しい<xref:System.ComponentModel.DesignerAttribute>を既存の基本デザイナー型と同じ型の基本デザイナー型<xref:System.ComponentModel.DesignerAttribute>、古い属性が、この新しい属性に置き換えられます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>を通じてアクセス可能なディクショナリは、直接フィルター処理、<paramref name="attributes" />パラメーター、またはすることができます変更しないままです。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に、基本実装を呼び出します。</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。 イベントのディクショナリ内でのキーは、イベント名です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントに項目を追加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを通じて、デザイナーが公開するイベントのディクショナリに項目を追加する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>です。  
  
 イベントのディクショナリのキーは、イベントの名前です。 オブジェクトの型が<xref:System.ComponentModel.EventDescriptor>です。 このメソッドは、直前に呼び出されます<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>を通じてアクセスできる、ディクショナリを直接変更することができます、<paramref name="events" />パラメーター、またはすることができます変更しないままです。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行する前に、基底の実装を呼び出します。</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。 プロパティのディクショナリ内でのキーは、プロパティ名です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティに項目を追加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、デザイナーがを通じて公開されるプロパティのディクショナリに項目を追加する方法を提供する<xref:System.ComponentModel.TypeDescriptor>です。  
  
 プロパティのディクショナリのキーは、プロパティの名前です。 オブジェクトの型が<xref:System.ComponentModel.PropertyDescriptor>です。 このメソッドは、直前に呼び出されます<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>を通じてアクセスできる、ディクショナリを直接変更することができます、<paramref name="properties" />パラメーター、またはすることができます変更しないままです。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行する前に、基底の実装を呼び出します。</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>