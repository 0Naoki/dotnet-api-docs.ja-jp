<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37922b851425bf4cdf3e90c34d8602cbe6265dfc" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70614184" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="47419-101">コンポーネント デザイナーがデザイン時環境に対して公開できるプロパティ、属性、イベントの各記述子を格納する <see cref="T:System.ComponentModel.TypeDescriptor" /> のディクショナリにデザイナーがアクセスし、フィルター処理を実行できるようにするインターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="47419-101">Provides an interface that enables a designer to access and filter the dictionaries of a <see cref="T:System.ComponentModel.TypeDescriptor" /> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47419-102"><xref:System.ComponentModel.Design.IDesignerFilter>デザイナーが、関連するコンポーネントがを<xref:System.ComponentModel.TypeDescriptor>通じて公開するプロパティ、属性、およびイベント記述子のセットをフィルター処理できるようにします。</span><span class="sxs-lookup"><span data-stu-id="47419-102"><xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="47419-103">名前がで`Pre`始まるこのインターフェイスのメソッドは、名前がで`Post`始まるメソッドの直前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="47419-103">The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.</span></span>  
  
 <span data-ttu-id="47419-104">属性、イベント、またはプロパティ記述子を追加する場合は、、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A> <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>、または<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="47419-104">If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.</span></span>  
  
 <span data-ttu-id="47419-105">属性、イベント、またはプロパティの記述子を変更または削除する場合は<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>、 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>、、 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>またはメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="47419-105">If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47419-106">次の例は、デザイン時<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>にデザイナーのコントロールが選択されたときに、デザイナーのプロパティをプロパティウィンドウに追加するのオーバーライドを示しています。</span><span class="sxs-lookup"><span data-stu-id="47419-106">The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time.</span></span> <span data-ttu-id="47419-107">インターフェイス <xref:System.ComponentModel.Design.IDesignerFilter> を使用する完全<xref:System.Windows.Forms.Design.ControlDesigner>なデザイナーの例については、クラスの例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="47419-107">See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="47419-108">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47419-108">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="47419-109">属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="47419-109">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="47419-110">派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性の項目を変更または削除できるようにします。</span><span class="sxs-lookup"><span data-stu-id="47419-110">When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47419-111">このメソッドは、このインターフェイスを実装しているデザイナーの関連コンポーネントがを<xref:System.ComponentModel.TypeDescriptor>通じて公開する属性のディクショナリ内の項目を変更または削除する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="47419-111">This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="47419-112">属性のディクショナリ内のキーは、属性の型 Id です。</span><span class="sxs-lookup"><span data-stu-id="47419-112">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="47419-113">オブジェクトの型<xref:System.Attribute>はです。</span><span class="sxs-lookup"><span data-stu-id="47419-113">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="47419-114">このメソッドは、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>の直後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="47419-114">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="47419-115">属性の型 ID には、任意のオブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="47419-115">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="47419-116">既定では<xref:System.Attribute> 、は<xref:System.Type>その<xref:System.Attribute.TypeId%2A>プロパティの値としてを返します。</span><span class="sxs-lookup"><span data-stu-id="47419-116">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="47419-117">Dictionary の属性の<xref:System.Attribute.TypeId%2A>うち、属性で認識<xref:System.Attribute.TypeId%2A>されているものと等しいかどうかを確認したり、 <xref:System.Reflection>を使用して属性オブジェクト自体を識別したりできます。</span><span class="sxs-lookup"><span data-stu-id="47419-117">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="47419-118">既存の属性または継承さ<xref:System.Attribute.TypeId%2A>れた属性と同じ属性がコンポーネントに追加されると、新しい属性によって古い属性が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="47419-118">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="47419-119">多くの属性では、同じ型の新しい属性によって、型の以前の属性が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="47419-119">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="47419-120">ただし、属性の種類によって<xref:System.Attribute.TypeId%2A>は、属性を選択的に区別するが返されます。</span><span class="sxs-lookup"><span data-stu-id="47419-120">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="47419-121">たとえば、 <xref:System.ComponentModel.Design.IRootDesigner> <xref:System.ComponentModel.DesignerAttribute>やなどの型に対して、さまざまな種類の同時アクティブ化デザイナーを提供するために、クラスは、 <xref:System.Attribute.TypeId%2A>属性と基本デザイナーの両方を一意に識別するを返します。 <xref:System.ComponentModel.Design.IDesigner>各種.</span><span class="sxs-lookup"><span data-stu-id="47419-121">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="47419-122">コンストラクターを使用すると、特定の型に加えてデザイナーの基本デザイナー型を指定し<xref:System.ComponentModel.DesignerAttribute> 、これを<xref:System.Attribute.TypeId%2A>反映するを返すことができます。 <xref:System.ComponentModel.DesignerAttribute></span><span class="sxs-lookup"><span data-stu-id="47419-122">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="47419-123">したがって、既存<xref:System.ComponentModel.DesignerAttribute> <xref:System.ComponentModel.DesignerAttribute>のの基本デザイナー型と同じ型の基本デザイナー型を使用して新しいを追加すると、古い属性が新しい属性に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="47419-123">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47419-124"><paramref name="attributes" />パラメーターを使用してアクセスできるディクショナリを直接フィルター処理することも、変更せずに残すこともできます。</span><span class="sxs-lookup"><span data-stu-id="47419-124">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="47419-125">このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に基本実装を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="47419-125">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="47419-126">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47419-126">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="47419-127">イベントのディクショナリ内でのキーは、イベント名です。</span><span class="sxs-lookup"><span data-stu-id="47419-127">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="47419-128">派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントの項目を変更または削除できるようになります。</span><span class="sxs-lookup"><span data-stu-id="47419-128">When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47419-129">このメソッドは、を<xref:System.ComponentModel.TypeDescriptor>通じて公開されるイベントのディクショナリ内の項目を変更または削除する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="47419-129">This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="47419-130">イベントのディクショナリ内のキーは、イベントの名前です。</span><span class="sxs-lookup"><span data-stu-id="47419-130">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="47419-131">オブジェクトの型<xref:System.ComponentModel.EventDescriptor>はです。</span><span class="sxs-lookup"><span data-stu-id="47419-131">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="47419-132">このメソッドは、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>の直後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="47419-132">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47419-133"><paramref name="events" />パラメーターを使用してアクセスできるディクショナリを直接フィルター処理することも、変更せずに残すこともできます。</span><span class="sxs-lookup"><span data-stu-id="47419-133">You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="47419-134">このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に基本実装を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="47419-134">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="47419-135">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47419-135">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="47419-136">プロパティのディクショナリ内でのキーは、プロパティ名です。</span><span class="sxs-lookup"><span data-stu-id="47419-136">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="47419-137">派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティの項目を変更または削除できるようになります。</span><span class="sxs-lookup"><span data-stu-id="47419-137">When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47419-138">このメソッドは、を<xref:System.ComponentModel.TypeDescriptor>通じて公開されるプロパティのディクショナリ内の項目を変更または削除する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="47419-138">This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="47419-139">プロパティのディクショナリ内のキーは、プロパティの名前です。</span><span class="sxs-lookup"><span data-stu-id="47419-139">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="47419-140">オブジェクトの型<xref:System.ComponentModel.PropertyDescriptor>はです。</span><span class="sxs-lookup"><span data-stu-id="47419-140">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="47419-141">このメソッドは、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>の直後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="47419-141">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47419-142"><paramref name="properties" />パラメーターを使用してアクセスできるディクショナリを直接フィルター処理することも、変更せずに残すこともできます。</span><span class="sxs-lookup"><span data-stu-id="47419-142">You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="47419-143">このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に基本実装を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="47419-143">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="47419-144">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47419-144">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="47419-145">属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="47419-145">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="47419-146">派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性に項目を追加できるようにします。</span><span class="sxs-lookup"><span data-stu-id="47419-146">When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47419-147">このメソッドは、このインターフェイスを実装するデザイナーの関連コンポーネントがを<xref:System.ComponentModel.TypeDescriptor>通じて公開する属性のディクショナリに項目を追加する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="47419-147">This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="47419-148">属性のディクショナリ内のキーは、属性の型 Id です。</span><span class="sxs-lookup"><span data-stu-id="47419-148">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="47419-149">オブジェクトの型<xref:System.Attribute>はです。</span><span class="sxs-lookup"><span data-stu-id="47419-149">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="47419-150">このメソッドは<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>、の直前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="47419-150">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="47419-151">属性の型 ID には、任意のオブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="47419-151">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="47419-152">既定では<xref:System.Attribute> 、は<xref:System.Type>その<xref:System.Attribute.TypeId%2A>プロパティの値としてを返します。</span><span class="sxs-lookup"><span data-stu-id="47419-152">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="47419-153">Dictionary の属性の<xref:System.Attribute.TypeId%2A>うち、属性で認識<xref:System.Attribute.TypeId%2A>されているものと等しいかどうかを確認したり、 <xref:System.Reflection>を使用して属性オブジェクト自体を識別したりできます。</span><span class="sxs-lookup"><span data-stu-id="47419-153">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="47419-154">既存の属性または継承さ<xref:System.Attribute.TypeId%2A>れた属性と同じ属性がコンポーネントに追加されると、新しい属性によって古い属性が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="47419-154">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="47419-155">多くの属性では、同じ型の新しい属性によって、型の以前の属性が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="47419-155">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="47419-156">ただし、属性の種類によって<xref:System.Attribute.TypeId%2A>は、属性を選択的に区別するが返されます。</span><span class="sxs-lookup"><span data-stu-id="47419-156">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="47419-157">たとえば、 <xref:System.ComponentModel.Design.IRootDesigner> <xref:System.ComponentModel.DesignerAttribute>やなどの型に対して、さまざまな種類の同時アクティブ化デザイナーを提供するために、クラスは、 <xref:System.Attribute.TypeId%2A>属性と基本デザイナーの両方を一意に識別するを返します。 <xref:System.ComponentModel.Design.IDesigner>各種.</span><span class="sxs-lookup"><span data-stu-id="47419-157">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="47419-158">コンストラクターを使用すると、特定の型に加えてデザイナーの基本デザイナー型を指定し<xref:System.ComponentModel.DesignerAttribute> 、これを<xref:System.Attribute.TypeId%2A>反映するを返すことができます。 <xref:System.ComponentModel.DesignerAttribute></span><span class="sxs-lookup"><span data-stu-id="47419-158">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="47419-159">したがって、既存<xref:System.ComponentModel.DesignerAttribute> <xref:System.ComponentModel.DesignerAttribute>のの基本デザイナー型と同じ型の基本デザイナー型を使用して新しいを追加すると、古い属性が新しい属性に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="47419-159">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47419-160"><paramref name="attributes" />パラメーターを使用してアクセスできるディクショナリを直接フィルター処理することも、変更せずに残すこともできます。</span><span class="sxs-lookup"><span data-stu-id="47419-160">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="47419-161">このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に基本実装を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="47419-161">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="47419-162">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47419-162">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="47419-163">イベントのディクショナリ内でのキーは、イベント名です。</span><span class="sxs-lookup"><span data-stu-id="47419-163">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="47419-164">派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントに項目を追加できるようにします。</span><span class="sxs-lookup"><span data-stu-id="47419-164">When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47419-165">このメソッドは、デザイナーがを<xref:System.ComponentModel.TypeDescriptor>通じて公開するイベントのディクショナリに項目を追加する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="47419-165">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="47419-166">イベントのディクショナリ内のキーは、イベントの名前です。</span><span class="sxs-lookup"><span data-stu-id="47419-166">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="47419-167">オブジェクトの型<xref:System.ComponentModel.EventDescriptor>はです。</span><span class="sxs-lookup"><span data-stu-id="47419-167">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="47419-168">このメソッドは<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>、の直前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="47419-168">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47419-169"><paramref name="events" />パラメーターを使用してアクセスできるディクショナリを直接変更することも、変更せずに残しておくこともできます。</span><span class="sxs-lookup"><span data-stu-id="47419-169">You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="47419-170">このメソッドをオーバーライドする場合は、独自のフィルター処理を実行する前に基本実装を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="47419-170">If you are overriding this method, call the base implementation before you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="47419-171">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="47419-171">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="47419-172">プロパティのディクショナリ内でのキーは、プロパティ名です。</span><span class="sxs-lookup"><span data-stu-id="47419-172">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="47419-173">派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティに項目を追加できるようにします。</span><span class="sxs-lookup"><span data-stu-id="47419-173">When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47419-174">このメソッドは、デザイナーがを<xref:System.ComponentModel.TypeDescriptor>通じて公開するプロパティのディクショナリに項目を追加する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="47419-174">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="47419-175">プロパティのディクショナリ内のキーは、プロパティの名前です。</span><span class="sxs-lookup"><span data-stu-id="47419-175">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="47419-176">オブジェクトの型<xref:System.ComponentModel.PropertyDescriptor>はです。</span><span class="sxs-lookup"><span data-stu-id="47419-176">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="47419-177">このメソッドは<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>、の直前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="47419-177">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47419-178"><paramref name="properties" />パラメーターを使用してアクセスできるディクショナリを直接変更することも、変更せずに残しておくこともできます。</span><span class="sxs-lookup"><span data-stu-id="47419-178">You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="47419-179">このメソッドをオーバーライドする場合は、独自のフィルター処理を実行する前に基本実装を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="47419-179">If you are overriding this method, call the base implementation before you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>
