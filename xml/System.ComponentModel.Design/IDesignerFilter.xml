<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="805c7cd0acdb03070f0db4f5eea4cf81ee1b03b9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="89020-101">Provides an interface that enables a designer to access and filter the dictionaries of a <see cref="T:System.ComponentModel.TypeDescriptor" /> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</span>
      <span class="sxs-lookup">
        <span data-stu-id="89020-101">Provides an interface that enables a designer to access and filter the dictionaries of a <see cref="T:System.ComponentModel.TypeDescriptor" /> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-102"><xref:System.ComponentModel.Design.IDesignerFilter> デザイナーを通じてその関連コンポーネントが公開されるプロパティ、属性、およびイベントの記述子のセットをフィルター処理できるように、<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="89020-102"><xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="89020-103">このインターフェイスのメソッドを名前で始まる`Pre`メソッドの名前が始まる直前に呼び出されます`Post`です。</span><span class="sxs-lookup"><span data-stu-id="89020-103">The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.</span></span>  
  
 <span data-ttu-id="89020-104">属性、イベント、またはプロパティ記述子を追加する場合は、使用、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>、または<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="89020-104">If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.</span></span>  
  
 <span data-ttu-id="89020-105">変更または削除する属性、イベント、またはプロパティ記述子を使用する場合、 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>、 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>、または<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="89020-105">If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89020-106">次の例では、オーバーライド<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>デザイナーのコントロールをデザイン時に選択すると、プロパティ ウィンドウにデザイナーのプロパティを追加します。</span><span class="sxs-lookup"><span data-stu-id="89020-106">The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time.</span></span> <span data-ttu-id="89020-107">例を参照して、<xref:System.Windows.Forms.Design.ControlDesigner>させるためにデザイナーを使用するクラス、<xref:System.ComponentModel.Design.IDesignerFilter>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="89020-107">See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="89020-108">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-108">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="89020-109">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-109">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-110">When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-110">When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-111">このメソッドを変更またはを介してこのインターフェイスを実装しているデザイナーの関連付けられているコンポーネントが公開される属性のディクショナリ内の項目を削除する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="89020-111">This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="89020-112">属性のディクショナリのキーは、属性の型の Id です。</span><span class="sxs-lookup"><span data-stu-id="89020-112">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="89020-113">オブジェクトの型が<xref:System.Attribute>です。</span><span class="sxs-lookup"><span data-stu-id="89020-113">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="89020-114">このメソッドは、直後後に呼び出される<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>です。</span><span class="sxs-lookup"><span data-stu-id="89020-114">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="89020-115">属性の型 ID は、任意のオブジェクトをすることができます。</span><span class="sxs-lookup"><span data-stu-id="89020-115">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="89020-116">既定では、<xref:System.Attribute>を返します、<xref:System.Type>の値としてその<xref:System.Attribute.TypeId%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="89020-116">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="89020-117">チェックすることができます、<xref:System.Attribute.TypeId%2A>既知と同等のディクショナリ内の属性の<xref:System.Attribute.TypeId%2A>を指定するか、またはを使用して、属性の<xref:System.Reflection>属性オブジェクト自体を識別します。</span><span class="sxs-lookup"><span data-stu-id="89020-117">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="89020-118">ときに属性を同じ<xref:System.Attribute.TypeId%2A>古い属性が、この新しい属性に置き換えられますコンポーネントに、既存または継承された属性が追加されるため、します。</span><span class="sxs-lookup"><span data-stu-id="89020-118">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="89020-119">多くの属性は、型の以前の属性が同じ型の新しい属性に置き換わります。</span><span class="sxs-lookup"><span data-stu-id="89020-119">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="89020-120">ただし、一部の属性の型を返す、<xref:System.Attribute.TypeId%2A>属性を選択的に区別されます。</span><span class="sxs-lookup"><span data-stu-id="89020-120">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="89020-121">例については、型の場合など、さまざまな種類の同時にアクティブなデザイナーを提供するために、<xref:System.ComponentModel.Design.IRootDesigner>と<xref:System.ComponentModel.Design.IDesigner>、<xref:System.ComponentModel.DesignerAttribute>クラスを返します、<xref:System.Attribute.TypeId%2A>属性と基本デザイナー型の両方を一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="89020-121">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="89020-122"><xref:System.ComponentModel.DesignerAttribute>コンス トラクターを使用するだけでなく、特定の型では、デザイナーのデザイナー ベースの種類を指定し、<xref:System.ComponentModel.DesignerAttribute>を返します、<xref:System.Attribute.TypeId%2A>これを反映します。</span><span class="sxs-lookup"><span data-stu-id="89020-122">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="89020-123">したがってを追加すると、新しい<xref:System.ComponentModel.DesignerAttribute>を既存の基本デザイナー型と同じ型の基本デザイナー型<xref:System.ComponentModel.DesignerAttribute>、古い属性が、この新しい属性に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="89020-123">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="89020-124">を通じてアクセス可能なディクショナリは、直接フィルター処理、<paramref name="attributes" />パラメーター、またはすることができます変更しないままです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="89020-124">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span>
            </span>
            <span data-ttu-id="89020-125">このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に、基本実装を呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="89020-125">If you are overriding this method, call the base implementation after you perform your own filtering.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="89020-126">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-126">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="89020-127">The keys in the dictionary of events are event names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-127">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-128">When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-128">When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-129">このメソッドを変更またはを通じて公開されているイベントのディクショナリ内の項目を削除する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="89020-129">This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="89020-130">イベントのディクショナリのキーは、イベントの名前です。</span><span class="sxs-lookup"><span data-stu-id="89020-130">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="89020-131">オブジェクトの型が<xref:System.ComponentModel.EventDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="89020-131">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="89020-132">このメソッドは、直後後に呼び出される<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>です。</span><span class="sxs-lookup"><span data-stu-id="89020-132">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="89020-133">を通じてアクセス可能なディクショナリは、直接フィルター処理、<paramref name="events" />パラメーター、またはすることができます変更しないままです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="89020-133">You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span>
            </span>
            <span data-ttu-id="89020-134">このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に、基本実装を呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="89020-134">If you are overriding this method, call the base implementation after you perform your own filtering.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="89020-135">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-135">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="89020-136">The keys in the dictionary of properties are property names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-136">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-137">When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-137">When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-138">このメソッドを変更またはを通じて公開されるプロパティのディクショナリ内の項目を削除する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="89020-138">This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="89020-139">プロパティのディクショナリのキーは、プロパティの名前です。</span><span class="sxs-lookup"><span data-stu-id="89020-139">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="89020-140">オブジェクトの型が<xref:System.ComponentModel.PropertyDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="89020-140">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="89020-141">このメソッドは、直後後に呼び出される<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>です。</span><span class="sxs-lookup"><span data-stu-id="89020-141">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="89020-142">を通じてアクセス可能なディクショナリは、直接フィルター処理、<paramref name="properties" />パラメーター、またはすることができます変更しないままです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="89020-142">You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span>
            </span>
            <span data-ttu-id="89020-143">このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に、基本実装を呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="89020-143">If you are overriding this method, call the base implementation after you perform your own filtering.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="89020-144">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-144">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="89020-145">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-145">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-146">When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-146">When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-147">このメソッドは、このインターフェイスを実装しているデザイナーの関連付けられているコンポーネントがを通じて公開される属性のディクショナリに項目を追加する、<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="89020-147">This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="89020-148">属性のディクショナリのキーは、属性の型の Id です。</span><span class="sxs-lookup"><span data-stu-id="89020-148">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="89020-149">オブジェクトの型が<xref:System.Attribute>です。</span><span class="sxs-lookup"><span data-stu-id="89020-149">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="89020-150">このメソッドは、直前に呼び出されます<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>です。</span><span class="sxs-lookup"><span data-stu-id="89020-150">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="89020-151">属性の型 ID は、任意のオブジェクトをすることができます。</span><span class="sxs-lookup"><span data-stu-id="89020-151">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="89020-152">既定では、<xref:System.Attribute>を返します、<xref:System.Type>の値としてその<xref:System.Attribute.TypeId%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="89020-152">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="89020-153">チェックすることができます、<xref:System.Attribute.TypeId%2A>既知と同等のディクショナリ内の属性の<xref:System.Attribute.TypeId%2A>を指定するか、またはを使用して、属性の<xref:System.Reflection>属性オブジェクト自体を識別します。</span><span class="sxs-lookup"><span data-stu-id="89020-153">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="89020-154">ときに属性を同じ<xref:System.Attribute.TypeId%2A>古い属性が、この新しい属性に置き換えられますコンポーネントに、既存または継承された属性が追加されるため、します。</span><span class="sxs-lookup"><span data-stu-id="89020-154">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="89020-155">多くの属性は、型の以前の属性が同じ型の新しい属性に置き換わります。</span><span class="sxs-lookup"><span data-stu-id="89020-155">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="89020-156">ただし、一部の属性の型を返す、<xref:System.Attribute.TypeId%2A>属性を選択的に区別されます。</span><span class="sxs-lookup"><span data-stu-id="89020-156">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="89020-157">例については、型の場合など、さまざまな種類の同時にアクティブなデザイナーを提供するために、<xref:System.ComponentModel.Design.IRootDesigner>と<xref:System.ComponentModel.Design.IDesigner>、<xref:System.ComponentModel.DesignerAttribute>クラスを返します、<xref:System.Attribute.TypeId%2A>属性と基本デザイナー型の両方を一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="89020-157">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="89020-158"><xref:System.ComponentModel.DesignerAttribute>コンス トラクターを使用するだけでなく、特定の型では、デザイナーのデザイナー ベースの種類を指定し、<xref:System.ComponentModel.DesignerAttribute>を返します、<xref:System.Attribute.TypeId%2A>これを反映します。</span><span class="sxs-lookup"><span data-stu-id="89020-158">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="89020-159">したがってを追加すると、新しい<xref:System.ComponentModel.DesignerAttribute>を既存の基本デザイナー型と同じ型の基本デザイナー型<xref:System.ComponentModel.DesignerAttribute>、古い属性が、この新しい属性に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="89020-159">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="89020-160">を通じてアクセス可能なディクショナリは、直接フィルター処理、<paramref name="attributes" />パラメーター、またはすることができます変更しないままです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="89020-160">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span>
            </span>
            <span data-ttu-id="89020-161">このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後に、基本実装を呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="89020-161">If you are overriding this method, call the base implementation after you perform your own filtering.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="89020-162">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-162">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="89020-163">The keys in the dictionary of events are event names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-163">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-164">When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-164">When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-165">このメソッドを通じて、デザイナーが公開するイベントのディクショナリに項目を追加する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="89020-165">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="89020-166">イベントのディクショナリのキーは、イベントの名前です。</span><span class="sxs-lookup"><span data-stu-id="89020-166">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="89020-167">オブジェクトの型が<xref:System.ComponentModel.EventDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="89020-167">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="89020-168">このメソッドは、直前に呼び出されます<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>です。</span><span class="sxs-lookup"><span data-stu-id="89020-168">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="89020-169">を通じてアクセスできる、ディクショナリを直接変更することができます、<paramref name="events" />パラメーター、またはすることができます変更しないままです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="89020-169">You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span>
            </span>
            <span data-ttu-id="89020-170">このメソッドをオーバーライドする場合は、独自のフィルター処理を実行する前に、基底の実装を呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="89020-170">If you are overriding this method, call the base implementation before you perform your own filtering.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="89020-171">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-171">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="89020-172">The keys in the dictionary of properties are property names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-172">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-173">When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-173">When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-174">このメソッドは、デザイナーがを通じて公開されるプロパティのディクショナリに項目を追加する方法を提供する<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="89020-174">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="89020-175">プロパティのディクショナリのキーは、プロパティの名前です。</span><span class="sxs-lookup"><span data-stu-id="89020-175">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="89020-176">オブジェクトの型が<xref:System.ComponentModel.PropertyDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="89020-176">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="89020-177">このメソッドは、直前に呼び出されます<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>です。</span><span class="sxs-lookup"><span data-stu-id="89020-177">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="89020-178">を通じてアクセスできる、ディクショナリを直接変更することができます、<paramref name="properties" />パラメーター、またはすることができます変更しないままです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="89020-178">You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span>
            </span>
            <span data-ttu-id="89020-179">このメソッドをオーバーライドする場合は、独自のフィルター処理を実行する前に、基底の実装を呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="89020-179">If you are overriding this method, call the base implementation before you perform your own filtering.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>