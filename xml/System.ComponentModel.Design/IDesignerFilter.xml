<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="240f72dd2638187f7f384e3fa7c4053213d1ff96" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63899074" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>コンポーネント デザイナーがデザイン時環境に対して公開できるプロパティ、属性、イベントの各記述子を格納する <see cref="T:System.ComponentModel.TypeDescriptor" /> のディクショナリにデザイナーがアクセスし、フィルター処理を実行できるようにするインターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerFilter> デザイナーを通じてその関連付けられているコンポーネントが公開するプロパティ、属性、およびイベント記述子のセットをフィルター処理できるように、<xref:System.ComponentModel.TypeDescriptor>します。 このインターフェイスのメソッドを名前で始まる`Pre`メソッドの名前が始まる直前に呼び出されます`Post`します。  
  
 属性、イベント、またはプロパティ記述子を追加する場合は、使用、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>、または<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>メソッド。  
  
 変更または削除する属性、イベント、またはプロパティの記述子を使用する場合、 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>、 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>、または<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>メソッド。  
  
   
  
## Examples  
 次の例でのオーバーライドを<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>デザイナーのコントロールをデザイン時に選択すると、[プロパティ] ウィンドウに、デザイナーのプロパティを追加します。 例をご覧ください、<xref:System.Windows.Forms.Design.ControlDesigner>クラスを使用する完全なデザイナーの例については、<xref:System.ComponentModel.Design.IDesignerFilter>インターフェイス。  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。 属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性の項目を変更または削除できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、ディクショナリ内で項目をこのインターフェイスを実装するデザイナーの関連付けられているコンポーネントを通じて公開する属性の変更または削除する方法を提供する<xref:System.ComponentModel.TypeDescriptor>します。  
  
 属性のディクショナリのキーは、属性の型の Id です。 オブジェクトが型の<xref:System.Attribute>します。 直後にこのメソッドが呼び出されます<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>します。  
  
 属性の型 ID には、任意のオブジェクトを使用できます。 既定では、<xref:System.Attribute>返しますその<xref:System.Type>の値としてその<xref:System.Attribute.TypeId%2A>プロパティ。 チェックすることができます、<xref:System.Attribute.TypeId%2A>既知と等しいかどうか、ディクショナリ内の属性の<xref:System.Attribute.TypeId%2A>属性を指定するか、または使用の<xref:System.Reflection>属性オブジェクト自体を識別するためにします。  
  
 同じ属性<xref:System.Attribute.TypeId%2A>コンポーネントに、既存または継承された属性が追加されるため、新しい属性では古い属性が置き換えられます。 多くの属性と同じ型の新しい属性は、型の以前の属性を置き換えます。 ただし、いくつかの種類の属性を返す、<xref:System.Attribute.TypeId%2A>属性を選択的に区別します。 たとえば、型の場合など、さまざまな種類の同時にアクティブなデザイナーを提供するために、<xref:System.ComponentModel.Design.IRootDesigner>と<xref:System.ComponentModel.Design.IDesigner>、<xref:System.ComponentModel.DesignerAttribute>クラスを返しますを<xref:System.Attribute.TypeId%2A>属性と基本クラスのデザイナーの両方を一意に識別。入力します。 <xref:System.ComponentModel.DesignerAttribute>コンス トラクターを使用するだけでなく、特定の型では、デザイナーの基本デザイナーの種類を指定し、<xref:System.ComponentModel.DesignerAttribute>を返します、<xref:System.Attribute.TypeId%2A>これを反映します。 そのためを追加すると、新しい<xref:System.ComponentModel.DesignerAttribute>と、既存の基本デザイナー型と同じ型の基本デザイナー型<xref:System.ComponentModel.DesignerAttribute>、古い属性は、新しい属性に置き換えられます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>アクセス可能なディクショナリは、直接フィルター処理、<paramref name="attributes" />パラメーター、またはするは、そのままかまいません。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後、基本実装を呼び出します。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。 イベントのディクショナリ内でのキーは、イベント名です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントの項目を変更または削除できるようになります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを変更またはを通じて公開されるイベントのディクショナリ内の項目を削除する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>します。  
  
 イベントのディクショナリ内のキーは、イベントの名前です。 オブジェクトが型の<xref:System.ComponentModel.EventDescriptor>します。 直後にこのメソッドが呼び出されます<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>アクセス可能なディクショナリは、直接フィルター処理、<paramref name="events" />パラメーター、またはするは、そのままかまいません。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後、基本実装を呼び出します。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。 プロパティのディクショナリ内でのキーは、プロパティ名です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティの項目を変更または削除できるようになります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを変更またはを通じて公開されるプロパティのディクショナリ内の項目を削除する方法を提供する、<xref:System.ComponentModel.TypeDescriptor>します。  
  
 プロパティのディクショナリ内のキーは、プロパティの名前です。 オブジェクトが型の<xref:System.ComponentModel.PropertyDescriptor>します。 直後にこのメソッドが呼び出されます<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>アクセス可能なディクショナリは、直接フィルター処理、<paramref name="properties" />パラメーター、またはするは、そのままかまいません。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後、基本実装を呼び出します。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。 属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性に項目を追加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、このインターフェイスを実装するデザイナーの関連付けられているコンポーネントを通じて公開する属性のディクショナリに項目を追加する方法を提供します。、<xref:System.ComponentModel.TypeDescriptor>します。  
  
 属性のディクショナリのキーは、属性の型の Id です。 オブジェクトが型の<xref:System.Attribute>します。 このメソッドの呼び出しの直前に<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>します。  
  
 属性の型 ID には、任意のオブジェクトを使用できます。 既定では、<xref:System.Attribute>返しますその<xref:System.Type>の値としてその<xref:System.Attribute.TypeId%2A>プロパティ。 チェックすることができます、<xref:System.Attribute.TypeId%2A>既知と等しいかどうか、ディクショナリ内の属性の<xref:System.Attribute.TypeId%2A>属性を指定するか、または使用の<xref:System.Reflection>属性オブジェクト自体を識別するためにします。  
  
 同じ属性<xref:System.Attribute.TypeId%2A>コンポーネントに、既存または継承された属性が追加されるため、新しい属性では古い属性が置き換えられます。 多くの属性と同じ型の新しい属性は、型の以前の属性を置き換えます。 ただし、いくつかの種類の属性を返す、<xref:System.Attribute.TypeId%2A>属性を選択的に区別します。 たとえば、型の場合など、さまざまな種類の同時にアクティブなデザイナーを提供するために、<xref:System.ComponentModel.Design.IRootDesigner>と<xref:System.ComponentModel.Design.IDesigner>、<xref:System.ComponentModel.DesignerAttribute>クラスを返しますを<xref:System.Attribute.TypeId%2A>属性と基本クラスのデザイナーの両方を一意に識別。入力します。 <xref:System.ComponentModel.DesignerAttribute>コンス トラクターを使用するだけでなく、特定の型では、デザイナーの基本デザイナーの種類を指定し、<xref:System.ComponentModel.DesignerAttribute>を返します、<xref:System.Attribute.TypeId%2A>これを反映します。 そのためを追加すると、新しい<xref:System.ComponentModel.DesignerAttribute>と、既存の基本デザイナー型と同じ型の基本デザイナー型<xref:System.ComponentModel.DesignerAttribute>、古い属性は、新しい属性に置き換えられます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>アクセス可能なディクショナリは、直接フィルター処理、<paramref name="attributes" />パラメーター、またはするは、そのままかまいません。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行した後、基本実装を呼び出します。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。 イベントのディクショナリ内でのキーは、イベント名です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントに項目を追加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、デザイナーを通じて公開するイベントのディクショナリに項目を追加する方法を提供します。、<xref:System.ComponentModel.TypeDescriptor>します。  
  
 イベントのディクショナリ内のキーは、イベントの名前です。 オブジェクトが型の<xref:System.ComponentModel.EventDescriptor>します。 このメソッドの呼び出しの直前に<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>アクセス可能なディクショナリを直接変更できる、<paramref name="events" />パラメーター、またはするは、そのままかまいません。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行する前に、基本実装を呼び出します。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。 プロパティのディクショナリ内でのキーは、プロパティ名です。</param>
        <summary>派生クラスでオーバーライドされた場合、デザイナーが <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティに項目を追加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、デザイナーを通じて公開するプロパティのディクショナリに項目を追加する方法を提供します。、<xref:System.ComponentModel.TypeDescriptor>します。  
  
 プロパティのディクショナリ内のキーは、プロパティの名前です。 オブジェクトが型の<xref:System.ComponentModel.PropertyDescriptor>します。 このメソッドの呼び出しの直前に<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>アクセス可能なディクショナリを直接変更できる、<paramref name="properties" />パラメーター、またはするは、そのままかまいません。 このメソッドをオーバーライドする場合は、独自のフィルター処理を実行する前に、基本実装を呼び出します。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>