<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DesignSurface.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53aa7493e17750216c5342b1ee5e784080710e3a2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3aa7493e17750216c5342b1ee5e784080710e3a2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Presents a user interface for designing components.</source>
          <target state="translated">コンポーネントをデザインするためのユーザー インターフェイスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class implements what the user perceives as a designer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>デザイナーとして認識し、ユーザー クラスを実装します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> is the user interface the user manipulates to change design-time features.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> ユーザーのユーザー インターフェイスをデザイン時の機能を変更する操作です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> provides a completely self-contained design surface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> 完全に自己完結型のデザイン画面を提供します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class may be used as a stand-alone designer, or it may be coupled with the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class to provide a common implementation for an application that hosts multiple <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>クラスは、スタンドアロンのデザイナーとして使用する可能性がありますかと組み合わせることがあります、<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph>複数をホストするアプリケーションの一般的な実装を提供するクラス<ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class can be used by itself, or the user can derive a new class from it and augment the behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>クラスは、単独で使用できますか、ユーザーはそこから新しいクラスを派生し、動作を拡張します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class provides several design-time services automatically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>クラスが自動的にいくつかのデザイン時サービスを提供します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class adds all of its services in its constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>クラスはそのすべてのサービスのコンス トラクターに追加します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Most of these services can be overridden by replacing them in the protected <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> property.</source>
          <target state="translated">これらのサービスのほとんどは、保護対象に置き換えることによってオーバーライドできます<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>To replace a service, override the constructor, call base, and make any changes through the protected <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> property.</source>
          <target state="translated">サービスを置き換えるには、コンス トラクターをオーバーライド、基本、および、保護対象から変更を加える<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>All services that are added to the service container and that implement <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> are disposed when the design surface is disposed.</source>
          <target state="translated">サービス コンテナーに追加され、実装しているすべてのサービス<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>デザイン サーフェイスが破棄されるときに破棄されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The default set of replaceable services that the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class provides is shown in the following table.</source>
          <target state="translated">置き換え可能の既定のセットの各サービス、<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>クラスは、次の表に示すようには用意されています。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Service</source>
          <target state="translated">サービス</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Enables objects that are not part of the container’s components collection to provide their own extender providers.</source>
          <target state="translated">独自の拡張プロバイダーを提供するコンテナーのコンポーネントのコレクションの一部ではないオブジェクトを有効にします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Used by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> to get a list of extender providers.</source>
          <target state="translated">によって使用される<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>拡張プロバイダーの一覧を取得します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>With this service, extender providers can live outside of the container.</source>
          <target state="translated">このサービスに拡張プロバイダーは、コンテナーの外部でライブことができます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides designer metadata hooks.</source>
          <target state="translated">デザイナーのメタデータのフックを提供します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>This is the primary interface for metadata filtering.</source>
          <target state="translated">これは、メタデータのフィルター処理の基本インターフェイスです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides a way to select components in the designer.</source>
          <target state="translated">デザイナーでコンポーネントを選択する方法を提供します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides a way to get a name for objects, even when those objects are not sited.</source>
          <target state="translated">これらのオブジェクトが配置されていない場合でも、オブジェクトの名前を取得する方法を提供します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Offers the design surface itself as a service.</source>
          <target state="translated">デザイン画面は、サービスとして提供しています。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides a base class for getting and setting option values for a designer.</source>
          <target state="translated">デザイナーのオプションの値を取得および設定するために使用する基本クラスを提供します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The following table shows the non-replaceable services provided by default.</source>
          <target state="translated">次の表は、既定で提供される非置換可能なサービスを示します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Service</source>
          <target state="translated">サービス</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Raises events as changes are made to components.</source>
          <target state="translated">コンポーネントに変更が加えられるイベントを発生させます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Controls access to types, services, and transactions.</source>
          <target state="translated">種類、サービス、およびトランザクションへのアクセスを制御します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Master interface for designers.</source>
          <target state="translated">デザイナーのマスター インターフェイスです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Owns the set of components that are being designed.</source>
          <target state="translated">設計されているコンポーネントのセットを所有しています。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Each designer has an <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> that owns the components.</source>
          <target state="translated">各デザイナーには、<ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph>コンポーネントを所有しています。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Derives from <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> and provides a way to add and remove services from the designer.</source>
          <target state="translated">派生した<ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph>し、追加し、デザイナーからサービスを削除する方法を提供します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>In addition to these services, the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class also provides a single service that is available through a component’s site.</source>
          <target state="translated">これらのサービスだけでなく、<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>クラスには、コンポーネントのサイトを介して使用可能な 1 つのサービスも用意されています。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>This service is unique for each component.</source>
          <target state="translated">このサービスは、各コンポーネントについて一意です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The following table shows the services that cannot be replaced.</source>
          <target state="translated">次の表は、置き換えることのできないサービスを示します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Service</source>
          <target state="translated">サービス</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.</source>
          <target state="translated">コンポーネントに関する任意のデータの格納に使用できるキー/値ペアのジェネリック ディクショナリ。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>A container that enables a component to add additional child components to the designer.</source>
          <target state="translated">デザイナーに追加の子コンポーネントを追加するコンポーネントを有効にするコンテナーです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>These components will be part of the design surface, but will not participate in serialization.</source>
          <target state="translated">これらのコンポーネントは、デザイン サーフェイスの一部になりますが、シリアル化に参加しません。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.</source>
          <target state="translated">これには、デザイナーでそれ自体の領域を公開できるコントロールをデザインするときに便利ですが、領域をシリアル化に参加しないようにします。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>In addition to <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>, the site also implements the following interfaces.</source>
          <target state="translated">加え<ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>サイトは、次のインターフェイスも実装します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.</source>
          <target state="translated">実装していないその他のサイトの実装が可能性がありますので、無差別なキャストを使用するのではなく、これらのインターフェイスの存在を確認します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Service</source>
          <target state="translated">サービス</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides a way to get to the container of site-specific services.</source>
          <target state="translated">サイト固有のサービスのコンテナーにアクセスする方法を提供します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>For example, <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> is a site-specific service.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph>サイト固有のサービスです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>With this service, you can add additional site-specific services.</source>
          <target state="translated">このサービスでは、サイト固有の追加のサービスを追加できます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>for full access to system resources.</source>
          <target state="translated">システム リソースへのフル アクセスできます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Demand values: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">値を要求: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>、<ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Associated state:</source>
          <target state="translated">関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
          <source>The parent service provider, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no parent used to resolve services.</source>
          <target state="translated">親サービス プロバイダー。サービスの解決に使用する親が存在しない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
          <source>When <ph id="ph1">`parentProvide`</ph> is present, designers contained within the surface can retrieve services from the application.</source>
          <target state="translated">ときに<ph id="ph1">`parentProvide`</ph>が含まれている、画面に含まれるデザイナーは、アプリケーションからサービスを取得することができます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>The type of root component to create.</source>
          <target state="translated">作成するルート コンポーネントの型。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>When you use the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process.</source>
          <target state="translated">使用すると、<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph>コンス トラクター、さらに、指定された型のコンポーネントを作成し、読み込みプロセスを終了する単純なデザイナー ローダーを作成します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</source>
          <target state="translated">これは、簡単にすることを前提として、デザイナーを作成すべての状態の保存は外部で行われます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>Internally, this calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> and passes the root component type.</source>
          <target state="translated">内部的には、これを呼び出す<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>ルート コンポーネントの種類を渡します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> overload is not affected by <ph id="ph2">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph>オーバー ロードは受けません<ph id="ph2">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph> must be in the service container before the design surface loads.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>デザイン サーフェイスが読み込まれる前に、サービス コンテナーにする必要があります。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>If you need access to <ph id="ph1">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>, call the empty constructor, add the <ph id="ph2">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph> to the <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> and call <ph id="ph4">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> with <ph id="ph5">`rootComponentType`</ph>.</source>
          <target state="translated">アクセスを必要がある場合<ph id="ph1">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>、空のコンス トラクターを呼び出して、追加、<ph id="ph2">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>を<ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph>を呼び出すと<ph id="ph4">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>で<ph id="ph5">`rootComponentType`</ph>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source><ph id="ph1">&lt;paramref name="rootComponent" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rootComponent" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>The parent service provider, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no parent used to resolve services.</source>
          <target state="translated">親サービス プロバイダー。サービスの解決に使用する親が存在しない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>The type of root component to create.</source>
          <target state="translated">作成するルート コンポーネントの型。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>Using the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph>コンス トラクターは、指定された型のコンポーネントを作成し、読み込みプロセスを終了する単純なデザイナー ローダーを作成します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</source>
          <target state="translated">これは、簡単にすることを前提として、デザイナーを作成すべての状態の保存は外部で行われます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>Internally, this calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> and passes the root component type.</source>
          <target state="translated">内部的には、これを呼び出す<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>ルート コンポーネントの種類を渡します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source><ph id="ph1">&lt;paramref name="rootComponent" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rootComponent" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Begins the loading process.</source>
          <target state="translated">読み込みプロセスを開始します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>The designer loader to use for loading the designer.</source>
          <target state="translated">デザイナーの読み込みに使用するデザイナー ローダー。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>Begins the loading process with the given designer loader.</source>
          <target state="translated">指定したデザイナー ローダーを使用して、読み込みプロセスを開始します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</source>
          <target state="translated">デザイナーの読み込みできる非同期のため、読み込みは、この呼び出しが返された後に進行状況を続行します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>Attach an event handler to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph> event to be notified when the design surface has completed loading.</source>
          <target state="translated">イベント ハンドラーをアタッチ、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph>デザイン画面には、読み込みが完了したときに通知するイベントです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>After <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</source>
          <target state="translated">後に<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>が呼び出されると、すぐに取得できます、ビュー、デザイナーのデザイナー ローダーは必要があります提供ためには、少なくともルート コンポーネントに非同期的に読み込むときにします。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source><ph id="ph1">&lt;paramref name="loader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="loader" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>The type of component to create in design mode.</source>
          <target state="translated">デザイン モードで作成するコンポーネントの型。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>Begins the loading process.</source>
          <target state="translated">読み込みプロセスを開始します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>When <ph id="ph1">`rootComponentType`</ph> is specified, a default designer loader that simply creates an instance of <ph id="ph2">`rootComponentType`</ph> will be used.</source>
          <target state="translated">ときに<ph id="ph1">`rootComponentType`</ph>が指定されているだけのインスタンスを作成する既定のデザイナー ローダー<ph id="ph2">`rootComponentType`</ph>使用されます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</source>
          <target state="translated">デザイナーの読み込みできる非同期のため、読み込みは、この呼び出しが返された後に進行状況を続行します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>Attach an event handler to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph> event to be notified when the design surface has completed loading.</source>
          <target state="translated">イベント ハンドラーをアタッチ、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph>デザイン画面には、読み込みが完了したときに通知するイベントです。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>After <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</source>
          <target state="translated">後に<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>が呼び出されると、すぐに取得できます、ビュー、デザイナーのデザイナー ローダーは必要があります提供ためには、少なくともルート コンポーネントに非同期的に読み込むときにします。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> method creates an instance of the component type and initializes a designer for this instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>メソッドは、コンポーネントの種類のインスタンスを作成し、このインスタンスのデザイナーを初期化します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph> event is raised before this method returns.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph>イベントは、このメソッドが戻る前に発生します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source><ph id="ph1">&lt;paramref name="rootComponentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rootComponentType" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> implementation within the design surface.</source>
          <target state="translated">デザイン サーフェイス内の <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> 実装を取得します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> implementation within the design surface.</source>
          <target state="translated">デザイン サーフェイス内の <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> 実装。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph> property holds all objects that are currently in design mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph>プロパティが現在デザイン モードになっているすべてのオブジェクトを保持します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>When components are added to <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph>, their designer, if any, is loaded.</source>
          <target state="translated">コンポーネントを追加するときに<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph>、そのデザイナーは読み込まれます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>The component is sited with a site that provides full access to the design surface.</source>
          <target state="translated">コンポーネントがデザイン サーフェイスへのフル アクセスを提供するサイトに位置します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The type of component to create.</source>
          <target state="translated">作成するコンポーネントの型。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>Creates an instance of a component.</source>
          <target state="translated">コンポーネントのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The newly created component.</source>
          <target state="translated">新規作成したコンポーネント。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A&gt;</ph> method is called by the design surface’s <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A&gt;</ph> method to create an instance of a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A&gt;</ph>メソッドは、デザイン画面の<ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A&gt;</ph>メソッドをコンポーネントのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The component should be created and added to the public container on the design surface.</source>
          <target state="translated">コンポーネントが作成され、デザイン画面で、パブリック コンテナーに追加します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>The component for which the designer should be created.</source>
          <target state="translated">デザイナーを作成する必要のあるコンポーネント。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to create a root designer; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to create a normal designer.</source>
          <target state="translated">ルート デザイナーを作成する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。通常のデザイナーを作成する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>Creates a designer when a component is added to the container.</source>
          <target state="translated">コンテナーにコンポーネントが追加されたときに、デザイナーを作成します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>An instance of the requested designer, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching designer could be found.</source>
          <target state="translated">要求したデザイナーのインスタンス。一致するデザイナーが見つからない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph> method is called by the design surface’s <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> when a component is added to the container.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph>メソッドは、デザイン画面の<ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>のコンポーネントをコンテナーに追加するときにします。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>This method creates a designer, but does not initialize it.</source>
          <target state="translated">このメソッドは、デザイナーを作成しますが、初期化は行いません。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>When it returns, the designer is initialized by the container.</source>
          <target state="translated">返されると、デザイナーがコンテナーで初期化されます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph> can create two different types of designers: root designers and normal designers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph> 2 つの異なる種類のデザイナーを作成できます。 ルート デザイナーと通常のデザイナー。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container.</source>
          <target state="translated">ルート デザイナーは、定義では、コンテナーに追加された最初のコンポーネントをデザイン画面のルート コンポーネントのデザイナーです。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>Root designers differ from normal designers because they are responsible for the user interface presented to the end user.</source>
          <target state="translated">ルート デザイナーは、エンドユーザーに表示されるユーザー インターフェイスを担当しているために、通常のデザイナーとは異なります。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.</source>
          <target state="translated">ルート デザイナーは、通常、このインターフェイスを提供するデザイン サーフェイスにデザイナーの残りの部分と調整します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>The default implementation of this method delegates to <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, passing in <ph id="ph2">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> as the designer type for root designers, or <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> for normal designers.</source>
          <target state="translated">このメソッドの既定の実装を委任する場合<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>を渡して、<ph id="ph2">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph>ルート デザイナーのデザイナー型としてまたは<ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph>の通常のデザイナー。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>You can override this method to request a specific type of designer.</source>
          <target state="translated">デザイナーの特定の種類を要求するには、このメソッドをオーバーライドすることができます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>The type to create.</source>
          <target state="translated">作成する型。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>Creates an instance of the given type.</source>
          <target state="translated">指定された型のインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>The newly created object.</source>
          <target state="translated">新しく作成されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>If <ph id="ph1">`type`</ph> is an <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A&gt;</ph> searches for a constructor of type <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> first, followed by an empty constructor.</source>
          <target state="translated">場合<ph id="ph1">`type`</ph>は、 <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>、<ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A&gt;</ph>型のコンス トラクターを検索<ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph>最初に、空のコンス トラクターを続けています。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Creates a container suitable for nesting controls or components.</source>
          <target state="translated">コントロールまたはコンポーネントの入れ子に適したコンテナーを作成します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>The component that manages the nested container.</source>
          <target state="translated">入れ子になったコンテナーを管理するコンポーネント。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>Creates a container suitable for nesting controls or components.</source>
          <target state="translated">コントロールまたはコンポーネントの入れ子に適したコンテナーを作成します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>The nested container.</source>
          <target state="translated">入れ子になったコンテナー。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</source>
          <target state="translated">コンポーネントを入れ子になったコンテナーに追加すると、そのデザイナーを作成し、すべてのサービスの条件に適合で使用できるようにデザイン サーフェイスからします。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>Components added to nested containers do not participate in serialization.</source>
          <target state="translated">入れ子になったコンテナーに追加されたコンポーネントは、シリアル化には参加しません。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source><ph id="ph1">&lt;paramref name="owningComponent" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owningComponent" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>The component that manages the nested container.</source>
          <target state="translated">入れ子になったコンテナーを管理するコンポーネント。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>An additional name for the nested container.</source>
          <target state="translated">入れ子になったコンテナーの追加の名前。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>Creates a container suitable for nesting controls or components.</source>
          <target state="translated">コントロールまたはコンポーネントの入れ子に適したコンテナーを作成します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>The nested container.</source>
          <target state="translated">入れ子になったコンテナー。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</source>
          <target state="translated">コンポーネントを入れ子になったコンテナーに追加すると、そのデザイナーを作成し、すべてのサービスの条件に適合で使用できるようにデザイン サーフェイスからします。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>Components added to nested containers do not participate in serialization.</source>
          <target state="translated">入れ子になったコンテナーに追加されたコンポーネントは、シリアル化には参加しません。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>You can provide an additional name for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A&gt;</ph> method by passing a value into <ph id="ph2">`containerName`</ph>.</source>
          <target state="translated">追加の名前を指定することができます、<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A&gt;</ph>メソッドに値を渡すことによって<ph id="ph2">`containerName`</ph>です。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="owningComponent" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owningComponent" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> で使用したリソースを解放します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> で使用したリソースを解放します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>The public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> method follows the standard <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">パブリック<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>メソッドの標準に準拠<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>パターン。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Calling this method destroys the design surface.</source>
          <target state="translated">このメソッドを呼び出すと、デザイン サーフェイスが破棄されます。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">このメソッドの保護されているバージョンは<ph id="ph1">`virtual`</ph>であり、標準に従って<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>パターン。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Because <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> 、クリーンアップのすべてのネイティブ コードはありませんがないファイナライザーを呼び出す<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>If you need to call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>, you must add a finalizer yourself.</source>
          <target state="translated">呼び出す必要がある場合<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>ファイナライザーを自分で追加する必要があります。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> を使い終わったら <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> メソッドによって、<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> は使用不可の状態になります。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> was occupying.</source>
          <target state="translated">呼び出した後<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>へのすべての参照を解放する必要があります、<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>ガベージ コレクターがメモリを再利用できるようにする、<ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>占有されていた。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Dispose メソッドの実装<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> への最後の参照を解放する前に、必ず <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> を呼び出してください。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">そうしないと、ガベージ コレクターが <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> オブジェクトの <ph id="ph2">`Finalize`</ph> メソッドを呼び出すまで、使用されているリソースは解放されません。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> で使用したリソースを解放します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>The public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose&gt;</ph> method follows the standard <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">パブリック<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose&gt;</ph>メソッドの標準に準拠<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>パターン。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>Calling this method destroys the design surface.</source>
          <target state="translated">このメソッドを呼び出すと、デザイン サーフェイスが破棄されます。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">このメソッドの保護されているバージョンは<ph id="ph1">`virtual`</ph>であり、標準に従って<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>パターン。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>Because <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> 、クリーンアップのすべてのネイティブ コードはありませんがないファイナライザーを呼び出す<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>If you need to call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>, you must add a finalizer yourself.</source>
          <target state="translated">呼び出す必要がある場合<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>ファイナライザーを自分で追加する必要があります。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 呼び出す<ph id="ph2">`Dispose`</ph>で<ph id="ph3">`disposing`</ph>'éý'<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>参照します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">`Dispose()`</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Finalize メソッドをオーバーライドする<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Disposed">
          <source>Occurs when the design surface is disposed.</source>
          <target state="translated">デザイン サーフェイスが破棄されたときに発生します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Disposed">
          <source>The surface is only disposed when the public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> method on <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> is called.</source>
          <target state="translated">サーフェイスが破棄された場合にのみ、パブリック<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>メソッド<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>と呼びます。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
          <source>Gets a value indicating whether the <bpt id="p1">**</bpt>Design-time Error List<ept id="p1">**</ept> is loading.</source>
          <target state="translated"><bpt id="p1">**</bpt>デザイン時エラー一覧<ept id="p1">**</ept>が読み込まれているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <bpt id="p1">**</bpt>Design-time Error List<ept id="p1">**</ept> is loading; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 場合、<bpt id="p1">**</bpt>デザイン時のエラー一覧<ept id="p1">**</ept>読み込み、それ以外は、<ph id="ph2">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>Serializes changes to the design surface.</source>
          <target state="translated">デザイン サーフェイスへの変更をシリアル化します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> method can be called to push changes made to the design surface down to the serializer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph>シリアライザーまでデザイン サーフェイスに加えられた変更をプッシュするメソッドを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>This ensures that the design surface and its serialized state are synchronized.</source>
          <target state="translated">これにより、デザイン画面とそのシリアル化された状態が同期されていること。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>The actual implementation of this method is forwarded to the designer loader associated with design surface.</source>
          <target state="translated">このメソッドの実際の実装は、デザイン サーフェイスに関連付けられたデザイナー ローダーに転送されます。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>The designer loader may choose to defer changes until <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> is called, or it may choose to keep the serialized data up to date with all user changes.</source>
          <target state="translated">デザイナー ローダーのまでの変更を遅らせることもできます<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph>が呼び出されると、データを保持する、シリアル化されたすべてのユーザーの変更で最新の状態を選択できますか。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph>メソッドは、モデルをデザイナー ローダーを使用することを選択するに関係なくシリアル化された状態が同期されるは、実際のデザイン画面を確認します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Flushed">
          <source>Occurs when a call is made to the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /&gt;</ph> method of <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> メソッドが呼び出されたときに発生します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Flushed">
          <source>The designer loader is flushed first, and then the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flushed&gt;</ph> event is raised.</source>
          <target state="translated">デザイナー ローダーは最初に、フラッシュし、<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flushed&gt;</ph>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>The type of service to retrieve.</source>
          <target state="translated">取得するサービスの型。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>Gets a service from the service container.</source>
          <target state="translated">サービス コンテナーからサービスを取得します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>An object that implements, or is a derived class of, <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the service does not exist in the service container.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> を実装するオブジェクト、または serviceType の派生クラスであるオブジェクト。サービス コンテナーにサービスが存在しない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.GetService%2A&gt;</ph> method retrieves a service in the design surface’s service container.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.GetService%2A&gt;</ph>メソッドは、デザイン画面のサービス コンテナー内のサービスを取得します。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>In addition, this will forward to any service provider that was given to the design surface at construction time.</source>
          <target state="translated">さらに、これは構築時に、デザイン画面に指定されたサービス プロバイダーに転送します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
          <source>Gets a value indicating whether the design surface is currently loaded.</source>
          <target state="translated">デザイン サーフェイスが現在読み込まれているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the design surface is currently loaded; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">デザイン サーフェイスが現在読み込まれている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>Occurs when the designer load has completed.</source>
          <target state="translated">デザイナーの読み込みが完了したときに発生します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph> event is raised for successful loads as well as unsuccessful ones.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph>読み込みに成功と失敗のイベントが発生します。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>If code in this event handler throws an exception, the designer is unloaded.</source>
          <target state="translated">このイベント ハンドラーのコードでは、例外をスローする場合に、デザイナーはアンロードされます。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.LoadedEventArgs&gt;</ph> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.LoadedEventArgs&gt;</ph>オブジェクトを使用して、ロード、成功したかを確認し、読み込み中に発生したエラーの一覧も提供します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.</source>
          <target state="translated">シリアル化システムがエラーを許容する同様に、読み込みに成功のエラーが発生することができます。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
          <source>Returns a collection of loading errors or a void collection.</source>
          <target state="translated">読み込みエラーのコレクションまたは void コレクションを返します。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> of loading errors.</source>
          <target state="translated">読み込みエラーの <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Loading">
          <source>Occurs when the designer is about to be loaded.</source>
          <target state="translated">デザイナーの読み込みを開始する直前に発生します。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.LoadedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.LoadedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>Gets the service container.</source>
          <target state="translated">サービス コンテナーを取得します。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>The service container that provides all services to designers contained within the design surface.</source>
          <target state="translated">デザイン サーフェイスに含まれるデザイナーにすべてのサービスを提供するサービス コンテナー。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>At construction time, <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> adds default services into this service container.</source>
          <target state="translated">構築時に<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>このサービス コンテナーに既定のサービスを追加します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>You can leave the default services in their present state, or you can remove them and replace them with your own.</source>
          <target state="translated">現在の状態で、既定のサービスのままにすることができますか、それらを削除し、独自に置き換えることができます。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>The default services are all demand-created, so there is no loss in performance for adding them at construction time.</source>
          <target state="translated">既定のサービスは、すべて要求に応じて作成、構築時に追加するのではパフォーマンスの損失がないようにします。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Unloaded">
          <source>Occurs when a designer has finished unloading.</source>
          <target state="translated">デザイナーのアンロードを終了したときに発生します。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Unloading">
          <source>Occurs when a designer is about to unload.</source>
          <target state="translated">デザイナーのアンロードを開始する直前に発生します。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Unloading">
          <source>When a designer unloads, the entire state for that designer is destroyed, including the designer’s view.</source>
          <target state="translated">デザイナーをアンロードするときに、デザイナーのビューを含むすべてのデザイナーの状態は破棄されます。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Unloading">
          <source>The view should be unparented at this time.</source>
          <target state="translated">この時点で、ビューが親必要があります。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>Gets the view for the root designer.</source>
          <target state="translated">ルート デザイナーのビューを取得します。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The view for the root designer.</source>
          <target state="translated">ルート デザイナーのビュー。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> method must be called beforehand to start the loading process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>メソッドが、読み込みプロセスを開始する事前呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader.</source>
          <target state="translated">デザイナー ローダーは、デザイナー ローダーによって作成された最初のオブジェクトであるビューを提供するルート デザイナーの読み込みが終了する前に、ビューを返すことは。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>If a view is unavailable, <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> raises an exception.</source>
          <target state="translated">ビューが使用できない場合<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>例外が発生します。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The notion of a view technology is obsolete.</source>
          <target state="translated">ビュー技術の概念は廃止されています。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>But, it remains in the interfaces for root designers for backward compatibility.</source>
          <target state="translated">しかし、旧バージョンとの互換性のためのルート デザイナーのインターフェイスに残ります。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>Its use is hidden from anyone using <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objects.</source>
          <target state="translated">使用してすべてのユーザーからの使用が非表示<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.View%2A&gt;</ph> property hides view technologies by passing the supported technologies back into the root designer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.View%2A&gt;</ph>プロパティは、ルート デザイナーにサポートされているテクノロジを渡すことによってビュー テクノロジを非表示にします。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The following code example shows how <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.View%2A&gt;</ph> hides view technologies.</source>
          <target state="translated">次のコード例に示す方法<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.View%2A&gt;</ph>非表示には、テクノロジを表示します。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed.</source>
          <target state="translated">デザイン サーフェイスが読み込まれていないか、デザイナー ローダーがルート デザイナーをまだ作成していません。または、デザイン サーフェイスの読み込みは終了しましたが、読み込みに失敗しました。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>More information may available in the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph>.</source>
          <target state="translated">詳細については、<ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> のトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The designer loaded, but it does not offer a view compatible with this design surface.</source>
          <target state="translated">デザイナーは読み込まれましたが、このデザイン サーフェイスと互換性のあるビューを提供しません。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> にアタッチした <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
          <source>Occurs when the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /&gt;</ph> method has been called on <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /&gt;</ph> メソッドが <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> に対して呼び出されたときに発生します。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
          <source>If you want to support the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.Activate%2A&gt;</ph> method, your event handler should activate the window for this design surface.</source>
          <target state="translated">サポートする場合、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.Activate%2A&gt;</ph>メソッド、イベント ハンドラーには、このデザイン サーフェイスでのウィンドウがアクティブ化する必要があります。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>