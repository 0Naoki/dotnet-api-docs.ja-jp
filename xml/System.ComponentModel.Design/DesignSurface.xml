<Type Name="DesignSurface" FullName="System.ComponentModel.Design.DesignSurface">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="716f55c76451869646bc85ac87b05f300ead5580" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39869431" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignSurface : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurface extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurface" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurface&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurface : IDisposable, IServiceProvider" />
  <TypeSignature Language="F#" Value="type DesignSurface = class&#xA;    interface IDisposable&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="21bc2-101">コンポーネントをデザインするためのユーザー インターフェイスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="21bc2-101">Presents a user interface for designing components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-102"><xref:System.ComponentModel.Design.DesignSurface>にデザイナーとして認識するユーザー クラスを実装します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-102">The <xref:System.ComponentModel.Design.DesignSurface> class implements what the user perceives as a designer.</span></span> <span data-ttu-id="21bc2-103"><xref:System.ComponentModel.Design.DesignSurface> ユーザーのユーザー インターフェイスをデザイン時の機能を変更する操作です。</span><span class="sxs-lookup"><span data-stu-id="21bc2-103"><xref:System.ComponentModel.Design.DesignSurface> is the user interface the user manipulates to change design-time features.</span></span> <span data-ttu-id="21bc2-104"><xref:System.ComponentModel.Design.DesignSurface> 自己完結型のデザイン サーフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-104"><xref:System.ComponentModel.Design.DesignSurface> provides a completely self-contained design surface.</span></span>  
  
 <span data-ttu-id="21bc2-105"><xref:System.ComponentModel.Design.DesignSurface>スタンドアロンのデザイナーでは、クラスを使用することがありますまたはと結合されては、<xref:System.ComponentModel.Design.DesignSurfaceManager>複数をホストするアプリケーションの一般的な実装を提供するクラス<xref:System.ComponentModel.Design.DesignSurface>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="21bc2-105">The <xref:System.ComponentModel.Design.DesignSurface> class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span>  
  
 <span data-ttu-id="21bc2-106"><xref:System.ComponentModel.Design.DesignSurface>クラスを単独で使用できますか、ユーザーはそこから新しいクラスを派生し、動作を拡張します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-106">The <xref:System.ComponentModel.Design.DesignSurface> class can be used by itself, or the user can derive a new class from it and augment the behavior.</span></span>  
  
 <span data-ttu-id="21bc2-107"><xref:System.ComponentModel.Design.DesignSurface>クラスが自動的にいくつかのデザイン時サービスを提供します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-107">The <xref:System.ComponentModel.Design.DesignSurface> class provides several design-time services automatically.</span></span> <span data-ttu-id="21bc2-108"><xref:System.ComponentModel.Design.DesignSurface>クラスはそのすべてのサービスのコンス トラクターに追加します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-108">The <xref:System.ComponentModel.Design.DesignSurface> class adds all of its services in its constructor.</span></span> <span data-ttu-id="21bc2-109">これらのサービスのほとんどは、保護されたで置き換えることによってオーバーライドできます<xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="21bc2-109">Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="21bc2-110">サービスを置換するコンス トラクターをオーバーライドし、基本をを通じて、保護された変更を加える<xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="21bc2-110">To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="21bc2-111">サービス コンテナーに追加されると、実装するすべてのサービス<xref:System.IDisposable>デザイン サーフェイスが破棄されるときに破棄されます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-111">All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed.</span></span> <span data-ttu-id="21bc2-112">サービスの置き換え可能なの既定のセット、<xref:System.ComponentModel.Design.DesignSurface>クラスには次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-112">The default set of replaceable services that the <xref:System.ComponentModel.Design.DesignSurface> class provides is shown in the following table.</span></span>  
  
|<span data-ttu-id="21bc2-113">サービス</span><span class="sxs-lookup"><span data-stu-id="21bc2-113">Service</span></span>|<span data-ttu-id="21bc2-114">説明</span><span class="sxs-lookup"><span data-stu-id="21bc2-114">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IExtenderProviderService>|<span data-ttu-id="21bc2-115">独自の拡張プロバイダーを提供するコンテナーのコンポーネントのコレクションの一部ではないオブジェクトを有効にします。</span><span class="sxs-lookup"><span data-stu-id="21bc2-115">Enables objects that are not part of the container’s components collection to provide their own extender providers.</span></span>|  
|<xref:System.ComponentModel.Design.IExtenderListService>|<span data-ttu-id="21bc2-116">使用される<xref:System.ComponentModel.TypeDescriptor>拡張プロバイダーの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-116">Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers.</span></span> <span data-ttu-id="21bc2-117">このサービスは、拡張プロバイダーは、コンテナーの外部で live ことができます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-117">With this service, extender providers can live outside of the container.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="21bc2-118">デザイナーのメタデータのフックを提供します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-118">Provides designer metadata hooks.</span></span> <span data-ttu-id="21bc2-119">これは、メタデータのフィルター処理の主インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="21bc2-119">This is the primary interface for metadata filtering.</span></span>|  
|<xref:System.ComponentModel.Design.ISelectionService>|<span data-ttu-id="21bc2-120">デザイナーでコンポーネントを選択する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-120">Provides a way to select components in the designer.</span></span>|  
|<xref:System.ComponentModel.Design.IReferenceService>|<span data-ttu-id="21bc2-121">これらのオブジェクトが配置されていない場合でも、オブジェクトの名前を取得する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-121">Provides a way to get a name for objects, even when those objects are not sited.</span></span>|  
|<xref:System.ComponentModel.Design.DesignSurface>|<span data-ttu-id="21bc2-122">デザイン画面は、サービスとして提供しています。</span><span class="sxs-lookup"><span data-stu-id="21bc2-122">Offers the design surface itself as a service.</span></span>|  
|<xref:System.ComponentModel.Design.DesignerOptionService>|<span data-ttu-id="21bc2-123">デザイナーのオプションの値を取得および設定するために使用する基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-123">Provides a base class for getting and setting option values for a designer.</span></span>|  
  
 <span data-ttu-id="21bc2-124">次の表は、既定で提供が交換可能なサービスを示しています。</span><span class="sxs-lookup"><span data-stu-id="21bc2-124">The following table shows the non-replaceable services provided by default.</span></span>  
  
|<span data-ttu-id="21bc2-125">サービス</span><span class="sxs-lookup"><span data-stu-id="21bc2-125">Service</span></span>|<span data-ttu-id="21bc2-126">説明</span><span class="sxs-lookup"><span data-stu-id="21bc2-126">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IComponentChangeService>|<span data-ttu-id="21bc2-127">コンポーネントに変更が加えられると、イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-127">Raises events as changes are made to components.</span></span>|  
|<xref:System.ComponentModel.Design.IDesignerHost>|<span data-ttu-id="21bc2-128">種類、サービス、およびトランザクションへのアクセスを制御します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-128">Controls access to types, services, and transactions.</span></span> <span data-ttu-id="21bc2-129">デザイナーのマスター インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="21bc2-129">Master interface for designers.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="21bc2-130">設計されているコンポーネントのセットを所有しています。</span><span class="sxs-lookup"><span data-stu-id="21bc2-130">Owns the set of components that are being designed.</span></span> <span data-ttu-id="21bc2-131">各デザイナーには、<xref:System.ComponentModel.IContainer>コンポーネントを所有しています。</span><span class="sxs-lookup"><span data-stu-id="21bc2-131">Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.</span></span>|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="21bc2-132">派生した<xref:System.IServiceProvider>しを追加し、デザイナーからサービスを削除する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-132">Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer.</span></span>|  
  
 <span data-ttu-id="21bc2-133">これらのサービスだけでなく、<xref:System.ComponentModel.Design.DesignSurface>クラスでは、コンポーネントのサイトで使用可能な 1 つのサービスも提供します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-133">In addition to these services, the <xref:System.ComponentModel.Design.DesignSurface> class also provides a single service that is available through a component’s site.</span></span> <span data-ttu-id="21bc2-134">このサービスは、コンポーネントごとに一意です。</span><span class="sxs-lookup"><span data-stu-id="21bc2-134">This service is unique for each component.</span></span> <span data-ttu-id="21bc2-135">次の表には、置き換えることのできないサービスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-135">The following table shows the services that cannot be replaced.</span></span>  
  
|<span data-ttu-id="21bc2-136">サービス</span><span class="sxs-lookup"><span data-stu-id="21bc2-136">Service</span></span>|<span data-ttu-id="21bc2-137">説明</span><span class="sxs-lookup"><span data-stu-id="21bc2-137">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IDictionaryService>|<span data-ttu-id="21bc2-138">コンポーネントに関する任意のデータの格納に使用できるキー/値ペアのジェネリック ディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="21bc2-138">A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.</span></span>|  
|<xref:System.ComponentModel.INestedContainer>|<span data-ttu-id="21bc2-139">追加の子コンポーネントをデザイナーに追加するコンポーネントを有効にするコンテナー。</span><span class="sxs-lookup"><span data-stu-id="21bc2-139">A container that enables a component to add additional child components to the designer.</span></span> <span data-ttu-id="21bc2-140">これらのコンポーネントは、デザイン サーフェイスの一部になりますが、シリアル化に参加しません。</span><span class="sxs-lookup"><span data-stu-id="21bc2-140">These components will be part of the design surface, but will not participate in serialization.</span></span> <span data-ttu-id="21bc2-141">これは、は、デザイナーで、それ自体の領域を公開できるコントロールをデザインするときに便利ですが、シリアル化に参加する領域をしたくないです。</span><span class="sxs-lookup"><span data-stu-id="21bc2-141">This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.</span></span>|  
  
 <span data-ttu-id="21bc2-142">加え<xref:System.ComponentModel.ISite>サイトには、次のインターフェイスも実装されています。</span><span class="sxs-lookup"><span data-stu-id="21bc2-142">In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="21bc2-143">実装していない他のサイトの実装が可能性がありますので、無差別なキャストを使用するのではなく、これらのインターフェイスの存在を確認してください。</span><span class="sxs-lookup"><span data-stu-id="21bc2-143">Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.</span></span>  
  
|<span data-ttu-id="21bc2-144">サービス</span><span class="sxs-lookup"><span data-stu-id="21bc2-144">Service</span></span>|<span data-ttu-id="21bc2-145">説明</span><span class="sxs-lookup"><span data-stu-id="21bc2-145">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="21bc2-146">サイト固有のサービスのコンテナーを取得する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-146">Provides a way to get to the container of site-specific services.</span></span> <span data-ttu-id="21bc2-147">たとえば、<xref:System.ComponentModel.Design.IDictionaryService>はサイト固有のサービスです。</span><span class="sxs-lookup"><span data-stu-id="21bc2-147">For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service.</span></span> <span data-ttu-id="21bc2-148">このサービスでは、サイト固有の他のサービスを追加できます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-148">With this service, you can add additional site-specific services.</span></span>|  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="21bc2-149">システム リソースへのフル アクセス。</span>
      <span class="sxs-lookup">
        <span data-stu-id="21bc2-149">for full access to system resources.</span>
      </span>
      <span data-ttu-id="21bc2-150">値を要求: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />、<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="21bc2-150">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="21bc2-151">関連付けられた状態。</span>
      <span class="sxs-lookup">
        <span data-stu-id="21bc2-151">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-152">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-152">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-153">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-153">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-154">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-154">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurface : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface" Usage="new System.ComponentModel.Design.DesignSurface parentProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="21bc2-155">親サービス プロバイダー。サービスの解決に使用する親が存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-155">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-156">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-156">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-157">ときに`parentProvide`が存在する、画面に含まれるデザイナーは、アプリケーションからサービスを取得できます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-157">When `parentProvide` is present, designers contained within the surface can retrieve services from the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-158">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-158">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(Type ^ rootComponentType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurface : Type -&gt; System.ComponentModel.Design.DesignSurface" Usage="new System.ComponentModel.Design.DesignSurface rootComponentType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType">
          <span data-ttu-id="21bc2-159">作成するルート コンポーネントの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-159">The type of root component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-160">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-160">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-161">使用すると、<xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A>コンス トラクター、さらに、指定された型のコンポーネントを作成し、読み込みプロセスを終了する単純なデザイナー ローダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-161">When you use the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="21bc2-162">これは、簡単にすることを前提として、デザイナーを作成すべて状態の保存が外部で実行します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-162">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="21bc2-163">内部的には、呼び出される<xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>ルート コンポーネントの種類を渡します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-163">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21bc2-164"><xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A>オーバー ロードを受けません<xref:System.Windows.Forms.Design.DesignerOptions>します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-164">The <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>.</span></span> <span data-ttu-id="21bc2-165"><xref:System.Windows.Forms.Design.DesignerOptions>デザイン サーフェイスが読み込まれる前に、サービス コンテナーである必要があります。</span><span class="sxs-lookup"><span data-stu-id="21bc2-165">The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads.</span></span> <span data-ttu-id="21bc2-166">アクセスが必要な場合<xref:System.Windows.Forms.Design.DesignerOptions>、空のコンス トラクターを呼び出して、追加、<xref:System.Windows.Forms.Design.DesignerOptions>を<xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A>を呼び出すと<xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>で`rootComponentType`します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-166">If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21bc2-167">
            <paramref name="rootComponent" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-167">
              <paramref name="rootComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-168">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-168">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider, Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider, class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider, rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider, Type ^ rootComponentType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurface : IServiceProvider * Type -&gt; System.ComponentModel.Design.DesignSurface" Usage="new System.ComponentModel.Design.DesignSurface (parentProvider, rootComponentType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="21bc2-169">親サービス プロバイダー。サービスの解決に使用する親が存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-169">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span>
          </span>
        </param>
        <param name="rootComponentType">
          <span data-ttu-id="21bc2-170">作成するルート コンポーネントの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-170">The type of root component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-171">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-171">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-172">使用して、<xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A>コンス トラクターは、指定された型のコンポーネントを作成し、読み込みプロセスを終了する単純なデザイナー ローダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-172">Using the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="21bc2-173">これは、簡単にすることを前提として、デザイナーを作成すべて状態の保存が外部で実行します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-173">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="21bc2-174">内部的には、呼び出される<xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>ルート コンポーネントの種類を渡します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-174">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21bc2-175">
            <paramref name="rootComponent" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-175">
              <paramref name="rootComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-176">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-176">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-177">読み込みプロセスを開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-177">Begins the loading process.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (System.ComponentModel.Design.Serialization.DesignerLoader loader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.ComponentModel.Design.Serialization.DesignerLoader loader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (loader As DesignerLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(System::ComponentModel::Design::Serialization::DesignerLoader ^ loader);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.ComponentModel.Design.Serialization.DesignerLoader -&gt; unit" Usage="designSurface.BeginLoad loader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loader" Type="System.ComponentModel.Design.Serialization.DesignerLoader" />
      </Parameters>
      <Docs>
        <param name="loader">
          <span data-ttu-id="21bc2-178">デザイナーの読み込みに使用するデザイナー ローダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-178">The designer loader to use for loading the designer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-179">指定したデザイナー ローダーを使用して、読み込みプロセスを開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-179">Begins the loading process with the given designer loader.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-180">読み込みは引き続きがこの呼び出しが返された後に、デザイナーの読み込みは非同期でできます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-180">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="21bc2-181">イベント ハンドラーを結び付ける、<xref:System.ComponentModel.Design.IDesignerHost.LoadComplete>デザイン サーフェイスの読み込みが完了したときに通知するイベントです。</span><span class="sxs-lookup"><span data-stu-id="21bc2-181">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="21bc2-182">後<xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>が呼び出されると、すぐに取得できます、ビュー、デザイナーのデザイナー ローダーする必要があります提供ため、少なくともルート コンポーネント非同期的に読み込むときにします。</span><span class="sxs-lookup"><span data-stu-id="21bc2-182">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21bc2-183">
            <paramref name="loader" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-183">
              <paramref name="loader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-184">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-184">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(Type ^ rootComponentType);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : Type -&gt; unit" Usage="designSurface.BeginLoad rootComponentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType">
          <span data-ttu-id="21bc2-185">デザイン モードで作成するコンポーネントの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-185">The type of component to create in design mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-186">読み込みプロセスを開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-186">Begins the loading process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-187">ときに`rootComponentType`が指定されているだけのインスタンスを作成する既定のデザイナー ローダー`rootComponentType`使用されます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-187">When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used.</span></span> <span data-ttu-id="21bc2-188">読み込みは引き続きがこの呼び出しが返された後に、デザイナーの読み込みは非同期でできます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-188">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="21bc2-189">イベント ハンドラーを結び付ける、<xref:System.ComponentModel.Design.IDesignerHost.LoadComplete>デザイン サーフェイスの読み込みが完了したときに通知するイベントです。</span><span class="sxs-lookup"><span data-stu-id="21bc2-189">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="21bc2-190">後<xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>が呼び出されると、すぐに取得できます、ビュー、デザイナーのデザイナー ローダーする必要があります提供ため、少なくともルート コンポーネント非同期的に読み込むときにします。</span><span class="sxs-lookup"><span data-stu-id="21bc2-190">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21bc2-191"><xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>メソッドは、コンポーネントの種類のインスタンスを作成し、このインスタンス用のデザイナーを初期化します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-191">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method creates an instance of the component type and initializes a designer for this instance.</span></span> <span data-ttu-id="21bc2-192"><xref:System.ComponentModel.Design.DesignSurface.Loaded>イベントは、このメソッドが戻る前に発生します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-192">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21bc2-193">
            <paramref name="rootComponentType" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-193">
              <paramref name="rootComponentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-194">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-194">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ComponentContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer ComponentContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer ComponentContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ComponentContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComponentContainer As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ ComponentContainer { System::ComponentModel::IContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComponentContainer : System.ComponentModel.IContainer" Usage="System.ComponentModel.Design.DesignSurface.ComponentContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-195">デザイン サーフェイス内の <see cref="T:System.ComponentModel.IContainer" /> 実装を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-195">Gets the <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21bc2-196">デザイン サーフェイス内の <see cref="T:System.ComponentModel.IContainer" /> 実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-196">The <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-197"><xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>プロパティはデザイン モードであるすべてのオブジェクトを保持します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-197">The <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> property holds all objects that are currently in design mode.</span></span> <span data-ttu-id="21bc2-198">コンポーネントを追加するときに<xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>、自分のデザイナーがある場合、読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="21bc2-198">When components are added to <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, their designer, if any, is loaded.</span></span> <span data-ttu-id="21bc2-199">コンポーネントがデザイン サーフェイスへのフル アクセスを提供するサイトの位置します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-199">The component is sited with a site that provides full access to the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-200">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-200">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IComponent CreateComponent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateComponent (componentType As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type -&gt; System.ComponentModel.IComponent&#xA;override this.CreateComponent : Type -&gt; System.ComponentModel.IComponent" Usage="designSurface.CreateComponent componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("CreateComponent has been replaced by CreateInstance and will be removed after Beta2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="21bc2-201">作成するコンポーネントの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-201">The type of component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-202">コンポーネントのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-202">Creates an instance of a component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21bc2-203">新規作成したコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-203">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-204"><xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A>メソッドは、デザイン画面の<xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A>コンポーネントのインスタンスを作成するメソッド。</span><span class="sxs-lookup"><span data-stu-id="21bc2-204">The <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> method is called by the design surface’s <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component.</span></span> <span data-ttu-id="21bc2-205">コンポーネントを作成し、デザイン画面で、パブリック コンテナーに追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="21bc2-205">The component should be created and added to the public container on the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21bc2-206">
            <paramref name="componentType" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-206">
              <paramref name="componentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-207">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-207">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, bool rootDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, bool rootDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateDesigner (component As IComponent, rootDesigner As Boolean) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, bool rootDesigner);" />
      <MemberSignature Language="F#" Value="abstract member CreateDesigner : System.ComponentModel.IComponent * bool -&gt; System.ComponentModel.Design.IDesigner&#xA;override this.CreateDesigner : System.ComponentModel.IComponent * bool -&gt; System.ComponentModel.Design.IDesigner" Usage="designSurface.CreateDesigner (component, rootDesigner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="rootDesigner" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="21bc2-208">デザイナーを作成する必要のあるコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-208">The component for which the designer should be created.</span>
          </span>
        </param>
        <param name="rootDesigner">
          <span data-ttu-id="21bc2-209">ルート デザイナーを作成する場合は <see langword="true" />。通常のデザイナーを作成する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-209">
              <see langword="true" /> to create a root designer; <see langword="false" /> to create a normal designer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-210">コンテナーにコンポーネントが追加されたときに、デザイナーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-210">Creates a designer when a component is added to the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21bc2-211">要求したデザイナーのインスタンス。一致するデザイナーが見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-211">An instance of the requested designer, or <see langword="null" /> if no matching designer could be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-212"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A>メソッドは、デザイン画面の<xref:System.ComponentModel.IContainer>コンポーネントがコンテナーに追加されたとき。</span><span class="sxs-lookup"><span data-stu-id="21bc2-212">The <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> method is called by the design surface’s <xref:System.ComponentModel.IContainer> when a component is added to the container.</span></span> <span data-ttu-id="21bc2-213">このメソッドは、デザイナーを作成しますが、初期化しません。</span><span class="sxs-lookup"><span data-stu-id="21bc2-213">This method creates a designer, but does not initialize it.</span></span> <span data-ttu-id="21bc2-214">返されると、デザイナーがコンテナーで初期化されます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-214">When it returns, the designer is initialized by the container.</span></span>  
  
 <span data-ttu-id="21bc2-215"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> デザイナーの 2 つの種類を作成できます。 ルート デザイナーと通常のデザイナー。</span><span class="sxs-lookup"><span data-stu-id="21bc2-215"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> can create two different types of designers: root designers and normal designers.</span></span> <span data-ttu-id="21bc2-216">ルート デザイナーは、定義では、コンテナーに追加する最初のコンポーネントをデザイン画面のルート コンポーネントのデザイナーです。</span><span class="sxs-lookup"><span data-stu-id="21bc2-216">A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container.</span></span> <span data-ttu-id="21bc2-217">ルート デザイナーは、エンドユーザーに表示されるユーザー インターフェイスを担当しているために、通常のデザイナーとは異なります。</span><span class="sxs-lookup"><span data-stu-id="21bc2-217">Root designers differ from normal designers because they are responsible for the user interface presented to the end user.</span></span> <span data-ttu-id="21bc2-218">ルート デザイナーは、通常、このインターフェイスを提供するデザイン サーフェイスにデザイナーの残りの部分と調整します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-218">Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.</span></span>  
  
 <span data-ttu-id="21bc2-219">このメソッドの既定の実装がデリゲート<xref:System.ComponentModel.TypeDescriptor>で渡し<xref:System.ComponentModel.Design.IRootDesigner>ルート デザイナーのデザイナー型としてまたは<xref:System.ComponentModel.Design.IDesigner>の通常のデザイナー。</span><span class="sxs-lookup"><span data-stu-id="21bc2-219">The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers.</span></span> <span data-ttu-id="21bc2-220">デザイナーの特定の種類を要求するには、このメソッドをオーバーライドすることができます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-220">You can override this method to request a specific type of designer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21bc2-221">
            <paramref name="component" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-221">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-222">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-222">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected internal virtual object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type -&gt; obj&#xA;override this.CreateInstance : Type -&gt; obj" Usage="designSurface.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="21bc2-223">作成する型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-223">The type to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-224">指定された型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-224">Creates an instance of the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21bc2-225">新しく作成されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-225">The newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-226">場合`type`は、 <xref:System.ComponentModel.IComponent>、<xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A>型のコンス トラクターを検索<xref:System.ComponentModel.IContainer>後に最初に、空のコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="21bc2-226">If `type` is an <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> searches for a constructor of type <xref:System.ComponentModel.IContainer> first, followed by an empty constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21bc2-227">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-227">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-228">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-228">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNestedContainer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-229">コントロールまたはコンポーネントの入れ子に適したコンテナーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-229">Creates a container suitable for nesting controls or components.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent);" />
      <MemberSignature Language="F#" Value="member this.CreateNestedContainer : System.ComponentModel.IComponent -&gt; System.ComponentModel.INestedContainer" Usage="designSurface.CreateNestedContainer owningComponent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owningComponent">
          <span data-ttu-id="21bc2-230">入れ子になったコンテナーを管理するコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-230">The component that manages the nested container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-231">コントロールまたはコンポーネントの入れ子に適したコンテナーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-231">Creates a container suitable for nesting controls or components.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21bc2-232">入れ子になったコンテナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-232">The nested container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-233">コンポーネントを入れ子になったコンテナーに追加すると、そのデザイナーを作成し、資格のあるすべてのサービスで使用できるように、デザイン画面からします。</span><span class="sxs-lookup"><span data-stu-id="21bc2-233">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="21bc2-234">入れ子になったコンテナーに追加されたコンポーネントは、シリアル化には関与しません。</span><span class="sxs-lookup"><span data-stu-id="21bc2-234">Components added to nested containers do not participate in serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21bc2-235">
            <paramref name="owningComponent" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-235">
              <paramref name="owningComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-236">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-236">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent, string containerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent, string containerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent, containerName As String) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent, System::String ^ containerName);" />
      <MemberSignature Language="F#" Value="member this.CreateNestedContainer : System.ComponentModel.IComponent * string -&gt; System.ComponentModel.INestedContainer" Usage="designSurface.CreateNestedContainer (owningComponent, containerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
        <Parameter Name="containerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owningComponent">
          <span data-ttu-id="21bc2-237">入れ子になったコンテナーを管理するコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-237">The component that manages the nested container.</span>
          </span>
        </param>
        <param name="containerName">
          <span data-ttu-id="21bc2-238">入れ子になったコンテナーの追加の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-238">An additional name for the nested container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-239">コントロールまたはコンポーネントの入れ子に適したコンテナーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-239">Creates a container suitable for nesting controls or components.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21bc2-240">入れ子になったコンテナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-240">The nested container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-241">コンポーネントを入れ子になったコンテナーに追加すると、そのデザイナーを作成し、資格のあるすべてのサービスで使用できるように、デザイン画面からします。</span><span class="sxs-lookup"><span data-stu-id="21bc2-241">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="21bc2-242">入れ子になったコンテナーに追加されたコンポーネントは、シリアル化には関与しません。</span><span class="sxs-lookup"><span data-stu-id="21bc2-242">Components added to nested containers do not participate in serialization.</span></span>  
  
 <span data-ttu-id="21bc2-243">追加の名前を行うことができます、<xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A>メソッドに値を渡すことによって`containerName`します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-243">You can provide an additional name for the <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> method by passing a value into `containerName`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21bc2-244">
            <paramref name="owningComponent" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-244">
              <paramref name="owningComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-245">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-245">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-246">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> で使用したリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-246">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="designSurface.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-247">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> で使用したリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-247">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-248">パブリック<xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>メソッドの標準に準拠<xref:System.IDisposable>パターン。</span><span class="sxs-lookup"><span data-stu-id="21bc2-248">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="21bc2-249">このメソッドを呼び出すと、デザイン サーフェイスが破棄されます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-249">Calling this method destroys the design surface.</span></span> <span data-ttu-id="21bc2-250">このメソッドの保護されたバージョンが`virtual`され、通常の<xref:System.IDisposable>パターン。</span><span class="sxs-lookup"><span data-stu-id="21bc2-250">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21bc2-251"><xref:System.ComponentModel.Design.DesignSurface> 、クリーンアップするネイティブ コードではありませんがないファイナライザーを呼び出す<xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-251">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>.</span></span> <span data-ttu-id="21bc2-252">呼び出す必要がある場合<xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>、自分でファイナライザーを追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="21bc2-252">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="21bc2-253"><xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> を使い終わったら <xref:System.ComponentModel.Design.DesignSurface> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-253">Call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="21bc2-254"><xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> メソッドによって、<xref:System.ComponentModel.Design.DesignSurface> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="21bc2-254">The <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state.</span></span> <span data-ttu-id="21bc2-255">呼び出した後<xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.ComponentModel.Design.DesignSurface>ガベージ コレクターがメモリをクリアできるようにする、<xref:System.ComponentModel.Design.DesignSurface>によって占有されていた。</span><span class="sxs-lookup"><span data-stu-id="21bc2-255">After calling <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying.</span></span> <span data-ttu-id="21bc2-256">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-256">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21bc2-257"><xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.ComponentModel.Design.DesignSurface> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="21bc2-257">Always call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="21bc2-258">そうしないと、ガベージ コレクターが <xref:System.ComponentModel.Design.DesignSurface> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="21bc2-258">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="designSurface.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="21bc2-259">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-259">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-260">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> で使用したリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-260">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-261">パブリック<xref:System.ComponentModel.Design.DesignSurface.Dispose>メソッドの標準に準拠<xref:System.IDisposable>パターン。</span><span class="sxs-lookup"><span data-stu-id="21bc2-261">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="21bc2-262">このメソッドを呼び出すと、デザイン サーフェイスが破棄されます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-262">Calling this method destroys the design surface.</span></span> <span data-ttu-id="21bc2-263">このメソッドの保護されたバージョンが`virtual`され、通常の<xref:System.IDisposable>パターン。</span><span class="sxs-lookup"><span data-stu-id="21bc2-263">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21bc2-264"><xref:System.ComponentModel.Design.DesignSurface> 、クリーンアップするネイティブ コードではありませんがないファイナライザーを呼び出す<xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-264">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>.</span></span> <span data-ttu-id="21bc2-265">呼び出す必要がある場合<xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>、自分でファイナライザーを追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="21bc2-265">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="21bc2-266">このメソッドは、パブリック`Dispose()`メソッドと<xref:System.Object.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="21bc2-266">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="21bc2-267">`Dispose()` 保護された起動`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-267">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="21bc2-268"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`に設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-268"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="21bc2-269">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.ComponentModel.Design.DesignSurface>参照。</span><span class="sxs-lookup"><span data-stu-id="21bc2-269">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references.</span></span> <span data-ttu-id="21bc2-270">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-270">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="21bc2-271">
            <para>
              <see langword="Dispose" /> 他のオブジェクトで何度も呼び出せます。オーバーライドするときに<see langword="Dispose(Boolean)" />の事前に呼び出したで以前破棄されたオブジェクトを参照しないように注意する<see langword="Dispose" />します。実装する方法についての詳細は<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-271">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposed;" />
      <MemberSignature Language="F#" Value="member this.Disposed : EventHandler " Usage="member this.Disposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-272">デザイン サーフェイスが破棄されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-272">Occurs when the design surface is disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-273">サーフェイスが破棄された場合にのみ、パブリック<xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>メソッド<xref:System.ComponentModel.Design.DesignSurface>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-273">The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DtelLoading">
      <MemberSignature Language="C#" Value="public bool DtelLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DtelLoading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.DtelLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property DtelLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DtelLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DtelLoading : bool with get, set" Usage="System.ComponentModel.Design.DesignSurface.DtelLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-274">**デザイン時エラー一覧**が読み込まれているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-274">Gets a value indicating whether the **Design-time Error List** is loading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21bc2-275">
            <see langword="true" /> 場合、**デザイン時エラー一覧**読み込み。 それ以外は<see langword="false" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-275">
              <see langword="true" /> if the **Design-time Error List** is loading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="designSurface.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-276">デザイン サーフェイスへの変更をシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-276">Serializes changes to the design surface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-277"><xref:System.ComponentModel.Design.DesignSurface.Flush%2A>シリアライザーまでデザイン サーフェイスに加えられた変更をプッシュするメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-277">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method can be called to push changes made to the design surface down to the serializer.</span></span> <span data-ttu-id="21bc2-278">これにより、デザイン画面と、シリアル化された状態が同期されています。</span><span class="sxs-lookup"><span data-stu-id="21bc2-278">This ensures that the design surface and its serialized state are synchronized.</span></span> <span data-ttu-id="21bc2-279">このメソッドの実際の実装は、デザイン サーフェイスに関連付けられたデザイナー ローダーに転送されます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-279">The actual implementation of this method is forwarded to the designer loader associated with design surface.</span></span> <span data-ttu-id="21bc2-280">デザイナー ローダーまでの変更を遅延することもできます<xref:System.ComponentModel.Design.DesignSurface.Flush%2A>が呼び出され、またはシリアル化されたデータをすべてのユーザーの変更で最新に保つためにそのこともできます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-280">The designer loader may choose to defer changes until <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> is called, or it may choose to keep the serialized data up to date with all user changes.</span></span> <span data-ttu-id="21bc2-281"><xref:System.ComponentModel.Design.DesignSurface.Flush%2A>メソッドは、デザイナー ローダーが使用したモデルに関係なくシリアル化の状態が同期されるは、実際のデザイン画面を確認します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-281">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flushed">
      <MemberSignature Language="C#" Value="public event EventHandler Flushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Flushed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Flushed" />
      <MemberSignature Language="VB.NET" Value="Public Event Flushed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Flushed;" />
      <MemberSignature Language="F#" Value="member this.Flushed : EventHandler " Usage="member this.Flushed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-282">
            <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> の <see cref="T:System.ComponentModel.Design.DesignSurface" /> メソッドが呼び出されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-282">Occurs when a call is made to the <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> method of <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-283">デザイナー ローダーが最初に、フラッシュし、<xref:System.ComponentModel.Design.DesignSurface.Flushed>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-283">The designer loader is flushed first, and then the <xref:System.ComponentModel.Design.DesignSurface.Flushed> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designSurface.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="21bc2-284">取得するサービスの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-284">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-285">サービス コンテナーからサービスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-285">Gets a service from the service container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21bc2-286">
            <paramref name="serviceType" /> を実装するオブジェクト、または serviceType の派生クラスであるオブジェクト。サービス コンテナーにサービスが存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-286">An object that implements, or is a derived class of, <paramref name="serviceType" />, or <see langword="null" /> if the service does not exist in the service container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-287"><xref:System.ComponentModel.Design.DesignSurface.GetService%2A>メソッドは、デザイン サーフェイスのサービス コンテナーにサービスを取得します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-287">The <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> method retrieves a service in the design surface’s service container.</span></span> <span data-ttu-id="21bc2-288">さらに、これは構築時に、デザイン画面に指定されたサービス プロバイダーに転送します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-288">In addition, this will forward to any service provider that was given to the design surface at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoaded : bool" Usage="System.ComponentModel.Design.DesignSurface.IsLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-289">デザイン サーフェイスが現在読み込まれているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-289">Gets a value indicating whether the design surface is currently loaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21bc2-290">デザイン サーフェイスが現在読み込まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-290">
              <see langword="true" /> if the design surface is currently loaded; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.LoadedEventHandler Loaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.LoadedEventHandler Loaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Loaded As LoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::LoadedEventHandler ^ Loaded;" />
      <MemberSignature Language="F#" Value="member this.Loaded : System.ComponentModel.Design.LoadedEventHandler " Usage="member this.Loaded : System.ComponentModel.Design.LoadedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.LoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-291">デザイナーの読み込みが完了したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-291">Occurs when the designer load has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-292"><xref:System.ComponentModel.Design.DesignSurface.Loaded>読み込みに成功と失敗のイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-292">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised for successful loads as well as unsuccessful ones.</span></span> <span data-ttu-id="21bc2-293">このイベント ハンドラーのコードでは、例外をスローする場合、デザイナーはアンロードされます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-293">If code in this event handler throws an exception, the designer is unloaded.</span></span>  
  
 <span data-ttu-id="21bc2-294"><xref:System.ComponentModel.Design.LoadedEventArgs>オブジェクトは、成功、読み込んでいる場合を判断するために使用できるし、読み込み中に発生したエラーの一覧も提供します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-294">The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21bc2-295">シリアル化システムがエラーを許容できることも、読み込みに成功のエラーが発生することができます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-295">Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection LoadErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection LoadErrors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.LoadErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadErrors As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ LoadErrors { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadErrors : System.Collections.ICollection" Usage="System.ComponentModel.Design.DesignSurface.LoadErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-296">読み込みエラーのコレクションまたは void コレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-296">Returns a collection of loading errors or a void collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21bc2-297">読み込みエラーの <see cref="T:System.Collections.ICollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-297">A <see cref="T:System.Collections.ICollection" /> of loading errors.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public event EventHandler Loading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Loading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Event Loading As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Loading;" />
      <MemberSignature Language="F#" Value="member this.Loading : EventHandler " Usage="member this.Loading : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-298">デザイナーの読み込みを開始する直前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-298">Occurs when the designer is about to be loaded.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnLoaded (System.ComponentModel.Design.LoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoaded(class System.ComponentModel.Design.LoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoaded (e As LoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoaded(System::ComponentModel::Design::LoadedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoaded : System.ComponentModel.Design.LoadedEventArgs -&gt; unit&#xA;override this.OnLoaded : System.ComponentModel.Design.LoadedEventArgs -&gt; unit" Usage="designSurface.OnLoaded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.LoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="21bc2-299">イベント データを格納している <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-299">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-300">
            <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-300">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoading">
      <MemberSignature Language="C#" Value="protected virtual void OnLoading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoading(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoading : EventArgs -&gt; unit&#xA;override this.OnLoading : EventArgs -&gt; unit" Usage="designSurface.OnLoading e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="21bc2-301">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-301">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-302">
            <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-302">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloaded">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloaded (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloaded(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloaded (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloaded(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnloaded : EventArgs -&gt; unit&#xA;override this.OnUnloaded : EventArgs -&gt; unit" Usage="designSurface.OnUnloaded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="21bc2-303">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-303">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-304">
            <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-304">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloading">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloading(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnloading : EventArgs -&gt; unit&#xA;override this.OnUnloading : EventArgs -&gt; unit" Usage="designSurface.OnUnloading e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="21bc2-305">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-305">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-306">
            <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-306">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnViewActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnViewActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnViewActivate : EventArgs -&gt; unit&#xA;override this.OnViewActivate : EventArgs -&gt; unit" Usage="designSurface.OnViewActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="21bc2-307">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-307">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21bc2-308">
            <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-308">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceContainer : System.ComponentModel.Design.ServiceContainer" Usage="System.ComponentModel.Design.DesignSurface.ServiceContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-309">サービス コンテナーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-309">Gets the service container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21bc2-310">デザイン サーフェイスに含まれるデザイナーにすべてのサービスを提供するサービス コンテナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-310">The service container that provides all services to designers contained within the design surface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-311">構築時に、<xref:System.ComponentModel.Design.DesignSurface>をこのサービス コンテナーに既定のサービスを追加します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-311">At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container.</span></span> <span data-ttu-id="21bc2-312">現在の状態で、既定のサービスをおくことができますか、それらを削除し、独自で置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-312">You can leave the default services in their present state, or you can remove them and replace them with your own.</span></span> <span data-ttu-id="21bc2-313">構築時に追加することのパフォーマンスの損失がないため、すべて必要に応じて、作成の既定のサービスには。</span><span class="sxs-lookup"><span data-stu-id="21bc2-313">The default services are all demand-created, so there is no loss in performance for adding them at construction time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-314">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-314">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public event EventHandler Unloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloaded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloaded;" />
      <MemberSignature Language="F#" Value="member this.Unloaded : EventHandler " Usage="member this.Unloaded : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-315">デザイナーのアンロードを終了したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-315">Occurs when a designer has finished unloading.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloading">
      <MemberSignature Language="C#" Value="public event EventHandler Unloading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloading" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloading As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloading;" />
      <MemberSignature Language="F#" Value="member this.Unloading : EventHandler " Usage="member this.Unloading : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-316">デザイナーのアンロードを開始する直前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-316">Occurs when a designer is about to unload.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-317">デザイナーをアンロードするときに、デザイナーのビューを含むすべてのデザイナーの状態は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-317">When a designer unloads, the entire state for that designer is destroyed, including the designer’s view.</span></span> <span data-ttu-id="21bc2-318">この時点では、ビューを親が設定できないする必要があります。</span><span class="sxs-lookup"><span data-stu-id="21bc2-318">The view should be unparented at this time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public object View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object View" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.View" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property View As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ View { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.View : obj" Usage="System.ComponentModel.Design.DesignSurface.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-319">ルート デザイナーのビューを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-319">Gets the view for the root designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21bc2-320">ルート デザイナーのビュー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-320">The view for the root designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-321"><xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>メソッドは、読み込みプロセスを開始する事前呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="21bc2-321">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process.</span></span> <span data-ttu-id="21bc2-322">デザイナー ローダーのため、ビューを提供するルート デザイナーは、最初にデザイナー ローダーによって作成されたオブジェクトの読み込みが完了する前に、ビューを返すことになります。</span><span class="sxs-lookup"><span data-stu-id="21bc2-322">It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader.</span></span> <span data-ttu-id="21bc2-323">ビューを使用できない場合は、<xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>例外を発生させます。</span><span class="sxs-lookup"><span data-stu-id="21bc2-323">If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.</span></span>  
  
 <span data-ttu-id="21bc2-324">ビュー技術の概念は、古い形式です。</span><span class="sxs-lookup"><span data-stu-id="21bc2-324">The notion of a view technology is obsolete.</span></span> <span data-ttu-id="21bc2-325">ただし、旧バージョンとの互換性のためのルート デザイナーのインターフェイスに残ります。</span><span class="sxs-lookup"><span data-stu-id="21bc2-325">But, it remains in the interfaces for root designers for backward compatibility.</span></span> <span data-ttu-id="21bc2-326">使用してすべてのユーザーからの使用が非表示<xref:System.ComponentModel.Design.DesignSurface>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="21bc2-326">Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span> <span data-ttu-id="21bc2-327"><xref:System.ComponentModel.Design.DesignSurface.View%2A>プロパティがサポートされているテクノロジをルート デザイナーに渡すことによってビュー テクノロジを非表示にします。</span><span class="sxs-lookup"><span data-stu-id="21bc2-327">The <xref:System.ComponentModel.Design.DesignSurface.View%2A> property hides view technologies by passing the supported technologies back into the root designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21bc2-328">次のコード例に示す方法<xref:System.ComponentModel.Design.DesignSurface.View%2A>非表示には、テクノロジを表示します。</span><span class="sxs-lookup"><span data-stu-id="21bc2-328">The following code example shows how <xref:System.ComponentModel.Design.DesignSurface.View%2A> hides view technologies.</span></span>  
  
 ```csharp 
 IRootDesigner d;  
  
 ViewTechnology[] supported = d.SupportedTechnologies;  
  
 return d.GetView(supported[0]);
 ``` 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="21bc2-329">デザイン サーフェイスが読み込まれていないか、デザイナー ローダーがルート デザイナーをまだ作成していません。または、デザイン サーフェイスの読み込みは終了しましたが、読み込みに失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-329">The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed.</span>
          </span>
          <span data-ttu-id="21bc2-330">詳細については、<see cref="P:System.Exception.InnerException" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-330">More information may available in the <see cref="P:System.Exception.InnerException" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="21bc2-331">デザイナーは読み込まれましたが、このデザイン サーフェイスと互換性のあるビューを提供しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-331">The designer loaded, but it does not offer a view compatible with this design surface.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="21bc2-332">
            <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-332">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ViewActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ViewActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewActivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />
      <MemberSignature Language="VB.NET" Value="Public Event ViewActivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewActivated;" />
      <MemberSignature Language="F#" Value="member this.ViewActivated : EventHandler " Usage="member this.ViewActivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21bc2-333">
            <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> メソッドが <see cref="T:System.ComponentModel.Design.IDesignerHost" /> に対して呼び出されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21bc2-333">Occurs when the <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method has been called on <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21bc2-334">サポートする場合、<xref:System.ComponentModel.Design.IDesignerHost.Activate%2A>メソッド、イベント ハンドラーは、このデザイン サーフェイスでのウィンドウをアクティブ化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="21bc2-334">If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
  </Members>
</Type>