<Type Name="IDesigner" FullName="System.ComponentModel.Design.IDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0849fa0e599b09ff55fcc31d8a1d86c544bb6a9b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesigner : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesigner implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesigner&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesigner : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="13945-101">カスタム デザイナーを構築するための基本フレームワークを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="13945-101">Provides the basic framework for building a custom designer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13945-102"><xref:System.ComponentModel.Design.IDesigner>インターフェイスが使用されるデザイナーの基本的なサービスを実装することができます、インターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="13945-102">The <xref:System.ComponentModel.Design.IDesigner> interface provides an interface through which you can implement basic services for a designer.</span></span> <span data-ttu-id="13945-103">デザイナーでは、デザイン時に、コンポーネントの動作を変更することができ、独自のサービスとの動作を提供することがあります。</span><span class="sxs-lookup"><span data-stu-id="13945-103">A designer can modify the behavior of a component at design time, and may provide its own services and behavior.</span></span> <span data-ttu-id="13945-104">デザイナーがデザイン時に、アクティブのみであり使用して、コンポーネントの種類に関連付ける必要があります、<xref:System.ComponentModel.DesignerAttribute>デザイン時に関連付けられている型のコンポーネントの作成時に読み込むためにします。</span><span class="sxs-lookup"><span data-stu-id="13945-104">A designer is only active at design-time, and must be associated with a type of component using a <xref:System.ComponentModel.DesignerAttribute> in order to be loaded when a component of the associated type is created at design time.</span></span>  
  
 <span data-ttu-id="13945-105"><xref:System.ComponentModel.Design.IDesigner>メソッドとプロパティをデザイン時にカスタム動作を提供するために実装するインターフェイスが用意されています。</span><span class="sxs-lookup"><span data-stu-id="13945-105">The <xref:System.ComponentModel.Design.IDesigner> interface provides methods and properties that you can implement in order to provide custom behavior at design time.</span></span>  
  
 <span data-ttu-id="13945-106">実装、<xref:System.ComponentModel.Design.IDesigner.Initialize%2A>コンポーネントが作成されるときにアクションを実行するデザイナーのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="13945-106">Implement the <xref:System.ComponentModel.Design.IDesigner.Initialize%2A> method of a designer to perform actions when a component is created.</span></span> <span data-ttu-id="13945-107">コンポーネントは、デザイン時に、特別な構成を持たせる場合、またはデザイナーを判断する条件に基づいてその構成を変更する必要があります、これは役立つあります。</span><span class="sxs-lookup"><span data-stu-id="13945-107">This can be useful if a component should have a special configuration at design-time, or if its configuration should change depending on conditions that the designer can determine.</span></span>  
  
 <span data-ttu-id="13945-108">デザイナーは、コンポーネントまたはコントロール、デザイン時環境でユーザーを右クリックしたときに表示されるショートカット メニューにメニュー コマンドを提供できます。</span><span class="sxs-lookup"><span data-stu-id="13945-108">A designer can provide menu commands on the shortcut menu that is displayed when a user right-clicks a component or control in the design-time environment.</span></span> <span data-ttu-id="13945-109">実装することができます、<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>を返す get アクセサーを定義するプロパティ、<xref:System.ComponentModel.Design.DesignerVerbCollection>を含む、 <xref:System.ComponentModel.Design.DesignerVerb>  メニューのコマンドを生成するためのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="13945-109">You can implement the <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> property to define a get accessor that returns a <xref:System.ComponentModel.Design.DesignerVerbCollection> containing the <xref:System.ComponentModel.Design.DesignerVerb> objects for generating menu commands.</span></span>  
  
 <span data-ttu-id="13945-110">コンポーネント トレイに表示されるコンポーネントをデザイナーは、コンポーネントがダブルクリックされたときに既定のアクションを実行できます。</span><span class="sxs-lookup"><span data-stu-id="13945-110">A designer for a component that appears in the component tray can perform a default action when the component is double-clicked.</span></span> <span data-ttu-id="13945-111">実装、<xref:System.ComponentModel.Design.IDesigner.DoDefaultAction%2A>コンポーネントがダブルクリックされたときに実行する動作を指定します。</span><span class="sxs-lookup"><span data-stu-id="13945-111">Implement the <xref:System.ComponentModel.Design.IDesigner.DoDefaultAction%2A> method to specify the behavior to perform when the component is double-clicked.</span></span>  
  
 <span data-ttu-id="13945-112">デザイナーは使用可能なデザイン時サービスを使用しても読み取りとコンポーネントのプロパティの値の設定、ツールボックスの管理、選択したコンポーネントは、の管理またはまたはさらに処理を適用する値を構成するために使用できるユーザー インターフェイスを表示するさまざまなコンポーネントとそのプロパティの現在のデザイン時環境を調査など、タスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="13945-112">A designer can also use the available design-time services to perform a variety of tasks, including surveying the current design-time environment for components and their properties, reading and setting the values of properties of components, managing the toolbox, managing selected components, or displaying a user interface that can be used to configure values or to apply further processing.</span></span>  
  
 <span data-ttu-id="13945-113">フォームに配置されている場合、コントロールをデザイナーを実装するにはから継承することができます、<xref:System.Windows.Forms.Design.ControlDesigner>クラスです。</span><span class="sxs-lookup"><span data-stu-id="13945-113">To implement a designer for a control that can be sited on a form, you can inherit from the <xref:System.Windows.Forms.Design.ControlDesigner> class.</span></span> <span data-ttu-id="13945-114">コントロールが関連付けられているデザイナーがから派生していない<xref:System.Windows.Forms.Design.ControlDesigner>がコンポーネント トレイに表示されます。</span><span class="sxs-lookup"><span data-stu-id="13945-114">Controls whose associated designer does not derive from <xref:System.Windows.Forms.Design.ControlDesigner> are displayed in the component tray.</span></span> <span data-ttu-id="13945-115"><xref:System.ComponentModel.Design.ComponentDesigner>と<xref:System.Windows.Forms.Design.ControlDesigner>クラスで実装、<xref:System.ComponentModel.Design.IDesigner>インターフェイスし、デザイナーの作成者に使用可能な追加のデザイン時サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="13945-115">The <xref:System.ComponentModel.Design.ComponentDesigner> and <xref:System.Windows.Forms.Design.ControlDesigner> classes implement the <xref:System.ComponentModel.Design.IDesigner> interface and provide additional design-time support that may be of use to authors of designers.</span></span> <span data-ttu-id="13945-116">詳細については、これらのクラスに関するリファレンス ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="13945-116">For more information, see the reference documentation for these classes.</span></span>  
  
 <span data-ttu-id="13945-117">デザイン コンポーネントの作成の概要についてを参照してください[デザイン時サポートを拡張する](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2)です。</span><span class="sxs-lookup"><span data-stu-id="13945-117">For an overview of creating design components, please see [Extending Design-Time Support](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13945-118">この例で、<xref:System.ComponentModel.Design.IDesigner>とコンポーネントがダブルクリックされた、デザイナー動詞メニュー コマンドは、そのコンポーネントへのローカルな参照を格納するための実装を既定のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="13945-118">This example demonstrates an <xref:System.ComponentModel.Design.IDesigner> implementation that stores a local reference to its component, performs a default action when the component is double-clicked, and provides a designer verb menu command.</span></span>  
  
 [!code-cpp[IDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerExample/CPP/testcontrol.cpp#1)]
 [!code-csharp[IDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerExample/CS/testcontrol.cs#1)]
 [!code-vb[IDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerExample/VB/testcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IRootDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
  </Docs>
  <Members>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesigner.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="13945-119">デザイナーがデザインする基本コンポーネントを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13945-119">Gets the base component that this designer is designing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="13945-120">デザイナーがデザインする基本コンポーネントを示す <see cref="T:System.ComponentModel.IComponent" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13945-120">An <see cref="T:System.ComponentModel.IComponent" /> indicating the base component that this designer is designing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoDefaultAction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13945-121">デザイナーの既定のアクションを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13945-121">Performs the default action for this designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13945-122">ユーザーがコンポーネント トレイ内のコンポーネントの形式をダブルクリックすると、このメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="13945-122">This method is called when a user double-clicks the representation of a component in the component tray.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="13945-123">デザイナーに関連付けるコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13945-123">The component to associate with this designer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13945-124">コンポーネントを指定して、デザイナーを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13945-124">Initializes the designer with the specified component.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesigner.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="13945-125">デザイナーでサポートされているデザイン時動詞のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13945-125">Gets a collection of the design-time verbs supported by the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="13945-126">デザイナーでサポートされている動詞を含む <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。コンポーネントに動詞がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13945-126">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> that contains the verbs supported by the designer, or <see langword="null" /> if the component has no verbs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13945-127">デザイン時の動詞をデザイナーに関連付けられたコンポーネントでサポートされているを返します。</span><span class="sxs-lookup"><span data-stu-id="13945-127">Returns the design time verbs supported by the component associated with the designer.</span></span> <span data-ttu-id="13945-128">このメソッドによって返される動詞は通常、右クリック メニューで、デザイン時環境で表示されます。</span><span class="sxs-lookup"><span data-stu-id="13945-128">The verbs returned by this method are typically displayed by the design-time environment in a right-click menu.</span></span> <span data-ttu-id="13945-129">ユーザーが、対応するイベント ハンドラーの動詞のいずれかの<xref:System.ComponentModel.Design.DesignerVerb>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="13945-129">When a user selects one of the verbs, the event handler of the corresponding <xref:System.ComponentModel.Design.DesignerVerb> is invoked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13945-130">通常、デザイン時環境を提供します、**プロパティ.**コンポーネントの右クリック メニューに入力します。</span><span class="sxs-lookup"><span data-stu-id="13945-130">A design-time environment typically provides a **Properties...** entry on a component's right-click menu.</span></span> <span data-ttu-id="13945-131">メニュー項目のタイトルの重複を避けるためには、[プロパティ] のタイトルの動詞に含めるかない、<xref:System.ComponentModel.Design.DesignerVerbCollection>です。</span><span class="sxs-lookup"><span data-stu-id="13945-131">To avoid duplicate titles for menu entries, no verb with a title of "Properties..." should be included in a <xref:System.ComponentModel.Design.DesignerVerbCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerbCollection" />
      </Docs>
    </Member>
  </Members>
</Type>