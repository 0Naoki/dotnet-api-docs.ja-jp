<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRootDesigner.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac580c2d03219a2b17d65f5f0265220dde2e841b449.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80c2d03219a2b17d65f5f0265220dde2e841b449</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>Provides support for root-level designer view technologies.</source>
          <target state="translated">ルート レベルのデザイナー ビュー テクノロジのサポートを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>A root designer is the designer that is in the top position, or root, of the current design-time document object hierarchy.</source>
          <target state="translated">ルート デザイナーは、デザイナーの上端の位置をまたは現在デザイン時にドキュメント オブジェクトの階層のルートです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>A root designer must implement the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> interface.</source>
          <target state="translated">ルート デザイナーを実装する必要があります、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>A root designer typically manages the background view in designer view mode, and usually displays the controls within the base container of the current design time project.</source>
          <target state="translated">ルート デザイナーは、通常、バック グラウンド ビュー デザイナーの表示モードを管理し、デザイン時の現在のプロジェクトの基本のコンテナー内にコントロールを表示します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>The following code example demonstrates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> implementation associated with a sample user control.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph>サンプル ユーザー コントロールに関連付けられた実装です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>This <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> implementation displays a control for the background view in designer view by overriding the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IRootDesigner.GetView%2A&gt;</ph> method.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph>実装デザイナー ビューでオーバーライドすることで、バック グラウンド ビューのコントロールを表示する、<ph id="ph2">&lt;xref:System.ComponentModel.Design.IRootDesigner.GetView%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>You need to add a reference to the System.Design assembly to compile the example.</source>
          <target state="translated">例をコンパイルする System.Design アセンブリへの参照を追加する必要があります。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IRootDesigner">
          <source>To use this example, add the source code to a project and show the <ph id="ph1">`RootViewSampleComponent`</ph> in designer view to display the custom root designer view.</source>
          <target state="translated">この例を使用するソース コードをプロジェクトに追加し、表示、<ph id="ph1">`RootViewSampleComponent`</ph>カスタム ルートのデザイナー ビューを表示するデザイナー ビューにします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ViewTechnology" /&gt;</ph> that indicates a particular view technology.</source>
          <target state="translated">特定のビュー技術を示す <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ViewTechnology" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>Gets a view object for the specified view technology.</source>
          <target state="translated">指定したビュー技術のビュー オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>An object that represents the view for this designer.</source>
          <target state="translated">デザイナーのビューを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>This method returns a view object that can present a user interface to the user.</source>
          <target state="translated">このメソッドは、ユーザーにユーザー インターフェイスを提供するビュー オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>The returned data type is an <ph id="ph1">&lt;xref:System.Object&gt;</ph>, because there can be a variety of different user interface technologies.</source>
          <target state="translated">返されるデータ型は、<ph id="ph1">&lt;xref:System.Object&gt;</ph>さまざまな別のユーザー インターフェイスのテクノロジがあるため、します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>Development environments typically support more than one technology.</source>
          <target state="translated">開発環境は、通常 1 つ以上のテクノロジをサポートします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Passthrough?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.Design.ViewTechnology.WindowsForms?displayProperty=nameWithType&gt;</ph> fields are obsolete.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Passthrough?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.ComponentModel.Design.ViewTechnology.WindowsForms?displayProperty=nameWithType&gt;</ph>フィールドは廃止されました。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>Use <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType&gt;</ph> for new designer implementations.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType&gt;</ph>の新しいデザイナーの実装です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
          <source>The specified view technology is not supported or does not exist.</source>
          <target state="translated">指定したビュー技術がサポートされていないか、存在しません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
          <source>Gets the set of technologies that this designer can support for its display.</source>
          <target state="translated">デザイナーがサポートできる表示用の一連の技術を取得します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
          <source>An array of supported <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ViewTechnology" /&gt;</ph> values.</source>
          <target state="translated">サポートされている <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ViewTechnology" /&gt;</ph> 値の配列。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph> enumeration indicates the supported view technologies.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology&gt;</ph>列挙型がサポートされているビュー テクノロジを示します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Passthrough?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.Design.ViewTechnology.WindowsForms?displayProperty=nameWithType&gt;</ph> fields are obsolete.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Passthrough?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.ComponentModel.Design.ViewTechnology.WindowsForms?displayProperty=nameWithType&gt;</ph>フィールドは廃止されました。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
          <source>Use <ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType&gt;</ph> for new designer implementations.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType&gt;</ph>の新しいデザイナーの実装です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>