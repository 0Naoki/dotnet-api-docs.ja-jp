<Type Name="ComponentChangedEventHandler" FullName="System.ComponentModel.Design.ComponentChangedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="506e782d1902dbe27c23f69d64132e85fa8f364a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ComponentChangedEventHandler(object sender, ComponentChangedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ComponentChangedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ComponentChangedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ComponentChangedEventHandler(sender As Object, e As ComponentChangedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ComponentChangedEventHandler(System::Object ^ sender, ComponentChangedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="9ded4-101">イベントのソース。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ded4-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="9ded4-102">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ded4-102">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="9ded4-103">
        <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> イベントを処理するメソッドを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ded4-103">Represents the method that will handle a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ded4-104"><xref:System.ComponentModel.Design.ComponentChangedEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="9ded4-104">When you create a <xref:System.ComponentModel.Design.ComponentChangedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="9ded4-105">イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。</span><span class="sxs-lookup"><span data-stu-id="9ded4-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="9ded4-106">デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9ded4-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="9ded4-107">イベント ハンドラー デリゲートの詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)です。</span><span class="sxs-lookup"><span data-stu-id="9ded4-107">For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115).</span></span>  
  
 <span data-ttu-id="9ded4-108">A<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>読み込みまたはこれらの操作中に変更が必要であるために、フォームのアンロード中にイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="9ded4-108">A <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event will not occur during the loading or unloading of a form because changes are expected during these operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ded4-109">この例では、登録、<xref:System.ComponentModel.Design.ComponentChangedEventHandler>処理し、<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="9ded4-109">This example demonstrates registering a <xref:System.ComponentModel.Design.ComponentChangedEventHandler> and handling the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event.</span></span>  
  
 [!code-cpp[ComponentChangedEventHandlerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ComponentChangedEventHandlerExample/CPP/componentchangedeventhandlerexample.cpp#1)]
 [!code-csharp[ComponentChangedEventHandlerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ComponentChangedEventHandlerExample/CS/componentchangedeventhandlerexample.cs#1)]
 [!code-vb[ComponentChangedEventHandlerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComponentChangedEventHandlerExample/VB/componentchangedeventhandlerexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
    <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
    <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />
    <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
  </Docs>
</Type>