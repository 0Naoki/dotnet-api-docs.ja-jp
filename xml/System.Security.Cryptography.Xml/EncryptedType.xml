<Type Name="EncryptedType" FullName="System.Security.Cryptography.Xml.EncryptedType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba862208afc38e7dbd8e24eb89734e0f4e9726d1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69262538" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncryptedType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncryptedType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncryptedType" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedType abstract" />
  <TypeSignature Language="F#" Value="type EncryptedType = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> クラスと <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> クラスの派生元となる抽象基本クラスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Security.Cryptography.Xml.EncryptedType>は<xref:System.Security.Cryptography.Xml.EncryptedData> 、<xref:System.Security.Cryptography.Xml.EncryptedKey>クラスの派生元である抽象基本クラスを表します。 これら2つのクラスには、XML 暗号化の実際の暗号化データまたはキー情報が含まれています。 XML 暗号化標準に準拠するには、これらの2つの派生クラスを使用する必要があります。  
  
 XML 暗号化標準の詳細については、 [Xml 暗号化の構文と処理バージョン 1.1](https://www.w3.org/TR/xmlenc-core/)に関する説明を参照してください。  
  
   
  
## Examples  
 クラスから派生した<xref:System.Security.Cryptography.Xml.EncryptedData>クラスを使用して XML 要素を暗号化および復号化する方法を次のコード例に示します。 <xref:System.Security.Cryptography.Xml.EncryptedType>  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncryptedType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncryptedType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、 <xref:System.Security.Cryptography.Xml.EncryptedType>クラスの新しいインスタンスを作成します。 このクラスは、クラス<xref:System.Security.Cryptography.Xml.EncryptedData> <xref:System.Security.Cryptography.Xml.EncryptedKey>の派生元である抽象基本クラスを表します。 XML 暗号化標準に準拠するには、2つの派生クラスを使用する必要があります。 XML 暗号化標準の詳細については、 [Xml 暗号化の構文と処理バージョン 1.1](https://www.w3.org/TR/xmlenc-core/)に関する説明を参照してください。  
  
   
  
## Examples  
 クラスから派生した<xref:System.Security.Cryptography.Xml.EncryptedData>クラスを使用して XML 要素を暗号化および復号化する方法を次のコード例に示します。 <xref:System.Security.Cryptography.Xml.EncryptedType>  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public void AddProperty (System.Security.Cryptography.Xml.EncryptionProperty ep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddProperty(class System.Security.Cryptography.Xml.EncryptionProperty ep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddProperty (ep As EncryptionProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddProperty(System::Security::Cryptography::Xml::EncryptionProperty ^ ep);" />
      <MemberSignature Language="F#" Value="member this.AddProperty : System.Security.Cryptography.Xml.EncryptionProperty -&gt; unit" Usage="encryptedType.AddProperty ep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ep" Type="System.Security.Cryptography.Xml.EncryptionProperty" />
      </Parameters>
      <Docs>
        <param name="ep"><see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> オブジェクト。</param>
        <summary>XML 暗号化の現在の <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> オブジェクトの <see langword="&lt;EncryptionProperty&gt;" /> 要素に <see langword="&lt;EncryptedProperties&gt;" /> 子要素を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 `<EncryptionProperty>` `<EncryptedProperties>`要素に子要素を追加するために使用できます。 要素`<EncryptedProperties>`は、 `<EncryptedType>`要素の追加情報を提供します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherData">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.CipherData CipherData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.CipherData CipherData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CipherData As CipherData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::CipherData ^ CipherData { System::Security::Cryptography::Xml::CipherData ^ get(); void set(System::Security::Cryptography::Xml::CipherData ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherData : System.Security.Cryptography.Xml.CipherData with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.CipherData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.Xml.CipherData" /> クラスのインスタンスの <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 値を取得または設定します。</summary>
        <value><see cref="T:System.Security.Cryptography.Xml.CipherData" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<CipherData>`要素は、暗号化されたデータを提供する XML 暗号化の必須要素です。 これには、暗号化されたオクテットシーケンスが<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>プロパティの base64 でエンコードされたテキストとして含まれているか、 <xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A>プロパティを使用して、暗号化されたオクテットシーケンスを含む外部の場所への参照を指定する必要があります。  
  
 この要素の詳細については<xref:System.Security.Cryptography.Xml.CipherData>、「」を参照してください。  
  
   
  
## Examples  
 クラスから派生した<xref:System.Security.Cryptography.Xml.EncryptedData>クラスを使用して XML 要素を暗号化および復号化する方法を次のコード例に示します。 <xref:System.Security.Cryptography.Xml.EncryptedType>  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" /> プロパティが <see langword="null" /> に設定されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public virtual string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 暗号化の <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> インスタンスの <see langword="Encoding" /> 属性を取得または設定します。</summary>
        <value>暗号化されたデータのエンコーディングを記述する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、暗号化されたデータのエンコーディングを表します。 たとえば、暗号化されたデータが base64 でエンコードされた PNG の場合、エンコードは '<http://www.w3.org/2000/09/xmldsig#base64>' として指定できます。  
  
   
  
## Examples  
 クラスから派生した<xref:System.Security.Cryptography.Xml.EncryptedData>クラスを使用して XML 要素を暗号化および復号化する方法を次のコード例に示します。 <xref:System.Security.Cryptography.Xml.EncryptedType> このサンプルでは<xref:System.Security.Cryptography.Xml.EncryptedData> 、クラスのさまざまなプロパティをコンソールに表示します。  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionMethod">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptionMethod As EncryptionMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionMethod ^ EncryptionMethod { System::Security::Cryptography::Xml::EncryptionMethod ^ get(); void set(System::Security::Cryptography::Xml::EncryptionMethod ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionMethod : System.Security.Cryptography.Xml.EncryptionMethod with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 暗号化の <see langword="&lt;EncryptionMethod&gt;" /> 要素を取得または設定します。</summary>
        <value><see langword="&lt;EncryptionMethod&gt;" /> 要素を表す <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 は`<EncryptionMethod>` 、暗号化されたデータに適用される暗号化アルゴリズムを記述する省略可能な要素です。 要素が存在しない場合、受信者が暗号化アルゴリズムを認識している必要があります。指定しないと、復号化は失敗します。  
  
   
  
## Examples  
 クラスから派生した<xref:System.Security.Cryptography.Xml.EncryptedData>クラスを使用して XML 要素を暗号化および復号化する方法を次のコード例に示します。 <xref:System.Security.Cryptography.Xml.EncryptedType>  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProperties">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncryptionProperties As EncryptionPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ EncryptionProperties { System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionProperties : System.Security.Cryptography.Xml.EncryptionPropertyCollection" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 暗号化の <see langword="&lt;EncryptionProperties&gt;" /> 要素を取得または設定します。</summary>
        <value><see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要素`<EncryptionProperties>`には、日付と時刻のスタンプや、 <xref:System.Security.Cryptography.Xml.EncryptedType>暗号化時に使用される暗号化ハードウェアのシリアル番号など、インスタンスの作成に関する追加情報を含めることができます。  
  
   
  
## Examples  
 クラスから派生した<xref:System.Security.Cryptography.Xml.EncryptedData>クラスを使用して XML 要素を暗号化および復号化する方法を次のコード例に示します。 <xref:System.Security.Cryptography.Xml.EncryptedType> このサンプルでは<xref:System.Security.Cryptography.Xml.EncryptedData> 、クラスのさまざまなプロパティをコンソールに表示します。  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="abstract member GetXml : unit -&gt; System.Xml.XmlElement" Usage="encryptedType.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> オブジェクトの XML 表現を返します。</summary>
        <returns>XML 暗号化の <see langword="&lt;EncryptedType&gt;" /> 要素を表す <see cref="T:System.Xml.XmlElement" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML で要素を出力する`<EncryptedType>`には、このメソッドを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 暗号化の <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> インスタンスの <see langword="Id" /> 属性を取得または設定します。</summary>
        <value><see langword="Id" /> 要素の <see langword="&lt;EncryptedType&gt;" /> 属性の文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性は、 `<EncryptedType>`要素の省略可能な属性であり、XML ドキュメント内の要素に文字列識別子を割り当てるための標準的なメソッドを提供します。 `Id`  
  
   
  
## Examples  
 クラスから派生した<xref:System.Security.Cryptography.Xml.EncryptedData>クラスを使用して XML 要素を暗号化および復号化する方法を次のコード例に示します。 <xref:System.Security.Cryptography.Xml.EncryptedType> このサンプルでは<xref:System.Security.Cryptography.Xml.EncryptedData> 、クラスのさまざまなプロパティをコンソールに表示します。  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyInfo : System.Security.Cryptography.Xml.KeyInfo with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 暗号化の <see langword="&lt;KeyInfo&gt;" /> 要素を取得または設定します。</summary>
        <value><see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<KeyInfo>`要素は、データの暗号化に使用されるキーに関する情報を含む省略可能な要素です。  
  
   
  
## Examples  
 クラスから派生した<xref:System.Security.Cryptography.Xml.EncryptedData>クラスを使用して XML 要素を暗号化および復号化する方法を次のコード例に示します。 <xref:System.Security.Cryptography.Xml.EncryptedType> このサンプルでは<xref:System.Security.Cryptography.Xml.EncryptedData> 、クラスのさまざまなプロパティをコンソールに表示します。  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public abstract void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LoadXml : System.Xml.XmlElement -&gt; unit" Usage="encryptedType.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value"><see langword="&lt;EncryptedType&gt;" /> 要素で使用する、XML 要素を表す <see cref="T:System.Xml.XmlElement" /> オブジェクト。</param>
        <summary>XML 情報を XML 暗号化の <see langword="&lt;EncryptedType&gt;" /> 要素に読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、既存の<xref:System.Security.Cryptography.Xml.EncryptedType> XML 要素をオブジェクトに読み込みます。  
  
   
  
## Examples  
 クラスから派生した<xref:System.Security.Cryptography.Xml.EncryptedData>クラスを使用して XML 要素を暗号化および復号化する方法を次のコード例に示します。 <xref:System.Security.Cryptography.Xml.EncryptedType>  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">提供された <paramref name="value" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="MimeType">
      <MemberSignature Language="C#" Value="public virtual string MimeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MimeType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MimeType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MimeType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MimeType : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 暗号化の <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> インスタンスの <see langword="MimeType" /> 属性を取得または設定します。</summary>
        <value>暗号化されたデータのメディア タイプを記述する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `MimeType`属性は、暗号化されたデータのメディアの種類を記述するオプションの属性です。 この属性の値は、RFC 2045 によっ[て定義された値を含む文字列です。Multipurpose Internet Mail Extensions (MIME) パート 1:インターネットメッセージ本文](https://www.ietf.org/rfc/rfc2045.txt)の形式。 たとえば、暗号化されたデータが base64 でエンコードされた PNG `Encoding`の場合、属性<http://www.w3.org/2000/09/xmldsig#base64>は ' ' になり`MimeType` 、は ' image/PNG ' になります。 この属性は省略可能であり、 `MimeType`情報の検証は必要ありません。 属性は、暗号化アプリケーションが追加の処理を行う必要があることを示していません。 `Type`属性の識別子に既にバインドされている場合、この情報は必要ではないことに注意してください。  
  
   
  
## Examples  
 クラスから派生した<xref:System.Security.Cryptography.Xml.EncryptedData>クラスを使用して XML 要素を暗号化および復号化する方法を次のコード例に示します。 <xref:System.Security.Cryptography.Xml.EncryptedType> このサンプルでは<xref:System.Security.Cryptography.Xml.EncryptedData> 、クラスのさまざまなプロパティをコンソールに表示します。  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 暗号化の <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> インスタンスの <see langword="Type" /> 属性を取得または設定します。</summary>
        <value>暗号化されたデータのテキスト形式を記述する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Type`属性は、暗号化されたコンテンツのテキスト形式に関する型情報を識別する省略可能な属性です。 省略可能ですが、これは重要な属性であり、「処理規則[」で説明されている必須の処理で使用されます。XML](https://www.w3.org/TR/xmlenc-core/)暗号化構文と処理仕様の暗号化解除 (セクション 4.2) (https://www.w3.org/TR/xmlenc-core/)を参照してください。 要素に型`'element'`または要素`'content'`のデータが含まれており、XML `Type`ドキュメント内のデータを置換する場合は、属性を指定することを強くお勧めします。 `<EncryptedData>` この情報がないと、情報の暗号化を解除しようとしているアプリケーションは、XML ドキュメントを元のテキスト形式に自動的に復元できなくなります。  
  
   
  
## Examples  
 クラスから派生した<xref:System.Security.Cryptography.Xml.EncryptedData>クラスを使用して XML 要素を暗号化および復号化する方法を次のコード例に示します。 <xref:System.Security.Cryptography.Xml.EncryptedType>  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
