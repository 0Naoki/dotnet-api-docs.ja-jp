<Type Name="EncryptedXml" FullName="System.Security.Cryptography.Xml.EncryptedXml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="39621e6ba35dd93dda1c076bc759082f5b326ccc" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39757069" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EncryptedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedXml" />
  <TypeSignature Language="F#" Value="type EncryptedXml = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="469ea-101">XML 暗号化を実装するためのプロセス モデルを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="469ea-101">Represents the process model for implementing XML encryption.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-102"><xref:System.Security.Cryptography.Xml.EncryptedXml>クラスは .NET Framework における XML の暗号化に使用されるメイン クラスです。</span><span class="sxs-lookup"><span data-stu-id="469ea-102">The <xref:System.Security.Cryptography.Xml.EncryptedXml> class is the main class used for XML encryption in the .NET Framework.</span></span> <span data-ttu-id="469ea-103">XML 暗号化は、XML ドキュメントまたは任意のデータの一部またはすべてを暗号化する、標準ベースの相互運用可能な方法です。</span><span class="sxs-lookup"><span data-stu-id="469ea-103">XML Encryption is a standards-based, interoperable way to encrypt all or part of an XML document or any arbitrary data.</span></span> <span data-ttu-id="469ea-104">暗号化クラスでは、.NET Framework の XML にある XML 暗号化のために、World Wide Web Consortium (W3C) 仕様を実装http://www.w3.org/TR/xmlenc-core/します。</span><span class="sxs-lookup"><span data-stu-id="469ea-104">The .NET Framework XML encryption classes implement the World Wide Web Consortium (W3C) specification for XML encryption located at http://www.w3.org/TR/xmlenc-core/.</span></span>  
  
 <span data-ttu-id="469ea-105">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml>クラスの標準的な方法でアプリケーションまたは組織の間で暗号化された XML データを共有する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="469ea-105">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml> class whenever you need to share encrypted XML data between applications or organizations in a standard way.</span></span> <span data-ttu-id="469ea-106">このクラスを使用して暗号化されたデータは、XML 暗号化は、W3C 仕様の実装によって復号化できます。</span><span class="sxs-lookup"><span data-stu-id="469ea-106">Any data encrypted using this class can be decrypted by any implementation of the W3C specification for XML encryption.</span></span>  
  
 <span data-ttu-id="469ea-107">XML 暗号化では任意のプレーン テキストの XML 要素またはドキュメントで、`<EncryptedData>`要素では、暗号化が含まれています (または暗号テキスト) のプレーン テキストの XML 表現または任意のデータ。</span><span class="sxs-lookup"><span data-stu-id="469ea-107">XML encryption replaces any plain text XML element or document with the `<EncryptedData>` element, which contains an encrypted (or cipher text) representation of plain text XML or any arbitrary data.</span></span> <span data-ttu-id="469ea-108">`<EncryptedData>`要素がオプションでは、暗号化テキストを復号化キーを検索する場所についての情報を含めることができ、プレーン テキストの暗号化に使用された暗号化アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="469ea-108">The `<EncryptedData>` element can optionally contain information about where to find a key that will decrypt the cipher text, and which cryptographic algorithm was used to encrypt the plain text.</span></span>  
  
 <span data-ttu-id="469ea-109">`<EncryptedKey>`要素と似ています、`<EncryptedData>`要素のスタイルと用法、暗号化されたキーの値は暗号化解除をすることができますを除いて、`<EncryptedData>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-109">The `<EncryptedKey>` element is similar to the `<EncryptedData>` element in style and usage, except that it allows you to encrypt a key that will decrypt the value of the `<EncryptedData>` element.</span></span> <span data-ttu-id="469ea-110">なお、`<EncryptedKey>`要素と`<EncryptedData>`要素は、暗号化されていないキーを含めることはありません。</span><span class="sxs-lookup"><span data-stu-id="469ea-110">Note that the `<EncryptedKey>` element and the `<EncryptedData>` element will never contain an unencrypted key.</span></span>  
  
 <span data-ttu-id="469ea-111">キー情報を交換するのにには、次のメソッドのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="469ea-111">Use one of the following methods to exchange key information:</span></span>  
  
-   <span data-ttu-id="469ea-112">キー情報を含めないでください。</span><span class="sxs-lookup"><span data-stu-id="469ea-112">Do not include any key information.</span></span> <span data-ttu-id="469ea-113">このオプションを選択する場合は、暗号化されたデータを交換する前に、アルゴリズムとキーの当事者の双方が合意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="469ea-113">If you choose this option, both parties must agree on an algorithm and key before they exchange encrypted data.</span></span>  
  
-   <span data-ttu-id="469ea-114">キーの場所の Uniform Resource Identifier (URI) の属性に含める、`<RetrievalMethod>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-114">Include the location of the key in the Uniform Resource Identifier (URI) attribute of the `<RetrievalMethod>` element.</span></span> <span data-ttu-id="469ea-115">事前にキーの場所で当事者の双方が合意する必要があり、この場所は、秘密保持する必要があります。</span><span class="sxs-lookup"><span data-stu-id="469ea-115">Both parties must agree on the key location ahead of time and this location must be kept secret.</span></span>  
  
-   <span data-ttu-id="469ea-116">内のキーにマップされている文字列名を含める、`<KeyName>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-116">Include a string name that maps to a key in the `<KeyName>` element.</span></span> <span data-ttu-id="469ea-117">暗号化されたデータを交換して、このマッピングは、秘密保持する必要があります前にキー名のマッピングの当事者の双方が合意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="469ea-117">Both parties must agree on the key name mapping before they exchange encrypted data and this mapping must be kept secret.</span></span>  
  
-   <span data-ttu-id="469ea-118">暗号化されたキーを含める、`<EncryptedKey>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-118">Include an encrypted key in the `<EncryptedKey>` element.</span></span> <span data-ttu-id="469ea-119">暗号化されたデータを交換する前に、暗号化されたキーを復号化キーの当事者の双方が合意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="469ea-119">Both parties must agree on the key that decrypts the encrypted key before they exchange encrypted data.</span></span> <span data-ttu-id="469ea-120">名前または内のキーは復号化キーの場所を含めることができます必要に応じて、`<EncryptedKey>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-120">You can optionally include a name or location of the key that will decrypt the key in the `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-121">次のコード例は、使用する単純なユーティリティ クラスを作成する方法を示します、 <xref:System.Security.Cryptography.TripleDES> XML ドキュメントを暗号化するアルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="469ea-121">The following code example demonstrates how to create a simple utility class that uses the <xref:System.Security.Cryptography.TripleDES> algorithm to encrypt an XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-122">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-122">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-123">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-123">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-124">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-124">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-125">この例では、復号化するメソッドを使用して適切な復号化キーを検索する暗号化された XML ドキュメントでキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="469ea-125">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-126">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-126">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="469ea-127">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-127">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-128">次のコード例では、X.509 証明書を使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-128">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="469ea-129">この例では、ドキュメントを暗号化する対称セッション キーを作成し、X.509 証明書を使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-129">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-130">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-130">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="469ea-131">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-131">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-132">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-132">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-133">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-133">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-134">この例では、復号化するメソッドを使用して適切な復号化キーを検索する暗号化された XML ドキュメントでキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="469ea-134">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-135">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-135">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="469ea-136">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-136">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-137">次のコード例では、X.509 証明書を使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-137">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="469ea-138">この例では、ドキュメントを暗号化する対称セッション キーを作成し、X.509 証明書を使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-138">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="469ea-139">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-139">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-140">これは、.NET Framework における XML 暗号化のメイン クラスの既定のコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="469ea-140">This is the default constructor for the main class for XML encryption in the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-141">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-141">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-142">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-142">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-143">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-143">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-144">この例では、復号化するメソッドを使用して適切な復号化キーを検索する暗号化された XML ドキュメントでキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="469ea-144">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-145">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-145">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="469ea-146">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-146">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-147">次のコード例では、X.509 証明書を使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-147">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="469ea-148">この例では、ドキュメントを暗号化する対称セッション キーを作成し、X.509 証明書を使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-148">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.EncryptedXml : System.Xml.XmlDocument -&gt; System.Security.Cryptography.Xml.EncryptedXml" Usage="new System.Security.Cryptography.Xml.EncryptedXml document" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="469ea-149">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> オブジェクトを初期化するために使用する <see cref="T:System.Xml.XmlDocument" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-149">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-150">指定した XML ドキュメントを使用して、<see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-151">このコンス トラクターを使用して作成する、<xref:System.Security.Cryptography.Xml.EncryptedXml>を暗号化する XML ドキュメントを指定するときのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="469ea-151">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt.</span></span>  <span data-ttu-id="469ea-152">`document`パラメーターが後で、暗号化された XML を形成する XML 要素で構成されます。</span><span class="sxs-lookup"><span data-stu-id="469ea-152">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-153">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-153">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-154">この例では、復号化するメソッドを使用して適切な復号化キーを検索する暗号化された XML ドキュメントでキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="469ea-154">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-155">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-155">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="469ea-156">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-156">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.EncryptedXml : System.Xml.XmlDocument * System.Security.Policy.Evidence -&gt; System.Security.Cryptography.Xml.EncryptedXml" Usage="new System.Security.Cryptography.Xml.EncryptedXml (document, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="469ea-157">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> オブジェクトを初期化するために使用する <see cref="T:System.Xml.XmlDocument" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-157">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="469ea-158">
            <see cref="T:System.Xml.XmlDocument" /> オブジェクトに関連付けられている <see cref="T:System.Security.Policy.Evidence" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-158">An <see cref="T:System.Security.Policy.Evidence" /> object associated with the <see cref="T:System.Xml.XmlDocument" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-159">指定した XML ドキュメントおよび証拠を使用して、<see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-159">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document and evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-160">このコンス トラクターを使用して作成する、<xref:System.Security.Cryptography.Xml.EncryptedXml>の暗号化し、セキュリティ証拠を提供する XML ドキュメントを指定するときのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="469ea-160">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt and provide security evidence.</span></span> <span data-ttu-id="469ea-161">`document`パラメーターが後で、暗号化された XML を形成する XML 要素で構成されます。</span><span class="sxs-lookup"><span data-stu-id="469ea-161">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyNameMapping">
      <MemberSignature Language="C#" Value="public void AddKeyNameMapping (string keyName, object keyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddKeyNameMapping(string keyName, object keyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddKeyNameMapping (keyName As String, keyObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddKeyNameMapping(System::String ^ keyName, System::Object ^ keyObject);" />
      <MemberSignature Language="F#" Value="member this.AddKeyNameMapping : string * obj -&gt; unit" Usage="encryptedXml.AddKeyNameMapping (keyName, keyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <span data-ttu-id="469ea-162">
            <c>keyObject</c> にマップする名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-162">The name to map to <c>keyObject</c>.</span>
          </span>
        </param>
        <param name="keyObject">
          <span data-ttu-id="469ea-163">
            <c>keyName</c> にマップする対称キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-163">The symmetric key to map to <c>keyName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-164">キー名と対称キーまたは非対称キーとの間のマップを定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-164">Defines a mapping between a key name and a symmetric key or an asymmetric key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-165"><xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A>メソッドでは、対称キーまたは非対称キーを文字列名にマップできます。</span><span class="sxs-lookup"><span data-stu-id="469ea-165">The <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method allows you to map a symmetric key or an asymmetric key to a string name.</span></span> <span data-ttu-id="469ea-166">このメソッドは追加の値、`keyName`と`keyObject`パラメーターが有効なキーのテーブルにマッピングの名前します。</span><span class="sxs-lookup"><span data-stu-id="469ea-166">This method adds the values of the `keyName` and `keyObject` parameters to a table of valid key name mappings.</span></span>  
  
 <span data-ttu-id="469ea-167">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A>キー名のマッピング テーブルをクリアします。</span><span class="sxs-lookup"><span data-stu-id="469ea-167">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A> method to clear the key name mappings table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-168">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-168">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-169">この例では、復号化するメソッドを使用して適切な復号化キーを検索する暗号化された XML ドキュメントでキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="469ea-169">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-170">
            <paramref name="keyName" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-170">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="469ea-171">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-171">-or-</span>
          </span>
          <span data-ttu-id="469ea-172">
            <paramref name="keyObject" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-172">The value of the <paramref name="keyObject" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="469ea-173">
            <paramref name="keyObject" /> パラメーターの値が RSA アルゴリズムまたは共通キーではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-173">The value of the <paramref name="keyObject" /> parameter is not an RSA algorithm or a symmetric key.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearKeyNameMappings">
      <MemberSignature Language="C#" Value="public void ClearKeyNameMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearKeyNameMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearKeyNameMappings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearKeyNameMappings();" />
      <MemberSignature Language="F#" Value="member this.ClearKeyNameMappings : unit -&gt; unit" Usage="encryptedXml.ClearKeyNameMappings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="469ea-174">すべてのキー名マップをリセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-174">Resets all key name mapping.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-175">このメソッドを使用して設定されているすべてのキー名マップのクリアを使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="469ea-175">Use this method to clear all key name mapping that you have set using the <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptData">
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.DecryptData : System.Security.Cryptography.Xml.EncryptedData * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.DecryptData (encryptedData, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="469ea-176">復号化するデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-176">The data to decrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">
          <span data-ttu-id="469ea-177">
            <c>encryptedData</c> の暗号化解除に使用する対称キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-177">The symmetric key used to decrypt <c>encryptedData</c>.</span>
          </span>
        </param>
        <param name="symAlg">
          <span data-ttu-id="469ea-178">
            <c>encryptedData</c> の暗号化解除に使用する対称キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-178">The symmetric key used to decrypt <c>encryptedData</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-179">指定した対称アルゴリズムを使用して <see langword="&lt;EncryptedData&gt;" /> 要素を復号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-179">Decrypts an <see langword="&lt;EncryptedData&gt;" /> element using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="469ea-180">生の復号化されたプレーン テキストを格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-180">A byte array that contains the raw decrypted plain text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-181">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>復号化するメソッド、<xref:System.Security.Cryptography.Xml.EncryptedData>対称キーを使用して要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-181">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method to decrypt an <xref:System.Security.Cryptography.Xml.EncryptedData> element using a symmetric key.</span></span>  
  
 <span data-ttu-id="469ea-182">なお、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>メソッドのみ復号化最上位レベル <`EncryptedData`> タグです。</span><span class="sxs-lookup"><span data-stu-id="469ea-182">Note that the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method only decrypts top-level <`EncryptedData`> tags.</span></span>  <span data-ttu-id="469ea-183">場合、1 つまたは複数 <`EncryptedData`> タグは暗号化されているしより高いレベルに含まれる <`EncryptedData`> タグに呼び出すことができます、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>メソッドごとに個別にします。</span><span class="sxs-lookup"><span data-stu-id="469ea-183">In cases where one or more <`EncryptedData`> tags have been encrypted and are contained within higher level <`EncryptedData`> tags, you can call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method separately for each one.</span></span>  <span data-ttu-id="469ea-184">参照してください、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>コード例のメソッド。</span><span class="sxs-lookup"><span data-stu-id="469ea-184">See the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method for a code example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-185">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-185">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-186">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-186">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-187">
            <paramref name="encryptedData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-187">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="469ea-188">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-188">-or-</span>
          </span>
          <span data-ttu-id="469ea-189">
            <paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-189">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptDocument">
      <MemberSignature Language="C#" Value="public void DecryptDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DecryptDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub DecryptDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DecryptDocument();" />
      <MemberSignature Language="F#" Value="member this.DecryptDocument : unit -&gt; unit" Usage="encryptedXml.DecryptDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="469ea-190">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> クラスの初期化時に指定された、XML ドキュメントのすべての <see langword="&lt;EncryptedData&gt;" /> 要素を復号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-190">Decrypts all <see langword="&lt;EncryptedData&gt;" /> elements of the XML document that were specified during initialization of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-191"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>メソッドには、すべてが復号化`<EncryptedData>`の初期化中に、XML ドキュメントの要素が読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="469ea-191">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts all `<EncryptedData>` elements of the XML document loaded during initialization.</span></span> <span data-ttu-id="469ea-192">このメソッドを呼び出した後にすべて`<EncryptedData>`ドキュメント内の要素はプレーン テキスト バージョンに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="469ea-192">After you call this method, all `<EncryptedData>` elements in the document are replaced with plain text versions.</span></span>  
  
 <span data-ttu-id="469ea-193"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>メソッドが最上位のみ復号化`<EncryptedData>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-193">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only top-level `<EncryptedData>` elements.</span></span>  <span data-ttu-id="469ea-194">呼び出す必要があります (複数回暗号化されているドキュメント) スーパーで暗号化されたドキュメントを復号化する必要がある場合、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>メソッドすべてまで繰り返し、`<EncryptedData>`暗号解読された要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-194">If you need to decrypt a super-encrypted document (a document that is encrypted more than once), you must call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method repeatedly until all the `<EncryptedData>` elements have been decrypted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="469ea-195"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>メソッドには、有効な XML データのみが復号化します。</span><span class="sxs-lookup"><span data-stu-id="469ea-195">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only valid XML data.</span></span> <span data-ttu-id="469ea-196">任意のデータを復号化を使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="469ea-196">To decrypt arbitrary data, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method.</span></span>  
  
 <span data-ttu-id="469ea-197">X.509 証明書で XML の暗号化を使用するには、Microsoft Enhanced Cryptographic Provider をインストールが必要し、X.509 証明書は、拡張プロバイダーを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="469ea-197">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="469ea-198">Microsoft Enhanced Cryptographic Provider をインストールがないか、または X.509 証明書は、拡張プロバイダーを使用していない場合、 <xref:System.Security.Cryptography.CryptographicException> 「不明なエラー」がスローされる場合、XML ドキュメントを復号化します。</span><span class="sxs-lookup"><span data-stu-id="469ea-198">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-199">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-199">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="469ea-200">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-200">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-201">次のコード例では、X.509 証明書を使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-201">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="469ea-202">この例では、ドキュメントを暗号化する対称セッション キーを作成し、X.509 証明書を使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-202">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-203">次のコード例は、高レベルの暗号化を解除する方法を示します <`EncryptedData`> タグを含む暗号化別 <`EncryptedData`> タグです。</span><span class="sxs-lookup"><span data-stu-id="469ea-203">The following code example demonstrates how to decrypt a high level <`EncryptedData`> tag that contains another encrypted <`EncryptedData`> tag.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/csharp/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="469ea-204">ドキュメントを復号化するための暗号化キーが見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-204">The cryptographic key used to decrypt the document was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptEncryptedKey">
      <MemberSignature Language="C#" Value="public virtual byte[] DecryptEncryptedKey (System.Security.Cryptography.Xml.EncryptedKey encryptedKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptEncryptedKey(class System.Security.Cryptography.Xml.EncryptedKey encryptedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ DecryptEncryptedKey(System::Security::Cryptography::Xml::EncryptedKey ^ encryptedKey);" />
      <MemberSignature Language="F#" Value="abstract member DecryptEncryptedKey : System.Security.Cryptography.Xml.EncryptedKey -&gt; byte[]&#xA;override this.DecryptEncryptedKey : System.Security.Cryptography.Xml.EncryptedKey -&gt; byte[]" Usage="encryptedXml.DecryptEncryptedKey encryptedKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Security.Cryptography.Xml.EncryptedKey" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="469ea-205">取得するキーを格納している <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-205">The <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object that contains the key to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-206">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 要素によって表されるキーを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-206">Determines the key represented by the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="469ea-207">キーを格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-207">A byte array that contains the key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-208"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A>メソッド内に含まれる暗号化キーを復号化、 `<EncryptedKey>` XML ドキュメントの要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-208">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span>  
  
 <span data-ttu-id="469ea-209">この再帰メソッドで表されるキーの検索、<xref:System.Security.Cryptography.Xml.EncryptedKey>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="469ea-209">This recursive method finds the key represented by the <xref:System.Security.Cryptography.Xml.EncryptedKey> object.</span></span> <span data-ttu-id="469ea-210">なお、<xref:System.Security.Cryptography.Xml.EncryptedKey>オブジェクトは別に含めることができます<xref:System.Security.Cryptography.Xml.EncryptedKey>を指定するオブジェクト、<xref:System.Security.Cryptography.Xml.KeyInfo>値。</span><span class="sxs-lookup"><span data-stu-id="469ea-210">Note that an <xref:System.Security.Cryptography.Xml.EncryptedKey> object can contain another <xref:System.Security.Cryptography.Xml.EncryptedKey> object that specifies its <xref:System.Security.Cryptography.Xml.KeyInfo> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-211">
            <paramref name="encryptedKey" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-211">The value of the <paramref name="encryptedKey" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="469ea-212">
            <paramref name="encryptedKey" /> パラメーターの値が Triple DES キー ラップ アルゴリズムまたは AES (Advanced Encryption Standard) キー ラップ アルゴリズム (Rijndael とも呼ばれます) ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-212">The value of the <paramref name="encryptedKey" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DecryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-213">
            <see langword="&lt;EncryptedKey&gt;" /> 要素を復号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-213">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-214">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>復号化するメソッド、`<EncryptedKey>`要素をその要素を復号化に使用するキーを取得します。</span><span class="sxs-lookup"><span data-stu-id="469ea-214">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method to decrypt an `<EncryptedKey>` element and retrieve the key used to decrypt that element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="469ea-215">暗号化された <see langword="&lt;EncryptedKey&gt;" /> 要素を表すバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-215">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">
          <span data-ttu-id="469ea-216">
            <c>keyData</c> の暗号化解除に使用する対称キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-216">The symmetric key used to decrypt <c>keyData</c>.</span>
          </span>
        </param>
        <param name="symAlg">
          <span data-ttu-id="469ea-217">
            <c>keyData</c> の暗号化解除に使用する対称キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-217">The symmetric key used to decrypt <c>keyData</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-218">対称アルゴリズムを使用して <see langword="&lt;EncryptedKey&gt;" /> 要素を復号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-218">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using a symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="469ea-219">プレーン テキストのキーを格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-219">A byte array that contains the plain text key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-220"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>メソッド内に含まれる暗号化キーを復号化、 `<EncryptedKey>` XML ドキュメントの要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-220">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="469ea-221">このメソッドは、の値を受け取り、`symmetricAlgorithm`トリプル DES アルゴリズムまたは AES キー ラップ アルゴリズム (Rijndael とも呼ばれます) のいずれかを表すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="469ea-221">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-222">
            <paramref name="keyData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-222">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="469ea-223">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-223">-or-</span>
          </span>
          <span data-ttu-id="469ea-224">
            <paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-224">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="469ea-225">
            <paramref name="symmetricAlgorithm" /> 要素の値が Triple DES キー ラップ アルゴリズムまたは AES (Advanced Encryption Standard) キー ラップ アルゴリズム (Rijndael とも呼ばれます) ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-225">The value of the <paramref name="symmetricAlgorithm" /> element is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, rsa, fOAEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="469ea-226">暗号化された <see langword="&lt;EncryptedKey&gt;" /> 要素を表すバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-226">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </param>
        <param name="rsa">
          <span data-ttu-id="469ea-227">
            <c>keyData</c> を復号化するために使用する非対称キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-227">The asymmetric key used to decrypt <c>keyData</c>.</span>
          </span>
        </param>
        <param name="useOAEP">
          <span data-ttu-id="469ea-228">OAEP (Optimal Asymmetric Encryption Padding) を使用するかどうかを指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-228">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span>
          </span>
        </param>
        <param name="fOAEP">
          <span data-ttu-id="469ea-229">OAEP (Optimal Asymmetric Encryption Padding) を使用するかどうかを指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-229">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-230">非対称アルゴリズムを使用して <see langword="&lt;EncryptedKey&gt;" /> 要素を復号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-230">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using an asymmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="469ea-231">プレーン テキストのキーを格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-231">A byte array that contains the plain text key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-232"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>メソッド内に含まれる暗号化キーを復号化、 `<EncryptedKey>` XML ドキュメントの要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-232">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="469ea-233">このメソッドは、の値を受け取り、 `rsa` RSA PKCS #1 v1.5 アルゴリズムまたは RSA PKCS 1 種類 2 アルゴリズム (oaep とも呼ばれます) のいずれかを表すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="469ea-233">This method accepts a value for the `rsa` parameter that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP padding).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-234">
            <paramref name="keyData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-234">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="469ea-235">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-235">-or-</span>
          </span>
          <span data-ttu-id="469ea-236">
            <paramref name="rsa" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-236">The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DocumentEvidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence DocumentEvidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence DocumentEvidence" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentEvidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ DocumentEvidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEvidence : System.Security.Policy.Evidence with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-237">構築する <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> オブジェクトの元になる <see cref="T:System.Xml.XmlDocument" /> オブジェクトの証拠を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-237">Gets or sets the evidence of the <see cref="T:System.Xml.XmlDocument" /> object from which the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object is constructed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="469ea-238">
            <see cref="T:System.Security.Policy.Evidence" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-238">An <see cref="T:System.Security.Policy.Evidence" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-239">XML ドキュメントを作成するために使用する場合、<xref:System.Security.Cryptography.Xml.EncryptedXml>オブジェクトには、セキュリティ証拠を証拠を追加する必要があります、<xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="469ea-239">If the XML document used to create the <xref:System.Security.Cryptography.Xml.EncryptedXml> object has any security evidence, you should add the evidence to the <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> property.</span></span>  <span data-ttu-id="469ea-240">このプロパティは、関連付けられているいずれかを設定しない場合<xref:System.Security.Cryptography.Xml.CipherReference>オブジェクトが逆参照されないため、それらが付与されない必要なアクセス許可セット。</span><span class="sxs-lookup"><span data-stu-id="469ea-240">If you do not set this property, any associated <xref:System.Security.Cryptography.Xml.CipherReference> objects will not be dereferenced because they will not be granted the required permission set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-241">XML 暗号化に使用するエンコーディングを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-241">Gets or sets the encoding used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="469ea-242">
            <see cref="T:System.Text.Encoding" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-242">An <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-243">Utf-8 エンコーディングは、XML 暗号化の既定のエンコーディングです。</span><span class="sxs-lookup"><span data-stu-id="469ea-243">UTF-8 encoding is the default encoding for XML encryption.</span></span> <span data-ttu-id="469ea-244">このプロパティを使用して他の種類のエンコーディングを指定することができます、 <xref:System.Text.Encoding> ASCII または utf-16 などのクラス。</span><span class="sxs-lookup"><span data-stu-id="469ea-244">You can use this property to specify other types of encoding from the <xref:System.Text.Encoding> class, such as UTF-16 or ASCII.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-245">キー マップ テーブル内の指定された証明書またはキーを使用して、要素の外側の XML を暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-245">Encrypts the outer XML of an element using the specified certificate or key in the key mapping table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="469ea-246">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-246">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-247">次のコード例では、X.509 証明書を使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-247">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="469ea-248">この例では、ドキュメントを暗号化する対称セッション キーを作成し、X.509 証明書を使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-248">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, certificate As X509Certificate2) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : System.Xml.XmlElement * System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.Security.Cryptography.Xml.EncryptedData" Usage="encryptedXml.Encrypt (inputElement, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="469ea-249">暗号化する XML 要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-249">The XML element to encrypt.</span>
          </span>
        </param>
        <param name="certificate">
          <span data-ttu-id="469ea-250">暗号化に使用する X.509 証明書。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-250">The X.509 certificate to use for encryption.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-251">指定した X.509 証明書を使用して、要素の外側の XML を暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-251">Encrypts the outer XML of an element using the specified X.509 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="469ea-252">暗号化された XML データを表す <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-252">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> element that represents the encrypted XML data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-253"><xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A>メソッドは、証明書を使用して、要素の外側の XML を暗号化する便利な方法です。</span><span class="sxs-lookup"><span data-stu-id="469ea-253">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method is a convenient way to encrypt the outer XML of an element using a certificate.</span></span> <span data-ttu-id="469ea-254">このメソッド XML 要素を暗号化する 256 ビット Advanced Encryption Standard (AES) セッション キーを生成し、暗号化して AES キーを使用して、署名、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="469ea-254">This method generates a 256-bit Advanced Encryption Standard (AES) session key to encrypt an XML element and then encrypts and signs the AES key using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span> <span data-ttu-id="469ea-255"><xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A>メソッドとして生成される XML を返しますし、<xref:System.Security.Cryptography.Xml.EncryptedData>要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-255">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method then returns the resulting XML as an <xref:System.Security.Cryptography.Xml.EncryptedData> element.</span></span>  
  
 <span data-ttu-id="469ea-256">暗号化より詳細に制御する場合は、そのため配置できますに暗号化された情報を`<CipherReference>`要素全体の XML 要素またはその内容のみがするかどうかを指定または暗号化を使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="469ea-256">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="469ea-257">X.509 証明書で XML の暗号化を使用するには、Microsoft Enhanced Cryptographic Provider をインストールが必要し、X.509 証明書は、拡張プロバイダーを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="469ea-257">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="469ea-258">Microsoft Enhanced Cryptographic Provider をインストールがないか、または X.509 証明書は、拡張プロバイダーを使用していない場合、 <xref:System.Security.Cryptography.CryptographicException> 「不明なエラー」がスローされる場合、XML ドキュメントを復号化します。</span><span class="sxs-lookup"><span data-stu-id="469ea-258">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-259">次のコード例では、X.509 証明書を使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-259">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="469ea-260">この例では、ドキュメントを暗号化する対称セッション キーを作成し、X.509 証明書を使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-260">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-261">
            <paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-261">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="469ea-262">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-262">-or-</span>
          </span>
          <span data-ttu-id="469ea-263">
            <paramref name="certificate" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-263">The value of the <paramref name="certificate" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="469ea-264">
            <paramref name="certificate" /> パラメーターの値は RSA キー アルゴリズムを表しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-264">The value of the <paramref name="certificate" /> parameter does not represent an RSA key algorithm.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, string keyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, string keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, keyName As String) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::String ^ keyName);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : System.Xml.XmlElement * string -&gt; System.Security.Cryptography.Xml.EncryptedData" Usage="encryptedXml.Encrypt (inputElement, keyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="keyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="469ea-265">暗号化する XML 要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-265">The XML element to encrypt.</span>
          </span>
        </param>
        <param name="keyName">
          <span data-ttu-id="469ea-266">キー マップ テーブルにあるキー名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-266">A key name that can be found in the key mapping table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-267">キー マップ テーブル内の指定されたキーを使用して、要素の外側の XML を暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-267">Encrypts the outer XML of an element using the specified key in the key mapping table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="469ea-268">暗号化された XML データを表す <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-268">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that represents the encrypted XML data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-269">このメソッドは、キー名を使用して、要素の外側の XML を暗号化する便利な方法です。</span><span class="sxs-lookup"><span data-stu-id="469ea-269">This method is a convenient way to encrypt the outer XML of an element using a key name.</span></span> <span data-ttu-id="469ea-270">暗号化より詳細に制御する場合は、そのため配置できますに暗号化された情報を`<CipherReference>`要素全体の XML 要素またはその内容のみがするかどうかを指定または暗号化を使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="469ea-270">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="469ea-271">サポートされているすべてのアルゴリズムの一覧は、関連付けられている定数フィールドの一覧を参照してください、<xref:System.Security.Cryptography.Xml.EncryptedXml>クラス。</span><span class="sxs-lookup"><span data-stu-id="469ea-271">For a list of all supported algorithms, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-272">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-272">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-273">
            <paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-273">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="469ea-274">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-274">-or-</span>
          </span>
          <span data-ttu-id="469ea-275">
            <paramref name="keyName" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-275">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="469ea-276">
            <paramref name="keyName" /> パラメーターの値が、登録されているキー名のペアに一致しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-276">The value of the <paramref name="keyName" /> parameter does not match a registered key name pair.</span>
          </span>
          <span data-ttu-id="469ea-277">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-277">-or-</span>
          </span>
          <span data-ttu-id="469ea-278">
            <paramref name="keyName" /> パラメーターで記述されている暗号化キーはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-278">The cryptographic key described by the <paramref name="keyName" /> parameter is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptData">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-279">対称アルゴリズムを使用して、XML データを暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-279">Encrypts XML data using a symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="469ea-280">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-280">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-281">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-281">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-282">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-282">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-283">この例では、復号化するメソッドを使用して適切な復号化キーを検索する暗号化された XML ドキュメントでキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="469ea-283">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-284">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-284">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="469ea-285">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-285">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plaintext, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plaintext, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plaintext, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plainText, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plainText, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (plainText As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plainText, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.EncryptData (plainText, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plaintext" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="plainText" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="plaintext">To be added.</param>
        <param name="plainText">
          <span data-ttu-id="469ea-286">暗号化するデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-286">The data to encrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">
          <span data-ttu-id="469ea-287">暗号化に使用する対称アルゴリズム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-287">The symmetric algorithm to use for encryption.</span>
          </span>
        </param>
        <param name="symAlg">
          <span data-ttu-id="469ea-288">暗号化に使用する対称アルゴリズム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-288">The symmetric algorithm to use for encryption.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-289">指定したバイト配列内のデータを、指定した対称アルゴリズムを使用して暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-289">Encrypts data in the specified byte array using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="469ea-290">暗号化されたデータのバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-290">A byte array of encrypted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-291">返されたバイト配列に配置できる、`<CipherValue>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-291">The returned byte array can be placed into a `<CipherValue>` element.</span></span> <span data-ttu-id="469ea-292">このメソッドは、データがで指定されている前提としています。、`plaintext`パラメーターは XML データを含むバイト配列です。</span><span class="sxs-lookup"><span data-stu-id="469ea-292">This method assumes that the data specified in the `plaintext` parameter is a byte array that contains XML data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-293">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-293">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-294">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-294">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-295">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-295">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-296">この例では、復号化するメソッドを使用して適切な復号化キーを検索する暗号化された XML ドキュメントでキー名が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="469ea-296">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="469ea-297">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-297">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="469ea-298">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-298">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-299">
            <paramref name="plaintext" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-299">The value of the <paramref name="plaintext" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="469ea-300">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-300">-or-</span>
          </span>
          <span data-ttu-id="469ea-301">
            <paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-301">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="469ea-302">データを、指定したパラメーターを使用して暗号化できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-302">The data could not be encrypted using the specified parameters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (inputElement As XmlElement, symAlg As SymmetricAlgorithm, content As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : System.Xml.XmlElement * System.Security.Cryptography.SymmetricAlgorithm * bool -&gt; byte[]" Usage="encryptedXml.EncryptData (inputElement, symAlg, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="content" Type="System.Boolean" Index="2" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="469ea-303">暗号化する要素またはその内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-303">The element or its contents to encrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">
          <span data-ttu-id="469ea-304">暗号化に使用する対称アルゴリズム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-304">The symmetric algorithm to use for encryption.</span>
          </span>
        </param>
        <param name="symAlg">
          <span data-ttu-id="469ea-305">暗号化に使用する対称アルゴリズム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-305">The symmetric algorithm to use for encryption.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="469ea-306">要素の内容のみを暗号化する場合は <see langword="true" />。要素全体を暗号化する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-306">
              <see langword="true" /> to encrypt only the contents of the element; <see langword="false" /> to encrypt the entire element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-307">指定した要素またはその内容を、指定した対称アルゴリズムを使用して暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-307">Encrypts the specified element or its contents using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="469ea-308">暗号化されたデータを格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-308">A byte array that contains the encrypted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-309">返されるバイト配列のデータの値である、`<CipherValue>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-309">The returned byte array data is the value of the `<CipherValue>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-310">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-310">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-311">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-311">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-312">
            <paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-312">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="469ea-313">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-313">-or-</span>
          </span>
          <span data-ttu-id="469ea-314">
            <paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-314">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-315">
            <see langword="&lt;EncryptedData&gt;" /> 要素を復号化するために受信者が使用するキーを暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-315">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-316">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A>受信者が復号化に使用するキーを暗号化する方法、`<EncryptedData>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-316">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="469ea-317">このメソッドは、暗号化キー、`<EncryptedKey>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-317">This method places the encrypted key within an `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-318">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-318">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="469ea-319">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-319">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="469ea-320">暗号化するキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-320">The key to encrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">
          <span data-ttu-id="469ea-321">
            <c>keyData</c> を暗号化するために使用する対称キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-321">The symmetric key used to encrypt <c>keyData</c>.</span>
          </span>
        </param>
        <param name="symAlg">
          <span data-ttu-id="469ea-322">
            <c>keyData</c> を暗号化するために使用する対称キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-322">The symmetric key used to encrypt <c>keyData</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-323">
            <see langword="&lt;EncryptedData&gt;" /> 要素を復号化するために受信者が使用する対称アルゴリズムを使用して、キーを暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-323">Encrypts a key using a symmetric algorithm that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="469ea-324">
            <paramref name="keyData" /> パラメーターの暗号化された値を表すバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-324">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-325">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A>受信者が復号化に使用するキーを暗号化する方法、`<EncryptedData>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-325">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="469ea-326">このメソッドは、の値を受け取り、`symmetricAlgorithm`トリプル DES アルゴリズムまたは AES キー ラップ アルゴリズム (Rijndael とも呼ばれます) のいずれかを表すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="469ea-326">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 <span data-ttu-id="469ea-327">このメソッドが、暗号化キーを自動的に配置していないことに注意してください、`<EncryptedKey>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-327">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span>  <span data-ttu-id="469ea-328">手動で作成する必要があります、`<EncryptedKey>`ドキュメント内の要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-328">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-329">
            <paramref name="keyData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-329">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="469ea-330">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-330">-or-</span>
          </span>
          <span data-ttu-id="469ea-331">
            <paramref name="symmetricAlgorithm" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-331">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="469ea-332">
            <paramref name="symmetricAlgorithm" /> パラメーターの値が Triple DES キー ラップ アルゴリズムまたは AES (Advanced Encryption Standard) キー ラップ アルゴリズム (Rijndael とも呼ばれます) ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-332">The value of the <paramref name="symmetricAlgorithm" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, rsa, fOAEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="469ea-333">暗号化するキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-333">The key to encrypt.</span>
          </span>
        </param>
        <param name="rsa">
          <span data-ttu-id="469ea-334">
            <c>keyData</c> を暗号化するために使用する非対称キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-334">The asymmetric key used to encrypt <c>keyData</c>.</span>
          </span>
        </param>
        <param name="useOAEP">
          <span data-ttu-id="469ea-335">OAEP (Optimal Asymmetric Encryption Padding) を使用するかどうかを指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-335">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span>
          </span>
        </param>
        <param name="fOAEP">
          <span data-ttu-id="469ea-336">OAEP (Optimal Asymmetric Encryption Padding) を使用するかどうかを指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-336">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-337">
            <see langword="&lt;EncryptedData&gt;" /> 要素を復号化するために受信者が使用するキーを暗号化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-337">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="469ea-338">
            <paramref name="keyData" /> パラメーターの暗号化された値を表すバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-338">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-339">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A>受信者が復号化に使用するキーを暗号化する方法、`<EncryptedData>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-339">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="469ea-340">このメソッドは、の値を受け取ります`rsa`RSA PKCS #1 v1.5 アルゴリズムまたは RSA PKCS 1 種類 2 アルゴリズム (OAEP とも呼ばれます) のいずれかを表します。</span><span class="sxs-lookup"><span data-stu-id="469ea-340">This method accepts a value for `rsa` that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP).</span></span>  
  
 <span data-ttu-id="469ea-341">このメソッドが、暗号化キーを自動的に配置していないことに注意してください、`<EncryptedKey>`要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-341">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span>  <span data-ttu-id="469ea-342">手動で作成する必要があります、`<EncryptedKey>`ドキュメント内の要素。</span><span class="sxs-lookup"><span data-stu-id="469ea-342">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-343">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-343">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="469ea-344">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-344">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-345">
            <paramref name="keyData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-345">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="469ea-346">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-346">-or-</span>
          </span>
          <span data-ttu-id="469ea-347">
            <paramref name="rsa" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-347">The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionIV">
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]&#xA;override this.GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]" Usage="encryptedXml.GetDecryptionIV (encryptedData, symAlgUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="469ea-348">取得する初期化ベクター (IV) を格納している <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-348">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the initialization vector (IV) to retrieve.</span>
          </span>
        </param>
        <param name="symmetricAlgorithmUri">
          <span data-ttu-id="469ea-349">
            <c>encryptedData</c> 値に関連付けられている暗号アルゴリズムを記述する URI (Uniform Resource Identifier)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-349">The Uniform Resource Identifier (URI) that describes the cryptographic algorithm associated with the <c>encryptedData</c> value.</span>
          </span>
        </param>
        <param name="symAlgUri">
          <span data-ttu-id="469ea-350">
            <c>encryptedData</c> 値に関連付けられている暗号アルゴリズムを記述する URI (Uniform Resource Identifier)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-350">The Uniform Resource Identifier (URI) that describes the cryptographic algorithm associated with the <c>encryptedData</c> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-351">
            <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクトから復号化初期化ベクター (IV: initialization vector) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-351">Retrieves the decryption initialization vector (IV) from an <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="469ea-352">復号化初期化ベクター (IV) を格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-352">A byte array that contains the decryption initialization vector (IV).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-353">指定された、<xref:System.Security.Cryptography.Xml.EncryptedData>オブジェクト、このメソッドは、復号化初期化ベクター (IV) を取得します。</span><span class="sxs-lookup"><span data-stu-id="469ea-353">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method retrieves the decryption initialization vector (IV).</span></span> <span data-ttu-id="469ea-354">既定の動作の最初のバイトとしての IV の取得、<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>バイト配列。</span><span class="sxs-lookup"><span data-stu-id="469ea-354">The default behavior retrieves the IV as the first bytes of the <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> byte array.</span></span>  
  
 <span data-ttu-id="469ea-355">によってサポートされる Uniform Resource Identifier (URI) の値の一覧については、`symmetricAlgorithmUri`パラメーター、定数フィールドの一覧に関連付けられている参照、<xref:System.Security.Cryptography.Xml.EncryptedXml>クラス。</span><span class="sxs-lookup"><span data-stu-id="469ea-355">For a list of Uniform Resource Identifier (URI) values supported by the `symmetricAlgorithmUri` parameter, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-356">
            <paramref name="encryptedData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-356">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="469ea-357">
            <paramref name="encryptedData" /> パラメーター値の <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> プロパティが null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-357">The value of the <paramref name="encryptedData" /> parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span>
          </span>
          <span data-ttu-id="469ea-358">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-358">-or-</span>
          </span>
          <span data-ttu-id="469ea-359">
            <paramref name="symmetricAlgorithmUrisymAlgUri" /> パラメーターの値が、サポートされているアルゴリズムではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-359">The value of the <paramref name="symmetricAlgorithmUrisymAlgUri" /> parameter is not a supported algorithm.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionKey">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm&#xA;override this.GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="encryptedXml.GetDecryptionKey (encryptedData, symAlgUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="469ea-360">取得する復号化キーを格納している <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-360">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the decryption key to retrieve.</span>
          </span>
        </param>
        <param name="symmetricAlgorithmUri">
          <span data-ttu-id="469ea-361">取得する復号化キーのサイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-361">The size of the decryption key to retrieve.</span>
          </span>
        </param>
        <param name="symAlgUri">
          <span data-ttu-id="469ea-362">取得する復号化キーのサイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-362">The size of the decryption key to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-363">指定した <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクトから復号化キーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-363">Retrieves the decryption key from the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="469ea-364">復号化キーに関連付けられている <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-364">A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> object associated with the decryption key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-365">指定された、<xref:System.Security.Cryptography.Xml.EncryptedData>オブジェクト、このメソッドは、プレーン テキスト データの取得に使用できる暗号化解除キーを検索します。</span><span class="sxs-lookup"><span data-stu-id="469ea-365">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method looks for the decryption key that can be used to retrieve the plain text data.</span></span> <span data-ttu-id="469ea-366">キー名が指定されている場合、メソッドは、対称アルゴリズムまたはキー名のマッピングで定義されているキー名に関連付けられている非対称アルゴリズムを検索します。</span><span class="sxs-lookup"><span data-stu-id="469ea-366">If a key name is specified, the method looks for the symmetric algorithm or asymmetric algorithm that is associated with the key name as defined in the key name mapping.</span></span> <span data-ttu-id="469ea-367">それ以外の場合、取得メソッドの場合、または、<xref:System.Security.Cryptography.Xml.EncryptedKey>オブジェクトを指定すると、メソッドのロード、<xref:System.Security.Cryptography.Xml.EncryptedKey>オブジェクトと呼び出し、<xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="469ea-367">Otherwise, if a retrieval method or an <xref:System.Security.Cryptography.Xml.EncryptedKey> object is specified, the method loads the <xref:System.Security.Cryptography.Xml.EncryptedKey> object and calls the <xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-368">
            <paramref name="encryptedData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-368">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="469ea-369">encryptedData パラメーターの <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> プロパティが null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-369">The encryptedData parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span>
          </span>
          <span data-ttu-id="469ea-370">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-370">-or-</span>
          </span>
          <span data-ttu-id="469ea-371">暗号化されたキーを、指定したパラメーターを使用して取得できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-371">The encrypted key cannot be retrieved using the specified parameters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberSignature Language="F#" Value="abstract member GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement&#xA;override this.GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement" Usage="encryptedXml.GetIdElement (document, idValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="469ea-372">ID 値を持つ要素を格納している <see cref="T:System.Xml.XmlDocument" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-372">An <see cref="T:System.Xml.XmlDocument" /> object that contains an element with an ID value.</span>
          </span>
        </param>
        <param name="idValue">
          <span data-ttu-id="469ea-373">ID 値を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-373">A string that represents the ID value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-374">内部 URI (Uniform Resource Identifier) 参照を解決する方法を確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-374">Determines how to resolve internal Uniform Resource Identifier (URI) references.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="469ea-375">内部 URI (Uniform Resource Identifier) を解決する方法を示す ID を格納する <see cref="T:System.Xml.XmlElement" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-375">An <see cref="T:System.Xml.XmlElement" /> object that contains an ID indicating how internal Uniform Resource Identifiers (URIs) are to be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-376"><xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A>メソッドは、内部の Uniform Resource Identifier (Uri) を解決する方法を決定します。</span><span class="sxs-lookup"><span data-stu-id="469ea-376">The <xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A> method determines how to resolve internal Uniform Resource Identifiers (URIs).</span></span> <span data-ttu-id="469ea-377">指定した値を持つ要素または指定値を持つ ID 属性を持つ要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="469ea-377">It looks for elements with a specified value or for elements with an ID attribute that has a specified value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CipherMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CipherMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As CipherMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CipherMode Mode { System::Security::Cryptography::CipherMode get(); void set(System::Security::Cryptography::CipherMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Security.Cryptography.CipherMode with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-378">XML 暗号化に使用する暗号モードを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-378">Gets or sets the cipher mode used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="469ea-379">
            <see cref="T:System.Security.Cryptography.CipherMode" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-379">One of the <see cref="T:System.Security.Cryptography.CipherMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-380">暗号ブロック チェーン (CBC) モードは、XML 暗号化に既定の暗号モードです。</span><span class="sxs-lookup"><span data-stu-id="469ea-380">Cipher Block Chaining (CBC) mode is the default cipher mode for XML encryption.</span></span> <span data-ttu-id="469ea-381">このプロパティを使用しての他の暗号モードを指定することができます、 <xref:System.Security.Cryptography.CipherMode> Cipher Feedback (CFB) モードなどの列挙。</span><span class="sxs-lookup"><span data-stu-id="469ea-381">You can use this property to specify other cipher modes of the <xref:System.Security.Cryptography.CipherMode> enumeration, such as Cipher Feedback (CFB) mode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Security.Cryptography.PaddingMode with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-382">XML 暗号化に使用するパディング モードを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-382">Gets or sets the padding mode used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="469ea-383">暗号化に使用するパディングの種類を指定する <see cref="T:System.Security.Cryptography.PaddingMode" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-383">One of the <see cref="T:System.Security.Cryptography.PaddingMode" /> values that specifies the type of padding used for encryption.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-384">Iso-10126 余白では、XML 暗号化に既定のパディング モードです。</span><span class="sxs-lookup"><span data-stu-id="469ea-384">ISO-10126 padding is the default padding mode for XML encryption.</span></span> <span data-ttu-id="469ea-385">このプロパティを使用しての他のパディング モードを指定することができます、 <xref:System.Security.Cryptography.PaddingMode> ANSI X9.23 または PKCS #5 などの列挙。</span><span class="sxs-lookup"><span data-stu-id="469ea-385">You can use this property to specify other padding modes of the <xref:System.Security.Cryptography.PaddingMode> enumeration, such as ANSI X9.23 or PKCS#5.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public string Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Recipient" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Recipient { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Recipient : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-386">暗号化されたキー情報の受信者を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-386">Gets or sets the recipient of the encrypted key information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="469ea-387">暗号化されたキー情報の受信者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-387">The recipient of the encrypted key information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-388">アクセスできる、<xref:System.Security.Cryptography.Xml.EncryptedXml>を調べることで、キー名によって参照されるオブジェクト、<xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="469ea-388">You can access the <xref:System.Security.Cryptography.Xml.EncryptedXml> object referenced by a key name by examining the <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> property.</span></span>  
  
 <span data-ttu-id="469ea-389">使用して、<xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A>プロパティを識別するために、<xref:System.Security.Cryptography.Xml.EncryptedXml>要素の現在の受取人を復号化キーを取得する復号化できます。</span><span class="sxs-lookup"><span data-stu-id="469ea-389">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A> property to identify the <xref:System.Security.Cryptography.Xml.EncryptedXml> element that the current recipient can decrypt to retrieve a decryption key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceData">
      <MemberSignature Language="C#" Value="public void ReplaceData (System.Xml.XmlElement inputElement, byte[] decryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReplaceData(class System.Xml.XmlElement inputElement, unsigned int8[] decryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceData (inputElement As XmlElement, decryptedData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceData(System::Xml::XmlElement ^ inputElement, cli::array &lt;System::Byte&gt; ^ decryptedData);" />
      <MemberSignature Language="F#" Value="member this.ReplaceData : System.Xml.XmlElement * byte[] -&gt; unit" Usage="encryptedXml.ReplaceData (inputElement, decryptedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="decryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="469ea-390">置換する <see langword="&lt;EncryptedData&gt;" /> 要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-390">The <see langword="&lt;EncryptedData&gt;" /> element to replace.</span>
          </span>
        </param>
        <param name="decryptedData">
          <span data-ttu-id="469ea-391">
            <c>inputElement</c> を置き換える復号化されたデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-391">The decrypted data to replace <c>inputElement</c> with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-392">
            <see langword="&lt;EncryptedData&gt;" /> 要素を、指定した復号化されたバイト シーケンスで置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-392">Replaces an <see langword="&lt;EncryptedData&gt;" /> element with a specified decrypted sequence of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-393"><xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A>メソッドは、`<EncryptedData>`の値を持つ要素、`decryptedData`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="469ea-393">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A> method replaces an `<EncryptedData>` element with the value of the `decryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-394">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-394">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-395">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-395">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-396">
            <paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-396">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="469ea-397">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-397">-or-</span>
          </span>
          <span data-ttu-id="469ea-398">
            <paramref name="decryptedData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-398">The value of the <paramref name="decryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceElement">
      <MemberSignature Language="C#" Value="public static void ReplaceElement (System.Xml.XmlElement inputElement, System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReplaceElement(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReplaceElement(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, bool content);" />
      <MemberSignature Language="F#" Value="static member ReplaceElement : System.Xml.XmlElement * System.Security.Cryptography.Xml.EncryptedData * bool -&gt; unit" Usage="System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement (inputElement, encryptedData, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" />
        <Parameter Name="content" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="469ea-399">
            <see langword="&lt;EncryptedData&gt;" /> 要素と置き換える要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-399">The element to replace with an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </param>
        <param name="encryptedData">
          <span data-ttu-id="469ea-400">
            <c>inputElement</c> パラメーターを置き換える <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-400">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object to replace the <c>inputElement</c> parameter with.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="469ea-401">要素の内容のみを置き換える場合は <see langword="true" />。要素全体を置き換える場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-401">
              <see langword="true" /> to replace only the contents of the element; <see langword="false" /> to replace the entire element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="469ea-402">指定した要素を指定した <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> オブジェクトで置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-402">Replaces the specified element with the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-403"><xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A>メソッドは、`inputElement`パラメーターで指定された値、`encryptedData`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="469ea-403">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A> method replaces the `inputElement` parameter with the value specified by the `encryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-404">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-404">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-405">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-405">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="469ea-406">
            <paramref name="inputElement" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-406">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="469ea-407">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-407">-or-</span>
          </span>
          <span data-ttu-id="469ea-408">
            <paramref name="encryptedData" /> パラメーターの値が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-408">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver { System::Xml::XmlResolver ^ get(); void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resolver : System.Xml.XmlResolver with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-409">外部 XML 参照を解決するためにドキュメント オブジェクト モデル (DOM) によって使用される <see cref="T:System.Xml.XmlResolver" /> オブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-409">Gets or sets the <see cref="T:System.Xml.XmlResolver" /> object used by the Document Object Model (DOM) to resolve external XML references.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="469ea-410">
            <see cref="T:System.Xml.XmlResolver" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-410">An <see cref="T:System.Xml.XmlResolver" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-411">このプロパティが含まれています、<xref:System.Xml.XmlResolver>エンティティ、ドキュメント型定義 (Dtd) やスキーマなどの外部の XML リソースの解決に使用されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="469ea-411">This property contains an <xref:System.Xml.XmlResolver> object used to resolve external XML resources such as entities, document type definitions (DTDs), or schemas.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDSigSearchDepth">
      <MemberSignature Language="C#" Value="public int XmlDSigSearchDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 XmlDSigSearchDepth" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDSigSearchDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int XmlDSigSearchDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDSigSearchDepth : int with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-412">無限再帰とスタック オーバーフローが発生しないように、XML デジタル署名再帰深度を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-412">Gets or sets the XML digital signature recursion depth to prevent infinite recursion and stack overflow.</span>
          </span>
          <span data-ttu-id="469ea-413">無限再帰とスタック オーバーフローは、デジタル署名の XML に URI が含まれ、それが元の XML をポイントしている場合に発生することがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-413">This might happen if the digital signature XML contains the URI which then points back to the original XML.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="469ea-414">
            <see cref="T:System.Int32" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-414">Returns <see cref="T:System.Int32" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES128KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-415">128 ビット 高度暗号化標準 (AES) キー ラップ アルゴリズム (Rijndael キー ラップ アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-415">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="469ea-416">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-416">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-417">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#kw-aes128"。</span><span class="sxs-lookup"><span data-stu-id="469ea-417">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes128".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES128Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-418">128 ビット 高度暗号化標準 (AES) アルゴリズム (Rijndael アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-418">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="469ea-419">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-419">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-420">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url>フィールドは"http://www.w3.org/2001/04/xmlenc#aes128-cbc"。</span><span class="sxs-lookup"><span data-stu-id="469ea-420">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url> field is "http://www.w3.org/2001/04/xmlenc#aes128-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-421">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-421">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-422">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-422">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES192KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-423">192 ビット 高度暗号化標準 (AES) キー ラップ アルゴリズム (Rijndael キー ラップ アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-423">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="469ea-424">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-424">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-425">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#kw-aes192"。</span><span class="sxs-lookup"><span data-stu-id="469ea-425">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes192".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES192Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-426">192 ビット 高度暗号化標準 (AES) アルゴリズム (Rijndael アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-426">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="469ea-427">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-427">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-428">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url>フィールドは"http://www.w3.org/2001/04/xmlenc#aes192-cbc"。</span><span class="sxs-lookup"><span data-stu-id="469ea-428">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url> field is "http://www.w3.org/2001/04/xmlenc#aes192-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-429">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-429">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-430">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-430">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES256KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-431">256 ビット 高度暗号化標準 (AES) キー ラップ アルゴリズム (Rijndael キー ラップ アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-431">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="469ea-432">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-432">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-433">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#kw-aes256"。</span><span class="sxs-lookup"><span data-stu-id="469ea-433">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes256".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES256Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-434">256 ビット 高度暗号化標準 (AES) アルゴリズム (Rijndael アルゴリズムとも呼ばれます) の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-434">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="469ea-435">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-435">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-436">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url>フィールドは"http://www.w3.org/2001/04/xmlenc#aes256-cbc"。</span><span class="sxs-lookup"><span data-stu-id="469ea-436">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url> field is "http://www.w3.org/2001/04/xmlenc#aes256-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-437">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-437">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-438">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-438">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncDESUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncDESUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-439">DES (Digital Encryption Standard) アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-439">Represents the namespace Uniform Resource Identifier (URI) for the Digital Encryption Standard (DES) algorithm.</span>
          </span>
          <span data-ttu-id="469ea-440">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-440">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-441">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#des-cbc"。</span><span class="sxs-lookup"><span data-stu-id="469ea-441">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl> field is "http://www.w3.org/2001/04/xmlenc#des-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-442">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-442">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-443">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-443">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementContentUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementContentUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementContentUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementContentUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementContentUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncElementContentUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-444">XML 暗号化要素の内容の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-444">Represents the namespace Uniform Resource Identifier (URI) for XML encryption element content.</span>
          </span>
          <span data-ttu-id="469ea-445">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-445">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-446">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#Content"。</span><span class="sxs-lookup"><span data-stu-id="469ea-446">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl> field is "http://www.w3.org/2001/04/xmlenc#Content".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncElementUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-447">XML 暗号化要素の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-447">Represents the namespace Uniform Resource Identifier (URI) for an XML encryption element.</span>
          </span>
          <span data-ttu-id="469ea-448">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-448">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-449">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#Element"。</span><span class="sxs-lookup"><span data-stu-id="469ea-449">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl> field is "http://www.w3.org/2001/04/xmlenc#Element".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-450">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-450">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-451">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-451">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncEncryptedKeyUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncEncryptedKeyUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncEncryptedKeyUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-452">XML 暗号化 <see langword="&lt;EncryptedKey&gt;" /> 要素の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-452">Represents the namespace Uniform Resource Identifier (URI) for the XML encryption <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
          <span data-ttu-id="469ea-453">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-453">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-454">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#EncryptedKey"。</span><span class="sxs-lookup"><span data-stu-id="469ea-454">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl> field is "http://www.w3.org/2001/04/xmlenc#EncryptedKey".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncNamespaceUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncNamespaceUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-455">XML 暗号化の構文および処理の名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-455">Represents the namespace Uniform Resource Identifier (URI) for XML encryption syntax and processing.</span>
          </span>
          <span data-ttu-id="469ea-456">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-456">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-457">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#"。</span><span class="sxs-lookup"><span data-stu-id="469ea-457">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl> field is "http://www.w3.org/2001/04/xmlenc#".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSA15Url">
      <MemberSignature Language="C#" Value="public const string XmlEncRSA15Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSA15Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSA15Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSA15Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncRSA15Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-458">RSA PKCS (Public Key Cryptography Standard) Version 1.5 アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-458">Represents the namespace Uniform Resource Identifier (URI) for the RSA Public Key Cryptography Standard (PKCS) Version 1.5 algorithm.</span>
          </span>
          <span data-ttu-id="469ea-459">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-459">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-460">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>フィールドは"http://www.w3.org/2001/04/xmlenc#rsa-1_5"。</span><span class="sxs-lookup"><span data-stu-id="469ea-460">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> field is "http://www.w3.org/2001/04/xmlenc#rsa-1_5".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-461">次のコード例では、非対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-461">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="469ea-462">この例では、ドキュメントを暗号化する対称セッション キーを作成し、非対称キーを使用して、XML ドキュメントにセッション キーの暗号化バージョンを埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="469ea-462">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSAOAEPUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSAOAEPUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSAOAEPUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncRSAOAEPUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-463">RSA OAEP (Optimal Asymmetric Encryption Padding) 暗号化アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-463">Represents the namespace Uniform Resource Identifier (URI) for the RSA Optimal Asymmetric Encryption Padding (OAEP) encryption algorithm.</span>
          </span>
          <span data-ttu-id="469ea-464">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-464">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-465">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p"。</span><span class="sxs-lookup"><span data-stu-id="469ea-465">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> field is "http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncSHA256Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-466">SHA-256 アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-466">Represents the namespace Uniform Resource Identifier (URI) for the SHA-256 algorithm.</span>
          </span>
          <span data-ttu-id="469ea-467">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-467">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-468">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url>フィールドは"http://www.w3.org/2001/04/xmlenc#sha256"。</span><span class="sxs-lookup"><span data-stu-id="469ea-468">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url> field is "http://www.w3.org/2001/04/xmlenc#sha256".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA512Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncSHA512Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-469">SHA-512 アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-469">Represents the namespace Uniform Resource Identifier (URI) for the SHA-512 algorithm.</span>
          </span>
          <span data-ttu-id="469ea-470">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-470">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-471">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url>フィールドは"http://www.w3.org/2001/04/xmlenc#sha512"。</span><span class="sxs-lookup"><span data-stu-id="469ea-471">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url> field is "http://www.w3.org/2001/04/xmlenc#sha512".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESKeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESKeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncTripleDESKeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-472">Triple DES キー ラップ アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-472">Represents the namespace Uniform Resource Identifier (URI) for the TRIPLEDES key wrap algorithm.</span>
          </span>
          <span data-ttu-id="469ea-473">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-473">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-474">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#kw-tripledes"。</span><span class="sxs-lookup"><span data-stu-id="469ea-474">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-tripledes".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncTripleDESUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="469ea-475">Triple DES アルゴリズムの名前空間 URI (Uniform Resource Identifier) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-475">Represents the namespace Uniform Resource Identifier (URI) for the Triple DES algorithm.</span>
          </span>
          <span data-ttu-id="469ea-476">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="469ea-476">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="469ea-477">値、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl>フィールドは"http://www.w3.org/2001/04/xmlenc#tripledes-cbc"。</span><span class="sxs-lookup"><span data-stu-id="469ea-477">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl> field is "http://www.w3.org/2001/04/xmlenc#tripledes-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="469ea-478">次のコード例では、対称キーを使用して XML ドキュメントを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="469ea-478">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="469ea-479">この例では、暗号化された XML ドキュメント内のキー情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="469ea-479">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>